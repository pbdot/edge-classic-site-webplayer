{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/preact-cli/src/lib/entry.js","webpack:///../node_modules/preact/src/util.js","webpack:///../node_modules/preact/src/create-element.js","webpack:///../node_modules/preact/src/component.js","webpack:///../node_modules/preact/src/diff/children.js","webpack:///../node_modules/preact/src/diff/props.js","webpack:///../node_modules/preact/src/diff/index.js","webpack:///../node_modules/preact/src/render.js","webpack:///../node_modules/preact/src/clone-element.js","webpack:///../node_modules/preact/src/create-context.js","webpack:///../node_modules/preact/src/options.js","webpack:///../node_modules/preact/src/constants.js","webpack:///../node_modules/preact/src/diff/catch-error.js","webpack:///../node_modules/preact/hooks/src/index.js","webpack:///../node_modules/@preact/signals-core/src/index.ts","webpack:///../node_modules/@preact/signals/src/index.ts","webpack:///./components/player/style.css","webpack:///./edge-classic.js","webpack:///./components/player/index.tsx","webpack:///./index.ts","webpack:///./components/app.tsx"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","h","render","hydrate","Preact","interopDefault","default","normalizeURL","url","length","navigator","serviceWorker","register","__webpack_public_path__","require","root","document","getElementById","body","firstElementChild","init","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","innerHTML","CLI_DATA","currentURL","location","pathname","u","v","parentNode","removeChild","y","f","arguments","children","defaultProps","type","props","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","current","_","k","this","context","b","indexOf","g","base","push","w","__r","debounceRendering","e","sort","shift","__P","L","__n","ownerSVGElement","M","x","a","Array","isArray","A","C","$","nextSibling","S","O","P","some","appendChild","insertBefore","I","setProperty","test","T","style","cssText","replace","toLowerCase","slice","addEventListener","z","j","removeEventListener","removeAttribute","setAttribute","event","H","contextType","__E","q","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","diffed","localName","nodeType","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","checked","unmount","componentWillUnmount","B","firstChild","D","E","F","Consumer","Provider","splice","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","resolve","setTimeout","__H","__V","__N","filter","every","clearTimeout","cancelAnimationFrame","requestAnimationFrame","Error","U","useSignal","__$f","__$u","peek","subscribe","valueOf","toString","set","displayName","defineProperties","configurable","__np","_scriptDir","createEdgeModule","currentScript","src","undefined","assert","condition","text","abort","updateMemoryViews","wasmMemory","buffer","Module","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","Uint8Array","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","keepRuntimeAlive","noExitRuntime","runtimeKeepaliveCounter","addRunDependency","runDependencies","removeRunDependency","runDependencyWatcher","clearInterval","dependenciesFulfilled","callback","what","err","ABORT","EXITSTATUS","WebAssembly","RuntimeError","readyPromiseReject","isDataURI","filename","startsWith","dataURIPrefix","getBinary","file","wasmBinaryFile","wasmBinary","readBinary","instantiateArrayBuffer","binaryFile","imports","receiver","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","fetch","credentials","response","catch","getBinaryPromise","binary","instantiate","instance","reason","ExitStatus","status","message","callRuntimeCallbacks","callbacks","dynCall","sig","ptr","args","apply","concat","dynCallLegacy","setValue","endsWith","tempI64","tempDouble","Math","abs","floor","ceil","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","set_adjusted_ptr","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","randomFill","view","crypto","getRandomValues","initRandomFill","lengthBytesUTF8","str","len","charCodeAt","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","endIdx","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","mmapAlloc","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endPtr","UTF8Decoder","decode","subarray","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","convertI32PairToI53Checked","lo","hi","NaN","stringToUTF8","outPtr","isLeapYear","year","ydayFromDate","date","getFullYear","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","getMonth","getDate","stringToNewUTF8","size","ret","_malloc","_emscripten_set_main_loop_timing","Browser","mainLoop","timingMode","timingValue","func","running","scheduler","timeUntilNextTick","max","tickStartTime","_emscripten_get_now","runner","method","setImmediate","setImmediates","emscriptenMainLoopMessageId","target","stopPropagation","postMessage","setMainLoop","browserIterationFunc","fps","simulateInfiniteLoop","arg","noSetTiming","checkIsRunning","thisMainLoopId","currentlyRunningMainloop","queue","start","Date","now","blocker","remainingBlockers","remaining","next","counted","out","updateStatus","currentFrameNumber","GL","newRenderingFrameStarted","runIter","SDL","audio","queueNewAudioData","handleException","quit_","exitJS","code","callUserCallback","_exit","maybeExit","safeSetTimeout","timeout","warnOnce","shown","readEmAsmArgs","sigPtr","buf","readEmAsmArgsArray","withStackSave","stack","stackSave","stackRestore","setLetterbox","element","topBottom","leftRight","paddingLeft","paddingRight","paddingTop","paddingBottom","findEventTarget","cString","specialHTMLTargets","findCanvasEventTarget","stringToUTF8OnStack","stackAlloc","getCanvasElementSize","width","height","canvas","_emscripten_get_canvas_element_size","id","_emscripten_set_canvas_element_size","setCanvasElementSize","controlTransferredOffscreen","jstoi_q","parseInt","softFullscreenResizeWebGLRenderTarget","topMargin","dpr","devicePixelRatio","inHiDPIFullscreenMode","currentFullscreenStrategy","canvasResolutionScaleMode","inAspectRatioFixedFullscreenMode","scaleMode","inPixelPerfectFullscreenMode","inCenteredWithoutScalingFullscreenMode","screenWidth","round","innerWidth","screenHeight","innerHeight","canvasSize","GLctxObject","GLctx","viewport","canvasResizedCallback","dynCall_iiii","canvasResizedCallbackUserData","getBoundingClientRect","JSEvents_resizeCanvasForFullscreen","strategy","restoreOldStyle","fullscreenElement","webkitFullscreenElement","oldWidth","oldHeight","oldCssWidth","oldCssHeight","backgroundColor","oldBackgroundColor","oldDocumentBackgroundColor","oldPaddingLeft","oldPaddingRight","oldPaddingTop","oldPaddingBottom","marginLeft","oldMarginLeft","marginRight","oldMarginRight","marginTop","oldMarginTop","marginBottom","oldMarginBottom","margin","oldDocumentBodyMargin","documentElement","overflow","oldDocumentOverflow","scroll","oldDocumentScroll","imageRendering","oldImageRendering","registerRestoreOldStyle","cssWidth","softFullscreen","screen","cssHeight","rect","windowedCssWidth","windowedCssHeight","windowedRttWidth","windowedRttHeight","desiredCssHeight","desiredCssWidth","filteringMode","dpiScale","newWidth","newHeight","JSEvents_requestFullscreen","requestFullscreen","webkitRequestFullscreen","JSEvents","fullscreenEnabled","Element","ALLOW_KEYBOARD_INPUT","requestPointerLock","fillGamepadEventData","eventStruct","timestamp","axes","buttons","pressed","connected","index","mapping","_glBindVertexArray","vao","bindVertexArray","vaos","ibo","getParameter","currentElementArrayBufferBinding","convertI32PairToI53","_glDeleteVertexArrays","deleteVertexArray","_glDrawArraysInstanced","first","count","primcount","drawArraysInstanced","_glDrawBuffers","bufs","bufArray","tempFixedLengthArray","drawBuffers","_glDrawElements","indices","calcBufLength","getTempIndexBuffer","bindBuffer","bufferSubData","preDrawHandleClientVertexAttribBindings","drawElements","postDrawHandleClientVertexAttribBindings","_glDrawElementsInstanced","drawElementsInstanced","__glGenObject","buffers","createFunction","objectTable","getNewId","recordError","_glGenVertexArrays","arrays","__glGetActiveAttribOrUniform","funcName","program","bufSize","info","programs","numBytesWrittenExclNull","writeI53ToI64","num","emscriptenWebGLGet","name_","formats","currentContext","version","getSupportedExtensions","result","_glGetFloatv","emscriptenWebGLGetIndexed","getIndexedParameter","WebGLBuffer","_glGetQueryObjecti64vEXT","pname","params","param","query","queries","disjointTimerQueryExt","getQueryParameter","_glGetQueryObjectivEXT","webglGetLeftBracePos","lastIndexOf","webglPrepareUniformLocationsBeforeFirstUse","uniformLocsById","uniformSizeAndIdsByName","uniformArrayNamesById","getProgramParameter","getActiveUniform","nm","sz","lb","arrayName","uniformIdCounter","webglGetUniformLocation","currentProgram","webglLoc","getUniformLocation","emscriptenWebGLGetUniform","getUniform","emscriptenWebGLGetVertexAttrib","clientBuffers","enabled","getVertexAttrib","fround","_glGetVertexAttribIiv","_glIsVertexArray","array","isVertexArray","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","clz32","BYTES_PER_ELEMENT","emscriptenWebGLGetTexPixelData","format","pixels","byteSize","sizePerPixel","colorChannelsInGlTextureFormat","bytes","alignment","alignedRowSize","roundedToNextMultipleOf","computeUnpackAlignedImageSize","unpackAlignment","_glVertexAttribDivisor","divisor","vertexAttribDivisor","emscripten_realloc_buffer","grow","byteLength","registerFocusEventCallback","userData","useCapture","callbackfunc","eventTypeId","eventTypeString","focusEvent","eventHandler","handlerFunc","nodeName","getNodeNameForTarget","preventDefault","registerOrRemoveHandler","registerFullscreenChangeEventCallback","fullscreenChangeEvent","mozFullScreenElement","msFullscreenElement","isFullscreen","reportedElement","previousFullscreenElement","clientWidth","clientHeight","fillFullscreenChangeEventData","registerGamepadEventCallback","gamepadEvent","allowsDeferredCalls","registerKeyEventCallback","keyEvent","keyEventData","timeStamp","ctrlKey","shiftKey","altKey","metaKey","repeat","charCode","keyCode","which","char","locale","fillMouseEventData","screenX","screenY","clientX","clientY","button","left","top","registerMouseEventCallback","mouseEvent","registerPointerlockChangeEventCallback","pointerlockChangeEvent","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","msPointerLockElement","fillPointerlockChangeEventData","registerTouchEventCallback","touchEvent","touches","et","isChanged","onTarget","identifier","changedTouches","targetTouches","targetRect","numTouches","pageX","pageY","registerVisibilityChangeEventCallback","visibilityChangeEvent","visibilityState","hidden","_emscripten_sleep","ms","Asyncify","handleSleep","wakeUp","getEnvStrings","strings","env","languages","thisProgram","ENV","_strftime","maxsize","tm","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","getTime","leap","currentMonth","daysInCurrentMonth","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","setDate","setMonth","setFullYear","addDays","tm_year","tm_yday","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_wday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","EXPANSION_RULES_2","substring","twelveHour","sum","arraySum","val","jan1","dec31","off","ahead","includes","runAndAbortIfError","run","arguments_","doRun","calledRun","FS","initialized","ignorePermissions","TTY","__ATINIT__","__ATMAIN__","readyPromiseResolve","shouldRunNow","entryFunction","_main","unshift","argc","argv","argv_ptr","callMain","cb","__ATPOSTRUN__","postRun","__ATPRERUN__","preRun","reject","expectedDataFileDownloads","metadata","fetchRemotePackage","packageName","packageSize","xhr","XMLHttpRequest","open","responseType","onprogress","total","loaded","addedTotal","dataFileDownloads","download","onerror","onload","statusText","responseURL","send","runWithFS","check","msg","processPackageData","arrayBuffer","ArrayBuffer","byteArray","compressedData","loadPackage","preloadFallback","error","console","REMOTE_PACKAGE_NAME","REMOTE_PACKAGE_SIZE","indexedDB","PACKAGE_UUID","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","self","IDB_RO","IDB_RW","DB_NAME","DB_VERSION","METADATA_STORE_NAME","PACKAGE_STORE_NAME","CHUNK_SIZE","preloadResults","errback","openRequest","onupgradeneeded","db","objectStoreNames","contains","deleteObjectStore","createObjectStore","onsuccess","openDatabase","getRequest","transaction","objectStore","checkCachedPackage","PACKAGE_PATH","PACKAGE_NAME","useCached","fromCache","packages","chunksDone","totalSize","chunkCount","chunks","chunkId","tempTyped","byteOffset","fetchCachedPackage","packageData","packageMeta","chunkSliceStart","nextChunkSliceStart","finishedChunks","putPackageRequest","put","putMetadataRequest","uuid","cacheRemotePackage","process","encodeURIComponent","REMOTE_PACKAGE_BASE","read_","readAsync","setWindowTitle","moduleOverrides","_extends","toThrow","scriptDirectory","href","substr","responseText","title","log","warn","path","__ATEXIT__","ASM_CONSTS","edgePostInit","$0","$1","homeIndex","homeDir","analyzePath","exists","mkdirTree","mount","IDBFS","syncfs","_I_WebMain","onFullscreen","edgePreSyncFS","edgePostSyncFS","AudioContext","webkitAudioContext","mediaDevices","getUserMedia","webkitGetUserMedia","ctx","elements","SDL2","capture","audioContext","listenOnce","resume","sampleRate","$2","$3","have_microphone","stream","silenceTimer","mediaStreamNode","createMediaStreamSource","scriptProcessorNode","createScriptProcessor","onaudioprocess","audioProcessingEvent","outputBuffer","getChannelData","fill","currentCaptureBuffer","inputBuffer","connect","destination","no_microphone","silenceBuffer","createBuffer","video","currentOutputBuffer","numChannels","numberOfChannels","channelData","tracks","getAudioTracks","removeTrack","disconnect","close","ctxCanvas","imageCtx","image","createImageData","dst","CanvasPixelArray","data32Data","data32","data8","putImageData","$4","hot_x","hot_y","getContext","toDataURL","urlBuf","alert","PATH","isAbs","charAt","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","normalize","isAbsolute","trailingSlash","split","join","dirname","dir","basename","lastSlash","paths","join2","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","end","fromParts","toParts","min","samePartsLength","outputParts","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","tty","node","rdev","ErrnoError","seekable","fsync","read","offset","get_char","bytesRead","write","put_char","default_tty_ops","prompt","readline","default_tty1_ops","MEMFS","ops_table","createNode","parent","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","prot","flags","allocated","dbs","DB_STORE_NAME","populate","getLocalSet","local","getRemoteSet","remote","reconcile","quit","values","getDB","req","fileStore","indexNames","createIndex","unique","isRealDir","toAbsolute","mountpoint","map","stat","pop","openKeyCursor","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","removeRemoteEntry","delete","done","errored","keys","e2","remove","oncomplete","reverse","LZ4","DIR_MODE","FILE_MODE","codec","MiniLZ4","sIdx","eIdx","token","literals_length","match_length","pos","maxInputSize","minMatch","hashShift","mfLimit","skipStrength","mlBits","mlMask","runMask","hasher","hashTable","empty","compressBound","isize","compress","dpos","dlen","anchor","findMatchAttempts","srcLength","sequenceLowBits","sequenceHighBits","hash","imul","ln","compressBlock","compressPackage","verify","temp","compressedChunks","successes","chunk","bound","compressed","compressedSize","back","uncompress","pack","preloadPlugin","files","createPath","handled","fullname","plugin","finish","readFile","written","currChunk","desired","chunkIndex","compressedStart","found","originalSize","startInChunk","endInChunk","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","opts","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","hashName","parentid","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","shared","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","completed","pseudo","mountRoot","mkdir","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","dontFollow","lstat","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","mmapFlags","munmap","ioctl","cmd","encoding","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","staticInit","getMode","canRead","canWrite","findObject","dontResolveLastLink","parentExists","parentPath","parentObject","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","writeChunks","chunkOffset","chunkSize","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","chunkNum","doXHR","setRequestHeader","overrideMimeType","_length","_chunkSize","fn","createPreloadedFile","dontCreateFile","preFinish","processData","handledByPreloadPlugin","noRunDep","dep","asyncLoad","TextDecoder","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","doMsync","addr","varargs","getStr","nowIsMonotonic","performance","pause","expected","expectedBlockers","pointerLock","moduleContextCreatedCallbacks","workers","pointerLockChange","initted","Blob","hasBlobConstructor","BlobBuilder","MozBlobBuilder","WebKitBlobBuilder","URLObject","URL","webkitURL","noImageDecoding","imagePlugin","getMimetype","bb","append","getBlob","createObjectURL","img","Image","complete","drawImage","preloadedImages","revokeObjectURL","audioPlugin","noAudioDecoding","preloadedAudios","fail","Audio","BASE","leftchar","leftbits","curr","PAD","encode64","exitPointerLock","ev","createContext","useWebGL","setInModule","webGLContextAttributes","contextHandle","contextAttributes","antialias","alpha","majorVersion","WebGL2RenderingContext","attribute","makeContextCurrent","destroyContext","fullscreenHandlersInstalled","lockPointer","resizeCanvas","fullscreenChange","canvasContainer","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","setWindowedCanvasSize","nextRAF","fakeRequestAnimationFrame","delay","RAF","safeRequestAnimationFrame","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","deltaY","deltaMode","mouseX","mouseY","mouseMovementX","mouseMovementY","lastTouches","calculateMouseEvent","cw","scrollX","pageXOffset","scrollY","pageYOffset","touch","adjustedX","adjustedY","coords","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","wNative","hNative","widthNative","heightNative","factor","removeProperty","EGL","errorCode","defaultDisplayInitialized","currentReadSurface","currentDrawSurface","depth","stencil","stringCache","setErrorCode","chooseConfig","display","attribList","config","config_size","numConfigs","lowLatency","counter","framebuffers","renderbuffers","textures","shaders","contexts","offscreenCanvases","samplers","transformFeedbacks","syncs","byteSizeByTypeRoot","byteSizeByType","stringiCache","lastError","table","MAX_TEMP_BUFFER_SIZE","numTempVertexBuffersPerSize","log2ceilLookup","generateTempBuffers","quads","largestIndex","tempVertexBufferCounters1","tempVertexBufferCounters2","tempVertexBuffers1","tempVertexBuffers2","tempIndexBuffers","ringbufferLength","ringbuffer1","ringbuffer2","tempQuadIndexBuffer","numIndexes","quadIndexes","bufferData","getTempVertexBuffer","sizeBytes","ringbuffer","nextFreeBufferIndex","vbo","prevVBO","prevIBO","vb","getSource","shader","string","source","stride","usedTempBuffers","resetBufferBinding","maxVertexAttribs","clientside","vertexAttribPointerAdaptor","normalized","currentArrayBufferBinding","getContextSafariWebGL2Fixed","fixedGetContext","ver","attrs","gl","WebGLRenderingContext","registerContext","handle","enableExtensionsByDefault","initExtensions","deleteContext","removeAllHandlersOnTarget","initExtensionsDone","ext","getExtension","webgl_enable_ANGLE_instanced_arrays","webgl_enable_OES_vertex_array_object","webgl_enable_WEBGL_draw_buffers","dibvbi","mdibvbi","webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance","multiDrawWebgl","webgl_enable_WEBGL_multi_draw","_eglWaitGL","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","runDeferredCalls","eventListenerFunc","jsEventHandler","webkitFullscreenEnabled","restoreOldWindowedStyle","_emscripten_glActiveTexture","x0","activeTexture","_emscripten_glAttachShader","attachShader","_emscripten_glBeginQuery","beginQuery","_emscripten_glBeginQueryEXT","_emscripten_glBeginTransformFeedback","beginTransformFeedback","_emscripten_glBindAttribLocation","bindAttribLocation","_emscripten_glBindBuffer","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","_emscripten_glBindBufferBase","bindBufferBase","_emscripten_glBindBufferRange","ptrsize","bindBufferRange","_emscripten_glBindFramebuffer","framebuffer","bindFramebuffer","_emscripten_glBindRenderbuffer","renderbuffer","bindRenderbuffer","_emscripten_glBindSampler","unit","sampler","bindSampler","_emscripten_glBindTexture","texture","bindTexture","_emscripten_glBindTransformFeedback","bindTransformFeedback","_emscripten_glBindVertexArray","_glBindVertexArrayOES","_emscripten_glBindVertexArrayOES","_emscripten_glBlendColor","x1","x2","x3","blendColor","_emscripten_glBlendEquation","blendEquation","_emscripten_glBlendEquationSeparate","blendEquationSeparate","_emscripten_glBlendFunc","blendFunc","_emscripten_glBlendFuncSeparate","blendFuncSeparate","_emscripten_glBlitFramebuffer","x4","x5","x6","x7","x8","x9","blitFramebuffer","_emscripten_glBufferData","usage","_emscripten_glBufferSubData","_emscripten_glCheckFramebufferStatus","checkFramebufferStatus","_emscripten_glClear","clear","_emscripten_glClearBufferfi","clearBufferfi","_emscripten_glClearBufferfv","drawbuffer","clearBufferfv","_emscripten_glClearBufferiv","clearBufferiv","_emscripten_glClearBufferuiv","clearBufferuiv","_emscripten_glClearColor","clearColor","_emscripten_glClearDepthf","clearDepth","_emscripten_glClearStencil","clearStencil","_emscripten_glClientWaitSync","sync","timeout_low","timeout_high","clientWaitSync","_emscripten_glColorMask","red","green","blue","colorMask","_emscripten_glCompileShader","compileShader","_emscripten_glCompressedTexImage2D","level","internalFormat","border","imageSize","compressedTexImage2D","_emscripten_glCompressedTexImage3D","compressedTexImage3D","_emscripten_glCompressedTexSubImage2D","xoffset","yoffset","compressedTexSubImage2D","_emscripten_glCompressedTexSubImage3D","zoffset","compressedTexSubImage3D","_emscripten_glCopyBufferSubData","copyBufferSubData","_emscripten_glCopyTexImage2D","copyTexImage2D","_emscripten_glCopyTexSubImage2D","copyTexSubImage2D","_emscripten_glCopyTexSubImage3D","copyTexSubImage3D","_emscripten_glCreateProgram","createProgram","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","_emscripten_glCreateShader","shaderType","createShader","_emscripten_glCullFace","cullFace","_emscripten_glDeleteBuffers","deleteBuffer","_emscripten_glDeleteFramebuffers","deleteFramebuffer","_emscripten_glDeleteProgram","deleteProgram","_emscripten_glDeleteQueries","ids","deleteQuery","_emscripten_glDeleteQueriesEXT","_emscripten_glDeleteRenderbuffers","deleteRenderbuffer","_emscripten_glDeleteSamplers","deleteSampler","_emscripten_glDeleteShader","deleteShader","_emscripten_glDeleteSync","deleteSync","_emscripten_glDeleteTextures","deleteTexture","_emscripten_glDeleteTransformFeedbacks","transformFeedback","deleteTransformFeedback","_emscripten_glDeleteVertexArrays","_glDeleteVertexArraysOES","_emscripten_glDeleteVertexArraysOES","_emscripten_glDepthFunc","depthFunc","_emscripten_glDepthMask","depthMask","_emscripten_glDepthRangef","depthRange","_emscripten_glDetachShader","detachShader","_emscripten_glDisable","disable","_emscripten_glDisableVertexAttribArray","disableVertexAttribArray","_emscripten_glDrawArrays","drawArrays","_emscripten_glDrawArraysInstanced","_glDrawArraysInstancedANGLE","_emscripten_glDrawArraysInstancedANGLE","_glDrawArraysInstancedARB","_emscripten_glDrawArraysInstancedARB","_glDrawArraysInstancedEXT","_emscripten_glDrawArraysInstancedEXT","_glDrawArraysInstancedNV","_emscripten_glDrawArraysInstancedNV","_emscripten_glDrawBuffers","_glDrawBuffersEXT","_emscripten_glDrawBuffersEXT","_glDrawBuffersWEBGL","_emscripten_glDrawBuffersWEBGL","_emscripten_glDrawElements","_emscripten_glDrawElementsInstanced","_glDrawElementsInstancedANGLE","_emscripten_glDrawElementsInstancedANGLE","_glDrawElementsInstancedARB","_emscripten_glDrawElementsInstancedARB","_glDrawElementsInstancedEXT","_emscripten_glDrawElementsInstancedEXT","_glDrawElementsInstancedNV","_emscripten_glDrawElementsInstancedNV","_emscripten_glDrawRangeElements","_emscripten_glEnable","enable","_emscripten_glEnableVertexAttribArray","enableVertexAttribArray","_emscripten_glEndQuery","endQuery","_emscripten_glEndQueryEXT","_emscripten_glEndTransformFeedback","endTransformFeedback","_emscripten_glFenceSync","fenceSync","_emscripten_glFinish","_emscripten_glFlush","flush","_emscripten_glFramebufferRenderbuffer","attachment","renderbuffertarget","framebufferRenderbuffer","_emscripten_glFramebufferTexture2D","textarget","framebufferTexture2D","_emscripten_glFramebufferTextureLayer","layer","framebufferTextureLayer","_emscripten_glFrontFace","frontFace","_emscripten_glGenBuffers","_emscripten_glGenFramebuffers","_emscripten_glGenQueries","_emscripten_glGenQueriesEXT","_emscripten_glGenRenderbuffers","_emscripten_glGenSamplers","_emscripten_glGenTextures","_emscripten_glGenTransformFeedbacks","_emscripten_glGenVertexArrays","_emscripten_glGenVertexArraysOES","_emscripten_glGenerateMipmap","generateMipmap","_emscripten_glGetActiveAttrib","_emscripten_glGetActiveUniform","_emscripten_glGetActiveUniformBlockName","uniformBlockIndex","uniformBlockName","getActiveUniformBlockName","_emscripten_glGetActiveUniformBlockiv","getActiveUniformBlockParameter","_emscripten_glGetActiveUniformsiv","uniformCount","uniformIndices","getActiveUniforms","_emscripten_glGetAttachedShaders","maxCount","getAttachedShaders","_emscripten_glGetAttribLocation","getAttribLocation","_emscripten_glGetBooleanv","_emscripten_glGetBufferParameteri64v","getBufferParameter","_emscripten_glGetBufferParameteriv","_emscripten_glGetError","getError","_emscripten_glGetFloatv","_emscripten_glGetFragDataLocation","getFragDataLocation","_emscripten_glGetFramebufferAttachmentParameteriv","getFramebufferAttachmentParameter","WebGLRenderbuffer","WebGLTexture","_emscripten_glGetInteger64i_v","_emscripten_glGetInteger64v","_emscripten_glGetIntegeri_v","_emscripten_glGetIntegerv","_emscripten_glGetInternalformativ","internalformat","getInternalformatParameter","_emscripten_glGetProgramBinary","_emscripten_glGetProgramInfoLog","maxLength","infoLog","getProgramInfoLog","_emscripten_glGetProgramiv","getActiveAttrib","_emscripten_glGetQueryObjecti64vEXT","_emscripten_glGetQueryObjectivEXT","_emscripten_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectuiv","_emscripten_glGetQueryObjectuivEXT","_emscripten_glGetQueryiv","getQuery","_emscripten_glGetQueryivEXT","_emscripten_glGetRenderbufferParameteriv","getRenderbufferParameter","_emscripten_glGetSamplerParameterfv","getSamplerParameter","_emscripten_glGetSamplerParameteriv","_emscripten_glGetShaderInfoLog","getShaderInfoLog","_emscripten_glGetShaderPrecisionFormat","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","_emscripten_glGetShaderSource","getShaderSource","_emscripten_glGetShaderiv","getShaderParameter","_emscripten_glGetString","exts","glVersion","glslVersion","ver_num","match","_emscripten_glGetStringi","_emscripten_glGetSynciv","getSyncParameter","_emscripten_glGetTexParameterfv","getTexParameter","_emscripten_glGetTexParameteriv","_emscripten_glGetTransformFeedbackVarying","getTransformFeedbackVarying","_emscripten_glGetUniformBlockIndex","getUniformBlockIndex","_emscripten_glGetUniformIndices","uniformNames","names","getUniformIndices","_emscripten_glGetUniformLocation","arrayIndex","uniformBaseName","leftBrace","sizeAndId","_emscripten_glGetUniformfv","_emscripten_glGetUniformiv","_emscripten_glGetUniformuiv","_emscripten_glGetVertexAttribIiv","_emscripten_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribPointerv","pointer","getVertexAttribOffset","_emscripten_glGetVertexAttribfv","_emscripten_glGetVertexAttribiv","_emscripten_glHint","hint","_emscripten_glInvalidateFramebuffer","numAttachments","attachments","list","invalidateFramebuffer","_emscripten_glInvalidateSubFramebuffer","invalidateSubFramebuffer","_emscripten_glIsBuffer","isBuffer","_emscripten_glIsEnabled","isEnabled","_emscripten_glIsFramebuffer","fb","isFramebuffer","_emscripten_glIsProgram","isProgram","_emscripten_glIsQuery","isQuery","_emscripten_glIsQueryEXT","_emscripten_glIsRenderbuffer","rb","isRenderbuffer","_emscripten_glIsSampler","isSampler","_emscripten_glIsShader","isShader","_emscripten_glIsSync","isSync","_emscripten_glIsTexture","isTexture","_emscripten_glIsTransformFeedback","isTransformFeedback","_emscripten_glIsVertexArray","_emscripten_glIsVertexArrayOES","_emscripten_glLineWidth","lineWidth","_emscripten_glLinkProgram","linkProgram","_emscripten_glPauseTransformFeedback","pauseTransformFeedback","_emscripten_glPixelStorei","pixelStorei","_emscripten_glPolygonOffset","polygonOffset","_emscripten_glProgramBinary","_emscripten_glProgramParameteri","_emscripten_glQueryCounterEXT","_emscripten_glReadBuffer","readBuffer","_emscripten_glReadPixels","readPixels","pixelData","_emscripten_glReleaseShaderCompiler","_emscripten_glRenderbufferStorage","renderbufferStorage","_emscripten_glRenderbufferStorageMultisample","renderbufferStorageMultisample","_emscripten_glResumeTransformFeedback","resumeTransformFeedback","_emscripten_glSampleCoverage","invert","sampleCoverage","_emscripten_glSamplerParameterf","samplerParameterf","_emscripten_glSamplerParameterfv","_emscripten_glSamplerParameteri","samplerParameteri","_emscripten_glSamplerParameteriv","_emscripten_glScissor","scissor","_emscripten_glShaderBinary","_emscripten_glShaderSource","shaderSource","_emscripten_glStencilFunc","stencilFunc","_emscripten_glStencilFuncSeparate","stencilFuncSeparate","_emscripten_glStencilMask","stencilMask","_emscripten_glStencilMaskSeparate","stencilMaskSeparate","_emscripten_glStencilOp","stencilOp","_emscripten_glStencilOpSeparate","stencilOpSeparate","_emscripten_glTexImage2D","texImage2D","_emscripten_glTexImage3D","texImage3D","_emscripten_glTexParameterf","texParameterf","_emscripten_glTexParameterfv","_emscripten_glTexParameteri","texParameteri","_emscripten_glTexParameteriv","_emscripten_glTexStorage2D","texStorage2D","_emscripten_glTexStorage3D","texStorage3D","_emscripten_glTexSubImage2D","texSubImage2D","_emscripten_glTexSubImage3D","texSubImage3D","_emscripten_glTransformFeedbackVaryings","varyings","bufferMode","vars","transformFeedbackVaryings","_emscripten_glUniform1f","v0","uniform1f","miniTempWebGLFloatBuffers","_emscripten_glUniform1fv","uniform1fv","_emscripten_glUniform1i","uniform1i","miniTempWebGLIntBuffers","_emscripten_glUniform1iv","uniform1iv","_emscripten_glUniform1ui","uniform1ui","_emscripten_glUniform1uiv","uniform1uiv","_emscripten_glUniform2f","v1","uniform2f","_emscripten_glUniform2fv","uniform2fv","_emscripten_glUniform2i","uniform2i","_emscripten_glUniform2iv","uniform2iv","_emscripten_glUniform2ui","uniform2ui","_emscripten_glUniform2uiv","uniform2uiv","_emscripten_glUniform3f","v2","uniform3f","_emscripten_glUniform3fv","uniform3fv","_emscripten_glUniform3i","uniform3i","_emscripten_glUniform3iv","uniform3iv","_emscripten_glUniform3ui","uniform3ui","_emscripten_glUniform3uiv","uniform3uiv","_emscripten_glUniform4f","v3","uniform4f","_emscripten_glUniform4fv","uniform4fv","_emscripten_glUniform4i","uniform4i","_emscripten_glUniform4iv","uniform4iv","_emscripten_glUniform4ui","uniform4ui","_emscripten_glUniform4uiv","uniform4uiv","_emscripten_glUniformBlockBinding","uniformBlockBinding","_emscripten_glUniformMatrix2fv","transpose","uniformMatrix2fv","_emscripten_glUniformMatrix2x3fv","uniformMatrix2x3fv","_emscripten_glUniformMatrix2x4fv","uniformMatrix2x4fv","_emscripten_glUniformMatrix3fv","uniformMatrix3fv","_emscripten_glUniformMatrix3x2fv","uniformMatrix3x2fv","_emscripten_glUniformMatrix3x4fv","uniformMatrix3x4fv","_emscripten_glUniformMatrix4fv","uniformMatrix4fv","_emscripten_glUniformMatrix4x2fv","uniformMatrix4x2fv","_emscripten_glUniformMatrix4x3fv","uniformMatrix4x3fv","_emscripten_glUseProgram","useProgram","_emscripten_glValidateProgram","validateProgram","_emscripten_glVertexAttrib1f","vertexAttrib1f","_emscripten_glVertexAttrib1fv","_emscripten_glVertexAttrib2f","vertexAttrib2f","_emscripten_glVertexAttrib2fv","_emscripten_glVertexAttrib3f","vertexAttrib3f","_emscripten_glVertexAttrib3fv","_emscripten_glVertexAttrib4f","vertexAttrib4f","_emscripten_glVertexAttrib4fv","_emscripten_glVertexAttribDivisor","_emscripten_glVertexAttribDivisorANGLE","_emscripten_glVertexAttribDivisorARB","_emscripten_glVertexAttribDivisorEXT","_emscripten_glVertexAttribDivisorNV","_emscripten_glVertexAttribI4i","vertexAttribI4i","_emscripten_glVertexAttribI4iv","_emscripten_glVertexAttribI4ui","vertexAttribI4ui","_emscripten_glVertexAttribI4uiv","_emscripten_glVertexAttribIPointer","vertexAttribIPointer","_emscripten_glVertexAttribPointer","vertexAttribPointer","_emscripten_glViewport","_emscripten_glWaitSync","waitSync","isAsync","instrumentWasmImports","ASYNCIFY_IMPORTS","original","instrumentWasmExports","exportCallStack","maybeStopUnwind","State","Normal","Unwinding","Rewinding","Disabled","StackSize","currData","handleSleepReturnValue","callStackNameToId","callStackIdToName","callStackId","asyncPromiseHandlers","sleepCallbacks","getCallStackId","_asyncify_stop_unwind","Fibers","trampoline","whenDone","allocateData","setDataHeader","setDataRewindFunc","stackSize","rewindId","getDataRewindFunc","doRewind","startAsync","reachedCallback","reachedAfterCallback","_asyncify_start_rewind","asyncWasmReturnValue","isError","_asyncify_start_unwind","_asyncify_stop_rewind","_free","handleAsync","readMode","writeMode","miniTempWebGLFloatBuffersStorage","miniTempWebGLIntBuffersStorage","atob","wasmImports","___errno_location","length_low","length_high","isNaN","cwdLengthInBytes","dirp","struct_size","child","op","argp","nofollow","time","tmPtr","getSeconds","getMinutes","getHours","yday","getTimezoneOffset","summerOffset","winterOffset","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","timezone","daylight","tzname","extractZone","toTimeString","currentYear","winter","summer","stdTimezoneOffset","winterName","summerName","winterNamePtr","summerNamePtr","api","attrib_list","configs","hmm","contextAttribs","glesContextVersion","minorVersion","surface","draw","isContextLost","interval","argbuf","runEmAsmFunction","runMainThreadEmAsm","fullscreenStrategy","hiddenElements","onlyVisibleElement","displayState","hideEverythingExceptGivenElement","restoreHiddenElements","webkitExitFullscreen","gamepadState","lastGamepadState","dest","copyWithin","deferUntilInEventHandler","doRequestFullscreen","requestedSize","oldSize","maxHeapSize","alignUp","multiple","cutDown","overGrownHeapSize","getGamepads","webkitGetGamepads","targetThread","onbeforeunload","confirmationMessage","returnValue","registerBeforeUnloadEventCallback","dynCall_v","mozRequestPointerLock","webkitRequestPointerLock","msRequestPointerLock","uiEvent","outerWidth","outerHeight","registerUiEventCallback","onwheel","wheelEvent","registerWheelEventCallback","__environ","environ_buf","stringToAscii","penviron_count","penviron_buf_size","pbuf","rightsBase","rightsInheriting","iov","iovcnt","pnum","doReadv","offset_low","offset_high","newOffset","doWritev","receiveInstance","instantiateStreaming","createWasm","runCaller","ready","defaultIWad","deathmatchIWad","indexDBName","WadHandler","_defineProperty","signal","trace","setWad","wadName","isIWAD","wadState","async","database","_database","upload","reader","FileReader","readAsArrayBuffer","iwad","trans","_database2","wad","_database3","dbrequest","singleton","projects","WadChooser","pelements","flex","fontSize","whiteSpace","fontWeight","flexGrow","maxWidth","padding","flexDirection","justifyContent","alignItems","onClick","click","onChange","uploadWad","flexShrink","EdgeClassic","canvasRef","useRef","canvasContainerRef","useState","loading","useEffect","syncCanvasSize","offsetWidth","offsetHeight","canvasSync","_I_WebSyncScreenSize","doSyncTimeout","find","_I_WebOpenGameMenu","_objectSpread","preEdgeSyncFS","postEdgeSyncFS","preInit","print","printErr","setStatus","monitorRunDependencies","globalThis","visibility","_canvasRef$current","class","Player","App"],"mappings":"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Y,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,4CAA6C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAA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S,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAy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,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,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IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,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AAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,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","file":"bundle.daa93.esm.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Pq/i\");\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {import('./internal').Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function(p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","function cycleDetected(): never {\n\tthrow new Error(\"Cycle detected\");\n}\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\nfunction batch<T>(callback: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn callback();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\tpeek(): T;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\tconst signal = this;\n\treturn effect(function (this: Effect) {\n\t\tconst value = signal.value;\n\t\tconst flag = this._flags & TRACKING;\n\t\tthis._flags &= ~TRACKING;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tthis._flags |= flag;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.peek = function () {\n\treturn this._value;\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget() {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tcycleDetected();\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\nfunction signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_compute: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(compute: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, compute: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._compute = compute;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._compute();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when the it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nComputed.prototype.peek = function () {\n\tif (!this._refresh()) {\n\t\tcycleDetected();\n\t}\n\tif (this._flags & HAS_ERROR) {\n\t\tthrow this._value;\n\t}\n\treturn this._value;\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget() {\n\t\tif (this._flags & RUNNING) {\n\t\t\tcycleDetected();\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\ninterface ReadonlySignal<T = any> extends Signal<T> {\n\treadonly value: T;\n}\n\nfunction computed<T>(compute: () => T): ReadonlySignal<T> {\n\treturn new Computed(compute);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._compute = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ndeclare class Effect {\n\t_compute?: () => unknown;\n\t_cleanup?: unknown;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(compute: () => void);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, compute: () => void) {\n\tthis._compute = compute;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (!(this._flags & DISPOSED) && this._compute !== undefined) {\n\t\t\tthis._cleanup = this._compute();\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tcycleDetected();\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nfunction effect(compute: () => unknown): () => void {\n\tconst effect = new Effect(compute);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { signal, computed, effect, batch, Signal, ReadonlySignal };\n","import { options, Component } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport { signal, computed, batch, effect, Signal, type ReadonlySignal };\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction Text(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst s = useMemo(() => {\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Replace this component's vdom updater with a direct text one:\n\t\tthis._updater!._callback = () => {\n\t\t\t(this.base as Text).data = s.peek();\n\t\t};\n\n\t\treturn computed(() => {\n\t\t\tlet data = currentSignal.value;\n\t\t\tlet s = data.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\t}, []);\n\n\treturn s.value;\n}\nText.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: Text },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(() => {\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// let reason;\n\t// if (!hasSignals && !hasComputeds.has(this)) {\n\t// \treason = \"no signals or computeds\";\n\t// } else if (hasPendingUpdate.has(this)) {\n\t// \treason = \"has pending update\";\n\t// } else if (hasHookState.has(this)) {\n\t// \treason = \"has hook state\";\n\t// }\n\t// if (reason) {\n\t// \tif (!this) reason += \" (`this` bug)\";\n\t// \tconsole.log(\"not optimizing\", this?.constructor?.name, \": \", reason, {\n\t// \t\tdetails: {\n\t// \t\t\thasSignals,\n\t// \t\t\thasComputeds: hasComputeds.has(this),\n\t// \t\t\thasPendingUpdate: hasPendingUpdate.has(this),\n\t// \t\t\thasHookState: hasHookState.has(this),\n\t// \t\t\tdeps: Array.from(updater._deps),\n\t// \t\t\tupdater,\n\t// \t\t},\n\t// \t});\n\t// }\n\n\t// if this component used no signals or computeds, update:\n\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t// if there is a pending re-render triggered from Signals,\n\t// or if there is hook or class state, update:\n\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T) {\n\treturn useMemo(() => signal<T>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(() => callback.current());\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"loading__O14bA\"};","\r\nvar createEdgeModule = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  \r\n  return (\r\nfunction(createEdgeModule = {})  {\r\n\r\n// include: shell.js\r\n// The Module object: Our interface to the outside world. We import\r\n// and export values on it. There are various ways Module can be used:\r\n// 1. Not defined. We create it here\r\n// 2. A function parameter, function(Module) { ..generated code.. }\r\n// 3. pre-run appended it, var Module = {}; ..generated code..\r\n// 4. External script tag defines var Module.\r\n// We need to check if Module already exists (e.g. case 3 above).\r\n// Substitution will be replaced with actual code on later stage of the build,\r\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\r\n// Note that if you want to run closure, and also to use Module\r\n// after the generated code, you will need to define   var Module = {};\r\n// before the code. Then that object will be used in the code, and you\r\n// can continue to use Module afterwards as well.\r\nvar Module = typeof createEdgeModule != 'undefined' ? createEdgeModule : {};\r\n\r\n// Set up the promise that indicates the Module is initialized\r\nvar readyPromiseResolve, readyPromiseReject;\r\nModule['ready'] = new Promise((resolve, reject) => {\r\n  readyPromiseResolve = resolve;\r\n  readyPromiseReject = reject;\r\n});\r\n\r\n// --pre-jses are emitted after the Module integration code, so that they can\r\n// refer to Module (if they choose; they can also define Module)\r\n\r\n  var Module = typeof Module !== 'undefined' ? Module : {};\r\n\r\n  if (!Module.expectedDataFileDownloads) {\r\n    Module.expectedDataFileDownloads = 0;\r\n  }\r\n\r\n  Module.expectedDataFileDownloads++;\r\n  (function() {\r\n    // Do not attempt to redownload the virtual filesystem data when in a pthread or a Wasm Worker context.\r\n    if (Module['ENVIRONMENT_IS_PTHREAD'] || Module['$ww']) return;\r\n    var loadPackage = function(metadata) {\r\n\r\n      var PACKAGE_PATH = '';\r\n      if (typeof window === 'object') {\r\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');\r\n      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {\r\n        // web worker\r\n        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');\r\n      }\r\n      var PACKAGE_NAME = 'C:/Dev/EDGE-classic-pbdot/web/site/edge-classic.data';\r\n      var REMOTE_PACKAGE_BASE = 'edge-classic.data';\r\n      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {\r\n        Module['locateFile'] = Module['locateFilePackage'];\r\n        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');\r\n      }\r\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\r\nvar REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\r\n\r\n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\r\n        \r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', packageName, true);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.onprogress = function(event) {\r\n          var url = packageName;\r\n          var size = packageSize;\r\n          if (event.total) size = event.total;\r\n          if (event.loaded) {\r\n            if (!xhr.addedTotal) {\r\n              xhr.addedTotal = true;\r\n              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};\r\n              Module.dataFileDownloads[url] = {\r\n                loaded: event.loaded,\r\n                total: size\r\n              };\r\n            } else {\r\n              Module.dataFileDownloads[url].loaded = event.loaded;\r\n            }\r\n            var total = 0;\r\n            var loaded = 0;\r\n            var num = 0;\r\n            for (var download in Module.dataFileDownloads) {\r\n            var data = Module.dataFileDownloads[download];\r\n              total += data.total;\r\n              loaded += data.loaded;\r\n              num++;\r\n            }\r\n            total = Math.ceil(total * Module.expectedDataFileDownloads/num);\r\n            if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');\r\n          } else if (!Module.dataFileDownloads) {\r\n            if (Module['setStatus']) Module['setStatus']('Downloading data...');\r\n          }\r\n        };\r\n        xhr.onerror = function(event) {\r\n          throw new Error(\"NetworkError for: \" + packageName);\r\n        }\r\n        xhr.onload = function(event) {\r\n          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n            var packageData = xhr.response;\r\n            callback(packageData);\r\n          } else {\r\n            throw new Error(xhr.statusText + \" : \" + xhr.responseURL);\r\n          }\r\n        };\r\n        xhr.send(null);\r\n      };\r\n\r\n      function handleError(error) {\r\n        console.error('package error:', error);\r\n      };\r\n\r\n    function runWithFS() {\r\n\r\n      function assert(check, msg) {\r\n        if (!check) throw msg + new Error().stack;\r\n      }\r\nModule['FS_createPath'](\"/\", \"edge_base\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"blasphemer\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom1\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom2\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"freedoom1\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1/graphics\", \"freedoom_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"freedoom2\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2/graphics\", \"freedoom_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"hacx\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"harmony\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony/graphics\", \"harmony_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"heretic\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"plutonia\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"rekkr\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"tnt\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/\", \"edge_defs\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"colormaps\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"crosshairs\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"edge1_font\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"overlays\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"sounds\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/sprites\", \"mbf_dog\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"ttf\", true, true);\r\nModule['FS_createPath'](\"/\", \"soundfont\", true, true);\r\n\r\n        var PACKAGE_UUID = metadata['package_uuid'];\r\n        var indexedDB;\r\n        if (typeof window === 'object') {\r\n          indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        } else if (typeof location !== 'undefined') {\r\n          // worker\r\n          indexedDB = self.indexedDB;\r\n        } else {\r\n          throw 'using IndexedDB to cache data can only be done on a web page or in a web worker';\r\n        }\r\n        var IDB_RO = \"readonly\";\r\n        var IDB_RW = \"readwrite\";\r\n        var DB_NAME = \"EM_PRELOAD_CACHE\";\r\n        var DB_VERSION = 1;\r\n        var METADATA_STORE_NAME = 'METADATA';\r\n        var PACKAGE_STORE_NAME = 'PACKAGES';\r\n        function openDatabase(callback, errback) {\r\n          try {\r\n            var openRequest = indexedDB.open(DB_NAME, DB_VERSION);\r\n          } catch (e) {\r\n            return errback(e);\r\n          }\r\n          openRequest.onupgradeneeded = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n\r\n            if (db.objectStoreNames.contains(PACKAGE_STORE_NAME)) {\r\n              db.deleteObjectStore(PACKAGE_STORE_NAME);\r\n            }\r\n            var packages = db.createObjectStore(PACKAGE_STORE_NAME);\r\n\r\n            if (db.objectStoreNames.contains(METADATA_STORE_NAME)) {\r\n              db.deleteObjectStore(METADATA_STORE_NAME);\r\n            }\r\n            var metadata = db.createObjectStore(METADATA_STORE_NAME);\r\n          };\r\n          openRequest.onsuccess = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n            callback(db);\r\n          };\r\n          openRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        };\r\n\r\n        // This is needed as chromium has a limit on per-entry files in IndexedDB\r\n        // https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177\r\n        // https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60\r\n        // We set the chunk size to 64MB to stay well-below the limit\r\n        var CHUNK_SIZE = 64 * 1024 * 1024;\r\n\r\n        function cacheRemotePackage(\r\n          db,\r\n          packageName,\r\n          packageData,\r\n          packageMeta,\r\n          callback,\r\n          errback\r\n        ) {\r\n          var transactionPackages = db.transaction([PACKAGE_STORE_NAME], IDB_RW);\r\n          var packages = transactionPackages.objectStore(PACKAGE_STORE_NAME);\r\n          var chunkSliceStart = 0;\r\n          var nextChunkSliceStart = 0;\r\n          var chunkCount = Math.ceil(packageData.byteLength / CHUNK_SIZE);\r\n          var finishedChunks = 0;\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            nextChunkSliceStart += CHUNK_SIZE;\r\n            var putPackageRequest = packages.put(\r\n              packageData.slice(chunkSliceStart, nextChunkSliceStart),\r\n              'package/' + packageName + '/' + chunkId\r\n            );\r\n            chunkSliceStart = nextChunkSliceStart;\r\n            putPackageRequest.onsuccess = function(event) {\r\n              finishedChunks++;\r\n              if (finishedChunks == chunkCount) {\r\n                var transaction_metadata = db.transaction(\r\n                  [METADATA_STORE_NAME],\r\n                  IDB_RW\r\n                );\r\n                var metadata = transaction_metadata.objectStore(METADATA_STORE_NAME);\r\n                var putMetadataRequest = metadata.put(\r\n                  {\r\n                    'uuid': packageMeta.uuid,\r\n                    'chunkCount': chunkCount\r\n                  },\r\n                  'metadata/' + packageName\r\n                );\r\n                putMetadataRequest.onsuccess = function(event) {\r\n                  callback(packageData);\r\n                };\r\n                putMetadataRequest.onerror = function(error) {\r\n                  errback(error);\r\n                };\r\n              }\r\n            };\r\n            putPackageRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n        /* Check if there's a cached package, and if so whether it's the latest available */\r\n        function checkCachedPackage(db, packageName, callback, errback) {\r\n          var transaction = db.transaction([METADATA_STORE_NAME], IDB_RO);\r\n          var metadata = transaction.objectStore(METADATA_STORE_NAME);\r\n          var getRequest = metadata.get('metadata/' + packageName);\r\n          getRequest.onsuccess = function(event) {\r\n            var result = event.target.result;\r\n            if (!result) {\r\n              return callback(false, null);\r\n            } else {\r\n              return callback(PACKAGE_UUID === result['uuid'], result);\r\n            }\r\n          };\r\n          getRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        }\r\n\r\n        function fetchCachedPackage(db, packageName, metadata, callback, errback) {\r\n          var transaction = db.transaction([PACKAGE_STORE_NAME], IDB_RO);\r\n          var packages = transaction.objectStore(PACKAGE_STORE_NAME);\r\n\r\n          var chunksDone = 0;\r\n          var totalSize = 0;\r\n          var chunkCount = metadata['chunkCount'];\r\n          var chunks = new Array(chunkCount);\r\n\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            var getRequest = packages.get('package/' + packageName + '/' + chunkId);\r\n            getRequest.onsuccess = function(event) {\r\n              // If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now\r\n              if (chunkCount == 1) {\r\n                callback(event.target.result);\r\n              } else {\r\n                chunksDone++;\r\n                totalSize += event.target.result.byteLength;\r\n                chunks.push(event.target.result);\r\n                if (chunksDone == chunkCount) {\r\n                  if (chunksDone == 1) {\r\n                    callback(event.target.result);\r\n                  } else {\r\n                    var tempTyped = new Uint8Array(totalSize);\r\n                    var byteOffset = 0;\r\n                    for (var chunkId in chunks) {\r\n                      var buffer = chunks[chunkId];\r\n                      tempTyped.set(new Uint8Array(buffer), byteOffset);\r\n                      byteOffset += buffer.byteLength;\r\n                      buffer = undefined;\r\n                    }\r\n                    chunks = undefined;\r\n                    callback(tempTyped.buffer);\r\n                    tempTyped = undefined;\r\n                  }\r\n                }\r\n              }\r\n            };\r\n            getRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n      function processPackageData(arrayBuffer) {\r\n        assert(arrayBuffer, 'Loading data file failed.');\r\n        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');\r\n        var byteArray = new Uint8Array(arrayBuffer);\r\n        var curr;\r\n        var compressedData = {\"data\":null,\"cachedOffset\":52770945,\"cachedIndexes\":[-1,-1],\"cachedChunks\":[null,null],\"offsets\":[0,2048,4096,6153,8201,10249,12297,14345,16393,18441,20489,22537,24585,26633,28681,30729,32777,34825,36873,38921,40969,43017,44320,45575,46645,47624,49234,50342,51819,53416,54516,55518,56293,57235,58188,59129,60147,60899,61811,62792,63738,64694,65555,66506,67313,68206,69153,69989,70783,71676,72484,73745,74644,75619,76538,77671,78797,79820,81106,82179,83055,84097,85381,86680,87934,89342,89915,90424,91002,91632,92221,92818,93813,94737,95579,96413,96936,97499,98239,98920,99570,100734,101523,102178,102815,103572,104243,105091,105938,106784,107756,108381,109014,109514,110084,110677,111412,112102,112979,113688,114401,115243,116153,117332,118091,118998,119954,120861,121700,122541,123401,124256,124923,125827,126779,127751,128589,129208,129567,130124,131001,131959,132332,132977,133931,134587,135270,135826,136443,137092,137980,138893,139643,140300,141010,141581,143353,145076,146515,147996,149465,150971,152501,154032,155541,157063,158564,160158,161899,163723,165671,167653,169654,171653,173654,175656,177682,179676,181603,183407,185197,187056,188993,190850,192824,194833,196775,198626,200476,202270,204013,205747,207493,209302,211116,213007,214959,216916,218930,220926,222929,224822,226504,228032,229532,231039,232556,234071,235596,237079,238573,240029,241451,242893,244610,246466,247738,249011,250274,251540,252835,254127,255507,256810,258033,259336,260589,261806,263197,264578,266043,267453,268883,270299,271707,273223,274771,276250,277771,279289,280854,282483,284130,285704,287317,288896,290488,292025,293543,295049,296737,298429,299972,301704,303346,304710,306062,307435,308740,310001,311244,312528,313766,314948,316125,317339,318512,319690,320890,322111,323424,324676,326124,328116,329160,330275,331454,332585,333612,334543,335604,336730,337848,339035,340140,341387,342585,343951,345373,346877,348416,350033,351588,353140,354762,356235,357626,359157,360741,362264,363837,365359,366716,368183,369475,370809,372203,373446,374762,376216,377698,379228,380729,382203,383640,384926,386116,387187,388215,389247,390308,391439,392622,393690,394530,395563,396642,397526,398468,399437,400491,402532,404070,405637,407227,408819,410414,412027,413712,415305,416899,418510,420197,421868,423297,424839,426438,427974,429581,431330,432978,434486,436126,437650,439108,440569,442099,443742,445228,446721,448241,449822,451379,452926,454464,456073,457637,459274,460934,462616,464227,465762,467338,469023,470585,472092,473377,474609,476173,477696,479196,480585,482180,483807,485494,487230,488817,490304,491879,493831,495303,496264,497363,498320,499429,500580,501618,502797,503795,504835,505971,507083,508271,509351,510447,511560,512728,513920,515129,516347,517606,518864,520204,521503,522681,523863,524925,525994,527008,527999,529021,530068,531131,532042,532972,533918,534846,535856,536873,537922,538949,539966,541012,542017,542922,543962,544915,545967,547008,548105,549250,550352,551474,552549,553542,554504,555368,556827,558675,559935,561221,562512,563791,565080,566371,567737,569048,570279,571589,572832,573976,575240,576544,577919,579229,580556,581870,583236,584711,586344,587973,589563,590963,592287,593703,595257,596805,598559,600237,601862,603301,604574,605941,607374,608861,610307,611823,613318,614695,616056,617434,618731,619984,621232,622506,623762,624941,626116,627337,628516,629689,630896,632114,633436,634686,636138,638160,639725,641333,642923,644542,646144,647674,649229,650849,652403,653967,655588,657303,659038,660874,662688,664440,665951,667639,669256,671018,672895,674719,676481,678365,680203,682015,683897,685740,687486,689298,690994,692704,694480,696143,697796,699573,701215,703083,704951,706685,708069,709436,710818,712084,713447,714972,716469,717939,719470,721025,722539,724049,725639,727107,728532,730012,731504,733551,734477,735298,736074,736985,737922,738668,739348,740284,741098,741950,742716,743525,744497,745643,746917,748116,749423,750708,752049,753513,755010,756582,758106,759777,761355,763007,764596,766196,767833,769447,771045,772549,774032,775507,777013,778569,780113,781546,783007,784436,785808,787148,788376,789533,790749,791894,793051,794058,795020,796089,797123,798102,799060,800088,801112,801993,802763,804454,806316,808171,810045,811927,813773,815563,817394,819251,821055,822791,824412,825961,827345,829120,831095,832972,834781,836688,838534,840412,842313,844236,846085,847780,849423,850998,852422,854105,856130,857853,859676,861567,863477,865352,867131,868875,870417,871867,873394,874970,876579,878228,880163,881813,883821,885696,887443,889456,891193,893058,895091,896612,897910,899540,901072,902524,904320,906096,907446,908932,910556,912065,913544,915521,916999,918368,920045,921601,923150,924943,926882,928568,930259,931960,933731,935482,937237,938963,940743,942574,944389,946251,948132,949866,951630,953411,955209,957055,958878,960679,962541,964381,966156,967927,969681,971450,973232,974970,976726,978541,980261,982017,983772,985610,987388,989158,990916,992664,994375,996070,997808,999572,1001299,1003004,1004655,1006395,1008251,1010150,1011987,1013870,1015660,1017515,1019433,1021294,1023077,1024775,1026431,1028139,1030187,1032122,1034038,1035944,1037895,1039797,1041697,1043596,1045521,1047404,1049259,1051174,1053085,1054891,1056691,1058439,1060202,1061955,1063788,1065599,1067400,1069198,1071021,1072851,1074690,1076506,1078268,1080002,1081695,1083275,1084831,1086495,1088236,1090046,1091805,1093547,1095283,1096970,1098698,1100404,1102130,1103897,1105662,1107474,1109227,1111005,1112921,1114808,1116767,1118608,1120400,1122247,1124153,1126057,1127982,1129875,1131786,1133632,1135680,1137655,1139595,1141580,1143599,1145599,1147607,1149594,1151547,1153476,1155386,1157374,1159377,1161357,1163298,1165184,1167107,1169119,1171073,1173050,1175029,1177040,1179060,1180991,1182915,1184842,1186734,1188661,1190490,1192192,1193960,1195761,1197673,1199591,1201519,1203478,1205451,1207428,1209410,1211341,1213250,1215253,1217188,1219005,1220845,1222708,1224562,1226421,1228233,1230034,1231833,1233691,1235518,1237236,1238924,1240510,1242014,1243461,1244238,1246167,1248215,1250263,1252311,1254359,1256407,1258455,1260503,1262551,1264599,1266647,1268695,1270743,1272791,1274839,1276887,1278935,1280983,1283031,1285079,1287127,1289175,1291223,1293271,1295319,1297367,1299415,1301463,1303511,1305559,1307607,1309655,1311703,1313751,1315799,1317847,1319895,1321943,1323991,1326039,1328087,1330135,1332183,1334231,1336279,1338327,1340375,1342423,1344471,1346519,1348567,1350615,1352663,1354711,1356768,1358816,1360864,1362912,1364960,1367008,1369056,1371104,1373152,1375200,1377248,1379296,1381344,1383392,1385440,1387488,1389536,1391584,1393632,1395680,1397728,1399776,1401824,1403872,1405920,1407968,1410016,1412064,1414121,1416169,1418217,1420265,1422313,1424361,1426409,1428457,1430505,1432553,1434601,1436649,1438697,1440745,1442793,1444841,1446889,1448937,1450985,1453033,1455081,1457129,1459177,1461225,1463273,1465321,1467369,1469426,1471474,1473522,1475570,1477627,1479675,1481723,1483771,1485819,1487867,1489915,1491963,1494011,1496059,1498107,1500155,1502203,1504251,1506299,1508347,1510395,1512443,1514491,1516539,1518587,1520635,1522683,1524731,1526779,1528827,1530875,1532923,1534971,1537019,1539067,1541115,1543163,1545211,1547259,1549307,1551355,1553403,1555451,1557499,1559547,1561595,1563643,1565691,1567739,1569787,1571835,1573883,1575931,1577979,1580027,1582075,1584123,1586171,1588219,1590267,1592315,1594363,1596411,1598459,1600507,1602555,1604603,1606651,1608699,1610747,1612795,1614843,1616891,1618939,1620987,1623035,1625083,1627131,1629179,1631227,1633275,1635323,1637371,1639419,1641475,1643523,1645571,1647619,1649667,1651715,1653763,1655811,1657859,1659907,1661955,1664003,1666051,1668099,1670147,1672195,1674243,1676291,1678339,1680387,1682435,1684483,1686531,1688579,1690627,1692675,1694723,1696771,1698819,1700867,1702915,1704963,1707011,1709059,1711107,1713155,1715203,1717251,1719299,1721347,1723395,1725443,1727491,1729539,1731587,1733635,1735683,1737731,1739779,1741827,1743875,1745923,1747971,1750019,1752067,1754115,1756163,1758211,1760259,1762307,1764355,1766403,1768460,1769987,1771448,1772791,1774327,1775831,1777408,1778833,1780280,1781597,1782794,1784126,1785635,1787031,1788212,1789496,1790936,1792489,1793887,1795362,1796792,1798181,1799519,1800994,1802467,1803914,1805396,1806882,1808376,1809847,1811340,1812870,1814394,1815973,1817446,1819018,1820538,1822107,1823622,1825118,1826539,1828123,1829691,1831128,1832560,1833941,1835567,1837239,1838885,1840520,1842111,1843649,1845256,1846944,1848540,1850063,1851699,1853222,1855147,1856620,1857689,1858802,1859893,1861007,1862009,1863043,1864137,1865217,1866379,1867518,1868648,1869863,1871189,1872555,1874040,1875550,1877128,1878709,1880232,1881870,1883442,1884843,1886249,1887840,1889425,1890942,1892493,1893899,1895330,1896716,1898036,1899352,1900722,1901967,1903383,1904823,1906349,1907866,1909362,1910861,1912192,1913432,1914586,1915570,1916612,1917627,1918798,1919955,1921136,1922123,1922998,1924029,1924997,1925926,1926893,1927914,1929469,1931180,1932252,1933377,1934520,1935623,1936547,1937593,1938655,1939771,1940899,1942111,1943355,1944651,1945820,1947319,1948871,1950379,1951887,1953394,1954861,1956483,1958082,1959572,1961040,1962643,1964266,1965649,1967188,1968694,1970263,1971904,1973592,1975446,1977357,1979216,1980775,1982551,1984360,1986118,1987590,1989258,1990532,1991971,1993325,1994239,1995343,1996454,1997520,1998644,1999797,2000841,2001724,2002766,2003780,2004673,2005587,2006595,2007886,2009904,2011413,2012964,2014491,2016043,2017598,2019054,2020548,2022079,2023566,2025069,2026643,2028299,2030029,2031824,2033606,2035320,2036815,2038493,2040082,2041803,2043685,2045460,2047145,2049016,2050755,2052520,2054410,2056122,2057738,2059584,2061271,2062957,2064723,2066244,2067806,2069534,2071129,2072978,2074805,2076510,2077867,2079236,2080589,2081838,2083182,2084637,2086133,2087588,2089039,2090520,2091980,2093474,2094994,2096390,2097749,2099177,2100645,2102692,2104402,2106060,2107729,2109474,2111258,2112991,2114724,2116511,2118298,2120127,2121939,2123830,2125605,2127361,2129163,2130944,2132756,2134572,2136394,2138172,2140054,2141854,2143614,2145394,2147160,2148903,2150688,2152363,2154134,2155936,2157681,2159433,2161215,2163074,2164842,2166600,2168353,2170063,2171803,2173505,2175234,2176967,2178685,2180389,2182005,2183850,2185712,2187609,2189453,2191267,2193095,2194984,2196853,2198705,2200477,2202161,2203743,2204628,2206440,2208488,2210536,2212584,2214632,2216680,2218728,2220776,2222824,2224872,2226920,2228968,2231016,2233064,2235112,2237160,2239208,2241256,2243304,2245352,2247400,2249448,2251496,2253544,2255592,2257640,2259688,2261736,2263784,2265832,2267880,2269928,2271976,2274024,2276072,2278120,2280168,2282216,2284264,2286312,2288360,2290408,2292456,2294504,2296552,2298600,2300648,2302696,2304744,2306792,2308840,2310888,2312936,2314984,2317032,2319080,2321128,2323176,2325224,2327272,2329320,2331368,2333416,2335464,2337512,2339560,2341127,2342360,2343751,2345158,2346617,2348161,2349708,2351128,2352603,2354078,2355559,2356992,2358453,2359901,2361236,2362565,2363171,2364123,2365273,2366694,2368292,2370006,2371840,2373673,2375557,2377422,2379244,2380967,2382677,2384405,2386166,2388013,2389891,2391766,2393578,2395411,2397223,2399030,2400601,2401891,2402932,2404002,2405257,2406556,2407678,2409084,2410338,2411457,2412715,2413972,2415394,2416859,2418350,2419826,2421198,2422613,2424009,2425723,2427551,2428974,2430427,2431916,2433477,2434925,2436441,2437977,2439400,2440863,2442396,2444021,2445479,2446972,2448631,2450301,2451936,2453676,2455472,2457124,2458845,2460501,2462083,2463637,2465129,2466696,2468333,2469885,2471494,2473113,2474750,2476336,2477880,2479422,2481056,2482684,2484304,2485930,2487524,2489060,2490606,2492225,2493872,2495480,2496956,2498112,2499514,2501009,2502491,2503865,2505312,2506819,2508400,2510008,2511599,2513023,2514428,2516052,2518043,2519392,2520776,2522165,2523608,2524972,2526365,2527859,2529270,2530701,2532108,2533621,2534995,2536172,2537700,2539225,2540772,2542350,2544017,2545614,2547176,2548776,2550235,2551712,2553185,2554742,2556286,2557793,2559237,2560763,2562322,2563829,2565313,2566802,2568391,2569932,2571492,2573035,2574643,2576205,2577728,2579257,2580781,2582168,2583469,2584487,2585501,2586855,2588240,2589533,2590814,2592287,2593780,2595300,2596843,2598181,2599486,2600914,2602953,2604597,2606254,2607912,2609653,2611410,2613110,2614890,2616591,2618275,2620001,2621810,2623581,2625053,2626651,2628315,2629934,2631602,2633407,2635146,2636736,2638434,2640036,2641574,2643102,2644692,2646405,2647950,2649492,2651059,2652690,2654340,2655970,2657580,2659264,2660928,2662656,2664390,2666167,2667832,2669451,2671071,2672787,2674398,2675961,2677269,2678626,2680341,2682021,2683639,2685193,2686892,2688641,2690430,2692280,2693994,2695605,2697272,2699252,2700361,2700907,2701503,2702168,2702845,2703551,2704311,2705269,2706286,2707375,2708279,2709275,2710741,2712217,2713843,2715486,2716675,2718126,2719607,2721326,2723043,2724788,2726355,2728047,2729677,2731452,2733079,2734784,2736240,2737979,2739694,2741457,2743164,2744901,2746559,2748199,2749909,2751649,2753391,2755095,2756772,2758155,2759580,2760826,2761994,2763282,2764755,2766050,2767235,2768521,2769835,2771273,2772842,2774376,2775864,2777421,2779030,2780255,2781979,2784027,2786075,2788123,2790171,2792219,2794267,2796315,2798363,2800411,2802459,2804507,2806555,2808603,2810651,2812699,2814747,2816795,2818843,2820900,2822948,2824996,2827044,2829092,2831140,2833188,2835236,2837284,2839332,2841380,2843428,2845476,2847524,2849572,2851620,2853668,2855716,2857764,2859812,2861860,2863908,2865956,2868004,2870052,2872100,2874148,2876196,2878244,2880292,2882340,2884388,2886436,2888484,2890532,2892580,2894628,2896676,2898724,2900772,2902820,2904868,2906916,2908964,2911012,2913060,2915108,2917156,2919204,2921252,2923300,2925348,2927396,2929444,2931492,2933540,2935588,2937636,2939684,2941732,2943780,2945828,2947876,2949924,2951972,2954020,2956068,2958116,2960164,2962212,2964260,2966308,2968356,2970404,2972452,2974500,2976548,2978596,2980644,2982692,2984740,2986788,2988836,2990884,2992932,2994980,2997028,2999076,3001124,3003172,3005220,3007268,3009316,3011364,3013412,3015460,3017508,3019556,3021604,3023652,3025700,3027748,3029796,3031844,3033892,3035949,3037997,3040045,3042093,3044141,3046189,3048237,3050285,3052333,3054381,3056429,3058477,3060525,3062573,3064621,3066669,3068717,3070765,3072813,3074861,3076909,3078957,3081005,3083053,3085101,3087149,3089197,3091245,3093293,3095341,3097389,3099437,3101485,3103533,3105581,3107629,3109677,3111725,3113773,3115821,3117876,3119924,3121972,3124020,3126068,3128116,3130164,3132212,3134260,3136308,3138356,3140404,3142452,3144500,3146548,3148596,3150644,3152692,3154740,3156788,3158845,3160893,3162908,3164929,3166976,3169031,3171085,3173133,3175186,3177236,3179284,3181332,3183380,3185428,3187476,3189524,3191572,3193620,3195668,3197716,3199764,3201812,3203860,3205908,3207956,3210004,3212052,3214107,3216155,3218203,3220251,3222299,3224347,3226395,3228443,3230491,3232539,3234587,3236635,3238683,3240731,3242779,3244827,3246875,3248923,3250971,3253019,3255067,3257115,3259159,3261167,3263215,3265264,3267320,3269368,3271416,3273465,3275522,3277570,3279618,3281666,3283714,3285762,3287810,3289858,3291906,3293954,3296002,3298050,3300098,3302146,3304194,3306242,3308290,3310338,3312388,3314436,3316484,3318532,3320580,3322628,3324676,3326724,3328772,3330820,3332868,3334916,3336964,3339012,3341060,3343108,3345156,3347204,3349252,3351309,3353357,3355405,3357446,3359459,3361491,3363537,3365594,3367642,3369690,3371739,3373796,3375844,3377892,3379940,3381988,3384036,3386084,3388132,3390180,3392228,3394276,3396324,3398372,3400420,3402468,3404516,3406572,3408620,3410677,3412725,3414773,3416821,3418869,3420917,3422965,3425013,3427061,3429109,3431157,3433205,3435253,3437301,3439349,3441397,3443445,3445493,3447541,3449589,3451637,3453685,3455733,3457781,3459829,3461877,3463925,3465973,3468021,3470069,3472117,3474165,3476213,3478261,3480309,3482357,3484405,3486453,3488501,3490549,3492597,3494645,3496693,3498741,3500789,3502837,3504885,3506933,3508981,3511029,3513077,3515125,3517173,3519221,3521269,3523317,3525365,3527413,3529461,3531509,3533557,3535605,3537653,3539701,3541749,3543797,3545845,3547893,3549941,3551989,3554037,3556085,3558133,3560181,3562229,3564277,3566325,3568373,3570421,3572469,3574517,3576565,3578613,3580661,3582709,3584757,3586805,3588853,3590901,3592949,3594997,3597045,3599093,3601141,3603189,3605237,3607285,3609333,3611381,3613429,3615477,3617525,3619573,3621621,3623669,3625717,3627765,3629813,3631861,3633909,3635957,3638005,3640054,3642064,3644095,3646143,3648200,3650248,3652296,3654346,3656403,3658451,3660499,3662547,3664595,3666643,3668691,3670739,3672787,3674835,3676883,3678931,3680979,3683027,3685075,3687123,3689171,3691052,3692300,3693695,3694989,3696075,3697105,3698122,3699212,3700390,3701447,3702613,3703680,3704918,3706007,3707137,3708311,3709255,3710450,3711618,3712820,3714017,3715173,3716371,3717249,3718095,3719015,3720001,3720938,3721819,3722583,3723554,3724385,3725181,3725792,3726127,3726467,3726802,3728115,3729381,3730867,3732295,3733763,3735193,3735914,3737014,3738105,3738999,3739896,3740732,3742127,3743430,3744923,3746256,3747361,3748391,3749493,3750596,3751694,3752880,3753930,3755022,3756249,3757342,3758575,3759642,3760696,3761831,3763020,3764188,3765387,3766505,3767718,3768684,3769595,3770545,3771527,3772466,3773202,3774117,3774942,3775800,3776787,3777317,3777654,3778000,3778535,3779691,3780997,3782445,3783848,3785251,3786514,3787499,3788684,3789539,3790446,3791299,3792323,3794371,3794409,3794454,3794502,3794565,3794652,3794758,3794922,3795123,3795300,3795523,3795730,3795984,3796443,3797304,3798331,3799302,3800341,3801704,3803289,3804887,3806534,3808163,3809866,3811616,3813393,3815067,3816590,3818137,3819709,3821427,3823079,3824818,3826600,3828296,3829922,3831577,3833164,3834803,3836423,3837720,3838658,3839661,3840528,3841177,3841520,3841721,3841875,3841992,3842105,3842265,3842403,3842473,3842540,3842587,3842632,3842676,3842721,3844501,3845143,3845302,3845559,3845776,3846023,3846321,3846764,3847139,3847495,3847960,3848282,3848612,3849211,3849993,3850951,3851838,3852959,3854123,3855624,3857313,3859073,3860879,3862646,3864510,3866316,3868123,3869767,3871449,3873162,3874975,3876838,3878688,3880563,3882408,3884162,3886045,3887934,3889805,3891645,3893336,3894279,3895240,3896141,3896928,3897513,3897970,3898308,3898647,3898982,3899387,3899797,3900083,3900241,3900391,3900576,3900808,3900971,3902286,3904037,3905324,3906717,3907918,3909173,3910565,3911948,3913291,3914701,3916022,3917458,3918958,3920410,3921779,3923235,3924682,3926138,3927645,3929042,3930612,3932011,3933347,3934725,3936130,3937485,3938640,3939806,3941136,3942447,3943805,3945192,3946581,3947815,3949131,3950571,3951918,3953209,3954536,3956013,3957552,3958957,3960481,3961846,3963237,3964624,3966074,3967494,3968990,3970374,3971687,3973086,3974379,3975760,3977147,3978425,3979617,3980765,3982301,3983620,3985019,3986690,3987616,3988795,3990368,3991498,3992639,3994471,3995381,3996418,3997165,3999163,3999724,3999771,3999816,3999860,4000645,4001591,4002681,4003801,4005176,4006773,4008064,4009697,4011534,4013324,4014968,4016670,4018351,4019126,4020356,4021907,4023662,4025461,4027276,4029032,4030846,4032654,4034370,4035964,4037641,4039322,4041234,4043060,4044943,4046778,4048591,4050352,4052260,4054112,4055977,4057853,4059602,4061214,4062806,4064348,4066116,4067480,4068745,4070066,4071305,4072550,4073607,4074565,4075379,4075752,4075800,4075849,4075894,4076521,4077258,4078219,4079019,4079759,4080889,4082321,4083649,4084829,4085741,4086691,4087159,4088113,4088793,4089520,4090212,4090944,4091875,4092745,4093559,4094439,4095334,4096300,4097134,4097939,4098701,4099623,4100519,4101480,4102386,4103305,4103987,4104765,4105395,4106055,4106794,4107606,4108331,4109073,4109987,4110871,4111576,4112391,4113202,4114031,4114909,4115600,4116456,4117431,4118302,4119133,4119969,4120799,4121627,4122622,4123378,4124203,4125675,4127185,4128649,4130155,4131782,4133392,4134946,4136465,4138178,4139575,4141105,4142612,4144265,4145857,4147294,4149047,4150425,4151884,4153333,4155004,4156596,4158085,4159693,4161124,4162767,4164656,4166078,4167581,4168869,4169976,4171201,4172517,4173894,4175009,4176112,4177329,4178432,4179545,4180800,4182045,4183338,4184477,4185304,4186166,4186845,4188715,4190237,4191643,4193105,4194497,4195790,4197174,4198367,4199553,4200904,4202248,4203504,4204645,4205546,4206443,4207104,4207979,4209850,4211354,4212866,4214355,4215772,4217111,4218443,4219631,4220832,4222168,4223469,4224680,4225608,4226433,4227150,4227831,4229652,4231128,4232617,4234034,4235536,4236859,4238111,4239515,4240681,4241996,4243374,4244689,4245882,4246956,4247904,4248770,4249424,4250346,4252233,4253681,4255175,4256594,4258065,4259587,4261069,4262489,4263706,4264686,4265542,4266300,4267144,4268027,4268877,4270505,4272040,4273535,4274962,4276431,4277751,4278951,4280324,4281502,4282803,4284176,4285475,4286654,4287673,4288627,4289450,4290116,4291621,4293394,4294853,4296245,4297403,4298612,4300062,4301495,4302843,4303795,4304789,4306145,4307877,4309459,4311040,4312425,4313690,4314827,4316330,4317755,4319016,4320065,4321332,4322596,4323936,4324963,4326027,4327803,4329518,4331330,4333159,4334863,4336508,4337833,4339661,4341571,4343407,4345093,4346991,4348896,4350272,4351475,4352764,4354135,4355552,4356962,4358888,4360286,4361636,4362952,4364292,4365755,4367234,4368716,4369632,4370570,4371646,4373494,4374552,4375384,4376272,4377912,4379332,4380646,4382313,4383981,4385485,4387203,4388941,4390763,4391961,4393458,4395174,4396717,4398308,4400161,4401999,4403735,4404960,4406515,4408216,4409758,4411489,4413398,4415283,4416812,4418087,4419701,4421395,4422961,4424767,4426667,4428591,4429982,4431321,4432983,4434705,4436249,4437961,4439857,4441777,4443194,4444593,4446216,4447937,4449452,4451120,4452975,4454905,4456299,4457644,4459303,4460938,4462450,4464181,4465970,4467765,4468959,4470480,4472211,4473737,4475337,4477095,4478880,4480448,4481713,4483336,4485016,4486522,4488206,4489988,4491891,4493161,4494556,4496253,4497808,4499397,4501211,4503048,4504653,4506255,4507784,4509426,4511025,4512517,4514179,4515813,4517377,4518871,4520467,4521905,4523508,4525130,4526643,4528217,4529649,4531153,4532672,4534001,4535569,4537044,4538253,4539361,4540511,4541838,4543166,4544292,4545568,4547218,4548788,4550110,4551415,4552757,4554140,4555604,4556802,4558222,4559302,4560676,4562570,4562652,4562700,4562749,4562794,4562834,4562909,4563292,4563941,4564709,4565545,4566475,4567479,4568439,4569485,4570425,4571550,4572680,4573944,4575291,4576491,4577764,4579120,4580284,4581483,4582651,4583640,4584859,4585914,4587115,4588291,4589323,4590260,4591210,4592039,4592688,4593394,4594079,4594487,4594532,4594576,4594621,4594669,4594716,4595782,4596826,4597556,4598333,4599431,4600662,4601976,4602994,4603984,4605017,4606038,4606803,4607495,4608263,4609257,4610225,4611302,4612504,4613616,4614797,4616068,4617344,4618540,4619914,4621264,4622589,4623938,4625259,4626582,4627802,4628729,4629562,4630173,4630706,4631229,4631996,4632882,4633655,4634458,4635347,4636369,4637374,4638243,4639219,4640396,4642180,4643357,4644633,4646018,4647432,4648893,4650348,4651979,4653707,4655482,4657302,4659117,4660923,4662633,4664395,4666045,4667679,4669447,4671078,4672733,4674356,4676009,4677605,4679051,4680655,4682338,4683967,4685523,4687100,4688703,4690276,4691711,4692953,4693991,4695299,4696921,4698423,4700024,4701598,4703090,4704417,4705848,4707285,4709201,4710106,4710813,4711866,4712969,4714097,4715369,4716756,4718092,4719324,4720869,4722341,4723647,4724465,4725319,4726455,4727758,4729173,4730419,4731649,4732896,4734019,4735192,4736340,4737571,4738914,4740113,4741369,4742779,4744070,4745326,4746698,4748076,4749387,4750687,4751939,4753195,4754382,4755406,4756396,4757510,4758663,4759931,4761080,4762633,4763501,4764948,4766484,4767401,4768868,4769906,4771516,4772836,4774656,4776224,4776994,4777877,4779284,4781329,4782142,4783036,4783781,4784824,4785893,4786930,4787894,4788916,4790069,4791360,4792866,4794531,4796150,4797826,4799379,4800697,4802123,4803625,4805266,4806887,4808551,4810188,4811835,4813441,4815022,4816505,4818052,4819584,4821412,4823247,4825123,4826959,4828708,4830491,4832024,4833437,4834804,4836179,4837539,4838821,4839946,4840642,4841522,4842676,4843788,4844883,4845936,4847028,4847990,4848670,4850184,4851120,4852129,4853160,4854139,4855088,4856131,4857131,4858114,4859136,4860088,4861117,4862122,4863141,4864092,4865089,4866067,4867065,4868017,4869024,4870031,4871053,4872070,4873014,4874026,4875049,4876064,4877015,4878031,4879042,4880046,4881006,4882013,4883029,4884032,4885033,4886015,4887145,4888094,4888968,4890059,4890937,4892057,4893254,4894673,4895338,4896006,4896611,4897378,4898036,4898682,4899320,4900028,4901105,4902173,4903188,4904026,4904831,4905678,4906479,4907290,4908139,4909075,4909932,4910834,4911795,4912592,4913472,4914315,4915322,4916270,4917220,4918240,4919189,4920017,4920626,4921289,4921992,4922686,4923397,4924349,4925223,4926028,4926950,4927761,4928536,4929395,4930237,4931228,4931983,4933521,4935329,4937144,4938952,4941000,4943048,4945096,4947144,4949192,4951240,4953288,4955336,4957384,4959432,4961480,4963528,4965576,4967624,4969672,4971720,4973768,4975816,4977864,4979912,4981960,4984017,4985913,4987759,4989459,4991219,4992944,4994664,4996409,4998323,5000218,5002266,5002750,5002798,5002847,5002895,5002940,5002986,5003034,5003083,5003130,5003175,5003220,5003268,5003418,5004208,5005248,5006673,5008069,5009632,5011198,5012630,5014142,5015684,5017281,5018948,5020657,5022418,5024167,5025833,5027554,5029173,5030841,5032469,5034097,5035664,5037276,5038701,5040002,5041289,5042422,5043574,5044481,5044953,5045278,5045484,5045623,5045668,5045716,5045765,5045810,5045855,5045900,5045948,5045997,5046042,5046087,5046132,5046174,5047513,5049561,5051609,5053657,5055705,5057753,5059801,5061849,5063897,5065945,5067993,5070041,5072089,5074137,5076185,5078233,5080281,5082329,5084377,5086425,5088473,5090521,5092569,5094617,5096665,5098713,5100761,5102818,5104866,5106241,5107462,5108642,5109871,5111119,5112220,5113368,5114516,5115719,5116918,5118220,5119517,5120687,5122005,5123281,5124725,5126431,5127984,5129521,5130900,5132264,5133771,5135353,5136792,5138175,5139770,5141372,5142930,5144430,5145920,5147470,5148919,5150290,5151689,5153152,5154597,5156078,5157352,5158569,5159908,5161187,5162460,5163633,5164717,5165579,5166626,5167651,5168773,5169772,5170581,5171275,5172018,5172829,5173524,5174153,5174766,5175329,5177192,5178867,5180025,5181119,5182257,5183268,5184463,5185755,5187095,5188248,5189482,5190653,5191932,5193283,5194530,5196110,5197640,5199417,5201195,5202871,5204628,5206412,5208008,5209482,5211040,5212526,5213903,5215489,5217107,5218569,5220032,5221662,5223231,5224876,5226365,5228062,5229596,5230970,5232260,5233615,5234856,5235966,5237097,5238127,5239128,5240184,5241094,5242073,5243116,5244157,5245219,5246124,5246975,5247631,5248217,5248634,5249074,5249449,5250800,5252185,5252879,5253584,5254250,5254920,5255579,5256239,5256926,5257594,5258268,5258897,5259585,5260294,5261510,5263095,5264588,5266143,5267723,5269393,5271008,5272560,5274063,5275478,5276577,5277433,5278690,5280160,5281611,5283162,5284684,5286122,5287617,5289038,5290364,5291488,5292443,5293614,5295032,5296546,5298029,5299487,5300994,5302398,5303636,5304575,5305248,5305922,5306616,5307311,5307977,5308654,5309321,5310038,5310732,5311390,5312031,5312718,5313894,5315657,5316353,5317010,5317668,5318346,5319067,5319765,5320398,5321036,5321733,5322430,5323121,5323757,5324569,5325988,5327623,5329215,5330846,5332558,5334252,5335823,5337330,5338753,5340114,5341458,5342828,5344108,5345412,5346745,5348072,5349384,5350654,5351939,5353089,5354753,5356431,5358052,5359666,5361334,5362939,5364483,5365871,5366944,5367930,5368680,5369446,5370100,5370763,5371444,5372091,5372787,5373463,5374118,5374764,5375427,5376133,5376779,5377581,5379304,5380805,5382618,5383838,5385595,5387437,5388640,5390416,5392190,5394238,5394677,5395065,5395593,5396222,5396879,5397664,5398539,5399413,5400429,5401505,5402565,5403707,5405091,5406594,5408151,5409720,5411299,5412818,5414298,5415755,5417210,5418660,5420082,5421510,5423061,5424520,5425990,5427360,5428718,5430007,5431437,5432853,5434304,5435917,5437495,5439028,5440441,5441699,5442775,5443995,5445294,5446509,5447797,5448987,5450150,5451275,5452257,5453251,5454283,5455351,5456356,5457324,5458190,5458997,5459723,5460329,5460664,5462303,5463145,5463491,5464018,5464604,5465253,5465975,5466797,5467657,5468585,5469583,5470622,5471776,5473015,5474393,5475945,5477588,5479278,5480993,5482646,5484281,5485746,5487180,5488527,5489844,5491156,5492582,5494011,5495438,5496896,5498346,5499827,5501224,5502672,5504140,5505569,5507007,5508570,5510254,5511870,5513368,5514654,5515915,5517149,5518394,5519575,5520735,5521966,5523177,5524241,5525328,5526365,5527364,5528259,5529061,5529729,5530350,5530843,5532119,5533444,5533832,5534293,5534908,5535586,5536319,5537133,5537988,5538933,5540032,5541090,5542172,5543609,5545145,5546610,5548082,5549642,5551127,5552589,5553831,5555129,5556473,5557840,5559193,5560589,5562003,5563469,5564808,5566107,5567470,5568881,5570270,5571567,5572896,5574194,5575484,5576913,5578428,5579966,5581591,5582988,5584449,5585838,5587182,5588359,5589597,5590845,5592001,5593146,5594230,5595281,5596285,5597179,5598067,5598769,5599461,5599901,5600700,5602330,5603993,5605612,5607357,5608828,5610574,5612404,5613749,5615364,5616849,5618324,5619961,5621516,5622546,5623984,5625612,5627238,5629034,5630334,5631984,5633533,5635076,5637053,5639101,5641063,5643111,5645072,5647035,5649006,5651054,5653083,5655117,5657165,5658955,5660047,5661802,5663642,5665338,5666729,5668424,5670398,5672446,5674494,5676542,5678590,5680638,5682686,5684734,5686782,5688830,5690878,5692926,5694974,5697022,5699070,5701118,5703166,5705214,5707262,5709310,5711358,5713406,5715454,5717502,5719550,5721587,5722796,5723746,5724527,5725308,5726205,5727189,5728242,5729085,5729892,5730884,5731699,5732647,5733454,5734326,5735161,5735978,5737000,5737838,5738641,5739525,5740359,5741690,5742682,5743586,5744487,5745483,5746604,5747697,5748772,5749827,5750538,5751177,5752275,5753518,5754818,5756066,5757560,5758075,5758649,5759290,5759902,5760496,5761039,5762100,5763101,5764132,5764957,5765466,5766021,5766865,5767386,5768137,5769100,5769926,5770623,5771207,5771958,5772632,5773281,5774465,5775242,5776346,5776984,5777734,5778267,5778824,5779366,5780060,5780839,5781646,5782467,5783086,5783754,5784689,5785801,5786688,5787630,5788467,5789416,5790362,5790907,5791909,5792560,5793481,5794509,5795416,5796193,5796964,5797946,5798206,5798819,5799588,5800616,5801015,5801566,5802361,5803074,5803727,5804295,5804943,5805610,5806549,5807322,5808099,5808726,5809361,5809969,5810884,5812754,5814410,5815977,5817438,5818843,5820220,5821683,5823237,5825244,5826987,5828781,5830366,5831778,5833213,5834609,5836107,5837658,5839706,5841324,5842935,5844655,5846324,5847930,5849555,5851298,5853055,5854859,5856611,5858326,5860053,5861475,5862692,5863904,5865178,5866796,5868402,5870064,5871840,5873606,5875341,5877054,5878750,5880521,5882242,5883930,5885644,5887333,5889107,5890851,5892578,5894295,5896046,5897785,5899551,5901260,5903045,5904740,5906319,5907905,5909431,5910734,5912063,5913343,5914836,5916362,5917927,5919576,5921203,5922799,5924498,5925991,5927510,5929150,5930761,5932347,5934330,5935918,5937374,5938867,5940412,5941917,5943385,5944912,5946403,5947849,5949367,5950967,5952603,5954012,5955574,5957251,5958926,5960620,5962414,5964165,5965805,5967543,5969118,5970692,5972247,5973770,5975369,5976989,5978576,5980171,5981795,5983406,5984988,5986538,5988084,5989692,5991363,5992927,5994577,5996133,5997698,5999295,6000956,6002566,6004133,6005492,6006655,6008092,6009594,6011043,6012402,6013877,6015402,6016968,6018582,6020090,6021474,6022965,6024809,6026519,6027763,6028968,6030188,6031426,6032663,6033937,6035179,6036435,6037691,6038984,6040283,6041818,6043099,6044397,6045685,6047002,6048317,6049617,6050930,6052152,6053431,6054705,6055953,6057194,6058485,6059714,6060965,6062214,6063472,6064708,6065928,6067115,6068333,6069564,6070789,6072033,6073255,6074501,6075742,6076994,6078238,6079508,6080796,6082103,6083635,6084961,6086226,6087505,6088829,6090146,6091454,6092736,6093967,6095257,6096531,6097788,6099276,6101310,6103033,6104794,6106586,6108376,6110170,6111973,6113748,6115498,6117298,6119096,6120827,6122559,6124237,6125961,6127632,6129240,6130867,6132460,6134118,6135784,6137436,6139037,6140703,6142416,6144137,6145865,6147631,6149353,6151159,6152924,6154705,6156443,6158184,6159915,6161551,6163208,6164903,6166538,6168253,6169882,6171541,6173238,6174934,6176636,6178347,6180102,6181820,6183584,6185353,6187118,6188856,6190600,6192342,6194094,6195868,6197612,6199382,6200159,6201605,6203537,6205585,6207633,6209681,6211729,6213777,6215825,6217873,6219921,6221969,6224017,6226065,6228113,6230161,6232209,6234266,6236314,6238362,6240410,6242458,6244506,6246554,6248602,6250650,6252698,6254746,6256794,6258842,6260890,6262938,6264986,6267034,6269082,6271130,6273178,6275226,6277274,6279322,6281370,6283418,6285466,6287514,6289562,6291610,6293658,6295706,6297754,6299802,6301850,6303898,6305946,6307994,6310042,6312090,6314138,6316186,6318243,6320291,6322339,6324387,6326435,6328483,6330531,6332579,6334627,6336675,6338723,6340771,6342819,6344867,6346915,6348963,6351011,6353059,6355107,6357155,6359203,6361251,6363299,6365347,6367395,6369443,6371491,6373539,6375587,6377635,6379683,6381731,6383779,6385827,6387875,6389923,6391971,6394019,6396067,6398115,6400163,6402211,6404259,6406307,6408355,6410403,6412451,6414499,6416547,6418595,6420643,6422691,6424739,6426787,6428835,6430883,6432931,6434979,6437027,6439075,6441123,6443171,6445219,6447267,6449315,6451363,6453411,6455459,6457507,6459555,6461603,6463651,6465699,6467747,6469795,6471843,6473891,6475939,6477987,6480035,6482083,6484131,6486179,6488227,6490275,6492323,6494371,6496419,6498467,6500515,6502563,6504611,6506659,6508707,6510755,6512803,6514851,6516899,6518947,6520995,6523043,6525091,6527139,6529187,6531235,6533283,6535331,6537379,6539427,6541475,6543523,6545571,6547619,6549667,6551715,6553763,6555811,6557859,6559907,6561955,6564003,6566051,6568099,6570147,6572195,6574243,6576291,6578339,6580387,6582435,6584483,6586531,6588579,6590627,6592675,6594723,6596771,6598819,6600867,6602915,6604963,6607011,6609059,6611107,6613155,6615203,6617251,6619299,6621347,6623395,6625443,6627491,6629539,6631587,6633635,6635683,6637731,6639779,6641827,6643875,6645923,6647971,6650019,6652067,6654115,6656163,6658211,6660259,6662307,6664355,6666403,6668451,6670499,6672547,6674595,6676643,6678691,6680739,6682787,6684835,6686883,6688931,6690979,6693027,6695075,6697123,6699171,6701219,6703267,6705315,6707363,6709411,6711459,6713507,6715555,6717603,6719651,6721699,6723747,6725795,6727843,6729891,6731939,6733987,6736035,6738083,6740131,6742179,6744227,6746275,6748323,6750371,6752419,6754467,6756515,6758563,6760611,6762659,6764707,6766755,6768803,6770851,6772899,6774947,6776995,6779043,6781091,6783139,6785187,6787235,6789283,6791331,6793379,6795427,6797475,6799523,6801571,6803619,6805667,6807715,6809763,6811811,6813859,6815907,6817955,6820003,6822051,6824099,6826147,6828195,6830243,6832291,6834339,6836387,6838435,6840483,6842531,6844579,6846627,6848675,6850723,6852771,6854819,6856867,6858915,6860963,6863011,6865059,6867107,6869155,6871203,6873251,6875299,6877347,6879395,6881443,6883491,6885539,6887587,6889635,6891683,6893731,6895779,6897827,6899875,6901923,6903971,6906019,6908067,6910115,6912163,6914211,6916259,6918307,6920355,6922403,6924451,6926499,6928547,6930595,6932643,6934691,6936739,6938787,6940835,6942883,6944931,6946979,6949027,6951075,6953123,6955171,6957219,6959267,6961315,6963363,6965411,6967459,6969507,6971555,6973603,6975651,6977699,6979747,6981795,6983843,6985891,6987939,6989987,6992035,6994083,6996131,6998179,7000227,7002275,7004323,7006371,7008419,7010467,7012515,7014563,7016611,7018659,7020707,7022755,7024803,7026851,7028899,7030947,7032995,7035043,7037091,7039139,7041187,7043235,7045283,7047331,7049379,7051427,7053475,7055523,7057571,7059619,7061667,7063715,7065763,7067811,7069859,7071907,7073955,7076003,7078051,7080099,7082147,7084195,7086243,7088291,7090339,7092387,7094435,7096483,7098531,7100579,7102627,7104675,7106723,7108771,7110819,7112867,7114915,7116963,7119011,7121059,7123107,7125155,7127203,7129251,7131299,7133347,7135395,7137443,7138257,7138915,7139501,7140097,7140685,7141255,7141873,7142501,7143138,7143713,7144311,7145066,7146389,7146834,7147415,7148060,7148631,7149057,7149437,7149858,7151129,7152794,7154210,7155220,7156256,7157525,7158693,7159750,7161381,7162621,7163797,7164895,7166613,7168117,7169026,7169926,7171058,7171405,7171856,7172331,7172817,7173322,7173750,7174250,7174605,7174972,7175226,7175503,7175813,7176794,7178843,7180403,7182208,7183702,7185428,7186746,7187852,7188980,7189935,7191148,7192309,7193310,7194483,7195372,7196481,7197595,7198130,7199315,7200535,7201621,7202680,7203915,7204768,7205995,7206879,7207868,7209061,7210012,7211181,7211806,7212848,7213739,7214723,7215985,7216854,7217974,7218892,7220040,7221098,7222216,7223529,7224523,7225599,7226696,7227663,7228712,7229454,7230253,7230566,7230878,7231355,7232333,7233251,7234180,7235065,7236723,7237688,7239524,7240498,7242533,7244212,7245719,7247221,7248823,7250434,7252005,7253625,7255263,7256950,7258572,7260202,7261873,7263536,7265170,7266791,7268437,7270058,7271685,7273346,7275072,7276759,7278441,7280202,7281969,7283715,7285396,7287120,7288886,7290675,7292457,7294285,7296186,7298084,7299968,7301857,7303738,7305588,7307360,7309156,7310971,7312779,7314620,7316395,7318220,7320027,7321819,7323491,7325002,7326596,7328232,7329831,7331356,7332776,7334339,7335952,7337607,7339261,7341142,7342954,7344379,7345828,7347318,7348876,7350340,7351845,7353368,7354776,7356252,7357808,7359427,7360867,7362362,7364012,7365699,7367337,7369087,7370885,7372526,7374260,7375902,7377481,7379022,7380518,7382106,7383737,7385316,7386917,7388520,7390151,7391730,7393263,7394823,7396451,7398083,7399696,7401326,7402917,7404440,7406001,7407612,7409249,7410838,7412298,7413468,7414858,7416356,7417838,7419203,7420634,7422124,7423704,7425305,7426889,7428309,7429752,7431405,7433229,7433773,7434395,7434988,7435596,7436308,7437077,7437718,7438635,7439567,7440593,7441692,7442654,7443871,7445132,7446456,7447781,7449089,7450446,7451782,7453153,7454606,7456042,7457433,7458830,7460362,7461869,7463278,7464691,7466099,7467314,7468303,7469343,7470233,7471486,7472795,7474073,7475228,7476281,7477279,7478187,7479238,7480262,7481031,7481996,7482952,7483854,7484619,7485465,7486361,7487091,7487462,7488224,7488887,7489520,7490269,7490834,7491380,7493428,7494241,7494996,7495828,7496742,7497699,7498761,7499855,7500971,7502079,7503223,7504241,7505131,7505951,7506692,7507871,7509199,7510583,7512025,7513481,7514966,7516471,7517975,7519249,7520805,7522372,7524000,7525514,7527062,7528688,7530424,7532104,7533720,7535204,7536754,7538281,7539849,7541347,7542829,7544201,7545472,7546750,7547941,7548951,7549921,7551012,7552017,7553162,7554263,7555429,7556644,7557847,7558896,7559816,7560598,7561417,7562213,7562993,7563683,7565086,7566807,7568855,7570903,7572951,7574999,7577047,7579095,7581143,7583191,7585239,7587287,7589335,7591383,7593431,7595479,7597527,7599575,7601623,7603671,7605719,7607767,7609815,7611863,7613911,7615959,7618007,7620055,7622103,7624151,7626199,7628247,7630295,7632343,7634391,7636439,7638487,7640535,7642583,7644631,7646679,7648727,7650775,7652823,7654871,7656919,7658967,7661015,7663063,7665111,7667159,7669207,7671255,7673303,7675351,7677399,7679447,7681495,7683543,7685591,7687639,7689687,7691735,7693783,7695831,7697887,7699935,7701979,7704027,7706075,7708123,7710171,7712219,7714267,7716315,7718363,7720411,7722459,7724507,7726555,7728603,7730651,7732699,7734747,7736795,7738843,7740891,7742939,7744987,7747035,7749083,7751131,7753179,7755227,7757275,7759323,7761371,7763419,7765467,7767515,7769563,7771611,7773659,7775707,7777755,7779803,7781851,7783908,7785956,7788004,7790052,7792100,7793688,7794987,7796251,7797380,7798244,7798576,7799174,7800263,7801253,7802352,7803413,7804462,7805104,7806143,7807668,7809236,7810549,7811977,7813284,7814656,7816036,7817049,7818222,7819381,7820348,7822034,7823300,7824644,7825981,7827172,7828384,7829587,7830707,7831975,7833393,7834845,7836292,7837612,7838912,7840162,7841418,7842905,7844426,7846074,7847647,7849227,7850799,7852358,7853907,7855484,7857016,7858527,7860017,7861493,7862910,7864295,7865631,7867101,7869154,7871202,7873250,7875298,7877346,7879394,7881415,7883351,7885399,7887447,7889495,7891543,7893591,7895639,7897687,7899735,7901783,7903831,7905879,7907927,7909975,7912023,7914071,7916119,7918167,7920215,7922263,7924311,7926359,7928407,7930455,7932503,7934557,7936605,7938660,7940689,7942685,7944595,7946643,7948691,7950739,7952787,7954835,7956883,7958931,7960979,7963027,7965075,7967123,7969171,7971219,7973267,7975315,7977363,7979411,7981459,7983507,7985555,7987603,7989651,7991699,7993747,7995795,7997843,7999891,8001939,8003987,8006035,8008083,8010131,8012179,8014227,8016275,8018323,8020371,8022419,8024467,8026515,8028563,8030611,8032659,8034707,8036755,8038803,8040851,8042899,8044947,8046995,8049043,8051091,8053139,8055187,8057235,8059283,8061331,8063379,8065427,8067475,8069523,8071571,8073619,8075667,8077715,8079763,8081811,8083859,8085907,8087955,8090003,8092051,8094099,8096147,8098195,8100243,8102291,8104339,8106387,8108435,8110483,8112531,8114078,8115404,8116843,8118225,8119586,8120951,8122399,8123858,8125335,8126997,8128681,8130236,8131676,8133113,8134418,8135933,8137574,8139305,8141062,8142714,8144358,8145871,8147317,8148882,8150523,8152181,8153854,8155505,8157096,8158651,8160113,8161693,8163620,8165665,8167713,8169693,8171741,8173769,8175808,8177856,8179869,8181884,8183932,8185925,8187973,8189991,8192017,8194065,8196122,8198168,8200216,8202264,8204284,8206302,8208122,8210170,8212216,8214199,8215737,8217309,8218902,8220512,8222098,8223710,8224579,8224799,8225015,8225233,8225446,8225659,8226042,8226261,8226481,8226730,8226951,8227171,8228342,8230216,8231477,8232748,8234138,8235455,8236554,8237720,8238915,8240130,8241305,8242554,8243746,8244847,8245979,8247980,8249691,8250432,8251702,8253750,8255008,8255596,8257206,8259254,8260196,8260948,8262943,8264631,8265312,8266467,8267461,8268369,8269285,8270215,8271166,8272120,8273055,8273645,8274604,8275418,8276142,8277086,8278044,8279153,8280059,8281015,8281899,8282747,8283741,8284766,8285777,8286818,8287868,8288875,8289712,8290949,8291904,8292982,8294261,8294957,8295712,8296146,8296557,8297532,8298561,8299573,8300516,8301030,8301369,8301709,8302045,8302466,8302830,8303325,8303851,8304699,8305946,8307076,8307977,8309202,8310543,8312089,8313632,8314939,8316308,8317337,8318575,8320086,8321482,8322673,8323848,8325018,8326472,8327914,8329410,8330891,8332012,8333126,8334280,8335530,8336989,8338373,8339931,8341433,8342540,8343752,8344862,8346152,8347643,8349070,8350645,8352139,8353215,8354328,8355431,8356817,8358216,8359707,8361212,8362595,8363638,8364847,8365965,8367360,8368810,8370311,8371809,8372846,8374110,8375300,8376641,8377979,8379378,8380307,8380918,8381472,8382103,8382803,8383465,8384146,8384789,8385427,8386391,8387335,8388167,8388953,8389667,8390585,8391548,8392352,8392932,8393869,8394741,8395609,8396156,8396787,8397532,8398102,8398890,8399693,8400410,8401223,8401898,8402736,8403295,8403975,8404599,8405032,8405748,8406362,8407045,8407832,8408344,8409275,8409818,8410283,8410921,8411678,8412339,8412845,8413344,8413991,8414443,8414912,8415367,8416003,8416609,8417381,8417813,8418250,8419171,8420089,8421147,8422281,8422776,8423242,8423775,8424474,8425202,8426161,8426831,8427464,8428088,8428722,8429659,8430730,8431735,8432761,8433320,8433837,8434758,8435562,8436176,8436789,8437475,8438299,8439041,8439374,8439927,8440684,8441390,8442323,8442992,8444086,8444753,8445633,8446424,8447267,8448155,8449055,8449880,8450736,8451638,8452515,8453381,8454224,8455179,8455904,8456708,8457578,8458419,8459311,8460123,8461144,8461810,8462795,8463754,8464731,8465698,8466651,8467598,8468554,8469519,8470495,8471440,8472402,8473370,8474330,8475237,8476132,8477004,8478155,8478939,8479775,8480348,8481170,8482113,8482945,8483745,8484569,8485374,8486021,8486828,8487659,8488548,8489261,8490055,8490789,8491560,8492371,8493047,8493657,8494403,8495729,8496438,8497196,8498773,8500538,8502385,8504141,8506149,8508015,8510072,8512120,8514168,8515935,8517290,8518969,8520734,8522786,8524834,8526699,8528503,8530551,8532433,8534188,8536239,8538287,8540335,8542306,8544136,8546060,8547987,8549808,8551790,8553800,8555605,8557546,8558832,8560010,8560601,8561246,8561724,8563553,8565601,8567550,8569110,8570501,8571707,8572820,8574104,8576105,8577927,8579152,8580431,8581518,8582599,8584293,8585749,8587148,8588214,8588739,8588881,8589323,8591308,8593356,8595404,8597452,8599500,8601548,8603596,8605644,8607692,8609740,8611788,8613843,8615891,8617911,8619848,8621212,8623260,8625308,8627365,8629413,8631461,8633509,8635565,8637613,8638259,8638328,8640351,8642374,8644422,8646478,8648464,8649830,8651754,8653755,8655797,8657786,8659787,8661835,8663883,8665931,8667979,8670006,8671866,8673914,8675955,8677865,8679913,8681936,8683974,8686028,8688071,8690119,8692175,8694201,8695999,8697462,8699192,8701078,8703126,8705174,8707222,8709270,8711318,8713366,8715414,8717462,8718527,8719545,8720731,8721854,8723359,8724444,8726148,8727631,8728776,8730341,8731532,8732846,8733893,8734992,8736067,8737032,8738234,8739430,8741010,8742873,8744802,8746697,8748585,8750498,8751834,8752906,8753907,8755023,8756175,8757957,8759124,8760153,8761173,8762333,8763717,8764718,8765804,8767095,8768294,8769629,8770679,8772436,8774484,8776532,8778506,8780540,8782513,8784561,8786588,8788560,8790608,8792583,8794631,8796664,8798633,8800689,8802663,8804711,8806767,8808795,8810843,8812891,8814923,8816962,8818955,8821003,8823043,8825016,8827073,8829108,8831086,8833143,8835200,8837178,8839226,8841274,8843252,8845309,8847357,8849338,8851375,8853423,8855394,8857442,8859464,8861496,8863521,8865500,8867548,8869596,8871644,8873672,8875696,8877753,8879801,8881849,8883897,8885945,8888002,8890050,8892072,8894031,8896079,8898127,8900175,8902223,8904271,8906319,8908367,8910415,8912463,8914363,8916411,8918459,8920507,8922555,8924603,8926651,8928699,8930747,8932644,8934692,8936740,8938788,8940836,8942884,8944932,8946980,8948875,8950923,8952971,8955019,8957067,8959115,8961163,8963064,8965112,8967160,8969208,8971256,8973304,8975352,8977400,8979291,8981339,8983387,8985435,8987483,8989531,8991579,8993627,8995523,8997571,8999619,9001667,9003715,9005763,9007811,9009859,9011907,9013955,9015654,9017454,9019133,9020780,9022635,9023840,9024776,9026670,9028670,9030697,9032745,9034714,9036696,9038725,9040556,9042515,9044522,9046524,9048490,9050508,9052545,9053921,9055269,9056775,9058224,9059543,9061472,9062737,9063880,9065003,9065916,9067398,9068913,9070408,9071897,9073362,9074010,9074716,9075405,9076116,9076840,9077502,9078154,9078767,9079237,9079804,9080336,9081571,9083428,9085116,9086820,9088508,9090202,9092082,9093803,9095539,9097290,9098548,9099403,9101218,9102878,9104433,9105909,9107403,9108309,9108843,9109096,9109534,9109974,9110449,9110747,9111370,9113011,9114707,9116395,9118071,9119872,9121664,9123468,9125034,9126453,9128102,9129561,9131041,9132556,9133195,9133681,9134170,9134706,9135092,9135474,9135962,9136484,9136988,9137949,9139807,9141480,9143152,9144835,9146560,9148433,9150224,9151953,9153224,9154793,9156491,9157969,9159441,9160927,9162416,9163310,9163958,9164611,9165189,9165783,9166281,9166891,9167332,9167964,9168444,9169015,9169494,9169860,9170723,9172697,9174394,9176076,9177755,9179419,9181115,9182947,9184810,9186519,9188202,9189974,9191158,9192495,9194178,9195896,9197381,9198863,9200344,9201540,9202123,9202725,9203331,9203901,9204457,9205078,9205663,9206195,9206791,9207336,9207876,9209191,9211070,9212741,9214419,9216085,9217780,9219491,9221418,9223132,9224814,9226520,9227731,9228686,9230462,9232124,9233651,9235139,9236634,9238028,9238624,9239214,9239772,9240273,9240700,9241246,9241837,9242424,9242950,9243354,9243826,9244952,9246772,9248455,9250145,9251821,9253466,9255311,9257056,9258812,9260500,9261999,9262794,9264666,9266342,9267867,9269340,9270600,9270988,9271504,9271948,9272347,9272875,9273382,9273857,9274464,9276322,9277973,9279672,9281331,9283193,9284853,9286554,9288076,9289367,9290943,9292454,9293929,9295385,9296873,9298357,9299765,9300427,9301032,9301533,9302120,9302807,9303355,9303982,9304628,9305166,9305763,9306495,9307191,9307793,9308537,9309223,9309788,9310434,9311031,9311679,9312205,9313013,9315004,9316757,9318421,9320137,9321808,9323469,9325158,9326867,9328579,9330275,9332142,9333994,9335736,9337471,9339156,9340986,9342809,9344594,9345549,9346244,9347143,9348948,9350789,9352445,9354262,9355854,9357328,9358802,9360269,9361733,9362626,9363089,9363524,9364083,9364649,9365260,9365865,9366439,9366926,9367411,9367983,9368498,9369027,9369625,9370426,9372442,9374128,9375825,9377509,9379194,9380885,9382562,9384457,9386220,9387992,9389782,9391572,9393023,9393705,9394893,9396888,9398586,9400294,9401836,9403321,9404811,9406281,9407764,9408406,9409035,9409710,9410338,9410982,9411544,9412011,9412580,9413226,9413859,9414265,9414797,9415279,9415764,9416252,9418029,9419851,9421540,9423224,9424917,9426622,9428329,9430055,9432029,9433720,9435404,9437197,9439010,9440572,9441331,9442781,9444712,9446454,9448035,9449524,9451020,9452503,9453934,9454553,9455091,9455712,9456332,9456976,9457529,9458060,9458330,9458577,9458760,9458989,9459238,9459442,9460902,9462896,9464618,9466296,9468004,9469719,9471446,9473157,9475168,9476965,9478694,9480481,9482261,9484005,9485082,9486735,9488368,9489951,9491401,9492514,9493192,9493803,9494468,9495117,9496723,9498402,9500155,9501886,9503103,9504720,9506179,9507651,9508905,9509451,9510006,9510572,9511085,9511543,9512037,9512483,9512997,9514042,9515859,9517516,9519200,9520854,9522719,9524409,9526101,9527062,9528632,9530331,9531806,9533276,9534742,9536106,9536685,9537278,9537889,9538443,9539002,9539582,9540153,9540555,9541126,9541715,9542267,9543960,9545674,9547349,9549034,9550715,9552404,9554280,9555970,9557731,9559470,9560268,9561757,9563597,9565173,9566638,9568104,9569363,9569969,9570581,9570911,9571366,9571892,9572332,9572627,9572919,9573318,9573857,9575641,9577365,9579056,9580731,9582356,9584025,9585895,9587619,9589308,9590856,9591647,9593487,9595190,9596652,9598102,9599537,9600513,9600779,9601121,9601444,9601843,9602283,9602749,9603069,9603392,9603840,9604260,9604652,9606287,9607964,9609598,9611237,9612911,9614557,9616411,9618133,9619774,9621450,9622551,9624232,9625789,9627271,9628775,9629387,9629902,9630403,9630948,9631517,9632159,9632764,9633402,9633889,9635186,9636948,9638621,9640277,9641958,9643836,9645493,9647178,9648926,9649762,9651596,9653240,9654703,9656185,9657668,9659106,9659690,9660181,9660731,9661237,9661836,9662420,9663049,9663467,9663904,9664436,9664904,9665406,9665835,9667720,9669466,9671133,9672820,9674492,9676174,9677848,9679792,9681463,9683118,9684843,9686543,9687323,9688778,9690569,9692293,9693730,9695209,9696697,9698168,9699655,9701154,9702643,9704141,9705620,9706574,9707212,9707971,9708634,9709172,9709842,9710351,9711106,9711668,9712286,9712771,9713440,9714134,9714754,9715372,9716031,9716634,9717262,9717574,9718272,9718896,9719585,9720103,9720490,9721099,9721644,9721937,9722219,9722844,9724889,9726916,9728672,9730401,9732112,9733799,9735501,9737169,9738860,9740556,9742233,9743896,9745598,9747292,9749295,9751227,9752908,9754639,9756306,9757963,9759674,9761389,9763102,9764769,9766360,9767141,9767953,9769349,9771228,9773050,9773729,9774384,9775386,9775635,9777296,9778953,9780611,9782117,9783621,9785119,9786636,9788143,9789646,9791132,9792613,9794101,9795578,9796633,9797332,9798159,9798890,9799497,9800239,9800906,9801604,9802372,9803033,9803593,9804305,9804969,9805575,9806238,9806887,9807645,9808299,9808960,9809560,9810034,9810576,9811101,9811456,9811708,9812081,9812609,9813186,9813591,9813908,9814168,9814314,9815430,9817478,9819429,9821243,9822933,9824630,9826334,9828009,9829697,9831381,9833092,9834738,9836418,9838083,9839747,9841440,9843136,9845010,9847058,9848862,9850622,9852351,9854067,9855776,9857435,9859123,9860784,9862410,9864121,9865854,9867230,9868167,9869115,9870934,9872829,9874519,9876299,9878087,9879695,9881182,9882666,9884144,9885633,9886212,9886746,9887291,9887826,9888292,9888844,9889266,9889756,9890170,9890717,9890783,9891367,9891938,9892963,9894910,9896579,9898263,9899927,9901617,9903312,9905170,9906899,9908618,9910292,9912016,9913333,9914426,9916214,9917965,9919425,9920871,9922330,9923811,9925322,9926820,9928303,9929772,9931221,9931816,9932457,9933088,9933727,9934261,9934896,9935576,9936261,9936937,9937557,9938045,9938721,9939350,9940052,9940604,9941302,9941928,9942396,9942985,9943605,9944205,9944624,9945114,9945726,9946993,9949017,9950868,9952567,9954231,9955916,9957608,9959309,9961022,9962710,9964358,9966061,9967842,9969890,9971614,9973282,9974944,9976645,9978374,9980101,9981839,9983476,9984346,9985401,9987197,9988860,9990380,9992034,9993664,9995197,9996667,9998130,9999620,10001104,10002595,10003296,10003805,10004287,10004840,10005544,10006163,10006842,10007434,10008121,10008809,10009394,10009843,10010440,10011163,10011852,10012279,10012664,10014106,10016091,10017771,10019435,10021102,10022779,10024489,10026182,10027857,10029754,10031561,10033249,10034948,10036750,10038495,10040250,10041369,10042837,10044599,10046449,10048027,10049510,10051011,10052486,10053994,10055487,10056970,10058445,10059950,10061448,10062954,10064461,10065959,10066749,10067391,10068083,10068661,10069305,10069923,10070445,10071072,10071706,10072356,10072973,10073542,10074144,10074739,10075317,10075856,10076465,10077019,10077495,10078077,10078710,10079080,10079669,10080262,10080885,10081452,10082000,10082470,10083097,10083671,10084202,10084771,10085402,10085885,10086453,10086873,10087342,10087879,10088393,10088971,10090240,10092279,10094334,10096313,10098027,10099736,10101453,10103153,10104878,10106564,10108275,10109983,10111706,10113413,10115139,10116837,10118547,10120247,10121965,10123677,10125386,10127311,10129359,10131201,10132884,10134612,10136327,10138023,10139701,10141442,10143178,10144846,10146593,10148336,10150115,10151637,10152549,10153419,10154320,10155225,10156876,10158577,10160215,10161793,10163363,10164900,10166387,10167438,10168059,10169800,10171565,10173322,10175004,10176486,10177963,10179444,10180931,10182236,10182909,10183594,10184203,10184762,10185208,10185572,10185967,10186481,10186707,10187169,10187701,10188123,10188843,10190823,10192542,10194224,10195901,10197590,10199258,10200938,10202895,10204635,10206371,10208086,10209807,10210818,10212441,10214196,10215732,10217195,10218675,10219573,10220059,10220582,10220991,10221397,10221712,10222125,10222482,10223196,10225054,10226728,10228397,10230073,10231945,10233669,10235389,10236905,10238325,10239976,10241426,10242908,10244366,10245840,10246890,10247466,10248059,10248668,10249315,10249838,10250386,10250994,10251614,10251991,10252474,10252872,10253408,10253700,10255121,10256961,10258607,10260270,10261939,10263597,10265288,10266959,10268875,10270546,10272257,10273961,10275284,10275723,10276788,10278197,10279537,10281147,10282669,10284155,10285541,10285993,10286144,10286581,10286918,10287225,10287490,10287772,10288222,10289974,10291617,10293261,10294913,10296725,10298374,10299996,10300898,10302452,10303966,10305415,10306891,10307440,10308034,10308397,10308857,10309362,10309825,10310599,10312399,10314062,10315718,10317535,10319278,10320364,10322032,10323529,10325021,10326496,10327978,10329432,10330906,10332391,10333289,10333902,10334520,10335189,10335791,10336274,10336777,10337320,10337933,10338264,10338808,10339253,10339802,10340269,10340764,10341151,10341543,10342053,10342299,10343201,10345133,10346945,10348600,10350288,10351974,10353671,10355352,10357010,10358679,10360346,10362354,10364051,10365765,10367549,10369261,10370926,10372581,10373678,10374501,10375966,10377578,10379051,10380727,10382388,10383903,10385385,10386868,10388351,10389136,10389584,10389903,10390423,10390887,10391355,10391623,10392096,10392640,10393097,10393513,10393824,10394182,10394706,10396625,10398329,10399981,10401640,10403296,10404944,10406612,10408558,10410218,10411915,10413576,10415223,10415863,10416921,10418446,10420160,10421699,10423180,10424489,10424994,10425510,10425887,10426029,10426611,10426961,10427512,10429306,10431015,10432709,10434548,10436330,10438085,10439141,10440846,10442837,10444893,10446945,10449000,10451054,10452732,10454339,10455894,10457311,10458298,10459104,10459967,10460711,10461546,10462462,10463833,10465840,10467846,10469747,10471655,10473255,10474413,10475670,10476988,10478393,10479720,10480554,10481956,10482680,10483422,10484608,10485761,10486792,10487882,10488854,10489983,10490965,10491960,10492871,10493947,10495078,10496166,10497181,10497942,10498886,10499878,10500776,10501676,10502618,10503438,10504437,10505350,10506298,10507361,10508364,10509310,10510402,10511439,10512389,10513276,10514084,10515065,10516071,10516927,10517953,10518866,10519810,10520728,10521597,10522620,10523627,10524621,10525708,10526559,10527548,10528643,10529662,10530696,10531679,10532709,10533793,10534885,10535985,10537146,10538238,10539387,10540492,10541633,10542713,10543887,10545019,10546203,10547256,10548321,10549309,10549985,10551079,10552275,10553363,10554319,10555397,10556582,10557715,10558748,10559883,10560894,10561931,10562994,10564050,10565351,10566480,10567569,10568641,10569750,10570884,10571959,10573112,10574251,10575408,10576545,10577582,10578714,10579883,10581022,10582213,10583299,10584483,10585701,10586843,10587936,10589145,10590283,10591633,10593681,10595228,10596287,10597321,10598283,10599261,10600247,10601326,10602358,10603381,10604251,10605448,10606606,10607449,10608538,10609544,10610553,10611603,10612282,10613129,10613873,10614727,10615696,10617119,10618537,10620074,10621496,10623454,10625502,10627550,10629506,10630911,10632914,10634956,10637004,10639052,10641099,10642884,10644932,10646637,10648530,10650587,10652635,10654683,10656731,10658779,10660827,10662875,10664928,10666962,10669006,10671028,10673054,10675107,10677132,10679101,10680937,10682646,10684539,10686587,10688635,10690683,10692731,10694779,10696827,10698875,10700923,10702971,10705019,10707067,10709081,10711046,10712893,10714719,10716218,10717767,10719735,10721642,10723448,10725310,10727343,10729397,10731453,10733501,10735549,10737606,10739654,10741702,10743750,10745798,10747846,10749894,10751942,10753999,10756011,10757635,10758626,10760612,10762660,10764708,10766756,10768804,10770852,10772900,10774948,10776996,10779044,10781092,10783140,10785188,10787236,10789284,10791332,10793380,10795428,10797476,10799531,10801283,10803122,10805179,10807227,10809281,10811198,10812829,10814251,10815499,10816529,10817330,10817845,10819479,10821527,10823575,10825623,10827671,10829728,10831785,10833833,10835889,10837945,10839870,10841396,10842329,10844137,10846190,10848214,10850190,10852075,10853815,10855366,10856634,10857529,10858168,10858477,10858585,10860380,10862428,10864476,10866529,10868580,10870628,10872676,10874733,10876781,10878836,10880884,10882932,10884969,10886986,10888827,10890491,10892000,10893205,10895215,10897263,10899311,10901359,10903407,10905455,10907503,10909556,10911604,10913660,10915714,10917765,10919780,10921718,10923474,10924999,10926095,10927093,10928914,10930777,10932782,10934830,10936886,10938934,10940908,10942632,10944038,10944811,10946846,10948892,10950940,10952961,10954799,10956847,10958895,10960747,10961614,10961657,10961881,10961919,10962331,10964379,10966427,10968482,10970530,10972586,10974640,10976688,10978727,10980697,10982719,10984767,10986815,10988863,10990869,10992926,10994974,10997022,10999070,11001118,11003166,11005223,11007271,11009319,11011327,11012877,11014829,11016871,11018400,11020020,11022070,11024104,11025767,11027135,11028597,11030427,11032456,11034506,11036561,11038609,11040665,11042705,11044625,11046157,11046711,11047409,11049457,11051505,11053561,11055616,11057669,11059725,11061781,11063838,11065886,11067934,11069983,11071868,11073702,11075653,11077297,11079190,11081238,11083286,11085342,11087390,11089447,11091495,11093543,11095600,11097502,11099550,11101598,11103646,11105694,11107742,11109799,11111847,11113895,11115515,11117531,11119490,11121427,11122446,11124500,11126548,11128596,11130503,11132136,11134184,11136232,11138280,11140328,11142381,11144429,11146477,11148525,11150581,11152486,11153886,11155405,11157297,11159258,11161303,11163340,11165387,11167429,11169450,11171506,11173563,11175619,11177660,11179678,11181697,11183675,11185665,11187637,11189690,11191741,11193796,11195831,11197873,11199901,11201934,11203980,11206031,11208079,11210133,11212154,11214062,11215869,11217489,11218901,11220246,11221430,11222653,11223854,11224921,11225963,11227079,11228076,11229079,11230033,11230874,11231776,11232533,11233235,11233851,11234303,11234516,11234694,11234834,11234894,11234955,11236504,11238531,11240573,11242621,11244667,11246617,11248353,11250055,11251364,11252070,11254107,11256155,11258203,11260251,11262161,11264209,11266257,11268305,11270277,11272325,11274373,11276421,11278469,11280468,11282516,11284573,11286630,11288686,11290730,11292778,11294826,11296875,11298930,11300986,11303031,11305001,11306907,11308769,11310450,11312255,11313928,11315746,11317794,11319842,11321890,11323946,11325994,11328045,11330012,11331869,11333923,11335971,11338028,11340085,11342139,11344196,11346244,11348155,11350203,11352251,11354166,11355827,11357586,11359642,11361699,11363368,11365066,11367123,11369171,11371227,11373275,11375323,11377371,11379423,11381480,11383517,11385475,11387201,11388693,11390205,11391495,11392745,11394076,11396124,11398172,11400229,11402278,11404324,11406260,11408030,11409236,11409580,11410463,11411849,11413537,11415398,11417349,11419275,11421196,11423191,11425146,11426937,11428537,11429934,11431114,11431794,11432194,11433529,11435522,11437566,11439164,11440262,11441717,11443765,11445813,11447861,11449909,11451957,11454005,11456053,11458101,11460050,11462069,11464111,11466013,11467566,11468682,11469951,11471999,11473925,11475409,11476965,11479013,11481061,11483109,11485160,11487214,11489267,11491321,11493375,11495309,11497230,11498804,11500839,11502699,11503956,11504868,11506915,11508963,11511011,11513059,11515107,11517155,11519203,11521117,11522955,11525011,11527059,11529107,11531155,11533203,11535251,11537237,11538372,11539704,11541514,11543534,11545590,11547646,11549694,11551193,11552640,11554598,11556529,11558577,11560625,11562673,11564730,11566763,11568669,11570035,11571119,11571936,11572503,11572902,11573197,11573316,11574844,11576892,11578940,11580988,11583036,11585084,11587132,11589180,11591228,11593276,11595324,11597372,11599420,11601468,11603516,11605564,11607612,11609660,11611022,11613024,11615072,11617120,11619168,11621216,11623264,11625312,11627360,11628721,11628932,11630123,11631798,11633726,11635775,11637823,11639871,11641919,11643967,11646015,11648063,11650111,11652159,11654214,11656124,11657785,11659300,11660666,11661912,11663024,11664029,11664993,11665701,11666533,11667504,11668479,11669191,11670706,11672746,11674803,11676851,11678899,11680947,11682995,11685043,11687091,11689139,11691187,11693235,11695283,11697331,11699281,11700625,11701436,11702102,11703403,11705451,11707499,11709556,11711604,11713220,11714817,11716869,11718681,11720036,11721099,11721665,11722478,11723327,11725375,11727323,11728644,11729059,11730817,11732718,11734708,11736754,11738809,11740857,11742913,11744952,11746990,11748516,11750325,11752126,11754083,11756034,11758089,11760137,11762185,11764233,11766281,11768329,11770386,11772442,11774450,11776239,11777775,11778776,11779438,11780933,11782966,11785014,11787062,11789110,11791158,11793206,11795254,11797311,11799368,11801359,11803137,11804640,11805774,11806753,11807070,11807366,11809315,11811361,11813341,11815258,11817087,11818820,11820506,11822554,11824601,11826395,11827984,11829287,11831063,11832796,11834783,11836831,11838764,11840820,11841812,11843860,11845584,11847445,11849280,11851328,11853006,11854938,11856368,11857823,11858945,11860459,11862475,11864516,11866509,11868379,11870351,11872304,11874220,11876268,11878316,11880368,11882158,11883258,11884386,11886434,11888482,11890530,11892578,11894626,11896030,11896946,11899003,11901051,11903099,11905147,11906780,11907188,11908831,11910879,11912917,11914965,11917013,11919061,11921109,11923114,11925152,11927200,11928720,11930728,11932776,11934501,11936558,11938606,11940186,11942197,11944245,11945790,11947080,11948854,11950499,11951139,11953155,11955203,11957251,11959297,11960808,11960963,11961072,11962245,11964267,11966322,11968377,11970425,11972473,11974530,11976584,11978503,11980551,11982599,11984576,11986606,11988662,11990598,11992646,11994659,11996707,11998764,12000802,12002842,12004721,12006585,12008318,12010167,12011669,12013455,12014650,12016289,12017983,12019585,12020870,12022133,12024123,12026071,12027888,12029837,12031885,12033933,12035981,12038017,12039546,12040578,12041311,12042601,12044561,12045840,12047387,12049201,12051249,12053297,12055345,12057393,12059449,12061497,12063545,12065593,12067650,12069698,12071670,12073480,12075078,12076508,12077703,12078602,12079800,12081848,12083896,12085944,12087992,12090040,12091769,12092308,12094283,12096339,12098387,12100404,12102281,12104304,12106360,12108417,12110465,12112513,12114569,12116624,12118680,12120652,12122473,12123936,12124842,12125593,12127641,12129689,12131737,12133785,12135332,12135586,12136396,12138425,12140473,12142521,12144569,12146624,12148672,12150720,12152768,12154741,12156386,12156677,12157163,12158484,12160406,12162454,12164502,12166550,12168598,12170646,12172703,12174751,12176806,12178863,12180919,12182930,12184846,12186633,12188409,12190156,12191735,12193165,12194443,12195659,12196902,12197986,12198802,12199365,12199909,12200411,12200892,12201374,12201808,12202187,12202674,12203114,12203592,12204116,12204657,12204915,12205258,12206072,12207238,12208426,12209683,12210835,12211863,12212860,12213713,12214432,12214972,12215254,12215403,12215557,12216476,12218121,12219958,12221997,12224045,12226093,12228110,12230072,12232092,12233929,12235904,12237693,12239695,12241635,12243394,12244889,12246932,12248989,12251040,12253055,12255091,12257125,12259167,12261219,12263232,12265242,12267222,12269274,12271169,12273146,12275200,12277248,12279301,12281031,12282821,12284850,12286614,12288460,12290503,12292355,12293658,12295291,12297292,12299346,12301367,12303243,12305163,12307117,12308967,12310891,12312897,12314945,12316993,12319050,12320891,12322939,12324981,12326682,12328167,12329796,12331196,12332349,12332806,12333387,12333797,12334185,12334952,12335583,12336611,12338216,12339600,12341018,12342408,12343653,12345072,12346708,12348430,12350216,12352020,12353943,12355927,12357947,12359996,12362052,12364106,12366154,12368211,12370259,12372316,12374364,12376405,12378408,12380372,12382380,12384375,12386276,12388076,12389788,12391512,12393191,12394877,12396396,12397840,12399312,12400731,12402157,12403522,12404815,12406009,12407210,12408386,12409530,12410588,12411566,12412491,12413445,12414876,12416368,12417860,12419330,12420791,12422224,12423773,12425281,12426829,12428346,12429871,12431388,12433003,12434716,12436306,12437892,12439450,12440959,12442537,12444234,12445954,12447766,12449520,12451234,12453047,12454938,12456851,12458683,12460670,12462613,12464555,12466608,12468653,12470701,12472749,12474797,12476845,12478902,12480914,12482835,12484595,12486243,12487438,12488640,12490464,12492404,12494452,12496500,12498548,12500124,12500370,12501134,12503182,12505230,12507287,12508670,12510726,12512009,12513815,12515868,12517576,12518969,12521025,12523073,12525121,12527169,12528707,12530755,12532796,12534434,12535654,12537702,12539750,12541798,12543846,12545894,12547951,12549981,12551992,12554040,12556088,12558136,12560184,12562232,12564280,12566328,12568376,12570424,12572472,12574520,12576530,12578587,12580635,12582692,12584740,12586788,12588827,12590807,12592831,12594869,12596917,12598965,12601002,12603050,12605098,12607146,12609194,12611242,12613290,12615131,12616336,12618384,12620432,12622480,12624528,12626584,12628632,12630689,12632625,12634539,12636414,12637970,12639584,12641058,12642721,12644564,12646202,12647658,12649060,12650208,12651204,12651696,12652944,12654992,12657049,12659097,12661154,12663138,12664853,12666160,12666341,12667136,12669077,12671125,12673107,12674809,12676214,12677920,12679766,12681023,12681221,12681748,12682683,12683054,12683452,12683795,12684199,12684649,12685041,12685421,12685661,12686498,12687383,12688240,12689102,12689613,12690141,12690678,12691119,12691905,12692450,12693115,12693942,12694481,12695030,12695599,12696388,12697408,12697562,12697947,12698574,12698845,12699325,12700269,12701043,12701689,12702192,12702580,12703363,12704159,12705041,12705754,12706595,12707601,12708454,12709420,12710568,12711945,12713028,12713543,12713930,12714390,12714615,12714906,12715293,12715553,12716053,12716591,12717289,12717514,12717771,12718010,12718332,12718467,12718696,12719034,12719234,12719530,12719840,12720120,12720476,12720770,12720994,12721100,12721278,12721473,12721593,12721801,12722584,12723211,12723709,12724126,12724747,12725580,12726507,12727184,12728151,12729300,12730210,12731006,12731833,12732224,12732606,12732969,12733294,12733656,12733904,12734314,12734893,12735254,12735583,12736129,12737139,12737717,12738959,12739561,12740297,12741155,12742179,12742620,12743085,12743663,12744050,12744675,12746420,12748113,12749111,12750239,12751566,12752973,12754419,12755376,12756376,12757322,12758092,12758944,12760287,12760731,12761929,12762837,12763874,12764523,12765516,12765822,12766368,12767003,12767294,12768017,12768385,12768877,12769675,12770472,12771030,12771698,12772258,12772711,12773320,12774457,12775732,12776689,12777656,12778642,12779938,12780867,12781792,12783038,12784640,12785738,12786851,12787539,12788859,12789833,12791289,12792280,12793447,12794182,12795531,12796343,12797284,12798190,12799140,12800178,12801162,12802102,12802595,12803074,12803320,12803669,12804092,12804301,12804578,12804664,12804945,12805251,12805798,12806270,12806814,12807216,12807777,12808419,12809259,12810033,12810822,12811698,12812325,12813430,12814797,12815870,12817182,12818526,12819646,12820513,12821525,12822136,12822534,12823176,12824200,12825391,12826024,12826967,12827409,12827764,12828352,12828916,12829403,12830399,12831545,12832722,12833091,12833688,12834230,12834651,12835241,12835817,12836194,12836640,12836957,12837513,12837893,12838416,12838762,12839347,12839605,12840023,12840725,12841323,12842140,12842420,12843778,12844302,12844877,12845441,12845971,12846388,12847059,12847447,12847680,12848219,12848392,12848838,12849325,12849819,12850606,12851462,12852535,12853531,12854426,12854920,12855444,12855983,12856116,12856375,12856860,12857445,12858028,12858446,12859011,12859439,12859815,12860187,12860753,12861144,12861561,12861968,12862662,12862865,12863184,12863414,12863742,12864025,12864406,12864548,12864759,12865016,12865266,12865448,12865554,12865655,12865875,12865990,12866088,12866224,12866339,12866437,12866670,12867017,12867509,12867776,12867947,12868736,12869573,12870385,12871060,12872024,12872773,12873301,12873910,12874353,12874860,12875107,12876582,12877911,12879016,12880054,12881160,12882312,12883779,12885415,12887131,12888407,12889621,12890597,12891545,12892465,12893853,12895549,12897224,12898466,12899967,12901357,12902496,12903381,12904001,12904562,12905276,12905558,12906172,12906706,12907544,12908360,12908799,12909225,12909526,12909898,12910255,12910598,12910946,12911604,12911801,12912179,12912414,12912903,12913339,12913659,12913888,12914151,12914319,12914459,12914577,12915084,12915737,12916860,12917838,12918587,12918856,12919178,12919664,12920208,12920933,12921342,12921913,12922487,12922673,12923102,12923806,12924821,12925716,12926387,12927011,12927433,12927891,12928669,12929120,12929622,12930043,12930801,12931350,12931895,12932545,12933294,12933775,12934189,12934631,12934996,12935445,12935741,12935921,12935963,12936003,12936044,12936272,12936470,12936714,12936971,12937144,12937379,12937572,12937736,12937870,12938310,12938613,12938930,12939360,12939570,12939617,12940423,12941527,12942784,12943912,12944904,12946097,12946922,12948228,12949042,12949405,12949780,12950956,12952059,12952800,12953689,12955532,12956991,12958432,12959921,12961510,12962905,12964452,12965812,12967303,12968763,12970334,12971737,12973194,12974672,12976293,12977799,12979285,12980691,12982193,12983605,12984966,12986307,12987826,12989346,12990940,12992374,12993909,12995537,12997102,12998805,13000445,13002141,13003847,13005473,13006491,13007455,13008560,13009645,13010903,13012768,13014478,13016237,13017979,13019635,13021347,13023084,13024797,13026508,13028235,13029935,13031645,13033399,13035161,13036922,13038621,13040334,13041987,13043665,13045332,13047000,13048716,13050418,13052158,13053848,13055560,13057210,13058848,13060505,13062160,13063765,13065352,13067004,13068877,13070456,13072174,13073857,13075452,13077120,13078769,13080507,13082234,13084032,13085867,13087671,13089495,13091323,13093118,13094824,13096594,13098259,13100024,13101840,13103699,13105466,13107102,13108840,13110685,13112399,13114168,13115951,13117709,13119433,13121110,13122730,13124379,13126000,13127757,13129392,13131030,13132605,13134200,13135859,13137498,13139145,13140860,13142551,13144258,13145921,13147642,13149330,13151080,13152794,13154419,13156176,13157886,13159568,13161285,13162970,13164620,13166287,13167966,13169586,13171235,13172849,13174463,13176012,13177512,13179042,13180492,13182228,13183347,13184451,13185288,13185998,13186829,13188140,13189549,13191032,13192346,13193475,13194609,13195826,13196972,13198327,13199702,13200987,13202286,13203585,13204832,13205997,13206975,13207876,13208596,13209504,13210431,13211146,13211789,13212608,13213649,13214748,13215797,13217016,13218551,13220133,13221557,13223024,13224374,13225969,13227400,13228840,13230386,13231875,13233264,13234566,13235855,13237118,13237892,13238129,13238342,13238570,13238791,13239012,13239885,13241339,13242829,13244051,13245580,13247242,13248658,13249809,13251266,13252376,13253132,13254481,13255838,13256754,13258251,13259905,13261279,13262924,13264417,13266007,13267465,13268820,13270158,13271818,13273169,13274533,13276148,13277839,13279276,13280680,13282006,13283594,13284983,13286630,13287863,13289494,13291181,13292789,13294517,13295990,13297464,13299207,13300419,13302091,13303331,13304993,13306413,13307666,13309183,13310778,13312483,13313960,13315308,13316833,13318262,13319687,13321270,13322869,13324478,13325891,13327129,13328801,13330290,13331913,13333513,13334872,13336291,13337861,13339535,13340773,13342332,13343430,13344891,13346398,13347986,13349143,13350609,13352049,13353675,13355292,13356955,13358101,13359658,13360979,13362486,13363562,13365103,13366554,13368248,13369325,13370872,13372408,13373841,13375246,13376670,13378231,13379842,13381422,13383051,13384585,13385969,13387357,13389054,13390590,13392229,13394006,13395289,13396806,13398379,13399900,13401455,13402635,13404323,13405943,13407369,13409123,13410389,13412117,13413748,13415341,13417008,13418285,13419904,13421585,13422838,13424548,13426324,13427633,13429161,13430723,13432037,13433597,13435241,13436782,13438336,13439880,13441390,13443026,13444635,13446305,13447857,13449534,13451042,13452452,13454036,13455700,13457279,13458762,13460618,13462509,13464402,13466335,13468389,13470390,13472434,13474453,13476479,13478487,13480522,13482543,13484570,13486595,13488643,13490687,13492727,13494775,13496777,13498799,13500803,13502823,13504837,13506882,13508930,13510982,13513011,13515057,13517107,13519124,13521149,13523161,13525209,13527258,13529287,13531330,13533386,13535428,13537438,13539469,13541318,13543310,13545336,13547371,13549422,13551457,13553483,13555509,13557547,13559570,13561578,13563553,13565536,13567512,13569524,13571511,13573541,13575570,13577596,13579647,13581677,13583672,13585631,13587631,13589652,13591643,13593641,13595673,13597686,13599709,13601758,13603800,13605793,13607743,13609751,13611758,13613741,13615755,13617795,13619844,13621892,13623926,13625948,13627916,13629911,13631933,13633957,13635987,13638020,13640069,13642119,13644161,13646213,13648259,13650310,13652334,13654372,13656377,13658428,13660419,13662454,13664490,13666413,13668398,13670357,13672352,13674326,13676341,13678296,13680260,13682249,13684249,13686208,13688166,13690179,13692171,13694145,13696058,13698037,13700000,13701975,13703959,13705950,13707900,13709889,13711895,13713861,13715798,13717800,13719775,13721781,13723734,13725703,13727721,13729695,13731685,13733640,13735621,13737630,13739640,13741637,13743636,13745637,13747608,13749626,13751586,13753602,13755507,13757502,13759468,13761463,13763461,13765438,13767411,13769363,13771347,13773329,13775329,13777287,13779294,13781300,13783296,13785281,13787302,13789300,13791322,13793309,13795285,13797281,13799247,13801208,13803225,13805222,13807190,13809122,13811122,13813141,13815112,13817081,13819112,13821148,13823165,13825139,13827163,13829189,13831133,13833188,13835187,13837211,13839231,13841286,13843290,13845314,13847336,13849342,13851344,13853318,13855286,13857287,13859320,13861309,13863282,13865149,13867119,13869172,13871221,13873251,13875195,13877163,13879071,13880977,13882749,13884620,13886503,13888442,13890229,13892147,13893969,13895942,13897944,13899914,13901779,13903694,13905625,13907478,13909334,13911192,13913182,13915120,13917083,13919005,13920966,13922845,13924770,13926649,13928536,13930524,13932477,13934401,13936369,13938150,13940162,13941961,13943864,13945689,13947599,13949558,13951525,13953419,13955449,13957404,13959329,13961173,13963038,13964939,13966824,13968782,13970729,13972643,13974572,13976569,13978519,13980536,13982243,13984218,13985944,13987944,13989906,13991852,13993803,13995653,13997627,13999560,14001525,14003351,14005355,14007309,14009350,14011123,14012824,14014669,14016410,14018293,14020160,14022038,14023866,14025671,14027551,14029376,14031337,14033268,14035190,14037121,14039041,14040897,14042844,14044749,14046674,14048565,14050486,14052355,14054304,14056220,14058197,14060104,14062031,14063921,14065823,14067727,14069574,14071465,14073243,14075165,14077094,14078888,14080802,14082371,14084134,14085533,14087230,14089042,14090803,14092652,14094612,14096541,14098516,14100510,14102493,14104502,14106405,14108379,14110384,14112323,14114296,14116274,14118118,14119534,14120948,14122332,14123783,14125241,14126726,14128179,14129704,14131232,14132669,14134185,14135865,14137647,14139297,14140893,14142795,14144791,14146789,14148701,14150723,14152686,14154516,14156462,14158361,14160362,14162354,14164296,14166251,14168188,14170149,14171963,14173845,14175816,14177854,14179868,14181783,14183794,14185696,14187673,14189541,14191420,14193400,14195374,14197393,14199302,14201331,14203254,14205190,14207076,14208939,14210952,14212862,14214887,14216771,14218766,14220609,14222522,14224416,14226274,14228250,14230205,14232258,14234155,14236129,14238072,14239948,14241846,14243721,14245718,14247719,14249741,14251679,14253671,14255600,14257453,14259383,14261304,14263253,14265216,14267116,14269080,14271009,14272930,14274884,14276812,14278709,14280445,14282167,14283844,14285495,14287165,14288855,14290588,14292325,14294019,14295679,14297381,14299118,14300827,14302565,14304272,14305913,14307591,14309315,14311007,14312721,14314441,14316167,14317813,14319424,14321078,14322795,14324553,14326322,14328027,14329656,14331237,14332894,14334647,14336399,14338051,14339683,14341304,14342962,14344635,14346389,14348130,14349870,14351538,14353185,14354829,14356593,14358389,14360158,14361797,14363417,14365054,14366825,14368693,14370536,14372311,14374038,14375806,14377586,14379427,14381324,14383190,14384978,14386761,14388583,14390356,14392148,14393870,14395577,14397252,14398944,14400692,14402379,14403938,14405678,14407408,14409126,14410744,14412580,14414233,14415888,14417643,14419374,14420882,14422582,14424343,14426005,14427666,14429430,14431210,14432982,14434635,14436424,14438222,14440005,14441668,14443404,14445166,14446881,14448628,14450359,14452101,14454099,14456009,14457986,14459988,14461990,14463947,14465857,14467787,14469725,14471723,14473707,14475682,14477690,14479676,14481661,14483662,14485645,14487633,14489603,14491586,14493545,14495545,14497546,14499539,14501523,14503487,14505485,14507451,14509411,14511386,14513402,14515407,14517405,14519369,14521351,14523311,14525292,14527257,14529236,14531207,14533182,14535154,14537129,14539093,14541055,14543035,14544995,14546978,14548941,14550911,14552860,14554843,14556788,14558748,14560707,14562662,14564624,14566579,14568565,14570528,14572473,14574429,14576374,14578330,14580280,14582234,14584185,14586146,14588100,14590058,14592010,14593976,14595929,14597893,14599849,14601814,14603714,14605625,14607538,14609445,14611349,14613283,14615173,14617087,14618985,14620872,14622805,14624709,14626612,14628527,14630442,14632331,14634242,14636117,14638004,14639939,14641780,14643664,14645611,14647452,14649323,14651276,14653119,14654972,14656931,14658783,14660609,14662563,14664411,14666221,14668194,14670030,14671851,14673823,14675653,14677488,14679455,14681271,14683114,14685001,14686810,14688631,14690517,14692307,14694140,14696035,14697803,14699644,14701535,14703281,14705157,14707054,14708815,14710697,14712585,14714356,14716244,14718102,14719882,14721778,14723602,14725449,14727356,14729198,14731045,14732957,14734773,14736670,14738545,14740380,14742288,14744143,14745978,14747892,14749710,14751587,14753484,14755309,14757214,14759075,14760913,14762818,14764666,14766579,14768441,14770303,14772215,14774080,14775943,14777858,14779729,14781591,14783508,14785382,14787234,14789143,14791026,14792874,14794779,14796657,14798504,14800413,14802290,14804142,14806057,14807939,14809797,14811711,14813612,14815448,14817367,14819271,14821115,14823036,14824915,14826770,14828703,14830561,14832421,14834349,14836213,14838081,14840003,14841866,14843737,14845643,14847499,14849355,14851279,14853129,14854961,14856904,14858819,14860729,14862645,14864557,14866477,14868394,14870316,14872237,14874168,14876079,14877991,14879916,14881828,14883751,14885659,14887579,14889503,14891478,14893482,14895469,14897457,14899433,14901436,14903428,14905416,14907389,14909366,14911412,14913320,14915280,14917186,14919081,14920962,14922892,14924788,14926719,14928574,14930468,14932368,14934251,14936216,14938174,14940139,14942104,14944072,14946026,14948010,14949973,14951913,14953902,14955827,14957812,14959743,14961716,14963651,14965617,14967509,14969480,14971307,14973283,14975129,14977063,14978949,14980845,14982731,14984625,14986567,14988413,14990397,14992224,14994185,14996042,14997960,14999863,15001702,15003565,15005377,15007289,15009080,15011007,15012819,15014696,15016540,15018391,15020280,15022096,15024029,15025817,15027717,15029587,15031423,15033288,15035303,15037348,15039375,15041394,15043418,15045414,15047449,15049468,15051486,15053526,15055555,15057595,15059631,15061665,15063685,15065698,15067543,15069554,15071562,15073602,15075647,15077703,15079729,15081763,15083789,15085807,15087848,15089859,15091905,15093938,15095986,15098043,15100076,15102107,15104150,15106185,15108144,15110042,15112084,15114083,15116103,15118151,15120183,15122198,15124204,15126199,15128192,15130184,15132149,15134140,15136169,15138215,15140231,15142254,15144266,15146276,15148254,15150256,15152247,15154214,15156188,15158200,15160240,15162253,15164279,15166302,15168304,15170279,15172286,15174283,15176254,15178236,15180260,15182295,15184304,15186359,15188403,15190430,15192468,15194474,15196491,15198498,15200455,15202481,15204514,15206561,15208608,15210661,15212702,15214745,15216787,15218807,15220831,15222865,15224903,15226951,15228956,15230976,15232962,15234967,15236945,15238956,15240959,15242922,15244916,15246910,15248857,15250858,15252837,15254790,15256732,15258717,15260712,15262723,15264687,15266688,15268698,15270628,15272555,15274525,15276455,15278219,15280131,15282145,15284155,15286099,15288103,15290096,15292084,15294037,15296009,15298000,15299961,15301881,15303784,15305681,15307634,15309598,15311540,15313437,15315388,15317380,15319329,15321265,15323102,15324991,15326973,15328970,15330880,15332739,15334653,15336626,15338565,15340435,15342302,15344213,15346049,15347940,15349888,15351840,15353753,15355699,15357573,15359459,15361322,15363207,15365187,15367088,15369060,15371016,15372919,15374794,15376682,15378567,15380523,15382508,15384465,15386367,15388187,15390006,15391888,15393812,15395826,15397713,15399576,15401391,15403101,15405023,15406965,15408856,15410764,15412686,15414522,15416393,15418306,15420159,15422026,15423912,15425806,15427639,15429520,15431333,15433169,15435162,15437109,15439028,15440950,15442858,15444711,15446561,15448420,15450271,15452096,15454018,15456010,15457945,15459856,15461831,15463648,15465534,15467489,15469423,15471433,15473454,15475478,15477426,15479296,15481298,15483272,15485308,15487257,15489239,15491164,15493216,15495232,15497214,15499127,15501090,15503092,15505104,15507103,15509079,15511065,15513077,15515083,15517060,15519047,15521007,15523028,15525034,15527056,15529042,15530994,15532972,15534940,15536902,15538923,15540874,15542893,15544928,15546956,15548933,15550943,15552848,15554872,15556870,15558858,15560831,15562847,15564867,15566885,15568792,15570557,15572345,15574246,15576255,15578255,15580229,15582245,15584240,15586206,15588193,15590130,15592089,15594049,15595950,15597892,15599855,15601843,15603762,15605765,15607742,15609768,15611761,15613748,15615714,15617643,15619644,15621619,15623585,15625426,15627385,15629314,15631273,15633185,15635066,15637036,15638983,15640874,15642781,15644769,15646751,15648756,15650728,15652728,15654743,15656745,15658768,15660682,15662609,15664582,15666516,15668208,15670124,15672073,15674008,15675951,15677896,15679839,15681850,15683839,15685848,15687845,15689816,15691780,15693804,15695791,15697766,15699753,15701707,15703634,15705605,15707534,15709511,15711454,15713430,15715418,15717404,15719436,15721458,15723445,15725425,15727413,15729424,15731405,15733376,15735330,15737310,15739268,15741255,15743221,15745157,15747148,15749110,15751101,15753075,15754996,15756991,15759008,15760986,15762946,15764906,15766845,15768881,15770833,15772818,15774841,15776808,15778809,15780810,15782766,15784785,15786762,15788721,15790751,15792667,15794714,15796678,15798610,15800616,15802560,15804546,15806552,15808558,15810519,15812418,15814381,15816379,15818316,15820269,15822259,15824210,15826122,15828087,15830071,15832075,15834054,15836002,15837962,15839917,15841862,15843838,15845753,15847693,15849656,15851495,15853352,15855313,15857283,15859181,15861071,15863000,15864911,15866898,15868839,15870748,15872736,15874739,15876672,15878653,15880640,15882559,15884595,15886465,15888465,15890439,15892394,15894404,15896415,15898428,15900468,15902497,15904370,15906383,15908379,15910374,15912399,15914427,15916481,15918517,15920543,15922490,15924531,15926541,15928513,15930544,15932572,15934599,15936608,15938645,15940640,15942678,15944691,15946709,15948747,15950778,15952832,15954872,15956915,15958879,15960902,15962918,15964901,15966938,15968964,15971017,15973067,15975103,15977082,15979118,15981105,15983140,15985185,15987214,15989264,15991294,15993333,15995272,15997236,15999194,16001172,16003035,16005029,16006998,16008976,16010978,16012971,16015006,16017028,16018997,16020980,16022976,16025003,16026911,16028918,16030838,16032767,16034765,16036778,16038808,16040759,16042757,16044691,16046586,16048587,16050566,16052178,16054020,16055832,16057508,16059119,16060770,16062302,16064097,16065445,16066950,16068482,16069882,16071455,16072721,16074199,16075674,16076821,16078355,16079513,16080911,16082221,16083410,16084899,16086016,16087445,16088614,16089498,16091097,16092457,16093667,16094864,16096138,16097590,16098505,16099791,16101191,16102350,16103947,16105049,16106426,16107605,16109075,16110441,16111650,16113105,16114609,16115780,16117404,16118834,16120351,16121930,16123309,16124932,16126230,16127738,16129293,16130459,16132096,16133262,16134658,16135838,16137348,16138655,16139965,16141376,16142476,16143550,16145111,16146563,16147681,16148931,16150242,16151682,16152632,16153919,16155398,16156564,16158110,16159189,16160566,16161637,16163266,16164478,16165902,16167349,16168765,16170169,16171661,16173237,16174664,16176257,16177712,16179066,16180483,16182004,16183409,16184589,16186246,16187452,16188807,16189978,16191580,16192768,16194169,16195526,16196541,16197820,16199288,16200707,16201787,16203091,16204496,16205712,16206673,16207954,16209339,16210500,16212031,16213131,16214546,16215683,16217306,16218588,16220033,16221480,16222884,16224336,16225796,16227357,16228812,16230383,16231933,16233140,16234638,16236117,16237348,16238676,16240216,16241505,16242885,16244043,16245608,16246782,16248190,16249519,16250411,16251918,16253244,16254582,16255762,16256989,16258557,16259443,16260614,16262036,16263211,16264719,16265756,16267107,16268404,16269646,16271093,16272241,16273682,16275189,16276419,16278043,16279482,16280981,16282545,16283882,16285523,16286782,16288285,16289813,16291094,16292740,16293896,16295283,16296566,16297844,16299328,16300581,16302050,16303193,16304149,16305795,16307165,16308382,16309574,16310883,16312487,16313378,16314647,16316109,16317273,16318898,16319941,16321290,16322419,16324006,16325252,16326636,16328106,16329552,16330838,16332342,16333908,16335335,16336903,16338326,16339792,16341133,16342635,16344125,16345359,16346981,16348134,16349574,16350732,16352352,16353495,16354903,16356212,16357189,16358412,16359844,16361305,16362404,16363697,16365180,16366340,16367370,16368704,16370027,16371200,16372739,16373888,16375275,16376403,16378017,16379275,16380689,16382192,16383593,16384945,16386427,16388031,16389528,16391138,16392629,16393953,16395434,16396997,16398362,16399464,16401163,16402306,16403682,16404823,16406407,16407553,16408837,16410224,16411260,16412350,16413870,16415328,16416402,16417684,16419177,16420308,16421309,16422615,16423889,16424950,16426501,16427595,16429010,16430148,16431783,16432957,16434267,16435775,16437241,16438623,16440187,16441778,16443256,16444799,16446380,16447769,16449196,16450747,16452181,16453270,16454957,16456187,16457516,16458696,16460232,16461500,16462745,16464141,16465285,16466193,16467798,16469263,16470490,16471716,16473005,16474476,16475361,16476628,16478041,16479177,16480762,16481834,16483143,16484458,16486013,16487335,16488558,16490089,16491629,16493014,16494661,16496095,16497609,16499164,16500589,16502293,16503532,16505056,16506577,16507831,16509354,16510688,16512040,16513427,16514590,16516149,16517365,16518861,16520093,16520951,16522637,16523926,16525216,16526447,16527640,16529290,16530144,16531378,16532823,16534108,16535672,16536786,16538108,16539358,16540716,16542275,16543554,16545027,16546531,16547775,16549453,16550919,16552476,16554054,16555460,16557164,16558454,16560003,16561528,16562746,16564324,16565627,16567047,16568423,16569563,16571154,16572382,16573901,16575142,16575966,16577626,16578906,16580211,16581452,16582662,16584281,16585228,16586359,16587768,16589208,16590565,16591964,16593189,16594585,16595868,16597510,16598736,16600254,16601802,16603107,16604720,16606237,16607925,16609485,16611068,16612597,16614069,16615268,16616473,16617764,16619207,16620732,16622373,16623834,16625171,16626345,16627860,16629403,16630804,16632500,16634095,16635455,16636743,16638129,16639619,16641028,16642704,16644281,16645753,16647138,16648412,16649906,16651337,16652691,16654276,16655933,16657512,16658986,16660184,16661549,16662931,16664135,16665594,16667247,16668561,16669641,16670950,16672243,16673956,16675343,16676613,16678092,16679754,16680897,16682584,16684283,16686151,16688080,16689993,16691759,16693693,16695512,16697271,16699097,16701004,16702818,16704631,16706331,16707637,16709339,16711023,16712785,16714488,16716209,16717873,16719370,16720223,16721465,16723457,16725481,16727306,16728915,16730054,16731235,16733039,16734578,16736315,16738029,16739987,16741692,16743509,16745296,16747187,16748913,16750664,16752568,16754465,16756314,16757971,16759662,16761647,16763233,16765211,16767088,16769029,16771005,16772972,16774898,16776727,16778549,16780157,16782034,16783852,16785747,16787648,16789470,16791128,16792830,16794346,16795948,16797752,16799408,16801002,16802693,16804292,16805702,16807384,16809149,16811160,16813174,16815143,16817041,16819039,16821069,16823064,16825005,16827021,16829052,16831083,16833054,16835054,16837090,16839061,16841038,16842977,16844937,16846829,16848805,16850754,16852726,16854650,16856669,16858680,16860678,16862680,16864685,16866720,16868722,16870704,16872569,16874546,16876602,16878650,16880691,16882694,16884609,16886447,16888025,16889998,16891855,16893809,16895714,16897616,16899572,16901437,16903366,16905215,16907123,16909053,16910911,16912810,16914800,16916680,16918611,16920556,16922444,16924330,16925622,16927264,16929201,16930897,16932442,16933932,16935183,16936703,16938462,16940082,16941688,16943512,16945084,16946665,16948248,16949832,16951356,16952975,16954595,16956245,16957821,16959103,16960372,16962019,16963659,16964925,16966221,16968219,16970063,16971851,16973607,16975384,16977102,16978876,16980740,16982474,16984146,16985804,16987545,16989183,16990789,16992631,16994403,16995629,16997150,16998795,17000271,17001751,17002986,17004308,17006091,17007561,17008816,17009998,17011357,17013096,17014465,17016018,17017973,17019975,17021945,17023924,17025897,17027820,17029661,17031211,17033130,17035022,17036922,17038535,17040344,17042347,17044232,17046107,17047973,17049761,17051625,17053551,17055173,17057106,17058656,17060086,17061765,17063277,17064685,17066170,17067832,17069247,17070955,17072335,17074057,17075537,17077244,17078833,17080676,17082204,17083898,17085489,17087213,17088708,17090142,17091744,17093262,17095130,17096399,17097659,17099081,17100782,17102613,17104444,17106173,17107624,17109095,17110693,17112470,17114011,17115467,17117124,17118729,17120416,17122092,17123606,17125193,17126869,17128452,17129893,17131442,17132886,17134569,17136188,17137694,17139259,17140816,17142459,17144084,17145615,17146778,17148376,17149877,17151189,17152510,17153884,17155118,17156401,17157773,17159287,17160534,17161740,17163168,17164558,17165812,17167270,17168620,17169906,17171512,17173094,17174645,17176512,17178010,17179493,17181381,17183217,17185092,17186953,17188491,17190427,17192231,17193887,17195743,17197345,17199192,17200429,17202281,17204200,17205653,17207328,17209067,17210757,17212439,17214023,17215457,17217080,17218524,17220127,17221646,17223167,17224769,17226315,17227819,17229236,17230825,17232352,17233900,17235306,17236910,17238370,17240187,17242061,17243866,17245737,17247578,17249400,17250876,17252363,17253949,17255471,17257287,17259254,17261183,17263011,17264899,17266802,17268665,17270633,17271766,17272312,17272887,17273359,17274100,17274747,17275267,17275811,17276507,17278227,17280202,17282183,17284149,17286070,17288023,17289989,17291943,17293883,17295549,17297213,17298843,17300500,17302295,17303855,17305618,17307196,17308816,17310357,17311940,17313607,17315098,17316606,17318082,17319457,17320950,17322313,17323906,17325421,17326738,17327883,17329297,17330666,17332228,17333698,17335133,17336466,17338073,17339527,17341124,17342536,17343956,17345322,17346738,17348200,17349615,17351003,17352406,17354261,17356037,17357852,17359720,17361636,17363536,17365331,17367065,17368883,17370546,17372237,17374037,17375873,17377703,17379435,17381162,17382845,17384009,17384827,17385626,17386494,17387908,17389604,17391311,17392937,17394568,17396261,17397837,17399383,17401020,17402793,17404463,17406169,17407824,17409487,17411314,17413118,17414991,17416470,17418255,17419712,17421413,17423083,17424861,17426398,17427947,17429928,17431549,17433377,17435227,17437082,17438572,17440430,17442258,17444075,17445129,17446189,17447142,17448215,17449292,17450376,17451361,17452438,17454076,17455648,17457225,17458750,17460326,17461888,17463448,17464949,17466626,17468039,17469540,17471186,17472823,17474125,17475159,17476194,17477226,17478572,17479994,17481533,17483303,17484952,17486416,17487535,17488943,17490510,17491660,17492871,17494412,17495957,17497394,17499000,17500612,17502143,17503721,17505356,17506848,17508119,17509140,17509955,17510971,17511504,17512496,17513238,17514170,17515684,17517065,17517942,17518497,17519350,17519913,17520729,17521236,17521815,17522679,17523380,17524265,17524763,17525610,17526314,17527217,17527716,17528234,17529158,17529802,17530667,17531165,17532043,17532740,17533511,17534104,17534567,17535431,17536050,17536859,17537138,17537684,17537893,17538073,17538675,17538890,17539522,17539768,17540351,17540535,17540879,17541207,17541370,17541855,17541895,17542448,17542627,17543174,17543356,17543527,17545011,17546424,17547873,17549080,17550323,17551527,17552944,17553904,17554906,17555920,17556913,17557879,17558833,17559828,17560819,17562331,17563721,17565119,17566555,17568068,17569555,17570937,17572296,17573868,17575307,17576798,17578300,17579884,17581474,17582985,17584489,17585983,17587553,17588985,17590398,17591769,17593185,17594644,17596066,17597488,17599025,17600406,17601799,17603188,17604572,17605728,17606676,17607634,17608593,17609687,17610611,17611566,17612479,17613559,17614466,17615402,17616341,17617219,17618714,17620091,17621494,17622878,17624049,17624982,17625911,17626865,17628249,17629856,17631418,17632991,17634545,17636090,17637685,17639277,17640878,17642451,17643766,17645108,17646453,17647748,17649058,17650371,17651712,17653216,17654781,17656316,17657629,17659195,17660442,17661712,17662959,17664523,17666168,17667881,17669455,17671011,17672559,17674356,17676106,17677918,17679485,17680691,17681878,17683396,17684817,17686365,17687587,17688820,17690239,17691673,17693292,17694752,17696266,17697743,17699107,17700812,17702508,17704143,17705815,17707345,17709008,17710650,17712285,17714065,17715678,17717373,17719028,17720645,17722217,17723877,17725538,17727066,17728773,17730434,17732023,17733687,17735186,17736812,17738434,17740080,17741758,17743326,17745037,17746715,17748387,17749970,17751625,17753284,17754832,17756618,17758270,17759892,17761519,17763284,17765027,17766647,17768267,17769888,17771720,17773397,17775077,17776759,17778472,17780214,17781866,17783559,17785201,17786500,17787457,17788416,17789372,17790685,17792194,17793739,17795238,17796827,17798184,17799526,17800874,17802198,17803495,17804669,17805896,17807138,17808457,17809714,17810620,17811588,17812954,17814173,17815336,17816435,17817563,17818755,17819733,17820690,17821607,17823176,17824681,17826190,17827737,17829258,17830764,17832275,17833833,17835493,17836919,17838307,17839686,17841085,17842454,17843850,17845216,17846600,17848284,17849816,17851366,17852906,17854466,17856000,17857517,17859065,17860659,17862383,17863978,17865587,17867243,17868855,17870449,17872040,17873707,17875488,17876960,17878378,17879804,17881241,17882725,17884162,17885558,17886996,17888876,17890636,17892340,17894033,17895775,17897511,17899217,17900890,17902803,17904555,17906270,17907961,17909642,17911368,17913042,17914716,17916391,17917815,17918829,17920039,17921062,17922172,17923237,17924444,17925629,17926752,17927810,17928729,17929591,17930253,17930955,17931640,17933177,17934853,17936568,17938249,17939965,17941667,17943408,17945122,17946841,17948680,17950415,17952085,17953702,17955423,17957100,17958840,17960553,17962432,17964187,17965962,17967758,17969478,17971282,17973032,17974823,17976544,17978413,17980140,17981833,17983447,17985132,17986797,17988523,17990193,17991931,17993359,17994868,17996253,17997816,17998861,17999867,18000899,18001908,18003722,18005538,18007351,18009179,18010831,18012693,18014482,18016317,18018132,18019597,18020781,18021993,18023485,18025032,18026053,18027095,18028351,18030106,18031724,18033345,18034929,18036465,18038129,18039740,18041327,18043015,18044610,18046062,18047474,18048945,18050337,18051817,18053248,18054669,18056133,18057893,18059288,18061000,18062378,18063857,18065311,18066776,18068174,18069907,18071549,18073160,18074759,18076291,18077894,18079497,18081081,18082776,18084310,18085796,18087237,18088613,18090120,18091552,18093016,18094499,18096220,18098043,18099871,18101705,18103389,18105231,18107025,18108862,18110693,18112335,18113983,18115603,18117362,18118895,18120541,18122152,18123817,18125466,18126948,18128388,18129865,18131249,18132741,18134225,18135683,18137201,18139056,18140863,18142716,18144603,18146295,18148143,18149942,18151817,18153502,18155132,18156780,18158379,18159947,18161630,18163261,18164854,18166502,18168157,18169611,18171047,18172527,18173913,18175410,18176842,18178279,18179818,18181680,18183500,18185346,18187125,18188979,18190775,18192636,18194505,18195833,18196790,18198548,18199214,18199890,18201071,18201761,18202709,18203573,18204258,18205639,18206799,18207427,18208137,18209216,18210517,18211430,18212687,18214068,18215339,18215930,18217122,18218465,18219551,18220929,18222138,18223869,18224913,18226003,18226969,18228519,18230106,18231684,18233436,18235086,18236839,18238375,18240103,18241614,18243137,18244339,18245124,18246404,18247954,18249477,18250491,18251494,18252505,18253525,18254883,18255975,18257013,18258119,18259436,18261267,18263297,18265323,18267341,18269360,18271386,18273408,18275380,18277392,18279423,18281460,18283467,18285453,18287468,18289474,18291491,18293464,18295483,18297511,18299533,18301533,18303549,18305550,18307564,18309530,18311546,18313581,18315617,18317613,18319619,18321638,18323631,18325632,18327597,18329640,18331622,18333525,18335428,18337306,18339202,18341126,18342970,18344849,18346740,18348640,18350517,18352407,18354225,18356093,18357927,18359814,18361735,18363446,18365099,18366764,18368432,18370096,18371753,18373416,18375023,18376817,18378471,18380153,18381817,18383441,18385110,18386751,18388370,18390005,18391602,18393053,18394475,18395884,18397297,18398732,18400134,18401528,18403069,18404611,18406091,18407519,18409060,18410395,18411973,18413469,18415110,18416531,18418023,18419493,18421155,18422578,18424058,18425623,18427251,18428691,18429974,18431463,18432936,18434913,18436625,18438134,18439800,18441394,18442968,18444501,18446088,18447805,18449345,18450914,18452535,18454189,18455937,18457570,18459167,18460702,18462368,18463911,18465465,18467032,18468586,18470132,18471719,18473235,18474625,18476279,18477743,18479464,18481023,18482677,18484208,18485922,18487559,18489188,18490941,18492694,18494163,18495825,18497751,18499622,18501323,18503049,18504926,18506862,18508784,18510734,18512706,18514647,18516579,18518496,18520413,18522236,18524074,18525943,18527893,18529808,18531652,18533520,18535347,18537153,18538939,18540716,18542472,18544481,18546454,18548417,18550376,18552297,18554217,18556111,18558015,18559982,18561947,18563844,18565739,18567593,18569399,18571221,18573041,18574824,18576805,18578784,18580779,18582748,18584705,18586645,18588575,18590509,18592455,18594401,18596227,18598045,18599792,18601576,18603340,18605114,18606866,18608752,18610586,18612443,18614207,18616007,18617847,18619651,18621458,18623234,18624960,18626389,18627842,18629309,18630720,18632161,18633562,18634979,18636535,18638493,18640437,18642373,18644364,18646307,18648202,18650105,18652022,18653920,18655786,18657690,18659680,18661625,18663551,18665467,18667389,18669271,18671222,18673097,18675022,18676777,18678283,18679816,18681434,18683022,18684614,18686187,18687684,18689472,18691269,18693074,18694863,18696591,18698368,18700105,18701822,18703543,18705177,18706505,18707788,18709079,18710483,18711767,18713101,18714457,18715990,18717495,18718975,18720467,18722013,18723584,18725081,18726559,18728021,18729661,18731356,18732831,18734485,18736102,18737719,18739275,18740820,18742214,18743554,18744882,18746132,18747428,18748597,18749893,18751562,18753452,18755310,18757185,18759089,18760978,18762860,18764717,18766582,18768542,18770444,18772311,18774194,18776066,18777942,18779834,18781712,18783652,18785082,18786503,18787896,18789283,18790734,18792206,18793666,18795108,18796872,18798526,18800238,18801985,18803698,18805295,18806883,18808447,18810093,18811662,18813211,18814792,18816403,18818113,18819837,18821535,18823187,18824907,18826368,18827847,18829325,18830782,18832165,18833568,18834979,18836446,18838053,18839532,18841023,18842567,18843655,18845189,18846681,18848166,18849844,18851326,18852838,18854329,18855720,18857223,18858704,18860218,18861753,18863731,18865702,18867624,18869371,18870810,18872191,18873618,18874518,18875918,18877329,18878745,18880341,18881527,18882673,18883799,18884918,18885920,18886987,18888154,18889311,18890821,18892247,18893701,18895520,18897419,18899301,18901208,18903101,18904999,18906893,18908812,18910521,18912126,18913653,18915098,18916636,18918097,18918951,18919953,18920726,18921701,18922493,18923459,18924125,18924988,18925887,18926823,18927674,18928433,18929425,18930361,18931393,18932285,18933694,18934937,18936255,18937539,18938496,18938848,18939403,18939875,18940387,18940604,18941142,18941673,18943020,18944044,18944823,18945640,18946717,18948061,18948780,18950108,18950980,18951159,18951540,18951846,18952195,18953446,18954776,18956339,18957953,18959794,18961534,18963356,18965184,18966995,18968767,18970540,18972313,18974099,18975735,18977388,18978962,18980583,18982174,18983827,18985416,18987009,18988457,18989778,18991104,18992417,18993985,18995650,18997320,18998986,19000623,19002320,19003981,19005650,19007348,19009016,19010686,19012367,19013360,19014906,19016739,19018605,19020381,19022188,19023995,19025869,19027685,19029425,19031093,19032535,19033998,19035451,19037041,19038907,19040720,19042621,19044476,19046326,19048219,19050046,19051911,19053760,19054828,19056567,19057895,19058990,19060201,19061268,19062370,19064416,19066418,19068405,19070322,19072273,19074239,19076140,19078044,19079934,19081891,19083843,19085817,19087701,19089618,19091514,19093450,19095456,19097293,19098952,19100709,19102496,19104330,19106101,19107805,19109397,19111214,19113271,19115315,19117361,19119417,19121469,19123525,19125573,19127623,19129671,19131722,19133767,19135808,19137863,19139910,19141951,19143982,19146039,19147907,19149829,19151683,19153527,19155349,19157216,19159047,19160925,19162867,19164770,19166651,19168502,19170359,19172182,19174043,19175884,19177813,19179176,19180719,19181493,19182284,19183091,19183778,19184500,19184960,19185766,19186665,19187450,19187853,19188474,19189252,19190125,19190816,19191219,19191948,19192766,19193632,19194184,19194652,19195435,19196254,19197172,19197644,19198247,19199501,19200547,19201688,19202293,19202838,19204095,19205199,19206327,19206730,19207516,19208665,19209743,19210747,19211140,19212145,19213238,19214306,19215088,19216402,19217664,19219244,19220547,19222277,19223756,19224748,19225916,19227067,19228198,19229349,19230462,19231558,19232654,19233809,19234940,19236115,19237280,19238415,19239522,19240567,19241659,19243231,19244362,19245474,19246677,19247730,19248794,19249879,19250897,19251944,19252970,19253868,19254875,19255912,19256775,19257658,19258423,19259285,19260658,19261092,19261621,19262123,19262659,19263237,19263736,19264309,19264869,19265315,19265824,19266297,19266804,19267314,19267850,19268413,19268913,19270294,19271754,19273238,19274728,19276283,19277787,19279296,19280807,19282320,19283452,19284437,19285424,19286817,19288424,19289850,19291256,19292563,19293915,19295361,19297101,19298748,19300385,19302051,19303662,19305282,19306946,19308586,19310262,19311976,19313481,19314956,19316484,19317938,19319472,19320957,19322418,19324050,19325034,19326177,19327425,19328766,19330098,19331402,19332726,19333840,19335195,19336632,19338016,19339446,19340971,19342472,19344026,19345585,19347268,19348679,19349672,19350809,19351945,19353082,19354239,19355334,19356434,19357560,19358750,19359869,19361042,19362218,19363307,19364371,19365406,19366583,19368013,19369139,19370253,19371471,19372536,19373613,19374731,19375770,19376755,19377768,19378681,19379695,19380734,19381580,19382437,19383227,19384079,19385421,19385841,19386389,19386902,19387461,19388010,19388477,19389046,19389606,19390064,19390583,19391056,19391561,19392060,19392590,19393149,19393661,19395311,19397108,19398896,19400704,19402495,19404294,19406026,19407846,19409254,19410677,19412047,19413445,19415048,19416323,19417537,19418757,19420239,19421705,19423051,19424337,19425844,19427203,19428202,19429229,19430221,19431639,19433332,19434850,19436547,19438210,19439563,19440739,19441890,19443048,19444511,19445802,19447543,19449205,19450794,19452482,19454178,19455784,19457440,19459073,19460769,19461997,19463341,19464824,19466307,19468297,19469962,19471952,19473711,19475444,19477071,19478791,19480512,19482137,19483894,19485642,19487367,19488937,19490449,19491977,19493519,19495094,19496586,19498184,19499507,19501200,19502828,19504444,19506030,19507613,19509184,19510776,19512398,19514188,19515628,19517351,19519159,19520665,19522064,19523808,19525605,19527203,19528921,19530000,19531078,19532205,19533350,19534493,19535631,19536704,19537850,19538958,19540125,19541266,19542459,19543628,19544729,19545787,19546902,19548226,19549188,19550432,19551522,19552467,19553077,19554183,19555426,19556562,19557553,19558490,19559735,19560859,19561763,19562257,19563421,19564664,19565871,19566837,19567684,19568876,19569994,19570991,19571415,19572621,19573825,19574970,19575971,19576711,19577841,19578994,19580066,19580478,19581663,19582830,19583974,19584864,19585712,19586806,19588031,19589165,19589577,19590678,19591885,19593046,19593959,19595384,19596519,19597633,19598843,19599900,19600946,19602047,19603115,19604103,19605149,19606052,19607067,19608118,19608976,19609829,19610615,19611466,19612505,19613721,19614922,19616079,19616468,19617397,19618618,19619743,19620756,19622016,19623148,19624395,19625517,19626706,19627903,19629015,19630225,19631415,19632664,19633770,19634867,19636085,19637273,19638552,19639698,19640807,19642048,19643210,19644560,19645741,19646775,19647777,19648912,19650182,19651323,19652327,19653347,19654440,19655790,19656887,19657863,19658891,19660129,19661387,19662402,19663406,19664492,19665921,19666744,19667215,19667771,19668967,19670498,19672248,19674107,19675980,19677813,19679430,19680845,19681437,19681940,19682458,19682976,19683552,19684338,19685720,19686788,19688036,19689530,19690737,19691818,19693218,19694656,19695724,19696952,19698448,19699662,19700699,19702045,19703918,19705766,19707482,19709204,19711102,19712811,19714670,19716563,19718257,19720160,19721841,19723681,19725448,19727294,19729052,19730843,19732690,19734450,19736257,19738138,19739879,19741743,19743490,19745238,19747156,19748861,19750704,19752483,19754309,19756056,19757924,19759652,19761381,19763287,19764961,19766756,19768643,19770337,19772203,19774006,19775842,19777547,19779404,19781155,19782920,19784810,19786572,19788298,19790181,19791912,19793720,19795511,19797263,19799215,19800981,19802810,19804523,19806421,19808156,19810019,19811769,19813506,19815409,19817070,19818893,19820782,19822542,19824290,19826100,19827926,19829637,19831497,19833374,19835097,19837001,19838720,19840474,19841956,19843116,19844328,19845505,19846808,19847952,19849157,19850283,19851404,19851908,19852703,19853601,19854388,19854777,19855422,19856225,19857070,19857753,19858154,19858877,19859720,19860584,19861097,19861592,19862373,19863185,19864125,19864614,19866159,19867145,19868270,19869434,19870553,19871753,19872855,19873950,19875053,19876220,19877374,19878526,19879709,19880841,19881901,19882976,19884083,19885641,19887111,19888722,19889788,19890852,19892004,19893124,19894173,19895254,19896297,19897318,19898341,19899204,19900232,19901295,19902240,19903121,19903891,19904772,19906194,19907647,19909066,19910416,19910830,19911390,19911905,19912462,19913024,19913481,19914055,19914604,19915069,19915588,19916058,19916562,19917060,19917594,19918165,19918659,19920225,19921871,19923533,19925106,19926823,19928486,19930120,19931792,19933476,19935175,19936947,19938594,19940213,19941825,19943476,19945100,19946227,19946679,19947603,19948387,19948811,19949115,19949919,19950861,19952904,19954936,19956939,19958956,19960978,19962965,19964962,19966929,19968953,19970973,19972997,19975010,19977027,19979043,19981056,19983022,19985030,19986448,19987798,19989409,19990974,19992346,19993546,19994914,19996035,19997156,19998275,19999402,20000522,20001649,20002550,20002620,20003310,20005292,20007341,20009198,20011091,20013007,20014870,20016706,20018592,20020508,20022368,20024316,20026246,20028187,20030132,20032003,20033930,20035842,20037760,20039644,20041414,20043409,20045318,20047205,20049116,20051033,20052899,20054658,20056472,20058245,20060124,20062020,20063918,20065791,20067656,20069531,20071445,20073350,20075205,20077190,20078969,20080850,20082714,20084618,20086469,20088177,20089664,20089864,20090447,20091047,20091728,20092355,20092900,20093495,20094220,20094944,20095601,20096370,20097219,20098173,20098759,20099602,20099867,20100980,20101308,20101714,20103226,20103913,20105003,20105219,20105543,20105879,20106664,20108285,20109734,20111306,20112957,20114565,20116139,20117592,20119116,20120721,20122337,20123958,20125561,20127033,20128616,20130180,20131725,20133414,20135046,20136753,20138262,20139764,20141594,20143455,20145244,20147003,20148832,20150690,20152530,20154368,20156229,20158004,20159340,20160619,20161953,20163309,20164632,20165953,20167279,20168643,20170216,20171681,20173128,20174603,20176084,20177564,20179045,20180479,20182085,20183542,20185008,20186459,20187926,20189427,20190864,20192311,20193733,20195384,20196826,20198283,20199747,20201246,20202715,20204156,20205583,20207187,20208635,20210068,20211494,20212941,20214432,20215887,20217319,20218721,20220338,20221709,20223094,20224518,20226023,20227474,20228895,20230317,20231909,20233345,20234746,20236100,20237572,20239045,20240460,20241871,20243275,20244892,20246283,20247645,20249083,20250539,20251995,20253422,20254808,20256354,20257862,20259249,20260701,20262206,20263668,20265145,20266575,20267994,20269639,20271087,20272496,20273960,20275445,20276935,20278388,20279858,20281258,20282804,20284145,20285434,20286808,20288180,20289540,20290815,20292083,20293639,20294976,20296283,20297620,20299000,20300324,20301658,20303002,20304274,20305817,20307154,20308441,20309811,20311176,20312517,20313842,20315111,20316647,20318104,20319522,20320989,20322469,20323949,20325420,20326864,20328264,20329911,20331326,20332729,20334212,20335693,20337184,20338628,20340033,20341604,20343079,20344440,20345819,20347283,20348740,20350161,20351592,20352985,20354598,20356016,20357404,20358845,20360315,20361791,20363197,20364571,20366024,20367624,20368993,20370401,20371841,20373326,20374776,20376199,20377607,20379219,20380696,20382116,20383538,20384978,20386468,20387916,20389332,20390727,20392514,20394259,20396091,20397808,20399699,20401278,20403013,20404824,20406643,20408480,20410256,20411890,20413577,20415383,20417142,20418858,20420659,20422498,20424312,20426201,20428023,20429941,20431783,20433677,20435517,20437388,20439258,20441076,20442842,20444668,20446502,20448278,20450048,20451868,20453812,20455604,20457389,20459110,20460890,20462618,20464384,20466103,20467884,20469810,20471617,20473379,20475120,20476907,20478667,20480406,20482172,20484115,20485999,20487818,20489652,20491468,20493273,20495119,20496914,20498698,20500594,20502317,20504106,20505836,20507569,20509287,20511052,20512824,20514682,20516466,20518317,20520152,20521982,20523807,20525566,20527333,20529117,20530913,20532727,20534455,20536207,20537871,20539477,20541229,20542954,20544581,20546388,20548206,20549940,20551718,20553390,20555020,20556677,20558342,20560151,20562046,20563704,20565307,20566946,20568600,20570291,20571970,20573656,20575306,20577075,20578761,20580380,20582027,20583729,20585425,20587125,20588799,20590603,20592410,20594169,20595939,20597731,20599559,20601334,20603177,20604953,20606795,20608594,20610280,20612030,20613840,20615619,20617404,20619169,20621027,20622781,20624602,20626483,20628345,20630225,20632163,20634078,20635881,20637683,20639365,20641052,20642797,20644558,20646301,20648101,20649797,20651570,20653327,20654989,20656802,20658610,20660404,20662240,20664081,20665779,20667532,20668948,20670466,20671976,20673486,20675016,20676528,20678022,20679554,20681611,20683575,20685510,20687504,20689491,20691431,20693428,20695370,20697273,20699239,20701234,20703254,20705216,20707151,20709136,20711129,20713156,20714782,20715343,20715381,20715421,20715461,20715778,20715818,20715856,20715896,20716475,20718332,20720114,20721937,20723787,20725606,20727426,20729213,20731053,20732841,20734312,20735771,20737204,20738662,20740096,20741522,20742942,20744487,20746356,20748185,20749991,20751745,20753533,20755298,20757092,20758901,20760162,20760988,20761028,20761068,20761107,20761265,20761434,20761474,20761514,20761553,20762576,20763666,20765399,20767122,20768865,20770622,20772385,20774090,20775795,20777546,20779307,20781163,20782167,20783403,20784848,20786123,20786925,20788493,20789928,20791214,20792197,20793991,20795599,20797243,20797830,20797868,20797908,20797948,20798266,20798306,20798341,20798381,20798917,20800228,20801689,20802886,20804120,20805784,20807443,20809045,20810729,20812406,20814072,20815735,20817345,20819000,20819040,20819078,20819118,20819158,20820244,20820686,20820785,20821921,20823760,20825764,20827540,20829204,20830816,20832452,20834134,20835807,20837530,20839275,20840967,20842688,20844432,20846168,20847905,20849627,20851311,20852991,20854713,20855786,20856854,20857346,20858329,20860152,20861908,20863615,20865358,20867083,20868882,20870555,20872286,20874158,20876005,20877829,20879720,20881499,20883419,20885221,20887112,20888936,20890784,20892471,20894155,20895926,20897563,20899363,20901134,20902840,20904729,20906513,20908481,20910257,20912208,20914056,20915968,20917840,20919714,20921691,20922961,20924126,20925265,20926279,20927472,20928926,20930272,20931643,20932996,20934415,20935616,20936771,20937853,20939005,20940155,20941432,20943099,20943758,20944601,20945522,20946545,20947900,20949609,20950802,20951546,20952220,20953040,20954469,20956089,20957842,20959447,20960291,20961609,20963217,20964618,20965839,20966787,20967588,20968555,20969330,20969823,20970713,20971921,20973314,20974517,20975726,20977061,20978424,20979826,20981147,20982512,20984438,20986343,20988203,20990116,20991959,20993821,20995723,20997618,20999459,21001354,21003282,21005226,21007055,21008948,21010826,21012776,21014051,21014992,21015929,21016912,21018441,21020400,21022153,21024029,21025951,21027097,21028293,21029474,21030682,21032704,21034735,21036720,21038753,21040702,21042615,21044505,21046407,21048329,21050358,21052394,21054429,21056479,21058259,21060075,21061862,21063703,21065509,21067329,21069036,21070853,21072694,21074657,21076595,21078522,21080479,21082095,21083383,21084691,21086347,21087692,21088882,21090161,21091438,21092771,21093957,21095219,21096454,21098029,21099509,21100707,21101898,21103558,21105192,21106001,21106775,21108295,21109884,21110724,21111485,21112668,21113920,21115092,21115871,21116830,21118485,21120119,21121491,21122883,21124529,21126361,21128098,21129893,21131670,21133499,21135267,21137109,21138945,21140761,21142419,21144085,21145763,21147482,21149255,21151064,21152879,21154616,21156270,21157722,21159114,21160557,21162150,21163623,21165047,21166478,21168061,21169592,21171036,21172532,21174083,21175686,21177184,21178641,21180184,21182068,21184052,21186007,21187934,21189953,21191922,21193899,21195868,21197872,21199639,21201409,21203165,21204925,21206732,21208320,21209860,21211429,21213302,21215216,21217022,21218897,21220826,21222600,21224440,21226206,21228028,21230006,21231872,21233709,21235620,21237511,21239331,21241125,21242927,21244827,21246323,21247890,21249512,21251137,21252317,21253545,21255151,21256490,21257672,21258959,21260136,21261830,21263017,21264241,21265511,21267298,21269068,21270855,21272616,21274390,21276247,21278042,21279826,21281612,21283476,21285316,21287133,21288955,21290501,21291333,21292146,21292956,21293895,21295040,21296224,21297366,21298549,21299873,21301061,21302248,21303429,21304757,21306130,21307520,21308855,21310420,21312260,21314114,21315973,21317833,21319705,21321497,21323352,21325183,21327142,21329042,21330978,21332902,21334832,21336748,21338666,21340637,21342560,21344363,21346220,21348039,21349786,21351618,21353448,21355171,21356755,21358426,21360199,21362040,21363878,21365778,21367665,21369463,21371347,21373211,21374721,21376189,21377586,21379101,21380659,21382247,21384025,21385612,21387163,21388794,21390446,21392147,21393822,21395571,21397344,21399122,21400926,21402807,21404859,21406907,21408868,21410822,21412801,21414788,21416754,21418742,21420685,21422646,21424568,21426459,21427653,21428933,21430328,21431367,21433072,21434852,21436595,21438350,21440091,21441657,21443262,21444738,21446374,21448162,21449921,21451704,21453438,21455286,21457087,21458904,21460671,21462460,21464171,21465881,21467587,21469244,21470908,21472716,21474513,21476126,21477381,21478378,21479455,21480559,21481933,21482841,21483756,21484646,21485968,21486928,21488137,21489075,21490372,21490927,21491606,21492085,21492662,21493636,21494392,21495191,21495843,21496577,21497735,21498961,21500153,21501154,21502469,21503820,21505278,21506652,21507975,21509453,21511013,21512673,21514009,21515417,21517075,21518614,21520079,21521806,21523423,21525096,21526669,21526911,21527133,21527327,21527612,21528467,21528964,21529372,21529830,21531479,21533514,21535563,21537607,21539638,21541669,21543711,21545768,21547782,21549793,21551742,21553682,21555632,21557511,21559435,21561358,21563281,21565005,21566434,21567772,21569270,21570738,21571870,21573076,21574208,21575282,21576718,21578170,21579575,21581038,21582717,21584591,21586410,21588240,21590120,21591979,21593787,21595558,21597428,21599241,21600979,21602714,21604484,21606190,21607950,21609755,21611462,21613073,21614467,21615951,21617404,21618907,21620326,21621776,21623387,21624858,21626655,21628514,21630384,21632256,21633890,21635099,21636328,21637548,21639120,21640961,21642761,21644536,21646374,21647770,21649225,21650674,21652112,21654035,21656076,21658103,21660154,21662197,21664198,21666194,21668160,21670155,21671650,21673168,21674667,21676154,21677935,21679597,21681254,21682930,21684888,21686853,21688844,21690834,21692865,21694593,21696302,21698025,21699811,21701865,21703909,21705953,21708004,21709577,21710844,21711933,21712471,21713001,21713535,21714289,21715474,21716931,21718360,21719518,21720735,21722230,21723588,21725014,21726305,21727840,21729363,21730980,21732439,21733831,21735512,21737289,21739049,21740893,21742527,21743747,21745063,21746315,21747702,21748654,21749639,21750656,21751698,21752643,21753508,21754568,21755646,21756526,21758526,21760502,21762445,21764398,21766419,21768428,21770408,21772405,21774388,21775979,21777447,21779083,21780784,21782450,21784112,21785827,21787466,21789270,21790767,21792254,21793864,21795690,21797281,21799015,21800702,21802396,21803874,21805588,21807182,21808610,21810091,21811679,21813221,21814649,21816499,21818402,21820273,21822118,21824015,21825922,21827790,21829649,21831559,21833195,21834722,21836163,21837806,21839785,21841764,21843732,21845730,21847718,21849531,21851317,21853122,21854964,21856830,21858745,21860662,21862474,21863918,21865376,21866804,21868150,21869628,21871130,21872652,21874144,21875669,21877205,21878962,21880648,21882276,21883744,21885345,21886873,21888366,21890113,21891837,21893464,21895217,21896904,21898630,21900308,21902087,21903766,21905440,21906980,21908659,21910321,21911999,21913640,21915173,21916851,21918459,21920031,21921573,21923054,21924544,21926342,21927677,21929415,21931093,21932546,21934045,21935597,21937139,21938644,21940164,21941822,21943441,21944789,21946108,21947428,21948942,21950541,21952379,21953781,21955317,21957023,21958473,21960202,21961967,21963662,21965301,21966885,21968153,21969358,21970562,21971852,21973190,21974412,21975721,21977415,21978817,21980296,21981575,21982971,21984099,21985252,21986480,21987699,21988995,21990427,21991873,21993241,21994672,21996250,21997493,21998772,22000285,22002046,22003900,22005599,22006980,22008154,22009168,22010088,22010998,22012076,22013227,22014467,22015739,22017141,22018788,22020363,22022015,22023842,22025348,22026530,22027533,22028564,22029496,22030229,22031028,22032366,22033439,22034720,22035955,22037193,22038509,22040005,22041664,22043378,22045243,22047123,22048881,22050656,22052392,22053811,22055084,22056266,22057577,22058840,22060169,22061471,22062757,22063999,22065290,22066600,22067876,22069215,22070918,22072500,22074180,22075801,22077316,22078737,22080377,22082047,22083691,22085111,22086312,22087504,22088793,22090048,22091286,22092700,22094189,22096045,22097488,22098768,22100155,22101399,22102613,22103696,22104956,22106345,22107951,22109655,22111326,22112943,22114382,22115751,22117228,22118542,22120380,22121820,22123261,22124516,22125775,22127046,22128217,22129467,22130868,22132477,22134205,22135904,22137578,22139097,22140725,22142466,22143974,22145624,22147176,22148213,22148461,22149426,22151001,22152106,22152358,22153266,22154830,22155902,22156139,22157067,22158635,22159715,22159947,22160859,22162386,22163493,22163755,22164617,22166148,22167262,22167521,22168314,22169548,22170807,22172104,22173468,22174849,22176108,22177481,22178750,22180160,22181441,22182743,22184001,22185437,22186743,22188068,22189379,22190701,22192107,22193567,22194820,22196042,22197299,22198550,22199786,22201031,22202303,22203865,22205035,22206256,22207444,22208676,22209895,22211059,22212271,22213494,22214995,22216245,22217508,22218781,22220036,22221283,22222532,22223779,22225360,22227111,22228849,22230620,22232269,22233944,22235634,22237460,22239385,22240555,22241892,22243193,22244599,22245909,22247319,22248577,22249913,22251285,22252637,22254022,22255362,22256726,22258123,22259503,22260869,22262686,22264377,22265998,22267569,22269218,22270776,22272318,22273795,22275031,22276413,22277772,22279207,22280796,22282304,22283761,22285274,22286963,22288878,22290553,22292172,22293745,22295408,22296979,22298545,22300077,22301365,22302779,22304112,22305523,22307072,22308560,22310052,22311567,22313225,22315105,22316809,22318431,22320041,22321676,22323247,22324851,22326352,22327640,22329016,22330371,22331749,22333293,22334783,22336317,22337796,22339414,22341256,22343020,22344656,22346255,22347833,22349425,22351032,22352517,22353842,22355190,22356572,22357958,22359499,22361008,22362547,22363988,22365591,22367381,22368918,22370132,22371279,22372286,22373116,22374084,22375137,22376144,22377268,22378429,22379688,22380884,22381911,22382845,22383882,22384922,22385994,22387668,22388877,22390090,22391110,22391946,22392861,22393942,22394931,22396017,22397125,22398407,22399605,22400678,22401560,22402590,22403607,22404664,22406604,22408540,22410437,22412380,22414335,22416345,22418261,22420209,22422085,22423926,22425687,22427502,22429386,22431289,22433247,22435187,22437129,22438603,22440574,22442496,22444450,22446438,22448411,22450376,22452328,22454304,22456224,22458001,22459768,22461527,22463302,22465052,22466894,22468655,22470395,22472182,22473954,22475732,22477483,22479206,22480903,22482911,22484861,22486750,22488648,22490540,22492516,22494112,22494831,22495680,22497701,22499656,22501665,22503648,22505599,22507566,22509557,22511514,22513530,22515490,22517451,22519407,22521395,22523371,22525360,22527302,22529263,22531068,22532641,22534204,22535770,22537327,22538903,22540452,22542023,22543687,22545463,22547075,22548785,22550370,22551999,22553852,22555656,22557499,22559311,22560996,22562523,22564086,22565573,22567279,22568938,22570672,22572272,22573987,22575621,22577300,22579027,22580798,22582626,22584468,22586299,22588182,22590014,22591659,22593376,22594945,22596738,22598568,22600384,22602229,22604061,22605638,22607236,22608816,22610367,22612040,22613721,22615466,22617113,22618880,22620596,22622378,22624114,22625928,22627488,22629037,22630757,22632491,22634169,22635722,22637586,22639222,22640981,22642641,22644455,22646115,22647808,22649381,22651032,22652741,22654247,22655797,22657524,22659199,22660827,22662286,22663886,22665830,22667664,22668674,22670543,22672462,22674142,22675937,22677466,22679486,22681487,22683496,22685257,22686761,22688103,22689313,22690590,22691833,22693337,22694932,22696509,22698011,22699461,22700941,22702443,22703959,22705491,22706966,22708200,22709175,22710056,22711070,22712362,22713464,22714447,22715560,22716646,22718421,22720240,22722107,22723999,22725775,22727644,22729397,22731191,22733165,22734921,22736510,22738147,22739796,22741528,22743302,22745087,22746752,22748605,22750434,22752307,22754197,22755951,22757848,22759609,22761428,22763364,22765204,22766813,22768482,22770146,22771878,22773668,22775457,22777138,22778998,22780779,22782685,22784472,22786399,22788169,22790112,22791898,22793816,22795798,22797699,22799695,22801667,22803553,22805505,22807482,22809445,22811438,22813286,22814981,22816724,22818543,22820316,22822184,22824062,22825874,22827565,22829194,22830461,22831746,22833429,22834987,22836597,22837804,22838979,22840084,22841078,22841559,22841871,22843083,22844360,22845666,22846959,22848294,22849763,22851037,22852378,22853679,22855109,22856457,22857752,22859109,22860375,22861814,22863178,22864485,22865871,22867175,22868630,22870197,22871361,22872786,22874231,22876041,22877953,22879916,22881958,22883998,22886005,22888003,22889964,22891934,22893574,22895189,22896702,22898188,22899928,22901520,22903241,22904974,22906534,22908281,22910081,22911665,22913433,22915000,22916571,22918191,22919817,22921470,22923280,22925181,22927096,22928926,22930579,22932309,22934136,22936082,22938033,22939896,22941590,22943352,22945202,22947128,22948958,22950717,22952350,22954194,22956115,22958004,22959879,22961507,22963274,22965181,22967162,22969113,22971040,22972763,22974451,22976332,22978226,22980097,22981855,22983193,22984165,22985170,22986145,22987523,22989015,22990610,22992198,22993844,22995463,22997161,22998800,23000420,23001999,23003846,23005546,23007275,23008998,23010593,23012305,23013924,23015563,23017247,23018954,23020888,23022626,23024339,23026080,23027801,23029550,23031277,23032886,23034599,23036271,23038006,23039685,23041282,23042961,23044595,23046119,23048102,23050002,23051863,23053801,23055750,23057680,23059556,23061259,23063036,23064688,23066364,23068133,23070086,23071952,23073860,23075743,23077639,23079642,23081557,23083520,23085453,23087373,23089191,23090986,23092775,23094572,23096469,23098427,23100292,23102181,23104084,23105988,23107836,23109705,23111372,23112732,23113937,23115309,23117024,23118619,23120278,23121897,23123811,23125683,23127525,23129369,23131215,23133064,23134900,23136771,23138655,23140520,23142420,23144322,23145213,23145812,23146440,23147376,23148449,23149428,23150746,23151982,23153285,23154245,23156071,23157774,23159395,23160945,23162701,23164305,23165966,23167661,23169236,23170713,23172363,23173821,23175147,23176389,23177974,23179621,23181301,23183022,23184722,23186441,23188163,23189774,23191472,23192811,23194147,23195706,23197152,23198696,23200180,23201669,23203120,23204585,23206013,23207373,23208718,23210582,23212383,23214204,23216062,23217908,23219762,23221623,23223434,23225333,23227152,23228971,23230813,23232751,23234650,23236522,23238375,23240260,23242247,23244255,23246219,23248105,23250013,23251888,23253828,23255748,23257689,23259577,23261513,23263422,23265294,23267168,23269028,23270931,23272815,23274574,23276067,23277544,23279116,23280758,23282364,23283945,23285604,23287211,23288842,23290464,23292080,23293826,23295484,23297114,23298790,23300440,23302071,23303717,23305348,23307041,23308733,23310392,23312046,23313700,23315331,23316957,23318579,23320222,23322114,23323983,23325865,23327696,23329561,23331433,23333257,23335125,23336965,23338907,23340765,23342608,23344457,23346296,23348131,23349966,23351821,23353767,23355639,23357497,23359358,23361230,23363077,23364916,23366784,23368665,23370264,23371651,23373078,23374514,23375814,23377266,23378684,23380286,23381690,23382992,23384476,23385956,23387367,23388785,23390622,23392497,23394334,23396164,23397972,23399804,23401628,23403536,23405467,23407123,23408854,23410565,23412250,23413933,23415638,23417400,23418997,23420723,23422308,23424094,23425796,23427509,23429255,23431030,23432750,23434338,23435985,23437885,23439718,23441551,23443424,23445016,23446827,23448689,23450554,23452402,23454250,23455918,23457654,23459440,23461209,23463011,23464762,23466380,23468125,23469821,23471504,23473332,23474947,23476667,23478418,23480232,23481975,23483753,23485475,23487150,23488845,23490484,23492149,23493875,23495256,23496440,23497701,23498887,23500133,23501415,23502567,23503920,23505588,23507120,23508632,23510283,23511951,23513493,23515053,23516632,23518200,23519756,23521294,23522885,23524764,23526632,23528568,23530457,23532341,23533864,23535508,23536927,23538523,23540267,23542072,23543854,23545570,23547349,23548824,23550288,23551996,23553741,23555493,23556967,23558330,23559791,23561652,23563551,23565034,23566484,23568111,23569525,23571063,23572638,23574096,23575776,23577284,23578758,23580279,23581811,23583287,23584864,23586291,23587805,23589337,23590832,23592433,23593916,23595396,23596907,23598550,23600101,23601587,23603149,23604496,23605990,23607406,23608927,23610822,23612665,23614498,23616291,23618093,23619912,23621665,23623407,23625095,23626669,23628478,23630175,23631965,23633760,23635370,23637132,23638918,23640551,23642405,23644345,23646203,23648090,23649984,23651734,23653657,23655356,23657116,23658877,23660460,23662219,23663943,23665728,23667363,23669101,23670846,23672607,23674300,23676094,23677791,23679582,23681291,23682938,23684618,23686240,23687980,23689696,23691513,23693161,23694839,23696569,23698301,23699998,23701730,23703402,23705133,23706845,23708629,23710169,23711577,23713268,23715041,23716703,23718418,23720180,23721802,23723252,23724814,23726325,23727852,23729244,23730762,23732274,23733788,23735442,23737237,23738927,23740667,23742436,23744090,23745797,23747515,23749184,23750802,23752475,23754099,23755794,23757385,23758992,23760621,23762326,23763962,23765624,23767230,23768917,23770553,23772194,23773835,23775478,23777199,23778822,23780475,23782110,23783801,23785430,23787061,23788681,23790405,23792046,23793699,23795364,23796997,23798749,23800365,23801979,23803575,23805337,23806968,23808678,23810377,23812170,23813801,23815442,23817050,23818740,23820389,23821999,23823693,23825376,23827185,23828786,23830398,23832030,23833743,23835391,23837276,23839032,23840717,23842337,23844139,23845918,23847497,23849263,23851077,23852869,23854576,23856483,23858364,23860240,23862179,23864192,23866126,23868067,23870024,23872007,23873743,23875606,23877541,23879535,23881532,23883532,23885536,23887360,23889287,23891112,23892927,23894843,23896847,23898875,23900893,23902892,23904857,23906805,23908726,23910639,23912518,23914425,23916329,23918263,23920214,23922195,23923966,23925862,23927750,23929647,23931510,23933259,23934853,23936492,23938440,23940213,23942036,23943573,23945185,23946802,23948428,23950015,23951827,23953249,23954650,23955959,23957301,23958719,23960243,23961735,23963088,23964531,23966073,23967543,23968973,23970411,23971851,23973371,23974870,23976262,23977947,23979702,23981510,23983206,23984898,23986588,23988335,23990059,23991726,23993447,23995134,23996890,23998555,24000224,24001887,24003577,24005197,24006928,24008598,24010274,24011904,24013648,24015333,24016980,24018621,24020351,24021986,24023623,24025264,24027003,24028952,24030838,24032731,24034672,24036550,24038477,24040358,24042250,24044183,24045966,24047740,24049525,24051446,24053458,24055443,24057500,24059553,24061583,24063639,24065660,24067688,24069725,24071766,24073806,24075854,24077908,24079961,24082001,24084039,24086075,24087929,24089782,24091661,24093587,24095509,24097406,24099293,24101167,24102897,24104363,24105881,24107255,24108933,24110561,24112196,24113712,24115289,24116927,24118479,24120104,24121626,24123054,24124604,24126216,24127760,24129284,24130928,24132379,24133787,24135339,24136745,24138509,24140367,24142182,24143905,24145584,24147219,24149042,24150889,24152762,24154610,24156399,24158184,24159837,24161669,24163506,24165314,24166920,24168928,24170915,24172917,24174834,24176736,24178663,24180243,24181946,24183654,24185400,24187106,24188887,24190687,24192441,24194112,24195882,24197580,24199281,24200956,24202618,24204149,24205647,24207150,24208674,24210209,24211731,24213263,24214772,24216307,24217808,24219302,24220847,24222343,24223897,24225437,24226936,24228448,24229947,24231256,24232545,24233832,24235012,24237000,24238936,24240860,24242741,24244675,24246639,24248576,24250497,24252368,24253717,24254984,24256295,24257643,24259002,24260327,24261628,24263090,24264733,24266201,24267649,24269263,24270908,24272377,24273970,24275532,24277242,24278946,24280616,24282285,24283938,24285609,24287248,24288914,24290629,24292281,24293510,24294795,24296121,24297391,24298700,24299944,24301150,24302566,24303817,24304907,24305927,24307041,24308230,24309397,24310408,24311747,24313238,24314491,24315805,24317037,24318276,24319520,24320784,24322183,24323456,24325011,24326341,24327671,24329030,24330370,24331730,24333022,24334337,24336060,24337660,24339285,24341022,24342742,24344360,24345874,24347144,24348991,24350971,24352477,24353514,24354770,24355930,24357287,24358402,24359939,24361900,24363829,24365416,24367159,24368979,24370800,24372545,24374121,24376063,24377253,24377686,24378283,24378752,24379272,24379792,24380322,24380782,24381646,24382118,24383193,24384501,24385940,24387298,24388474,24389615,24390095,24390959,24391507,24392909,24394355,24395876,24397379,24398765,24399839,24400415,24401920,24402977,24404376,24405522,24407012,24408372,24409576,24410760,24412562,24414348,24416061,24417803,24419614,24419979,24420091,24421286,24421779,24422417,24423059,24423607,24424096,24424866,24425509,24426015,24427318,24428255,24429161,24430590,24432008,24433398,24434812,24436213,24437779,24439378,24441089,24442685,24444323,24445870,24447464,24449314,24450898,24452021,24453197,24454372,24455621,24456911,24458187,24459507,24460766,24462195,24463717,24465323,24466941,24468612,24470201,24471576,24472930,24474308,24475175,24475200,24475230,24475255,24475722,24476396,24477633,24478363,24479834,24481458,24483138,24484753,24486381,24487585,24489253,24490761,24492369,24493885,24495595,24497493,24499432,24501333,24503278,24505160,24506880,24507806,24508966,24510461,24511807,24512749,24513687,24514950,24516271,24517663,24519108,24520603,24522113,24523671,24525293,24527008,24528770,24530297,24531898,24533390,24534944,24536528,24538029,24539579,24541282,24543334,24545382,24547417,24549426,24551313,24553259,24555278,24557245,24558985,24560897,24562774,24564719,24566711,24568743,24570737,24572769,24574762,24576782,24578756,24580786,24582836,24584839,24586555,24588389,24590385,24592391,24594387,24596323,24597987,24599582,24600813,24602068,24603253,24604686,24606679,24608586,24610303,24612052,24613943,24615831,24617597,24619384,24621164,24623009,24624945,24626910,24628870,24630838,24632805,24634769,24636778,24638647,24640192,24641750,24643307,24644828,24646343,24647908,24649430,24650938,24652306,24653699,24655021,24656343,24657630,24658931,24660277,24661808,24663821,24665845,24667828,24669797,24671800,24673760,24675677,24677611,24679623,24681453,24683166,24684837,24686503,24688223,24689871,24691186,24691401,24691847,24693085,24694407,24695718,24696697,24697723,24698667,24699778,24700936,24702557,24704267,24705829,24707524,24709253,24710930,24712461,24714019,24715591,24717211,24718758,24720347,24721834,24723321,24724568,24725959,24727013,24728205,24729500,24730825,24732060,24733394,24734822,24736325,24737895,24739501,24740946,24742391,24743805,24745074,24746027,24747094,24748684,24750190,24750967,24752131,24753409,24754779,24756269,24757742,24759229,24760729,24761907,24763189,24764643,24766141,24767841,24769558,24771419,24773252,24775036,24776832,24778399,24780039,24781640,24783301,24784877,24786481,24787973,24789557,24791059,24792504,24793742,24795140,24796669,24798247,24799617,24801006,24802370,24803782,24805147,24806411,24806934,24807577,24808018,24808746,24810172,24811706,24813257,24814801,24816226,24817702,24819255,24820712,24822084,24823411,24824560,24825728,24827023,24828401,24829915,24831286,24832376,24833184,24833499,24834399,24836129,24838033,24839821,24841599,24843163,24844557,24845578,24846683,24848241,24849828,24851392,24852931,24854510,24856082,24857632,24859339,24861102,24862936,24864656,24866484,24868260,24870142,24871912,24873661,24875078,24876476,24877815,24879216,24880635,24882135,24883808,24885520,24887067,24888633,24890129,24891618,24893170,24894698,24896171,24897832,24899736,24901557,24903097,24904352,24905087,24905848,24906703,24907930,24909444,24911037,24912704,24914411,24915891,24917500,24918864,24920211,24921446,24922410,24923010,24923847,24924667,24925545,24926166,24927115,24928550,24929775,24930293,24930854,24931346,24932338,24934089,24935779,24936866,24938018,24939042,24940219,24941594,24942940,24944029,24945162,24946068,24947066,24948502,24949984,24951420,24952874,24954297,24955864,24957558,24959316,24960952,24962739,24964603,24966465,24968032,24969435,24970434,24971590,24972724,24973897,24974855,24975856,24976685,24977766,24978765,24979900,24981123,24982280,24982729,24983278,24983901,24984575,24985076,24985624,24986249,24986920,24987434,24988010,24988655,24989376,24989907,24990503,24991115,24991789,24992223,24992730,24993298,24994352,24996232,24997917,24998961,25000097,25001132,25002262,25003297,25004396,25005507,25006845,25008640,25010304,25011991,25013705,25015339,25017015,25018744,25020303,25021457,25022789,25024449,25026108,25027788,25029552,25031428,25032890,25033099,25033422,25033698,25034057,25034244,25034527,25034791,25035145,25035196,25035465,25035490,25035670,25035827,25036110,25036395,25036695,25036936,25037575,25039026,25040522,25042149,25043686,25044750,25045831,25046896,25048026,25049191,25050537,25052011,25053537,25054988,25056609,25058457,25060336,25062030,25063740,25065129,25066756,25068379,25070033,25071409,25072839,25074085,25075356,25076970,25078543,25080119,25081301,25082936,25084379,25085871,25087352,25088741,25089995,25091432,25092897,25094300,25095824,25097350,25098863,25100154,25101268,25102571,25103915,25105279,25106488,25107806,25108899,25110033,25111083,25112557,25114080,25115583,25117061,25118594,25120129,25121651,25123169,25124223,25124985,25125592,25126090,25126862,25127574,25128359,25129013,25129614,25130164,25130693,25131392,25132066,25132762,25133458,25134162,25134920,25135597,25136329,25137169,25137952,25138650,25139216,25139674,25140609,25142627,25144613,25146374,25148128,25149818,25151493,25153185,25154895,25156610,25158313,25160019,25161713,25163590,25165537,25167354,25169127,25170811,25172492,25174258,25175979,25177734,25178791,25179767,25181040,25182826,25184301,25185980,25187834,25189378,25190853,25192318,25193799,25195281,25196752,25198234,25199709,25201201,25202489,25203064,25203597,25204152,25204792,25205384,25205816,25206389,25207012,25207587,25208148,25208758,25209366,25209947,25210487,25210805,25211222,25211759,25212179,25212370,25212871,25213479,25213828,25214171,25214615,25214979,25215465,25216714,25218652,25220499,25222163,25223812,25225500,25227174,25228846,25230513,25232177,25233874,25235560,25237253,25238931,25240818,25242678,25244326,25246037,25247710,25249462,25251253,25252922,25254584,25255658,25256376,25257083,25258405,25260303,25261956,25263689,25265268,25267023,25268844,25270417,25271951,25273425,25274950,25276439,25277928,25279426,25280935,25282437,25283923,25285432,25286932,25288424,25289901,25291417,25292895,25294400,25295904,25297399,25298862,25300332,25300964,25301283,25301854,25302427,25303087,25303607,25304200,25304898,25305480,25305799,25306385,25306824,25307265,25307731,25308208,25308497,25308884,25309513,25310156,25310776,25311409,25312121,25312670,25313341,25313986,25314547,25315179,25315617,25316170,25316514,25317043,25317553,25317979,25318309,25318733,25319214,25319683,25320104,25320616,25321029,25321500,25321955,25322547,25323110,25323680,25324233,25324552,25325139,25325532,25326057,25326530,25326937,25327298,25327843,25328254,25328763,25329305,25329534,25329843,25330396,25332282,25334268,25336298,25338300,25340306,25342358,25344066,25345741,25347443,25349124,25350828,25352544,25354264,25355947,25357646,25359316,25361002,25362703,25364380,25366074,25367764,25369454,25371159,25372871,25374607,25376325,25378022,25379708,25381401,25383120,25384794,25386499,25388171,25390110,25392158,25394206,25396065,25397660,25399345,25401082,25402768,25404500,25406273,25407916,25409604,25411339,25413052,25414719,25416392,25418047,25419805,25421584,25423281,25424950,25426595,25428310,25429950,25430871,25431768,25432697,25433462,25434186,25435151,25436200,25437219,25438247,25439457,25440651,25441797,25442747,25443867,25444794,25445833,25446671,25447553,25448847,25449617,25451604,25453570,25455465,25457233,25458818,25460272,25461845,25463329,25464839,25466370,25467861,25469316,25470830,25472330,25473812,25475274,25475766,25476325,25476697,25477124,25477567,25477936,25478425,25478795,25479453,25480098,25480642,25481223,25481793,25482323,25482864,25483080,25483339,25483468,25483831,25484319,25485001,25485492,25485992,25486472,25486897,25487284,25487811,25488225,25488430,25488738,25490476,25492519,25494455,25496154,25497874,25499542,25501250,25502949,25504651,25506344,25508049,25509732,25511515,25513237,25514903,25516591,25518639,25520527,25522259,25523925,25525620,25527378,25529106,25530801,25532574,25534402,25536041,25537647,25538671,25539810,25541283,25542697,25544627,25546342,25547799,25549374,25550855,25552357,25553847,25555327,25556817,25558304,25559784,25561236,25562728,25563065,25563316,25563547,25563724,25564235,25564687,25564894,25565146,25565489,25565927,25566189,25566602,25566961,25567270,25567382,25567545,25567696,25568093,25568386,25568849,25569342,25569627,25569900,25570268,25570774,25571311,25571635,25571956,25573405,25575400,25577437,25579110,25580797,25582515,25584188,25585886,25587578,25589244,25590905,25592593,25594295,25596006,25597726,25599594,25601642,25603444,25605303,25607086,25608861,25610597,25612257,25613981,25615804,25617618,25619487,25620904,25621518,25622013,25622903,25623952,25624797,25626222,25627870,25629570,25631304,25632771,25634262,25635771,25637269,25638753,25640227,25641050,25641496,25641902,25642208,25642572,25643057,25643325,25643729,25644157,25644593,25644934,25645393,25645789,25646069,25646300,25646704,25647171,25648383,25650352,25652123,25653803,25655500,25657170,25658847,25660544,25662232,25663952,25665927,25667735,25669489,25671142,25672868,25674641,25676470,25678289,25679207,25680408,25681835,25683337,25684995,25686537,25688037,25689541,25690967,25691545,25692099,25692540,25693002,25693549,25694045,25694608,25695129,25695521,25695883,25696181,25697091,25699027,25700682,25702334,25703982,25705659,25707323,25709303,25710977,25712614,25714312,25715774,25717065,25718707,25720329,25721859,25723301,25724818,25726309,25727804,25729305,25730789,25732285,25733769,25735269,25736769,25738305,25739775,25741270,25742769,25744263,25745662,25746190,25746678,25747156,25747448,25747759,25748236,25748733,25749079,25749376,25749855,25750349,25750860,25751265,25751635,25752088,25752481,25752962,25753372,25753853,25754169,25754339,25754491,25754922,25755176,25755480,25755683,25755885,25756180,25756543,25756829,25757153,25757438,25757835,25758091,25758421,25758862,25759241,25759627,25759991,25760374,25760703,25761199,25761533,25761904,25762250,25762535,25762889,25763279,25763533,25763965,25764482,25764926,25765577,25767562,25769481,25771445,25773409,25775347,25777003,25778683,25780359,25782046,25783724,25785415,25787084,25788756,25790476,25792199,25793875,25795556,25797221,25798894,25800565,25802244,25803906,25805591,25807272,25808952,25810619,25812307,25813982,25815883,25817931,25819971,25821602,25823223,25824842,25826477,25828123,25829801,25831613,25833327,25835051,25836724,25838430,25840013,25841625,25843273,25844966,25846660,25848294,25849287,25849926,25850630,25851211,25851870,25852384,25853440,25854734,25856258,25857369,25858561,25859555,25860975,25862477,25863926,25865230,25866725,25868188,25869569,25871451,25873261,25875095,25876908,25878495,25880048,25881524,25882993,25884474,25885968,25887447,25888952,25890454,25891941,25893444,25894948,25896180,25896690,25897183,25897833,25898518,25899043,25899587,25900021,25900506,25900854,25901002,25901511,25901784,25902231,25902711,25903307,25903755,25904048,25904470,25905055,25905632,25906328,25906915,25907489,25907813,25908399,25908645,25909020,25909565,25910237,25910939,25911618,25912074,25912386,25912777,25913343,25913673,25913841,25915117,25917102,25919075,25921074,25922785,25924502,25926158,25927872,25929568,25931261,25932942,25934654,25936357,25938051,25939757,25941508,25943199,25944927,25946622,25948338,25950354,25952402,25954207,25955968,25957692,25959449,25961250,25963037,25964788,25966535,25968263,25970039,25971825,25973604,25975374,25976951,25977874,25978834,25979975,25981364,25983004,25984429,25985964,25987928,25989712,25991311,25992882,25994567,25996128,25997614,25999100,26000604,26002101,26003586,26005084,26006573,26008057,26009542,26011038,26012548,26014033,26015522,26016985,26018470,26019940,26021415,26022897,26024395,26025900,26027266,26027828,26028493,26029163,26029743,26030346,26030889,26031414,26032056,26032684,26033230,26033736,26034119,26034532,26035110,26035681,26036141,26036587,26037060,26037623,26038081,26038761,26039169,26039716,26040313,26040741,26041144,26041676,26042179,26042696,26043300,26043613,26044155,26044564,26044991,26045426,26045963,26046327,26046577,26047038,26047512,26047979,26048512,26049042,26049429,26049660,26050135,26050575,26050868,26051288,26051666,26051877,26052178,26052511,26052988,26053479,26053974,26054431,26054659,26055206,26055711,26056047,26056307,26056673,26057181,26057613,26057942,26058211,26058760,26059281,26059699,26060184,26060611,26060986,26061575,26062185,26062799,26064835,26066887,26068935,26070991,26073039,26075087,26077108,26078848,26080574,26082319,26084061,26085839,26087613,26089362,26091063,26092804,26094525,26096265,26098003,26099701,26101425,26103175,26104929,26106696,26108439,26110196,26111968,26113717,26115471,26117192,26118913,26120632,26122412,26124163,26125944,26127691,26129428,26131187,26132962,26134697,26136442,26138247,26140295,26142343,26144391,26146439,26148392,26150131,26151930,26153766,26155624,26157512,26159301,26161088,26162890,26164714,26166508,26168198,26169959,26171792,26173602,26175413,26177248,26179041,26180876,26182714,26184564,26186368,26188112,26189932,26191803,26193679,26195531,26197356,26199198,26201038,26202902,26204758,26206570,26208016,26208891,26209686,26210541,26211249,26212158,26213527,26214777,26216264,26217351,26218537,26220010,26221214,26222232,26223065,26223869,26225086,26226431,26227962,26229196,26231177,26233125,26234996,26236759,26238414,26239841,26241482,26243068,26244647,26246196,26247688,26249185,26250693,26252213,26253727,26255230,26256667,26258142,26259633,26261132,26262594,26264086,26265571,26267087,26268597,26270085,26271581,26273082,26274560,26276056,26276968,26277472,26278162,26278751,26279227,26279724,26280094,26280647,26281215,26281832,26282517,26283103,26283729,26284403,26284895,26285393,26285866,26286411,26287020,26287513,26287878,26288313,26288827,26289395,26289963,26290331,26290881,26291325,26291719,26292281,26292756,26292962,26293167,26293539,26293969,26294407,26294742,26295178,26295410,26295863,26296247,26296728,26297077,26297369,26297801,26298183,26298745,26299043,26299374,26299532,26299970,26300380,26300723,26300903,26301126,26301313,26301622,26301882,26302438,26302952,26303405,26303994,26304429,26304893,26305427,26307391,26309389,26311318,26313296,26315275,26317229,26318870,26320551,26322227,26323910,26325568,26327268,26328986,26330684,26332363,26334050,26335688,26337335,26339022,26340723,26342420,26344089,26345798,26347492,26349179,26350863,26352528,26354220,26355882,26357557,26359233,26360909,26362574,26364258,26366306,26368354,26370410,26371985,26373690,26375396,26377133,26378905,26380698,26382336,26383974,26385647,26387439,26389158,26390942,26392644,26394379,26396116,26397827,26399542,26401238,26402932,26404684,26406151,26406988,26407709,26408260,26408806,26409560,26410289,26411276,26412292,26413242,26413934,26414672,26415276,26416002,26416688,26417378,26418121,26418767,26419503,26419979,26420316,26421034,26421686,26422682,26423401,26423977,26424487,26425135,26426744,26427307,26428907,26430574,26432358,26434149,26435932,26437583,26439262,26440748,26442377,26444001,26445545,26447023,26448508,26449992,26451474,26452947,26454419,26455915,26457385,26458849,26460318,26461814,26463274,26464760,26466223,26467692,26469164,26470646,26472129,26473588,26475062,26476551,26478039,26479520,26480998,26482486,26483985,26485457,26486931,26488376,26489861,26491310,26492791,26494250,26495714,26497187,26498671,26500122,26501575,26503044,26504504,26505999,26507489,26508977,26510440,26511890,26513367,26514845,26516287,26517741,26519161,26520572,26521994,26523469,26524961,26526434,26527868,26529314,26530798,26532254,26533735,26535188,26536679,26538163,26539619,26541111,26542538,26544009,26545477,26546955,26548437,26549910,26551383,26552825,26554246,26554813,26555334,26555712,26556333,26556793,26557279,26557537,26558044,26558536,26558833,26559074,26559714,26560262,26560714,26561350,26561795,26562272,26562903,26563546,26564041,26564717,26565181,26565776,26566328,26566717,26567206,26567855,26568438,26569006,26569468,26569889,26570368,26570895,26571443,26571982,26572418,26572874,26573442,26573948,26574474,26575117,26575689,26576336,26576869,26577153,26577480,26577982,26578447,26578941,26579513,26580077,26580759,26581313,26581815,26582369,26582841,26583410,26583806,26584189,26584723,26585201,26585650,26586051,26586596,26587162,26587508,26587949,26588429,26588834,26589411,26589828,26590368,26590728,26591317,26591923,26592497,26593137,26593722,26594332,26594858,26595370,26595918,26596402,26596994,26597533,26597821,26598232,26598566,26599101,26599548,26600082,26600596,26600982,26601284,26601749,26602195,26602479,26602936,26603419,26603911,26604297,26604630,26605149,26605757,26606236,26606775,26607361,26607747,26607968,26608441,26608878,26609101,26609315,26609698,26610220,26610743,26611288,26611664,26612029,26612500,26612817,26613147,26613431,26613796,26614128,26614718,26615096,26615532,26616068,26616523,26617107,26617722,26618246,26618787,26619325,26619910,26620376,26620774,26621217,26621686,26622222,26622820,26623355,26623842,26624331,26624840,26625373,26625717,26625973,26626425,26626908,26627337,26627910,26628430,26628924,26629502,26629983,26630308,26630623,26631184,26631693,26632190,26632613,26633049,26633547,26633971,26634426,26635063,26635672,26636121,26636597,26637076,26637551,26638015,26638578,26639201,26639747,26640132,26640493,26641025,26641503,26641896,26642408,26643059,26643440,26643787,26644237,26644535,26644835,26645065,26645471,26645841,26646139,26646525,26646741,26647270,26647786,26648403,26648972,26649422,26649714,26650084,26650667,26651191,26651719,26652158,26652685,26653178,26653663,26654169,26654646,26655101,26655614,26655933,26656204,26656607,26657022,26657613,26658168,26658701,26659105,26659523,26660053,26660575,26660952,26661546,26662103,26662581,26663087,26663554,26664005,26664542,26665071,26665465,26665974,26666470,26666665,26666831,26667318,26667899,26668446,26669050,26669521,26670037,26670553,26671042,26671555,26671933,26672561,26674463,26676395,26678343,26680257,26682185,26684129,26686125,26688087,26690059,26692077,26694021,26696011,26697965,26699900,26701897,26703870,26705803,26707803,26709855,26711805,26713482,26715112,26716745,26718410,26720092,26721807,26723527,26725244,26726934,26728598,26730297,26731970,26733678,26735348,26737039,26738709,26740390,26742066,26743748,26745416,26747094,26748779,26750474,26752162,26753848,26755543,26757207,26758905,26760586,26762261,26763953,26765639,26767306,26768988,26770682,26772362,26774052,26775720,26777411,26779106,26780769,26782422,26784065,26785739,26787439,26789087,26790779,26792433,26794112,26795751,26797405,26799086,26800762,26802413,26804092,26805800,26807494,26809179,26810862,26812546,26814222,26815878,26817568,26819234,26820875,26822582,26824305,26825993,26827671,26829333,26830986,26832643,26834339,26835999,26837650,26839323,26840970,26842605,26844268,26845933,26847612,26849274,26850951,26852622,26854287,26855968,26857689,26859371,26861085,26862770,26864455,26866184,26867859,26869519,26871219,26872940,26874632,26876326,26878000,26879691,26881370,26883040,26884723,26886427,26888113,26889780,26891643,26893700,26895748,26897796,26899844,26901900,26903948,26905996,26908044,26910092,26912140,26914018,26915666,26917249,26918939,26920688,26922470,26924217,26925967,26927692,26929429,26931092,26932752,26934407,26936107,26937812,26939476,26941207,26942959,26944657,26946381,26948100,26949850,26951578,26953317,26954977,26956598,26958331,26960027,26961765,26963410,26965133,26966725,26968406,26970094,26971803,26973481,26975067,26976791,26978511,26980267,26982029,26983816,26985511,26987179,26988886,26990593,26992278,26994026,26995749,26997408,26999054,27000755,27002524,27004233,27005750,27007213,27008772,27010389,27012110,27013866,27015498,27017271,27019091,27020820,27022540,27024259,27025913,27027689,27029490,27031197,27032835,27034587,27036298,27038065,27039862,27041593,27043306,27044402,27045273,27046052,27046972,27047801,27048521,27049280,27049983,27050578,27051302,27051836,27052459,27053065,27053752,27053997,27054287,27055018,27055646,27056411,27057085,27057993,27058595,27059274,27059975,27060766,27061561,27062350,27063064,27063886,27064710,27065416,27066244,27067117,27067925,27068671,27069467,27070363,27071055,27071822,27072497,27073196,27073977,27074601,27075335,27076116,27076707,27077608,27078262,27079011,27079819,27080427,27081012,27081328,27081773,27082320,27082961,27083807,27084352,27084820,27085553,27086157,27086976,27087841,27088720,27089470,27090108,27090535,27091047,27091695,27092364,27093135,27093720,27094267,27094911,27095405,27095992,27096494,27097139,27097894,27098613,27099250,27100021,27100904,27101475,27102005,27102944,27103495,27104056,27104513,27105445,27106255,27107162,27107805,27108528,27109248,27109857,27110647,27111235,27111998,27112790,27113409,27114009,27114732,27115296,27116055,27116644,27117172,27117692,27118108,27118865,27119686,27120550,27121458,27122053,27122745,27123511,27124306,27124604,27125380,27126149,27126871,27127538,27128184,27128988,27129684,27130248,27130945,27131739,27132424,27133003,27133743,27134233,27134857,27135581,27136364,27136882,27137247,27137602,27137897,27138213,27138497,27138888,27139297,27139612,27139909,27140207,27140472,27140784,27141192,27141678,27142194,27142870,27143406,27143735,27144277,27144977,27145509,27146250,27146939,27147510,27148149,27148982,27149583,27150262,27150935,27151934,27152496,27152928,27153322,27153813,27154296,27154681,27155142,27155504,27155723,27156230,27156572,27156895,27157193,27157412,27157624,27158195,27158778,27159244,27159896,27160624,27161388,27161765,27161973,27162181,27162432,27162672,27162836,27163025,27163237,27163788,27165021,27166909,27168217,27170136,27172022,27173967,27175884,27177796,27179726,27181670,27183598,27185534,27187499,27189427,27191333,27193207,27195000,27196905,27198753,27200625,27202160,27203704,27205183,27206665,27208138,27209630,27211113,27212599,27214092,27215587,27217053,27217504,27218014,27218471,27219018,27219472,27219872,27220386,27220852,27221324,27221584,27222032,27222476,27223000,27223437,27223875,27224497,27224768,27225130,27225587,27225889,27226295,27226666,27227038,27227355,27227788,27228096,27228576,27228882,27229138,27229531,27229950,27230550,27232540,27234471,27236467,27238141,27239826,27241542,27243256,27244948,27246671,27248342,27250055,27251773,27253460,27255148,27256820,27258491,27260169,27261936,27263984,27265874,27267643,27269357,27271156,27272900,27274633,27276379,27278201,27279972,27281705,27283415,27285143,27286432,27287213,27288015,27289063,27290613,27291970,27293321,27294484,27296079,27297718,27299473,27301020,27302494,27304018,27305517,27306981,27308423,27309928,27311417,27312912,27314406,27315909,27316308,27316598,27317090,27317550,27317922,27318613,27319188,27319784,27320323,27320932,27321438,27321917,27322342,27322711,27323005,27323422,27323881,27324245,27324546,27324935,27325278,27325714,27326259,27326612,27326882,27327421,27327675,27327895,27328992,27331005,27333047,27334787,27336476,27338189,27339898,27341606,27343322,27345040,27346719,27348436,27350138,27351820,27353531,27355219,27357075,27359123,27360832,27362441,27364231,27366087,27367930,27369662,27371397,27373180,27375026,27376802,27378577,27380348,27381380,27382022,27382878,27384008,27384983,27386321,27387645,27389213,27390884,27392605,27394203,27395809,27397391,27398891,27400376,27401863,27403350,27404831,27406334,27407825,27409319,27410790,27412257,27413725,27415218,27416685,27418139,27419617,27421107,27422592,27424078,27425560,27427036,27428485,27429958,27431427,27432922,27434393,27435872,27437358,27438843,27440315,27441800,27443279,27444764,27446269,27447755,27449220,27450717,27451573,27452210,27452791,27453417,27454091,27454795,27455408,27455964,27456497,27457075,27457653,27458288,27458877,27459506,27460093,27460716,27461314,27461935,27462506,27463025,27463667,27464316,27464901,27465470,27465994,27466684,27467279,27467877,27468486,27469067,27469596,27470046,27470565,27471249,27471862,27472386,27472951,27473455,27473992,27474550,27475097,27475609,27476170,27476803,27477364,27477795,27478184,27478387,27478707,27479150,27479534,27480040,27480519,27480950,27481395,27481926,27482612,27483170,27483538,27483751,27483933,27484333,27484478,27484640,27484957,27485488,27485925,27486465,27486938,27487413,27488097,27488609,27489182,27489795,27490411,27491036,27491605,27492078,27492609,27493014,27493594,27494073,27494731,27495308,27495916,27496197,27496695,27497211,27497720,27498213,27498520,27498780,27499120,27499708,27500264,27500916,27501475,27501995,27502363,27502931,27503534,27504044,27504604,27505170,27505801,27506347,27506947,27507401,27507989,27509488,27511493,27513485,27515471,27517514,27519414,27521381,27523326,27525308,27527325,27529040,27530753,27532458,27534170,27535877,27537585,27539292,27540991,27542699,27544373,27546089,27547785,27549468,27551180,27552890,27554583,27556275,27557955,27559649,27561349,27562990,27564654,27566320,27567963,27569647,27571325,27573004,27574685,27576391,27578064,27579744,27581424,27583115,27584798,27586503,27588181,27589850,27591512,27593182,27594874,27596552,27598221,27599876,27601576,27603235,27604888,27606872,27608920,27610968,27613016,27615022,27616770,27618540,27620250,27621923,27623550,27625267,27626989,27628783,27630520,27632274,27634028,27635696,27637420,27639119,27640766,27642496,27644106,27645806,27647499,27649241,27650962,27652650,27654407,27656156,27657865,27659474,27661094,27662806,27664558,27666260,27667992,27669657,27670759,27671694,27672575,27673415,27674219,27674991,27675883,27676637,27677512,27678242,27679286,27680335,27681267,27682034,27683021,27683856,27685168,27686255,27687472,27688623,27689662,27690760,27692003,27693112,27694220,27695422,27696889,27698298,27699663,27700602,27701674,27702981,27703720,27704580,27705308,27705813,27706594,27707114,27707536,27708232,27709168,27710181,27711349,27712401,27713606,27714434,27715026,27715563,27716362,27717597,27718631,27719527,27720613,27722052,27723902,27725750,27727611,27729477,27731381,27733311,27735223,27737170,27739020,27740591,27742120,27743607,27745091,27746580,27748067,27749553,27751034,27752494,27753986,27755485,27756967,27757980,27758426,27758658,27759106,27759651,27759999,27760414,27760901,27761380,27761772,27761929,27762076,27762301,27762607,27762896,27763278,27763771,27764102,27764589,27765030,27765312,27765671,27766026,27766497,27766921,27767183,27767566,27767906,27768190,27768641,27768904,27769323,27769636,27769998,27770808,27772788,27774769,27776804,27778451,27780154,27781807,27783520,27785199,27786882,27788582,27790285,27791993,27793679,27795378,27797086,27798785,27800477,27802167,27804215,27806182,27807857,27809547,27811304,27813044,27814777,27816557,27818362,27820151,27821879,27823622,27825326,27826996,27827632,27828422,27829709,27831225,27832004,27832742,27833772,27835348,27837197,27838996,27840563,27842174,27843666,27845149,27846651,27848141,27849651,27851146,27851874,27852376,27852939,27853560,27854046,27854480,27855030,27855478,27855840,27856264,27856728,27857170,27857331,27857654,27858004,27858509,27858897,27859188,27859576,27859987,27860372,27860641,27861289,27863219,27865175,27866862,27868574,27870303,27871982,27873691,27875361,27877025,27878714,27880413,27882124,27884148,27885974,27887751,27889554,27891296,27893049,27894768,27896534,27898369,27899965,27900739,27901507,27903133,27904797,27906303,27907682,27909271,27910920,27912385,27913860,27915199,27916703,27918186,27919659,27921173,27922633,27924106,27925577,27927058,27928573,27930085,27931573,27933065,27934551,27935855,27936456,27936844,27937421,27938012,27938512,27939055,27939479,27939973,27940501,27940994,27941466,27942134,27942688,27943299,27943545,27943931,27944332,27944649,27945083,27945515,27946081,27946458,27946961,27947322,27947545,27947773,27948358,27948954,27949623,27950172,27950793,27951344,27951748,27952337,27952713,27953154,27953746,27954127,27954796,27955417,27955823,27956249,27956809,27957094,27957732,27959606,27961569,27963599,27965627,27967317,27969052,27970747,27972446,27974139,27975820,27977498,27979159,27980862,27982593,27984257,27985931,27987603,27989323,27991045,27992767,27994494,27996225,27997953,27999660,28001625,28003673,28005615,28007350,28009053,28010789,28012513,28014226,28015891,28017583,28019260,28020929,28022656,28024445,28026220,28027967,28029727,28031505,28032765,28033656,28034437,28035406,28036949,28038583,28039929,28041428,28042868,28044480,28045927,28047709,28049547,28051314,28052934,28054372,28055804,28057290,28058786,28060280,28061739,28063236,28064718,28066196,28067670,28069146,28070629,28072123,28073605,28075079,28076570,28077025,28077555,28078185,28078687,28079180,28079556,28080102,28080693,28081238,28081608,28082003,28082523,28082883,28083280,28083554,28083958,28084439,28085019,28085555,28086008,28086541,28087064,28087509,28087956,28088196,28088404,28088614,28089065,28089527,28089898,28090115,28090184,28090371,28090715,28091004,28091230,28091575,28092122,28092528,28092929,28093408,28093658,28093965,28094309,28094554,28096223,28098190,28100100,28102121,28103888,28105591,28107279,28108947,28110633,28112306,28113997,28115705,28117395,28119055,28120718,28122383,28124086,28125770,28127441,28129121,28130788,28132457,28134149,28135829,28137736,28139784,28141782,28143490,28145199,28146855,28148636,28150378,28152115,28153846,28155516,28157200,28158895,28160493,28162252,28163885,28165580,28167361,28168761,28169431,28170222,28170670,28171600,28172474,28173141,28173956,28174811,28175656,28176467,28176972,28178096,28179374,28181149,28182859,28184469,28186119,28187774,28189281,28190747,28192244,28193749,28195254,28196752,28198231,28199679,28201158,28202652,28204158,28205638,28207167,28208645,28210162,28211653,28213154,28214595,28216061,28217561,28219093,28220603,28221300,28221817,28222424,28222774,28223184,28223710,28224210,28224818,28225352,28225788,28226180,28226634,28227193,28227691,28227781,28228315,28228900,28229424,28229892,28230330,28230744,28231073,28231264,28231442,28231898,28232479,28233022,28233517,28234098,28234595,28235069,28235480,28235846,28236234,28236738,28237249,28237817,28238314,28238584,28238909,28239441,28239760,28240086,28240309,28240451,28240660,28241221,28241763,28242210,28242720,28243109,28243472,28243946,28244369,28244794,28245161,28245470,28245641,28245977,28246374,28246782,28247176,28247647,28248130,28248543,28248858,28249317,28249709,28250177,28250580,28251800,28253809,28255857,28257833,28259830,28261871,28263780,28265486,28267174,28268836,28270501,28272195,28273910,28275551,28277231,28278944,28280625,28282337,28284047,28285733,28287408,28289099,28290772,28292449,28294159,28295861,28297560,28299247,28300912,28302590,28304262,28305971,28307668,28309341,28311028,28312737,28314447,28316168,28318173,28320221,28322269,28324277,28325930,28327649,28329229,28330885,28332657,28334194,28335979,28337720,28339501,28341263,28342985,28344688,28346439,28348140,28349856,28351621,28353322,28355034,28356755,28358475,28360345,28361970,28363701,28365495,28367320,28368456,28369123,28369664,28370284,28370876,28371538,28372272,28372999,28373714,28374154,28374379,28374852,28375592,28376287,28376709,28377212,28377616,28377916,28378389,28378836,28379182,28379419,28379722,28380730,28382024,28382451,28384092,28385767,28387531,28389344,28391100,28392860,28394418,28395826,28397311,28398802,28400330,28401833,28403043,28403537,28403786,28404014,28404276,28404708,28405028,28405187,28405434,28405680,28405877,28406365,28406797,28407146,28407488,28407956,28408480,28409965,28411946,28413618,28415299,28416987,28418696,28420367,28422031,28423709,28425567,28427432,28429207,28430946,28432730,28434419,28436039,28437089,28437932,28439053,28440323,28441972,28443657,28445298,28446812,28448320,28449827,28451318,28452792,28454286,28455774,28457270,28458757,28460233,28461712,28463201,28464701,28466196,28467683,28469168,28470643,28472149,28472944,28473556,28474165,28474761,28475300,28475820,28476349,28476895,28477430,28477947,28478483,28479063,28479503,28480114,28480700,28481204,28481819,28482242,28482735,28483305,28483892,28484409,28484928,28485522,28486090,28486412,28486908,28487471,28488019,28488372,28488717,28489211,28489692,28490182,28490691,28491097,28491527,28491974,28492535,28492959,28493382,28494012,28494363,28494954,28495561,28496162,28496795,28497201,28497524,28498174,28498680,28499130,28499580,28500202,28500581,28501198,28501784,28502358,28502951,28503537,28504863,28506918,28508941,28510986,28513016,28514879,28516597,28518307,28520022,28521728,28523418,28525128,28526841,28528554,28530256,28531930,28533609,28535294,28536972,28538679,28540362,28542079,28543765,28545470,28547137,28548802,28550479,28552136,28553855,28555572,28557291,28559074,28561122,28563170,28565036,28566802,28568570,28570318,28572056,28573686,28575407,28577069,28578834,28580632,28582430,28584267,28586092,28587783,28589440,28591193,28593000,28594804,28596301,28597022,28597775,28598648,28599358,28600222,28601866,28603518,28604796,28606149,28607872,28609547,28611079,28612415,28613487,28615188,28617024,28618882,28620623,28622456,28624071,28625636,28627158,28628662,28630145,28631629,28633105,28634585,28636066,28637548,28639016,28640497,28642000,28643472,28644960,28646438,28647928,28649430,28650945,28652430,28653926,28655420,28656918,28658369,28658901,28659025,28659303,28659445,28659940,28660514,28661003,28661459,28661917,28662402,28663003,28663649,28663890,28664264,28664753,28665110,28665550,28665865,28666410,28666975,28667549,28667863,28668236,28668402,28668782,28669153,28669335,28669868,28670231,28670845,28671429,28671866,28672391,28672865,28673401,28673711,28674019,28674570,28675008,28675481,28676067,28676683,28677212,28677737,28677967,28678187,28678637,28678959,28679414,28679890,28680332,28680881,28681494,28682005,28682664,28683232,28683703,28684210,28684702,28685001,28685430,28685915,28686136,28686257,28686687,28687053,28687544,28687865,28688157,28689661,28691683,28693731,28695757,28697799,28699815,28701480,28703173,28704867,28706554,28708203,28709895,28711561,28713210,28714877,28716575,28718261,28719933,28721622,28723314,28725033,28726714,28728429,28730099,28731783,28733478,28735175,28736877,28738572,28740293,28742000,28743679,28745373,28747061,28748714,28750454,28752502,28754550,28756598,28758367,28760109,28761867,28763604,28765356,28767078,28768678,28770401,28772126,28773785,28775474,28777286,28779051,28780862,28782564,28784324,28786064,28787736,28789498,28791206,28792872,28794461,28796183,28797265,28798124,28798849,28799606,28800355,28801103,28801832,28802540,28803084,28803820,28804592,28805580,28806598,28807643,28808486,28809197,28810095,28811041,28812224,28813231,28814126,28815154,28816153,28817089,28817865,28818846,28819709,28820304,28820870,28821642,28821701,28822271,28823490,28824930,28826683,28828535,28830357,28832188,28833977,28835581,28837089,28838636,28840136,28841629,28843116,28844604,28846108,28847613,28849093,28850591,28852114,28853127,28853532,28853940,28854148,28854471,28854990,28855584,28855944,28856438,28856839,28857349,28857814,28858235,28858532,28859032,28859387,28859718,28860243,28860644,28860992,28861282,28861808,28862227,28862553,28862965,28863355,28863552,28863916,28864096,28864377,28864739,28865244,28865613,28865833,28866083,28866292,28867870,28869844,28871802,28873664,28875362,28877037,28878731,28880419,28882055,28883752,28885422,28887109,28888762,28890431,28892127,28893828,28895534,28897225,28898908,28900947,28902995,28904700,28906444,28908194,28909962,28911602,28913376,28915058,28916690,28918360,28920127,28921855,28923609,28925259,28926466,28927053,28927727,28928482,28929656,28930812,28931735,28932834,28934552,28936441,28938329,28939976,28941477,28943012,28944495,28945999,28947496,28948987,28950474,28951987,28953485,28954969,28956468,28957977,28959464,28960973,28962505,28964000,28965482,28966961,28968457,28969957,28971467,28972949,28974432,28975934,28977426,28978900,28980415,28981933,28983450,28984913,28986432,28987939,28989421,28990883,28991547,28992081,28992631,28993133,28993613,28994138,28994696,28995322,28995936,28996512,28997146,28997627,28998056,28998512,28999017,28999488,28999929,29000469,29001021,29001638,29002233,29002824,29003373,29003970,29004461,29004875,29005361,29005932,29006562,29007098,29007372,29007895,29008323,29008880,29009378,29009864,29010363,29010867,29011364,29011936,29012350,29012832,29013399,29013795,29014116,29014420,29014764,29015225,29015612,29015928,29016216,29016740,29017133,29017495,29018007,29018427,29019044,29019569,29020064,29020356,29020889,29021503,29022139,29022722,29023257,29023823,29024186,29024772,29025200,29025730,29026209,29026611,29027102,29027623,29027944,29028453,29028956,29029481,29029875,29030253,29030708,29031215,29031713,29032058,29032553,29033051,29033412,29033824,29034072,29034586,29035148,29035468,29035914,29036318,29036733,29037085,29037674,29038031,29038446,29038910,29039202,29039368,29039694,29040118,29040481,29040797,29041147,29041531,29041759,29042158,29042471,29043705,29045711,29047749,29049757,29051732,29053740,29055769,29057752,29059800,29061857,29063620,29065302,29066985,29068666,29070353,29072033,29073710,29075415,29077135,29078834,29080539,29082276,29083998,29085725,29087426,29089161,29090883,29092634,29094381,29096109,29097817,29099513,29101212,29102907,29104589,29106280,29107949,29109630,29111333,29113017,29114732,29116445,29118089,29119756,29121445,29123132,29124815,29126538,29128245,29129990,29131745,29133482,29135215,29136881,29138560,29140275,29141973,29143630,29145285,29146973,29148838,29150886,29152934,29154982,29157030,29159078,29160770,29162501,29164183,29165876,29167451,29169127,29170897,29172611,29174386,29176137,29177901,29179663,29181413,29183094,29184797,29186485,29188188,29189882,29191611,29193233,29194909,29196500,29198144,29199913,29201652,29203316,29205057,29206662,29208324,29209947,29211656,29213433,29215182,29216854,29218692,29220295,29221826,29223460,29224535,29225306,29226069,29226859,29227719,29228348,29229061,29229840,29230476,29231293,29232206,29233145,29234094,29235102,29235648,29236189,29236800,29237481,29238380,29239214,29239808,29240585,29241212,29241879,29242700,29243333,29243929,29244493,29244968,29245156,29245976,29246856,29247667,29248625,29249639,29250761,29251552,29252632,29253511,29254291,29254990,29255527,29256776,29258196,29259916,29261760,29263571,29265434,29267292,29269085,29270909,29272815,29274487,29276145,29277736,29279229,29280724,29282221,29283704,29285209,29286692,29288173,29289655,29291132,29292457,29292934,29293422,29293936,29294385,29294891,29295332,29295827,29296225,29296639,29296989,29297270,29297661,29297785,29297847,29298259,29298826,29299420,29299992,29300576,29301108,29301708,29302055,29302251,29302308,29302623,29303072,29303316,29303695,29304025,29304233,29304284,29304599,29306465,29308513,29310563,29312274,29313944,29315638,29317332,29319036,29320762,29322483,29324207,29325880,29327527,29329240,29330939,29332646,29334384,29336380,29338428,29340241,29342073,29343890,29345690,29347486,29349209,29351012,29352778,29354504,29356311,29358139,29359992,29360984,29361746,29362456,29363364,29364292,29364901,29366266,29367030,29368300,29369844,29371495,29373134,29374619,29376187,29377719,29379227,29380741,29382239,29383735,29385229,29386721,29388209,29389695,29391174,29392670,29394150,29395649,29397121,29398044,29398446,29398691,29399006,29399386,29399815,29400217,29400623,29400997,29401217,29401413,29402008,29402489,29403049,29403644,29404112,29404589,29405044,29405329,29405630,29406090,29406466,29406736,29407225,29407723,29408121,29408362,29408767,29409182,29409561,29409967,29410233,29410667,29411079,29411541,29412005,29412475,29412766,29413409,29415414,29417414,29419467,29421204,29422860,29424511,29426210,29427921,29429618,29431304,29433013,29434739,29436447,29438148,29439836,29441499,29443150,29444808,29446469,29448125,29450171,29452219,29453826,29455469,29457254,29459151,29461030,29462841,29464658,29466460,29468306,29470137,29471845,29473514,29475150,29476162,29476818,29477477,29478202,29478821,29479066,29479449,29479878,29480258,29480606,29481013,29481488,29481967,29483547,29484735,29485258,29485885,29487400,29488902,29490404,29491910,29493604,29495288,29496906,29498518,29500050,29501561,29503068,29504598,29506112,29507652,29509181,29510697,29512191,29513712,29515228,29516736,29518244,29519756,29521261,29522781,29524309,29525820,29527332,29528829,29530338,29531861,29533376,29534884,29536386,29537919,29539416,29540928,29542458,29543995,29545529,29547063,29548578,29550108,29551631,29553147,29554654,29556164,29557662,29559150,29560649,29562143,29563619,29565100,29566593,29568082,29569584,29571074,29571677,29572228,29572652,29573165,29573658,29574113,29574716,29575161,29575673,29576363,29577042,29577703,29578406,29579090,29579787,29580504,29581171,29581822,29582463,29583213,29583932,29584667,29585215,29585768,29586403,29586725,29587349,29587875,29588504,29589140,29589880,29590505,29591138,29591769,29592416,29593004,29593645,29594217,29594833,29595468,29595958,29596528,29597161,29597733,29598297,29598893,29599465,29599945,29600490,29601080,29601650,29602265,29602893,29603398,29603993,29604636,29605232,29605756,29606320,29606848,29607475,29608000,29608429,29608923,29609498,29610006,29610553,29611195,29611735,29612372,29612948,29613525,29614156,29614655,29615264,29615819,29616488,29617112,29617602,29618112,29618717,29619248,29619705,29620240,29620786,29621374,29622002,29622493,29622905,29623496,29624082,29624697,29625377,29625956,29626700,29627444,29628143,29628780,29629443,29630080,29630762,29631460,29632082,29632647,29633274,29633947,29634577,29635222,29635789,29636307,29636832,29637469,29638051,29638657,29639304,29639900,29640438,29641047,29641658,29642265,29642853,29643403,29643977,29644519,29644804,29645383,29645936,29646521,29647027,29647579,29648129,29648607,29649181,29649664,29650144,29650722,29651329,29651842,29652247,29652642,29653226,29653797,29654303,29654835,29655253,29655635,29656129,29656665,29657223,29657736,29658243,29658623,29659828,29661848,29663905,29665951,29667993,29670033,29672084,29674116,29676172,29678227,29680275,29682289,29684341,29686345,29688057,29689787,29691467,29693163,29694876,29696604,29698305,29699986,29701693,29703384,29705084,29706786,29708483,29710183,29711880,29713581,29715319,29717054,29718757,29720482,29722211,29723935,29725682,29727419,29729172,29730930,29732695,29734447,29736183,29737889,29739578,29741299,29743014,29744698,29746383,29748052,29749747,29751479,29753179,29754853,29756562,29758268,29759959,29761672,29763391,29765144,29766889,29768645,29770391,29772136,29773851,29775564,29777285,29779021,29780740,29782482,29784212,29785969,29787709,29789447,29791187,29792951,29794697,29796438,29798169,29799930,29801962,29804010,29806058,29808106,29810154,29812202,29814250,29816233,29817941,29819591,29821309,29823051,29824755,29826431,29828128,29829898,29831603,29833375,29835158,29836918,29838767,29840551,29842367,29844191,29845966,29847778,29849559,29851323,29853084,29854895,29856494,29858074,29859772,29861507,29863180,29864816,29866428,29868221,29869916,29871643,29873362,29875040,29876756,29878587,29880404,29882224,29884053,29885879,29887686,29889378,29891089,29892682,29894336,29896130,29897938,29899731,29901535,29903364,29905221,29907041,29908819,29909975,29910888,29911776,29912698,29913668,29914593,29915368,29916147,29916998,29917937,29919089,29920379,29921719,29922962,29924119,29925367,29926590,29927861,29929199,29930524,29931719,29932809,29934066,29934825,29935543,29936305,29937211,29938174,29939146,29940194,29941469,29942523,29943010,29943607,29945152,29946509,29948284,29950242,29951937,29953747,29955619,29957532,29959356,29961198,29963011,29964806,29966694,29968563,29970097,29971597,29973139,29974646,29976142,29977625,29979130,29980635,29982129,29983583,29985136,29985310,29985399,29985674,29985838,29985939,29986204,29986450,29986913,29987158,29987485,29987782,29988103,29988232,29988635,29988919,29989092,29989231,29989371,29989878,29990274,29990591,29990761,29991302,29991701,29992097,29992545,29992811,29992979,29994076,29996108,29998147,29999924,30001627,30003324,30005019,30006748,30008447,30010125,30011824,30013551,30015289,30016989,30018649,30020332,30022152,30024200,30026065,30027856,30029552,30031173,30032997,30034697,30036504,30038303,30040075,30041960,30043703,30045458,30046197,30046903,30048721,30050127,30051770,30053359,30055005,30056534,30057998,30059147,30060655,30062152,30062694,30063149,30063629,30064152,30064708,30065177,30065615,30067218,30068948,30070643,30072298,30074244,30076030,30077740,30078421,30079143,30080534,30082079,30083563,30085067,30086564,30087702,30087929,30088364,30088803,30089299,30089806,30089915,30090142,30090714,30091027,30091376,30091661,30092164,30092728,30094665,30096407,30098071,30099759,30101436,30103109,30104761,30106718,30108331,30110060,30111833,30113508,30114861,30115614,30117245,30119023,30120699,30122197,30123665,30125157,30126666,30128145,30129222,30129717,30130167,30130522,30130921,30131406,30131665,30131968,30132464,30132980,30133418,30133793,30134277,30134759,30135206,30135733,30136611,30138640,30140324,30141987,30143648,30145343,30147011,30148686,30150374,30152335,30153998,30155711,30157435,30159192,30160592,30161161,30162114,30163370,30164205,30165453,30167084,30168971,30171026,30173081,30175120,30177170,30179058,30180670,30182258,30183725,30184862,30185681,30186479,30187242,30188106,30189022,30190028,30192057,30194054,30196015,30197909,30199775,30200385,30201364,30202423,30203883,30205012,30206489,30207873,30209202,30210343,30211147,30211893,30212917,30214011,30215262,30216290,30217349,30218121,30219103,30219983,30221025,30222071,30223093,30224167,30225312,30226394,30227297,30228026,30228743,30229560,30230540,30231290,30232170,30232936,30233697,30234901,30236949,30238363,30239441,30240512,30241474,30242426,30243403,30244522,30245539,30246551,30247444,30248662,30249804,30250615,30251676,30252673,30253681,30254698,30255405,30256229,30256982,30257829,30258907,30260327,30261821,30263265,30264817,30266789,30268837,30270885,30272775,30274179,30276205,30278253,30280301,30282349,30284383,30286197,30288251,30289915,30291851,30293904,30295952,30298000,30300048,30302096,30304144,30306192,30308248,30310274,30312330,30314360,30316389,30318430,30320437,30322400,30324221,30325916,30327876,30329924,30331972,30334020,30336068,30338116,30340164,30342212,30344260,30346308,30348356,30350413,30352418,30354359,30356189,30357997,30359373,30361114,30363037,30364939,30366702,30368637,30370685,30372738,30374795,30376843,30378891,30380939,30382987,30385035,30387083,30389131,30391179,30393227,30395275,30397323,30399302,30400833,30401869,30403904,30405952,30408000,30410048,30412096,30414144,30416192,30418240,30420288,30422336,30424384,30426432,30428480,30430528,30432576,30434624,30436672,30438729,30440777,30442825,30444456,30446448,30448496,30450544,30452598,30454473,30456033,30457422,30458618,30459610,30460325,30460788,30462745,30464802,30466850,30468898,30470953,30473001,30475049,30477097,30479152,30481208,30483059,30484505,30485257,30487305,30489361,30491385,30493341,30495187,30496881,30498395,30499594,30500462,30501034,30501317,30501606,30503529,30505586,30507634,30509683,30511732,30513780,30515828,30517883,30519931,30521979,30524036,30526091,30528131,30530109,30531927,30533545,30535039,30536363,30538395,30540452,30542500,30544548,30546596,30548644,30550692,30552740,30554788,30556836,30558893,30560927,30562971,30564913,30566635,30568099,30569135,30570302,30572121,30573993,30576013,30578061,30580117,30582165,30584100,30585796,30587084,30588029,30590077,30592124,30594172,30596071,30598061,30600109,30602165,30603959,30604546,30604617,30604833,30604866,30605618,30607674,30609722,30611779,30613836,30615884,30617941,30619996,30622040,30623950,30626001,30628049,30630097,30632145,30634159,30636216,30638264,30640312,30642360,30644408,30646456,30648513,30650561,30652618,30654565,30656103,30658074,30660085,30661658,30663280,30665328,30667331,30668907,30670184,30671717,30673597,30675640,30677696,30679744,30681792,30683839,30685876,30687735,30689171,30689528,30690565,30692622,30694670,30696726,30698776,30700824,30702880,30704928,30706985,30709042,30711083,30713114,30714948,30716813,30718744,30720311,30722311,30724359,30726407,30728462,30730510,30732558,30734606,30736654,30738702,30740646,30742694,30744748,30746796,30748853,30750901,30752949,30754997,30756994,30758676,30760661,30762625,30764507,30765569,30767623,30769679,30771695,30773565,30775260,30777308,30779356,30781404,30783461,30785509,30787557,30789605,30791653,30793709,30795522,30796868,30798504,30800441,30802418,30804469,30806504,30808554,30810599,30812633,30814683,30816734,30818782,30820821,30822832,30824845,30826842,30828823,30830815,30832868,30834903,30836955,30839001,30841039,30843052,30845091,30847132,30849169,30851209,30853243,30855273,30857199,30859006,30860618,30862003,30863292,30864484,30865634,30866838,30867920,30868923,30870075,30871071,30872130,30872994,30873917,30874772,30875543,30876198,30876772,30877250,30877417,30877595,30877739,30877800,30877862,30879752,30881778,30883830,30885878,30887933,30889852,30891600,30893223,30894429,30895285,30897333,30899381,30901429,30903477,30905380,30907428,30909476,30911524,30913485,30915533,30917581,30919629,30921648,30923696,30925752,30927800,30929854,30931911,30933946,30935994,30938042,30940084,30942109,30944159,30946201,30948157,30950044,30951894,30953608,30955358,30957014,30958901,30960949,30962997,30965054,30967109,30969166,30971222,30973068,30975000,30977055,30979112,30981167,30983222,30985270,30987326,30989365,30991284,30993341,30995391,30997341,30998887,31000777,31002832,31004887,31006439,31008253,31010301,31012349,31014397,31016445,31018493,31020541,31022595,31024643,31026666,31028596,31030310,31031841,31033260,31034559,31035746,31037218,31039266,31041314,31043362,31045419,31047450,31049343,31051055,31052146,31052406,31053424,31054848,31056583,31058464,31060424,31062324,31064257,31066265,31068191,31069969,31071520,31072858,31073993,31074592,31074971,31076551,31078557,31080602,31082069,31082996,31084757,31086805,31088853,31090901,31092949,31094997,31097045,31099093,31101119,31103094,31105134,31107172,31108996,31110522,31111517,31112993,31115041,31116917,31118358,31120044,31122092,31124140,31126190,31128238,31130293,31132347,31134401,31136457,31138391,31140264,31141912,31143947,31145543,31146696,31147931,31149985,31152033,31154081,31156129,31158177,31160225,31162270,31164133,31166006,31168054,31170102,31172150,31174198,31176246,31178294,31180249,31181298,31182753,31184637,31186668,31188724,31190780,31192834,31194160,31195777,31197668,31199694,31201742,31203790,31205838,31207888,31209915,31211761,31213095,31214082,31214886,31215385,31215779,31216014,31216128,31217993,31220041,31222089,31224137,31226185,31228233,31230281,31232329,31234377,31236425,31238473,31240521,31242569,31244617,31246665,31248713,31250761,31252812,31254110,31256158,31258206,31260254,31262302,31264350,31266398,31268446,31270494,31271567,31271840,31273177,31274881,31276838,31278893,31280950,31282998,31285046,31287094,31289142,31291190,31293238,31295286,31297335,31299208,31300835,31302326,31303678,31304846,31305919,31306923,31307826,31308557,31309396,31310376,31311217,31312085,31313702,31315755,31317803,31319851,31321899,31323947,31325995,31328043,31330091,31332139,31334187,31336235,31338283,31340340,31342234,31343504,31344231,31344911,31346463,31348511,31350559,31352607,31354653,31356090,31357882,31359918,31361672,31362936,31363965,31364541,31365293,31366395,31368443,31370341,31371486,31372015,31373848,31375756,31377760,31379806,31381860,31383917,31385974,31388020,31390021,31391568,31393332,31395188,31397124,31399099,31401153,31403210,31405258,31407306,31409363,31411419,31413467,31415510,31417518,31419271,31420766,31421603,31422360,31423971,31426024,31428072,31430120,31432168,31434216,31436264,31438312,31440368,31442421,31444423,31446159,31447592,31448651,31449623,31449812,31450296,31452344,31454377,31456341,31458274,31460061,31461753,31463522,31465570,31467626,31469404,31471019,31472274,31474022,31475786,31477826,31479874,31481793,31483831,31484855,31486909,31488574,31490437,31492355,31494410,31496060,31497969,31499342,31500792,31501911,31503589,31505606,31507633,31509627,31511641,31513649,31515632,31517544,31519592,31521646,31523672,31525366,31526318,31527689,31529737,31531785,31533833,31535881,31537938,31539075,31540252,31542308,31544356,31546412,31548460,31549885,31550254,31552160,31554208,31556248,31558296,31560344,31562392,31564440,31566391,31568439,31570496,31571975,31574027,31576068,31577831,31579887,31581935,31583615,31585644,31587683,31589122,31590472,31592432,31593903,31594697,31596749,31598797,31600854,31602909,31604146,31604268,31604420,31605853,31607901,31609949,31612006,31614062,31616118,31618175,31620225,31622159,31624207,31626255,31628159,31630216,31632272,31634260,31636308,31638337,31640385,31642433,31644489,31646455,31648429,31650185,31652010,31653668,31655321,31657004,31658244,31659911,31661614,31663147,31664473,31665816,31667869,31669776,31671598,31673522,31675570,31677618,31679666,31681675,31683093,31684182,31684905,31686416,31688276,31689635,31691411,31693222,31695270,31697318,31699366,31701414,31703462,31705510,31707558,31709614,31711669,31713708,31715714,31717507,31719098,31720489,31721656,31722555,31723961,31726009,31728057,31730105,31732153,31734201,31735669,31736422,31738443,31740491,31742547,31744529,31746430,31748455,31750503,31752551,31754599,31756647,31758695,31760743,31762788,31764743,31766514,31767920,31768632,31769722,31771770,31773818,31775866,31777914,31779208,31779383,31780486,31782540,31784588,31786636,31788684,31790732,31792788,31794836,31796884,31798774,31800258,31800489,31801066,31802473,31804452,31806509,31808557,31810605,31812653,31814701,31816749,31818805,31820862,31822919,31824974,31826974,31828859,31830637,31832436,31834141,31835694,31837110,31838374,31839601,31840826,31841904,31842643,31843185,31843747,31844245,31844692,31845182,31845587,31845995,31846428,31846905,31847330,31847906,31848382,31848598,31849002,31849943,31851098,31852279,31853514,31854631,31855707,31856664,31857509,31858196,31858700,31858967,31859086,31859276,31860426,31862051,31863922,31865970,31868027,31870075,31872081,31874063,31876039,31877885,31879914,31881666,31883695,31885676,31887291,31888926,31890974,31893023,31895064,31897076,31899124,31901158,31903192,31905242,31907246,31909211,31911245,31913257,31915145,31917151,31919202,31921250,31923282,31924971,31926824,31928856,31930611,31932516,31934561,31936267,31937560,31939227,31941275,31943331,31945326,31947248,31949156,31951062,31952972,31954867,31956901,31958949,31961006,31963056,31964911,31966959,31968990,31970568,31972106,31973693,31975061,31976164,31976587,31977194,31977560,31978080,31978748,31979509,31980651,31982256,31983650,31985079,31986416,31987706,31989125,31990852,31992571,31994370,31996145,31998074,32000094,32002115,32004161,32006218,32008269,32010317,32012372,32014428,32016481,32018536,32020577,32022550,32024530,32026525,32028503,32030376,32032130,32033864,32035588,32037274,32038942,32040461,32041891,32043334,32044749,32046180,32047527,32048763,32049951,32051193,32052401,32053512,32054572,32055529,32056460,32057391,32058963,32060380,32061858,32063422,32064836,32066280,32067856,32069387,32070869,32072445,32073878,32075456,32077065,32078780,32080353,32081992,32083519,32085024,32086628,32088305,32090059,32091819,32093601,32095363,32097167,32099017,32100943,32102829,32104806,32106742,32108720,32110762,32112812,32114860,32116908,32118963,32121015,32123066,32125073,32126964,32128717,32130301,32131405,32132800,32134591,32136580,32138633,32140688,32142736,32144071,32144253,32145354,32147402,32149450,32151506,32152918,32154969,32155997,32158053,32160108,32161666,32163219,32165267,32167315,32169363,32171419,32172951,32174999,32176962,32178527,32179828,32181876,32183933,32185981,32188037,32190085,32192133,32194124,32196171,32198219,32200267,32202315,32204363,32206411,32208459,32210507,32212555,32214603,32216651,32218703,32220704,32222759,32224807,32226855,32228903,32230951,32232957,32234920,32236931,32238984,32241032,32243080,32245126,32247174,32249222,32251270,32253318,32255366,32257414,32259170,32260500,32262548,32264597,32266645,32268693,32270741,32272786,32274834,32276750,32278670,32280483,32282031,32283642,32285070,32286792,32288619,32290191,32291658,32293032,32294160,32295091,32295467,32297055,32299103,32301151,32303199,32305247,32307236,32308876,32309953,32310183,32311117,32313165,32315221,32317215,32318863,32320342,32322079,32323927,32324935,32325138,32325896,32326954,32327329,32327725,32328129,32328463,32328841,32329215,32329590,32329940,32330715,32331621,32332468,32333170,32333659,32334250,32335422,32336229,32336877,32338351,32339760,32341194,32342544,32343737,32345179,32345816,32346439,32347246,32347631,32347948,32348411,32348856,32349182,32350134,32351057,32351395,32351807,32352241,32352724,32353489,32354003,32354534,32355174,32355527,32355833,32356493,32357192,32357928,32358625,32359209,32360315,32361113,32361707,32362699,32363507,32364081,32365043,32365578,32366173,32366804,32367628,32368572,32369100,32369386,32369649,32369896,32370161,32370489,32370955,32371247,32371498,32371705,32372096,32372749,32373413,32374216,32374811,32375241,32375441,32375922,32376495,32377035,32377463,32377881,32378367,32378854,32379108,32379599,32380403,32380669,32380927,32381416,32381819,32382706,32383639,32384305,32384421,32384610,32384889,32385161,32385872,32386198,32386576,32386852,32387331,32387553,32388264,32388602,32388883,32389929,32390759,32390951,32391253,32391660,32392035,32392370,32392597,32392864,32393202,32393963,32394643,32395190,32395595,32396314,32396744,32397293,32397717,32398070,32398845,32399327,32399652,32400181,32400890,32401842,32402104,32402317,32402617,32403051,32403869,32404242,32404838,32405382,32405793,32406381,32406955,32407333,32407922,32408156,32408618,32409085,32409597,32410190,32410501,32411212,32411761,32412332,32412532,32413197,32413943,32414583,32415389,32416587,32417624,32418722,32419780,32420841,32422001,32422387,32422734,32423883,32424969,32426009,32426797,32427310,32428640,32429057,32429526,32429850,32429979,32430367,32430577,32430784,32430923,32431163,32431411,32431909,32432044,32432177,32432310,32432585,32433079,32433725,32434055,32434708,32435232,32435697,32436561,32437129,32437622,32437874,32438191,32438769,32439043,32439358,32439676,32440426,32440844,32441407,32441722,32442145,32442433,32442698,32443001,32443664,32443855,32444151,32444376,32444561,32444892,32445078,32445537,32445827,32446187,32446365,32446586,32446798,32447011,32447505,32447829,32448339,32448767,32449464,32450519,32450881,32451322,32451834,32452344,32453048,32453681,32454013,32454580,32455618,32456381,32457245,32457935,32458396,32458750,32459096,32459476,32459882,32460280,32460684,32460966,32461200,32461468,32461633,32461846,32462502,32463245,32464150,32464933,32465459,32466134,32466568,32466955,32467441,32467677,32468195,32468962,32469179,32469547,32469794,32470324,32471197,32471983,32472794,32473334,32473749,32474376,32474617,32475015,32475199,32475542,32475782,32476284,32476715,32477338,32477797,32478438,32478908,32479501,32480224,32480771,32480836,32481154,32481603,32482225,32483026,32483458,32483884,32484150,32484550,32484910,32485265,32485603,32486772,32488063,32489253,32490651,32491649,32493016,32495009,32496941,32497449,32497574,32497717,32498145,32498717,32498872,32499066,32499185,32499655,32499844,32500240,32500873,32501273,32502337,32503178,32503848,32504069,32504420,32504811,32505025,32505407,32505654,32505839,32506094,32506292,32506786,32507198,32507735,32508238,32508775,32509412,32510113,32511028,32511202,32511727,32511910,32512222,32512633,32513085,32513453,32513723,32513960,32514462,32514774,32515101,32515338,32515633,32515805,32516104,32516620,32516853,32517237,32517449,32517960,32518385,32518772,32518899,32519293,32519903,32520437,32521000,32521217,32521483,32521939,32522317,32522767,32523021,32523492,32524153,32524487,32525291,32525714,32526236,32526837,32527271,32527806,32528754,32528947,32529112,32529249,32529384,32529526,32529683,32529963,32530221,32530370,32530532,32530702,32530885,32531195,32531349,32531477,32531855,32532090,32532432,32533241,32533351,32533550,32533854,32534038,32534438,32534811,32535230,32535705,32536149,32536360,32536566,32536746,32537215,32537484,32537917,32538582,32538793,32539193,32539383,32539588,32539787,32540182,32540299,32540749,32541313,32541485,32541676,32541986,32542176,32542481,32542601,32542726,32543354,32543900,32544401,32544747,32545198,32545621,32545843,32546106,32546276,32546853,32547172,32547387,32548229,32548506,32548908,32549253,32549672,32550060,32550655,32551457,32552112,32553055,32553952,32554684,32556187,32557276,32558416,32559721,32561084,32562522,32563998,32565460,32566966,32568499,32570029,32571560,32573048,32574557,32576048,32577559,32579158,32580640,32582194,32583661,32585181,32586708,32588149,32589493,32590808,32592021,32593279,32594663,32596005,32597233,32598419,32599537,32600604,32601950,32603346,32605048,32606920,32608629,32610391,32612145,32613805,32615516,32617244,32618956,32620655,32622398,32624095,32625800,32627558,32629316,32631087,32632775,32634478,32636100,32637780,32639440,32641112,32642825,32644517,32646251,32647952,32649661,32651294,32652925,32654596,32656259,32657859,32659433,32661085,32662937,32664542,32666253,32667936,32669523,32671192,32672848,32674573,32676291,32678094,32679934,32681739,32683546,32685370,32687177,32688902,32690670,32692332,32694091,32695910,32697762,32699536,32701185,32702919,32704772,32706492,32708253,32710022,32711781,32713480,32715152,32716791,32718427,32720039,32721815,32723442,32725081,32726677,32728267,32729926,32731578,32733214,32734930,32736615,32738328,32739979,32741700,32743405,32745163,32746888,32748514,32750273,32751995,32753688,32755416,32757103,32758742,32760419,32762108,32763735,32765382,32766973,32768576,32770114,32771635,32773157,32774609,32776363,32777479,32778584,32779431,32780159,32780937,32782244,32783652,32785134,32786450,32787595,32788722,32789899,32791036,32792380,32793779,32795047,32796336,32797619,32798873,32800066,32801032,32801915,32802653,32803530,32804434,32805192,32805813,32806627,32807670,32808792,32809841,32811042,32812534,32814130,32815560,32817037,32818409,32819998,32821423,32822840,32824389,32825861,32827268,32828587,32829904,32831164,32831962,32832200,32832413,32832636,32832858,32833079,32833946,32835457,32837006,32838291,32839764,32841438,32842864,32843974,32845400,32846534,32847266,32848618,32850011,32850975,32852519,32854191,32855486,32857136,32858562,32860170,32861671,32863084,32864450,32866070,32867485,32868821,32870437,32872113,32873552,32875006,32876271,32877858,32879212,32880824,32882075,32883728,32885397,32887030,32888737,32890210,32891683,32893434,32894655,32896274,32897501,32899172,32900566,32901868,32903381,32905018,32906708,32908203,32909526,32911126,32912540,32914032,32915605,32917155,32918764,32920225,32921463,32923146,32924669,32926275,32927886,32929254,32930681,32932274,32933967,32935225,32936732,32937778,32939305,32940788,32942330,32943489,32944985,32946434,32948056,32949681,32951279,32952521,32954075,32955357,32956829,32957902,32959408,32960803,32962499,32963590,32965167,32966704,32968092,32969490,32970894,32972465,32974070,32975648,32977292,32978831,32980298,32981661,32983353,32984919,32986604,32987966,32989807,32991109,32992968,32994332,32995946,32997176,32998965,33000620,33002000,33003636,33005012,33006812,33008154,33009568,33011368,33013132,33014309,33015907,33017638,33019376,33021075,33022588,33024291,33025974,33027589,33029097,33030820,33032571,33033923,33035521,33036756,33038379,33039843,33041511,33042937,33044662,33046302,33048023,33049462,33051122,33052566,33054420,33055863,33057670,33059205,33061085,33062977,33064872,33066801,33068852,33070853,33072904,33074933,33076954,33078967,33081002,33083020,33085051,33087076,33089128,33091177,33093218,33095256,33097254,33099277,33101279,33103303,33105325,33107376,33109431,33111487,33113529,33115572,33117623,33119641,33121667,33123685,33125733,33127784,33129816,33131859,33133915,33135953,33137963,33139991,33141876,33143863,33145892,33147927,33149984,33152032,33154059,33156082,33158131,33160145,33162139,33164123,33166112,33168094,33170110,33172099,33174127,33176158,33178181,33180231,33182263,33184256,33186220,33188229,33190238,33192229,33194225,33196276,33198290,33200314,33202362,33204392,33206391,33208346,33210351,33212362,33214346,33216364,33218405,33220452,33222501,33224538,33226556,33228525,33230513,33232536,33234560,33236594,33238627,33240674,33242727,33244775,33246814,33248844,33250892,33252917,33254958,33256956,33259007,33260998,33263033,33265036,33266955,33268937,33270894,33272882,33274856,33276870,33278818,33280784,33282773,33284774,33286737,33288693,33290705,33292698,33294674,33296591,33298564,33300524,33302509,33304493,33306493,33308431,33310418,33312428,33314391,33316328,33318334,33320304,33322310,33324256,33326234,33328245,33330219,33332209,33334160,33336134,33338146,33340158,33342153,33344157,33346157,33348129,33350139,33352098,33354115,33356013,33358006,33359975,33361959,33363957,33365935,33367910,33369858,33371843,33373829,33375840,33377798,33379827,33381836,33383838,33385828,33387852,33389848,33391853,33393851,33395824,33397822,33399785,33401752,33403766,33405762,33407730,33409659,33411664,33413679,33415646,33417618,33419654,33421698,33423717,33425692,33427712,33429727,33431667,33433721,33435720,33437741,33439762,33441802,33443806,33445828,33447852,33449856,33451854,33453825,33455800,33457798,33459837,33461822,33463795,33465652,33467624,33469678,33471726,33473759,33475702,33477690,33479596,33481506,33483275,33485158,33487037,33488968,33490747,33492659,33494480,33496451,33498458,33500426,33502287,33504206,33506145,33508002,33509865,33511712,33513700,33515642,33517594,33519523,33521475,33523369,33525293,33527175,33529052,33531042,33532995,33534949,33536918,33538706,33540714,33542536,33544435,33546257,33548162,33550120,33552092,33553992,33556021,33557976,33559883,33561738,33563595,33565500,33567382,33569335,33571290,33573199,33575128,33577128,33579079,33581091,33582798,33584768,33586500,33588501,33590456,33592404,33594350,33596209,33598187,33600122,33602083,33603913,33605919,33607874,33609880,33611654,33613359,33615213,33616950,33618847,33620713,33622592,33624423,33626239,33628152,33629978,33631939,33633865,33635773,33637700,33639618,33641475,33643420,33645329,33647273,33649164,33651081,33652954,33654907,33656817,33658795,33660700,33662633,33664519,33666416,33668321,33670171,33672062,33673844,33675757,33677687,33679487,33681415,33682980,33684740,33686129,33687833,33689647,33691408,33693250,33695214,33697143,33699121,33701129,33703146,33705153,33707055,33709030,33711034,33712974,33714946,33716927,33718751,33720179,33721594,33722987,33724424,33725894,33727383,33728814,33730364,33731876,33733307,33734829,33736512,33738290,33739958,33741565,33743469,33745469,33747471,33749387,33751409,33753378,33755207,33757152,33759056,33761057,33763049,33764990,33766954,33768883,33770847,33772669,33774540,33776504,33778515,33780526,33782437,33784446,33786350,33788322,33790194,33792071,33794049,33796008,33798023,33799924,33801956,33803879,33805812,33807698,33809550,33811562,33813475,33815503,33817389,33819370,33821211,33823123,33825017,33826875,33828847,33830804,33832819,33834717,33836681,33838621,33840491,33842392,33844262,33846259,33848265,33850275,33852211,33854205,33856132,33857978,33859901,33861836,33863784,33865744,33867652,33869612,33871550,33873472,33875434,33877364,33879262,33880993,33882719,33884378,33886034,33887690,33889386,33891131,33892864,33894557,33896215,33897925,33899656,33901360,33903097,33904801,33906443,33908121,33909835,33911516,33913233,33914947,33916672,33918313,33919928,33921584,33923305,33925048,33926823,33928521,33930136,33931724,33933365,33935122,33936863,33938515,33940147,33941767,33943420,33945090,33946856,33948593,33950327,33951989,33953616,33955255,33957021,33958818,33960592,33962237,33963849,33965479,33967249,33969121,33970988,33972760,33974475,33976241,33978025,33979864,33981747,33983611,33985401,33987184,33989009,33990769,33992556,33994281,33995984,33997649,33999345,34001081,34002759,34004337,34006076,34007808,34009520,34011145,34012989,34014639,34016291,34018058,34019803,34021308,34023029,34024763,34026441,34028102,34029869,34031644,34033422,34035093,34036880,34038677,34040475,34042138,34043876,34045635,34047345,34049096,34050826,34052563,34054542,34056450,34058438,34060443,34062447,34064404,34066308,34068251,34070182,34072184,34074169,34076147,34078151,34080138,34082115,34084114,34086093,34088086,34090064,34092045,34094015,34096013,34098020,34100013,34101994,34103952,34105949,34107919,34109866,34111842,34113869,34115870,34117868,34119830,34121811,34123768,34125762,34127740,34129719,34131691,34133663,34135633,34137603,34139578,34141542,34143521,34145479,34147458,34149415,34151393,34153341,34155322,34157265,34159225,34161185,34163145,34165110,34167074,34169054,34171025,34172975,34174929,34176880,34178841,34180795,34182753,34184705,34186671,34188624,34190588,34192544,34194507,34196465,34198430,34200393,34202366,34204263,34206184,34208090,34209993,34211902,34213830,34215718,34217628,34219528,34221416,34223359,34225255,34227164,34229067,34230987,34232879,34234808,34236680,34238575,34240502,34242342,34244225,34246166,34248012,34249880,34251831,34253672,34255524,34257480,34259320,34261153,34263116,34264971,34266785,34268748,34270585,34272406,34274376,34276207,34278040,34280005,34281827,34283671,34285563,34287378,34289190,34291073,34292852,34294693,34296587,34298352,34300203,34302096,34303831,34305704,34307599,34309364,34311246,34313126,34314904,34316794,34318645,34320427,34322328,34324149,34325993,34327905,34329733,34331584,34333495,34335300,34337185,34339054,34340889,34342804,34344647,34346490,34348401,34350215,34352099,34353989,34355815,34357721,34359581,34361417,34363322,34365170,34367085,34368956,34370818,34372735,34374609,34376461,34378370,34380253,34382101,34384006,34385884,34387731,34389640,34391517,34393369,34395284,34397166,34399014,34400914,34402800,34404649,34406551,34408436,34410296,34412210,34414118,34415956,34417871,34419781,34421624,34423541,34425429,34427278,34429206,34431076,34432929,34434848,34436704,34438565,34440489,34442357,34444234,34446134,34447988,34449844,34451763,34453613,34455449,34457394,34459314,34461226,34463142,34465057,34466975,34468888,34470813,34472738,34474663,34476579,34478490,34480419,34482329,34484255,34486163,34488083,34490005,34491981,34493973,34495971,34497955,34499933,34501927,34503922,34505908,34507880,34509861,34511880,34513781,34515734,34517638,34519537,34521422,34523350,34525250,34527182,34529036,34530928,34532824,34534706,34536659,34538629,34540615,34542581,34544553,34546500,34548480,34550446,34552381,34554372,34556299,34558285,34560218,34562187,34564121,34566088,34567983,34569955,34571776,34573763,34575609,34577548,34579429,34581328,34583208,34585106,34587043,34588888,34590869,34592703,34594674,34596531,34598451,34600354,34602191,34604051,34605864,34607776,34609569,34611500,34613315,34615191,34617043,34618893,34620783,34622600,34624528,34626316,34628215,34630077,34631920,34633782,34635799,34637845,34639875,34641888,34643908,34645903,34647936,34649953,34651974,34654012,34656041,34658094,34660141,34662178,34664195,34666207,34668042,34670055,34672064,34674121,34676166,34678222,34680253,34682288,34684318,34686332,34688366,34690377,34692416,34694454,34696502,34698558,34700592,34702622,34704673,34706696,34708659,34710573,34712590,34714586,34716609,34718657,34720688,34722706,34724713,34726708,34728700,34730695,34732662,34734652,34736672,34738716,34740732,34742746,34744759,34746785,34748762,34750771,34752764,34754730,34756710,34758727,34760768,34762781,34764799,34766820,34768820,34770791,34772787,34774779,34776744,34778718,34780748,34782783,34784792,34786840,34788884,34790911,34792927,34794938,34796952,34798959,34800907,34802933,34804970,34807018,34809064,34811116,34813164,34815210,34817252,34819277,34821304,34823341,34825386,34827438,34829454,34831473,34833451,34835459,34837437,34839444,34841442,34843403,34845397,34847404,34849354,34851358,34853339,34855289,34857226,34859208,34861196,34863209,34865168,34867170,34869179,34871111,34873043,34875006,34876944,34878712,34880620,34882631,34884634,34886583,34888587,34890576,34892570,34894526,34896508,34898502,34900466,34902375,34904273,34906181,34908144,34910105,34912045,34913941,34915893,34917889,34919834,34921769,34923607,34925498,34927480,34929477,34931387,34933245,34935155,34937124,34939069,34940942,34942816,34944710,34946555,34948448,34950409,34952353,34954277,34956223,34958087,34959981,34961845,34963727,34965704,34967608,34969581,34971538,34973436,34975305,34977196,34979084,34981036,34983026,34984982,34986879,34988694,34990516,34992393,34994316,34996294,34998175,35000041,35001855,35003548,35005469,35007404,35009298,35011202,35013112,35014951,35016828,35018747,35020597,35022467,35024359,35026236,35028073,35029953,35031752,35033587,35035575,35037524,35039439,35041363,35043267,35045117,35046958,35048832,35050670,35052508,35054431,35056429,35058372,35060283,35062255,35064068,35065957,35067915,35069848,35071857,35073883,35075894,35077846,35079732,35081736,35083711,35085729,35087683,35089656,35091585,35093637,35095650,35097628,35099518,35101480,35103481,35105496,35107495,35109473,35111456,35113471,35115482,35117459,35119433,35121396,35123415,35125421,35127437,35129424,35131358,35133334,35135309,35137267,35139282,35141235,35143254,35145299,35147323,35149299,35151304,35153210,35155232,35157235,35159223,35161189,35163206,35165227,35167245,35169162,35170927,35172718,35174625,35176639,35178640,35180610,35182625,35184621,35186586,35188566,35190510,35192470,35194429,35196328,35198274,35200237,35202222,35204137,35206138,35208114,35210143,35212143,35214131,35216097,35218023,35220019,35221994,35223965,35225804,35227752,35229685,35231646,35233540,35235428,35237401,35239353,35241241,35243155,35245142,35247130,35249135,35251117,35253114,35255129,35257131,35259168,35261081,35263003,35264976,35266905,35268602,35270512,35272465,35274402,35276344,35278287,35280234,35282245,35284235,35286238,35288236,35290205,35292169,35294196,35296184,35298187,35300172,35302120,35304041,35306013,35307949,35309927,35311871,35313841,35315825,35317817,35319837,35321858,35323849,35325832,35327813,35329832,35331807,35333783,35335743,35337727,35339689,35341677,35343632,35345561,35347554,35349513,35351506,35353479,35355401,35357407,35359426,35361407,35363367,35365323,35367266,35369303,35371254,35373245,35375273,35377244,35379246,35381248,35383212,35385229,35387211,35389172,35391202,35393118,35395165,35397130,35399062,35401058,35402999,35404983,35406976,35408980,35410942,35412842,35414802,35416799,35418737,35420688,35422681,35424633,35426551,35428516,35430500,35432504,35434500,35436446,35438406,35440359,35442322,35444301,35446215,35448157,35450114,35451950,35453813,35455776,35457742,35459642,35461533,35463462,35465375,35467361,35469300,35471207,35473212,35475204,35477141,35479124,35481106,35483023,35485055,35486903,35488907,35490884,35492853,35494859,35496859,35498882,35500917,35502942,35504817,35506830,35508813,35510815,35512841,35514867,35516922,35518953,35520975,35522924,35524934,35526937,35528921,35530952,35532980,35535008,35537012,35539047,35541040,35543083,35545100,35547116,35549155,35551186,35553242,35555281,35557326,35559310,35561326,35563340,35565329,35567366,35569392,35571439,35573489,35575524,35577504,35579538,35581511,35583567,35585615,35587645,35589695,35591730,35593768,35595707,35597662,35599622,35601591,35603458,35605456,35607425,35609404,35611409,35613404,35615438,35617459,35619398,35621381,35623365,35625391,35627313,35629315,35631241,35633160,35635158,35637161,35639189,35641144,35643144,35645079,35646948,35648940,35650921,35652531,35654376,35656188,35657857,35659479,35661139,35662665,35664467,35665797,35667307,35668836,35670240,35671835,35673106,35674581,35676051,35677208,35678750,35679903,35681326,35682626,35683830,35685296,35686428,35687869,35689036,35689937,35691524,35692878,35694088,35695311,35696588,35698013,35698957,35700244,35701632,35702776,35704384,35705476,35706841,35708020,35709489,35710828,35712046,35713506,35715016,35716182,35717805,35719239,35720730,35722320,35723686,35725314,35726615,35728111,35729659,35730820,35732446,35733610,35735023,35736196,35737722,35739011,35740341,35741736,35742807,35743912,35745454,35746910,35748022,35749270,35750588,35752003,35752946,35754252,35755725,35756883,35758433,35759531,35760900,35761971,35763622,35764816,35766250,35767698,35769117,35770537,35772025,35773614,35775059,35776636,35778094,35779422,35780846,35782376,35783770,35784947,35786594,35787837,35789168,35790328,35791936,35793158,35794549,35795896,35796899,35798194,35799657,35801071,35802152,35803461,35804886,35806082,35807063,35808351,35809749,35810899,35812447,35813542,35814960,35816103,35817700,35818972,35820430,35821885,35823282,35824754,35826199,35827755,35829217,35830780,35832342,35833551,35835042,35836521,35837745,35839099,35840623,35841932,35843305,35844478,35846031,35847204,35848619,35849948,35850840,35852360,35853675,35855009,35856184,35857423,35859005,35859887,35861054,35862483,35863643,35865180,35866192,35867544,35868854,35870109,35871535,35872713,35874153,35875657,35876896,35878505,35879955,35881452,35883009,35884335,35885980,35887243,35888749,35890268,35891548,35893204,35894344,35895729,35897026,35898329,35899793,35901060,35902535,35903649,35904604,35906244,35907623,35908841,35910057,35911371,35912942,35913833,35915080,35916537,35917712,35919336,35920362,35921716,35922845,35924443,35925671,35927062,35928521,35929960,35931257,35932757,35934316,35935749,35937325,35938762,35940215,35941565,35943057,35944552,35945781,35947421,35948588,35950023,35951166,35952778,35953914,35955335,35956620,35957572,35958821,35960242,35961689,35962775,35964063,35965557,35966693,35967716,35969031,35970355,35971535,35973069,35974214,35975597,35976722,35978331,35979603,35981031,35982523,35983941,35985295,35986767,35988371,35989869,35991471,35992972,35994281,35995769,35997335,35998695,35999788,36001488,36002636,36004008,36005153,36006743,36007894,36009193,36010568,36011600,36012740,36014248,36015709,36016785,36018074,36019569,36020672,36021702,36023016,36024276,36025311,36026868,36027973,36029363,36030495,36032136,36033295,36034645,36036150,36037602,36038987,36040543,36042125,36043622,36045166,36046758,36048128,36049557,36051108,36052536,36053615,36055306,36056530,36057862,36059031,36060584,36061833,36063080,36064461,36065575,36066490,36068075,36069533,36070736,36071959,36073261,36074709,36075598,36076865,36078276,36079403,36080982,36082055,36083373,36084679,36086250,36087555,36088760,36090294,36091844,36093217,36094869,36096302,36097822,36099369,36100795,36102500,36103734,36105251,36106765,36108002,36109536,36110851,36112218,36113600,36114783,36116322,36117544,36119030,36120249,36121088,36122772,36124065,36125337,36126567,36127752,36129408,36130248,36131514,36132953,36134225,36135806,36136900,36138219,36139457,36140827,36142366,36143644,36145108,36146624,36147868,36149558,36151018,36152567,36154173,36155561,36157274,36158567,36160119,36161649,36162862,36164469,36165755,36167170,36168559,36169716,36171289,36172527,36174027,36175262,36176108,36177772,36179046,36180341,36181579,36182800,36184418,36185347,36186490,36187909,36189344,36190718,36192099,36193335,36194736,36196033,36197681,36198898,36200409,36201980,36203282,36204911,36206424,36208099,36209651,36211232,36212767,36214220,36215427,36216653,36217940,36219394,36220944,36222573,36224032,36225367,36226572,36228094,36229629,36231011,36232724,36234311,36235655,36236938,36238333,36239810,36241221,36242910,36244483,36245946,36247327,36248586,36250095,36251504,36252871,36254483,36256117,36257692,36259159,36260367,36261726,36263097,36264332,36265800,36267482,36268779,36269866,36271179,36272481,36274194,36275589,36276864,36278346,36279999,36281144,36282830,36284534,36286406,36288349,36290250,36292049,36293987,36295799,36297560,36299381,36301290,36303092,36304912,36306573,36307857,36309546,36311245,36313002,36314739,36316449,36318122,36319604,36320427,36321713,36323696,36325727,36327548,36329124,36330261,36331480,36333284,36334797,36336535,36338261,36340208,36341910,36343713,36345474,36347357,36349090,36350841,36352745,36354641,36356498,36358150,36359852,36361836,36363455,36365432,36367297,36369237,36371209,36373171,36375100,36376936,36378741,36380342,36382209,36384014,36385922,36387833,36389652,36391308,36393008,36394485,36396127,36397907,36399566,36401163,36402838,36404428,36405824,36407502,36409266,36411274,36413282,36415247,36417143,36419140,36421170,36423168,36425110,36427148,36429176,36431184,36433132,36435133,36437169,36439135,36441118,36443058,36445017,36446900,36448881,36450835,36452807,36454739,36456764,36458772,36460776,36462777,36464785,36466820,36468821,36470802,36472656,36474636,36476689,36478743,36480776,36482764,36484697,36486533,36488118,36490090,36491945,36493891,36495797,36497694,36499636,36501527,36503434,36505310,36507214,36509146,36511005,36512907,36514882,36516761,36518692,36520627,36522515,36524404,36525693,36527346,36529282,36530988,36532520,36534004,36535253,36536787,36538542,36540159,36541769,36543597,36545183,36546759,36548339,36549926,36551452,36553075,36554717,36556359,36557924,36559221,36560491,36562137,36563768,36565077,36566381,36568363,36570216,36571996,36573755,36575546,36577258,36579034,36580908,36582646,36584320,36585987,36587729,36589374,36590995,36592835,36594599,36595852,36597372,36599042,36600513,36601987,36603220,36604556,36606325,36607819,36609073,36610251,36611636,36613348,36614684,36616235,36618200,36620199,36622175,36624152,36626127,36628047,36629881,36631443,36633358,36635263,36637175,36638787,36640597,36642604,36644488,36646367,36648238,36650029,36651864,36653789,36655405,36657337,36658879,36660304,36661990,36663495,36664899,36666411,36668058,36669459,36671200,36672578,36674304,36675766,36677473,36679079,36680926,36682441,36684143,36685727,36687460,36688960,36690383,36692000,36693509,36695385,36696635,36697879,36699286,36700997,36702851,36704682,36706401,36707829,36709303,36710930,36712710,36714246,36715697,36717352,36718957,36720631,36722307,36723825,36725409,36727075,36728668,36730085,36731646,36733087,36734762,36736393,36737884,36739456,36741003,36742647,36744264,36745778,36746956,36748550,36750057,36751349,36752676,36754045,36755261,36756550,36757924,36759454,36760682,36761903,36763326,36764712,36765978,36767416,36768800,36770089,36771689,36773270,36774829,36776695,36778165,36779659,36781544,36783380,36785252,36787134,36788672,36790618,36792401,36794046,36795923,36797540,36799428,36800661,36802519,36804431,36805869,36807552,36809288,36810975,36812655,36814242,36815698,36817318,36818783,36820384,36821907,36823429,36825025,36826573,36828071,36829501,36831091,36832617,36834151,36835574,36837173,36838639,36840464,36842350,36844171,36846040,36847897,36849713,36851191,36852689,36854267,36855787,36857631,36859597,36861514,36863354,36865268,36867165,36869040,36871000,36872100,36872639,36873204,36873685,36874428,36875087,36875632,36876138,36876844,36878586,36880581,36882572,36884538,36886462,36888422,36890396,36892362,36894306,36895959,36897618,36899241,36900894,36902683,36904235,36905990,36907574,36909209,36910754,36912311,36913970,36915475,36916976,36918448,36919814,36921312,36922662,36924237,36925753,36927045,36928178,36929599,36930938,36932517,36933972,36935396,36936743,36938336,36939810,36941408,36942856,36944242,36945614,36947010,36948446,36949878,36951282,36952689,36954572,36956349,36958164,36960039,36961927,36963842,36965645,36967386,36969208,36970865,36972557,36974358,36976198,36978032,36979768,36981491,36983174,36984322,36985160,36985933,36986796,36988245,36989940,36991650,36993264,36994894,36996571,36998154,36999709,37001358,37003133,37004795,37006485,37008126,37009783,37011606,37013403,37015296,37016756,37018543,37020001,37021709,37023364,37025140,37026683,37028271,37030259,37031897,37033731,37035563,37037423,37038911,37040763,37042601,37044388,37045450,37046519,37047456,37048544,37049603,37050687,37051679,37052748,37054407,37055962,37057547,37059071,37060649,37062208,37063753,37065253,37066941,37068361,37069873,37071508,37073153,37074452,37075544,37076530,37077538,37078848,37080275,37081840,37083608,37085250,37086712,37087833,37089244,37090808,37091952,37093186,37094719,37096262,37097690,37099290,37100898,37102425,37103994,37105627,37107120,37108396,37109380,37110211,37111238,37111766,37112764,37113506,37114461,37115940,37117347,37118211,37118742,37119617,37120169,37120994,37121501,37122098,37122930,37123620,37124507,37124980,37125824,37126524,37127418,37127940,37128452,37129383,37130068,37130908,37131404,37132269,37132976,37133765,37134314,37134790,37135656,37136247,37137057,37137341,37137890,37138089,37138292,37138893,37139089,37139710,37139941,37140553,37140751,37141121,37141409,37141571,37142059,37142098,37142651,37142835,37143381,37143626,37143778,37145287,37146702,37148133,37149328,37150577,37151780,37153187,37154152,37155162,37156151,37157156,37158119,37159076,37160085,37161059,37162584,37163955,37165349,37166795,37168309,37169809,37171189,37172543,37174106,37175544,37177047,37178548,37180132,37181725,37183232,37184756,37186248,37187828,37189235,37190660,37192053,37193456,37194931,37196349,37197767,37199313,37200709,37202124,37203493,37204874,37206006,37206941,37207915,37208855,37209961,37210882,37211840,37212779,37213839,37214746,37215678,37216604,37217511,37218972,37220352,37221750,37223144,37224322,37225245,37226189,37227139,37228532,37230136,37231703,37233280,37234818,37236361,37237938,37239570,37241174,37242735,37244058,37245411,37246747,37248012,37249333,37250624,37251965,37253482,37255043,37256543,37257841,37259409,37260670,37261946,37263202,37264768,37266415,37268125,37269703,37271268,37272808,37274637,37276371,37278177,37279751,37280955,37282140,37283645,37285075,37286599,37287823,37289071,37290467,37291905,37293524,37294982,37296503,37297975,37299363,37301060,37302766,37304407,37306088,37307638,37309304,37310944,37312588,37314372,37315983,37317686,37319355,37320961,37322534,37324188,37325836,37327368,37329089,37330752,37332338,37334009,37335492,37337132,37338743,37340387,37342051,37343628,37345332,37347017,37348684,37350267,37351914,37353576,37355107,37356899,37358554,37360175,37361803,37363585,37365319,37366929,37368549,37370166,37371994,37373665,37375337,37377018,37378750,37380480,37382134,37383827,37385477,37386750,37387714,37388669,37389623,37390971,37392494,37394040,37395519,37397135,37398480,37399834,37401185,37402455,37403743,37404899,37406112,37407357,37408657,37409915,37410843,37411798,37413181,37414379,37415534,37416639,37417792,37418962,37419911,37420886,37421816,37423390,37424913,37426420,37427969,37429455,37430954,37432459,37434008,37435673,37437081,37438467,37439855,37441240,37442600,37443988,37445345,37446709,37448402,37449947,37451478,37453026,37454595,37456131,37457661,37459195,37460796,37462530,37464149,37465768,37467412,37469022,37470620,37472208,37473861,37475639,37477121,37478539,37479951,37481361,37482851,37484288,37485674,37487123,37489021,37490777,37492487,37494174,37495923,37497657,37499357,37501043,37502940,37504695,37506406,37508095,37509776,37511503,37513177,37514842,37516519,37517920,37518900,37520117,37521162,37522263,37523322,37524538,37525714,37526821,37527885,37528819,37529681,37530315,37531038,37531710,37533268,37534942,37536673,37538351,37540071,37541763,37543498,37545227,37546943,37548814,37550555,37552231,37553845,37555559,37557241,37558982,37560684,37562572,37564317,37566084,37567860,37569590,37571394,37573150,37574938,37576662,37578546,37580272,37581949,37583564,37585254,37586902,37588621,37590287,37592014,37593469,37594974,37596370,37597955,37598978,37599993,37601028,37602046,37603873,37605683,37607506,37609342,37611007,37612853,37614638,37616464,37618263,37619714,37620901,37622114,37623618,37625173,37626189,37627236,37628496,37630247,37631848,37633492,37635082,37636619,37638285,37639909,37641491,37643195,37644761,37646231,37647629,37649123,37650522,37651996,37653406,37654843,37656309,37658062,37659461,37661166,37662523,37664015,37665454,37666936,37668329,37670051,37671691,37673303,37674911,37676441,37678038,37679649,37681233,37682926,37684466,37685945,37687397,37688777,37690289,37691732,37693193,37694653,37696373,37698184,37700006,37701866,37703545,37705386,37707182,37709011,37710827,37712494,37714130,37715756,37717487,37719042,37720697,37722304,37723993,37725612,37727097,37728538,37730009,37731398,37732885,37734329,37735782,37737301,37739159,37740970,37742827,37744723,37746421,37748258,37750049,37751922,37753604,37755233,37756871,37758465,37760021,37761692,37763334,37764933,37766591,37768229,37769677,37771106,37772587,37773983,37775480,37776913,37778337,37779881,37781733,37783536,37785399,37787159,37789015,37790816,37792697,37794536,37795864,37796830,37798600,37799262,37799936,37801118,37801794,37802761,37803608,37804316,37805717,37806864,37807497,37808228,37809337,37810636,37811573,37812814,37814197,37815468,37816058,37817232,37818561,37819666,37821032,37822263,37824006,37825086,37826129,37827082,37828663,37830242,37831821,37833570,37835213,37836955,37838490,37840237,37841745,37843257,37844481,37845249,37846520,37848071,37849583,37850599,37851596,37852615,37853631,37854980,37856070,37857090,37858201,37859524,37861372,37863405,37865430,37867448,37869470,37871513,37873540,37875512,37877522,37879553,37881584,37883591,37885581,37887593,37889608,37891616,37893600,37895623,37897653,37899675,37901686,37903708,37905737,37907751,37909696,37911725,37913762,37915794,37917789,37919792,37921806,37923801,37925812,37927778,37929820,37931763,37933667,37935576,37937461,37939359,37941275,37943106,37944970,37946868,37948771,37950638,37952531,37954346,37956219,37958065,37959949,37961876,37963580,37965239,37966916,37968587,37970250,37971902,37973569,37975181,37976964,37978616,37980289,37981945,37983567,37985231,37986881,37988494,37990137,37991722,37993174,37994610,37996033,37997433,37998865,38000280,38001648,38003194,38004736,38006261,38007722,38009254,38010588,38012153,38013642,38015274,38016693,38018179,38019663,38021344,38022772,38024243,38025792,38027428,38028851,38030148,38031626,38033110,38035094,38036803,38038326,38039986,38041596,38043163,38044697,38046302,38048010,38049547,38051120,38052744,38054407,38056148,38057787,38059375,38060908,38062562,38064110,38065674,38067223,38068771,38070310,38071896,38073420,38074817,38076454,38077922,38079642,38081202,38082844,38084385,38086086,38087738,38089367,38091128,38092867,38094333,38096021,38097943,38099804,38101507,38103233,38105109,38107055,38108986,38110933,38112913,38114865,38116794,38118707,38120627,38122457,38124298,38126167,38128127,38130009,38131857,38133725,38135551,38137344,38139131,38140912,38142668,38144682,38146647,38148613,38150579,38152497,38154417,38156318,38158203,38160185,38162148,38164044,38165937,38167794,38169607,38171431,38173261,38175043,38177032,38179005,38180986,38182958,38184909,38186845,38188778,38190683,38192641,38194580,38196404,38198222,38199964,38201741,38203505,38205271,38207032,38208926,38210761,38212615,38214378,38216167,38217999,38219814,38221615,38223388,38225114,38226543,38227987,38229449,38230864,38232309,38233722,38235114,38236674,38238628,38240566,38242507,38244486,38246447,38248354,38250254,38252170,38254067,38255925,38257832,38259825,38261762,38263692,38265597,38267498,38269377,38271331,38273211,38275140,38276877,38278360,38279902,38281522,38283121,38284720,38286303,38287790,38289595,38291388,38293194,38294985,38296721,38298489,38300232,38301949,38303665,38305295,38306645,38307945,38309241,38310651,38311935,38313247,38314587,38316121,38317617,38319091,38320580,38322141,38323716,38325237,38326709,38328171,38329814,38331509,38332985,38334638,38336254,38337873,38339436,38340964,38342350,38343690,38345019,38346267,38347554,38348718,38350000,38351680,38353579,38355439,38357320,38359224,38361118,38363000,38364859,38366728,38368681,38370583,38372450,38374328,38376207,38378089,38379984,38381856,38383797,38385212,38386638,38388014,38389400,38390865,38392340,38393796,38395256,38397017,38398678,38400384,38402130,38403830,38405432,38407028,38408578,38410243,38411796,38413346,38414955,38416563,38418264,38419989,38421685,38423329,38425044,38426497,38427962,38429442,38430887,38432273,38433655,38435063,38436547,38438120,38439607,38441102,38442652,38443765,38445297,38446792,38448244,38449912,38451402,38452937,38454430,38455872,38457357,38458835,38460355,38461869,38463851,38465812,38467730,38469457,38470882,38472289,38473710,38474622,38476044,38477446,38478852,38480436,38481595,38482758,38483877,38484994,38485966,38487052,38488212,38489372,38490884,38492326,38493768,38495619,38497521,38499405,38501320,38503208,38505115,38507008,38508929,38510634,38512252,38513782,38515258,38516781,38518219,38519075,38520066,38520836,38521811,38522590,38523580,38524264,38525170,38526060,38527010,38527831,38528644,38529607,38530545,38531575,38532455,38533875,38535125,38536428,38537688,38538622,38538973,38539534,38539989,38540485,38540705,38541244,38541818,38543176,38544163,38544957,38545765,38546855,38548192,38548916,38550258,38551123,38551286,38551704,38551978,38552334,38553613,38554964,38556514,38558140,38559977,38561713,38563537,38565362,38567176,38568945,38570706,38572490,38574266,38575896,38577553,38579125,38580749,38582331,38583982,38585571,38587163,38588598,38589911,38591236,38592548,38594115,38595788,38597455,38599116,38600756,38602458,38604121,38605796,38607488,38609150,38610813,38612502,38613464,38615019,38616850,38618719,38620497,38622301,38624119,38625988,38627815,38629562,38631217,38632668,38634134,38635589,38637195,38639064,38640890,38642782,38644639,38646491,38648378,38650219,38652075,38653926,38654999,38656743,38658052,38659200,38660438,38661511,38662633,38664685,38666688,38668691,38670607,38672566,38674520,38676420,38678327,38680208,38682159,38684111,38686082,38687971,38689878,38691782,38693718,38695722,38697533,38699198,38700955,38702748,38704567,38706346,38708041,38709642,38711478,38713534,38715590,38717635,38719678,38721727,38723764,38725812,38727862,38729910,38731962,38734008,38736050,38738099,38740144,38742185,38744227,38746279,38748149,38750068,38751921,38753786,38755610,38757471,38759296,38761173,38763113,38765015,38766892,38768743,38770594,38772417,38774282,38776124,38778056,38779394,38780936,38781706,38782516,38783302,38784007,38784723,38785220,38786023,38786913,38787703,38788092,38788731,38789534,38790387,38791075,38791470,38792193,38793032,38793901,38794422,38794911,38795688,38796494,38797428,38797917,38798492,38799747,38800790,38801937,38802514,38803086,38804320,38805411,38806537,38806921,38807735,38808872,38809937,38810911,38811302,38812340,38813447,38814527,38815282,38816626,38817892,38819466,38820761,38822500,38823958,38824947,38826120,38827247,38828395,38829559,38830651,38831722,38832826,38833979,38835104,38836301,38837489,38838580,38839658,38840684,38841799,38843304,38844415,38845534,38846716,38847787,38848858,38849970,38850995,38852043,38853044,38853922,38854936,38855995,38856851,38857727,38858520,38859385,38860748,38861180,38861713,38862222,38862763,38863327,38863799,38864368,38864925,38865382,38865896,38866355,38866879,38867405,38867950,38868527,38869023,38870416,38871884,38873390,38874879,38876431,38877927,38879428,38880948,38882463,38883603,38884583,38885574,38886991,38888574,38889982,38891369,38892675,38894021,38895495,38897227,38898874,38900527,38902185,38903796,38905414,38907080,38908715,38910380,38912089,38913556,38915057,38916592,38918070,38919584,38921083,38922541,38924173,38925166,38926295,38927544,38928873,38930203,38931489,38932789,38933907,38935276,38936719,38938120,38939556,38941084,38942579,38944131,38945686,38947359,38948754,38949721,38950881,38951995,38953118,38954270,38955373,38956459,38957583,38958753,38959878,38961041,38962238,38963308,38964353,38965376,38966581,38967990,38969100,38970196,38971385,38972415,38973459,38974574,38975653,38976659,38977657,38978566,38979578,38980619,38981461,38982307,38983116,38983960,38985302,38985712,38986272,38986787,38987346,38987903,38988358,38988922,38989486,38989950,38990467,38990942,38991443,38991943,38992475,38993033,38993540,38995215,38997019,38998805,39000608,39002402,39004197,39005919,39007718,39009111,39010534,39011927,39013320,39014923,39016198,39017419,39018625,39020121,39021580,39022911,39024200,39025714,39027065,39028076,39029089,39030052,39031496,39033188,39034682,39036375,39038047,39039417,39040591,39041737,39042909,39044361,39045669,39047413,39049076,39050670,39052363,39054050,39055638,39057314,39058941,39060634,39061844,39063214,39064667,39066145,39068111,39069780,39071761,39073520,39075252,39076888,39078606,39080326,39081951,39083712,39085471,39087191,39088759,39090260,39091785,39093329,39094924,39096428,39098014,39099336,39101033,39102654,39104264,39105851,39107429,39109010,39110598,39112208,39114014,39115434,39117174,39118974,39120495,39121882,39123612,39125419,39127007,39128717,39129792,39130876,39132011,39133172,39134331,39135460,39136522,39137677,39138764,39139921,39141059,39142276,39143416,39144498,39145543,39146662,39147986,39148980,39150240,39151337,39152256,39152905,39154004,39155236,39156359,39157351,39158279,39159525,39160658,39161597,39162123,39163286,39164517,39165711,39166678,39167502,39168700,39169801,39170798,39171230,39172423,39173608,39174774,39175768,39176578,39177723,39178880,39179954,39180377,39181557,39182684,39183843,39184786,39185593,39186679,39187916,39189042,39189449,39190538,39191745,39192864,39193751,39195157,39196268,39197364,39198560,39199590,39200656,39201765,39202849,39203868,39204864,39205765,39206790,39207834,39208673,39209517,39210318,39211161,39212178,39213381,39214581,39215723,39216124,39217073,39218281,39219417,39220387,39221652,39222763,39224006,39225134,39226340,39227534,39228666,39229879,39231070,39232341,39233472,39234571,39235768,39236956,39238231,39239367,39240496,39241737,39242878,39244225,39245436,39246468,39247470,39248602,39249897,39251038,39252046,39253080,39254177,39255532,39256627,39257610,39258656,39259918,39261161,39262191,39263202,39264285,39265713,39266502,39266966,39267519,39268726,39270239,39271995,39273846,39275708,39277554,39279168,39280560,39281142,39281637,39282150,39282669,39283236,39284058,39285419,39286477,39287732,39289235,39290443,39291522,39292936,39294349,39295416,39296653,39298140,39299351,39300407,39301766,39303633,39305498,39307213,39308927,39310830,39312518,39314351,39316242,39317936,39319819,39321537,39323386,39325136,39326979,39328730,39330520,39332378,39334142,39335914,39337789,39339525,39341375,39343125,39344874,39346801,39348496,39350327,39352106,39353969,39355703,39357573,39359311,39361044,39362948,39364616,39366419,39368307,39370013,39371847,39373656,39375487,39377206,39379062,39380821,39382588,39384488,39386223,39387960,39389966,39391699,39393500,39395299,39397053,39399046,39400848,39402676,39404351,39406243,39407987,39409845,39411629,39413375,39415260,39416925,39418749,39420627,39422409,39424168,39425986,39427823,39429527,39431360,39433238,39434954,39436858,39438591,39440357,39441803,39442976,39444213,39445378,39446671,39447776,39448961,39450134,39451248,39451750,39452539,39453451,39454242,39454634,39455318,39456104,39456959,39457641,39458038,39458779,39459634,39460472,39460980,39461482,39462256,39463093,39464015,39464516,39466042,39467004,39468141,39469285,39470416,39471598,39472696,39473789,39474873,39476026,39477189,39478358,39479532,39480649,39481740,39482801,39483899,39485457,39486938,39488544,39489613,39490691,39491862,39492964,39493998,39495077,39496122,39497159,39498186,39499050,39500092,39501153,39502112,39503002,39503764,39504646,39506067,39507517,39508932,39510256,39510674,39511236,39511744,39512304,39512863,39513337,39513902,39514443,39514908,39515418,39515884,39516386,39516902,39517434,39518008,39518514,39520114,39521762,39523431,39525007,39526718,39528373,39530029,39531694,39533387,39535077,39536834,39538476,39540102,39541705,39543370,39544981,39546076,39546534,39547475,39548219,39548642,39548944,39549748,39550715,39552758,39554792,39556795,39558821,39560848,39562849,39564842,39566808,39568835,39570857,39572897,39574917,39576924,39578940,39580955,39582912,39584919,39586343,39587676,39589284,39590836,39592234,39593470,39594831,39595951,39597071,39598193,39599320,39600442,39601564,39602438,39602509,39603237,39605216,39607271,39609121,39611000,39612915,39614769,39616618,39618494,39620398,39622267,39624209,39626140,39628081,39630022,39631891,39633794,39635710,39637628,39639505,39641276,39643270,39645169,39647052,39648968,39650875,39652730,39654493,39656311,39658068,39659949,39661844,39663763,39665646,39667501,39669383,39671289,39673193,39675044,39677033,39678808,39680688,39682558,39684472,39686318,39688018,39689821,39691266,39692784,39694400,39696033,39697628,39699169,39700599,39702147,39703757,39705391,39707022,39708569,39710058,39711651,39713218,39714733,39716608,39718243,39719768,39721312,39722972,39724912,39726741,39728537,39730304,39732157,39734011,39735846,39737688,39739578,39741061,39742353,39743649,39744996,39746319,39747688,39748995,39750259,39751858,39753335,39754796,39756237,39757699,39759177,39760619,39762074,39763502,39765137,39766585,39768043,39769477,39770984,39772435,39773888,39775319,39776912,39778369,39779836,39781287,39782746,39784264,39785743,39787204,39788626,39790254,39791676,39793098,39794503,39796025,39797462,39798903,39800318,39801888,39803299,39804696,39806059,39807484,39808959,39810413,39811822,39813224,39814817,39816247,39817622,39819050,39820518,39821983,39823411,39824790,39826284,39827822,39829201,39830599,39832049,39833497,39834943,39836344,39837726,39839357,39840769,39842163,39843616,39845105,39846554,39848009,39849415,39850846,39852499,39853956,39855391,39856880,39858354,39859864,39861349,39862721,39864347,39865686,39866998,39868318,39869690,39871015,39872374,39873724,39874987,39876537,39877869,39879167,39880512,39881891,39883227,39884531,39885839,39887368,39888686,39889989,39891296,39892668,39893970,39895316,39896646,39897907,39899525,39900965,39902393,39903846,39905313,39906819,39908267,39909694,39911223,39912735,39914123,39915540,39917052,39918510,39919988,39921426,39922832,39924476,39925866,39927247,39928670,39930111,39931590,39933012,39934411,39935834,39937441,39938839,39940244,39941724,39943206,39944652,39946056,39947457,39949056,39950481,39951867,39953253,39954685,39956169,39957612,39959022,39960411,39962069,39963476,39964902,39966324,39967846,39969287,39970718,39972142,39973772,39975444,39977263,39979054,39980779,39982673,39984299,39986084,39987946,39989762,39991579,39993319,39994866,39996740,39998467,40000237,40001937,40003742,40005568,40007414,40009322,40011156,40013058,40014946,40016791,40018689,40020632,40022460,40024283,40026054,40027894,40029690,40031465,40033238,40035082,40036956,40038738,40040504,40042237,40044028,40045770,40047486,40049226,40051126,40052936,40054759,40056479,40058254,40060005,40061755,40063473,40065255,40067243,40069104,40070927,40072740,40074540,40076357,40078170,40079975,40081859,40083604,40085353,40087125,40088849,40090581,40092282,40094041,40095813,40097675,40099557,40101436,40103284,40105120,40106945,40108691,40110481,40112251,40114080,40115793,40117544,40119324,40120841,40122571,40124318,40126014,40127735,40129537,40131321,40133040,40134829,40136446,40138114,40139735,40141505,40143314,40145111,40146799,40148413,40150058,40151746,40153436,40155113,40156756,40158543,40160196,40161832,40163497,40165160,40166855,40168531,40170234,40171910,40173744,40175573,40177298,40179091,40180913,40182709,40184521,40186309,40188173,40189936,40191713,40193419,40195159,40196945,40198712,40200512,40202259,40204128,40205911,40207780,40209656,40211538,40213439,40215415,40217253,40219077,40220824,40222494,40224233,40225956,40227684,40229450,40231206,40232933,40234726,40236419,40238124,40239959,40241741,40243507,40245382,40247131,40248859,40250481,40251904,40253429,40254977,40256459,40257994,40259532,40260997,40262765,40264794,40266748,40268684,40270702,40272674,40274627,40276631,40278522,40280464,40282446,40284450,40286448,40288384,40290343,40292337,40294340,40296343,40297798,40297838,40297876,40297916,40297956,40298269,40298309,40298347,40298387,40299720,40301530,40303354,40305172,40307021,40308858,40310682,40312484,40314352,40315899,40317365,40318823,40320267,40321698,40323117,40324528,40325975,40327740,40329561,40331368,40333120,40334904,40336671,40338490,40340243,40342042,40342901,40343432,40343472,40343512,40343551,40343869,40343903,40343943,40343983,40344290,40345469,40346670,40348485,40350199,40351941,40353710,40355450,40357157,40358894,40360629,40362416,40363819,40365123,40366522,40368025,40368784,40370060,40371594,40372905,40373958,40375371,40377160,40378753,40380328,40380368,40380406,40380446,40380486,40380799,40380839,40380877,40380917,40381809,40383190,40384373,40385512,40386732,40388495,40390097,40391742,40393454,40395113,40396800,40398473,40400105,40401165,40401205,40401243,40401283,40401849,40402791,40402890,40403294,40404903,40406776,40408813,40410450,40412092,40413721,40415370,40417017,40418699,40420427,40422161,40423847,40425610,40427316,40429092,40430820,40432528,40434212,40435881,40437626,40438491,40439649,40439692,40441360,40443162,40444878,40446589,40448346,40450090,40451846,40453548,40455370,40457227,40459055,40460945,40462843,40464650,40466545,40468333,40470143,40472121,40473901,40475509,40477199,40478877,40480635,40482424,40484244,40485938,40487811,40489650,40491576,40493382,40495331,40497114,40499091,40500866,40502832,40504542,40505768,40506907,40507989,40509001,40510334,40511721,40513069,40514429,40515802,40517140,40518304,40519413,40520500,40521635,40522794,40524041,40525479,40526173,40527058,40527994,40529132,40530677,40532309,40533215,40533890,40534639,40535550,40537133,40538830,40540581,40541887,40542815,40544204,40545910,40547152,40548328,40549134,40550040,40550960,40551570,40552226,40553229,40554536,40555846,40557036,40558323,40559695,40561082,40562456,40563733,40565394,40567324,40569234,40571132,40572962,40574822,40576741,40578593,40580546,40582380,40584302,40586205,40588155,40589996,40591877,40593781,40595694,40596663,40597611,40598519,40599484,40601393,40603351,40604945,40606927,40608566,40609728,40610944,40612094,40613588,40615566,40617565,40619591,40621611,40623474,40625409,40627286,40629169,40631179,40633226,40635271,40637300,40639270,40641051,40642796,40644678,40646478,40648307,40650097,40651849,40653622,40655535,40657503,40659439,40661349,40663342,40664706,40665989,40667302,40668992,40670178,40671400,40672659,40674012,40675271,40676472,40677732,40679005,40680794,40681952,40683189,40684490,40685900,40687151,40687895,40688829,40690533,40692108,40692875,40693697,40695305,40696992,40697857,40698592,40699954,40701277,40702651,40704041,40705384,40707244,40708997,40710750,40712580,40714366,40716168,40717980,40719844,40721635,40723436,40725109,40726780,40728439,40730231,40731991,40733803,40735611,40737398,40738853,40740252,40741691,40743174,40744734,40746181,40747592,40749047,40750660,40752158,40753605,40755093,40756735,40758244,40759706,40761226,40762836,40764816,40766793,40768738,40770657,40772670,40774652,40776606,40778611,40780591,40782364,40784143,40785883,40787706,40789364,40790910,40792484,40794068,40796032,40797920,40799701,40801609,40803501,40805308,40807115,40808921,40810861,40812761,40814636,40816510,40818448,40820240,40822057,40823814,40825650,40827434,40828874,40830381,40831759,40833044,40834264,40835476,40837154,40838304,40839520,40840747,40841984,40843640,40844724,40845942,40847463,40849314,40851102,40852855,40854621,40856525,40858316,40860091,40861867,40863728,40865530,40867357,40869166,40870961,40872112,40872994,40873787,40874528,40875628,40876780,40877959,40879109,40880392,40881563,40882782,40883939,40885155,40886495,40887883,40889249,40890524,40892317,40894158,40896022,40897861,40899750,40901577,40903441,40905304,40907192,40909090,40911009,40912936,40914821,40916777,40918700,40920632,40922583,40924463,40926300,40928167,40929999,40931743,40933576,40935331,40937019,40938625,40940226,40942127,40943936,40945779,40947694,40949576,40951419,40953356,40955138,40956618,40958016,40959479,40961049,40962537,40964240,40965978,40967522,40969086,40970799,40972408,40974126,40975803,40977568,40979310,40981079,40982926,40984883,40986940,40988988,40990855,40992880,40994857,40996853,40998806,41000846,41002806,41004747,41006633,41008321,41009469,41010847,41012132,41013350,41015113,41016902,41018650,41020401,41022081,41023611,41025208,41026807,41028505,41030317,41032115,41033882,41035692,41037489,41039333,41041128,41042904,41044671,41046346,41048052,41049698,41051328,41053100,41054913,41056690,41058236,41059279,41060424,41061399,41062867,41063929,41064811,41065707,41066755,41068029,41069066,41070241,41071142,41072307,41072830,41073424,41073930,41074678,41075402,41076134,41076804,41077610,41078569,41079748,41080948,41081958,41083240,41084585,41086039,41087399,41088766,41090158,41091586,41093312,41094869,41096124,41097687,41099313,41100694,41102290,41104016,41105610,41107285,41108297,41108514,41108754,41108953,41109708,41110203,41110699,41111149,41111840,41113881,41115900,41117953,41119989,41122010,41124049,41126088,41128120,41130152,41132116,41134053,41136027,41137922,41139828,41141766,41143675,41145565,41147085,41148484,41149905,41151350,41152693,41153878,41155041,41156187,41157428,41158844,41160206,41161708,41163110,41164979,41166791,41168635,41170510,41172402,41174226,41176000,41177796,41179696,41181479,41183217,41184967,41186792,41188448,41190154,41191922,41193654,41195124,41196555,41198059,41199494,41200925,41202374,41203897,41205380,41206896,41208791,41210681,41212538,41214458,41215749,41216983,41218211,41219444,41221261,41223071,41224849,41226630,41228356,41229806,41231174,41232733,41234234,41236259,41238293,41240329,41242345,41244362,41246348,41248329,41250320,41252130,41253641,41255161,41256661,41258351,41260040,41261697,41263355,41265030,41267039,41269008,41270984,41272991,41274883,41276596,41278313,41280057,41281992,41284047,41286095,41288148,41290180,41291463,41292704,41293555,41294087,41294619,41295163,41296028,41297441,41298868,41300294,41301466,41302710,41304305,41305889,41307081,41308542,41310110,41311610,41313148,41314596,41316133,41317847,41319533,41321410,41323228,41324627,41325827,41327169,41328413,41329659,41330602,41331596,41332564,41333834,41334701,41335617,41336602,41337441,41339043,41341028,41342986,41344961,41346916,41348945,41350951,41352914,41354921,41356779,41358269,41359786,41361409,41363177,41364809,41366492,41368155,41369903,41371553,41373030,41374605,41376242,41378015,41379672,41381408,41383028,41384671,41386258,41387925,41389427,41390927,41392442,41394055,41395548,41397020,41398910,41400816,41402685,41404552,41406446,41408347,41410209,41412058,41413939,41415473,41416945,41418390,41420246,41422193,41424169,41426155,41428166,41430049,41431861,41433659,41435461,41437308,41439195,41441102,41443012,41444750,41446142,41447588,41449003,41450436,41451870,41453392,41454876,41456322,41457860,41459513,41461232,41462876,41464422,41465943,41467540,41469068,41470657,41472406,41474042,41475766,41477494,41479194,41480921,41482591,41484339,41485975,41487667,41489180,41490896,41492549,41494207,41495718,41497420,41499123,41500572,41502155,41503726,41505291,41506673,41508342,41509889,41511613,41513130,41514601,41516177,41517714,41519218,41520666,41522211,41523941,41525447,41526743,41528008,41529470,41530991,41532604,41534392,41535789,41537469,41538995,41540492,41542252,41543969,41545577,41547232,41548689,41549930,41551081,41552338,41553613,41554992,41556173,41557548,41559352,41560662,41562042,41563429,41564675,41565820,41566941,41568227,41569386,41570790,41572253,41573637,41574977,41576535,41577931,41579094,41580440,41582265,41583957,41585768,41587336,41588640,41589697,41590712,41591629,41592536,41593636,41594814,41596133,41597404,41598969,41600604,41602131,41603819,41605781,41606869,41608122,41609098,41610114,41610987,41611609,41612733,41613890,41615244,41616413,41617686,41618949,41620241,41621809,41623537,41625334,41627305,41629022,41630818,41632604,41634237,41635556,41636776,41637961,41639308,41640613,41641931,41643281,41644524,41645722,41647024,41648304,41649584,41651151,41652841,41654502,41656177,41657672,41659116,41660679,41662449,41663987,41665646,41666923,41668147,41669346,41670602,41671915,41673169,41674637,41676147,41677827,41679302,41680569,41681930,41683138,41684318,41685512,41686812,41688268,41689986,41691716,41693391,41694968,41696354,41697786,41699180,41700599,41702291,41703855,41705205,41706461,41707667,41708953,41710118,41711354,41712805,41714559,41716207,41717963,41719612,41721138,41722841,41724494,41725981,41727673,41729257,41729787,41730037,41731500,41733089,41733651,41733901,41735293,41736857,41737429,41737679,41739078,41740667,41741238,41741515,41742929,41744496,41745097,41745346,41746670,41748252,41748864,41749108,41750287,41751554,41752842,41754108,41755544,41756808,41758119,41759479,41760886,41762211,41763472,41764795,41766070,41767483,41768819,41770161,41771408,41772820,41774399,41775699,41776956,41778223,41779451,41780688,41781962,41783204,41784472,41785988,41787149,41788365,41789573,41790811,41792038,41793265,41794477,41795973,41797207,41798484,41799748,41801072,41802324,41803588,41804878,41806123,41807940,41809664,41811424,41813122,41814794,41816442,41818232,41819986,41821561,41822814,41824165,41825458,41826835,41828165,41829513,41830761,41832143,41833467,41834878,41836186,41837559,41838909,41840331,41841680,41843103,41844948,41846622,41848221,41849797,41851437,41853014,41854510,41855928,41857216,41858616,41860018,41861482,41863042,41864574,41865996,41867564,41869282,41871163,41872848,41874421,41875998,41877656,41879232,41880747,41882203,41883480,41884846,41886254,41887713,41889296,41890816,41892254,41893759,41895472,41897362,41899058,41900654,41902253,41903925,41905498,41907015,41908511,41909762,41911129,41912514,41913977,41915551,41917069,41918518,41920020,41921750,41923652,41925343,41926961,41928544,41930193,41931750,41933293,41934765,41936005,41937387,41938744,41940184,41941770,41943274,41944729,41946241,41947934,41949856,41951029,41952241,41953312,41954229,41955099,41956145,41957154,41958157,41959290,41960560,41961777,41962986,41963939,41964905,41965948,41966989,41968479,41969755,41970983,41972112,41973023,41973932,41974918,41975982,41976921,41978065,41979313,41980539,41981743,41982730,41983667,41984725,41985781,41987141,41989132,41991055,41992973,41994935,41996892,41998857,42000811,42002735,42004611,42006409,42008202,42010041,42011925,42013864,42015779,42017735,42019601,42021164,42023131,42025059,42027037,42029052,42031039,42032954,42034913,42036912,42038700,42040444,42042215,42043970,42045755,42047529,42049377,42051146,42052872,42054668,42056417,42058187,42059971,42061542,42063434,42065435,42067380,42069238,42071112,42073053,42074967,42076165,42076977,42078293,42080209,42082207,42084218,42086201,42088134,42090137,42092096,42094045,42096084,42098037,42099997,42101960,42103909,42105896,42107844,42109797,42111784,42113386,42114925,42116501,42118084,42119664,42121226,42122809,42124381,42126152,42127887,42129509,42131207,42132760,42134594,42136409,42138247,42140045,42141890,42143372,42144926,42146485,42148007,42149724,42151386,42153102,42154695,42156474,42158083,42159793,42161470,42163326,42165135,42166994,42168837,42170716,42172412,42174090,42175791,42177378,42179251,42181060,42182905,42184714,42186541,42188071,42189715,42191257,42192865,42194486,42196175,42197890,42199548,42201282,42203007,42204761,42206503,42208260,42209781,42211485,42213171,42214960,42216474,42218144,42219959,42221566,42223296,42225078,42226866,42228483,42230148,42231741,42233489,42235133,42236716,42238269,42240015,42241644,42243375,42244407,42246247,42248160,42249770,42251162,42253084,42254966,42256432,42258010,42259622,42261614,42263620,42265587,42267172,42268527,42269463,42270678,42271991,42273151,42274836,42276395,42277949,42279398,42280809,42282301,42283790,42285308,42287040,42288183,42289307,42290229,42291216,42292445,42293558,42294508,42295531,42296649,42297865,42299735,42301518,42303393,42305192,42307044,42308854,42310710,42312492,42314329,42316049,42317643,42319408,42321010,42322761,42324486,42326203,42328005,42329918,42331692,42333556,42335393,42337218,42339044,42340888,42342682,42344597,42346347,42347931,42349671,42351347,42353080,42354826,42356540,42358353,42360160,42361989,42363852,42365683,42367580,42369406,42371309,42373103,42375074,42377018,42378895,42380883,42382782,42384712,42386663,42388692,42390604,42392558,42394326,42396057,42397873,42399615,42401448,42403261,42405103,42406929,42408567,42410039,42411307,42412811,42414377,42416070,42417506,42418618,42419872,42420913,42421747,42422043,42422653,42423953,42425205,42426541,42427781,42429208,42430511,42431761,42433165,42434445,42435839,42437182,42438435,42439788,42441107,42442528,42443869,42445212,42446554,42447867,42449354,42451001,42451884,42453523,42454933,42456829,42458756,42460754,42462807,42464808,42466838,42468817,42470736,42472683,42474332,42475865,42477366,42478930,42480622,42482278,42484015,42485744,42487555,42489293,42491034,42492650,42494364,42495936,42497542,42499174,42500642,42502306,42504125,42506052,42507909,42509654,42511270,42513042,42514967,42516934,42518843,42520647,42522290,42524116,42526025,42527962,42529762,42531513,42533151,42535069,42536985,42538870,42540674,42542220,42544134,42546069,42547988,42549906,42551804,42553407,42555215,42557076,42558933,42560807,42562543,42563511,42564487,42565479,42566447,42568056,42569531,42571245,42572823,42574491,42576116,42577813,42579454,42580987,42582787,42584485,42586144,42587892,42589607,42591263,42592927,42594553,42596237,42597893,42599628,42601559,42603291,42605057,42606778,42608430,42610231,42611923,42613521,42615307,42616951,42618775,42620393,42622036,42623714,42625331,42627029,42628941,42630841,42632732,42634616,42636570,42638502,42640334,42642012,42643762,42645399,42647105,42648988,42650911,42652790,42654681,42656610,42658538,42660521,42662447,42664394,42666333,42668241,42670029,42671792,42673569,42675375,42677316,42679242,42681124,42683018,42684930,42686788,42688679,42690562,42692007,42693385,42694697,42696236,42697833,42699488,42701092,42702755,42704668,42706509,42708384,42710224,42712097,42713913,42715770,42717662,42719493,42721390,42723289,42725135,42725760,42726295,42726818,42728025,42729033,42730030,42731400,42732609,42733802,42735206,42736891,42738530,42740156,42741799,42743578,42745057,42746740,42748481,42749801,42751491,42753015,42754391,42755654,42757093,42758719,42760422,42762105,42763885,42765541,42767258,42768943,42770566,42772180,42773559,42775039,42776508,42777971,42779455,42780902,42782424,42783875,42785349,42786717,42788187,42789590,42791374,42793182,42795021,42796931,42798778,42800632,42802473,42804315,42806218,42808061,42809881,42811764,42813660,42815539,42817408,42819272,42821179,42823124,42825131,42827069,42828965,42830877,42832783,42834718,42836648,42838551,42840484,42842400,42844312,42846163,42848035,42849916,42851830,42853688,42855316,42856724,42858164,42859933,42861555,42863148,42864784,42866388,42868008,42869660,42871278,42872935,42874661,42876318,42877948,42879622,42881277,42882925,42884576,42886221,42887972,42889621,42891280,42892941,42894576,42896189,42897821,42899483,42901108,42903077,42904949,42906810,42908657,42910542,42912403,42914246,42916109,42918044,42919870,42921709,42923530,42925358,42927215,42929047,42930887,42932730,42934694,42936537,42938399,42940282,42942129,42943981,42945823,42947688,42949632,42950984,42952399,42953839,42955225,42956547,42957986,42959558,42960991,42962338,42963708,42965228,42966664,42968117,42969584,42971560,42973447,42975241,42977020,42978840,42980691,42982543,42984440,42986340,42987951,42989758,42991506,42993172,42994882,42996578,42998323,42999893,43001603,43003291,43005016,43006685,43008486,43010220,43012000,43013624,43015318,43017007,43018880,43020697,43022545,43024297,43025900,43027808,43029660,43031571,43033395,43035252,43036870,43038669,43040410,43042198,43044033,43045748,43047371,43049116,43050791,43052531,43054302,43055846,43057677,43059396,43061152,43062865,43064696,43066297,43068032,43069662,43071265,43073010,43074730,43075885,43077133,43078399,43079628,43080881,43082206,43083244,43084865,43086471,43087993,43089550,43091178,43092766,43094340,43095885,43097454,43099029,43100582,43102163,43103872,43105693,43107586,43109518,43111362,43113087,43115032,43116456,43117836,43119565,43121332,43123187,43124941,43126642,43128293,43129776,43131460,43133156,43134937,43136649,43138029,43139340,43141098,43142930,43144771,43146265,43147687,43149274,43150651,43152331,43153911,43155327,43156953,43158458,43159967,43161460,43162976,43164430,43165987,43167491,43168840,43170384,43171908,43173505,43175003,43176448,43177963,43179651,43181194,43182709,43184155,43185498,43186997,43188465,43190138,43191968,43193836,43195668,43197498,43199331,43201120,43202885,43204602,43206251,43207872,43209701,43211386,43213175,43214918,43216632,43218418,43220164,43221864,43223760,43225690,43227514,43229371,43231251,43233072,43234946,43236666,43238340,43240038,43241733,43243444,43245224,43246979,43248615,43250345,43252148,43253894,43255494,43257343,43259033,43260767,43262488,43264181,43265818,43267504,43269193,43270911,43272756,43274424,43276120,43277750,43279533,43281230,43282990,43284668,43286286,43288083,43289832,43291252,43292644,43294383,43296156,43297791,43299500,43301215,43302702,43304193,43305760,43307273,43308770,43310182,43311784,43313281,43314783,43316549,43318305,43319977,43321713,43323470,43325100,43326818,43328559,43330171,43331811,43333470,43335118,43336811,43338417,43340040,43341673,43343381,43345051,43346658,43348263,43349953,43351582,43353233,43354871,43356595,43358223,43359862,43361499,43363093,43364808,43366435,43368111,43369737,43371440,43373065,43374708,43376358,43378041,43379647,43381277,43382872,43384531,43386208,43387828,43389530,43391283,43393022,43394668,43396283,43397921,43399641,43401251,43402888,43404540,43406321,43408003,43409617,43411233,43412837,43414580,43416347,43418230,43419942,43421589,43423298,43425117,43426827,43428519,43430247,43432086,43433887,43435586,43437497,43439376,43441240,43443228,43445201,43447149,43449104,43451056,43452970,43454790,43456632,43458600,43460610,43462623,43464617,43466560,43468396,43470360,43472125,43473962,43475938,43477962,43479982,43481971,43483975,43485942,43487856,43489779,43491682,43493588,43495521,43497420,43499380,43501335,43503181,43505004,43506918,43508833,43510708,43512541,43514180,43515806,43517581,43519446,43521265,43522952,43524569,43526172,43527801,43529426,43531059,43532697,43534114,43535479,43536812,43538243,43539682,43541215,43542669,43544058,43545442,43546966,43548526,43549836,43551273,43552810,43554280,43555707,43557326,43559029,43560717,43562468,43564135,43565819,43567539,43569344,43570990,43572715,43574446,43576223,43577947,43579615,43581267,43582961,43584646,43586357,43588027,43589730,43591388,43593094,43594773,43596510,43598164,43599826,43601560,43603192,43604836,43606488,43608397,43610285,43612174,43614083,43616002,43617918,43619808,43621695,43623605,43625439,43627232,43629028,43630834,43632838,43634843,43636845,43638890,43640930,43642957,43644985,43647006,43649044,43651084,43653121,43655170,43657222,43659278,43661328,43663362,43665402,43667417,43669273,43671121,43673015,43674940,43676859,43678739,43680588,43682474,43684012,43685458,43686960,43688416,43690111,43691733,43693277,43694827,43696480,43698033,43699600,43701278,43702729,43704155,43705773,43707364,43708889,43710491,43712097,43713523,43715001,43716424,43717979,43719720,43721649,43723428,43725141,43726847,43728480,43730402,43732262,43734141,43735943,43737718,43739510,43741249,43743069,43744926,43746526,43748359,43750337,43752341,43754326,43756227,43758132,43760036,43761635,43763299,43765050,43766762,43768536,43770284,43772094,43773787,43775474,43777240,43778921,43780631,43782320,43783657,43785182,43786693,43788206,43789686,43791251,43792777,43794270,43795784,43797311,43798819,43800335,43801842,43803412,43804909,43806395,43807905,43809390,43810801,43812089,43813404,43814666,43816172,43818085,43820023,43821917,43823798,43825744,43827674,43829612,43831556,43833222,43834542,43835841,43837169,43838517,43839850,43841178,43842513,43844054,43845561,43847058,43848555,43850190,43851802,43853309,43854935,43856456,43858284,43859906,43861562,43863281,43864637,43866375,43868011,43869661,43871512,43872782,43874035,43875318,43876606,43877895,43879185,43880451,43881643,43883155,43884367,43885354,43886490,43887584,43888857,43889969,43891058,43892357,43893793,43895074,43896351,43897541,43898776,43900027,43901358,43902701,43904291,43905715,43907010,43908305,43909649,43910985,43912287,43913564,43914925,43916876,43918374,43920033,43921788,43923484,43925025,43926503,43927887,43929858,43931795,43932968,43934142,43935265,43936521,43937795,43938860,43940794,43942754,43944673,43946161,43947973,43949800,43951620,43953230,43955021,43956987,43957507,43958116,43958572,43959063,43959655,43960153,43960702,43961101,43961974,43962466,43963796,43965204,43966566,43967822,43968942,43969818,43970331,43971109,43972058,43973445,43974954,43976434,43977869,43979257,43979949,43981161,43982152,43983628,43985045,43986190,43987561,43988850,43990152,43991436,43993328,43995087,43996818,43998574,43999978,44000062,44000481,44001633,44002396,44002920,44003568,44003983,44004623,44005214,44005875,44006554,44007861,44008675,44009791,44011224,44012647,44014046,44015435,44016852,44018522,44020102,44021804,44023375,44024953,44026510,44028243,44030027,44031474,44032524,44033640,44034872,44036159,44037509,44038742,44040036,44041373,44042819,44044409,44045971,44047648,44049340,44050824,44052140,44053599,44054849,44055298,44055323,44055353,44055378,44056224,44056808,44058181,44058916,44060543,44062148,44063823,44065429,44067085,44068249,44069914,44071446,44073020,44074575,44076422,44078333,44080276,44082190,44084140,44086025,44087283,44088109,44089492,44091005,44092065,44093009,44094102,44095368,44096763,44098178,44099665,44101133,44102709,44104224,44105930,44107668,44109259,44110875,44112408,44113940,44115512,44117081,44118588,44120182,44122088,44124140,44126191,44128224,44130181,44132048,44134071,44136083,44137934,44139715,44141656,44143544,44145537,44147547,44149588,44151596,44153635,44155630,44157649,44159650,44161695,44163736,44165627,44167356,44169316,44171326,44173338,44175327,44177132,44178779,44180210,44181434,44182669,44183860,44185619,44187628,44189412,44191124,44192956,44194872,44196728,44198493,44200253,44202009,44203936,44205873,44207855,44209821,44211774,44213781,44215757,44217749,44219454,44221002,44222563,44224102,44225640,44227158,44228696,44230226,44231669,44233060,44234389,44235728,44237009,44238301,44239634,44240951,44242762,44244766,44246761,44248748,44250733,44252722,44254671,44256605,44258606,44260603,44262349,44264051,44265698,44267364,44269036,44270712,44271425,44271633,44272469,44273807,44275115,44276346,44277303,44278355,44279250,44280286,44281695,44283386,44285037,44286649,44288404,44290121,44291727,44293239,44294855,44296413,44298032,44299584,44301165,44302628,44304137,44305388,44306627,44307686,44308961,44310189,44311471,44312693,44314103,44315524,44317096,44318650,44320204,44321665,44323053,44324500,44325530,44326498,44327872,44329448,44330722,44331460,44332776,44334050,44335468,44336974,44338471,44339963,44341317,44342497,44343910,44345407,44346950,44348668,44350454,44352284,44354052,44355871,44357572,44359134,44360787,44362391,44364034,44365595,44367188,44368665,44370237,44371750,44373082,44374371,44375853,44377399,44378910,44380262,44381666,44383054,44384438,44385810,44386758,44387262,44387867,44388325,44389494,44390926,44392523,44394024,44395485,44396918,44398446,44399973,44401476,44402850,44404125,44405237,44406471,44407783,44409231,44410737,44411956,44412981,44413574,44413921,44415359,44417142,44419035,44420811,44422488,44424046,44425195,44426270,44427637,44429184,44430748,44432300,44433862,44435442,44437011,44438592,44440416,44442155,44443996,44445725,44447607,44449383,44451264,44453029,44454469,44455854,44457272,44458634,44460072,44461485,44463086,44464768,44466410,44467960,44469492,44470967,44472483,44473994,44475494,44476964,44478768,44480698,44482362,44483904,44484791,44485515,44486468,44487329,44488507,44490097,44491724,44493378,44495030,44496528,44498131,44499430,44500675,44501939,44502792,44503341,44504237,44505051,44505811,44506418,44507536,44509019,44509908,44510409,44511017,44511523,44512963,44514774,44516158,44517234,44518336,44519365,44520680,44522097,44523354,44524446,44525392,44526275,44527664,44529097,44530568,44532003,44533430,44534885,44536545,44538234,44539985,44541623,44543495,44545385,44547080,44548636,44549809,44550843,44552044,44553188,44554320,44555326,44556327,44557196,44558356,44559336,44560589,44561779,44562613,44563094,44563713,44564314,44564924,44565441,44566034,44566619,44567208,44567697,44568352,44568948,44569557,44570080,44570726,44571316,44571893,44572298,44572857,44573402,44574940,44576823,44578185,44579215,44580341,44581360,44582486,44583507,44584678,44585809,44587435,44589204,44590833,44592566,44594256,44595948,44597619,44599308,44600637,44601801,44603355,44605032,44606715,44608416,44610278,44612140,44612875,44613070,44613454,44613747,44614043,44614257,44614649,44614888,44615180,44615236,44615499,44615524,44615737,44615860,44616143,44616430,44616790,44617024,44618115,44619615,44621161,44622848,44624069,44625178,44626229,44627334,44628506,44629720,44631165,44632631,44634113,44635540,44637363,44639216,44641020,44642731,44644376,44645728,44647371,44648969,44650498,44651889,44653312,44654588,44655875,44657680,44659249,44660577,44662033,44663552,44665003,44666508,44668000,44669233,44670618,44672068,44673502,44674952,44676501,44678011,44679512,44680622,44681857,44683123,44684581,44685738,44687002,44688295,44689419,44690481,44691623,44693671,44695719,44697767,44699815,44701863,44703911,44705959,44708007,44710055,44712103,44714151,44716199,44718247,44720295,44722343,44724391,44726439,44728487,44730535,44732583,44734631,44736679,44738727,44740775,44742823,44744869,44746922,44748827,44750875,44752923,44754971,44757019,44759067,44761115,44763163,44765211,44767259,44769307,44771355,44773403,44775451,44777499,44779547,44781595,44783643,44785691,44787739,44789787,44791835,44793883,44795931,44797988,44800036,44802084,44803937,44805985,44808033,44810014,44812062,44814110,44816087,44818135,44820183,44822231,44824279,44826327,44828375,44830423,44832394,44834442,44836490,44838538,44840586,44842634,44844682,44846661,44848709,44850757,44852805,44854784,44856832,44858880,44860928,44862976,44864956,44867004,44869052,44871100,44873148,44875196,44877244,44879223,44881271,44883319,44885367,44887415,44889317,44891365,44893413,44895461,44897509,44899415,44901463,44903427,44905475,44907440,44909488,44911536,44913584,44915632,44917680,44919728,44921776,44923824,44925872,44927920,44929968,44932016,44934064,44936112,44938160,44940208,44942253,44944266,44946071,44948119,44950167,44952215,44954263,44956311,44958359,44960407,44962455,44964503,44966551,44968599,44970647,44972695,44974743,44976791,44978847,44980895,44982948,44984901,44986774,44988822,44990870,44992926,44994974,44997028,44998996,45000904,45002952,45005000,45007048,45009096,45011124,45013096,45015025,45017073,45019121,45021169,45023217,45025265,45027313,45029361,45031409,45033457,45035505,45037553,45039601,45041649,45043697,45045745,45047793,45049841,45051889,45053937,45055985,45058033,45060081,45062129,45064185,45066233,45068282,45070338,45072370,45074183,45076231,45078279,45080327,45082375,45084423,45086471,45088519,45090567,45092615,45094663,45096711,45098759,45100807,45102855,45104903,45106951,45108999,45111047,45113095,45115143,45117191,45119239,45121287,45123335,45125392,45127448,45129498,45131485,45133181,45135229,45137203,45139251,45141229,45143277,45145325,45147373,45149421,45151469,45153517,45155565,45157613,45159661,45161709,45163757,45165805,45167853,45169901,45171949,45173997,45176045,45178093,45180141,45182189,45184237,45186285,45188333,45190390,45192438,45194486,45196521,45198432,45200480,45202528,45204576,45206624,45208672,45210720,45212768,45214816,45216864,45218912,45220960,45223008,45225056,45227104,45229152,45231200,45233248,45235296,45237344,45239392,45241440,45243488,45245536,45247592,45249648,45251700,45253567,45255615,45257663,45259711,45261759,45263724,45265772,45267820,45269868,45271916,45273867,45275915,45277963,45280011,45282059,45284107,45286155,45288119,45290167,45292215,45294263,45296311,45298359,45300414,45302379,45304427,45306475,45308523,45310571,45312550,45314598,45316646,45318694,45320742,45322790,45324838,45326886,45328934,45330982,45333030,45335078,45337126,45339174,45341222,45343270,45345318,45347292,45349340,45351388,45353436,45355484,45357532,45359580,45361628,45363676,45365724,45367772,45369820,45371868,45373916,45375964,45378012,45380060,45382033,45384081,45386129,45388177,45390225,45392273,45394321,45396369,45398417,45400465,45402513,45404561,45406609,45408657,45410705,45412753,45414801,45416849,45418831,45420879,45422927,45424975,45427023,45429071,45431119,45433167,45435215,45437263,45439311,45441359,45443407,45445455,45447503,45449551,45451599,45453647,45455695,45457673,45459721,45461769,45463817,45465865,45467913,45469961,45472009,45474057,45476105,45478153,45480201,45482249,45484297,45486345,45488393,45490441,45492431,45494479,45496527,45498575,45500623,45502671,45504719,45506767,45508815,45510863,45512911,45514959,45517007,45519055,45521103,45523151,45525199,45527247,45529225,45531273,45533255,45535303,45537281,45539329,45541367,45543387,45545435,45547409,45549388,45551436,45553157,45555122,45557158,45559206,45561208,45563101,45565045,45567080,45569128,45571154,45573080,45574992,45577002,45579050,45581100,45583044,45584950,45586948,45589004,45591052,45593037,45594932,45596906,45598954,45601002,45603026,45604936,45606887,45608928,45610976,45613008,45614941,45616901,45618949,45620997,45623045,45625093,45627141,45629189,45631237,45633285,45635333,45637381,45639429,45641477,45643525,45645498,45647546,45649594,45651642,45653690,45655738,45657786,45659834,45661882,45663930,45665978,45668026,45670074,45672122,45674106,45676154,45678202,45680250,45682298,45684346,45686394,45688442,45690490,45692538,45694515,45696563,45698611,45700659,45702707,45704755,45706803,45708851,45710899,45712947,45714995,45716973,45719021,45721069,45723117,45725165,45727140,45729188,45731236,45733284,45735337,45737341,45739320,45741368,45743349,45745363,45747406,45749384,45751432,45753480,45755528,45757576,45759552,45761600,45763648,45765696,45767744,45769725,45771700,45773675,45775723,45777771,45779819,45781867,45783915,45785963,45788011,45790059,45792107,45794155,45796203,45798251,45800299,45802347,45804395,45806443,45808491,45810472,45812520,45814568,45816616,45818664,45820712,45822760,45824808,45826856,45828904,45830952,45833000,45835048,45837096,45839144,45841192,45843240,45845288,45847336,45849313,45851361,45853334,45855316,45857364,45859339,45861387,45863375,45865423,45867445,45869481,45871529,45873514,45875562,45877547,45879595,45881580,45883628,45885605,45887653,45889633,45891681,45893729,45895777,45897825,45899873,45901921,45903969,45906017,45908065,45910113,45912161,45914209,45916257,45918305,45920353,45922401,45924449,45926427,45928475,45930523,45932571,45934619,45936667,45938715,45940763,45942811,45944859,45946907,45948955,45951003,45953051,45955099,45957147,45959195,45961243,45963215,45965263,45967311,45969291,45971339,45973387,45975435,45977413,45979461,45981509,45983557,45985605,45987583,45989631,45991679,45993727,45995775,45997749,45999797,46001845,46003893,46005941,46007989,46010037,46012085,46014133,46016189,46018237,46020285,46022261,46024309,46026357,46028405,46030453,46032501,46034549,46036522,46038570,46040618,46042666,46044714,46046762,46048810,46050783,46052831,46054879,46056927,46058975,46061023,46063071,46065119,46067167,46069215,46071263,46073311,46075359,46077407,46079455,46081503,46083551,46085529,46087577,46089625,46091673,46093721,46095769,46097817,46099865,46101913,46103961,46106009,46108057,46110105,46112153,46114201,46116249,46118297,46120345,46122322,46124370,46126418,46128466,46130514,46132562,46134610,46136658,46138706,46140754,46142802,46144850,46146898,46148946,46150994,46153042,46155090,46157145,46159201,46161257,46163303,46165323,46167141,46169189,46171237,46173285,46175333,46177381,46179429,46181477,46183525,46185573,46187621,46189669,46191717,46193765,46195813,46197861,46199915,46201970,46204021,46206027,46208050,46210030,46211854,46213724,46215772,46217820,46219868,46221916,46223964,46226012,46228060,46230108,46232156,46234204,46236252,46238300,46240348,46242396,46244444,46246492,46248540,46250588,46252636,46254684,46256732,46258714,46260762,46262810,46264858,46266906,46268954,46271002,46273050,46275098,46277146,46279194,46281242,46283290,46285338,46287386,46289434,46291482,46293530,46295578,46297626,46299674,46301722,46303770,46305737,46307785,46309833,46311881,46313929,46315977,46318025,46320073,46322121,46324169,46326217,46328265,46330313,46332361,46334409,46336457,46338513,46340561,46342544,46344592,46346640,46348688,46350736,46352784,46354832,46356880,46358928,46360976,46363024,46365072,46367120,46369168,46371216,46373264,46375312,46377360,46379408,46381300,46383348,46385396,46387444,46389492,46391540,46393588,46395636,46397684,46399732,46401780,46403828,46405876,46407924,46409972,46412020,46414068,46416116,46418094,46420142,46422190,46424238,46426286,46428334,46430382,46432430,46434478,46436526,46438574,46440622,46442670,46444718,46446766,46448814,46450862,46452852,46454900,46456948,46458996,46461044,46463092,46465140,46467039,46469087,46471135,46473113,46475161,46477209,46479257,46481305,46483353,46485401,46487449,46489497,46491545,46493519,46495567,46497615,46499663,46501711,46503759,46505807,46507855,46509903,46511951,46513999,46516047,46518095,46520143,46522191,46524239,46526287,46528335,46530383,46532431,46534479,46536527,46538575,46540623,46542671,46544719,46546767,46548815,46550863,46552911,46554959,46557007,46558989,46561037,46563085,46565133,46567181,46569229,46571277,46573325,46575373,46577421,46579469,46581517,46583565,46585613,46587661,46589709,46591757,46593805,46595853,46597901,46599949,46601997,46604045,46606093,46608141,46610189,46612237,46614285,46616333,46618381,46620429,46622477,46624525,46626501,46628549,46630597,46632645,46634693,46636741,46638789,46640837,46642814,46644862,46646910,46648958,46651006,46653054,46655102,46657150,46659198,46661170,46663218,46665275,46667245,46669293,46671341,46673312,46675360,46677408,46679456,46681504,46683552,46685600,46687648,46689696,46691744,46693792,46695840,46697888,46699867,46701915,46703963,46706011,46708059,46710107,46712155,46714203,46716251,46718299,46720347,46722395,46724443,46726491,46728468,46730516,46732564,46734612,46736660,46738708,46740756,46742804,46744852,46746900,46748948,46750927,46752975,46755023,46757071,46759119,46761167,46763215,46765263,46767311,46769359,46771407,46773383,46775360,46777408,46779456,46781429,46783477,46785525,46787509,46789550,46791528,46793576,46795492,46797540,46799525,46801573,46803621,46805596,46807644,46809617,46811665,46813637,46815685,46817733,46819781,46821829,46823877,46825925,46827973,46830021,46832069,46834117,46836165,46838213,46840261,46842309,46844357,46846405,46848453,46850501,46852549,46854597,46856645,46858693,46860741,46862789,46864837,46866811,46868859,46870907,46872955,46875003,46877051,46879099,46881147,46883195,46885243,46887291,46889339,46891387,46893435,46895483,46897531,46899579,46901627,46903675,46905723,46907771,46909819,46911867,46913915,46915963,46918011,46919988,46922036,46924084,46926132,46928180,46930228,46932276,46934250,46936298,46938346,46940394,46942442,46944490,46946538,46948526,46950508,46952556,46954534,46956582,46958630,46960678,46962726,46964707,46966755,46968803,46970851,46972899,46974947,46976924,46978972,46981020,46983068,46985116,46987164,46989212,46991260,46993308,46995356,46997404,46999452,47001500,47003548,47005596,47007649,47009649,47011697,47013745,47015793,47017841,47019889,47021937,47023985,47026033,47028081,47030129,47032177,47034225,47036273,47038321,47040302,47042350,47044398,47046362,47048410,47050458,47052426,47054474,47056522,47058570,47060618,47062666,47064714,47066762,47068810,47070858,47072906,47074954,47077002,47079050,47081098,47083146,47085194,47087242,47089290,47091347,47093399,47095453,47097506,47099455,47101177,47103225,47105273,47107321,47109369,47111417,47113465,47115513,47117561,47119609,47121666,47123714,47125762,47127810,47129858,47131906,47133954,47136002,47138050,47140098,47142154,47144202,47146257,47148295,47150168,47152076,47154124,47156172,47158220,47160268,47162316,47164364,47166412,47168460,47170508,47172556,47174604,47176652,47178700,47180748,47182796,47184844,47186892,47188940,47190988,47193036,47195076,47196929,47198977,47201025,47203073,47205121,47207169,47209217,47211265,47213313,47215361,47217409,47219457,47221505,47223553,47225601,47227649,47229697,47231745,47233802,47235850,47237898,47239953,47241869,47243787,47245835,47247883,47249931,47251979,47254027,47256033,47258078,47260049,47262022,47264070,47266118,47268166,47270214,47272262,47274310,47276358,47278337,47280385,47282433,47284481,47286529,47288577,47290625,47292673,47294721,47296704,47298752,47300800,47302848,47304896,47306944,47308920,47310968,47313016,47315064,47317112,47319160,47321127,47323175,47325223,47327271,47329319,47331367,47333415,47335463,47337511,47339559,47341607,47343655,47345703,47347751,47349799,47351847,47353895,47355943,47358000,47360048,47362096,47364144,47366192,47368226,47370189,47372237,47374285,47376333,47378381,47380429,47382477,47384525,47386573,47388621,47390669,47392717,47394765,47396813,47398861,47400909,47402957,47405005,47407053,47409101,47411149,47413197,47415253,47417186,47419234,47421282,47423330,47425378,47427426,47429474,47431522,47433570,47435618,47437666,47439714,47441762,47443810,47445858,47447906,47449954,47452010,47454058,47456106,47458154,47460208,47462254,47464174,47466142,47468190,47470238,47472286,47474334,47476382,47478430,47480478,47482526,47484574,47486622,47488670,47490718,47492766,47494814,47496862,47498910,47500958,47503006,47505054,47507110,47509167,47511182,47513033,47515081,47517059,47519107,47521085,47523133,47525105,47527084,47529132,47531180,47533228,47535276,47537332,47539380,47541273,47543321,47545369,47547417,47549465,47551513,47553561,47555494,47557542,47559590,47561638,47563686,47565734,47567782,47569830,47571878,47573926,47575905,47577953,47580001,47582049,47584097,47586145,47588193,47590241,47592289,47594337,47596318,47598366,47600337,47602233,47604281,47606258,47608306,47610194,47612167,47614215,47616263,47618311,47620359,47622407,47624455,47626503,47628551,47630599,47632647,47634695,47636743,47638791,47640839,47642887,47644935,47646913,47648961,47651009,47653057,47655105,47657153,47659201,47661249,47663297,47665345,47667393,47669441,47671489,47673537,47675585,47677633,47679681,47681729,47683706,47685754,47687802,47689850,47691898,47693946,47695994,47698042,47700090,47702138,47704186,47706234,47708282,47710330,47712378,47714400,47716432,47718480,47720528,47722576,47724624,47726672,47728720,47730768,47732816,47734864,47736912,47738960,47741008,47743056,47745104,47747083,47749131,47751179,47753227,47755275,47757323,47759296,47761344,47763392,47765440,47767421,47769469,47771517,47773565,47775613,47777661,47779709,47781757,47783805,47785853,47787901,47789949,47791997,47794045,47796093,47798141,47800189,47802237,47804285,47806333,47808309,47810357,47812405,47814453,47816501,47818549,47820597,47822645,47824693,47826741,47828789,47830837,47832885,47834933,47836981,47839029,47841077,47843125,47845173,47847221,47849194,47851242,47853290,47855338,47857386,47859363,47861411,47863459,47865507,47867555,47869603,47871584,47873632,47875680,47877728,47879776,47881824,47883872,47885920,47887968,47890016,47892064,47894112,47896160,47898208,47900256,47902304,47904352,47906400,47908377,47910425,47912473,47914521,47916569,47918617,47920665,47922713,47924761,47926809,47928857,47930905,47932953,47935001,47937049,47939097,47941145,47943130,47945178,47947226,47949274,47951322,47953370,47955418,47957466,47959514,47961490,47963538,47965586,47967634,47969682,47971730,47973778,47975826,47977874,47979847,47981895,47983943,47985991,47988039,47990087,47992135,47994183,47996231,47998279,48000327,48002375,48004423,48006471,48008519,48010567,48012545,48014593,48016641,48018689,48020737,48022785,48024833,48026881,48028929,48030977,48033025,48035073,48037121,48039169,48041217,48043265,48045313,48047289,48049337,48051234,48053282,48055330,48057378,48059322,48061370,48063418,48065466,48067435,48069417,48071402,48073450,48075425,48077227,48079201,48081178,48083226,48085200,48087248,48089296,48091344,48093392,48095440,48097488,48099536,48101584,48103579,48105536,48107235,48109283,48111331,48113379,48115427,48117475,48119523,48121571,48123619,48125667,48127714,48129732,48131577,48133625,48135673,48137721,48139769,48141817,48143865,48145913,48147961,48150009,48151984,48154032,48156080,48158128,48160176,48162224,48164272,48166320,48168368,48170416,48172393,48174441,48176489,48178537,48180585,48182560,48184608,48186656,48188704,48190752,48192727,48194775,48196823,48198871,48200919,48202969,48204840,48206888,48208936,48210984,48213032,48215088,48217114,48218939,48220995,48223043,48225091,48227139,48229187,48231235,48233283,48235331,48237379,48239427,48241475,48243523,48245571,48247619,48249667,48251715,48253763,48255811,48257859,48259907,48261955,48264003,48266051,48268099,48270147,48272195,48274105,48276134,48278182,48280230,48282278,48284326,48286374,48288422,48290470,48292518,48294566,48296614,48298662,48300710,48302758,48304806,48306854,48308902,48310950,48312998,48315046,48317094,48319142,48321190,48323238,48325286,48327334,48329382,48330395,48331429,48333070,48334484,48336233,48337533,48338558,48339668,48341044,48342467,48343917,48345388,48347087,48348959,48350843,48352738,48354711,48356495,48358384,48360432,48362480,48364528,48366576,48368624,48370672,48372720,48374768,48376816,48378864,48380912,48382960,48385008,48387056,48389104,48391152,48393200,48395248,48397296,48399271,48401319,48403367,48405415,48407463,48409511,48411559,48413607,48415655,48417703,48419751,48421799,48423847,48425895,48427943,48429991,48432039,48434087,48436135,48438116,48440164,48442212,48444260,48446308,48448356,48450404,48452452,48454500,48456548,48458596,48460644,48462692,48464740,48466788,48468836,48470884,48472932,48474980,48477028,48479005,48481053,48483101,48485149,48487197,48489245,48491293,48493341,48495389,48497437,48499485,48501533,48503581,48505629,48507677,48509725,48511773,48513821,48515869,48517848,48519896,48521944,48523992,48526040,48528088,48530136,48532184,48534232,48536280,48538328,48540376,48542424,48544472,48546520,48548568,48550616,48552664,48554712,48556760,48558737,48560785,48562833,48564881,48566929,48568977,48571025,48573073,48575121,48577169,48579217,48581265,48583313,48585361,48587409,48589457,48591505,48593553,48595601,48597649,48599622,48601670,48603718,48605766,48607814,48609862,48611910,48613958,48616006,48618054,48620102,48622150,48624198,48626246,48628294,48630342,48632390,48634438,48636486,48638462,48640510,48642558,48644606,48646654,48648702,48650750,48652798,48654846,48656894,48658942,48660990,48663038,48665086,48667134,48669182,48671230,48673278,48675326,48677374,48679349,48681397,48683445,48685425,48687473,48689450,48691498,48693027,48694353,48695863,48697492,48698678,48699948,48701537,48702913,48703828,48704628,48705516,48706323,48707206,48707992,48709935,48711983,48712323,48712348,48712373,48714031,48716079,48717578,48717603,48717628,48718538,48719697,48721089,48721941,48723989,48725938,48727879,48729927,48731975,48734023,48736071,48738119,48740048,48742096,48744144,48746148,48748196,48750244,48752243,48754291,48756339,48758387,48760435,48762483,48764531,48766537,48768477,48770429,48772379,48774342,48776301,48778306,48780309,48782320,48784368,48786416,48788464,48790512,48792560,48794457,48796336,48798384,48800432,48802480,48804528,48806530,48808578,48810447,48812495,48814543,48816581,48818626,48820674,48822617,48824665,48826713,48828761,48830809,48832857,48834905,48836961,48838962,48841010,48843058,48845106,48847154,48849202,48851250,48853250,48855298,48857308,48859356,48861228,48863276,48865324,48867372,48869420,48871468,48873516,48875518,48877566,48879614,48881662,48883710,48885720,48887776,48889653,48891701,48893749,48895750,48897641,48899578,48901589,48903597,48905522,48907465,48909439,48911487,48913535,48915583,48917631,48919679,48921727,48923775,48925823,48927804,48929852,48931900,48933899,48935865,48937913,48939918,48941898,48943846,48945788,48947731,48949650,48951578,48953519,48955567,48957615,48959618,48961666,48963714,48965762,48967766,48969814,48971796,48973851,48975899,48977947,48979995,48982043,48984091,48986139,48988187,48990235,48992283,48994331,48996379,48998385,49000433,49002481,49004529,49006577,49008625,49010627,49012675,49014723,49016771,49018819,49020867,49022915,49024868,49026916,49028964,49031012,49033060,49035108,49037156,49039204,49041166,49043173,49045221,49047086,49049134,49051182,49053230,49055278,49057326,49059374,49061422,49063470,49065462,49067510,49069558,49071526,49073574,49075622,49077631,49079635,49081683,49083731,49085779,49087827,49089875,49091923,49093929,49095977,49098025,49100073,49102121,49104169,49106217,49108265,49110313,49112361,49114409,49116457,49118505,49120553,49122601,49124649,49126697,49128745,49130750,49132698,49134617,49136665,49138586,49140593,49142641,49144520,49146568,49148438,49150486,49152534,49154582,49156630,49158637,49160685,49162733,49164781,49166829,49168877,49170888,49172763,49174706,49176706,49178754,49180754,49182596,49184431,49186479,49188527,49190575,49192623,49194671,49196612,49198561,49200609,49202479,49204527,49206575,49208623,49210671,49212719,49214767,49216815,49218863,49220864,49222912,49224960,49227008,49229056,49231104,49233152,49235200,49237248,49239296,49241344,49243392,49245395,49247443,49249491,49251539,49253587,49255635,49257575,49259623,49261671,49263527,49265415,49267005,49269053,49271101,49273149,49275197,49277126,49279174,49281222,49283270,49285212,49287260,49289308,49291248,49293296,49295259,49297307,49299171,49301219,49303159,49305207,49307255,49309002,49311050,49312927,49314975,49317023,49319071,49321119,49323167,49325215,49327178,49329226,49331274,49333322,49335370,49337418,49339466,49341514,49343515,49345563,49347611,49349659,49351707,49353755,49355709,49357757,49359805,49361853,49363901,49365775,49367823,49369871,49371840,49373888,49375794,49377842,49379731,49381779,49383718,49385766,49387773,49389821,49391869,49393917,49395965,49398013,49400061,49402064,49404112,49406115,49408163,49410211,49412259,49414307,49416314,49418362,49420410,49422458,49424506,49426554,49428498,49430546,49432594,49434552,49436600,49438474,49440522,49442570,49444618,49446666,49448670,49450718,49452766,49454814,49456815,49458863,49460911,49462826,49464874,49466831,49468879,49470815,49472757,49474684,49476617,49478665,49480628,49482676,49484724,49486772,49488564,49490570,49492573,49494567,49496615,49498663,49500711,49502759,49504807,49506752,49508800,49510677,49512624,49514509,49516456,49518504,49520552,49522600,49524648,49526696,49528644,49530692,49532702,49534750,49536692,49538599,49540418,49542414,49544462,49546510,49548558,49550606,49552654,49554657,49556537,49558585,49560633,49562681,49564686,49566734,49568782,49570830,49572789,49574837,49576765,49578737,49580785,49582833,49584881,49586885,49588933,49590981,49593029,49595028,49597076,49599124,49601126,49603174,49605222,49607270,49609318,49611325,49613373,49615421,49617469,49619468,49621516,49623564,49625612,49627483,49629531,49631579,49633627,49635675,49637723,49639722,49641770,49643818,49645866,49647866,49649914,49651855,49653903,49655693,49657733,49659738,49661786,49663834,49665593,49667641,49669689,49671737,49673737,49675785,49677833,49679837,49681885,49683880,49685928,49687976,49690024,49692072,49694120,49696168,49698216,49700264,49702266,49704314,49706362,49708410,49710458,49712432,49714480,49716528,49718472,49720520,49722568,49724616,49726664,49728712,49730583,49732631,49734653,49736416,49738361,49740409,49742457,49744505,49746553,49748601,49749890,49751669,49753717,49755765,49757813,49759816,49761864,49763912,49765960,49767959,49770007,49771797,49773845,49775893,49777892,49779752,49781800,49783675,49785723,49787594,49789642,49791690,49793738,49795566,49797584,49799632,49801680,49803728,49805776,49807726,49809774,49811822,49813772,49815820,49817868,49819833,49821772,49823820,49825784,49827841,49829889,49831937,49833891,49835834,49837763,49839811,49841859,49843907,49845955,49848003,49850051,49852069,49854117,49856165,49858213,49860261,49862259,49864307,49866355,49868403,49870402,49872450,49874498,49875709,49877757,49879805,49881853,49883901,49885905,49887953,49890001,49892049,49894050,49896098,49898146,49900194,49902242,49904290,49906299,49908347,49910395,49912443,49914499,49916547,49918595,49920601,49922649,49924697,49926745,49928793,49930795,49932843,49934891,49936939,49938888,49940936,49942984,49945032,49947080,49949084,49951132,49953180,49955228,49957228,49959276,49961227,49963275,49965323,49967371,49969419,49971467,49973153,49975025,49977073,49979012,49981050,49983087,49985086,49987008,49989056,49991104,49993152,49995200,49997076,49999124,50001172,50003220,50005268,50007316,50009364,50011412,50013460,50015508,50017556,50019604,50021652,50023700,50025748,50027796,50029844,50031725,50033773,50035821,50037691,50039748,50041796,50043844,50045717,50047765,50049813,50051861,50053909,50055957,50058005,50060053,50061925,50063801,50065673,50067721,50069591,50071144,50073192,50075193,50077200,50079248,50081296,50083245,50085293,50087286,50089334,50091332,50093380,50095246,50097294,50099293,50101247,50103240,50105288,50107232,50109234,50111282,50113282,50115330,50117378,50119426,50121368,50123416,50125464,50127467,50129515,50131563,50133611,50135596,50137644,50139697,50141621,50143579,50145627,50147675,50149723,50151771,50153772,50155820,50157868,50159916,50161917,50163965,50166013,50167954,50170002,50172050,50174003,50176051,50177992,50179994,50182042,50184090,50186032,50188080,50190128,50192125,50194079,50196127,50198061,50200067,50202115,50204163,50206160,50208122,50210073,50212121,50214169,50216043,50218091,50220139,50222007,50224055,50226103,50228151,50230199,50232247,50234295,50236343,50238391,50240400,50242448,50244496,50246544,50248592,50250592,50252640,50254688,50256736,50258738,50260786,50262724,50264772,50266820,50268868,50270916,50272915,50274869,50276834,50278792,50280802,50282800,50284618,50286666,50288714,50290762,50292810,50294858,50296906,50298954,50301002,50303050,50305098,50307146,50309194,50311242,50313290,50315297,50317345,50319353,50321303,50323351,50325399,50327447,50329495,50331543,50333591,50335542,50337590,50339638,50341686,50343734,50345782,50347830,50349830,50351878,50353926,50355974,50357974,50360022,50362070,50364118,50366166,50368214,50370262,50372310,50374358,50376406,50378454,50380502,50382550,50384553,50386601,50388649,50390697,50392745,50394793,50396841,50398889,50400937,50402985,50405033,50407081,50409129,50411134,50413182,50415230,50417278,50419326,50421374,50423422,50425470,50427518,50429566,50431614,50433614,50435662,50437710,50439758,50441806,50443854,50445902,50447950,50449998,50452046,50454042,50456090,50458138,50460186,50462234,50464282,50466330,50468378,50470426,50472474,50474477,50476525,50478573,50480621,50482669,50484717,50486765,50488768,50490816,50492864,50494912,50496960,50499008,50501056,50503104,50505105,50507153,50509201,50511249,50513297,50515345,50517393,50519399,50521447,50523495,50525543,50527591,50529639,50531646,50533694,50535742,50537790,50539838,50541797,50543768,50545775,50547777,50549825,50551873,50553921,50555793,50557734,50559782,50561748,50563796,50565844,50567892,50569899,50571947,50573995,50576043,50578091,50580139,50582122,50584170,50586218,50588266,50590314,50592362,50594302,50596350,50598398,50600446,50602494,50604498,50606546,50608506,50610554,50612565,50614613,50616661,50618662,50620710,50622758,50624761,50626809,50628857,50630866,50632914,50634962,50637010,50638884,50640932,50642980,50645028,50647076,50649124,50651172,50653220,50655224,50657272,50659320,50661368,50663416,50665464,50667512,50669560,50671608,50673612,50675619,50677622,50679670,50681613,50683661,50685709,50687648,50689696,50691744,50693340,50695388,50697389,50699437,50701485,50703533,50705581,50707629,50709677,50711725,50713773,50715821,50717869,50719917,50721965,50724013,50726061,50728064,50730112,50732160,50734208,50736256,50738304,50740352,50742400,50744448,50746496,50748498,50750546,50752594,50754642,50756690,50758738,50760786,50762834,50764882,50766930,50768294,50769815,50771863,50773834,50775882,50777652,50779700,50781748,50783796,50785844,50787892,50789940,50791914,50793962,50796010,50798058,50800106,50802154,50804202,50806201,50808249,50810297,50812345,50814393,50816441,50818489,50820527,50822569,50824617,50826665,50828713,50830761,50832767,50834815,50836863,50838911,50840959,50843007,50845011,50847059,50849107,50851155,50853159,50855099,50857147,50859195,50861243,50863291,50865339,50867387,50869435,50871483,50873487,50875535,50877583,50879631,50881679,50883727,50885728,50887776,50889824,50891796,50893844,50895892,50897940,50899988,50902036,50904084,50905954,50908002,50910050,50912098,50914146,50916194,50918054,50920102,50922150,50924198,50926246,50928294,50930342,50932390,50934438,50936309,50938357,50940405,50942453,50944328,50946376,50948424,50950472,50952520,50954568,50956616,50958664,50960712,50962760,50964808,50966856,50968904,50970952,50972717,50974765,50976813,50978861,50980909,50982957,50984961,50987009,50989057,50991105,50993153,50995158,50997206,50999254,51001302,51003350,51005349,51007296,51009239,51011287,51013335,51015215,51017263,51019311,51021359,51023407,51025387,51027261,51028825,51030873,51032921,51034969,51036843,51038891,51040939,51042987,51045035,51047083,51049131,51051179,51053184,51055153,51057201,51059204,51061055,51063040,51065088,51067136,51069008,51071056,51073104,51075152,51077200,51079248,51081296,51083300,51085348,51087396,51089444,51091492,51093540,51095541,51097589,51099462,51101510,51103512,51105560,51107434,51109482,51111530,51113578,51115626,51117674,51119722,51121770,51123818,51125866,51127914,51129962,51131965,51134013,51136061,51138109,51140157,51142205,51144253,51146301,51148349,51150353,51152401,51154449,51156497,51158545,51160593,51162641,51164642,51166552,51168597,51170469,51172517,51174565,51176613,51178661,51180709,51182715,51184763,51186811,51188859,51190915,51192963,51195011,51197059,51199060,51201108,51203156,51205204,51207252,51209300,51211348,51213356,51215404,51217452,51219500,51221548,51223596,51225644,51227649,51229697,51231745,51233793,51235841,51237889,51239937,51241938,51243986,51245995,51248043,51250091,51252139,51254187,51256235,51258283,51260331,51262379,51264427,51266475,51268480,51270528,51272576,51274624,51276672,51278720,51280768,51282816,51284864,51286912,51288960,51290969,51293017,51295065,51297113,51299161,51301209,51303257,51305305,51307353,51309362,51311410,51313458,51315506,51317554,51319602,51321650,51323698,51325746,51327794,51329842,51331890,51333938,51335986,51338034,51340033,51342081,51344129,51346177,51348225,51350273,51352270,51354318,51356366,51358414,51360421,51362387,51364257,51366136,51368184,51370232,51372179,51374227,51376275,51378323,51380371,51382419,51384467,51386515,51388563,51390611,51392612,51394660,51396708,51398756,51400804,51402852,51404860,51406908,51408956,51411004,51412967,51415015,51417063,51419111,51421159,51423207,51425206,51427254,51429302,51431252,51433300,51435348,51437309,51439357,51441405,51443453,51445501,51447549,51449597,51451645,51453693,51455741,51457741,51459789,51461837,51463885,51465933,51467981,51470029,51472077,51474125,51476132,51478180,51480228,51482276,51484324,51486372,51488420,51490468,51492516,51494564,51496612,51498660,51500661,51502709,51504757,51506805,51508853,51510901,51512949,51514952,51517000,51518960,51521008,51523056,51525104,51527134,51529187,51531065,51533113,51535161,51537209,51539257,51541305,51543353,51545401,51547449,51549497,51551545,51553593,51555641,51557689,51559746,51561794,51563849,51565789,51567837,51569893,51571941,51573940,51575988,51577993,51579944,51582000,51584048,51586096,51588144,51590192,51592248,51594296,51596344,51598314,51600362,51602410,51604020,51606068,51608116,51610090,51612138,51614186,51616234,51618282,51620330,51622378,51624426,51626474,51628446,51630494,51632542,51634590,51636638,51638686,51640572,51642220,51644268,51646275,51648225,51650273,51652321,51654369,51656417,51658465,51660440,51662442,51664490,51666452,51668482,51670481,51672529,51674577,51676517,51678565,51680613,51682661,51684580,51686628,51688676,51690724,51692772,51694764,51696812,51698810,51700858,51702906,51704794,51706420,51708468,51710469,51712517,51714565,51716613,51718600,51720648,51722696,51724744,51726792,51728784,51730832,51732880,51734928,51736901,51738949,51740997,51743045,51745093,51747141,51748968,51751016,51753064,51755112,51757160,51759208,51761256,51763304,51765352,51767400,51769456,51771504,51773495,51775543,51777591,51779577,51781625,51783623,51785671,51787719,51789767,51791815,51793863,51795911,51797959,51800007,51802055,51804103,51806151,51808199,51810247,51812295,51814343,51816391,51818439,51820487,51822535,51824538,51826586,51828634,51830682,51832730,51834778,51836826,51838874,51840922,51842970,51845018,51847066,51849114,51851162,51853210,51855258,51857306,51859354,51861402,51863450,51865498,51867546,51869594,51871642,51873690,51875738,51877737,51879785,51881833,51883881,51885929,51887977,51890025,51892073,51894080,51896128,51898176,51900224,51902272,51904320,51906368,51908416,51910464,51912517,51914541,51916589,51918637,51920685,51922733,51924781,51926829,51928877,51930925,51932973,51935021,51937069,51939117,51941165,51943213,51945261,51947309,51949357,51951405,51953453,51955501,51957549,51959549,51961597,51963645,51965693,51967689,51969737,51971736,51973784,51975832,51977829,51979877,51981925,51983968,51985808,51987856,51989904,51991792,51993840,51995888,51997682,51999555,52001603,52003651,52005699,52007755,52009807,52011800,52013848,52015896,52017944,52019992,52021987,52024035,52026083,52028131,52030179,52032235,52034283,52036331,52038330,52040378,52042426,52044474,52046522,52048579,52050627,52052675,52054731,52056729,52058777,52060825,52062873,52064921,52066920,52068968,52070974,52073022,52075070,52077064,52079064,52081112,52083160,52085198,52087160,52089208,52091256,52093304,52095352,52097400,52099402,52101450,52103361,52105409,52107405,52109453,52111501,52113557,52115559,52117607,52119655,52121642,52123690,52125680,52127728,52129727,52131775,52133823,52135871,52137919,52139967,52141974,52144022,52146070,52148118,52150166,52152214,52154262,52156310,52158358,52160406,52162454,52164452,52166500,52168556,52170490,52172538,52174586,52176634,52178682,52180730,52182726,52184774,52186822,52188870,52190870,52192918,52194966,52197014,52199062,52201110,52203158,52205206,52207254,52209302,52211350,52213398,52215446,52217494,52219542,52221558,52223606,52225654,52227702,52229697,52231745,52233793,52235841,52237889,52239937,52241985,52244033,52246081,52248129,52250177,52252225,52254273,52256321,52258369,52260317,52262365,52264413,52266461,52268509,52270557,52272605,52274653,52276701,52278705,52280753,52282801,52284849,52286897,52288888,52290936,52292984,52295032,52297080,52299128,52301176,52303224,52305272,52307262,52309310,52311358,52313406,52315454,52317502,52319550,52321549,52323597,52325645,52327693,52329663,52331663,52333711,52335759,52337807,52339855,52341903,52343951,52345999,52348047,52350095,52352143,52354191,52356239,52358287,52360335,52362383,52364431,52366431,52368479,52370527,52372575,52374623,52376671,52378719,52380767,52382768,52384816,52386864,52388912,52390960,52393008,52395056,52397104,52399143,52401106,52403154,52405202,52407250,52409298,52411346,52413394,52415399,52417447,52419495,52421543,52423591,52425639,52427687,52429735,52431783,52433779,52435827,52437875,52439923,52441971,52444019,52446067,52448115,52450163,52452211,52454259,52456260,52458308,52460365,52462413,52464461,52466509,52468557,52470605,52472653,52474701,52476749,52478797,52480845,52482893,52484941,52486989,52488984,52491032,52493080,52495128,52497176,52499224,52501272,52503320,52505368,52507416,52509464,52511520,52513502,52515402,52517450,52519498,52521493,52523541,52525589,52527637,52529685,52531733,52533781,52535829,52537877,52539925,52541973,52544021,52546069,52548117,52550165,52552213,52554261,52556256,52558304,52560352,52562400,52564448,52566496,52568544,52570545,52572593,52574641,52576679,52578717,52580765,52582759,52584807,52586855,52588847,52590895,52592943,52594991,52597039,52599087,52601081,52603129,52605177,52607225,52609273,52611268,52613316,52615364,52617412,52619460,52621508,52623556,52625604,52627652,52629700,52631748,52633796,52635844,52637892,52639940,52641988,52644036,52646043,52648091,52650139,52652187,52654235,52656283,52658331,52660379,52662427,52664475,52666523,52668571,52670619,52672667,52674715,52676763,52678367,52679392,52680493,52681666,52682805,52684803,52685542,52686263,52687501,52689549,52691597,52692663,52692697,52692731,52692765,52692799,52692833,52692872,52693405,52693758,52694253,52694798,52695420,52696102,52696740,52697251,52697861,52698409,52699008,52699519,52700169,52700813,52701381,52702058,52702709,52703429,52704205,52705029,52705804,52706581,52707266,52708396,52709445,52710378,52711295,52712217,52713166,52714133,52715072,52716069,52717062,52718039,52718994,52719796,52720771,52722105,52723270,52724618,52725763,52727101,52728261,52729409,52730583,52731726,52732933,52734073,52735238,52736383,52737537,52738629,52739580,52740870,52742316,52743591,52744411,52745147,52745923,52746859,52748144,52749396,52750729,52751789,52752124,52752216,52752308,52752418,52752641,52752689,52752809,52752857,52752905,52752953,52753001,52753123,52753172,52753366,52753546,52753593,52753640,52753742,52753789,52753836,52753883,52753987,52754030,52754071,52754118,52754165,52754288,52754332,52754376,52754561,52754611,52754660,52754705,52754749,52754791,52754900,52754947,52755072,52755120,52755168,52755216,52755326,52755372,52755418,52755465,52755566,52755613,52755658,52755703,52755748,52755793,52755891,52755936,52755981,52756026,52756067,52756106,52756228,52756278,52756328,52756440,52756482,52756602,52756655,52756705,52756754,52756800,52756898,52756942,52756988,52757034,52757143,52757189,52757235,52757281,52757327,52757373,52757490,52757537,52757584,52757680,52757725,52757770,52757815,52757912,52757957,52758111,52758999,52760195,52760511,52760558,52761263,52762416,52762862,52762906,52763479,52764620,52765213,52765549,52766765,52767986,52768777,52769612,52770530],\"sizes\":[2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1303,1255,1070,979,1610,1108,1477,1597,1100,1002,775,942,953,941,1018,752,912,981,946,956,861,951,807,893,947,836,794,893,808,1261,899,975,919,1133,1126,1023,1286,1073,876,1042,1284,1299,1254,1408,573,509,578,630,589,597,995,924,842,834,523,563,740,681,650,1164,789,655,637,757,671,848,847,846,972,625,633,500,570,593,735,690,877,709,713,842,910,1179,759,907,956,907,839,841,860,855,667,904,952,972,838,619,359,557,877,958,373,645,954,656,683,556,617,649,888,913,750,657,710,571,1772,1723,1439,1481,1469,1506,1530,1531,1509,1522,1501,1594,1741,1824,1948,1982,2001,1999,2001,2002,2026,1994,1927,1804,1790,1859,1937,1857,1974,2009,1942,1851,1850,1794,1743,1734,1746,1809,1814,1891,1952,1957,2014,1996,2003,1893,1682,1528,1500,1507,1517,1515,1525,1483,1494,1456,1422,1442,1717,1856,1272,1273,1263,1266,1295,1292,1380,1303,1223,1303,1253,1217,1391,1381,1465,1410,1430,1416,1408,1516,1548,1479,1521,1518,1565,1629,1647,1574,1613,1579,1592,1537,1518,1506,1688,1692,1543,1732,1642,1364,1352,1373,1305,1261,1243,1284,1238,1182,1177,1214,1173,1178,1200,1221,1313,1252,1448,1992,1044,1115,1179,1131,1027,931,1061,1126,1118,1187,1105,1247,1198,1366,1422,1504,1539,1617,1555,1552,1622,1473,1391,1531,1584,1523,1573,1522,1357,1467,1292,1334,1394,1243,1316,1454,1482,1530,1501,1474,1437,1286,1190,1071,1028,1032,1061,1131,1183,1068,840,1033,1079,884,942,969,1054,2041,1538,1567,1590,1592,1595,1613,1685,1593,1594,1611,1687,1671,1429,1542,1599,1536,1607,1749,1648,1508,1640,1524,1458,1461,1530,1643,1486,1493,1520,1581,1557,1547,1538,1609,1564,1637,1660,1682,1611,1535,1576,1685,1562,1507,1285,1232,1564,1523,1500,1389,1595,1627,1687,1736,1587,1487,1575,1952,1472,961,1099,957,1109,1151,1038,1179,998,1040,1136,1112,1188,1080,1096,1113,1168,1192,1209,1218,1259,1258,1340,1299,1178,1182,1062,1069,1014,991,1022,1047,1063,911,930,946,928,1010,1017,1049,1027,1017,1046,1005,905,1040,953,1052,1041,1097,1145,1102,1122,1075,993,962,864,1459,1848,1260,1286,1291,1279,1289,1291,1366,1311,1231,1310,1243,1144,1264,1304,1375,1310,1327,1314,1366,1475,1633,1629,1590,1400,1324,1416,1554,1548,1754,1678,1625,1439,1273,1367,1433,1487,1446,1516,1495,1377,1361,1378,1297,1253,1248,1274,1256,1179,1175,1221,1179,1173,1207,1218,1322,1250,1452,2022,1565,1608,1590,1619,1602,1530,1555,1620,1554,1564,1621,1715,1735,1836,1814,1752,1511,1688,1617,1762,1877,1824,1762,1884,1838,1812,1882,1843,1746,1812,1696,1710,1776,1663,1653,1777,1642,1868,1868,1734,1384,1367,1382,1266,1363,1525,1497,1470,1531,1555,1514,1510,1590,1468,1425,1480,1492,2047,926,821,776,911,937,746,680,936,814,852,766,809,972,1146,1274,1199,1307,1285,1341,1464,1497,1572,1524,1671,1578,1652,1589,1600,1637,1614,1598,1504,1483,1475,1506,1556,1544,1433,1461,1429,1372,1340,1228,1157,1216,1145,1157,1007,962,1069,1034,979,958,1028,1024,881,770,1691,1862,1855,1874,1882,1846,1790,1831,1857,1804,1736,1621,1549,1384,1775,1975,1877,1809,1907,1846,1878,1901,1923,1849,1695,1643,1575,1424,1683,2025,1723,1823,1891,1910,1875,1779,1744,1542,1450,1527,1576,1609,1649,1935,1650,2008,1875,1747,2013,1737,1865,2033,1521,1298,1630,1532,1452,1796,1776,1350,1486,1624,1509,1479,1977,1478,1369,1677,1556,1549,1793,1939,1686,1691,1701,1771,1751,1755,1726,1780,1831,1815,1862,1881,1734,1764,1781,1798,1846,1823,1801,1862,1840,1775,1771,1754,1769,1782,1738,1756,1815,1720,1756,1755,1838,1778,1770,1758,1748,1711,1695,1738,1764,1727,1705,1651,1740,1856,1899,1837,1883,1790,1855,1918,1861,1783,1698,1656,1708,2048,1935,1916,1906,1951,1902,1900,1899,1925,1883,1855,1915,1911,1806,1800,1748,1763,1753,1833,1811,1801,1798,1823,1830,1839,1816,1762,1734,1693,1580,1556,1664,1741,1810,1759,1742,1736,1687,1728,1706,1726,1767,1765,1812,1753,1778,1916,1887,1959,1841,1792,1847,1906,1904,1925,1893,1911,1846,2048,1975,1940,1985,2019,2000,2008,1987,1953,1929,1910,1988,2003,1980,1941,1886,1923,2012,1954,1977,1979,2011,2020,1931,1924,1927,1892,1927,1829,1702,1768,1801,1912,1918,1928,1959,1973,1977,1982,1931,1909,2003,1935,1817,1840,1863,1854,1859,1812,1801,1799,1858,1827,1718,1688,1586,1504,1447,777,1929,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1527,1461,1343,1536,1504,1577,1425,1447,1317,1197,1332,1509,1396,1181,1284,1440,1553,1398,1475,1430,1389,1338,1475,1473,1447,1482,1486,1494,1471,1493,1530,1524,1579,1473,1572,1520,1569,1515,1496,1421,1584,1568,1437,1432,1381,1626,1672,1646,1635,1591,1538,1607,1688,1596,1523,1636,1523,1925,1473,1069,1113,1091,1114,1002,1034,1094,1080,1162,1139,1130,1215,1326,1366,1485,1510,1578,1581,1523,1638,1572,1401,1406,1591,1585,1517,1551,1406,1431,1386,1320,1316,1370,1245,1416,1440,1526,1517,1496,1499,1331,1240,1154,984,1042,1015,1171,1157,1181,987,875,1031,968,929,967,1021,1555,1711,1072,1125,1143,1103,924,1046,1062,1116,1128,1212,1244,1296,1169,1499,1552,1508,1508,1507,1467,1622,1599,1490,1468,1603,1623,1383,1539,1506,1569,1641,1688,1854,1911,1859,1559,1776,1809,1758,1472,1668,1274,1439,1354,914,1104,1111,1066,1124,1153,1044,883,1042,1014,893,914,1008,1291,2018,1509,1551,1527,1552,1555,1456,1494,1531,1487,1503,1574,1656,1730,1795,1782,1714,1495,1678,1589,1721,1882,1775,1685,1871,1739,1765,1890,1712,1616,1846,1687,1686,1766,1521,1562,1728,1595,1849,1827,1705,1357,1369,1353,1249,1344,1455,1496,1455,1451,1481,1460,1494,1520,1396,1359,1428,1468,2047,1710,1658,1669,1745,1784,1733,1733,1787,1787,1829,1812,1891,1775,1756,1802,1781,1812,1816,1822,1778,1882,1800,1760,1780,1766,1743,1785,1675,1771,1802,1745,1752,1782,1859,1768,1758,1753,1710,1740,1702,1729,1733,1718,1704,1616,1845,1862,1897,1844,1814,1828,1889,1869,1852,1772,1684,1582,885,1812,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1567,1233,1391,1407,1459,1544,1547,1420,1475,1475,1481,1433,1461,1448,1335,1329,606,952,1150,1421,1598,1714,1834,1833,1884,1865,1822,1723,1710,1728,1761,1847,1878,1875,1812,1833,1812,1807,1571,1290,1041,1070,1255,1299,1122,1406,1254,1119,1258,1257,1422,1465,1491,1476,1372,1415,1396,1714,1828,1423,1453,1489,1561,1448,1516,1536,1423,1463,1533,1625,1458,1493,1659,1670,1635,1740,1796,1652,1721,1656,1582,1554,1492,1567,1637,1552,1609,1619,1637,1586,1544,1542,1634,1628,1620,1626,1594,1536,1546,1619,1647,1608,1476,1156,1402,1495,1482,1374,1447,1507,1581,1608,1591,1424,1405,1624,1991,1349,1384,1389,1443,1364,1393,1494,1411,1431,1407,1513,1374,1177,1528,1525,1547,1578,1667,1597,1562,1600,1459,1477,1473,1557,1544,1507,1444,1526,1559,1507,1484,1489,1589,1541,1560,1543,1608,1562,1523,1529,1524,1387,1301,1018,1014,1354,1385,1293,1281,1473,1493,1520,1543,1338,1305,1428,2039,1644,1657,1658,1741,1757,1700,1780,1701,1684,1726,1809,1771,1472,1598,1664,1619,1668,1805,1739,1590,1698,1602,1538,1528,1590,1713,1545,1542,1567,1631,1650,1630,1610,1684,1664,1728,1734,1777,1665,1619,1620,1716,1611,1563,1308,1357,1715,1680,1618,1554,1699,1749,1789,1850,1714,1611,1667,1980,1109,546,596,665,677,706,760,958,1017,1089,904,996,1466,1476,1626,1643,1189,1451,1481,1719,1717,1745,1567,1692,1630,1775,1627,1705,1456,1739,1715,1763,1707,1737,1658,1640,1710,1740,1742,1704,1677,1383,1425,1246,1168,1288,1473,1295,1185,1286,1314,1438,1569,1534,1488,1557,1609,1225,1724,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2015,2021,2047,2055,2054,2048,2053,2050,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2044,2008,2048,2049,2056,2048,2048,2049,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2050,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2041,2013,2032,2046,2057,2048,2048,2049,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2049,2010,2031,2048,2057,2048,2048,2050,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1881,1248,1395,1294,1086,1030,1017,1090,1178,1057,1166,1067,1238,1089,1130,1174,944,1195,1168,1202,1197,1156,1198,878,846,920,986,937,881,764,971,831,796,611,335,340,335,1313,1266,1486,1428,1468,1430,721,1100,1091,894,897,836,1395,1303,1493,1333,1105,1030,1102,1103,1098,1186,1050,1092,1227,1093,1233,1067,1054,1135,1189,1168,1199,1118,1213,966,911,950,982,939,736,915,825,858,987,530,337,346,535,1156,1306,1448,1403,1403,1263,985,1185,855,907,853,1024,2048,38,45,48,63,87,106,164,201,177,223,207,254,459,861,1027,971,1039,1363,1585,1598,1647,1629,1703,1750,1777,1674,1523,1547,1572,1718,1652,1739,1782,1696,1626,1655,1587,1639,1620,1297,938,1003,867,649,343,201,154,117,113,160,138,70,67,47,45,44,45,1780,642,159,257,217,247,298,443,375,356,465,322,330,599,782,958,887,1121,1164,1501,1689,1760,1806,1767,1864,1806,1807,1644,1682,1713,1813,1863,1850,1875,1845,1754,1883,1889,1871,1840,1691,943,961,901,787,585,457,338,339,335,405,410,286,158,150,185,232,163,1315,1751,1287,1393,1201,1255,1392,1383,1343,1410,1321,1436,1500,1452,1369,1456,1447,1456,1507,1397,1570,1399,1336,1378,1405,1355,1155,1166,1330,1311,1358,1387,1389,1234,1316,1440,1347,1291,1327,1477,1539,1405,1524,1365,1391,1387,1450,1420,1496,1384,1313,1399,1293,1381,1387,1278,1192,1148,1536,1319,1399,1671,926,1179,1573,1130,1141,1832,910,1037,747,1998,561,47,45,44,785,946,1090,1120,1375,1597,1291,1633,1837,1790,1644,1702,1681,775,1230,1551,1755,1799,1815,1756,1814,1808,1716,1594,1677,1681,1912,1826,1883,1835,1813,1761,1908,1852,1865,1876,1749,1612,1592,1542,1768,1364,1265,1321,1239,1245,1057,958,814,373,48,49,45,627,737,961,800,740,1130,1432,1328,1180,912,950,468,954,680,727,692,732,931,870,814,880,895,966,834,805,762,922,896,961,906,919,682,778,630,660,739,812,725,742,914,884,705,815,811,829,878,691,856,975,871,831,836,830,828,995,756,825,1472,1510,1464,1506,1627,1610,1554,1519,1713,1397,1530,1507,1653,1592,1437,1753,1378,1459,1449,1671,1592,1489,1608,1431,1643,1889,1422,1503,1288,1107,1225,1316,1377,1115,1103,1217,1103,1113,1255,1245,1293,1139,827,862,679,1870,1522,1406,1462,1392,1293,1384,1193,1186,1351,1344,1256,1141,901,897,661,875,1871,1504,1512,1489,1417,1339,1332,1188,1201,1336,1301,1211,928,825,717,681,1821,1476,1489,1417,1502,1323,1252,1404,1166,1315,1378,1315,1193,1074,948,866,654,922,1887,1448,1494,1419,1471,1522,1482,1420,1217,980,856,758,844,883,850,1628,1535,1495,1427,1469,1320,1200,1373,1178,1301,1373,1299,1179,1019,954,823,666,1505,1773,1459,1392,1158,1209,1450,1433,1348,952,994,1356,1732,1582,1581,1385,1265,1137,1503,1425,1261,1049,1267,1264,1340,1027,1064,1776,1715,1812,1829,1704,1645,1325,1828,1910,1836,1686,1898,1905,1376,1203,1289,1371,1417,1410,1926,1398,1350,1316,1340,1463,1479,1482,916,938,1076,1848,1058,832,888,1640,1420,1314,1667,1668,1504,1718,1738,1822,1198,1497,1716,1543,1591,1853,1838,1736,1225,1555,1701,1542,1731,1909,1885,1529,1275,1614,1694,1566,1806,1900,1924,1391,1339,1662,1722,1544,1712,1896,1920,1417,1399,1623,1721,1515,1668,1855,1930,1394,1345,1659,1635,1512,1731,1789,1795,1194,1521,1731,1526,1600,1758,1785,1568,1265,1623,1680,1506,1684,1782,1903,1270,1395,1697,1555,1589,1814,1837,1605,1602,1529,1642,1599,1492,1662,1634,1564,1494,1596,1438,1603,1622,1513,1574,1432,1504,1519,1329,1568,1475,1209,1108,1150,1327,1328,1126,1276,1650,1570,1322,1305,1342,1383,1464,1198,1420,1080,1374,1894,82,48,49,45,40,75,383,649,768,836,930,1004,960,1046,940,1125,1130,1264,1347,1200,1273,1356,1164,1199,1168,989,1219,1055,1201,1176,1032,937,950,829,649,706,685,408,45,44,45,48,47,1066,1044,730,777,1098,1231,1314,1018,990,1033,1021,765,692,768,994,968,1077,1202,1112,1181,1271,1276,1196,1374,1350,1325,1349,1321,1323,1220,927,833,611,533,523,767,886,773,803,889,1022,1005,869,976,1177,1784,1177,1276,1385,1414,1461,1455,1631,1728,1775,1820,1815,1806,1710,1762,1650,1634,1768,1631,1655,1623,1653,1596,1446,1604,1683,1629,1556,1577,1603,1573,1435,1242,1038,1308,1622,1502,1601,1574,1492,1327,1431,1437,1916,905,707,1053,1103,1128,1272,1387,1336,1232,1545,1472,1306,818,854,1136,1303,1415,1246,1230,1247,1123,1173,1148,1231,1343,1199,1256,1410,1291,1256,1372,1378,1311,1300,1252,1256,1187,1024,990,1114,1153,1268,1149,1553,868,1447,1536,917,1467,1038,1610,1320,1820,1568,770,883,1407,2045,813,894,745,1043,1069,1037,964,1022,1153,1291,1506,1665,1619,1676,1553,1318,1426,1502,1641,1621,1664,1637,1647,1606,1581,1483,1547,1532,1828,1835,1876,1836,1749,1783,1533,1413,1367,1375,1360,1282,1125,696,880,1154,1112,1095,1053,1092,962,680,1514,936,1009,1031,979,949,1043,1000,983,1022,952,1029,1005,1019,951,997,978,998,952,1007,1007,1022,1017,944,1012,1023,1015,951,1016,1011,1004,960,1007,1016,1003,1001,982,1130,949,874,1091,878,1120,1197,1419,665,668,605,767,658,646,638,708,1077,1068,1015,838,805,847,801,811,849,936,857,902,961,797,880,843,1007,948,950,1020,949,828,609,663,703,694,711,952,874,805,922,811,775,859,842,991,755,1538,1808,1815,1808,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1896,1846,1700,1760,1725,1720,1745,1914,1895,2048,484,48,49,48,45,46,48,49,47,45,45,48,150,790,1040,1425,1396,1563,1566,1432,1512,1542,1597,1667,1709,1761,1749,1666,1721,1619,1668,1628,1628,1567,1612,1425,1301,1287,1133,1152,907,472,325,206,139,45,48,49,45,45,45,48,49,45,45,45,42,1339,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,1375,1221,1180,1229,1248,1101,1148,1148,1203,1199,1302,1297,1170,1318,1276,1444,1706,1553,1537,1379,1364,1507,1582,1439,1383,1595,1602,1558,1500,1490,1550,1449,1371,1399,1463,1445,1481,1274,1217,1339,1279,1273,1173,1084,862,1047,1025,1122,999,809,694,743,811,695,629,613,563,1863,1675,1158,1094,1138,1011,1195,1292,1340,1153,1234,1171,1279,1351,1247,1580,1530,1777,1778,1676,1757,1784,1596,1474,1558,1486,1377,1586,1618,1462,1463,1630,1569,1645,1489,1697,1534,1374,1290,1355,1241,1110,1131,1030,1001,1056,910,979,1043,1041,1062,905,851,656,586,417,440,375,1351,1385,694,705,666,670,659,660,687,668,674,629,688,709,1216,1585,1493,1555,1580,1670,1615,1552,1503,1415,1099,856,1257,1470,1451,1551,1522,1438,1495,1421,1326,1124,955,1171,1418,1514,1483,1458,1507,1404,1238,939,673,674,694,695,666,677,667,717,694,658,641,687,1176,1763,696,657,658,678,721,698,633,638,697,697,691,636,812,1419,1635,1592,1631,1712,1694,1571,1507,1423,1361,1344,1370,1280,1304,1333,1327,1312,1270,1285,1150,1664,1678,1621,1614,1668,1605,1544,1388,1073,986,750,766,654,663,681,647,696,676,655,646,663,706,646,802,1723,1501,1813,1220,1757,1842,1203,1776,1774,2048,439,388,528,629,657,785,875,874,1016,1076,1060,1142,1384,1503,1557,1569,1579,1519,1480,1457,1455,1450,1422,1428,1551,1459,1470,1370,1358,1289,1430,1416,1451,1613,1578,1533,1413,1258,1076,1220,1299,1215,1288,1190,1163,1125,982,994,1032,1068,1005,968,866,807,726,606,335,1639,842,346,527,586,649,722,822,860,928,998,1039,1154,1239,1378,1552,1643,1690,1715,1653,1635,1465,1434,1347,1317,1312,1426,1429,1427,1458,1450,1481,1397,1448,1468,1429,1438,1563,1684,1616,1498,1286,1261,1234,1245,1181,1160,1231,1211,1064,1087,1037,999,895,802,668,621,493,1276,1325,388,461,615,678,733,814,855,945,1099,1058,1082,1437,1536,1465,1472,1560,1485,1462,1242,1298,1344,1367,1353,1396,1414,1466,1339,1299,1363,1411,1389,1297,1329,1298,1290,1429,1515,1538,1625,1397,1461,1389,1344,1177,1238,1248,1156,1145,1084,1051,1004,894,888,702,692,440,799,1630,1663,1619,1745,1471,1746,1830,1345,1615,1485,1475,1637,1555,1030,1438,1628,1626,1796,1300,1650,1549,1543,1977,2048,1962,2048,1961,1963,1971,2048,2029,2034,2048,1790,1092,1755,1840,1696,1391,1695,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2037,1209,950,781,781,897,984,1053,843,807,992,815,948,807,872,835,817,1022,838,803,884,834,1331,992,904,901,996,1121,1093,1075,1055,711,639,1098,1243,1300,1248,1494,515,574,641,612,594,543,1061,1001,1031,825,509,555,844,521,751,963,826,697,584,751,674,649,1184,777,1104,638,750,533,557,542,694,779,807,821,619,668,935,1112,887,942,837,949,946,545,1002,651,921,1028,907,777,771,982,260,613,769,1028,399,551,795,713,653,568,648,667,939,773,777,627,635,608,915,1870,1656,1567,1461,1405,1377,1463,1554,2007,1743,1794,1585,1412,1435,1396,1498,1551,2048,1618,1611,1720,1669,1606,1625,1743,1757,1804,1752,1715,1727,1422,1217,1212,1274,1618,1606,1662,1776,1766,1735,1713,1696,1771,1721,1688,1714,1689,1774,1744,1727,1717,1751,1739,1766,1709,1785,1695,1579,1586,1526,1303,1329,1280,1493,1526,1565,1649,1627,1596,1699,1493,1519,1640,1611,1586,1983,1588,1456,1493,1545,1505,1468,1527,1491,1446,1518,1600,1636,1409,1562,1677,1675,1694,1794,1751,1640,1738,1575,1574,1555,1523,1599,1620,1587,1595,1624,1611,1582,1550,1546,1608,1671,1564,1650,1556,1565,1597,1661,1610,1567,1359,1163,1437,1502,1449,1359,1475,1525,1566,1614,1508,1384,1491,1844,1710,1244,1205,1220,1238,1237,1274,1242,1256,1256,1293,1299,1535,1281,1298,1288,1317,1315,1300,1313,1222,1279,1274,1248,1241,1291,1229,1251,1249,1258,1236,1220,1187,1218,1231,1225,1244,1222,1246,1241,1252,1244,1270,1288,1307,1532,1326,1265,1279,1324,1317,1308,1282,1231,1290,1274,1257,1488,2034,1723,1761,1792,1790,1794,1803,1775,1750,1800,1798,1731,1732,1678,1724,1671,1608,1627,1593,1658,1666,1652,1601,1666,1713,1721,1728,1766,1722,1806,1765,1781,1738,1741,1731,1636,1657,1695,1635,1715,1629,1659,1697,1696,1702,1711,1755,1718,1764,1769,1765,1738,1744,1742,1752,1774,1744,1770,777,1446,1932,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,814,658,586,596,588,570,618,628,637,575,598,755,1323,445,581,645,571,426,380,421,1271,1665,1416,1010,1036,1269,1168,1057,1631,1240,1176,1098,1718,1504,909,900,1132,347,451,475,486,505,428,500,355,367,254,277,310,981,2049,1560,1805,1494,1726,1318,1106,1128,955,1213,1161,1001,1173,889,1109,1114,535,1185,1220,1086,1059,1235,853,1227,884,989,1193,951,1169,625,1042,891,984,1262,869,1120,918,1148,1058,1118,1313,994,1076,1097,967,1049,742,799,313,312,477,978,918,929,885,1658,965,1836,974,2035,1679,1507,1502,1602,1611,1571,1620,1638,1687,1622,1630,1671,1663,1634,1621,1646,1621,1627,1661,1726,1687,1682,1761,1767,1746,1681,1724,1766,1789,1782,1828,1901,1898,1884,1889,1881,1850,1772,1796,1815,1808,1841,1775,1825,1807,1792,1672,1511,1594,1636,1599,1525,1420,1563,1613,1655,1654,1881,1812,1425,1449,1490,1558,1464,1505,1523,1408,1476,1556,1619,1440,1495,1650,1687,1638,1750,1798,1641,1734,1642,1579,1541,1496,1588,1631,1579,1601,1603,1631,1579,1533,1560,1628,1632,1613,1630,1591,1523,1561,1611,1637,1589,1460,1170,1390,1498,1482,1365,1431,1490,1580,1601,1584,1420,1443,1653,1824,544,622,593,608,712,769,641,917,932,1026,1099,962,1217,1261,1324,1325,1308,1357,1336,1371,1453,1436,1391,1397,1532,1507,1409,1413,1408,1215,989,1040,890,1253,1309,1278,1155,1053,998,908,1051,1024,769,965,956,902,765,846,896,730,371,762,663,633,749,565,546,2048,813,755,832,914,957,1062,1094,1116,1108,1144,1018,890,820,741,1179,1328,1384,1442,1456,1485,1505,1504,1274,1556,1567,1628,1514,1548,1626,1736,1680,1616,1484,1550,1527,1568,1498,1482,1372,1271,1278,1191,1010,970,1091,1005,1145,1101,1166,1215,1203,1049,920,782,819,796,780,690,1403,1721,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2044,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,1588,1299,1264,1129,864,332,598,1089,990,1099,1061,1049,642,1039,1525,1568,1313,1428,1307,1372,1380,1013,1173,1159,967,1686,1266,1344,1337,1191,1212,1203,1120,1268,1418,1452,1447,1320,1300,1250,1256,1487,1521,1648,1573,1580,1572,1559,1549,1577,1532,1511,1490,1476,1417,1385,1336,1470,2053,2048,2048,2048,2048,2048,2021,1936,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2048,2055,2029,1996,1910,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1547,1326,1439,1382,1361,1365,1448,1459,1477,1662,1684,1555,1440,1437,1305,1515,1641,1731,1757,1652,1644,1513,1446,1565,1641,1658,1673,1651,1591,1555,1462,1580,1927,2045,2048,1980,2048,2028,2039,2048,2013,2015,2048,1993,2048,2018,2026,2048,2057,2046,2048,2048,2020,2018,1820,2048,2046,1983,1538,1572,1593,1610,1586,1612,869,220,216,218,213,213,383,219,220,249,221,220,1171,1874,1261,1271,1390,1317,1099,1166,1195,1215,1175,1249,1192,1101,1132,2001,1711,741,1270,2048,1258,588,1610,2048,942,752,1995,1688,681,1155,994,908,916,930,951,954,935,590,959,814,724,944,958,1109,906,956,884,848,994,1025,1011,1041,1050,1007,837,1237,955,1078,1279,696,755,434,411,975,1029,1012,943,514,339,340,336,421,364,495,526,848,1247,1130,901,1225,1341,1546,1543,1307,1369,1029,1238,1511,1396,1191,1175,1170,1454,1442,1496,1481,1121,1114,1154,1250,1459,1384,1558,1502,1107,1212,1110,1290,1491,1427,1575,1494,1076,1113,1103,1386,1399,1491,1505,1383,1043,1209,1118,1395,1450,1501,1498,1037,1264,1190,1341,1338,1399,929,611,554,631,700,662,681,643,638,964,944,832,786,714,918,963,804,580,937,872,868,547,631,745,570,788,803,717,813,675,838,559,680,624,433,716,614,683,787,512,931,543,465,638,757,661,506,499,647,452,469,455,636,606,772,432,437,921,918,1058,1134,495,466,533,699,728,959,670,633,624,634,937,1071,1005,1026,559,517,921,804,614,613,686,824,742,333,553,757,706,933,669,1094,667,880,791,843,888,900,825,856,902,877,866,843,955,725,804,870,841,892,812,1021,666,985,959,977,967,953,947,956,965,976,945,962,968,960,907,895,872,1151,784,836,573,822,943,832,800,824,805,647,807,831,889,713,794,734,771,811,676,610,746,1326,709,758,1577,1765,1847,1756,2008,1866,2057,2048,2048,1767,1355,1679,1765,2052,2048,1865,1804,2048,1882,1755,2051,2048,2048,1971,1830,1924,1927,1821,1982,2010,1805,1941,1286,1178,591,645,478,1829,2048,1949,1560,1391,1206,1113,1284,2001,1822,1225,1279,1087,1081,1694,1456,1399,1066,525,142,442,1985,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2020,1937,1364,2048,2048,2057,2048,2048,2048,2056,2048,646,69,2023,2023,2048,2056,1986,1366,1924,2001,2042,1989,2001,2048,2048,2048,2048,2027,1860,2048,2041,1910,2048,2023,2038,2054,2043,2048,2056,2026,1798,1463,1730,1886,2048,2048,2048,2048,2048,2048,2048,2048,1065,1018,1186,1123,1505,1085,1704,1483,1145,1565,1191,1314,1047,1099,1075,965,1202,1196,1580,1863,1929,1895,1888,1913,1336,1072,1001,1116,1152,1782,1167,1029,1020,1160,1384,1001,1086,1291,1199,1335,1050,1757,2048,2048,1974,2034,1973,2048,2027,1972,2048,1975,2048,2033,1969,2056,1974,2048,2056,2028,2048,2048,2032,2039,1993,2048,2040,1973,2057,2035,1978,2057,2057,1978,2048,2048,1978,2057,2048,1981,2037,2048,1971,2048,2022,2032,2025,1979,2048,2048,2048,2028,2024,2057,2048,2048,2048,2048,2057,2048,2022,1959,2048,2048,2048,2048,2048,2048,2048,2048,2048,1900,2048,2048,2048,2048,2048,2048,2048,2048,1897,2048,2048,2048,2048,2048,2048,2048,1895,2048,2048,2048,2048,2048,2048,1901,2048,2048,2048,2048,2048,2048,2048,1891,2048,2048,2048,2048,2048,2048,2048,1896,2048,2048,2048,2048,2048,2048,2048,2048,2048,1699,1800,1679,1647,1855,1205,936,1894,2000,2027,2048,1969,1982,2029,1831,1959,2007,2002,1966,2018,2037,1376,1348,1506,1449,1319,1929,1265,1143,1123,913,1482,1515,1495,1489,1465,648,706,689,711,724,662,652,613,470,567,532,1235,1857,1688,1704,1688,1694,1880,1721,1736,1751,1258,855,1815,1660,1555,1476,1494,906,534,253,438,440,475,298,623,1641,1696,1688,1676,1801,1792,1804,1566,1419,1649,1459,1480,1515,639,486,489,536,386,382,488,522,504,961,1858,1673,1672,1683,1725,1873,1791,1729,1271,1569,1698,1478,1472,1486,1489,894,648,653,578,594,498,610,441,632,480,571,479,366,863,1974,1697,1682,1679,1664,1696,1832,1863,1709,1683,1772,1184,1337,1683,1718,1485,1482,1481,1196,583,602,606,570,556,621,585,532,596,545,540,1315,1879,1671,1678,1666,1695,1711,1927,1714,1682,1706,1211,955,1776,1662,1527,1488,1495,1394,596,590,558,501,427,546,591,587,526,404,472,1126,1820,1683,1690,1676,1645,1845,1745,1756,1688,1499,795,1872,1676,1525,1473,1260,388,516,444,399,528,507,475,607,1858,1651,1699,1659,1862,1660,1701,1522,1291,1576,1511,1475,1456,1488,1484,1408,662,605,501,587,687,548,627,646,538,597,732,696,602,744,686,565,646,597,648,526,808,1991,1753,1664,1716,1671,1661,1689,1709,1712,1696,1867,1852,1742,1735,1685,1830,1823,1785,955,695,899,1805,1841,1656,1817,1592,1474,1474,1467,1464,893,463,435,559,566,611,605,574,487,485,572,515,529,598,801,2016,1686,1697,1684,1685,1691,1677,1895,1763,1772,1790,1790,1451,682,1188,1995,1698,1708,1542,1485,1490,1470,1483,642,629,675,628,644,562,467,569,646,633,406,532,482,485,488,1777,1822,1689,1684,1693,1705,1707,1726,1974,1691,1684,1793,1813,1562,759,1450,1931,1742,1581,1489,1496,1483,1431,619,538,621,620,644,553,531,270,247,183,229,249,204,1460,1994,1722,1678,1708,1715,1727,1711,2011,1797,1729,1787,1780,1744,1077,1653,1633,1583,1450,1113,678,611,665,649,1606,1679,1753,1731,1217,1617,1459,1472,1254,546,555,566,513,458,494,446,514,1045,1817,1657,1684,1654,1865,1690,1692,961,1570,1699,1475,1470,1466,1364,579,593,611,554,559,580,571,402,571,589,552,1693,1714,1675,1685,1681,1689,1876,1690,1761,1739,798,1489,1840,1576,1465,1466,1259,606,612,330,455,526,440,295,292,399,539,1784,1724,1691,1675,1625,1669,1870,1724,1689,1548,791,1840,1703,1462,1450,1435,976,266,342,323,399,440,466,320,323,448,420,392,1635,1677,1634,1639,1674,1646,1854,1722,1641,1676,1101,1681,1557,1482,1504,612,515,501,545,569,642,605,638,487,1297,1762,1673,1656,1681,1878,1657,1685,1748,836,1834,1644,1463,1482,1483,1438,584,491,550,506,599,584,629,418,437,532,468,502,429,1885,1746,1667,1687,1672,1682,1674,1944,1671,1655,1725,1700,780,1455,1791,1724,1437,1479,1488,1471,1487,1499,1489,1498,1479,954,638,759,663,538,670,509,755,562,618,485,669,694,620,618,659,603,628,312,698,624,689,518,387,609,545,293,282,625,2045,2027,1756,1729,1711,1687,1702,1668,1691,1696,1677,1663,1702,1694,2003,1932,1681,1731,1667,1657,1711,1715,1713,1667,1591,781,812,1396,1879,1822,679,655,1002,249,1661,1657,1658,1506,1504,1498,1517,1507,1503,1486,1481,1488,1477,1055,699,827,731,607,742,667,698,768,661,560,712,664,606,663,649,758,654,661,600,474,542,525,355,252,373,528,577,405,317,260,146,1116,2048,1951,1814,1690,1697,1704,1675,1688,1684,1711,1646,1680,1665,1664,1693,1696,1874,2048,1804,1760,1729,1716,1709,1659,1688,1661,1626,1711,1733,1376,937,948,1819,1895,1690,1780,1788,1608,1487,1484,1478,1489,579,534,545,535,466,552,422,490,414,547,66,584,571,1025,1947,1669,1684,1664,1690,1695,1858,1729,1719,1674,1724,1317,1093,1788,1751,1460,1446,1459,1481,1511,1498,1483,1469,1449,595,641,631,639,534,635,680,685,676,620,488,676,629,702,552,698,626,468,589,620,600,419,490,612,1267,2024,1851,1699,1664,1685,1692,1701,1713,1688,1648,1703,1781,2048,1724,1668,1662,1701,1729,1727,1738,1637,870,1055,1796,1663,1520,1654,1630,1533,1470,1463,1490,1484,1491,701,509,482,553,704,619,679,592,687,688,585,449,597,723,689,427,385,1442,1985,1680,1664,1667,1677,1710,1693,1675,1897,1807,1688,1699,1802,1745,1755,1119,1468,1762,1850,1578,1483,1501,1475,1508,1493,1483,1475,1505,1498,1506,1507,1498,790,642,692,578,644,618,522,627,634,650,617,569,602,595,578,539,609,554,476,582,633,370,589,593,623,567,548,470,627,574,531,569,631,483,568,420,469,537,514,578,1269,2039,2055,1979,1714,1709,1717,1700,1725,1686,1711,1708,1723,1707,1726,1698,1710,1700,1718,1712,1709,1925,2048,1842,1683,1728,1715,1696,1678,1741,1736,1668,1747,1743,1779,1522,912,870,901,905,1651,1701,1638,1578,1570,1537,1487,1051,621,1741,1765,1757,1682,1482,1477,1481,1487,1305,673,685,609,559,446,364,395,514,226,462,532,422,720,1980,1719,1682,1677,1689,1668,1680,1957,1740,1736,1715,1721,1011,1623,1755,1536,1463,1480,898,486,523,409,406,315,413,357,714,1858,1674,1669,1676,1872,1724,1720,1516,1420,1651,1450,1482,1458,1474,1050,576,593,609,647,523,548,608,620,377,483,398,536,292,1421,1840,1646,1663,1669,1658,1691,1671,1916,1671,1711,1704,1323,439,1065,1409,1340,1610,1522,1486,1386,452,151,437,337,307,265,282,450,1752,1643,1644,1652,1812,1649,1622,902,1554,1514,1449,1476,549,594,363,460,505,463,774,1800,1663,1656,1817,1743,1086,1668,1497,1492,1475,1482,1454,1474,1485,898,613,618,669,602,483,503,543,613,331,544,445,549,467,495,387,392,510,246,902,1932,1812,1655,1688,1686,1697,1681,1658,1669,1667,2008,1697,1714,1784,1712,1665,1655,1097,823,1465,1612,1473,1676,1661,1515,1482,1483,1483,785,448,319,520,464,468,268,473,544,457,416,311,358,524,1919,1704,1652,1659,1656,1648,1668,1946,1660,1697,1661,1647,640,1058,1525,1714,1539,1481,1309,505,516,377,142,582,350,551,1794,1709,1694,1839,1782,1755,1056,1705,1991,2056,2052,2055,2054,1678,1607,1555,1417,987,806,863,744,835,916,1371,2007,2006,1901,1908,1600,1158,1257,1318,1405,1327,834,1402,724,742,1186,1153,1031,1090,972,1129,982,995,911,1076,1131,1088,1015,761,944,992,898,900,942,820,999,913,948,1063,1003,946,1092,1037,950,887,808,981,1006,856,1026,913,944,918,869,1023,1007,994,1087,851,989,1095,1019,1034,983,1030,1084,1092,1100,1161,1092,1149,1105,1141,1080,1174,1132,1184,1053,1065,988,676,1094,1196,1088,956,1078,1185,1133,1033,1135,1011,1037,1063,1056,1301,1129,1089,1072,1109,1134,1075,1153,1139,1157,1137,1037,1132,1169,1139,1191,1086,1184,1218,1142,1093,1209,1138,1350,2048,1547,1059,1034,962,978,986,1079,1032,1023,870,1197,1158,843,1089,1006,1009,1050,679,847,744,854,969,1423,1418,1537,1422,1958,2048,2048,1956,1405,2003,2042,2048,2048,2047,1785,2048,1705,1893,2057,2048,2048,2048,2048,2048,2048,2053,2034,2044,2022,2026,2053,2025,1969,1836,1709,1893,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2014,1965,1847,1826,1499,1549,1968,1907,1806,1862,2033,2054,2056,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2057,2012,1624,991,1986,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,1752,1839,2057,2048,2054,1917,1631,1422,1248,1030,801,515,1634,2048,2048,2048,2048,2057,2057,2048,2056,2056,1925,1526,933,1808,2053,2024,1976,1885,1740,1551,1268,895,639,309,108,1795,2048,2048,2053,2051,2048,2048,2057,2048,2055,2048,2048,2037,2017,1841,1664,1509,1205,2010,2048,2048,2048,2048,2048,2048,2053,2048,2056,2054,2051,2015,1938,1756,1525,1096,998,1821,1863,2005,2048,2056,2048,1974,1724,1406,773,2035,2046,2048,2021,1838,2048,2048,1852,867,43,224,38,412,2048,2048,2055,2048,2056,2054,2048,2039,1970,2022,2048,2048,2048,2006,2057,2048,2048,2048,2048,2048,2057,2048,2048,2008,1550,1952,2042,1529,1620,2050,2034,1663,1368,1462,1830,2029,2050,2055,2048,2056,2040,1920,1532,554,698,2048,2048,2056,2055,2053,2056,2056,2057,2048,2048,2049,1885,1834,1951,1644,1893,2048,2048,2056,2048,2057,2048,2048,2057,1902,2048,2048,2048,2048,2048,2057,2048,2048,1620,2016,1959,1937,1019,2054,2048,2048,1907,1633,2048,2048,2048,2048,2053,2048,2048,2048,2056,1905,1400,1519,1892,1961,2045,2037,2047,2042,2021,2056,2057,2056,2041,2018,2019,1978,1990,1972,2053,2051,2055,2035,2042,2028,2033,2046,2051,2048,2054,2021,1908,1807,1620,1412,1345,1184,1223,1201,1067,1042,1116,997,1003,954,841,902,757,702,616,452,213,178,140,60,61,1549,2027,2042,2048,2046,1950,1736,1702,1309,706,2037,2048,2048,2048,1910,2048,2048,2048,1972,2048,2048,2048,2048,1999,2048,2057,2057,2056,2044,2048,2048,2049,2055,2056,2045,1970,1906,1862,1681,1805,1673,1818,2048,2048,2048,2056,2048,2051,1967,1857,2054,2048,2057,2057,2054,2057,2048,1911,2048,2048,1915,1661,1759,2056,2057,1669,1698,2057,2048,2056,2048,2048,2048,2052,2057,2037,1958,1726,1492,1512,1290,1250,1331,2048,2048,2057,2049,2046,1936,1770,1206,344,883,1386,1688,1861,1951,1926,1921,1995,1955,1791,1600,1397,1180,680,400,1335,1993,2044,1598,1098,1455,2048,2048,2048,2048,2048,2048,2048,2048,1949,2019,2042,1902,1553,1116,1269,2048,1926,1484,1556,2048,2048,2048,2051,2054,2053,2054,2054,1934,1921,1574,2035,1860,1257,912,2047,2048,2048,2048,2048,2048,2048,1914,1838,2056,2048,2048,2048,2048,2048,1986,1135,1332,1810,2020,2056,2056,2048,1499,1447,1958,1931,2048,2048,2048,2057,2033,1906,1366,1084,817,567,399,295,119,1528,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1362,2002,2048,2048,2048,2048,2048,2048,2048,1361,211,1191,1675,1928,2049,2048,2048,2048,2048,2048,2048,2048,2048,2055,1910,1661,1515,1366,1246,1112,1005,964,708,832,971,975,712,1515,2040,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1950,1344,811,666,1301,2048,2048,2057,2048,1616,1597,2052,1812,1355,1063,566,813,849,2048,1948,1321,415,1758,1901,1990,2046,2055,2048,2056,2039,2038,1526,1809,1801,1957,1951,2055,2048,2048,2048,2048,2048,2057,2056,2008,1789,1536,1001,662,1495,2033,2048,2048,2048,2048,2048,2048,2057,2057,1991,1778,1503,1134,979,317,296,1949,2046,1980,1917,1829,1733,1686,2048,2047,1794,1589,1303,1776,1733,1987,2048,1933,2056,992,2048,1724,1861,1835,2048,1678,1932,1430,1455,1122,1514,2016,2041,1993,1870,1972,1953,1916,2048,2048,2052,1790,1100,1128,2048,2048,2048,2048,2048,1404,916,2057,2048,2048,2048,1633,408,1643,2048,2038,2048,2048,2048,2048,2005,2038,2048,1520,2008,2048,1725,2057,2048,1580,2011,2048,1545,1290,1774,1645,640,2016,2048,2048,2046,1511,155,109,1173,2022,2055,2055,2048,2048,2057,2054,1919,2048,2048,1977,2030,2056,1936,2048,2013,2048,2057,2038,2040,1879,1864,1733,1849,1502,1786,1195,1639,1694,1602,1285,1263,1990,1948,1817,1949,2048,2048,2048,2036,1529,1032,733,1290,1960,1279,1547,1814,2048,2048,2048,2048,2056,2048,2048,2048,2057,2048,1972,1810,1598,1430,1195,899,1198,2048,2048,2048,2048,2048,1729,539,1975,2056,2048,2017,1877,2023,2056,2057,2048,2048,2056,2055,2056,1972,1821,1463,906,751,2048,2048,2048,2048,1547,254,810,2029,2048,2048,2048,2055,2048,2048,2048,1973,1645,291,486,1321,1922,2048,2048,2048,2048,2048,2057,2048,2055,2057,2056,2011,1916,1787,1776,1747,1579,1430,1278,1216,1243,1084,816,563,544,502,481,482,434,379,487,440,478,524,541,258,343,814,1166,1188,1257,1152,1028,997,853,719,540,282,149,154,919,1645,1837,2039,2048,2048,2017,1962,2020,1837,1975,1789,2002,1940,1759,1495,2043,2057,2051,2015,2036,2034,2042,2052,2013,2010,1980,2052,1895,1977,2054,2048,2053,1730,1790,2029,1764,1846,2043,1852,1303,1633,2001,2054,2021,1876,1920,1954,1850,1924,2006,2048,2048,2057,1841,2048,2042,1701,1485,1629,1400,1153,457,581,410,388,767,631,1028,1605,1384,1418,1390,1245,1419,1636,1722,1786,1804,1923,1984,2020,2049,2056,2054,2048,2057,2048,2057,2048,2041,2003,1964,2008,1995,1901,1800,1712,1724,1679,1686,1519,1444,1472,1419,1426,1365,1293,1194,1201,1176,1144,1058,978,925,954,1431,1492,1492,1470,1461,1433,1549,1508,1548,1517,1525,1517,1615,1713,1590,1586,1558,1509,1578,1697,1720,1812,1754,1714,1813,1891,1913,1832,1987,1943,1942,2053,2045,2048,2048,2048,2048,2057,2012,1921,1760,1648,1195,1202,1824,1940,2048,2048,2048,1576,246,764,2048,2048,2057,1383,2056,1283,1806,2053,1708,1393,2056,2048,2048,2048,1538,2048,2041,1638,1220,2048,2048,2048,2048,2048,2057,2030,2011,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2010,2057,2048,2057,2048,2048,2039,1980,2024,2038,2048,2048,2037,2048,2048,2048,2048,2048,2048,1841,1205,2048,2048,2048,2048,2056,2048,2057,1936,1914,1875,1556,1614,1474,1663,1843,1638,1456,1402,1148,996,492,1248,2048,2057,2048,2057,1984,1715,1307,181,795,1941,2048,1982,1702,1405,1706,1846,1257,198,527,935,371,398,343,404,450,392,380,240,837,885,857,862,511,528,537,441,786,545,665,827,539,549,569,789,1020,154,385,627,271,480,944,774,646,503,388,783,796,882,713,841,1006,853,966,1148,1377,1083,515,387,460,225,291,387,260,500,538,698,225,257,239,322,135,229,338,200,296,310,280,356,294,224,106,178,195,120,208,783,627,498,417,621,833,927,677,967,1149,910,796,827,391,382,363,325,362,248,410,579,361,329,546,1010,578,1242,602,736,858,1024,441,465,578,387,625,1745,1693,998,1128,1327,1407,1446,957,1000,946,770,852,1343,444,1198,908,1037,649,993,306,546,635,291,723,368,492,798,797,558,668,560,453,609,1137,1275,957,967,986,1296,929,925,1246,1602,1098,1113,688,1320,974,1456,991,1167,735,1349,812,941,906,950,1038,984,940,493,479,246,349,423,209,277,86,281,306,547,472,544,402,561,642,840,774,789,876,627,1105,1367,1073,1312,1344,1120,867,1012,611,398,642,1024,1191,633,943,442,355,588,564,487,996,1146,1177,369,597,542,421,590,576,377,446,317,556,380,523,346,585,258,418,702,598,817,280,1358,524,575,564,530,417,671,388,233,539,173,446,487,494,787,856,1073,996,895,494,524,539,133,259,485,585,583,418,565,428,376,372,566,391,417,407,694,203,319,230,328,283,381,142,211,257,250,182,106,101,220,115,98,136,115,98,233,347,492,267,171,789,837,812,675,964,749,528,609,443,507,247,1475,1329,1105,1038,1106,1152,1467,1636,1716,1276,1214,976,948,920,1388,1696,1675,1242,1501,1390,1139,885,620,561,714,282,614,534,838,816,439,426,301,372,357,343,348,658,197,378,235,489,436,320,229,263,168,140,118,507,653,1123,978,749,269,322,486,544,725,409,571,574,186,429,704,1015,895,671,624,422,458,778,451,502,421,758,549,545,650,749,481,414,442,365,449,296,180,42,40,41,228,198,244,257,173,235,193,164,134,440,303,317,430,210,47,806,1104,1257,1128,992,1193,825,1306,814,363,375,1176,1103,741,889,1843,1459,1441,1489,1589,1395,1547,1360,1491,1460,1571,1403,1457,1478,1621,1506,1486,1406,1502,1412,1361,1341,1519,1520,1594,1434,1535,1628,1565,1703,1640,1696,1706,1626,1018,964,1105,1085,1258,1865,1710,1759,1742,1656,1712,1737,1713,1711,1727,1700,1710,1754,1762,1761,1699,1713,1653,1678,1667,1668,1716,1702,1740,1690,1712,1650,1638,1657,1655,1605,1587,1652,1873,1579,1718,1683,1595,1668,1649,1738,1727,1798,1835,1804,1824,1828,1795,1706,1770,1665,1765,1816,1859,1767,1636,1738,1845,1714,1769,1783,1758,1724,1677,1620,1649,1621,1757,1635,1638,1575,1595,1659,1639,1647,1715,1691,1707,1663,1721,1688,1750,1714,1625,1757,1710,1682,1717,1685,1650,1667,1679,1620,1649,1614,1614,1549,1500,1530,1450,1736,1119,1104,837,710,831,1311,1409,1483,1314,1129,1134,1217,1146,1355,1375,1285,1299,1299,1247,1165,978,901,720,908,927,715,643,819,1041,1099,1049,1219,1535,1582,1424,1467,1350,1595,1431,1440,1546,1489,1389,1302,1289,1263,774,237,213,228,221,221,873,1454,1490,1222,1529,1662,1416,1151,1457,1110,756,1349,1357,916,1497,1654,1374,1645,1493,1590,1458,1355,1338,1660,1351,1364,1615,1691,1437,1404,1326,1588,1389,1647,1233,1631,1687,1608,1728,1473,1474,1743,1212,1672,1240,1662,1420,1253,1517,1595,1705,1477,1348,1525,1429,1425,1583,1599,1609,1413,1238,1672,1489,1623,1600,1359,1419,1570,1674,1238,1559,1098,1461,1507,1588,1157,1466,1440,1626,1617,1663,1146,1557,1321,1507,1076,1541,1451,1694,1077,1547,1536,1433,1405,1424,1561,1611,1580,1629,1534,1384,1388,1697,1536,1639,1777,1283,1517,1573,1521,1555,1180,1688,1620,1426,1754,1266,1728,1631,1593,1667,1277,1619,1681,1253,1710,1776,1309,1528,1562,1314,1560,1644,1541,1554,1544,1510,1636,1609,1670,1552,1677,1508,1410,1584,1664,1579,1483,1856,1891,1893,1933,2054,2001,2044,2019,2026,2008,2035,2021,2027,2025,2048,2044,2040,2048,2002,2022,2004,2020,2014,2045,2048,2052,2029,2046,2050,2017,2025,2012,2048,2049,2029,2043,2056,2042,2010,2031,1849,1992,2026,2035,2051,2035,2026,2026,2038,2023,2008,1975,1983,1976,2012,1987,2030,2029,2026,2051,2030,1995,1959,2000,2021,1991,1998,2032,2013,2023,2049,2042,1993,1950,2008,2007,1983,2014,2040,2049,2048,2034,2022,1968,1995,2022,2024,2030,2033,2049,2050,2042,2052,2046,2051,2024,2038,2005,2051,1991,2035,2036,1923,1985,1959,1995,1974,2015,1955,1964,1989,2000,1959,1958,2013,1992,1974,1913,1979,1963,1975,1984,1991,1950,1989,2006,1966,1937,2002,1975,2006,1953,1969,2018,1974,1990,1955,1981,2009,2010,1997,1999,2001,1971,2018,1960,2016,1905,1995,1966,1995,1998,1977,1973,1952,1984,1982,2000,1958,2007,2006,1996,1985,2021,1998,2022,1987,1976,1996,1966,1961,2017,1997,1968,1932,2000,2019,1971,1969,2031,2036,2017,1974,2024,2026,1944,2055,1999,2024,2020,2055,2004,2024,2022,2006,2002,1974,1968,2001,2033,1989,1973,1867,1970,2053,2049,2030,1944,1968,1908,1906,1772,1871,1883,1939,1787,1918,1822,1973,2002,1970,1865,1915,1931,1853,1856,1858,1990,1938,1963,1922,1961,1879,1925,1879,1887,1988,1953,1924,1968,1781,2012,1799,1903,1825,1910,1959,1967,1894,2030,1955,1925,1844,1865,1901,1885,1958,1947,1914,1929,1997,1950,2017,1707,1975,1726,2000,1962,1946,1951,1850,1974,1933,1965,1826,2004,1954,2041,1773,1701,1845,1741,1883,1867,1878,1828,1805,1880,1825,1961,1931,1922,1931,1920,1856,1947,1905,1925,1891,1921,1869,1949,1916,1977,1907,1927,1890,1902,1904,1847,1891,1778,1922,1929,1794,1914,1569,1763,1399,1697,1812,1761,1849,1960,1929,1975,1994,1983,2009,1903,1974,2005,1939,1973,1978,1844,1416,1414,1384,1451,1458,1485,1453,1525,1528,1437,1516,1680,1782,1650,1596,1902,1996,1998,1912,2022,1963,1830,1946,1899,2001,1992,1942,1955,1937,1961,1814,1882,1971,2038,2014,1915,2011,1902,1977,1868,1879,1980,1974,2019,1909,2029,1923,1936,1886,1863,2013,1910,2025,1884,1995,1843,1913,1894,1858,1976,1955,2053,1897,1974,1943,1876,1898,1875,1997,2001,2022,1938,1992,1929,1853,1930,1921,1949,1963,1900,1964,1929,1921,1954,1928,1897,1736,1722,1677,1651,1670,1690,1733,1737,1694,1660,1702,1737,1709,1738,1707,1641,1678,1724,1692,1714,1720,1726,1646,1611,1654,1717,1758,1769,1705,1629,1581,1657,1753,1752,1652,1632,1621,1658,1673,1754,1741,1740,1668,1647,1644,1764,1796,1769,1639,1620,1637,1771,1868,1843,1775,1727,1768,1780,1841,1897,1866,1788,1783,1822,1773,1792,1722,1707,1675,1692,1748,1687,1559,1740,1730,1718,1618,1836,1653,1655,1755,1731,1508,1700,1761,1662,1661,1764,1780,1772,1653,1789,1798,1783,1663,1736,1762,1715,1747,1731,1742,1998,1910,1977,2002,2002,1957,1910,1930,1938,1998,1984,1975,2008,1986,1985,2001,1983,1988,1970,1983,1959,2000,2001,1993,1984,1964,1998,1966,1960,1975,2016,2005,1998,1964,1982,1960,1981,1965,1979,1971,1975,1972,1975,1964,1962,1980,1960,1983,1963,1970,1949,1983,1945,1960,1959,1955,1962,1955,1986,1963,1945,1956,1945,1956,1950,1954,1951,1961,1954,1958,1952,1966,1953,1964,1956,1965,1900,1911,1913,1907,1904,1934,1890,1914,1898,1887,1933,1904,1903,1915,1915,1889,1911,1875,1887,1935,1841,1884,1947,1841,1871,1953,1843,1853,1959,1852,1826,1954,1848,1810,1973,1836,1821,1972,1830,1835,1967,1816,1843,1887,1809,1821,1886,1790,1833,1895,1768,1841,1891,1746,1876,1897,1761,1882,1888,1771,1888,1858,1780,1896,1824,1847,1907,1842,1847,1912,1816,1897,1875,1835,1908,1855,1835,1914,1818,1877,1897,1825,1905,1861,1838,1905,1848,1913,1862,1862,1912,1865,1863,1915,1871,1862,1917,1874,1852,1909,1883,1848,1905,1878,1847,1909,1877,1852,1915,1882,1858,1914,1901,1836,1919,1904,1844,1921,1879,1855,1933,1858,1860,1928,1864,1868,1922,1863,1871,1906,1856,1856,1924,1850,1832,1943,1915,1910,1916,1912,1920,1917,1922,1921,1931,1911,1912,1925,1912,1923,1908,1920,1924,1975,2004,1987,1988,1976,2003,1992,1988,1973,1977,2046,1908,1960,1906,1895,1881,1930,1896,1931,1855,1894,1900,1883,1965,1958,1965,1965,1968,1954,1984,1963,1940,1989,1925,1985,1931,1973,1935,1966,1892,1971,1827,1976,1846,1934,1886,1896,1886,1894,1942,1846,1984,1827,1961,1857,1918,1903,1839,1863,1812,1912,1791,1927,1812,1877,1844,1851,1889,1816,1933,1788,1900,1870,1836,1865,2015,2045,2027,2019,2024,1996,2035,2019,2018,2040,2029,2040,2036,2034,2020,2013,1845,2011,2008,2040,2045,2056,2026,2034,2026,2018,2041,2011,2046,2033,2048,2057,2033,2031,2043,2035,1959,1898,2042,1999,2020,2048,2032,2015,2006,1995,1993,1992,1965,1991,2029,2046,2016,2023,2012,2010,1978,2002,1991,1967,1974,2012,2040,2013,2026,2023,2002,1975,2007,1997,1971,1982,2024,2035,2009,2055,2044,2027,2038,2006,2017,2007,1957,2026,2033,2047,2047,2053,2041,2043,2042,2020,2024,2034,2038,2048,2005,2020,1986,2005,1978,2011,2003,1963,1994,1994,1947,2001,1979,1953,1942,1985,1995,2011,1964,2001,2010,1930,1927,1970,1930,1764,1912,2014,2010,1944,2004,1993,1988,1953,1972,1991,1961,1920,1903,1897,1953,1964,1942,1897,1951,1992,1949,1936,1837,1889,1982,1997,1910,1859,1914,1973,1939,1870,1867,1911,1836,1891,1948,1952,1913,1946,1874,1886,1863,1885,1980,1901,1972,1956,1903,1875,1888,1885,1956,1985,1957,1902,1820,1819,1882,1924,2014,1887,1863,1815,1710,1922,1942,1891,1908,1922,1836,1871,1913,1853,1867,1886,1894,1833,1881,1813,1836,1993,1947,1919,1922,1908,1853,1850,1859,1851,1825,1922,1992,1935,1911,1975,1817,1886,1955,1934,2010,2021,2024,1948,1870,2002,1974,2036,1949,1982,1925,2052,2016,1982,1913,1963,2002,2012,1999,1976,1986,2012,2006,1977,1987,1960,2021,2006,2022,1986,1952,1978,1968,1962,2021,1951,2019,2035,2028,1977,2010,1905,2024,1998,1988,1973,2016,2020,2018,1907,1765,1788,1901,2009,2000,1974,2016,1995,1966,1987,1937,1959,1960,1901,1942,1963,1988,1919,2003,1977,2026,1993,1987,1966,1929,2001,1975,1966,1841,1959,1929,1959,1912,1881,1970,1947,1891,1907,1988,1982,2005,1972,2000,2015,2002,2023,1914,1927,1973,1934,1692,1916,1949,1935,1943,1945,1943,2011,1989,2009,1997,1971,1964,2024,1987,1975,1987,1954,1927,1971,1929,1977,1943,1976,1988,1986,2032,2022,1987,1980,1988,2011,1981,1971,1954,1980,1958,1987,1966,1936,1991,1962,1991,1974,1921,1995,2017,1978,1960,1960,1939,2036,1952,1985,2023,1967,2001,2001,1956,2019,1977,1959,2030,1916,2047,1964,1932,2006,1944,1986,2006,2006,1961,1899,1963,1998,1937,1953,1990,1951,1912,1965,1984,2004,1979,1948,1960,1955,1945,1976,1915,1940,1963,1839,1857,1961,1970,1898,1890,1929,1911,1987,1941,1909,1988,2003,1933,1981,1987,1919,2036,1870,2000,1974,1955,2010,2011,2013,2040,2029,1873,2013,1996,1995,2025,2028,2054,2036,2026,1947,2041,2010,1972,2031,2028,2027,2009,2037,1995,2038,2013,2018,2038,2031,2054,2040,2043,1964,2023,2016,1983,2037,2026,2053,2050,2036,1979,2036,1987,2035,2045,2029,2050,2030,2039,1939,1964,1958,1978,1863,1994,1969,1978,2002,1993,2035,2022,1969,1983,1996,2027,1908,2007,1920,1929,1998,2013,2030,1951,1998,1934,1895,2001,1979,1612,1842,1812,1676,1611,1651,1532,1795,1348,1505,1532,1400,1573,1266,1478,1475,1147,1534,1158,1398,1310,1189,1489,1117,1429,1169,884,1599,1360,1210,1197,1274,1452,915,1286,1400,1159,1597,1102,1377,1179,1470,1366,1209,1455,1504,1171,1624,1430,1517,1579,1379,1623,1298,1508,1555,1166,1637,1166,1396,1180,1510,1307,1310,1411,1100,1074,1561,1452,1118,1250,1311,1440,950,1287,1479,1166,1546,1079,1377,1071,1629,1212,1424,1447,1416,1404,1492,1576,1427,1593,1455,1354,1417,1521,1405,1180,1657,1206,1355,1171,1602,1188,1401,1357,1015,1279,1468,1419,1080,1304,1405,1216,961,1281,1385,1161,1531,1100,1415,1137,1623,1282,1445,1447,1404,1452,1460,1561,1455,1571,1550,1207,1498,1479,1231,1328,1540,1289,1380,1158,1565,1174,1408,1329,892,1507,1326,1338,1180,1227,1568,886,1171,1422,1175,1508,1037,1351,1297,1242,1447,1148,1441,1507,1230,1624,1439,1499,1564,1337,1641,1259,1503,1528,1281,1646,1156,1387,1283,1278,1484,1253,1469,1143,956,1646,1370,1217,1192,1309,1604,891,1269,1462,1164,1625,1043,1349,1129,1587,1246,1384,1470,1446,1286,1504,1566,1427,1568,1423,1466,1341,1502,1490,1234,1622,1153,1440,1158,1620,1143,1408,1309,977,1223,1432,1461,1099,1293,1483,1160,1030,1334,1323,1173,1539,1149,1387,1128,1614,1258,1414,1503,1401,1352,1482,1604,1497,1610,1491,1324,1481,1563,1365,1102,1699,1143,1376,1141,1584,1146,1284,1387,1036,1090,1520,1458,1074,1282,1493,1131,1001,1306,1274,1061,1551,1094,1415,1138,1635,1174,1310,1508,1466,1382,1564,1591,1478,1543,1581,1389,1427,1551,1434,1089,1687,1230,1329,1180,1536,1268,1245,1396,1144,908,1605,1465,1227,1226,1289,1471,885,1267,1413,1136,1585,1072,1309,1315,1555,1322,1223,1531,1540,1385,1647,1434,1514,1555,1425,1704,1239,1524,1521,1254,1523,1334,1352,1387,1163,1559,1216,1496,1232,858,1686,1289,1290,1231,1193,1650,854,1234,1445,1285,1564,1114,1322,1250,1358,1559,1279,1473,1504,1244,1678,1466,1557,1578,1406,1704,1290,1549,1525,1218,1578,1303,1420,1376,1140,1591,1228,1519,1241,824,1660,1280,1305,1241,1210,1619,947,1131,1409,1440,1357,1399,1225,1396,1283,1642,1226,1518,1548,1305,1613,1517,1688,1560,1583,1529,1472,1199,1205,1291,1443,1525,1641,1461,1337,1174,1515,1543,1401,1696,1595,1360,1288,1386,1490,1409,1676,1577,1472,1385,1274,1494,1431,1354,1585,1657,1579,1474,1198,1365,1382,1204,1459,1653,1314,1080,1309,1293,1713,1387,1270,1479,1662,1143,1687,1699,1868,1929,1913,1766,1934,1819,1759,1826,1907,1814,1813,1700,1306,1702,1684,1762,1703,1721,1664,1497,853,1242,1992,2024,1825,1609,1139,1181,1804,1539,1737,1714,1958,1705,1817,1787,1891,1726,1751,1904,1897,1849,1657,1691,1985,1586,1978,1877,1941,1976,1967,1926,1829,1822,1608,1877,1818,1895,1901,1822,1658,1702,1516,1602,1804,1656,1594,1691,1599,1410,1682,1765,2011,2014,1969,1898,1998,2030,1995,1941,2016,2031,2031,1971,2000,2036,1971,1977,1939,1960,1892,1976,1949,1972,1924,2019,2011,1998,2002,2005,2035,2002,1982,1865,1977,2056,2048,2041,2003,1915,1838,1578,1973,1857,1954,1905,1902,1956,1865,1929,1849,1908,1930,1858,1899,1990,1880,1931,1945,1888,1886,1292,1642,1937,1696,1545,1490,1251,1520,1759,1620,1606,1824,1572,1581,1583,1584,1524,1619,1620,1650,1576,1282,1269,1647,1640,1266,1296,1998,1844,1788,1756,1777,1718,1774,1864,1734,1672,1658,1741,1638,1606,1842,1772,1226,1521,1645,1476,1480,1235,1322,1783,1470,1255,1182,1359,1739,1369,1553,1955,2002,1970,1979,1973,1923,1841,1550,1919,1892,1900,1613,1809,2003,1885,1875,1866,1788,1864,1926,1622,1933,1550,1430,1679,1512,1408,1485,1662,1415,1708,1380,1722,1480,1707,1589,1843,1528,1694,1591,1724,1495,1434,1602,1518,1868,1269,1260,1422,1701,1831,1831,1729,1451,1471,1598,1777,1541,1456,1657,1605,1687,1676,1514,1587,1676,1583,1441,1549,1444,1683,1619,1506,1565,1557,1643,1625,1531,1163,1598,1501,1312,1321,1374,1234,1283,1372,1514,1247,1206,1428,1390,1254,1458,1350,1286,1606,1582,1551,1867,1498,1483,1888,1836,1875,1861,1538,1936,1804,1656,1856,1602,1847,1237,1852,1919,1453,1675,1739,1690,1682,1584,1434,1623,1444,1603,1519,1521,1602,1546,1504,1417,1589,1527,1548,1406,1604,1460,1817,1874,1805,1871,1841,1822,1476,1487,1586,1522,1816,1967,1929,1828,1888,1903,1863,1968,1133,546,575,472,741,647,520,544,696,1720,1975,1981,1966,1921,1953,1966,1954,1940,1666,1664,1630,1657,1795,1560,1763,1578,1620,1541,1583,1667,1491,1508,1476,1375,1493,1363,1593,1515,1317,1145,1414,1369,1562,1470,1435,1333,1607,1454,1597,1412,1420,1366,1416,1462,1415,1388,1403,1855,1776,1815,1868,1916,1900,1795,1734,1818,1663,1691,1800,1836,1830,1732,1727,1683,1164,818,799,868,1414,1696,1707,1626,1631,1693,1576,1546,1637,1773,1670,1706,1655,1663,1827,1804,1873,1479,1785,1457,1701,1670,1778,1537,1549,1981,1621,1828,1850,1855,1490,1858,1828,1817,1054,1060,953,1073,1077,1084,985,1077,1638,1572,1577,1525,1576,1562,1560,1501,1677,1413,1501,1646,1637,1302,1034,1035,1032,1346,1422,1539,1770,1649,1464,1119,1408,1567,1150,1211,1541,1545,1437,1606,1612,1531,1578,1635,1492,1271,1021,815,1016,533,992,742,932,1514,1381,877,555,853,563,816,507,579,864,701,885,498,847,704,903,499,518,924,644,865,498,878,697,771,593,463,864,619,809,279,546,209,180,602,215,632,246,583,184,344,328,163,485,40,553,179,547,182,171,1484,1413,1449,1207,1243,1204,1417,960,1002,1014,993,966,954,995,991,1512,1390,1398,1436,1513,1487,1382,1359,1572,1439,1491,1502,1584,1590,1511,1504,1494,1570,1432,1413,1371,1416,1459,1422,1422,1537,1381,1393,1389,1384,1156,948,958,959,1094,924,955,913,1080,907,936,939,878,1495,1377,1403,1384,1171,933,929,954,1384,1607,1562,1573,1554,1545,1595,1592,1601,1573,1315,1342,1345,1295,1310,1313,1341,1504,1565,1535,1313,1566,1247,1270,1247,1564,1645,1713,1574,1556,1548,1797,1750,1812,1567,1206,1187,1518,1421,1548,1222,1233,1419,1434,1619,1460,1514,1477,1364,1705,1696,1635,1672,1530,1663,1642,1635,1780,1613,1695,1655,1617,1572,1660,1661,1528,1707,1661,1589,1664,1499,1626,1622,1646,1678,1568,1711,1678,1672,1583,1655,1659,1548,1786,1652,1622,1627,1765,1743,1620,1620,1621,1832,1677,1680,1682,1713,1742,1652,1693,1642,1299,957,959,956,1313,1509,1545,1499,1589,1357,1342,1348,1324,1297,1174,1227,1242,1319,1257,906,968,1366,1219,1163,1099,1128,1192,978,957,917,1569,1505,1509,1547,1521,1506,1511,1558,1660,1426,1388,1379,1399,1369,1396,1366,1384,1684,1532,1550,1540,1560,1534,1517,1548,1594,1724,1595,1609,1656,1612,1594,1591,1667,1781,1472,1418,1426,1437,1484,1437,1396,1438,1880,1760,1704,1693,1742,1736,1706,1673,1913,1752,1715,1691,1681,1726,1674,1674,1675,1424,1014,1210,1023,1110,1065,1207,1185,1123,1058,919,862,662,702,685,1537,1676,1715,1681,1716,1702,1741,1714,1719,1839,1735,1670,1617,1721,1677,1740,1713,1879,1755,1775,1796,1720,1804,1750,1791,1721,1869,1727,1693,1614,1685,1665,1726,1670,1738,1428,1509,1385,1563,1045,1006,1032,1009,1814,1816,1813,1828,1652,1862,1789,1835,1815,1465,1184,1212,1492,1547,1021,1042,1256,1755,1618,1621,1584,1536,1664,1611,1587,1688,1595,1452,1412,1471,1392,1480,1431,1421,1464,1760,1395,1712,1378,1479,1454,1465,1398,1733,1642,1611,1599,1532,1603,1603,1584,1695,1534,1486,1441,1376,1507,1432,1464,1483,1721,1823,1828,1834,1684,1842,1794,1837,1831,1642,1648,1620,1759,1533,1646,1611,1665,1649,1482,1440,1477,1384,1492,1484,1458,1518,1855,1807,1853,1887,1692,1848,1799,1875,1685,1630,1648,1599,1568,1683,1631,1593,1648,1655,1454,1436,1480,1386,1497,1432,1437,1539,1862,1820,1846,1779,1854,1796,1861,1869,1328,957,1758,666,676,1181,690,948,864,685,1381,1160,628,710,1079,1301,913,1257,1381,1271,591,1192,1343,1086,1378,1209,1731,1044,1090,966,1550,1587,1578,1752,1650,1753,1536,1728,1511,1523,1202,785,1280,1550,1523,1014,1003,1011,1020,1358,1092,1038,1106,1317,1831,2030,2026,2018,2019,2026,2022,1972,2012,2031,2037,2007,1986,2015,2006,2017,1973,2019,2028,2022,2000,2016,2001,2014,1966,2016,2035,2036,1996,2006,2019,1993,2001,1965,2043,1982,1903,1903,1878,1896,1924,1844,1879,1891,1900,1877,1890,1818,1868,1834,1887,1921,1711,1653,1665,1668,1664,1657,1663,1607,1794,1654,1682,1664,1624,1669,1641,1619,1635,1597,1451,1422,1409,1413,1435,1402,1394,1541,1542,1480,1428,1541,1335,1578,1496,1641,1421,1492,1470,1662,1423,1480,1565,1628,1440,1283,1489,1473,1977,1712,1509,1666,1594,1574,1533,1587,1717,1540,1569,1621,1654,1748,1633,1597,1535,1666,1543,1554,1567,1554,1546,1587,1516,1390,1654,1464,1721,1559,1654,1531,1714,1637,1629,1753,1753,1469,1662,1926,1871,1701,1726,1877,1936,1922,1950,1972,1941,1932,1917,1917,1823,1838,1869,1950,1915,1844,1868,1827,1806,1786,1777,1756,2009,1973,1963,1959,1921,1920,1894,1904,1967,1965,1897,1895,1854,1806,1822,1820,1783,1981,1979,1995,1969,1957,1940,1930,1934,1946,1946,1826,1818,1747,1784,1764,1774,1752,1886,1834,1857,1764,1800,1840,1804,1807,1776,1726,1429,1453,1467,1411,1441,1401,1417,1556,1958,1944,1936,1991,1943,1895,1903,1917,1898,1866,1904,1990,1945,1926,1916,1922,1882,1951,1875,1925,1755,1506,1533,1618,1588,1592,1573,1497,1788,1797,1805,1789,1728,1777,1737,1717,1721,1634,1328,1283,1291,1404,1284,1334,1356,1533,1505,1480,1492,1546,1571,1497,1478,1462,1640,1695,1475,1654,1617,1617,1556,1545,1394,1340,1328,1250,1296,1169,1296,1669,1890,1858,1875,1904,1889,1882,1857,1865,1960,1902,1867,1883,1872,1876,1892,1878,1940,1430,1421,1393,1387,1451,1472,1460,1442,1764,1654,1712,1747,1713,1597,1588,1564,1646,1569,1549,1581,1611,1710,1724,1698,1652,1720,1461,1479,1478,1457,1383,1403,1411,1467,1607,1479,1491,1544,1088,1534,1492,1485,1678,1482,1512,1491,1391,1503,1481,1514,1535,1978,1971,1922,1747,1439,1381,1427,900,1400,1411,1416,1596,1186,1146,1126,1119,1002,1067,1167,1157,1510,1426,1454,1819,1899,1882,1907,1893,1898,1894,1919,1709,1605,1527,1445,1538,1461,854,1002,773,975,792,966,666,863,899,936,851,759,992,936,1032,892,1409,1243,1318,1284,957,352,555,472,512,217,538,531,1347,1024,779,817,1077,1344,719,1328,872,179,381,306,349,1251,1330,1563,1614,1841,1740,1822,1828,1811,1772,1773,1773,1786,1636,1653,1574,1621,1591,1653,1589,1593,1448,1321,1326,1313,1568,1665,1670,1666,1637,1697,1661,1669,1698,1668,1670,1681,993,1546,1833,1866,1776,1807,1807,1874,1816,1740,1668,1442,1463,1453,1590,1866,1813,1901,1855,1850,1893,1827,1865,1849,1068,1739,1328,1095,1211,1067,1102,2046,2002,1987,1917,1951,1966,1901,1904,1890,1957,1952,1974,1884,1917,1896,1936,2006,1837,1659,1757,1787,1834,1771,1704,1592,1817,2057,2044,2046,2056,2052,2056,2048,2050,2048,2051,2045,2041,2055,2047,2041,2031,2057,1868,1922,1854,1844,1822,1867,1831,1878,1942,1903,1881,1851,1857,1823,1861,1841,1929,1363,1543,774,791,807,687,722,460,806,899,785,403,621,778,873,691,403,729,818,866,552,468,783,819,918,472,603,1254,1046,1141,605,545,1257,1104,1128,403,786,1149,1078,1004,393,1005,1093,1068,782,1314,1262,1580,1303,1730,1479,992,1168,1151,1131,1151,1113,1096,1096,1155,1131,1175,1165,1135,1107,1045,1092,1572,1131,1112,1203,1053,1064,1085,1018,1047,1026,898,1007,1037,863,883,765,862,1373,434,529,502,536,578,499,573,560,446,509,473,507,510,536,563,500,1381,1460,1484,1490,1555,1504,1509,1511,1513,1132,985,987,1393,1607,1426,1406,1307,1352,1446,1740,1647,1637,1666,1611,1620,1664,1640,1676,1714,1505,1475,1528,1454,1534,1485,1461,1632,984,1143,1248,1341,1332,1304,1324,1114,1355,1437,1384,1430,1525,1501,1554,1559,1683,1411,993,1137,1136,1137,1157,1095,1100,1126,1190,1119,1173,1176,1089,1064,1035,1177,1430,1126,1114,1218,1065,1077,1118,1039,985,1013,913,1014,1039,846,857,790,852,1342,420,548,513,559,549,467,569,560,458,519,473,505,499,530,559,512,1650,1797,1788,1808,1791,1799,1732,1820,1408,1423,1370,1398,1603,1275,1214,1220,1482,1466,1346,1286,1507,1359,999,1027,992,1418,1693,1518,1697,1663,1353,1176,1151,1158,1463,1291,1741,1662,1589,1688,1696,1606,1656,1633,1696,1228,1344,1483,1483,1990,1665,1990,1759,1733,1627,1720,1721,1625,1757,1748,1725,1570,1512,1528,1542,1575,1492,1598,1323,1693,1628,1616,1586,1583,1571,1592,1622,1790,1440,1723,1808,1506,1399,1744,1797,1598,1718,1079,1078,1127,1145,1143,1138,1073,1146,1108,1167,1141,1193,1169,1101,1058,1115,1324,962,1244,1090,945,610,1106,1243,1136,991,937,1245,1124,904,494,1164,1243,1207,966,847,1192,1118,997,424,1206,1204,1145,1001,740,1130,1153,1072,412,1185,1167,1144,890,848,1094,1225,1134,412,1101,1207,1161,913,1425,1135,1114,1210,1057,1046,1101,1068,988,1046,903,1015,1051,858,853,786,851,1039,1216,1201,1157,389,929,1221,1125,1013,1260,1132,1247,1122,1189,1197,1112,1210,1190,1249,1106,1097,1218,1188,1279,1146,1109,1241,1162,1350,1181,1034,1002,1135,1270,1141,1004,1020,1093,1350,1097,976,1028,1238,1258,1015,1004,1086,1429,823,471,556,1196,1531,1750,1859,1873,1833,1617,1415,592,503,518,518,576,786,1382,1068,1248,1494,1207,1081,1400,1438,1068,1228,1496,1214,1037,1346,1873,1848,1716,1722,1898,1709,1859,1893,1694,1903,1681,1840,1767,1846,1758,1791,1847,1760,1807,1881,1741,1864,1747,1748,1918,1705,1843,1779,1826,1747,1868,1728,1729,1906,1674,1795,1887,1694,1866,1803,1836,1705,1857,1751,1765,1890,1762,1726,1883,1731,1808,1791,1752,1952,1766,1829,1713,1898,1735,1863,1750,1737,1903,1661,1823,1889,1760,1748,1810,1826,1711,1860,1877,1723,1904,1719,1754,1482,1160,1212,1177,1303,1144,1205,1126,1121,504,795,898,787,389,645,803,845,683,401,723,843,864,513,495,781,812,940,489,1545,986,1125,1164,1119,1200,1102,1095,1103,1167,1154,1152,1183,1132,1060,1075,1107,1558,1470,1611,1066,1064,1152,1120,1049,1081,1043,1021,1023,863,1028,1063,945,881,770,881,1422,1453,1419,1350,414,560,515,557,562,457,574,549,465,519,470,504,498,534,571,494,1566,1646,1662,1573,1717,1663,1634,1672,1684,1699,1772,1647,1619,1612,1651,1624,1127,452,924,784,424,304,804,942,2043,2032,2003,2017,2022,1987,1997,1967,2024,2020,2024,2013,2017,2016,2013,1966,2008,1418,1350,1611,1565,1372,1200,1368,1121,1121,1119,1127,1120,1127,901,70,690,1982,2049,1857,1893,1916,1863,1836,1886,1916,1860,1948,1930,1941,1945,1871,1927,1912,1918,1884,1770,1995,1909,1887,1911,1917,1866,1759,1814,1773,1879,1896,1898,1873,1865,1875,1914,1905,1855,1985,1779,1881,1864,1904,1851,1708,1487,200,583,600,681,627,545,595,725,724,657,769,849,954,586,843,265,1113,328,406,1512,687,1090,216,324,336,785,1621,1449,1572,1651,1608,1574,1453,1524,1605,1616,1621,1603,1472,1583,1564,1545,1689,1632,1707,1509,1502,1830,1861,1789,1759,1829,1858,1840,1838,1861,1775,1336,1279,1334,1356,1323,1321,1326,1364,1573,1465,1447,1475,1481,1480,1481,1434,1606,1457,1466,1451,1467,1501,1437,1447,1422,1651,1442,1457,1464,1499,1469,1441,1427,1604,1448,1433,1426,1447,1491,1455,1432,1402,1617,1371,1385,1424,1505,1451,1421,1422,1592,1436,1401,1354,1472,1473,1415,1411,1404,1617,1391,1362,1438,1456,1456,1427,1386,1546,1508,1387,1452,1505,1462,1477,1430,1419,1645,1448,1409,1464,1485,1490,1453,1470,1400,1546,1341,1289,1374,1372,1360,1275,1268,1556,1337,1307,1337,1380,1324,1334,1344,1272,1543,1337,1287,1370,1365,1341,1325,1269,1536,1457,1418,1467,1480,1480,1471,1444,1400,1647,1415,1403,1483,1481,1491,1444,1405,1571,1475,1361,1379,1464,1457,1421,1431,1393,1613,1418,1388,1441,1470,1476,1406,1374,1453,1600,1369,1408,1440,1485,1450,1423,1408,1612,1477,1420,1422,1440,1490,1448,1416,1395,1787,1745,1832,1717,1891,1579,1735,1811,1819,1837,1776,1634,1687,1806,1759,1716,1801,1839,1814,1889,1822,1918,1842,1894,1840,1871,1870,1818,1766,1826,1834,1776,1770,1820,1944,1792,1785,1721,1780,1728,1766,1719,1781,1926,1807,1762,1741,1787,1760,1739,1766,1943,1884,1819,1834,1816,1805,1846,1795,1784,1896,1723,1789,1730,1733,1718,1765,1772,1858,1784,1851,1835,1830,1825,1759,1767,1784,1796,1814,1728,1752,1664,1606,1752,1725,1627,1807,1818,1734,1778,1672,1630,1657,1665,1809,1895,1658,1603,1639,1654,1691,1679,1686,1650,1769,1686,1619,1647,1702,1696,1700,1674,1804,1807,1759,1770,1792,1828,1775,1843,1776,1842,1799,1686,1750,1810,1779,1785,1765,1858,1754,1821,1881,1862,1880,1938,1915,1803,1802,1682,1687,1745,1761,1743,1800,1696,1773,1757,1662,1813,1808,1794,1836,1841,1698,1753,1416,1518,1510,1510,1530,1512,1494,1532,2057,1964,1935,1994,1987,1940,1997,1942,1903,1966,1995,2020,1962,1935,1985,1993,2027,1626,561,38,40,40,317,40,38,40,579,1857,1782,1823,1850,1819,1820,1787,1840,1788,1471,1459,1433,1458,1434,1426,1420,1545,1869,1829,1806,1754,1788,1765,1794,1809,1261,826,40,40,39,158,169,40,40,39,1023,1090,1733,1723,1743,1757,1763,1705,1705,1751,1761,1856,1004,1236,1445,1275,802,1568,1435,1286,983,1794,1608,1644,587,38,40,40,318,40,35,40,536,1311,1461,1197,1234,1664,1659,1602,1684,1677,1666,1663,1610,1655,40,38,40,40,1086,442,99,1136,1839,2004,1776,1664,1612,1636,1682,1673,1723,1745,1692,1721,1744,1736,1737,1722,1684,1680,1722,1073,1068,492,983,1823,1756,1707,1743,1725,1799,1673,1731,1872,1847,1824,1891,1779,1920,1802,1891,1824,1848,1687,1684,1771,1637,1800,1771,1706,1889,1784,1968,1776,1951,1848,1912,1872,1874,1977,1270,1165,1139,1014,1193,1454,1346,1371,1353,1419,1201,1155,1082,1152,1150,1277,1667,659,843,921,1023,1355,1709,1193,744,674,820,1429,1620,1753,1605,844,1318,1608,1401,1221,948,801,967,775,493,890,1208,1393,1203,1209,1335,1363,1402,1321,1365,1926,1905,1860,1913,1843,1862,1902,1895,1841,1895,1928,1944,1829,1893,1878,1950,1275,941,937,983,1529,1959,1753,1876,1922,1146,1196,1181,1208,2022,2031,1985,2033,1949,1913,1890,1902,1922,2029,2036,2035,2050,1780,1816,1787,1841,1806,1820,1707,1817,1841,1963,1938,1927,1957,1616,1288,1308,1656,1345,1190,1279,1277,1333,1186,1262,1235,1575,1480,1198,1191,1660,1634,809,774,1520,1589,840,761,1183,1252,1172,779,959,1655,1634,1372,1392,1646,1832,1737,1795,1777,1829,1768,1842,1836,1816,1658,1666,1678,1719,1773,1809,1815,1737,1654,1452,1392,1443,1593,1473,1424,1431,1583,1531,1444,1496,1551,1603,1498,1457,1543,1884,1984,1955,1927,2019,1969,1977,1969,2004,1767,1770,1756,1760,1807,1588,1540,1569,1873,1914,1806,1875,1929,1774,1840,1766,1822,1978,1866,1837,1911,1891,1820,1794,1802,1900,1496,1567,1622,1625,1180,1228,1606,1339,1182,1287,1177,1694,1187,1224,1270,1787,1770,1787,1761,1774,1857,1795,1784,1786,1864,1840,1817,1822,1546,832,813,810,939,1145,1184,1142,1183,1324,1188,1187,1181,1328,1373,1390,1335,1565,1840,1854,1859,1860,1872,1792,1855,1831,1959,1900,1936,1924,1930,1916,1918,1971,1923,1803,1857,1819,1747,1832,1830,1723,1584,1671,1773,1841,1838,1900,1887,1798,1884,1864,1510,1468,1397,1515,1558,1588,1778,1587,1551,1631,1652,1701,1675,1749,1773,1778,1804,1881,2052,2048,1961,1954,1979,1987,1966,1988,1943,1961,1922,1891,1194,1280,1395,1039,1705,1780,1743,1755,1741,1566,1605,1476,1636,1788,1759,1783,1734,1848,1801,1817,1767,1789,1711,1710,1706,1657,1664,1808,1797,1613,1255,997,1077,1104,1374,908,915,890,1322,960,1209,938,1297,555,679,479,577,974,756,799,652,734,1158,1226,1192,1001,1315,1351,1458,1374,1323,1478,1560,1660,1336,1408,1658,1539,1465,1727,1617,1673,1573,242,222,194,285,855,497,408,458,1649,2035,2049,2044,2031,2031,2042,2057,2014,2011,1949,1940,1950,1879,1924,1923,1923,1724,1429,1338,1498,1468,1132,1206,1132,1074,1436,1452,1405,1463,1679,1874,1819,1830,1880,1859,1808,1771,1870,1813,1738,1735,1770,1706,1760,1805,1707,1611,1394,1484,1453,1503,1419,1450,1611,1471,1797,1859,1870,1872,1634,1209,1229,1220,1572,1841,1800,1775,1838,1396,1455,1449,1438,1923,2041,2027,2051,2043,2001,1996,1966,1995,1495,1518,1499,1487,1781,1662,1657,1676,1958,1965,1991,1990,2031,1728,1709,1723,1786,2054,2044,2044,2051,1573,1267,1089,538,530,534,754,1185,1457,1429,1158,1217,1495,1358,1426,1291,1535,1523,1617,1459,1392,1681,1777,1760,1844,1634,1220,1316,1252,1387,952,985,1017,1042,945,865,1060,1078,880,2000,1976,1943,1953,2021,2009,1980,1997,1983,1591,1468,1636,1701,1666,1662,1715,1639,1804,1497,1487,1610,1826,1591,1734,1687,1694,1478,1714,1594,1428,1481,1588,1542,1428,1850,1903,1871,1845,1897,1907,1868,1859,1910,1636,1527,1441,1643,1979,1979,1968,1998,1988,1813,1786,1805,1842,1866,1915,1917,1812,1444,1458,1428,1346,1478,1502,1522,1492,1525,1536,1757,1686,1628,1468,1601,1528,1493,1747,1724,1627,1753,1687,1726,1678,1779,1679,1674,1540,1679,1662,1678,1641,1533,1678,1608,1572,1542,1481,1490,1798,1335,1738,1678,1453,1499,1552,1542,1505,1520,1658,1619,1348,1319,1320,1514,1599,1838,1402,1536,1706,1450,1729,1765,1695,1639,1584,1268,1205,1204,1290,1338,1222,1309,1694,1402,1479,1279,1396,1128,1153,1228,1219,1296,1432,1446,1368,1431,1578,1243,1279,1513,1761,1854,1699,1381,1174,1014,920,910,1078,1151,1240,1272,1402,1647,1575,1652,1827,1506,1182,1003,1031,932,733,799,1338,1073,1281,1235,1238,1316,1496,1659,1714,1865,1880,1758,1775,1736,1419,1273,1182,1311,1263,1329,1302,1286,1242,1291,1310,1276,1339,1703,1582,1680,1621,1515,1421,1640,1670,1644,1420,1201,1192,1289,1255,1238,1414,1489,1856,1443,1280,1387,1244,1214,1083,1260,1389,1606,1704,1671,1617,1439,1369,1477,1314,1838,1440,1441,1255,1259,1271,1171,1250,1401,1609,1728,1699,1674,1519,1628,1741,1508,1650,1552,1037,248,965,1575,1105,252,908,1564,1072,237,928,1568,1080,232,912,1527,1107,262,862,1531,1114,259,793,1234,1259,1297,1364,1381,1259,1373,1269,1410,1281,1302,1258,1436,1306,1325,1311,1322,1406,1460,1253,1222,1257,1251,1236,1245,1272,1562,1170,1221,1188,1232,1219,1164,1212,1223,1501,1250,1263,1273,1255,1247,1249,1247,1581,1751,1738,1771,1649,1675,1690,1826,1925,1170,1337,1301,1406,1310,1410,1258,1336,1372,1352,1385,1340,1364,1397,1380,1366,1817,1691,1621,1571,1649,1558,1542,1477,1236,1382,1359,1435,1589,1508,1457,1513,1689,1915,1675,1619,1573,1663,1571,1566,1532,1288,1414,1333,1411,1549,1488,1492,1515,1658,1880,1704,1622,1610,1635,1571,1604,1501,1288,1376,1355,1378,1544,1490,1534,1479,1618,1842,1764,1636,1599,1578,1592,1607,1485,1325,1348,1382,1386,1541,1509,1539,1441,1603,1790,1537,1214,1147,1007,830,968,1053,1007,1124,1161,1259,1196,1027,934,1037,1040,1072,1674,1209,1213,1020,836,915,1081,989,1086,1108,1282,1198,1073,882,1030,1017,1057,1940,1936,1897,1943,1955,2010,1916,1948,1876,1841,1761,1815,1884,1903,1958,1940,1942,1474,1971,1922,1954,1988,1973,1965,1952,1976,1920,1777,1767,1759,1775,1750,1842,1761,1740,1787,1772,1778,1751,1723,1697,2008,1950,1889,1898,1892,1976,1596,719,849,2021,1955,2009,1983,1951,1967,1991,1957,2016,1960,1961,1956,1988,1976,1989,1942,1961,1805,1573,1563,1566,1557,1576,1549,1571,1664,1776,1612,1710,1585,1629,1853,1804,1843,1812,1685,1527,1563,1487,1706,1659,1734,1600,1715,1634,1679,1727,1771,1828,1842,1831,1883,1832,1645,1717,1569,1793,1830,1816,1845,1832,1577,1598,1580,1551,1673,1681,1745,1647,1767,1716,1782,1736,1814,1560,1549,1720,1734,1678,1553,1864,1636,1759,1660,1814,1660,1693,1573,1651,1709,1506,1550,1727,1675,1628,1459,1600,1944,1834,1010,1869,1919,1680,1795,1529,2020,2001,2009,1761,1504,1342,1210,1277,1243,1504,1595,1577,1502,1450,1480,1502,1516,1532,1475,1234,975,881,1014,1292,1102,983,1113,1086,1775,1819,1867,1892,1776,1869,1753,1794,1974,1756,1589,1637,1649,1732,1774,1785,1665,1853,1829,1873,1890,1754,1897,1761,1819,1936,1840,1609,1669,1664,1732,1790,1789,1681,1860,1781,1906,1787,1927,1770,1943,1786,1918,1982,1901,1996,1972,1886,1952,1977,1963,1993,1848,1695,1743,1819,1773,1868,1878,1812,1691,1629,1267,1285,1683,1558,1610,1207,1175,1105,994,481,312,1212,1277,1306,1293,1335,1469,1274,1341,1301,1430,1348,1295,1357,1266,1439,1364,1307,1386,1304,1455,1567,1164,1425,1445,1810,1912,1963,2042,2040,2007,1998,1961,1970,1640,1615,1513,1486,1740,1592,1721,1733,1560,1747,1800,1584,1768,1567,1571,1620,1626,1653,1810,1901,1915,1830,1653,1730,1827,1946,1951,1863,1694,1762,1850,1926,1830,1759,1633,1844,1921,1889,1875,1628,1767,1907,1981,1951,1927,1723,1688,1881,1894,1871,1758,1338,972,1005,975,1378,1492,1595,1588,1646,1619,1698,1639,1620,1579,1847,1700,1729,1723,1595,1712,1619,1639,1684,1707,1934,1738,1713,1741,1721,1749,1727,1609,1713,1672,1735,1679,1597,1679,1634,1524,1983,1900,1861,1938,1949,1930,1876,1703,1777,1652,1676,1769,1953,1866,1908,1883,1896,2003,1915,1963,1933,1920,1818,1795,1789,1797,1897,1958,1865,1889,1903,1904,1848,1869,1667,1360,1205,1372,1715,1595,1659,1619,1914,1872,1842,1844,1846,1849,1836,1871,1884,1865,1900,1902,891,599,628,936,1073,979,1318,1236,1303,960,1826,1703,1621,1550,1756,1604,1661,1695,1575,1477,1650,1458,1326,1242,1585,1647,1680,1721,1700,1719,1722,1611,1698,1339,1336,1559,1446,1544,1484,1489,1451,1465,1428,1360,1345,1864,1801,1821,1858,1846,1854,1861,1811,1899,1819,1819,1842,1938,1899,1872,1853,1885,1987,2008,1964,1886,1908,1875,1940,1920,1941,1888,1936,1909,1872,1874,1860,1903,1884,1759,1493,1477,1572,1642,1606,1581,1659,1607,1631,1622,1616,1746,1658,1630,1676,1650,1631,1646,1631,1693,1692,1659,1654,1654,1631,1626,1622,1643,1892,1869,1882,1831,1865,1872,1824,1868,1840,1942,1858,1843,1849,1839,1835,1835,1855,1946,1872,1858,1861,1872,1847,1839,1868,1881,1599,1387,1427,1436,1300,1452,1418,1602,1404,1302,1484,1480,1411,1418,1837,1875,1837,1830,1808,1832,1824,1908,1931,1656,1731,1711,1685,1683,1705,1762,1597,1726,1585,1786,1702,1713,1746,1775,1720,1588,1647,1900,1833,1833,1873,1592,1811,1862,1865,1848,1848,1668,1736,1786,1769,1802,1751,1618,1745,1696,1683,1828,1615,1720,1751,1814,1743,1778,1722,1675,1695,1639,1665,1726,1381,1184,1261,1186,1246,1282,1152,1353,1668,1532,1512,1651,1668,1542,1560,1579,1568,1556,1538,1591,1879,1868,1936,1889,1884,1523,1644,1419,1596,1744,1805,1782,1716,1779,1475,1464,1708,1745,1752,1474,1363,1461,1861,1899,1483,1450,1627,1414,1538,1575,1458,1680,1508,1474,1521,1532,1476,1577,1427,1514,1532,1495,1601,1483,1480,1511,1643,1551,1486,1562,1347,1494,1416,1521,1895,1843,1833,1793,1802,1819,1753,1742,1688,1574,1809,1697,1790,1795,1610,1762,1786,1633,1854,1940,1858,1887,1894,1750,1923,1699,1760,1761,1583,1759,1724,1785,1635,1738,1745,1761,1693,1794,1697,1791,1709,1647,1680,1622,1740,1716,1817,1648,1678,1730,1732,1697,1732,1672,1731,1712,1784,1540,1408,1691,1773,1662,1715,1762,1622,1450,1562,1511,1527,1392,1518,1512,1514,1654,1795,1690,1740,1769,1654,1707,1718,1669,1618,1673,1624,1695,1591,1607,1629,1705,1636,1662,1606,1687,1636,1641,1641,1643,1721,1623,1653,1635,1691,1629,1631,1620,1724,1641,1653,1665,1633,1752,1616,1614,1596,1762,1631,1710,1699,1793,1631,1641,1608,1690,1649,1610,1694,1683,1809,1601,1612,1632,1713,1648,1885,1756,1685,1620,1802,1779,1579,1766,1814,1792,1707,1907,1881,1876,1939,2013,1934,1941,1957,1983,1736,1863,1935,1994,1997,2000,2004,1824,1927,1825,1815,1916,2004,2028,2018,1999,1965,1948,1921,1913,1879,1907,1904,1934,1951,1981,1771,1896,1888,1897,1863,1749,1594,1639,1948,1773,1823,1537,1612,1617,1626,1587,1812,1422,1401,1309,1342,1418,1524,1492,1353,1443,1542,1470,1430,1438,1440,1520,1499,1392,1685,1755,1808,1696,1692,1690,1747,1724,1667,1721,1687,1756,1665,1669,1663,1690,1620,1731,1670,1676,1630,1744,1685,1647,1641,1730,1635,1637,1641,1739,1949,1886,1893,1941,1878,1927,1881,1892,1933,1783,1774,1785,1921,2012,1985,2057,2053,2030,2056,2021,2028,2037,2041,2040,2048,2054,2053,2040,2038,2036,1854,1853,1879,1926,1922,1897,1887,1874,1730,1466,1518,1374,1678,1628,1635,1516,1577,1638,1552,1625,1522,1428,1550,1612,1544,1524,1644,1451,1408,1552,1406,1764,1858,1815,1723,1679,1635,1823,1847,1873,1848,1789,1785,1653,1832,1837,1808,1606,2008,1987,2002,1917,1902,1927,1580,1703,1708,1746,1706,1781,1800,1754,1671,1770,1698,1701,1675,1662,1531,1498,1503,1524,1535,1522,1532,1509,1535,1501,1494,1545,1496,1554,1540,1499,1512,1499,1309,1289,1287,1180,1988,1936,1924,1881,1934,1964,1937,1921,1871,1349,1267,1311,1348,1359,1325,1301,1462,1643,1468,1448,1614,1645,1469,1593,1562,1710,1704,1670,1669,1653,1671,1639,1666,1715,1652,1229,1285,1326,1270,1309,1244,1206,1416,1251,1090,1020,1114,1189,1167,1011,1339,1491,1253,1314,1232,1239,1244,1264,1399,1273,1555,1330,1330,1359,1340,1360,1292,1315,1723,1600,1625,1737,1720,1618,1514,1270,1847,1980,1506,1037,1256,1160,1357,1115,1537,1961,1929,1587,1743,1820,1821,1745,1576,1942,1190,433,597,469,520,520,530,460,864,472,1075,1308,1439,1358,1176,1141,480,864,548,1402,1446,1521,1503,1386,1074,576,1505,1057,1399,1146,1490,1360,1204,1184,1802,1786,1713,1742,1811,365,112,1195,493,638,642,548,489,770,643,506,1303,937,906,1429,1418,1390,1414,1401,1566,1599,1711,1596,1638,1547,1594,1850,1584,1123,1176,1175,1249,1290,1276,1320,1259,1429,1522,1606,1618,1671,1589,1375,1354,1378,867,25,30,25,467,674,1237,730,1471,1624,1680,1615,1628,1204,1668,1508,1608,1516,1710,1898,1939,1901,1945,1882,1720,926,1160,1495,1346,942,938,1263,1321,1392,1445,1495,1510,1558,1622,1715,1762,1527,1601,1492,1554,1584,1501,1550,1703,2052,2048,2035,2009,1887,1946,2019,1967,1740,1912,1877,1945,1992,2032,1994,2032,1993,2020,1974,2030,2050,2003,1716,1834,1996,2006,1996,1936,1664,1595,1231,1255,1185,1433,1993,1907,1717,1749,1891,1888,1766,1787,1780,1845,1936,1965,1960,1968,1967,1964,2009,1869,1545,1558,1557,1521,1515,1565,1522,1508,1368,1393,1322,1322,1287,1301,1346,1531,2013,2024,1983,1969,2003,1960,1917,1934,2012,1830,1713,1671,1666,1720,1648,1315,215,446,1238,1322,1311,979,1026,944,1111,1158,1621,1710,1562,1695,1729,1677,1531,1558,1572,1620,1547,1589,1487,1487,1247,1391,1054,1192,1295,1325,1235,1334,1428,1503,1570,1606,1445,1445,1414,1269,953,1067,1590,1506,777,1164,1278,1370,1490,1473,1487,1500,1178,1282,1454,1498,1700,1717,1861,1833,1784,1796,1567,1640,1601,1661,1576,1604,1492,1584,1502,1445,1238,1398,1529,1578,1370,1389,1364,1412,1365,1264,523,643,441,728,1426,1534,1551,1544,1425,1476,1553,1457,1372,1327,1149,1168,1295,1378,1514,1371,1090,808,315,900,1730,1904,1788,1778,1564,1394,1021,1105,1558,1587,1564,1539,1579,1572,1550,1707,1763,1834,1720,1828,1776,1882,1770,1749,1417,1398,1339,1401,1419,1500,1673,1712,1547,1566,1496,1489,1552,1528,1473,1661,1904,1821,1540,1255,735,761,855,1227,1514,1593,1667,1707,1480,1609,1364,1347,1235,964,600,837,820,878,621,949,1435,1225,518,561,492,992,1751,1690,1087,1152,1024,1177,1375,1346,1089,1133,906,998,1436,1482,1436,1454,1423,1567,1694,1758,1636,1787,1864,1862,1567,1403,999,1156,1134,1173,958,1001,829,1081,999,1135,1223,1157,449,549,623,674,501,548,625,671,514,576,645,721,531,596,612,674,434,507,568,1054,1880,1685,1044,1136,1035,1130,1035,1099,1111,1338,1795,1664,1687,1714,1634,1676,1729,1559,1154,1332,1660,1659,1680,1764,1876,1462,209,323,276,359,187,283,264,354,51,269,25,180,157,283,285,300,241,639,1451,1496,1627,1537,1064,1081,1065,1130,1165,1346,1474,1526,1451,1621,1848,1879,1694,1710,1389,1627,1623,1654,1376,1430,1246,1271,1614,1573,1576,1182,1635,1443,1492,1481,1389,1254,1437,1465,1403,1524,1526,1513,1291,1114,1303,1344,1364,1209,1318,1093,1134,1050,1474,1523,1503,1478,1533,1535,1522,1518,1054,762,607,498,772,712,785,654,601,550,529,699,674,696,696,704,758,677,732,840,783,698,566,458,935,2018,1986,1761,1754,1690,1675,1692,1710,1715,1703,1706,1694,1877,1947,1817,1773,1684,1681,1766,1721,1755,1057,976,1273,1786,1475,1679,1854,1544,1475,1465,1481,1482,1471,1482,1475,1492,1288,575,533,555,640,592,432,573,623,575,561,610,608,581,540,318,417,537,420,191,501,608,349,343,444,364,486,1249,1938,1847,1664,1649,1688,1674,1672,1667,1664,1697,1686,1693,1678,1887,1860,1648,1711,1673,1752,1791,1669,1662,1074,718,707,1322,1898,1653,1733,1579,1755,1821,1573,1534,1474,1525,1489,1489,1498,1509,1502,1486,1509,1500,1492,1477,1516,1478,1505,1504,1495,1463,1470,632,319,571,573,660,520,593,698,582,319,586,439,441,466,477,289,387,629,643,620,633,712,549,671,645,561,632,438,553,344,529,510,426,330,424,481,469,421,512,413,471,455,592,563,570,553,319,587,393,525,473,407,361,545,411,509,542,229,309,553,1886,1986,2030,2002,2006,2052,1708,1675,1702,1681,1704,1716,1720,1683,1699,1670,1686,1701,1677,1694,1690,1690,1705,1712,1736,1718,1697,1686,1693,1719,1674,1705,1672,1939,2048,2048,1859,1595,1685,1737,1686,1732,1773,1643,1688,1735,1713,1667,1673,1655,1758,1779,1697,1669,1645,1715,1640,921,897,929,765,724,965,1049,1019,1028,1210,1194,1146,950,1120,927,1039,838,882,1294,770,1987,1966,1895,1768,1585,1454,1573,1484,1510,1531,1491,1455,1514,1500,1482,1462,492,559,372,427,443,369,489,370,658,645,544,581,570,530,541,216,259,129,363,488,682,491,500,480,425,387,527,414,205,308,1738,2043,1936,1699,1720,1668,1708,1699,1702,1693,1705,1683,1783,1722,1666,1688,2048,1888,1732,1666,1695,1758,1728,1695,1773,1828,1639,1606,1024,1139,1473,1414,1930,1715,1457,1575,1481,1502,1490,1480,1490,1487,1480,1452,1492,337,251,231,177,511,452,207,252,343,438,262,413,359,309,112,163,151,397,293,463,493,285,273,368,506,537,324,321,1449,1995,2037,1673,1687,1718,1673,1698,1692,1666,1661,1688,1702,1711,1720,1868,2048,1802,1859,1783,1775,1736,1660,1724,1823,1814,1869,1417,614,495,890,1049,845,1425,1648,1700,1734,1467,1491,1509,1498,1484,1474,823,446,406,306,364,485,268,404,428,436,341,459,396,280,231,404,467,1212,1969,1771,1680,1697,1670,1677,1697,1688,1720,1975,1808,1754,1653,1726,1773,1829,1819,918,1201,1427,1502,1658,1542,1500,1504,1426,578,554,441,462,547,496,563,521,392,362,298,910,1936,1655,1652,1648,1677,1664,1980,1674,1637,1698,1462,1291,1642,1622,1530,1442,1517,1491,1495,1501,1484,1496,1484,1500,1500,1536,1470,1495,1499,1494,1399,528,488,478,292,311,477,497,346,297,479,494,511,405,370,453,393,481,410,481,316,170,152,431,254,304,203,202,295,363,286,324,285,397,256,330,441,379,386,364,383,329,496,334,371,346,285,354,390,254,432,517,444,651,1985,1919,1964,1964,1938,1656,1680,1676,1687,1678,1691,1669,1672,1720,1723,1676,1681,1665,1673,1671,1679,1662,1685,1681,1680,1667,1688,1675,1901,2048,2040,1631,1621,1619,1635,1646,1678,1812,1714,1724,1673,1706,1583,1612,1648,1693,1694,1634,993,639,704,581,659,514,1056,1294,1524,1111,1192,994,1420,1502,1449,1304,1495,1463,1381,1882,1810,1834,1813,1587,1553,1476,1469,1481,1494,1479,1505,1502,1487,1503,1504,1232,510,493,650,685,525,544,434,485,348,148,509,273,447,480,596,448,293,422,585,577,696,587,574,324,586,246,375,545,672,702,679,456,312,391,566,330,168,1276,1985,1973,1999,1711,1717,1656,1714,1696,1693,1681,1712,1703,1694,1706,1751,1691,1728,1695,1716,2016,2048,1805,1761,1724,1757,1801,1787,1751,1747,1728,1776,1786,1779,1770,1577,923,960,1141,1389,1640,1425,1535,1964,1784,1599,1571,1685,1561,1486,1486,1504,1497,1485,1498,1489,1484,1485,1496,1510,1485,1489,1463,1485,1470,1475,1482,1498,1505,1366,562,665,670,580,603,543,525,642,628,546,506,383,413,578,571,460,446,473,563,458,680,408,547,597,428,403,532,503,517,604,313,542,409,427,435,537,364,250,461,474,467,533,530,387,231,475,440,293,420,378,211,301,333,477,491,495,457,228,547,505,336,260,366,508,432,329,269,549,521,418,485,427,375,589,610,614,2036,2052,2048,2056,2048,2048,2021,1740,1726,1745,1742,1778,1774,1749,1701,1741,1721,1740,1738,1698,1724,1750,1754,1767,1743,1757,1772,1749,1754,1721,1721,1719,1780,1751,1781,1747,1737,1759,1775,1735,1745,1805,2048,2048,2048,2048,1953,1739,1799,1836,1858,1888,1789,1787,1802,1824,1794,1690,1761,1833,1810,1811,1835,1793,1835,1838,1850,1804,1744,1820,1871,1876,1852,1825,1842,1840,1864,1856,1812,1446,875,795,855,708,909,1369,1250,1487,1087,1186,1473,1204,1018,833,804,1217,1345,1531,1234,1981,1948,1871,1763,1655,1427,1641,1586,1579,1549,1492,1497,1508,1520,1514,1503,1437,1475,1491,1499,1462,1492,1485,1516,1510,1488,1496,1501,1478,1496,912,504,690,589,476,497,370,553,568,617,685,586,626,674,492,498,473,545,609,493,365,435,514,568,568,368,550,444,394,562,475,206,205,372,430,438,335,436,232,453,384,481,349,292,432,382,562,298,331,158,438,410,343,180,223,187,309,260,556,514,453,589,435,464,534,1964,1998,1929,1978,1979,1954,1641,1681,1676,1683,1658,1700,1718,1698,1679,1687,1638,1647,1687,1701,1697,1669,1709,1694,1687,1684,1665,1692,1662,1675,1676,1676,1665,1684,2048,2048,2056,1575,1705,1706,1737,1772,1793,1638,1638,1673,1792,1719,1784,1702,1735,1737,1711,1715,1696,1694,1752,1467,837,721,551,546,754,729,987,1016,950,692,738,604,726,686,690,743,646,736,476,337,718,652,996,719,576,510,648,1609,563,1600,1667,1784,1791,1783,1651,1679,1486,1629,1624,1544,1478,1485,1484,1482,1473,1472,1496,1470,1464,1469,1496,1460,1486,1463,1469,1472,1482,1483,1459,1474,1489,1488,1481,1478,1488,1499,1472,1474,1445,1485,1449,1481,1459,1464,1473,1484,1451,1453,1469,1460,1495,1490,1488,1463,1450,1477,1478,1442,1454,1420,1411,1422,1475,1492,1473,1434,1446,1484,1456,1481,1453,1491,1484,1456,1492,1427,1471,1468,1478,1482,1473,1473,1442,1421,567,521,378,621,460,486,258,507,492,297,241,640,548,452,636,445,477,631,643,495,676,464,595,552,389,489,649,583,568,462,421,479,527,548,539,436,456,568,506,526,643,572,647,533,284,327,502,465,494,572,564,682,554,502,554,472,569,396,383,534,478,449,401,545,566,346,441,480,405,577,417,540,360,589,606,574,640,585,610,526,512,548,484,592,539,288,411,334,535,447,534,514,386,302,465,446,284,457,483,492,386,333,519,608,479,539,586,386,221,473,437,223,214,383,522,523,545,376,365,471,317,330,284,365,332,590,378,436,536,455,584,615,524,541,538,585,466,398,443,469,536,598,535,487,489,509,533,344,256,452,483,429,573,520,494,578,481,325,315,561,509,497,423,436,498,424,455,637,609,449,476,479,475,464,563,623,546,385,361,532,478,393,512,651,381,347,450,298,300,230,406,370,298,386,216,529,516,617,569,450,292,370,583,524,528,439,527,493,485,506,477,455,513,319,271,403,415,591,555,533,404,418,530,522,377,594,557,478,506,467,451,537,529,394,509,496,195,166,487,581,547,604,471,516,516,489,513,378,628,1902,1932,1948,1914,1928,1944,1996,1962,1972,2018,1944,1990,1954,1935,1997,1973,1933,2000,2052,1950,1677,1630,1633,1665,1682,1715,1720,1717,1690,1664,1699,1673,1708,1670,1691,1670,1681,1676,1682,1668,1678,1685,1695,1688,1686,1695,1664,1698,1681,1675,1692,1686,1667,1682,1694,1680,1690,1668,1691,1695,1663,1653,1643,1674,1700,1648,1692,1654,1679,1639,1654,1681,1676,1651,1679,1708,1694,1685,1683,1684,1676,1656,1690,1666,1641,1707,1723,1688,1678,1662,1653,1657,1696,1660,1651,1673,1647,1635,1663,1665,1679,1662,1677,1671,1665,1681,1721,1682,1714,1685,1685,1729,1675,1660,1700,1721,1692,1694,1674,1691,1679,1670,1683,1704,1686,1667,1863,2057,2048,2048,2048,2056,2048,2048,2048,2048,2048,1878,1648,1583,1690,1749,1782,1747,1750,1725,1737,1663,1660,1655,1700,1705,1664,1731,1752,1698,1724,1719,1750,1728,1739,1660,1621,1733,1696,1738,1645,1723,1592,1681,1688,1709,1678,1586,1724,1720,1756,1762,1787,1695,1668,1707,1707,1685,1748,1723,1659,1646,1701,1769,1709,1517,1463,1559,1617,1721,1756,1632,1773,1820,1729,1720,1719,1654,1776,1801,1707,1638,1752,1711,1767,1797,1731,1713,1096,871,779,920,829,720,759,703,595,724,534,623,606,687,245,290,731,628,765,674,908,602,679,701,791,795,789,714,822,824,706,828,873,808,746,796,896,692,767,675,699,781,624,734,781,591,901,654,749,808,608,585,316,445,547,641,846,545,468,733,604,819,865,879,750,638,427,512,648,669,771,585,547,644,494,587,502,645,755,719,637,771,883,571,530,939,551,561,457,932,810,907,643,723,720,609,790,588,763,792,619,600,723,564,759,589,528,520,416,757,821,864,908,595,692,766,795,298,776,769,722,667,646,804,696,564,697,794,685,579,740,490,624,724,783,518,365,355,295,316,284,391,409,315,297,298,265,312,408,486,516,676,536,329,542,700,532,741,689,571,639,833,601,679,673,999,562,432,394,491,483,385,461,362,219,507,342,323,298,219,212,571,583,466,652,728,764,377,208,208,251,240,164,189,212,551,1233,1888,1308,1919,1886,1945,1917,1912,1930,1944,1928,1936,1965,1928,1906,1874,1793,1905,1848,1872,1535,1544,1479,1482,1473,1492,1483,1486,1493,1495,1466,451,510,457,547,454,400,514,466,472,260,448,444,524,437,438,622,271,362,457,302,406,371,372,317,433,308,480,306,256,393,419,600,1990,1931,1996,1674,1685,1716,1714,1692,1723,1671,1713,1718,1687,1688,1672,1671,1678,1767,2048,1890,1769,1714,1799,1744,1733,1746,1822,1771,1733,1710,1728,1289,781,802,1048,1550,1357,1351,1163,1595,1639,1755,1547,1474,1524,1499,1464,1442,1505,1489,1495,1494,1503,399,290,492,460,372,691,575,596,539,609,506,479,425,369,294,417,459,364,301,389,343,436,545,353,270,539,254,220,1097,2013,2042,1740,1689,1713,1709,1708,1716,1718,1679,1717,1702,1682,1711,1688,1856,2048,1709,1609,1790,1856,1843,1732,1735,1783,1846,1776,1775,1771,1032,642,856,1130,975,1338,1324,1568,1671,1721,1598,1606,1582,1500,1485,1487,1487,1481,1503,1491,1494,1471,1467,1468,1493,1467,1454,1478,1490,1485,1486,1482,1476,1449,1473,1469,1495,1471,1479,1486,1485,1472,1485,1479,1485,1505,1486,1465,1497,856,637,581,626,674,704,613,556,533,578,578,635,589,629,587,623,598,621,571,519,642,649,585,569,524,690,595,598,609,581,529,450,519,684,613,524,565,504,537,558,547,512,561,633,561,431,389,203,320,443,384,506,479,431,445,531,686,558,368,213,182,400,145,162,317,531,437,540,473,475,684,512,573,613,616,625,569,473,531,405,580,479,658,577,608,281,498,516,509,493,307,260,340,588,556,652,559,520,368,568,603,510,560,566,631,546,600,454,588,1499,2005,1992,1986,2043,1900,1967,1945,1982,2017,1715,1713,1705,1712,1707,1708,1707,1699,1708,1674,1716,1696,1683,1712,1710,1693,1692,1680,1694,1700,1641,1664,1666,1643,1684,1678,1679,1681,1706,1673,1680,1680,1691,1683,1705,1678,1669,1662,1670,1692,1678,1669,1655,1700,1659,1653,1984,2048,2048,2048,2006,1748,1770,1710,1673,1627,1717,1722,1794,1737,1754,1754,1668,1724,1699,1647,1730,1610,1700,1693,1742,1721,1688,1757,1749,1709,1609,1620,1712,1752,1702,1732,1665,1102,935,881,840,804,772,892,754,875,730,1044,1049,932,767,987,835,1312,1087,1217,1151,1039,1098,1243,1109,1108,1202,1467,1409,1365,939,1072,1307,739,860,728,505,781,520,422,696,936,1013,1168,1052,1205,828,592,537,799,1235,1034,896,1086,1439,1850,1848,1861,1866,1904,1930,1912,1947,1850,1571,1529,1487,1484,1489,1487,1486,1481,1460,1492,1499,1482,1013,446,232,448,545,348,415,487,479,392,157,147,225,306,289,382,493,331,487,441,282,359,355,471,424,262,383,340,284,451,263,419,313,362,810,1980,1981,2035,1647,1703,1653,1713,1679,1683,1700,1703,1708,1686,1699,1708,1699,1692,1690,2048,1967,1675,1690,1757,1740,1733,1780,1805,1789,1728,1743,1704,1670,636,790,1287,1516,779,738,1030,1576,1849,1799,1567,1611,1492,1483,1502,1490,1510,1495,728,502,563,621,486,434,550,448,362,424,464,442,161,323,350,505,388,291,388,411,385,269,648,1930,1956,1687,1712,1729,1679,1709,1670,1664,1689,1699,1711,2024,1826,1777,1803,1742,1753,1719,1766,1835,1596,774,768,1626,1664,1506,1379,1589,1649,1465,1475,1339,1504,1483,1473,1514,1460,1473,1471,1481,1515,1512,1488,1492,1486,1304,601,388,577,591,500,543,424,494,528,493,472,668,554,611,246,386,401,317,434,432,566,377,503,361,223,228,585,596,669,549,621,551,404,589,376,441,592,381,669,621,406,426,560,285,638,1874,1963,2030,2028,1690,1735,1695,1699,1693,1681,1678,1661,1703,1731,1664,1674,1672,1720,1722,1722,1727,1731,1728,1707,1965,2048,1942,1735,1703,1736,1724,1713,1665,1692,1677,1669,1727,1789,1775,1747,1760,1778,1260,891,781,969,1543,1634,1346,1499,1440,1612,1447,1782,1838,1767,1620,1438,1432,1486,1496,1494,1459,1497,1482,1478,1474,1476,1483,1494,1482,1474,1491,455,530,630,502,493,376,546,591,545,370,395,520,360,397,274,404,481,580,536,453,533,523,445,447,240,208,210,451,462,371,217,69,187,344,289,226,345,547,406,401,479,250,307,344,245,1669,1967,1910,2021,1767,1703,1688,1668,1686,1673,1691,1708,1690,1660,1663,1665,1703,1684,1671,1680,1667,1669,1692,1680,1907,2048,1998,1708,1709,1656,1781,1742,1737,1731,1670,1684,1695,1598,1759,1633,1695,1781,1400,670,791,448,930,874,667,815,855,845,811,505,1124,1278,1775,1710,1610,1650,1655,1507,1466,1497,1505,1505,1498,1479,1448,1479,1494,1506,1480,1529,1478,1517,1491,1501,1441,1466,1500,1532,1510,697,517,607,350,410,526,500,608,534,436,392,454,559,498,90,534,585,524,468,438,414,329,191,178,456,581,543,495,581,497,474,411,366,388,504,511,568,497,270,325,532,319,326,223,142,209,561,542,447,510,389,363,474,423,425,367,309,171,336,397,408,394,471,483,413,315,459,392,468,403,1220,2009,2048,1976,1997,2041,1909,1706,1688,1662,1665,1694,1715,1641,1680,1713,1681,1712,1710,1686,1675,1691,1673,1677,1710,1702,1699,1687,1665,1678,1672,1709,1697,1673,1687,1709,1710,1721,2005,2048,2048,2008,1653,1719,1580,1656,1772,1537,1785,1741,1781,1762,1722,1703,1751,1701,1716,1765,1701,1712,1721,1720,1870,1625,1731,1794,1825,1136,667,541,620,592,662,734,727,715,440,225,473,740,695,422,503,404,300,473,447,346,237,303,1008,1294,427,1641,1675,1764,1813,1756,1760,1558,1408,1485,1491,1528,1503,1210,494,249,228,262,432,320,159,247,246,197,488,432,349,342,468,524,1485,1981,1672,1681,1688,1709,1671,1664,1678,1858,1865,1775,1739,1784,1689,1620,1050,843,1121,1270,1649,1685,1641,1514,1508,1507,1491,1474,1494,1488,1496,1487,1476,1479,1489,1500,1495,1487,1485,1475,1506,795,612,609,596,539,520,529,546,535,517,536,580,440,611,586,504,615,423,493,570,587,517,519,594,568,322,496,563,548,353,345,494,481,490,509,406,430,447,561,424,423,630,351,591,607,601,633,406,323,650,506,450,450,622,379,617,586,574,593,586,1326,2055,2023,2045,2030,1863,1718,1710,1715,1706,1690,1710,1713,1713,1702,1674,1679,1685,1678,1707,1683,1717,1686,1705,1667,1665,1677,1657,1719,1717,1719,1783,2048,2048,1866,1766,1768,1748,1738,1630,1721,1662,1765,1798,1798,1837,1825,1691,1657,1753,1807,1804,1497,721,753,873,710,864,1644,1652,1278,1353,1723,1675,1532,1336,1072,1701,1836,1858,1741,1833,1615,1565,1522,1504,1483,1484,1476,1480,1481,1482,1468,1481,1503,1472,1488,1478,1490,1502,1515,1485,1496,1494,1498,1451,532,124,278,142,495,574,489,456,458,485,601,646,241,374,489,357,440,315,545,565,574,314,373,166,380,371,182,533,363,614,584,437,525,474,536,310,308,551,438,473,586,616,529,525,230,220,450,322,455,476,442,549,613,511,659,568,471,507,492,299,429,485,221,121,430,366,491,321,292,1504,2022,2048,2026,2042,2016,1665,1693,1694,1687,1649,1692,1666,1649,1667,1698,1686,1672,1689,1692,1719,1681,1715,1670,1684,1695,1697,1702,1695,1721,1707,1679,1694,1688,1653,1740,2048,2048,2048,1769,1742,1758,1737,1752,1722,1600,1723,1725,1659,1689,1812,1765,1811,1702,1760,1740,1672,1762,1708,1666,1589,1722,1082,859,725,757,749,748,729,708,544,736,772,988,1018,1045,843,711,898,946,1183,1007,895,1028,999,936,776,981,863,595,566,772,59,570,1219,1440,1753,1852,1822,1831,1789,1604,1508,1547,1500,1493,1487,1488,1504,1505,1480,1498,1523,1013,405,408,208,323,519,594,360,494,401,510,465,421,297,500,355,331,525,401,348,290,526,419,326,412,390,197,364,180,281,362,505,369,220,250,209,1578,1974,1958,1862,1698,1675,1694,1688,1636,1697,1670,1687,1653,1669,1696,1701,1706,1691,1683,2039,2048,1705,1744,1750,1768,1640,1774,1682,1632,1670,1767,1728,1754,1650,1207,587,674,755,1174,1156,923,1099,1718,1889,1888,1647,1501,1535,1483,1504,1497,1491,1487,1513,1498,1484,1499,1509,1487,1509,1532,1495,1482,1479,1496,1500,1510,1482,1483,1502,1492,1474,1515,1518,1517,1463,1519,1507,1482,1462,664,534,550,502,480,525,558,626,614,576,634,481,429,456,505,471,441,540,552,617,595,591,549,597,491,414,486,571,630,536,274,523,428,557,498,486,499,504,497,572,414,482,567,396,321,304,344,461,387,316,288,524,393,362,512,420,617,525,495,292,533,614,636,583,535,566,363,586,428,530,479,402,491,521,321,509,503,525,394,378,455,507,498,345,495,498,361,412,248,514,562,320,446,404,415,352,589,357,415,464,292,166,326,424,363,316,350,384,228,399,313,1234,2006,2038,2008,1975,2008,2029,1983,2048,2057,1763,1682,1683,1681,1687,1680,1677,1705,1720,1699,1705,1737,1722,1727,1701,1735,1722,1751,1747,1728,1708,1696,1699,1695,1682,1691,1669,1681,1703,1684,1715,1713,1644,1667,1689,1687,1683,1723,1707,1745,1755,1737,1733,1666,1679,1715,1698,1657,1655,1688,1865,2048,2048,2048,2048,2048,1692,1731,1682,1693,1575,1676,1770,1714,1775,1751,1764,1762,1750,1681,1703,1688,1703,1694,1729,1622,1676,1591,1644,1769,1739,1664,1741,1605,1662,1623,1709,1777,1749,1672,1838,1603,1531,1634,1075,771,763,790,860,629,713,779,636,817,913,939,949,1008,546,541,611,681,899,834,594,777,627,667,821,633,596,564,475,188,820,880,811,958,1014,1122,791,1080,879,780,699,537,1249,1420,1720,1844,1811,1863,1858,1793,1824,1906,1672,1658,1591,1493,1495,1497,1483,1505,1483,1481,1482,1477,1325,477,488,514,449,506,441,495,398,414,350,281,391,124,62,412,567,594,572,584,532,600,347,196,57,315,449,244,379,330,208,51,315,1866,2048,2050,1711,1670,1694,1694,1704,1726,1721,1724,1673,1647,1713,1699,1707,1738,1996,2048,1813,1832,1817,1800,1796,1723,1803,1766,1726,1807,1828,1853,992,762,710,908,928,609,1365,764,1270,1544,1651,1639,1485,1568,1532,1508,1514,1498,1496,1494,1492,1488,1486,1479,1496,1480,1499,1472,923,402,245,315,380,429,402,406,374,220,196,595,481,560,595,468,477,455,285,301,460,376,270,489,498,398,241,405,415,379,406,266,434,412,462,464,470,291,643,2005,2000,2053,1737,1656,1651,1699,1711,1697,1686,1709,1726,1708,1701,1688,1663,1651,1658,1661,1656,2046,2048,1607,1643,1785,1897,1879,1811,1817,1802,1846,1831,1708,1669,1636,1012,656,659,725,619,245,383,429,380,348,407,475,479,1580,1188,523,627,1515,1502,1502,1506,1694,1684,1618,1612,1532,1511,1507,1530,1514,1540,1529,1516,1494,1521,1516,1508,1508,1512,1505,1520,1528,1511,1512,1497,1509,1523,1515,1508,1502,1533,1497,1512,1530,1537,1534,1534,1515,1530,1523,1516,1507,1510,1498,1488,1499,1494,1476,1481,1493,1489,1502,1490,603,551,424,513,493,455,603,445,512,690,679,661,703,684,697,717,667,651,641,750,719,735,548,553,635,322,624,526,629,636,740,625,633,631,647,588,641,572,616,635,490,570,633,572,564,596,572,480,545,590,570,615,628,505,595,643,596,524,564,528,627,525,429,494,575,508,547,642,540,637,576,577,631,499,609,555,669,624,490,510,605,531,457,535,546,588,628,491,412,591,586,615,680,579,744,744,699,637,663,637,682,698,622,565,627,673,630,645,567,518,525,637,582,606,647,596,538,609,611,607,588,550,574,542,285,579,553,585,506,552,550,478,574,483,480,578,607,513,405,395,584,571,506,532,418,382,494,536,558,513,507,380,1205,2020,2057,2046,2042,2040,2051,2032,2056,2055,2048,2014,2052,2004,1712,1730,1680,1696,1713,1728,1701,1681,1707,1691,1700,1702,1697,1700,1697,1701,1738,1735,1703,1725,1729,1724,1747,1737,1753,1758,1765,1752,1736,1706,1689,1721,1715,1684,1685,1669,1695,1732,1700,1674,1709,1706,1691,1713,1719,1753,1745,1756,1746,1745,1715,1713,1721,1736,1719,1742,1730,1757,1740,1738,1740,1764,1746,1741,1731,1761,2032,2048,2048,2048,2048,2048,2048,1983,1708,1650,1718,1742,1704,1676,1697,1770,1705,1772,1783,1760,1849,1784,1816,1824,1775,1812,1781,1764,1761,1811,1599,1580,1698,1735,1673,1636,1612,1793,1695,1727,1719,1678,1716,1831,1817,1820,1829,1826,1807,1692,1711,1593,1654,1794,1808,1793,1804,1829,1857,1820,1778,1156,913,888,922,970,925,775,779,851,939,1152,1290,1340,1243,1157,1248,1223,1271,1338,1325,1195,1090,1257,759,718,762,906,963,972,1048,1275,1054,487,597,1545,1357,1775,1958,1695,1810,1872,1913,1824,1842,1813,1795,1888,1869,1534,1500,1542,1507,1496,1483,1505,1505,1494,1454,1553,174,89,275,164,101,265,246,463,245,327,297,321,129,403,284,173,139,140,507,396,317,170,541,399,396,448,266,168,1097,2032,2039,1777,1703,1697,1695,1729,1699,1678,1699,1727,1738,1700,1660,1683,1820,2048,1865,1791,1696,1621,1824,1700,1807,1799,1772,1885,1743,1755,739,706,1818,1406,1643,1589,1646,1529,1464,1149,1508,1497,542,455,480,523,556,469,438,1603,1730,1695,1655,1946,1786,1710,681,722,1391,1545,1484,1504,1497,1138,227,435,439,496,507,109,227,572,313,349,285,503,564,1937,1742,1664,1688,1677,1673,1652,1957,1613,1729,1773,1675,1353,753,1631,1778,1676,1498,1468,1492,1509,1479,1077,495,450,355,399,485,259,303,496,516,438,375,484,482,447,527,878,2029,1684,1663,1661,1695,1668,1675,1688,1961,1663,1713,1724,1757,1400,569,953,1256,835,1248,1631,1887,2055,2055,2039,2050,1888,1612,1588,1467,1137,819,798,763,864,916,1006,2029,1997,1961,1894,1866,610,979,1059,1460,1129,1477,1384,1329,1141,804,746,1024,1094,1251,1028,1059,772,982,880,1042,1046,1022,1074,1145,1082,903,729,717,817,980,750,880,766,761,1204,2048,1414,1078,1071,962,952,977,1119,1017,1012,893,1218,1142,811,1061,997,1008,1017,707,824,753,847,1078,1420,1494,1444,1552,1972,2048,2048,1890,1404,2026,2048,2048,2048,2034,1814,2054,1664,1936,2053,2048,2048,2048,2048,2048,2048,2056,2026,2056,2030,2029,2041,2007,1963,1821,1695,1960,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2005,1941,1830,1808,1376,1741,1923,1902,1763,1935,2048,2053,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,1531,1036,2035,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,1631,1992,2048,2048,2054,1875,1560,1389,1196,992,715,463,1957,2057,2048,2048,2055,2048,2048,2048,2055,2056,1851,1446,752,2048,2056,2024,1956,1846,1694,1514,1199,868,572,283,289,1923,2057,2048,2049,2049,2048,2048,2055,2048,2048,2057,2055,2040,1978,1818,1618,1494,1324,2032,2057,2048,2048,2048,2048,2048,2048,2048,2048,2057,2034,2044,1942,1722,1464,1036,1167,1819,1872,2020,2048,2056,2048,1935,1696,1288,945,2048,2047,2048,1899,1990,2048,2056,1794,587,71,216,33,752,2056,2048,2057,2057,2048,2057,2055,2044,1910,2051,2048,2048,2048,2014,2057,2048,2048,2048,2048,2048,2057,2048,2057,1947,1538,1971,2011,1573,1622,2048,2003,1576,1277,1533,1880,2043,2056,2048,2048,2047,2037,1859,1436,357,1037,2057,2048,2056,2050,2048,2056,2048,2057,2057,2041,2031,1834,1865,1931,1567,2000,2048,2048,2055,2048,2048,2048,2048,2048,1944,2048,2054,2048,2057,2048,2048,2048,1997,1682,1985,1964,1882,1062,2054,2056,2016,1870,1695,2048,2048,2048,2057,2048,2048,2048,2048,2056,1813,1346,1636,1937,1977,2051,2035,2050,2045,2034,2050,2051,2048,2039,2011,2013,1997,1981,1992,2053,2035,2052,2046,2038,2013,2039,2041,2037,2040,2034,2030,1926,1807,1612,1385,1289,1192,1150,1204,1082,1003,1152,996,1059,864,923,855,771,655,574,478,167,178,144,61,62,1890,2026,2052,2048,2055,1919,1748,1623,1206,856,2048,2048,2048,2048,1903,2048,2048,2048,1961,2048,2048,2048,2019,2048,2056,2048,2054,2057,2035,2048,2048,2042,2025,2050,2042,1956,1887,1850,1714,1750,1656,1887,2048,2048,2057,2055,2057,2056,1846,1932,2055,2057,2055,2055,2048,2056,2039,1919,2057,2050,1950,1546,1890,2055,2055,1552,1814,2048,2048,2048,2048,2048,2048,2054,2048,2023,1930,1714,1531,1419,1299,1187,1472,2048,2048,2048,2057,2031,1893,1712,1091,260,1018,1424,1735,1881,1960,1900,1933,2008,1926,1778,1551,1338,1135,599,379,1580,2006,2045,1467,927,1761,2048,2048,2048,2048,2048,2048,2048,2026,1975,2040,2038,1824,1526,995,1476,2048,1876,1441,1686,2048,2048,2050,2048,2055,2054,2054,2056,1934,1873,1648,2035,1596,1153,1235,2054,2048,2048,2048,2048,2048,2045,1863,1873,2048,2048,2048,2048,2048,2048,1955,1049,1455,1884,2031,2056,2056,2054,1326,1617,1891,2026,2048,2048,2048,2050,2027,1846,1334,987,804,499,394,235,114,1865,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2051,1298,2048,2048,2048,2048,2048,2048,2048,2048,1073,273,1337,1704,1957,2055,2057,2048,2048,2048,2048,2048,2048,2048,2049,1873,1627,1491,1352,1168,1073,1004,903,731,839,980,841,868,1617,2053,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1894,1270,727,680,1552,2048,2048,2048,2046,1437,1792,2036,1754,1264,1029,576,752,1102,2048,1898,1145,529,1833,1908,2004,2046,2054,2057,2057,2046,2001,1547,1764,1856,1936,1975,2054,2057,2048,2048,2057,2056,2048,2043,2008,1753,1495,837,757,1611,2053,2048,2048,2048,2048,2048,2048,2056,2053,2002,1736,1433,1059,972,189,484,2048,2033,1964,1933,1787,1692,1769,2048,2056,1778,1615,1255,1748,1764,2040,2048,1919,2038,1024,2054,1665,1863,1918,2055,1650,1909,1373,1450,1119,1678,2017,2027,1994,2014,2008,1983,1912,2048,2054,2026,1694,952,1371,2048,2048,2048,2048,2057,1137,1177,2056,2048,2056,2048,1425,369,1906,2048,2040,2048,2048,2048,2048,1951,2048,2057,1479,2052,2041,1763,2056,2048,1680,2029,2039,1439,1350,1960,1471,794,2052,2048,2057,2055,1237,122,152,1433,2048,2048,2057,2056,2056,2057,2050,1934,2048,2048,1904,2057,2056,1988,2048,2029,2048,2048,2056,1966,1974,1756,1825,1658,1653,1683,1240,1667,1703,1533,1326,1343,2053,1907,1822,1924,2048,2048,2048,2009,1418,1089,723,1511,1860,1359,1776,1811,2048,2048,2048,2048,2048,2048,2048,2056,2055,2039,2006,1793,1591,1391,1167,899,1406,2048,2048,2048,2048,2048,1468,753,2021,2048,2056,1982,1901,2025,2048,2048,2048,2048,2048,2048,2045,1955,1771,1406,712,1090,2048,2048,2048,2048,1294,175,1103,2054,2048,2048,2048,2048,2056,2048,2048,1890,1484,231,577,1407,1979,2057,2048,2048,2048,2048,2048,2056,2057,2057,2055,2000,1885,1778,1799,1705,1553,1416,1264,1227,1225,1078,739,542,562,498,447,490,405,408,433,477,425,576,476,216,404,941,1155,1181,1235,1117,1076,957,845,687,504,267,119,190,1150,1625,1871,2048,2057,2048,2006,1982,1976,1846,2029,1752,2029,1981,1615,1635,2048,2049,2041,2012,2048,2034,2034,2050,2004,1965,2034,2012,1888,2006,2051,2048,2032,1689,1853,2032,1755,1905,2045,1706,1293,1667,2048,2056,1995,1922,1908,1906,1910,1895,2034,2048,2057,2050,1855,2048,2031,1578,1538,1587,1368,1103,423,607,366,520,668,761,1142,1605,1394,1429,1337,1290,1419,1727,1719,1799,1775,1929,2020,2021,2046,2057,2051,2048,2055,2056,2053,2055,2041,1973,1980,1995,1978,1873,1754,1734,1724,1686,1668,1519,1430,1443,1415,1431,1347,1236,1188,1242,1208,1111,1060,957,931,931,1572,1417,1478,1564,1414,1444,1576,1531,1482,1576,1433,1578,1609,1715,1573,1639,1527,1505,1604,1677,1754,1760,1782,1762,1804,1850,1926,1886,1977,1936,1978,2042,2050,2048,2048,2055,2052,2051,2007,1891,1753,1584,1104,1395,1791,1989,2053,2055,2048,1335,182,1101,2048,2048,2056,1412,2051,1028,2056,2055,1558,1553,2048,2048,2048,2056,1532,2048,1963,1565,1301,2048,2057,2048,2056,2048,2048,1991,2047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,2001,2055,2048,2048,2048,2048,2006,1963,2011,2053,2048,2048,2046,2048,2048,2048,2048,2048,2048,1756,1330,2048,2049,2048,2048,2048,2045,2048,1916,1920,1813,1548,1611,1428,1722,1827,1572,1467,1374,1128,931,376,1588,2048,2048,2048,2048,1989,1640,1077,230,934,2048,2056,1994,1648,1479,1737,1848,1008,203,758,1058,375,396,404,334,378,374,375,350,775,906,847,702,489,591,1172,807,648,1474,1409,1434,1350,1193,1442,637,623,807,385,317,463,445,326,952,923,338,412,434,483,765,514,531,640,353,306,660,699,736,697,584,1106,798,594,992,808,574,962,535,595,631,824,944,528,286,263,247,265,328,466,292,251,207,391,653,664,803,595,430,200,481,573,540,428,418,486,487,254,491,804,266,258,489,403,887,933,666,116,189,279,272,711,326,378,276,479,222,711,338,281,1046,830,192,302,407,375,335,227,267,338,761,680,547,405,719,430,549,424,353,775,482,325,529,709,952,262,213,300,434,818,373,596,544,411,588,574,378,589,234,462,467,512,593,311,711,549,571,200,665,746,640,806,1198,1037,1098,1058,1061,1160,386,347,1149,1086,1040,788,513,1330,417,469,324,129,388,210,207,139,240,248,498,135,133,133,275,494,646,330,653,524,465,864,568,493,252,317,578,274,315,318,750,418,563,315,423,288,265,303,663,191,296,225,185,331,186,459,290,360,178,221,212,213,494,324,510,428,697,1055,362,441,512,510,704,633,332,567,1038,763,864,690,461,354,346,380,406,398,404,282,234,268,165,213,656,743,905,783,526,675,434,387,486,236,518,767,217,368,247,530,873,786,811,540,415,627,241,398,184,343,240,502,431,623,459,641,470,593,723,547,65,318,449,622,801,432,426,266,400,360,355,338,1169,1291,1190,1398,998,1367,1993,1932,508,125,143,428,572,155,194,119,470,189,396,633,400,1064,841,670,221,351,391,214,382,247,185,255,198,494,412,537,503,537,637,701,915,174,525,183,312,411,452,368,270,237,502,312,327,237,295,172,299,516,233,384,212,511,425,387,127,394,610,534,563,217,266,456,378,450,254,471,661,334,804,423,522,601,434,535,948,193,165,137,135,142,157,280,258,149,162,170,183,310,154,128,378,235,342,809,110,199,304,184,400,373,419,475,444,211,206,180,469,269,433,665,211,400,190,205,199,395,117,450,564,172,191,310,190,305,120,125,628,546,501,346,451,423,222,263,170,577,319,215,842,277,402,345,419,388,595,802,655,943,897,732,1503,1089,1140,1305,1363,1438,1476,1462,1506,1533,1530,1531,1488,1509,1491,1511,1599,1482,1554,1467,1520,1527,1441,1344,1315,1213,1258,1384,1342,1228,1186,1118,1067,1346,1396,1702,1872,1709,1762,1754,1660,1711,1728,1712,1699,1743,1697,1705,1758,1758,1771,1688,1703,1622,1680,1660,1672,1713,1692,1734,1701,1709,1633,1631,1671,1663,1600,1574,1652,1852,1605,1711,1683,1587,1669,1656,1725,1718,1803,1840,1805,1807,1824,1807,1725,1768,1662,1759,1819,1852,1774,1649,1734,1853,1720,1761,1769,1759,1699,1672,1639,1636,1612,1776,1627,1639,1596,1590,1659,1652,1636,1716,1685,1713,1651,1721,1705,1758,1725,1626,1759,1722,1693,1728,1687,1639,1677,1689,1627,1647,1591,1603,1538,1521,1522,1452,1754,1116,1105,847,728,778,1307,1408,1482,1316,1145,1127,1177,1137,1344,1399,1268,1289,1283,1254,1193,966,883,738,877,904,758,621,814,1043,1122,1049,1201,1492,1596,1430,1477,1372,1589,1425,1417,1549,1472,1407,1319,1317,1260,798,238,213,223,222,221,867,1511,1549,1285,1473,1674,1426,1110,1426,1134,732,1352,1393,964,1544,1672,1295,1650,1426,1608,1501,1413,1366,1620,1415,1336,1616,1676,1439,1454,1265,1587,1354,1612,1251,1653,1669,1633,1707,1473,1473,1751,1221,1619,1227,1671,1394,1302,1513,1637,1690,1495,1323,1600,1414,1492,1573,1550,1609,1461,1238,1683,1523,1606,1611,1368,1427,1593,1693,1258,1507,1046,1527,1483,1542,1159,1496,1449,1622,1625,1598,1242,1554,1282,1472,1073,1506,1395,1696,1091,1577,1537,1388,1398,1404,1571,1605,1578,1644,1539,1467,1363,1692,1566,1685,1362,1841,1302,1859,1364,1614,1230,1789,1655,1380,1636,1376,1800,1342,1414,1800,1764,1177,1598,1731,1738,1699,1513,1703,1683,1615,1508,1723,1751,1352,1598,1235,1623,1464,1668,1426,1725,1640,1721,1439,1660,1444,1854,1443,1807,1535,1880,1892,1895,1929,2051,2001,2051,2029,2021,2013,2035,2018,2031,2025,2052,2049,2041,2038,1998,2023,2002,2024,2022,2051,2055,2056,2042,2043,2051,2018,2026,2018,2048,2051,2032,2043,2056,2038,2010,2028,1885,1987,2029,2035,2057,2048,2027,2023,2049,2014,1994,1984,1989,1982,2016,1989,2028,2031,2023,2050,2032,1993,1964,2009,2009,1991,1996,2051,2014,2024,2048,2030,1999,1955,2005,2011,1984,2018,2041,2047,2049,2037,2018,1969,1988,2023,2024,2034,2033,2047,2053,2048,2039,2030,2048,2025,2041,1998,2051,1991,2035,2003,1919,1982,1957,1988,1974,2014,1948,1966,1989,2001,1963,1956,2012,1993,1976,1917,1973,1960,1985,1984,2000,1938,1987,2010,1963,1937,2006,1970,2006,1946,1978,2011,1974,1990,1951,1974,2012,2012,1995,2004,2000,1972,2010,1959,2017,1898,1993,1969,1984,1998,1978,1975,1948,1985,1986,2011,1958,2029,2009,2002,1990,2024,1996,2005,1998,1973,1998,1963,1967,2014,1996,1968,1929,2005,2015,1967,1972,2036,2044,2019,1975,2020,2015,1940,2054,1999,2021,2021,2040,2004,2022,2024,2004,1998,1971,1975,1998,2039,1985,1973,1857,1972,2054,2048,2033,1943,1988,1906,1910,1769,1883,1879,1931,1779,1912,1821,1971,2007,1968,1861,1919,1939,1857,1863,1847,1988,1942,1952,1929,1952,1894,1924,1882,1877,1990,1953,1954,1969,1788,2008,1822,1899,1822,1905,1958,1972,1900,2029,1955,1907,1855,1857,1905,1882,1953,1955,1909,1929,2000,1951,2012,1707,1970,1732,2001,1955,1948,1946,1859,1978,1935,1961,1830,2006,1955,2006,1774,1705,1854,1737,1897,1866,1879,1831,1816,1913,1826,1961,1926,1908,1927,1918,1857,1945,1909,1944,1891,1917,1873,1953,1910,1978,1905,1933,1886,1897,1905,1850,1891,1782,1913,1930,1800,1928,1565,1760,1389,1704,1814,1761,1842,1964,1929,1978,2008,2017,2007,1902,1975,2004,1940,1972,1981,1824,1428,1415,1393,1437,1470,1489,1431,1550,1512,1431,1522,1683,1778,1668,1607,1904,2000,2002,1916,2022,1969,1829,1945,1904,2001,1992,1941,1964,1929,1964,1822,1871,1964,2011,2011,1911,2009,1904,1972,1872,1877,1978,1959,2015,1901,2032,1923,1933,1886,1852,2012,1913,2028,1886,1981,1841,1912,1894,1858,1972,1957,2015,1898,1964,1940,1870,1901,1870,1997,2006,2010,1936,1994,1927,1846,1923,1935,1948,1960,1908,1960,1938,1922,1962,1930,1898,1731,1726,1659,1656,1656,1696,1745,1733,1693,1658,1710,1731,1704,1737,1704,1642,1678,1714,1681,1717,1714,1725,1641,1615,1656,1721,1743,1775,1698,1615,1588,1641,1757,1741,1652,1632,1620,1653,1670,1766,1737,1734,1662,1627,1639,1766,1797,1774,1645,1612,1630,1770,1872,1867,1772,1715,1766,1784,1839,1883,1864,1790,1783,1825,1760,1787,1725,1703,1665,1696,1736,1678,1578,1739,1732,1712,1625,1844,1650,1652,1767,1745,1505,1721,1734,1678,1661,1767,1775,1778,1671,1787,1797,1798,1663,1738,1759,1710,1751,1730,1737,1979,1908,1988,2005,2004,1957,1904,1943,1931,2002,1985,1978,2004,1987,1977,1999,1979,1993,1978,1981,1970,1998,2007,1993,1981,1958,1997,1970,1947,1976,2027,2001,1998,1962,1981,1957,1994,1978,1979,1972,1972,1970,1970,1975,1964,1979,1958,1979,1957,1978,1948,1981,1943,1960,1960,1960,1965,1964,1980,1971,1950,1954,1951,1961,1954,1958,1952,1966,1953,1964,1956,1963,1958,1965,1963,1973,1897,1921,1906,1903,1909,1928,1888,1910,1900,1888,1943,1896,1909,1903,1920,1892,1929,1872,1895,1927,1840,1883,1941,1846,1868,1951,1841,1852,1956,1840,1833,1963,1855,1814,1963,1837,1821,1970,1831,1833,1965,1822,1844,1892,1815,1812,1883,1779,1841,1894,1765,1851,1893,1735,1873,1895,1765,1882,1880,1778,1890,1851,1782,1901,1821,1844,1912,1828,1851,1911,1805,1885,1869,1835,1915,1843,1843,1911,1814,1884,1890,1826,1906,1860,1836,1905,1848,1915,1871,1862,1917,1874,1852,1909,1883,1848,1905,1878,1847,1909,1877,1852,1915,1882,1848,1900,1886,1849,1902,1885,1860,1914,1908,1838,1915,1910,1843,1917,1888,1849,1928,1870,1853,1919,1856,1861,1924,1868,1877,1900,1854,1856,1919,1850,1836,1945,1920,1912,1916,1915,1918,1913,1925,1925,1925,1916,1911,1929,1910,1926,1908,1920,1922,1976,1992,1998,1984,1978,1994,1995,1986,1972,1981,2019,1901,1953,1904,1899,1885,1928,1900,1932,1854,1892,1896,1882,1953,1970,1986,1966,1972,1947,1980,1966,1935,1991,1927,1986,1933,1969,1934,1967,1895,1972,1821,1987,1846,1939,1881,1899,1880,1898,1937,1845,1981,1834,1971,1857,1920,1903,1837,1860,1813,1912,1793,1931,1815,1876,1852,1850,1890,1817,1928,1788,1899,1862,1843,1862,2017,2046,2030,2013,2020,1995,2033,2017,2021,2038,2029,2053,2047,2037,2017,2012,1835,2013,2009,2057,2045,2056,2031,2035,2030,2014,2034,2011,2039,2038,2048,2056,2034,2030,2051,2023,1963,1914,2017,1996,2023,2048,2031,2018,2007,1995,1992,1995,1967,1990,2020,2044,2016,2014,2013,2026,1977,2009,1993,1966,1980,2017,2041,2013,2018,2021,2000,1971,1996,1992,1965,1974,2030,2035,2009,2048,2044,2027,2016,2011,2014,2007,1948,2026,2037,2048,2046,2052,2048,2046,2042,2025,2027,2037,2045,2052,2016,2019,1978,2008,1978,2007,1998,1961,1994,2007,1950,2004,1981,1950,1937,1982,1988,2013,1959,2002,2009,1932,1932,1963,1938,1768,1908,2011,2003,1949,2004,1989,1994,1956,1982,1994,1964,1909,1898,1908,1963,1961,1940,1896,1952,1996,1945,1935,1838,1891,1982,1997,1910,1858,1910,1969,1945,1873,1874,1894,1845,1893,1961,1944,1924,1946,1864,1894,1864,1882,1977,1904,1973,1957,1898,1869,1891,1888,1952,1990,1956,1897,1815,1822,1877,1923,1978,1881,1866,1814,1693,1921,1935,1894,1904,1910,1839,1877,1919,1850,1870,1892,1877,1837,1880,1799,1835,1988,1949,1915,1924,1904,1850,1841,1874,1838,1838,1923,1998,1943,1911,1972,1813,1889,1958,1933,2009,2026,2011,1952,1886,2004,1975,2018,1954,1973,1929,2052,2013,1978,1890,1962,2001,2015,1999,1978,1983,2015,2011,1977,1974,1963,2019,2006,2016,1987,1934,1976,1975,1958,2015,1953,2019,2045,2024,1976,2005,1906,2022,2003,1988,1966,2017,2021,2018,1917,1765,1791,1907,2014,2001,1970,2015,1996,1965,1980,1944,1960,1959,1899,1946,1963,1985,1915,2001,1976,2029,2000,1988,1966,1926,1996,1975,1971,1839,1948,1933,1961,1894,1888,1973,1952,1888,1914,1987,1988,2005,1982,1997,2015,2002,2037,1913,1922,1973,1929,1697,1910,1953,1937,1942,1943,1947,2011,1990,2003,1998,1969,1964,2027,1988,2003,1985,1948,1921,1972,1936,1978,1944,1970,1984,1992,2020,2021,1991,1983,1981,2019,1975,1976,1960,1984,1962,1988,1955,1929,1993,1959,1993,1973,1922,2006,2019,1981,1960,1956,1943,2037,1951,1991,2028,1971,2002,2002,1964,2017,1982,1961,2030,1916,2047,1965,1932,1996,1941,1984,1993,2004,1962,1900,1960,1997,1938,1951,1993,1952,1918,1965,1984,2004,1996,1946,1960,1953,1963,1979,1914,1942,1957,1836,1863,1963,1966,1900,1891,1929,1913,1986,1939,1907,2005,1992,1937,1983,1982,1917,2032,1848,2004,1977,1969,2006,2000,2023,2035,2025,1875,2013,1983,2002,2026,2026,2055,2031,2022,1949,2010,2003,1984,2031,2028,2028,2004,2035,1993,2043,2017,2016,2039,2031,2056,2039,2045,1984,2016,2014,1989,2037,2026,2047,2050,2035,1980,2034,1973,2056,2048,2030,2050,2035,2038,1939,1955,1960,1969,1867,1998,1969,1979,2005,1995,2034,2021,1939,1983,1984,2026,1922,2002,1926,1919,1998,2003,2028,1955,2000,1935,1869,1992,1981,1610,1845,1812,1669,1622,1660,1526,1802,1330,1510,1529,1404,1595,1271,1475,1470,1157,1542,1153,1423,1300,1204,1466,1132,1441,1167,901,1587,1354,1210,1223,1277,1425,944,1287,1388,1144,1608,1092,1365,1179,1469,1339,1218,1460,1510,1166,1623,1434,1491,1590,1366,1628,1301,1496,1548,1161,1626,1164,1413,1173,1526,1289,1330,1395,1071,1105,1542,1456,1112,1248,1318,1415,943,1306,1473,1158,1550,1098,1369,1071,1651,1194,1434,1448,1419,1420,1488,1589,1445,1577,1458,1328,1424,1530,1394,1177,1647,1243,1331,1160,1608,1222,1391,1347,1003,1295,1463,1414,1081,1309,1425,1196,981,1288,1398,1150,1548,1095,1418,1143,1597,1272,1458,1455,1397,1472,1445,1556,1462,1563,1562,1209,1491,1479,1224,1354,1524,1309,1373,1173,1553,1173,1415,1329,892,1520,1315,1334,1175,1239,1582,882,1167,1429,1160,1537,1012,1352,1310,1255,1426,1178,1440,1504,1239,1609,1450,1497,1557,1326,1645,1263,1506,1519,1280,1656,1140,1385,1297,1303,1464,1267,1475,1114,955,1640,1379,1218,1216,1314,1571,891,1247,1457,1175,1624,1026,1354,1129,1598,1228,1391,1459,1439,1297,1500,1559,1433,1576,1437,1453,1350,1492,1495,1229,1640,1167,1435,1143,1612,1136,1421,1285,952,1249,1421,1447,1086,1288,1494,1136,1023,1315,1324,1180,1534,1145,1383,1125,1609,1272,1428,1492,1418,1354,1472,1604,1498,1602,1501,1309,1488,1566,1360,1093,1700,1148,1372,1145,1590,1151,1299,1375,1032,1140,1508,1461,1076,1289,1495,1103,1030,1314,1260,1035,1557,1105,1390,1132,1641,1159,1350,1505,1452,1385,1556,1582,1497,1544,1592,1370,1429,1551,1428,1079,1691,1224,1332,1169,1553,1249,1247,1381,1114,915,1585,1458,1203,1223,1302,1448,889,1267,1411,1127,1579,1073,1318,1306,1571,1305,1205,1534,1550,1373,1652,1433,1520,1547,1426,1705,1234,1517,1514,1237,1534,1315,1367,1382,1183,1539,1222,1486,1219,839,1684,1293,1272,1230,1185,1656,840,1266,1439,1272,1581,1094,1319,1238,1370,1539,1278,1464,1516,1244,1690,1460,1549,1606,1388,1713,1293,1552,1530,1213,1607,1286,1415,1389,1157,1573,1238,1500,1235,846,1664,1274,1295,1238,1221,1618,929,1143,1419,1435,1374,1381,1236,1401,1297,1648,1217,1511,1571,1302,1629,1513,1675,1552,1581,1535,1453,1207,1226,1287,1454,1550,1629,1459,1335,1205,1522,1535,1382,1713,1587,1344,1283,1395,1477,1411,1689,1573,1463,1381,1259,1509,1409,1367,1612,1634,1575,1467,1208,1359,1371,1235,1468,1682,1297,1087,1313,1302,1713,1395,1275,1482,1653,1145,1686,1704,1872,1943,1901,1799,1938,1812,1761,1821,1909,1802,1820,1661,1284,1689,1699,1757,1737,1710,1673,1482,823,1286,1983,2031,1821,1576,1137,1219,1804,1513,1738,1726,1947,1702,1803,1761,1883,1733,1751,1904,1896,1857,1652,1702,1984,1619,1977,1865,1940,1972,1962,1929,1836,1805,1601,1867,1805,1908,1911,1819,1656,1700,1477,1642,1780,1659,1597,1675,1590,1396,1678,1764,2008,2008,1965,1896,1997,2030,1998,1942,2038,2028,2008,1948,2001,2036,1966,1983,1940,1959,1883,1981,1954,1972,1932,2025,2008,2004,2001,2008,2035,2001,1981,1854,1980,2053,2054,2033,1988,1933,1836,1585,1972,1855,1946,1906,1897,1942,1891,1907,1876,1904,1932,1859,1902,1975,1879,1931,1935,1888,1889,1289,1653,1936,1706,1532,1484,1249,1534,1755,1617,1610,1828,1586,1576,1580,1587,1526,1623,1642,1642,1565,1297,1270,1646,1631,1309,1304,1982,1853,1780,1759,1791,1712,1776,1874,1738,1674,1667,1742,1645,1621,1840,1764,1253,1520,1670,1471,1474,1233,1336,1769,1494,1254,1178,1385,1712,1336,1551,1965,1999,1976,1977,1975,1920,1834,1562,1915,1905,1912,1612,1810,2007,1884,1879,1871,1791,1835,1925,1616,1932,1542,1425,1686,1505,1404,1512,1647,1401,1741,1378,1726,1462,1707,1606,1847,1515,1702,1584,1733,1500,1423,1617,1509,1876,1250,1244,1407,1711,1854,1831,1719,1428,1474,1627,1780,1536,1451,1655,1605,1674,1676,1518,1584,1666,1593,1417,1561,1441,1675,1631,1491,1572,1547,1644,1617,1514,1178,1594,1507,1292,1327,1369,1216,1289,1374,1530,1228,1221,1423,1386,1266,1438,1384,1289,1600,1581,1559,1866,1470,1494,1885,1836,1872,1882,1538,1946,1783,1645,1877,1617,1888,1233,1858,1912,1438,1683,1736,1687,1680,1587,1456,1620,1465,1601,1523,1522,1596,1548,1498,1430,1590,1526,1534,1423,1599,1466,1825,1886,1821,1869,1857,1816,1478,1498,1578,1520,1844,1966,1917,1840,1914,1897,1875,1960,1100,539,565,481,743,659,545,506,706,1742,1995,1991,1966,1924,1960,1974,1966,1944,1653,1659,1623,1653,1789,1552,1755,1584,1635,1545,1557,1659,1505,1501,1472,1366,1498,1350,1575,1516,1292,1133,1421,1339,1579,1455,1424,1347,1593,1474,1598,1448,1386,1372,1396,1436,1432,1404,1407,1883,1777,1815,1875,1888,1915,1803,1741,1822,1657,1692,1801,1840,1834,1736,1723,1683,1148,838,773,863,1449,1695,1710,1614,1630,1677,1583,1555,1649,1775,1662,1690,1641,1657,1823,1797,1893,1460,1787,1458,1708,1655,1776,1543,1588,1988,1638,1834,1832,1860,1488,1852,1838,1787,1062,1069,937,1088,1059,1084,992,1069,1659,1555,1585,1524,1578,1559,1545,1500,1688,1420,1512,1635,1645,1299,1092,986,1008,1310,1427,1565,1768,1642,1462,1121,1411,1564,1144,1234,1533,1543,1428,1600,1608,1527,1569,1633,1493,1276,984,831,1027,528,998,742,955,1479,1407,864,531,875,552,825,507,597,832,690,887,473,844,700,894,522,512,931,685,840,496,865,707,789,549,476,866,591,810,284,549,199,203,601,196,621,231,612,198,370,288,162,488,39,553,184,546,245,152,1509,1415,1431,1195,1249,1203,1407,965,1010,989,1005,963,957,1009,974,1525,1371,1394,1446,1514,1500,1380,1354,1563,1438,1503,1501,1584,1593,1507,1524,1492,1580,1407,1425,1393,1403,1475,1418,1418,1546,1396,1415,1369,1381,1132,935,974,940,1106,921,958,939,1060,907,932,926,907,1461,1380,1398,1394,1178,923,944,950,1393,1604,1567,1577,1538,1543,1577,1632,1604,1561,1323,1353,1336,1265,1321,1291,1341,1517,1561,1500,1298,1568,1261,1276,1256,1566,1647,1710,1578,1565,1540,1829,1734,1806,1574,1204,1185,1505,1430,1524,1224,1248,1396,1438,1619,1458,1521,1472,1388,1697,1706,1641,1681,1550,1666,1640,1644,1784,1611,1703,1669,1606,1573,1654,1648,1532,1721,1663,1586,1671,1483,1640,1611,1644,1664,1577,1704,1685,1667,1583,1647,1662,1531,1792,1655,1621,1628,1782,1734,1610,1620,1617,1828,1671,1672,1681,1732,1730,1654,1693,1650,1273,964,955,954,1348,1523,1546,1479,1616,1345,1354,1351,1270,1288,1156,1213,1245,1300,1258,928,955,1383,1198,1155,1105,1153,1170,949,975,930,1574,1523,1507,1549,1486,1499,1505,1549,1665,1408,1386,1388,1385,1360,1388,1357,1364,1693,1545,1531,1548,1569,1536,1530,1534,1601,1734,1619,1619,1644,1610,1598,1588,1653,1778,1482,1418,1412,1410,1490,1437,1386,1449,1898,1756,1710,1687,1749,1734,1700,1686,1897,1755,1711,1689,1681,1727,1674,1665,1677,1401,980,1217,1045,1101,1059,1216,1176,1107,1064,934,862,634,723,672,1558,1674,1731,1678,1720,1692,1735,1729,1716,1871,1741,1676,1614,1714,1682,1741,1702,1888,1745,1767,1776,1730,1804,1756,1788,1724,1884,1726,1677,1615,1690,1648,1719,1666,1727,1455,1505,1396,1585,1023,1015,1035,1018,1827,1810,1823,1836,1665,1846,1785,1826,1799,1451,1187,1213,1504,1555,1016,1047,1260,1751,1601,1644,1590,1537,1666,1624,1582,1704,1566,1470,1398,1494,1399,1474,1410,1437,1466,1753,1399,1705,1357,1492,1439,1482,1393,1722,1640,1612,1608,1530,1597,1611,1584,1693,1540,1479,1452,1380,1512,1443,1461,1460,1720,1811,1822,1860,1679,1841,1796,1829,1816,1667,1636,1626,1731,1555,1655,1607,1689,1619,1485,1441,1471,1389,1487,1444,1453,1519,1858,1811,1857,1896,1698,1837,1791,1873,1682,1629,1638,1594,1556,1671,1642,1599,1658,1638,1448,1429,1481,1396,1497,1433,1424,1544,1852,1803,1863,1760,1856,1801,1881,1839,1328,966,1770,662,674,1182,676,967,847,708,1401,1147,633,731,1109,1299,937,1241,1383,1271,590,1174,1329,1105,1366,1231,1743,1080,1043,953,1581,1579,1579,1749,1643,1742,1535,1747,1508,1512,1224,768,1271,1551,1512,1016,997,1019,1016,1349,1090,1020,1111,1323,1848,2033,2025,2018,2022,2043,2027,1972,2010,2031,2031,2007,1990,2012,2015,2008,1984,2023,2030,2022,2011,2022,2029,2014,1945,2029,2037,2032,1995,2003,2014,1995,2011,1966,2042,1943,1904,1909,1885,1898,1916,1831,1864,1898,1903,1867,1893,1815,1873,1846,1884,1927,1704,1659,1677,1671,1663,1652,1667,1612,1783,1652,1673,1656,1622,1664,1650,1613,1643,1585,1452,1436,1423,1400,1432,1415,1368,1546,1542,1525,1461,1532,1334,1565,1489,1632,1419,1486,1484,1681,1428,1471,1549,1636,1423,1297,1478,1484,1984,1709,1523,1660,1610,1567,1534,1605,1708,1537,1573,1624,1663,1741,1639,1588,1533,1654,1548,1564,1549,1548,1539,1586,1524,1397,1637,1468,1720,1560,1642,1541,1701,1652,1629,1761,1739,1466,1688,1922,1861,1703,1726,1876,1946,1931,1947,1980,1952,1929,1913,1920,1830,1841,1869,1960,1882,1848,1868,1826,1793,1787,1781,1756,2014,1965,1966,1966,1918,1920,1901,1885,1982,1963,1896,1893,1857,1813,1824,1830,1782,1989,1973,1981,1972,1951,1936,1933,1905,1958,1939,1824,1818,1742,1777,1764,1766,1761,1894,1835,1854,1763,1789,1832,1815,1801,1773,1726,1429,1444,1462,1415,1445,1413,1392,1560,1954,1938,1941,1979,1961,1907,1900,1916,1897,1858,1907,1993,1937,1930,1905,1901,1879,1954,1880,1929,1737,1483,1542,1620,1599,1599,1583,1487,1805,1793,1806,1791,1736,1768,1743,1717,1716,1630,1350,1300,1296,1410,1284,1312,1340,1534,1496,1474,1489,1561,1575,1521,1472,1462,1643,1695,1476,1653,1616,1619,1563,1528,1386,1340,1329,1248,1287,1164,1282,1680,1899,1860,1881,1904,1894,1882,1859,1869,1953,1902,1867,1878,1879,1882,1895,1872,1941,1415,1426,1376,1386,1465,1475,1456,1460,1761,1661,1706,1746,1700,1602,1596,1550,1665,1553,1550,1609,1608,1701,1725,1696,1644,1715,1453,1465,1480,1445,1386,1382,1408,1484,1573,1487,1495,1550,1113,1532,1495,1452,1668,1490,1535,1493,1442,1485,1478,1520,1514,1982,1961,1918,1727,1425,1407,1421,912,1422,1402,1406,1584,1159,1163,1119,1117,972,1086,1160,1160,1512,1442,1442,1851,1902,1884,1915,1888,1907,1893,1921,1705,1618,1530,1476,1523,1438,856,991,770,975,779,990,684,906,890,950,821,813,963,938,1030,880,1420,1250,1303,1260,934,351,561,455,496,220,539,574,1358,987,794,808,1090,1337,724,1342,865,163,418,274,356,1279,1351,1550,1626,1837,1736,1824,1825,1814,1769,1761,1784,1776,1630,1657,1572,1624,1582,1651,1589,1592,1435,1313,1325,1312,1567,1673,1667,1661,1640,1702,1663,1675,1692,1662,1663,1689,962,1555,1831,1869,1778,1804,1818,1869,1827,1747,1655,1451,1466,1455,1606,1869,1826,1892,1857,1852,1887,1841,1856,1851,1073,1744,1309,1148,1238,1073,1122,2052,2003,2003,1916,1959,1954,1900,1907,1881,1951,1952,1971,1889,1907,1904,1936,2004,1811,1665,1757,1793,1819,1779,1695,1601,1836,2056,2056,2045,2043,2049,2037,2048,2050,2048,2052,2046,2042,2049,2045,2041,2042,2052,1870,1919,1853,1865,1824,1861,1825,1877,1940,1902,1877,1851,1851,1823,1865,1842,1932,1338,1542,770,810,786,705,716,497,803,890,790,389,639,803,853,688,395,723,839,869,521,489,777,806,934,489,575,1255,1043,1147,577,572,1234,1091,1126,384,814,1137,1065,974,391,1038,1107,1080,755,1344,1266,1574,1295,1739,1458,989,1173,1127,1148,1164,1092,1071,1104,1153,1125,1197,1188,1091,1078,1026,1115,1505,1111,1119,1182,1071,1071,1112,1025,1048,1001,878,1014,1059,856,876,793,865,1363,432,533,509,541,564,472,569,557,457,514,459,524,526,545,577,496,1393,1468,1506,1489,1552,1496,1501,1520,1515,1140,980,991,1417,1583,1408,1387,1306,1346,1474,1732,1647,1653,1658,1611,1618,1666,1635,1665,1709,1467,1501,1535,1478,1514,1499,1458,1632,993,1129,1249,1329,1330,1286,1300,1118,1369,1443,1401,1436,1528,1495,1552,1555,1673,1395,967,1160,1114,1123,1152,1103,1086,1124,1170,1125,1163,1197,1070,1045,1023,1205,1409,1110,1096,1189,1030,1044,1115,1079,1006,998,909,1012,1041,842,846,809,844,1342,410,560,515,559,557,455,564,564,464,517,475,501,500,532,558,507,1675,1804,1786,1803,1794,1795,1722,1799,1393,1423,1393,1393,1603,1275,1221,1206,1496,1459,1331,1289,1514,1351,1011,1013,963,1444,1692,1494,1693,1672,1370,1174,1146,1172,1452,1308,1744,1663,1594,1693,1687,1588,1676,1627,1693,1210,1370,1453,1478,1966,1669,1981,1759,1732,1636,1718,1720,1625,1761,1759,1720,1568,1501,1525,1544,1595,1504,1586,1322,1697,1621,1610,1587,1578,1581,1588,1610,1806,1420,1740,1800,1521,1387,1730,1807,1588,1710,1075,1084,1135,1161,1159,1129,1062,1155,1087,1157,1138,1217,1140,1082,1045,1119,1324,994,1260,1097,919,649,1099,1232,1123,992,928,1246,1133,939,526,1163,1231,1194,967,824,1198,1101,997,432,1193,1185,1166,994,810,1145,1157,1074,423,1180,1127,1159,943,807,1086,1237,1126,407,1089,1207,1119,887,1406,1111,1096,1196,1030,1066,1109,1084,1019,996,901,1025,1044,839,844,801,843,1017,1203,1200,1142,401,949,1208,1136,970,1265,1111,1243,1128,1206,1194,1132,1213,1191,1271,1131,1099,1197,1188,1275,1136,1129,1241,1141,1347,1211,1032,1002,1132,1295,1141,1008,1034,1097,1355,1095,983,1046,1262,1243,1030,1011,1083,1428,789,464,553,1207,1513,1756,1851,1862,1846,1614,1392,582,495,513,519,567,822,1361,1058,1255,1503,1208,1079,1414,1413,1067,1237,1487,1211,1056,1359,1867,1865,1715,1714,1903,1688,1833,1891,1694,1883,1718,1849,1750,1843,1751,1790,1858,1764,1772,1875,1736,1850,1750,1749,1927,1695,1831,1779,1863,1734,1870,1738,1733,1904,1668,1803,1888,1706,1834,1809,1831,1719,1856,1759,1767,1900,1735,1737,2006,1733,1801,1799,1754,1993,1802,1828,1675,1892,1744,1858,1784,1746,1885,1665,1824,1878,1782,1759,1818,1837,1704,1833,1878,1716,1904,1733,1766,1446,1173,1237,1165,1293,1105,1185,1173,1114,502,789,912,791,392,684,786,855,682,397,741,855,838,508,502,774,837,922,501,1526,962,1137,1144,1131,1182,1098,1093,1084,1153,1163,1169,1174,1117,1091,1061,1098,1558,1481,1606,1069,1078,1171,1102,1034,1079,1045,1037,1027,864,1042,1061,959,890,762,882,1421,1450,1415,1324,418,562,508,560,559,474,565,541,465,510,466,502,516,532,574,506,1600,1648,1669,1576,1711,1655,1656,1665,1693,1690,1757,1642,1626,1603,1665,1611,1095,458,941,744,423,302,804,967,2043,2034,2003,2026,2027,2001,1993,1966,2027,2022,2040,2020,2007,2016,2015,1957,2007,1424,1333,1608,1552,1398,1236,1361,1120,1120,1122,1127,1122,1122,874,71,728,1979,2055,1850,1879,1915,1854,1849,1876,1904,1869,1942,1931,1941,1941,1869,1903,1916,1918,1877,1771,1994,1899,1883,1916,1907,1855,1763,1818,1757,1881,1895,1919,1883,1855,1882,1906,1904,1851,1989,1775,1880,1870,1914,1846,1700,1803,1445,1518,1616,1633,1595,1541,1430,1548,1610,1634,1631,1547,1489,1593,1567,1515,1875,1635,1525,1544,1660,1940,1829,1796,1767,1853,1854,1835,1842,1890,1483,1292,1296,1347,1323,1369,1307,1264,1599,1477,1461,1441,1462,1478,1442,1455,1428,1635,1448,1458,1434,1507,1451,1453,1431,1593,1457,1467,1451,1459,1518,1479,1461,1422,1628,1422,1422,1405,1522,1437,1441,1415,1570,1411,1397,1363,1425,1475,1454,1409,1402,1593,1430,1375,1428,1468,1465,1428,1379,1494,1538,1379,1398,1450,1448,1446,1401,1382,1631,1412,1394,1453,1489,1449,1455,1406,1431,1653,1457,1435,1489,1474,1510,1485,1372,1626,1339,1312,1320,1372,1325,1359,1350,1263,1550,1332,1298,1345,1379,1336,1304,1308,1529,1318,1303,1307,1372,1302,1346,1330,1261,1618,1440,1428,1453,1467,1506,1448,1427,1529,1512,1388,1417,1512,1458,1478,1438,1406,1644,1390,1381,1423,1441,1479,1422,1399,1423,1607,1398,1405,1480,1482,1446,1404,1401,1599,1425,1386,1386,1432,1484,1443,1410,1389,1658,1407,1426,1422,1522,1441,1431,1424,1630,1672,1819,1791,1725,1894,1626,1785,1862,1816,1817,1740,1547,1874,1727,1770,1700,1805,1826,1846,1908,1834,1902,1888,1845,1898,1943,1828,1823,1771,1840,1796,1775,1773,1844,1874,1782,1766,1733,1791,1742,1716,1740,1900,1810,1823,1720,1775,1751,1750,1718,1782,1988,1861,1823,1813,1800,1817,1813,1805,1884,1745,1749,1772,1724,1732,1701,1759,1772,1862,1882,1879,1848,1836,1825,1746,1790,1770,1829,1713,1751,1780,1517,1730,1747,1696,1721,1802,1784,1719,1789,1617,1668,1621,1770,1809,1797,1688,1614,1645,1688,1690,1677,1643,1787,1653,1636,1665,1663,1695,1676,1703,1676,1834,1829,1725,1793,1822,1796,1812,1788,1864,1763,1777,1706,1740,1786,1767,1800,1747,1869,1783,1869,1876,1882,1901,1976,1838,1824,1747,1670,1739,1723,1728,1766,1756,1727,1793,1693,1705,1835,1782,1766,1875,1749,1728,1622,1423,1525,1548,1482,1535,1538,1465,1768,2029,1954,1936,2018,1972,1953,2004,1891,1942,1982,2004,1998,1936,1959,1994,2003,2003,1455,40,38,40,40,313,40,38,40,1333,1810,1824,1818,1849,1837,1824,1802,1868,1547,1466,1458,1444,1431,1419,1411,1447,1765,1821,1807,1752,1784,1767,1819,1753,1799,859,531,40,40,39,318,34,40,40,307,1179,1201,1815,1714,1742,1769,1740,1707,1737,1735,1787,1403,1304,1399,1503,759,1276,1534,1311,1053,1413,1789,1593,1575,40,38,40,40,313,40,38,40,892,1381,1183,1139,1220,1763,1602,1645,1712,1659,1687,1673,1632,1060,40,38,40,566,942,99,404,1609,1873,2037,1637,1642,1629,1649,1647,1682,1728,1734,1686,1763,1706,1776,1728,1708,1684,1669,1745,865,1158,43,1668,1802,1716,1711,1757,1744,1756,1702,1822,1857,1828,1890,1898,1807,1895,1788,1810,1978,1780,1608,1690,1678,1758,1789,1820,1694,1873,1839,1926,1806,1949,1783,1977,1775,1966,1710,1226,1139,1082,1012,1333,1387,1348,1360,1373,1338,1164,1109,1087,1135,1159,1247,1438,694,885,936,1138,1545,1632,906,675,749,911,1583,1697,1751,1306,928,1389,1706,1242,1176,806,906,920,610,656,1003,1307,1310,1190,1287,1372,1387,1374,1277,1661,1930,1910,1898,1830,1860,1919,1852,1953,1834,1922,1903,1950,1841,1881,1904,1913,969,948,908,965,1909,1958,1594,1982,1639,1162,1216,1150,1494,1978,1999,2026,2020,1863,1935,1877,1883,2010,2047,2045,2029,1970,1781,1745,1882,1800,1829,1790,1752,1773,1913,1968,1936,1910,1993,1364,1283,1313,1690,1186,1222,1259,1353,1259,1201,1260,1273,1789,1158,1237,1301,1410,1251,744,934,1704,1575,767,822,1608,1687,865,735,1362,1323,1374,1390,1343,1860,1753,1753,1830,1786,1802,1812,1864,1791,1801,1673,1671,1659,1792,1760,1812,1808,1787,1455,1399,1439,1483,1560,1447,1411,1455,1613,1498,1447,1488,1642,1509,1462,1520,1610,1980,1977,1945,1919,2013,1982,1954,2005,1980,1773,1779,1740,1823,1658,1546,1574,1584,1964,1888,1781,1908,1892,1807,1807,1806,1940,1900,1875,1874,1938,1792,1817,1757,1836,1784,1440,1507,1378,1285,1220,1212,1678,1150,1216,1227,1237,1656,1084,1218,1521,1851,1788,1753,1766,1904,1791,1775,1776,1861,1802,1827,1809,1795,1151,882,793,741,1100,1152,1179,1150,1283,1171,1219,1157,1216,1340,1388,1366,1275,1793,1841,1864,1839,1889,1827,1864,1863,1888,1898,1919,1927,1885,1956,1923,1932,1951,1880,1837,1867,1832,1744,1833,1755,1688,1606,1601,1901,1809,1843,1915,1882,1843,1937,1782,1480,1398,1463,1570,1488,1703,1738,1544,1564,1713,1609,1718,1677,1765,1742,1769,1847,1957,2057,2048,1867,2025,1977,1996,1953,2040,1960,1941,1886,1688,1148,1378,1285,1218,1763,1789,1748,1751,1680,1530,1597,1599,1698,1812,1798,1767,1810,1797,1844,1795,1776,1767,1675,1706,1646,1630,1772,1813,1777,1546,1043,1145,975,1468,1062,882,896,1048,1274,1037,1175,901,1165,523,594,506,748,724,732,670,806,959,1179,1200,1010,1282,1345,1454,1360,1367,1392,1428,1726,1557,1255,1563,1626,1381,1596,1726,1594,1675,1012,217,240,199,755,495,496,450,691,2041,2019,2053,2036,2021,2039,2039,2032,2032,1964,1937,1974,1895,1906,1938,1909,1890,1520,1399,1421,1445,1343,1185,1163,1146,1241,1416,1362,1502,1402,1869,1812,1844,1875,1892,1824,1774,1796,1900,1783,1738,1750,1825,1656,1706,1768,1732,1470,1431,1504,1435,1431,1449,1523,1483,1516,1895,1890,1857,1920,1291,1234,1228,1233,1817,1810,1778,1781,1726,1450,1368,1559,1501,2025,2034,2036,2016,2017,1986,1981,1991,1810,1511,1520,1500,1690,1689,1657,1658,1675,2009,1969,1976,2007,1892,1713,1717,1744,1935,2055,2048,2053,2032,1283,1241,851,532,532,544,865,1413,1427,1426,1172,1244,1595,1584,1192,1461,1568,1500,1538,1448,1537,1714,1686,1877,1818,1399,1200,1342,1244,1246,943,994,968,1270,867,916,985,839,1602,1985,1958,1975,1955,2029,2006,1963,2007,1858,1490,1517,1623,1768,1632,1683,1663,1748,1650,1477,1575,1637,1773,1657,1736,1620,1643,1587,1667,1502,1500,1515,1613,1493,1472,1890,1906,1869,1867,1894,1901,1862,1849,1881,1534,1472,1445,1856,1947,1976,1986,2011,1883,1812,1798,1802,1847,1887,1907,1910,1738,1392,1446,1415,1433,1434,1522,1484,1446,1538,1653,1719,1644,1546,1521,1597,1528,1589,1749,1636,1724,1728,1700,1727,1670,1748,1636,1692,1513,1716,1653,1658,1511,1702,1703,1449,1583,1571,1565,1382,1669,1547,1724,1517,1471,1576,1537,1504,1448,1545,1730,1506,1296,1265,1462,1521,1613,1788,1397,1680,1526,1497,1760,1717,1608,1655,1457,1241,1151,1257,1275,1379,1181,1375,1804,1310,1380,1387,1246,1145,1121,1286,1159,1404,1463,1384,1340,1558,1396,1163,1346,1825,1692,1811,1568,1304,1057,1015,917,907,1100,1178,1319,1271,1565,1635,1527,1688,1962,1088,1253,976,1016,873,622,1124,1157,1354,1169,1273,1263,1292,1568,1728,1797,1971,1717,1796,1786,1633,1319,1220,1185,1347,1305,1318,1350,1243,1198,1302,1280,1280,1567,1690,1661,1675,1495,1444,1563,1770,1538,1659,1277,1224,1199,1256,1313,1254,1468,1510,1680,1475,1267,1361,1208,1180,1194,1300,1456,1718,1730,1675,1577,1386,1432,1394,1419,1692,1564,1350,1256,1206,1286,1165,1236,1451,1754,1648,1756,1649,1526,1703,1653,1487,1692,1584,530,250,1463,1589,562,250,1392,1564,572,250,1399,1589,571,277,1414,1567,601,249,1324,1582,612,244,1179,1267,1288,1266,1436,1264,1311,1360,1407,1325,1261,1323,1275,1413,1336,1342,1247,1412,1579,1300,1257,1267,1228,1237,1274,1242,1268,1516,1161,1216,1208,1238,1227,1227,1212,1496,1234,1277,1264,1324,1252,1264,1290,1245,1817,1724,1760,1698,1672,1648,1790,1754,1575,1253,1351,1293,1377,1330,1348,1248,1382,1324,1411,1308,1373,1350,1422,1349,1423,1845,1674,1599,1576,1640,1577,1496,1418,1288,1400,1402,1464,1560,1532,1422,1568,1718,1881,1685,1573,1577,1658,1576,1515,1456,1277,1366,1408,1459,1583,1520,1438,1505,1713,1890,1696,1596,1599,1672,1573,1517,1496,1251,1367,1385,1463,1574,1518,1449,1502,1730,1902,1691,1618,1583,1649,1557,1543,1472,1240,1382,1357,1440,1586,1504,1455,1512,1693,1922,1173,1212,1071,917,870,1046,1009,1003,1133,1270,1217,1209,953,966,1043,1041,1490,1276,1228,1129,911,909,986,1064,939,1144,1248,1226,1204,987,937,1058,1056,1360,1991,1923,1918,1962,1957,1965,1954,1924,1876,1798,1793,1839,1884,1939,1915,1956,1866,1563,1967,1928,1978,2015,1987,1915,1959,1999,1788,1744,1771,1755,1785,1774,1848,1769,1726,1796,1749,1770,1784,1571,1892,2001,1945,1858,1874,1941,1914,1198,812,1316,1916,1998,2011,1983,1933,2003,1959,1949,2039,1953,1960,1963,1949,1987,1948,1953,1987,1602,1539,1576,1583,1580,1562,1583,1572,1771,1735,1622,1698,1553,1834,1815,1838,1798,1845,1482,1554,1559,1522,1717,1662,1716,1593,1779,1609,1710,1677,1856,1809,1859,1843,1879,1696,1678,1701,1587,1873,1809,1845,1809,1827,1530,1644,1542,1608,1621,1689,1715,1658,1734,1725,1754,1742,1757,1521,1704,1686,1789,1514,1670,1815,1607,1730,1782,1788,1617,1665,1593,1748,1644,1583,1553,1746,1629,1731,1032,1840,1913,1610,1392,1922,1882,1466,1578,1612,1992,2006,1967,1585,1355,936,1215,1313,1160,1685,1559,1554,1449,1411,1492,1489,1518,1732,1143,1124,922,987,1229,1113,950,1023,1118,1216,1870,1783,1875,1799,1852,1810,1856,1782,1837,1720,1594,1765,1602,1751,1725,1717,1802,1913,1774,1864,1837,1825,1826,1844,1794,1915,1750,1584,1740,1676,1733,1746,1714,1813,1807,1829,1863,1831,1897,1826,1903,1794,1971,1944,1877,1988,1899,1930,1951,2029,1912,1954,1768,1731,1816,1742,1833,1813,1842,1826,1638,1472,1268,1504,1566,1693,1436,1112,1254,1041,834,296,610,1300,1252,1336,1240,1427,1303,1250,1404,1280,1394,1343,1253,1353,1319,1421,1341,1343,1342,1313,1487,1647,883,1639,1410,1896,1927,1998,2053,2001,2030,1979,1919,1947,1649,1533,1501,1564,1692,1656,1737,1729,1811,1738,1741,1616,1714,1572,1606,1632,1468,1664,1819,1927,1857,1745,1616,1772,1925,1967,1909,1804,1643,1826,1909,1937,1800,1751,1638,1918,1916,1885,1804,1546,1914,1935,1919,1918,1898,1603,1808,1861,1857,1874,1736,968,976,992,968,1609,1475,1714,1578,1668,1625,1697,1641,1533,1800,1698,1659,1748,1715,1656,1664,1626,1684,1656,1735,1931,1732,1766,1721,1652,1801,1692,1598,1786,1644,1824,1618,1643,1678,1617,1698,1912,1900,1891,1884,1954,1932,1832,1678,1750,1637,1706,1883,1923,1879,1891,1929,1928,1983,1926,1947,1939,1908,1788,1763,1777,1806,1941,1926,1882,1894,1912,1858,1891,1883,1445,1378,1312,1539,1597,1655,1604,1663,1913,1841,1875,1840,1873,1816,1857,1892,1831,1897,1899,1846,625,535,523,1207,1008,997,1370,1209,1193,1404,1685,1639,1626,1643,1779,1479,1683,1741,1320,1690,1524,1376,1263,1439,1626,1703,1683,1780,1656,1717,1685,1623,1614,1379,1480,1469,1463,1484,1447,1522,1451,1474,1368,1470,1403,1784,1808,1839,1910,1847,1854,1841,1842,1903,1843,1820,1883,1896,1879,1869,1864,1907,1945,2007,1938,1896,1912,1906,1935,1930,1903,1933,1916,1912,1851,1872,1881,1914,1858,1628,1408,1440,1769,1622,1593,1636,1604,1620,1652,1618,1657,1726,1657,1630,1674,1655,1648,1651,1645,1751,1649,1659,1661,1635,1613,1632,1662,1625,1969,1872,1861,1847,1885,1861,1843,1863,1935,1826,1839,1821,1828,1857,1832,1840,1843,1964,1843,1862,1883,1847,1852,1842,1865,1944,1352,1415,1440,1386,1322,1439,1572,1433,1347,1370,1520,1436,1453,1467,1976,1887,1794,1779,1820,1851,1852,1897,1900,1611,1807,1748,1666,1710,1696,1745,1570,1710,1688,1725,1669,1801,1734,1780,1624,1694,1689,1873,1817,1848,1752,1603,1908,1852,1911,1824,1857,1618,1799,1741,1788,1835,1715,1623,1745,1675,1740,1771,1544,1831,1719,1756,1713,1831,1601,1735,1630,1603,1745,1720,1155,1248,1266,1229,1253,1325,1038,1621,1606,1522,1557,1628,1588,1574,1545,1569,1575,1553,1581,1709,1821,1893,1932,1844,1725,1945,1424,1380,1729,1767,1855,1754,1701,1651,1483,1684,1696,1781,1712,1380,1311,1758,1832,1841,1494,1422,1587,1377,1680,1580,1416,1626,1505,1509,1493,1516,1454,1557,1504,1349,1544,1524,1597,1498,1445,1515,1688,1543,1515,1446,1343,1499,1468,1673,1830,1868,1832,1830,1833,1789,1765,1717,1649,1621,1829,1685,1789,1743,1714,1786,1746,1700,1896,1930,1824,1857,1880,1821,1874,1720,1674,1698,1695,1711,1780,1755,1636,1730,1803,1746,1600,1849,1690,1734,1721,1693,1637,1686,1689,1718,1845,1668,1696,1630,1783,1697,1760,1678,1618,1797,1749,1420,1392,1739,1773,1635,1709,1715,1487,1491,1567,1513,1497,1412,1602,1497,1502,1766,1756,1672,1736,1757,1630,1718,1741,1612,1640,1659,1648,1693,1606,1623,1633,1708,1670,1607,1605,1690,1629,1651,1638,1724,1628,1639,1637,1594,1715,1627,1676,1626,1703,1625,1643,1650,1683,1606,1630,1595,1659,1677,1620,1702,1753,1739,1646,1615,1638,1720,1610,1637,1652,1781,1682,1614,1616,1604,1743,1767,1883,1712,1647,1709,1819,1710,1692,1728,1839,1801,1699,1911,1879,1864,1988,1973,1948,1955,1952,1914,1820,1842,1968,2010,2013,1994,1943,1836,1964,1765,1837,1976,2024,2020,1989,2004,1967,1914,1923,1903,1906,1933,1899,1960,1955,1846,1823,1914,1915,1875,1833,1639,1626,1775,1865,1819,1687,1617,1603,1629,1625,1633,1638,1417,1365,1333,1431,1439,1533,1454,1389,1384,1524,1560,1310,1437,1537,1470,1427,1619,1703,1688,1751,1667,1684,1720,1805,1646,1725,1731,1777,1724,1668,1652,1694,1685,1711,1670,1703,1658,1706,1679,1737,1654,1662,1734,1632,1644,1652,1909,1888,1889,1909,1919,1916,1890,1887,1910,1834,1793,1796,1806,2004,2005,2002,2045,2040,2027,2028,2021,2038,2040,2037,2049,2052,2056,2050,2034,2040,2015,1856,1848,1894,1925,1919,1880,1849,1886,1538,1446,1502,1456,1695,1622,1544,1550,1653,1553,1567,1678,1451,1426,1618,1591,1525,1602,1606,1426,1478,1423,1555,1741,1929,1779,1713,1706,1633,1922,1860,1879,1802,1775,1792,1739,1820,1857,1600,1833,1978,2004,1985,1901,1905,1904,1599,1664,1751,1712,1774,1748,1810,1693,1687,1766,1681,1710,1689,1337,1525,1511,1513,1480,1565,1526,1493,1514,1527,1508,1516,1507,1570,1497,1486,1510,1485,1411,1288,1315,1262,1506,1913,1938,1894,1881,1946,1930,1938,1944,1666,1320,1299,1328,1348,1333,1328,1335,1541,1507,1497,1497,1635,1612,1507,1626,1521,1828,1622,1656,1719,1356,1738,1636,1650,1851,1270,1253,1283,1288,1289,1290,1266,1192,1512,1212,987,1136,1094,1273,1112,1089,1299,1436,1281,1277,1190,1235,1251,1331,1343,1590,1424,1295,1295,1344,1336,1302,1277,1361,1951,1498,1659,1755,1696,1541,1478,1384,1971,1937,1173,1174,1123,1256,1274,1065,1934,1960,1919,1488,1812,1827,1820,1610,1791,1966,520,609,456,491,592,498,549,399,873,492,1330,1408,1362,1256,1120,876,513,778,949,1387,1509,1480,1435,1388,692,1212,991,1476,1417,1145,1371,1289,1302,1284,1892,1759,1731,1756,1404,84,419,1152,763,524,648,415,640,591,661,679,1307,814,1116,1433,1423,1399,1389,1417,1670,1580,1702,1571,1578,1557,1733,1784,1447,1050,1116,1232,1287,1350,1233,1294,1337,1446,1590,1562,1677,1692,1484,1316,1459,1250,449,25,30,25,846,584,1373,735,1627,1605,1675,1606,1656,1164,1665,1532,1574,1555,1847,1911,1943,1914,1950,1885,1258,826,1383,1513,1060,944,1093,1266,1395,1415,1487,1468,1576,1515,1706,1738,1591,1616,1533,1532,1572,1569,1507,1594,1906,2052,2051,2033,1957,1867,2023,2012,1851,1781,1941,1888,1993,2010,2041,2008,2039,1995,2019,2001,2045,2041,1891,1729,1960,2010,2012,1989,1805,1647,1431,1224,1235,1191,1759,2009,1784,1712,1832,1916,1856,1765,1760,1756,1927,1937,1982,1966,1953,2007,1976,1992,1705,1548,1561,1539,1538,1518,1538,1530,1443,1391,1329,1339,1281,1292,1333,1317,1811,2004,1995,1987,1985,1989,1949,1934,2001,1997,1746,1702,1647,1666,1672,1676,713,208,836,1338,1308,1231,957,1052,895,1036,1409,1691,1651,1612,1755,1717,1606,1512,1616,1558,1619,1552,1581,1463,1509,1251,1239,1059,1275,1228,1282,1222,1410,1421,1572,1554,1554,1461,1388,1447,1030,968,1374,1576,1274,738,1316,1274,1418,1506,1497,1492,1354,1180,1413,1497,1543,1718,1786,1830,1768,1819,1701,1562,1653,1604,1643,1561,1593,1477,1572,1513,1332,1289,1482,1546,1511,1352,1404,1388,1384,1372,948,504,605,458,1169,1432,1597,1501,1461,1433,1528,1527,1503,1374,1275,1112,1234,1312,1448,1506,1219,1025,593,347,1438,1783,1893,1776,1677,1558,1149,1075,1367,1547,1564,1552,1562,1580,1569,1581,1824,1739,1841,1729,1882,1776,1881,1765,1440,1385,1418,1362,1438,1413,1601,1682,1642,1550,1532,1475,1516,1511,1500,1470,1804,1930,1664,1542,887,724,953,861,1178,1590,1627,1654,1652,1498,1603,1299,1245,1264,853,549,896,814,760,607,1118,1483,889,501,608,506,1440,1811,1384,1076,1102,1029,1315,1417,1257,1092,946,883,1389,1433,1471,1435,1427,1455,1660,1689,1751,1638,1872,1890,1695,1556,1173,1034,1201,1144,1132,1006,1001,869,1160,980,1253,1190,834,481,619,601,610,517,593,585,589,489,655,596,609,523,646,590,577,405,559,545,1538,1883,1362,1030,1126,1019,1126,1021,1171,1131,1626,1769,1629,1733,1690,1692,1671,1689,1329,1164,1554,1677,1683,1701,1862,1862,735,195,384,293,296,214,392,239,292,56,263,25,213,123,283,287,360,234,1091,1500,1546,1687,1221,1109,1051,1105,1172,1214,1445,1466,1482,1427,1823,1853,1804,1711,1645,1352,1643,1598,1529,1391,1423,1276,1287,1805,1569,1328,1456,1519,1451,1505,1492,1233,1385,1450,1434,1450,1549,1510,1501,1110,1235,1266,1458,1157,1264,1293,1124,1062,1142,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2046,2053,1905,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,1853,2048,2048,1981,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,1979,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,1902,2048,2048,2048,2048,1906,2048,1964,2048,1965,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2045,2013,1805,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2053,1953,1873,2048,2048,2056,2048,2054,1968,1908,2048,2048,2048,2048,2028,1972,1929,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2049,2056,2032,1813,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2056,2050,1987,1696,2048,1974,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2035,1911,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2056,2052,1867,2048,2048,2048,2048,1965,2048,2048,2048,2048,1951,2048,2048,2048,2048,2048,2048,1964,2048,2048,2048,2048,2048,2055,1965,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1990,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,1982,2048,1978,2048,2038,2020,2048,1974,1979,2048,1721,1965,2036,2048,2002,1893,1944,2035,2048,2026,1926,1912,2010,2048,2050,1944,1906,1998,2056,2048,1985,1895,1974,2048,2048,2024,1910,1951,2041,2048,2032,1933,1960,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1984,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,1975,2048,2048,2048,2053,2004,1979,2048,1981,2014,2043,1978,2048,2048,2048,2048,1976,2048,2048,2048,2048,1981,1975,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,1973,1982,2048,1975,2048,1988,2048,2022,2036,2048,1985,2048,1985,2048,1985,2048,1977,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,1980,2048,2048,2048,1978,2048,2048,2048,2048,1978,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,1976,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2056,2056,2046,2020,1818,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2055,2051,2006,2023,1980,1824,1870,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1967,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,1983,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1892,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1990,2048,2048,2048,2048,2048,2048,1899,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2057,1970,2048,2048,1971,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,1977,2048,2048,1973,2048,2048,1984,2041,1978,2048,1916,2048,1985,2048,2048,1975,2048,1973,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,1988,1982,2048,1978,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,1964,2048,2048,1968,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2052,2054,2053,1949,1722,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2055,2038,1873,1908,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2040,1853,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2055,1916,1918,2048,2048,2048,2048,2048,2006,2045,1971,1973,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,1967,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2034,1963,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1933,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2054,2046,1920,1968,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2057,2015,1851,2048,1978,2048,1978,2048,1972,1979,2048,2048,2048,2048,2056,2048,1893,2048,2048,2048,2048,2048,2048,1933,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,1971,1896,2048,1977,2048,1888,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2022,2032,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,1973,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1985,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,1897,2048,2048,2048,1944,2048,2048,2048,1969,1982,1985,2048,1975,1802,1974,1977,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,1995,1957,1699,2048,2048,2048,2048,2048,2048,2048,2048,2048,2047,2018,1845,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,1975,2048,2048,2048,2048,1975,2048,2048,2048,2048,2050,1871,2048,2048,2048,2048,2056,2026,1825,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1910,2029,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1013,1034,1641,1414,1749,1300,1025,1110,1376,1423,1450,1471,1699,1872,1884,1895,1973,1784,1889,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,1980,2048,1977,2048,1529,1326,1510,1629,1186,1270,1589,1376,915,800,888,807,883,786,1943,2048,340,25,25,1658,2048,1499,25,25,910,1159,1392,852,2048,1949,1941,2048,2048,2048,2048,2048,1929,2048,2048,2004,2048,2048,1999,2048,2048,2048,2048,2048,2048,2006,1940,1952,1950,1963,1959,2005,2003,2011,2048,2048,2048,2048,2048,1897,1879,2048,2048,2048,2048,2002,2048,1869,2048,2048,2038,2045,2048,1943,2048,2048,2048,2048,2048,2048,2056,2001,2048,2048,2048,2048,2048,2048,2000,2048,2010,2048,1872,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2010,2056,1877,2048,2048,2001,1891,1937,2011,2008,1925,1943,1974,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,1999,1966,2048,2005,1980,1948,1942,1943,1919,1928,1941,2048,2048,2003,2048,2048,2048,2004,2048,1982,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,1953,2048,2048,2048,2048,2048,2048,2048,1962,2007,2048,1865,2048,2048,2048,2048,2048,2048,2048,2048,1992,2048,2048,1968,2048,2048,2009,2004,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,1948,1919,2048,1921,2007,2048,1879,2048,1870,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2011,1875,1943,2000,2048,2000,1842,1835,2048,2048,2048,2048,2048,1941,1949,2048,1870,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,1940,2048,2048,1856,1888,1590,2048,2048,2048,2048,1929,2048,2048,2048,1942,2048,2048,1940,2048,1963,2048,1864,2048,1940,2048,2048,1747,2048,1877,2048,2048,2048,2048,2048,2048,1963,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,1954,2048,2048,2048,2048,1874,2048,2048,1969,2048,1906,2048,1889,2048,1939,2048,2007,2048,2048,2048,2048,2048,2048,2003,2048,2003,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,1944,2048,2048,1958,2048,1874,2048,2048,2048,2048,2004,2048,2048,2048,2001,2048,2048,1915,2048,1957,2048,1936,1942,1927,1933,2048,1963,2048,2048,2048,1792,2006,2003,1994,2048,2048,2048,2048,2048,1945,2048,1877,1947,1885,1947,2048,2048,2048,2048,2048,1948,2048,2010,2048,1942,1907,1819,1996,2048,2048,2048,2048,2048,2003,1880,2048,2048,2048,2005,2048,2048,2048,1959,2048,1928,1972,2048,2048,2048,2004,2048,2048,2048,1999,2048,2048,2002,2048,2048,2048,2048,2007,2048,2048,2048,1999,2048,2048,2048,1871,2048,2048,2048,2048,2048,1999,2048,2048,2048,2000,2048,1941,2048,1790,2040,2005,2048,2048,1759,2048,2048,2048,2000,2048,2048,2004,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,1974,2048,2048,1944,2048,2048,2048,2048,2048,1871,2048,2022,1763,1945,2048,2048,2048,2048,2048,1289,1779,2048,2048,2048,2003,2048,2048,2048,1999,2048,1790,2048,2048,1999,1860,2048,1875,2048,1871,2048,2048,2048,1828,2018,2048,2048,2048,2048,1950,2048,2048,1950,2048,2048,1965,1939,2048,1964,2057,2048,2048,1954,1943,1929,2048,2048,2048,2048,2048,2048,2018,2048,2048,2048,2048,1998,2048,2048,2048,1999,2048,2048,1211,2048,2048,2048,2048,2004,2048,2048,2048,2001,2048,2048,2048,2048,2048,2009,2048,2048,2048,2056,2048,2048,2006,2048,2048,2048,2048,2002,2048,2048,2048,1949,2048,2048,2048,2048,2004,2048,2048,2048,2000,2048,1951,2048,2048,2048,2048,2048,1686,1872,2048,1939,2038,2037,1999,1922,2048,2048,2048,2048,1876,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1881,2048,2048,1870,2057,2048,2048,1873,2048,2048,2048,2048,2048,2048,2048,1872,1876,1872,2048,1870,1553,2048,2001,2007,2048,2048,1949,2048,1993,2048,1998,2048,1866,2048,1999,1954,1993,2048,1944,2002,2048,2000,2048,2048,2048,1942,2048,2048,2003,2048,2048,2048,1985,2048,2053,1924,1958,2048,2048,2048,2048,2001,2048,2048,2048,2001,2048,2048,1941,2048,2048,1953,2048,1941,2002,2048,2048,1942,2048,2048,1997,1954,2048,1934,2006,2048,2048,1997,1962,1951,2048,2048,1874,2048,2048,1868,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2000,2048,2048,2048,2002,2048,1938,2048,2048,2048,2048,1999,1954,1965,1958,2010,1998,1818,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2008,1950,2048,2048,2048,2048,2048,2048,1951,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,1959,1971,2007,2002,2048,2048,2048,1872,1941,2048,1966,2048,2048,2048,2007,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,1940,2048,2048,2048,2048,2004,2048,1960,2048,2011,2048,2048,2001,2048,2048,2003,2048,2048,2009,2048,2048,2048,1874,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2004,2007,2003,2048,1943,2048,2048,1939,2048,2048,1596,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,1364,1521,2048,1971,2048,1770,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2038,2042,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2004,2048,2048,2048,2004,1940,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2001,2048,2048,1972,2048,2048,2048,2048,2048,2048,1870,2048,2048,2048,2048,2048,1860,2048,2048,2048,2048,2048,2048,2048,2048,1871,2048,2048,2048,1875,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1765,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2005,2048,2048,2048,2048,1999,1947,1943,2048,2048,1880,2048,2048,2048,2048,1980,1874,1564,2048,2048,2048,1874,2048,2048,2048,2048,2048,2048,2048,2005,1969,2048,2003,1851,1985,2048,2048,1872,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2001,2048,1873,2048,2002,2048,1874,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2001,1910,2045,1872,2048,2048,2048,2048,2048,2006,2048,2048,2048,2056,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2001,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,1997,2048,2048,2048,2007,1966,1870,1879,2048,2048,1947,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2008,2048,2048,2048,1963,2048,2048,2048,2048,2048,1999,2048,2048,1950,2048,2048,1961,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2003,2048,1960,2048,2048,2048,2030,2053,1878,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2055,1940,2048,2056,2048,1999,2048,2005,1951,2056,2048,2048,2048,2048,2056,2048,2048,1970,2048,2048,1610,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,1886,1648,2048,2007,1950,2048,2048,2048,2048,2048,1975,2002,2048,1962,2030,1999,2048,2048,1940,2048,2048,2048,1919,2048,2048,2048,2048,1992,2048,1998,2048,2048,1888,1626,2048,2001,2048,2048,2048,1987,2048,2048,2048,2048,1992,2048,2048,2048,1973,2048,2048,2048,2048,2048,1827,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,1991,2048,2048,1986,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2053,2024,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,1996,2048,1999,2048,2048,1997,2048,2048,2043,1840,2048,2048,1888,2048,2048,1794,1873,2048,2048,2048,2056,2052,1993,2048,2048,2048,2048,1995,2048,2048,2048,2048,2056,2048,2048,1999,2048,2048,2048,2048,2057,2048,2048,2056,1998,2048,2048,2048,2048,1999,2048,2006,2048,2048,1994,2000,2048,2048,2038,1962,2048,2048,2048,2048,2048,2002,2048,1911,2048,1996,2048,2048,2056,2002,2048,2048,1987,2048,1990,2048,1999,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2056,1934,2048,2048,2048,2048,2048,1996,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2016,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1948,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,1991,2048,2048,2048,2048,2048,2048,2048,2048,1990,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,1970,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2039,1963,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1982,1900,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2001,2048,2048,2038,2038,2048,1994,2048,2048,1992,2048,2048,2048,2048,2048,1994,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1604,1025,1101,1173,1139,1998,739,721,1238,2048,2048,1066,34,34,34,34,34,39,533,353,495,545,622,682,638,511,610,548,599,511,650,644,568,677,651,720,776,824,775,777,685,1130,1049,933,917,922,949,967,939,997,993,977,955,802,975,1334,1165,1348,1145,1338,1160,1148,1174,1143,1207,1140,1165,1145,1154,1092,951,1290,1446,1275,820,736,776,936,1285,1252,1333,1060,335,92,92,110,223,48,120,48,48,48,48,122,49,194,180,47,47,102,47,47,47,104,43,41,47,47,123,44,44,185,50,49,45,44,42,109,47,125,48,48,48,110,46,46,47,101,47,45,45,45,45,98,45,45,45,41,39,122,50,50,112,42,120,53,50,49,46,98,44,46,46,109,46,46,46,46,46,117,47,47,96,45,45,45,97,45,154,888,1196,316,47,705,1153,446,44,573,1141,593,336,1216,1221,791,835,918,415],\"successes\":[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,1,0,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,0,1,0,1,1,1,1,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,0,1,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,1,0,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,0,0,1,0,1,1,0,1,1,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,0,1,1,0,0,0,0,0,1,0,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,1,0,0,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,1,1,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,1,1,1,1,0,1,0,1,1,1,0,1,0,0,0,0,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,1,0,1,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,1,0,0,0,0,0,0,1,1,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,1,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,1,0,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,1,1,0,1,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,0,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,1,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,1,1,1,0,1,0,0,0,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,1,0,1,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,1,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,1,1,0,1,1,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,1,0,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,1,0,0,1,1,0,1,1,0,0,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,1,1,1,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,1,1,0,1,1,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0,1,0,1,0,1,0,0,1,1,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n;\r\n            compressedData['data'] = byteArray;\r\n            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');\r\n            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, false);\r\n            Module['removeRunDependency']('datafile_C:/Dev/EDGE-classic-pbdot/web/site/edge-classic.data');\r\n      };\r\n      Module['addRunDependency']('datafile_C:/Dev/EDGE-classic-pbdot/web/site/edge-classic.data');\r\n\r\n      if (!Module.preloadResults) Module.preloadResults = {};\r\n\r\n        function preloadFallback(error) {\r\n          console.error(error);\r\n          console.error('falling back to default preload behavior');\r\n          fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, processPackageData, handleError);\r\n        };\r\n\r\n        openDatabase(\r\n          function(db) {\r\n            checkCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME,\r\n              function(useCached, metadata) {\r\n                Module.preloadResults[PACKAGE_NAME] = {fromCache: useCached};\r\n                if (useCached) {\r\n                  fetchCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME, metadata, processPackageData, preloadFallback);\r\n                } else {\r\n                  fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE,\r\n                    function(packageData) {\r\n                      cacheRemotePackage(db, PACKAGE_PATH + PACKAGE_NAME, packageData, {uuid:PACKAGE_UUID}, processPackageData,\r\n                        function(error) {\r\n                          console.error(error);\r\n                          processPackageData(packageData);\r\n                        });\r\n                    }\r\n                  , preloadFallback);\r\n                }\r\n              }\r\n            , preloadFallback);\r\n          }\r\n        , preloadFallback);\r\n\r\n        if (Module['setStatus']) Module['setStatus']('Downloading...');\r\n\r\n    }\r\n    if (Module['calledRun']) {\r\n      runWithFS();\r\n    } else {\r\n      if (!Module['preRun']) Module['preRun'] = [];\r\n      Module[\"preRun\"].push(runWithFS); // FS is not initialized yet, wait for it\r\n    }\r\n\r\n    }\r\n    loadPackage({\"files\": [{\"filename\": \"/.gitkeep\", \"start\": 0, \"end\": 0}, {\"filename\": \"/edge_base/blasphemer/graphics/AUTOPAGE.png\", \"start\": 0, \"end\": 42807}, {\"filename\": \"/edge_base/blasphemer/graphics/M_DOOM.lmp\", \"start\": 42807, \"end\": 49300}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSCNTR.lmp\", \"start\": 49300, \"end\": 49492}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSLEFT.lmp\", \"start\": 49492, \"end\": 49684}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSRGHT.lmp\", \"start\": 49684, \"end\": 49876}, {\"filename\": \"/edge_base/blasphemer/graphics/M_SKULL1.lmp\", \"start\": 49876, \"end\": 50448}, {\"filename\": \"/edge_base/blasphemer/graphics/M_SKULL2.lmp\", \"start\": 50448, \"end\": 51020}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERML.lmp\", \"start\": 51020, \"end\": 51154}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMM.lmp\", \"start\": 51154, \"end\": 51360}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMO.lmp\", \"start\": 51360, \"end\": 51468}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMR.lmp\", \"start\": 51468, \"end\": 51602}, {\"filename\": \"/edge_base/blasphemer/graphics/NULL.png\", \"start\": 51602, \"end\": 52762}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARL.lmp\", \"start\": 52762, \"end\": 55473}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARR.lmp\", \"start\": 55473, \"end\": 58184}, {\"filename\": \"/edge_base/blasphemer/graphics/_IN1.png\", \"start\": 58184, \"end\": 59371}, {\"filename\": \"/edge_base/blasphemer/scripts/anims.ddf\", \"start\": 59371, \"end\": 60849}, {\"filename\": \"/edge_base/blasphemer/scripts/attacks.ddf\", \"start\": 60849, \"end\": 102518}, {\"filename\": \"/edge_base/blasphemer/scripts/coal_hud.ec\", \"start\": 102518, \"end\": 118231}, {\"filename\": \"/edge_base/blasphemer/scripts/flats.ddf\", \"start\": 118231, \"end\": 118788}, {\"filename\": \"/edge_base/blasphemer/scripts/fonts.ddf\", \"start\": 118788, \"end\": 119836}, {\"filename\": \"/edge_base/blasphemer/scripts/games.ddf\", \"start\": 119836, \"end\": 122570}, {\"filename\": \"/edge_base/blasphemer/scripts/images.ddf\", \"start\": 122570, \"end\": 123996}, {\"filename\": \"/edge_base/blasphemer/scripts/language.ldf\", \"start\": 123996, \"end\": 132497}, {\"filename\": \"/edge_base/blasphemer/scripts/levels.ddf\", \"start\": 132497, \"end\": 145367}, {\"filename\": \"/edge_base/blasphemer/scripts/lines.ddf\", \"start\": 145367, \"end\": 150202}, {\"filename\": \"/edge_base/blasphemer/scripts/playlist.ddf\", \"start\": 150202, \"end\": 152358}, {\"filename\": \"/edge_base/blasphemer/scripts/rscript.rts\", \"start\": 152358, \"end\": 165402}, {\"filename\": \"/edge_base/blasphemer/scripts/sectors.ddf\", \"start\": 165402, \"end\": 166886}, {\"filename\": \"/edge_base/blasphemer/scripts/sounds.ddf\", \"start\": 166886, \"end\": 178082}, {\"filename\": \"/edge_base/blasphemer/scripts/styles.ddf\", \"start\": 178082, \"end\": 182556}, {\"filename\": \"/edge_base/blasphemer/scripts/switch.ddf\", \"start\": 182556, \"end\": 182969}, {\"filename\": \"/edge_base/blasphemer/scripts/things.ddf\", \"start\": 182969, \"end\": 266779}, {\"filename\": \"/edge_base/blasphemer/scripts/weapons.ddf\", \"start\": 266779, \"end\": 277097}, {\"filename\": \"/edge_base/doom/graphics/CREDIT.lmp\", \"start\": 277097, \"end\": 396385}, {\"filename\": \"/edge_base/doom/graphics/ENDPIC.lmp\", \"start\": 396385, \"end\": 515673}, {\"filename\": \"/edge_base/doom/graphics/HELP1.lmp\", \"start\": 515673, \"end\": 634961}, {\"filename\": \"/edge_base/doom/graphics/INTERPIC.lmp\", \"start\": 634961, \"end\": 754249}, {\"filename\": \"/edge_base/doom/graphics/PFUB1.lmp\", \"start\": 754249, \"end\": 873537}, {\"filename\": \"/edge_base/doom/graphics/PFUB2.lmp\", \"start\": 873537, \"end\": 992825}, {\"filename\": \"/edge_base/doom/graphics/TITLEPIC.lmp\", \"start\": 992825, \"end\": 1112113}, {\"filename\": \"/edge_base/doom/graphics/VICTORY2.lmp\", \"start\": 1112113, \"end\": 1231401}, {\"filename\": \"/edge_base/doom/graphics/WIA20000.lmp\", \"start\": 1231401, \"end\": 1260521}, {\"filename\": \"/edge_base/doom/graphics/WIA20001.lmp\", \"start\": 1260521, \"end\": 1289641}, {\"filename\": \"/edge_base/doom/graphics/WIA20002.lmp\", \"start\": 1289641, \"end\": 1318761}, {\"filename\": \"/edge_base/doom/graphics/WIA20400.lmp\", \"start\": 1318761, \"end\": 1324359}, {\"filename\": \"/edge_base/doom/graphics/WIA20401.lmp\", \"start\": 1324359, \"end\": 1329957}, {\"filename\": \"/edge_base/doom/graphics/WIA20402.lmp\", \"start\": 1329957, \"end\": 1335555}, {\"filename\": \"/edge_base/doom/graphics/WIA20500.lmp\", \"start\": 1335555, \"end\": 1348763}, {\"filename\": \"/edge_base/doom/graphics/WIA20501.lmp\", \"start\": 1348763, \"end\": 1361971}, {\"filename\": \"/edge_base/doom/graphics/WIA20502.lmp\", \"start\": 1361971, \"end\": 1375179}, {\"filename\": \"/edge_base/doom/graphics/WIMAP0.lmp\", \"start\": 1375179, \"end\": 1494467}, {\"filename\": \"/edge_base/doom/graphics/WIMAP1.lmp\", \"start\": 1494467, \"end\": 1613755}, {\"filename\": \"/edge_base/doom/graphics/WIMAP2.lmp\", \"start\": 1613755, \"end\": 1733043}, {\"filename\": \"/edge_base/doom/scripts/images.ddf\", \"start\": 1733043, \"end\": 1734881}, {\"filename\": \"/edge_base/doom/textures/SKY1_B.png\", \"start\": 1734881, \"end\": 1749524}, {\"filename\": \"/edge_base/doom/textures/SKY1_E.png\", \"start\": 1749524, \"end\": 1772703}, {\"filename\": \"/edge_base/doom/textures/SKY1_N.png\", \"start\": 1772703, \"end\": 1795590}, {\"filename\": \"/edge_base/doom/textures/SKY1_S.png\", \"start\": 1795590, \"end\": 1818215}, {\"filename\": \"/edge_base/doom/textures/SKY1_T.png\", \"start\": 1818215, \"end\": 1845407}, {\"filename\": \"/edge_base/doom/textures/SKY1_W.png\", \"start\": 1845407, \"end\": 1868250}, {\"filename\": \"/edge_base/doom/textures/SKY2_B.png\", \"start\": 1868250, \"end\": 1885117}, {\"filename\": \"/edge_base/doom/textures/SKY2_E.png\", \"start\": 1885117, \"end\": 1911686}, {\"filename\": \"/edge_base/doom/textures/SKY2_N.png\", \"start\": 1911686, \"end\": 1938542}, {\"filename\": \"/edge_base/doom/textures/SKY2_S.png\", \"start\": 1938542, \"end\": 1966042}, {\"filename\": \"/edge_base/doom/textures/SKY2_T.png\", \"start\": 1966042, \"end\": 1990396}, {\"filename\": \"/edge_base/doom/textures/SKY2_W.png\", \"start\": 1990396, \"end\": 2016583}, {\"filename\": \"/edge_base/doom/textures/SKY3_B.png\", \"start\": 2016583, \"end\": 2028566}, {\"filename\": \"/edge_base/doom/textures/SKY3_E.png\", \"start\": 2028566, \"end\": 2048132}, {\"filename\": \"/edge_base/doom/textures/SKY3_N.png\", \"start\": 2048132, \"end\": 2067833}, {\"filename\": \"/edge_base/doom/textures/SKY3_S.png\", \"start\": 2067833, \"end\": 2088167}, {\"filename\": \"/edge_base/doom/textures/SKY3_T.png\", \"start\": 2088167, \"end\": 2112610}, {\"filename\": \"/edge_base/doom/textures/SKY3_W.png\", \"start\": 2112610, \"end\": 2131655}, {\"filename\": \"/edge_base/doom/textures/SKY4_B.png\", \"start\": 2131655, \"end\": 2169991}, {\"filename\": \"/edge_base/doom/textures/SKY4_E.png\", \"start\": 2169991, \"end\": 2182600}, {\"filename\": \"/edge_base/doom/textures/SKY4_N.png\", \"start\": 2182600, \"end\": 2194316}, {\"filename\": \"/edge_base/doom/textures/SKY4_S.png\", \"start\": 2194316, \"end\": 2206032}, {\"filename\": \"/edge_base/doom/textures/SKY4_T.png\", \"start\": 2206032, \"end\": 2244368}, {\"filename\": \"/edge_base/doom/textures/SKY4_W.png\", \"start\": 2244368, \"end\": 2256977}, {\"filename\": \"/edge_base/doom1/graphics/CREDIT.lmp\", \"start\": 2256977, \"end\": 2376265}, {\"filename\": \"/edge_base/doom1/graphics/HELP1.lmp\", \"start\": 2376265, \"end\": 2495553}, {\"filename\": \"/edge_base/doom1/graphics/HELP2.lmp\", \"start\": 2495553, \"end\": 2614841}, {\"filename\": \"/edge_base/doom1/graphics/TITLEPIC.lmp\", \"start\": 2614841, \"end\": 2734129}, {\"filename\": \"/edge_base/doom1/graphics/WIMAP0.lmp\", \"start\": 2734129, \"end\": 2853417}, {\"filename\": \"/edge_base/doom1/scripts/images.ddf\", \"start\": 2853417, \"end\": 2855269}, {\"filename\": \"/edge_base/doom1/textures/SKY1_B.png\", \"start\": 2855269, \"end\": 2869912}, {\"filename\": \"/edge_base/doom1/textures/SKY1_E.png\", \"start\": 2869912, \"end\": 2893091}, {\"filename\": \"/edge_base/doom1/textures/SKY1_N.png\", \"start\": 2893091, \"end\": 2915978}, {\"filename\": \"/edge_base/doom1/textures/SKY1_S.png\", \"start\": 2915978, \"end\": 2938603}, {\"filename\": \"/edge_base/doom1/textures/SKY1_T.png\", \"start\": 2938603, \"end\": 2965795}, {\"filename\": \"/edge_base/doom1/textures/SKY1_W.png\", \"start\": 2965795, \"end\": 2988638}, {\"filename\": \"/edge_base/doom2/graphics/BOSSBACK.lmp\", \"start\": 2988638, \"end\": 3107926}, {\"filename\": \"/edge_base/doom2/graphics/CREDIT.lmp\", \"start\": 3107926, \"end\": 3227214}, {\"filename\": \"/edge_base/doom2/graphics/HELP.lmp\", \"start\": 3227214, \"end\": 3346502}, {\"filename\": \"/edge_base/doom2/graphics/INTERPIC.lmp\", \"start\": 3346502, \"end\": 3465790}, {\"filename\": \"/edge_base/doom2/graphics/TITLEPIC.lmp\", \"start\": 3465790, \"end\": 3585078}, {\"filename\": \"/edge_base/doom2/scripts/images.ddf\", \"start\": 3585078, \"end\": 3586509}, {\"filename\": \"/edge_base/doom2/textures/SKY1_B.png\", \"start\": 3586509, \"end\": 3607789}, {\"filename\": \"/edge_base/doom2/textures/SKY1_E.png\", \"start\": 3607789, \"end\": 3625469}, {\"filename\": \"/edge_base/doom2/textures/SKY1_N.png\", \"start\": 3625469, \"end\": 3643149}, {\"filename\": \"/edge_base/doom2/textures/SKY1_S.png\", \"start\": 3643149, \"end\": 3660829}, {\"filename\": \"/edge_base/doom2/textures/SKY1_T.png\", \"start\": 3660829, \"end\": 3682109}, {\"filename\": \"/edge_base/doom2/textures/SKY1_W.png\", \"start\": 3682109, \"end\": 3699789}, {\"filename\": \"/edge_base/doom2/textures/SKY2_B.png\", \"start\": 3699789, \"end\": 3713712}, {\"filename\": \"/edge_base/doom2/textures/SKY2_E.png\", \"start\": 3713712, \"end\": 3738931}, {\"filename\": \"/edge_base/doom2/textures/SKY2_N.png\", \"start\": 3738931, \"end\": 3764163}, {\"filename\": \"/edge_base/doom2/textures/SKY2_S.png\", \"start\": 3764163, \"end\": 3789366}, {\"filename\": \"/edge_base/doom2/textures/SKY2_T.png\", \"start\": 3789366, \"end\": 3814118}, {\"filename\": \"/edge_base/doom2/textures/SKY2_W.png\", \"start\": 3814118, \"end\": 3839322}, {\"filename\": \"/edge_base/doom2/textures/SKY3_B.png\", \"start\": 3839322, \"end\": 3922892}, {\"filename\": \"/edge_base/doom2/textures/SKY3_E.png\", \"start\": 3922892, \"end\": 4017701}, {\"filename\": \"/edge_base/doom2/textures/SKY3_N.png\", \"start\": 4017701, \"end\": 4116472}, {\"filename\": \"/edge_base/doom2/textures/SKY3_S.png\", \"start\": 4116472, \"end\": 4215243}, {\"filename\": \"/edge_base/doom2/textures/SKY3_T.png\", \"start\": 4215243, \"end\": 4401734}, {\"filename\": \"/edge_base/doom2/textures/SKY3_W.png\", \"start\": 4401734, \"end\": 4496543}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARL.lmp\", \"start\": 4496543, \"end\": 4499954}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARR.lmp\", \"start\": 4499954, \"end\": 4503365}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT033.png\", \"start\": 4503365, \"end\": 4503710}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT034.png\", \"start\": 4503710, \"end\": 4504057}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT035.png\", \"start\": 4504057, \"end\": 4504488}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT036.png\", \"start\": 4504488, \"end\": 4504897}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT037.png\", \"start\": 4504897, \"end\": 4505318}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT038.png\", \"start\": 4505318, \"end\": 4505765}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT039.png\", \"start\": 4505765, \"end\": 4506086}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT040.png\", \"start\": 4506086, \"end\": 4506476}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT041.png\", \"start\": 4506476, \"end\": 4506865}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT042.png\", \"start\": 4506865, \"end\": 4507316}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT043.png\", \"start\": 4507316, \"end\": 4507675}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT044.png\", \"start\": 4507675, \"end\": 4507999}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT045.png\", \"start\": 4507999, \"end\": 4508312}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT046.png\", \"start\": 4508312, \"end\": 4508608}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT047.png\", \"start\": 4508608, \"end\": 4509031}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT048.png\", \"start\": 4509031, \"end\": 4509436}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT049.png\", \"start\": 4509436, \"end\": 4509816}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT050.png\", \"start\": 4509816, \"end\": 4510224}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT051.png\", \"start\": 4510224, \"end\": 4510687}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT052.png\", \"start\": 4510687, \"end\": 4511106}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT053.png\", \"start\": 4511106, \"end\": 4511514}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT054.png\", \"start\": 4511514, \"end\": 4511922}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT055.png\", \"start\": 4511922, \"end\": 4512326}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT056.png\", \"start\": 4512326, \"end\": 4512798}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT057.png\", \"start\": 4512798, \"end\": 4513213}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT058.png\", \"start\": 4513213, \"end\": 4513561}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT059.png\", \"start\": 4513561, \"end\": 4513922}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT060.png\", \"start\": 4513922, \"end\": 4514291}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT061.png\", \"start\": 4514291, \"end\": 4514632}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT062.png\", \"start\": 4514632, \"end\": 4515053}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT063.png\", \"start\": 4515053, \"end\": 4515456}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT064.png\", \"start\": 4515456, \"end\": 4515874}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT065.png\", \"start\": 4515874, \"end\": 4516377}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT066.png\", \"start\": 4516377, \"end\": 4516802}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT067.png\", \"start\": 4516802, \"end\": 4517205}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT068.png\", \"start\": 4517205, \"end\": 4517638}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT069.png\", \"start\": 4517638, \"end\": 4518054}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT070.png\", \"start\": 4518054, \"end\": 4518459}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT071.png\", \"start\": 4518459, \"end\": 4518878}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT072.png\", \"start\": 4518878, \"end\": 4519303}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT073.png\", \"start\": 4519303, \"end\": 4519705}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT074.png\", \"start\": 4519705, \"end\": 4520174}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT075.png\", \"start\": 4520174, \"end\": 4520608}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT076.png\", \"start\": 4520608, \"end\": 4520997}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT077.png\", \"start\": 4520997, \"end\": 4521452}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT078.png\", \"start\": 4521452, \"end\": 4521962}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT079.png\", \"start\": 4521962, \"end\": 4522372}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT080.png\", \"start\": 4522372, \"end\": 4522779}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT081.png\", \"start\": 4522779, \"end\": 4523196}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT082.png\", \"start\": 4523196, \"end\": 4523615}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT083.png\", \"start\": 4523615, \"end\": 4524041}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT084.png\", \"start\": 4524041, \"end\": 4524426}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT085.png\", \"start\": 4524426, \"end\": 4524841}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT086.png\", \"start\": 4524841, \"end\": 4525265}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT087.png\", \"start\": 4525265, \"end\": 4525710}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT088.png\", \"start\": 4525710, \"end\": 4526136}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT089.png\", \"start\": 4526136, \"end\": 4526601}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT090.png\", \"start\": 4526601, \"end\": 4527019}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT091.png\", \"start\": 4527019, \"end\": 4527406}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT092.png\", \"start\": 4527406, \"end\": 4527840}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT093.png\", \"start\": 4527840, \"end\": 4528236}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT094.png\", \"start\": 4528236, \"end\": 4528587}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT095.png\", \"start\": 4528587, \"end\": 4528900}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT096.png\", \"start\": 4528900, \"end\": 4529220}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT097.png\", \"start\": 4529220, \"end\": 4529678}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT098.png\", \"start\": 4529678, \"end\": 4530078}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT099.png\", \"start\": 4530078, \"end\": 4530512}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT100.png\", \"start\": 4530512, \"end\": 4530919}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT101.png\", \"start\": 4530919, \"end\": 4531315}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT102.png\", \"start\": 4531315, \"end\": 4531706}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT103.png\", \"start\": 4531706, \"end\": 4532150}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT104.png\", \"start\": 4532150, \"end\": 4532552}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT105.png\", \"start\": 4532552, \"end\": 4532932}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT106.png\", \"start\": 4532932, \"end\": 4533376}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT107.png\", \"start\": 4533376, \"end\": 4533845}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT108.png\", \"start\": 4533845, \"end\": 4534219}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT109.png\", \"start\": 4534219, \"end\": 4534640}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT110.png\", \"start\": 4534640, \"end\": 4535056}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT111.png\", \"start\": 4535056, \"end\": 4535505}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT112.png\", \"start\": 4535505, \"end\": 4535895}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT113.png\", \"start\": 4535895, \"end\": 4536353}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT114.png\", \"start\": 4536353, \"end\": 4536750}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT115.png\", \"start\": 4536750, \"end\": 4537161}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT116.png\", \"start\": 4537161, \"end\": 4537595}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT117.png\", \"start\": 4537595, \"end\": 4537997}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT118.png\", \"start\": 4537997, \"end\": 4538458}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT119.png\", \"start\": 4538458, \"end\": 4538875}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT120.png\", \"start\": 4538875, \"end\": 4539319}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT121.png\", \"start\": 4539319, \"end\": 4539712}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT122.png\", \"start\": 4539712, \"end\": 4540147}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT123.png\", \"start\": 4540147, \"end\": 4540537}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT124.png\", \"start\": 4540537, \"end\": 4540898}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT125.png\", \"start\": 4540898, \"end\": 4541286}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT126.png\", \"start\": 4541286, \"end\": 4541676}, {\"filename\": \"/edge_base/freedoom1/scripts/attacks.ddf\", \"start\": 4541676, \"end\": 4562832}, {\"filename\": \"/edge_base/freedoom1/scripts/fonts.ddf\", \"start\": 4562832, \"end\": 4563488}, {\"filename\": \"/edge_base/freedoom1/scripts/images.ddf\", \"start\": 4563488, \"end\": 4571257}, {\"filename\": \"/edge_base/freedoom1/scripts/language.ldf\", \"start\": 4571257, \"end\": 4582859}, {\"filename\": \"/edge_base/freedoom1/scripts/styles.ddf\", \"start\": 4582859, \"end\": 4588068}, {\"filename\": \"/edge_base/freedoom1/scripts/things.ddf\", \"start\": 4588068, \"end\": 4596460}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARL.lmp\", \"start\": 4596460, \"end\": 4599871}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARR.lmp\", \"start\": 4599871, \"end\": 4603282}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT033.png\", \"start\": 4603282, \"end\": 4603627}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT034.png\", \"start\": 4603627, \"end\": 4603974}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT035.png\", \"start\": 4603974, \"end\": 4604405}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT036.png\", \"start\": 4604405, \"end\": 4604814}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT037.png\", \"start\": 4604814, \"end\": 4605235}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT038.png\", \"start\": 4605235, \"end\": 4605682}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT039.png\", \"start\": 4605682, \"end\": 4606003}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT040.png\", \"start\": 4606003, \"end\": 4606393}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT041.png\", \"start\": 4606393, \"end\": 4606782}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT042.png\", \"start\": 4606782, \"end\": 4607233}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT043.png\", \"start\": 4607233, \"end\": 4607592}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT044.png\", \"start\": 4607592, \"end\": 4607916}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT045.png\", \"start\": 4607916, \"end\": 4608229}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT046.png\", \"start\": 4608229, \"end\": 4608525}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT047.png\", \"start\": 4608525, \"end\": 4608948}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT048.png\", \"start\": 4608948, \"end\": 4609353}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT049.png\", \"start\": 4609353, \"end\": 4609733}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT050.png\", \"start\": 4609733, \"end\": 4610141}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT051.png\", \"start\": 4610141, \"end\": 4610604}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT052.png\", \"start\": 4610604, \"end\": 4611023}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT053.png\", \"start\": 4611023, \"end\": 4611431}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT054.png\", \"start\": 4611431, \"end\": 4611839}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT055.png\", \"start\": 4611839, \"end\": 4612243}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT056.png\", \"start\": 4612243, \"end\": 4612715}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT057.png\", \"start\": 4612715, \"end\": 4613130}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT058.png\", \"start\": 4613130, \"end\": 4613478}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT059.png\", \"start\": 4613478, \"end\": 4613839}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT060.png\", \"start\": 4613839, \"end\": 4614208}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT061.png\", \"start\": 4614208, \"end\": 4614549}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT062.png\", \"start\": 4614549, \"end\": 4614970}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT063.png\", \"start\": 4614970, \"end\": 4615373}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT064.png\", \"start\": 4615373, \"end\": 4615791}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT065.png\", \"start\": 4615791, \"end\": 4616294}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT066.png\", \"start\": 4616294, \"end\": 4616719}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT067.png\", \"start\": 4616719, \"end\": 4617122}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT068.png\", \"start\": 4617122, \"end\": 4617555}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT069.png\", \"start\": 4617555, \"end\": 4617971}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT070.png\", \"start\": 4617971, \"end\": 4618376}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT071.png\", \"start\": 4618376, \"end\": 4618795}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT072.png\", \"start\": 4618795, \"end\": 4619220}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT073.png\", \"start\": 4619220, \"end\": 4619622}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT074.png\", \"start\": 4619622, \"end\": 4620091}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT075.png\", \"start\": 4620091, \"end\": 4620525}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT076.png\", \"start\": 4620525, \"end\": 4620914}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT077.png\", \"start\": 4620914, \"end\": 4621369}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT078.png\", \"start\": 4621369, \"end\": 4621879}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT079.png\", \"start\": 4621879, \"end\": 4622289}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT080.png\", \"start\": 4622289, \"end\": 4622696}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT081.png\", \"start\": 4622696, \"end\": 4623113}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT082.png\", \"start\": 4623113, \"end\": 4623532}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT083.png\", \"start\": 4623532, \"end\": 4623958}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT084.png\", \"start\": 4623958, \"end\": 4624343}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT085.png\", \"start\": 4624343, \"end\": 4624758}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT086.png\", \"start\": 4624758, \"end\": 4625182}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT087.png\", \"start\": 4625182, \"end\": 4625627}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT088.png\", \"start\": 4625627, \"end\": 4626053}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT089.png\", \"start\": 4626053, \"end\": 4626518}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT090.png\", \"start\": 4626518, \"end\": 4626936}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT091.png\", \"start\": 4626936, \"end\": 4627323}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT092.png\", \"start\": 4627323, \"end\": 4627757}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT093.png\", \"start\": 4627757, \"end\": 4628153}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT094.png\", \"start\": 4628153, \"end\": 4628504}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT095.png\", \"start\": 4628504, \"end\": 4628817}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT096.png\", \"start\": 4628817, \"end\": 4629137}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT097.png\", \"start\": 4629137, \"end\": 4629595}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT098.png\", \"start\": 4629595, \"end\": 4629995}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT099.png\", \"start\": 4629995, \"end\": 4630429}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT100.png\", \"start\": 4630429, \"end\": 4630836}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT101.png\", \"start\": 4630836, \"end\": 4631232}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT102.png\", \"start\": 4631232, \"end\": 4631623}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT103.png\", \"start\": 4631623, \"end\": 4632067}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT104.png\", \"start\": 4632067, \"end\": 4632469}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT105.png\", \"start\": 4632469, \"end\": 4632849}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT106.png\", \"start\": 4632849, \"end\": 4633293}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT107.png\", \"start\": 4633293, \"end\": 4633762}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT108.png\", \"start\": 4633762, \"end\": 4634136}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT109.png\", \"start\": 4634136, \"end\": 4634557}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT110.png\", \"start\": 4634557, \"end\": 4634973}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT111.png\", \"start\": 4634973, \"end\": 4635422}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT112.png\", \"start\": 4635422, \"end\": 4635812}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT113.png\", \"start\": 4635812, \"end\": 4636270}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT114.png\", \"start\": 4636270, \"end\": 4636667}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT115.png\", \"start\": 4636667, \"end\": 4637078}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT116.png\", \"start\": 4637078, \"end\": 4637512}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT117.png\", \"start\": 4637512, \"end\": 4637914}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT118.png\", \"start\": 4637914, \"end\": 4638375}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT119.png\", \"start\": 4638375, \"end\": 4638792}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT120.png\", \"start\": 4638792, \"end\": 4639236}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT121.png\", \"start\": 4639236, \"end\": 4639629}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT122.png\", \"start\": 4639629, \"end\": 4640064}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT123.png\", \"start\": 4640064, \"end\": 4640454}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT124.png\", \"start\": 4640454, \"end\": 4640815}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT125.png\", \"start\": 4640815, \"end\": 4641203}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT126.png\", \"start\": 4641203, \"end\": 4641593}, {\"filename\": \"/edge_base/freedoom2/scripts/attacks.ddf\", \"start\": 4641593, \"end\": 4662749}, {\"filename\": \"/edge_base/freedoom2/scripts/fonts.ddf\", \"start\": 4662749, \"end\": 4663405}, {\"filename\": \"/edge_base/freedoom2/scripts/images.ddf\", \"start\": 4663405, \"end\": 4671174}, {\"filename\": \"/edge_base/freedoom2/scripts/language.ldf\", \"start\": 4671174, \"end\": 4682637}, {\"filename\": \"/edge_base/freedoom2/scripts/styles.ddf\", \"start\": 4682637, \"end\": 4687474}, {\"filename\": \"/edge_base/freedoom2/scripts/things.ddf\", \"start\": 4687474, \"end\": 4695863}, {\"filename\": \"/edge_base/hacx/graphics/CREDIT.lmp\", \"start\": 4695863, \"end\": 4815151}, {\"filename\": \"/edge_base/hacx/graphics/HELP.lmp\", \"start\": 4815151, \"end\": 4934439}, {\"filename\": \"/edge_base/hacx/graphics/INTERPIC.lmp\", \"start\": 4934439, \"end\": 5053727}, {\"filename\": \"/edge_base/hacx/graphics/M_CONTRL.png\", \"start\": 5053727, \"end\": 5054332}, {\"filename\": \"/edge_base/hacx/graphics/M_EPISOD.lmp\", \"start\": 5054332, \"end\": 5057822}, {\"filename\": \"/edge_base/hacx/graphics/M_GAMEPL.png\", \"start\": 5057822, \"end\": 5058694}, {\"filename\": \"/edge_base/hacx/graphics/M_JKILL.lmp\", \"start\": 5058694, \"end\": 5063284}, {\"filename\": \"/edge_base/hacx/graphics/M_LOADG.lmp\", \"start\": 5063284, \"end\": 5065688}, {\"filename\": \"/edge_base/hacx/graphics/M_MSETTL.png\", \"start\": 5065688, \"end\": 5066452}, {\"filename\": \"/edge_base/hacx/graphics/M_NGAME.lmp\", \"start\": 5066452, \"end\": 5068579}, {\"filename\": \"/edge_base/hacx/graphics/M_RDTHIS.lmp\", \"start\": 5068579, \"end\": 5071088}, {\"filename\": \"/edge_base/hacx/graphics/M_SFXOPT.png\", \"start\": 5071088, \"end\": 5071796}, {\"filename\": \"/edge_base/hacx/graphics/M_VIDEO.png\", \"start\": 5071796, \"end\": 5072535}, {\"filename\": \"/edge_base/hacx/graphics/STBARL.lmp\", \"start\": 5072535, \"end\": 5075946}, {\"filename\": \"/edge_base/hacx/graphics/STBARR.lmp\", \"start\": 5075946, \"end\": 5079357}, {\"filename\": \"/edge_base/hacx/graphics/TITLEPIC.lmp\", \"start\": 5079357, \"end\": 5198645}, {\"filename\": \"/edge_base/hacx/scripts/anims.ddf\", \"start\": 5198645, \"end\": 5201817}, {\"filename\": \"/edge_base/hacx/scripts/attacks.ddf\", \"start\": 5201817, \"end\": 5209315}, {\"filename\": \"/edge_base/hacx/scripts/colmap.ddf\", \"start\": 5209315, \"end\": 5209593}, {\"filename\": \"/edge_base/hacx/scripts/fonts.ddf\", \"start\": 5209593, \"end\": 5210239}, {\"filename\": \"/edge_base/hacx/scripts/language.ldf\", \"start\": 5210239, \"end\": 5216239}, {\"filename\": \"/edge_base/hacx/scripts/lines.ddf\", \"start\": 5216239, \"end\": 5217127}, {\"filename\": \"/edge_base/hacx/scripts/playlist.ddf\", \"start\": 5217127, \"end\": 5218608}, {\"filename\": \"/edge_base/hacx/scripts/styles.ddf\", \"start\": 5218608, \"end\": 5219658}, {\"filename\": \"/edge_base/hacx/scripts/switch.ddf\", \"start\": 5219658, \"end\": 5222867}, {\"filename\": \"/edge_base/hacx/scripts/things.ddf\", \"start\": 5222867, \"end\": 5310373}, {\"filename\": \"/edge_base/hacx/scripts/weapons.ddf\", \"start\": 5310373, \"end\": 5315664}, {\"filename\": \"/edge_base/hacx/sprites/CHGFA0.lmp\", \"start\": 5315664, \"end\": 5330468}, {\"filename\": \"/edge_base/hacx/sprites/CHGFB0.lmp\", \"start\": 5330468, \"end\": 5345494}, {\"filename\": \"/edge_base/hacx/sprites/CHGGA0.lmp\", \"start\": 5345494, \"end\": 5360068}, {\"filename\": \"/edge_base/hacx/sprites/CHGGB0.lmp\", \"start\": 5360068, \"end\": 5366425}, {\"filename\": \"/edge_base/hacx/sprites/MISFA0.lmp\", \"start\": 5366425, \"end\": 5406697}, {\"filename\": \"/edge_base/hacx/sprites/MISFB0.lmp\", \"start\": 5406697, \"end\": 5441863}, {\"filename\": \"/edge_base/hacx/sprites/MISFC0.lmp\", \"start\": 5441863, \"end\": 5475016}, {\"filename\": \"/edge_base/hacx/sprites/MISFD0.lmp\", \"start\": 5475016, \"end\": 5511399}, {\"filename\": \"/edge_base/hacx/sprites/MISGA0.lmp\", \"start\": 5511399, \"end\": 5542929}, {\"filename\": \"/edge_base/hacx/sprites/MISGB0.lmp\", \"start\": 5542929, \"end\": 5578035}, {\"filename\": \"/edge_base/hacx/sprites/PISGD0.lmp\", \"start\": 5578035, \"end\": 5602178}, {\"filename\": \"/edge_base/hacx/sprites/PISGE0.lmp\", \"start\": 5602178, \"end\": 5631844}, {\"filename\": \"/edge_base/hacx/sprites/PLSGA0.lmp\", \"start\": 5631844, \"end\": 5642708}, {\"filename\": \"/edge_base/hacx/sprites/PLSGB0.lmp\", \"start\": 5642708, \"end\": 5656102}, {\"filename\": \"/edge_base/hacx/sprites/SAWGA0.lmp\", \"start\": 5656102, \"end\": 5670551}, {\"filename\": \"/edge_base/hacx/sprites/SAWGB0.lmp\", \"start\": 5670551, \"end\": 5684659}, {\"filename\": \"/edge_base/hacx/sprites/SAWGC0.lmp\", \"start\": 5684659, \"end\": 5693744}, {\"filename\": \"/edge_base/hacx/sprites/SAWGD0.lmp\", \"start\": 5693744, \"end\": 5702829}, {\"filename\": \"/edge_base/hacx/sprites/SHT2A0.lmp\", \"start\": 5702829, \"end\": 5718340}, {\"filename\": \"/edge_base/hacx/sprites/SHT2B0.lmp\", \"start\": 5718340, \"end\": 5734081}, {\"filename\": \"/edge_base/hacx/sprites/SHT2C0.lmp\", \"start\": 5734081, \"end\": 5750114}, {\"filename\": \"/edge_base/hacx/sprites/SHT2D0.lmp\", \"start\": 5750114, \"end\": 5766241}, {\"filename\": \"/edge_base/hacx/sprites/SHT2E0.lmp\", \"start\": 5766241, \"end\": 5782527}, {\"filename\": \"/edge_base/hacx/sprites/SHT2F0.lmp\", \"start\": 5782527, \"end\": 5798681}, {\"filename\": \"/edge_base/hacx/sprites/SHT2G0.lmp\", \"start\": 5798681, \"end\": 5814497}, {\"filename\": \"/edge_base/hacx/sprites/SHT2H0.lmp\", \"start\": 5814497, \"end\": 5830008}, {\"filename\": \"/edge_base/hacx/sprites/SHT2I0.lmp\", \"start\": 5830008, \"end\": 5845691}, {\"filename\": \"/edge_base/hacx/sprites/SHT2J0.lmp\", \"start\": 5845691, \"end\": 5861896}, {\"filename\": \"/edge_base/hacx/sprites/SHTFA0.lmp\", \"start\": 5861896, \"end\": 5870958}, {\"filename\": \"/edge_base/hacx/sprites/SHTFB0.lmp\", \"start\": 5870958, \"end\": 5880449}, {\"filename\": \"/edge_base/hacx/sprites/SHTGA0.lmp\", \"start\": 5880449, \"end\": 5889108}, {\"filename\": \"/edge_base/hacx/sprites/SHTGB0.lmp\", \"start\": 5889108, \"end\": 5902190}, {\"filename\": \"/edge_base/hacx/sprites/SHTGC0.lmp\", \"start\": 5902190, \"end\": 5921429}, {\"filename\": \"/edge_base/hacx/sprites/SHTGD0.lmp\", \"start\": 5921429, \"end\": 5939676}, {\"filename\": \"/edge_base/harmony/ENDOOM.bin\", \"start\": 5939676, \"end\": 5943676}, {\"filename\": \"/edge_base/harmony/graphics/BOSSBACK.lmp\", \"start\": 5943676, \"end\": 6034422}, {\"filename\": \"/edge_base/harmony/graphics/CREDIT.lmp\", \"start\": 6034422, \"end\": 6125168}, {\"filename\": \"/edge_base/harmony/graphics/HELP.lmp\", \"start\": 6125168, \"end\": 6214210}, {\"filename\": \"/edge_base/harmony/graphics/INTERPIC.lmp\", \"start\": 6214210, \"end\": 6304956}, {\"filename\": \"/edge_base/harmony/graphics/M_CONTRL.png\", \"start\": 6304956, \"end\": 6305419}, {\"filename\": \"/edge_base/harmony/graphics/M_EPISOD.lmp\", \"start\": 6305419, \"end\": 6308616}, {\"filename\": \"/edge_base/harmony/graphics/M_GAMEPL.png\", \"start\": 6308616, \"end\": 6309260}, {\"filename\": \"/edge_base/harmony/graphics/M_JKILL.lmp\", \"start\": 6309260, \"end\": 6310678}, {\"filename\": \"/edge_base/harmony/graphics/M_MSETTL.png\", \"start\": 6310678, \"end\": 6311216}, {\"filename\": \"/edge_base/harmony/graphics/M_NEWG.lmp\", \"start\": 6311216, \"end\": 6313590}, {\"filename\": \"/edge_base/harmony/graphics/M_NGAME.lmp\", \"start\": 6313590, \"end\": 6314540}, {\"filename\": \"/edge_base/harmony/graphics/M_OPTTTL.png\", \"start\": 6314540, \"end\": 6315852}, {\"filename\": \"/edge_base/harmony/graphics/M_RDTHIS.lmp\", \"start\": 6315852, \"end\": 6317711}, {\"filename\": \"/edge_base/harmony/graphics/M_SAVEG.lmp\", \"start\": 6317711, \"end\": 6318724}, {\"filename\": \"/edge_base/harmony/graphics/M_SFXOPT.png\", \"start\": 6318724, \"end\": 6319214}, {\"filename\": \"/edge_base/harmony/graphics/M_SVOL.png\", \"start\": 6319214, \"end\": 6320671}, {\"filename\": \"/edge_base/harmony/graphics/M_THERML.png\", \"start\": 6320671, \"end\": 6321611}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMM.png\", \"start\": 6321611, \"end\": 6322540}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMO.png\", \"start\": 6322540, \"end\": 6323455}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMR.png\", \"start\": 6323455, \"end\": 6324393}, {\"filename\": \"/edge_base/harmony/graphics/M_VIDEO.png\", \"start\": 6324393, \"end\": 6324904}, {\"filename\": \"/edge_base/harmony/graphics/STBARL.lmp\", \"start\": 6324904, \"end\": 6328315}, {\"filename\": \"/edge_base/harmony/graphics/STBARR.lmp\", \"start\": 6328315, \"end\": 6331726}, {\"filename\": \"/edge_base/harmony/graphics/STDISK.png\", \"start\": 6331726, \"end\": 6332703}, {\"filename\": \"/edge_base/harmony/graphics/TITLEPIC.lmp\", \"start\": 6332703, \"end\": 6421745}, {\"filename\": \"/edge_base/harmony/graphics/WICOLON.lmp\", \"start\": 6421745, \"end\": 6421847}, {\"filename\": \"/edge_base/harmony/graphics/WIF.lmp\", \"start\": 6421847, \"end\": 6421895}, {\"filename\": \"/edge_base/harmony/graphics/WIFRGS.lmp\", \"start\": 6421895, \"end\": 6423026}, {\"filename\": \"/edge_base/harmony/graphics/WIKILRS.lmp\", \"start\": 6423026, \"end\": 6423499}, {\"filename\": \"/edge_base/harmony/graphics/WIMINUS.lmp\", \"start\": 6423499, \"end\": 6423619}, {\"filename\": \"/edge_base/harmony/graphics/WIMSTT.lmp\", \"start\": 6423619, \"end\": 6424719}, {\"filename\": \"/edge_base/harmony/graphics/WINUM0.lmp\", \"start\": 6424719, \"end\": 6424969}, {\"filename\": \"/edge_base/harmony/graphics/WINUM1.lmp\", \"start\": 6424969, \"end\": 6425115}, {\"filename\": \"/edge_base/harmony/graphics/WINUM2.lmp\", \"start\": 6425115, \"end\": 6425401}, {\"filename\": \"/edge_base/harmony/graphics/WINUM3.lmp\", \"start\": 6425401, \"end\": 6425654}, {\"filename\": \"/edge_base/harmony/graphics/WINUM4.lmp\", \"start\": 6425654, \"end\": 6425878}, {\"filename\": \"/edge_base/harmony/graphics/WINUM5.lmp\", \"start\": 6425878, \"end\": 6426133}, {\"filename\": \"/edge_base/harmony/graphics/WINUM6.lmp\", \"start\": 6426133, \"end\": 6426395}, {\"filename\": \"/edge_base/harmony/graphics/WINUM7.lmp\", \"start\": 6426395, \"end\": 6426612}, {\"filename\": \"/edge_base/harmony/graphics/WINUM8.lmp\", \"start\": 6426612, \"end\": 6426874}, {\"filename\": \"/edge_base/harmony/graphics/WINUM9.lmp\", \"start\": 6426874, \"end\": 6427133}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTF.lmp\", \"start\": 6427133, \"end\": 6427373}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTI.lmp\", \"start\": 6427373, \"end\": 6428821}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTK.lmp\", \"start\": 6428821, \"end\": 6430166}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTS.lmp\", \"start\": 6430166, \"end\": 6431335}, {\"filename\": \"/edge_base/harmony/graphics/WIPAR.lmp\", \"start\": 6431335, \"end\": 6432312}, {\"filename\": \"/edge_base/harmony/graphics/WIPCNT.lmp\", \"start\": 6432312, \"end\": 6432561}, {\"filename\": \"/edge_base/harmony/graphics/WISCRT2.lmp\", \"start\": 6432561, \"end\": 6434336}, {\"filename\": \"/edge_base/harmony/graphics/WISUCKS.lmp\", \"start\": 6434336, \"end\": 6436045}, {\"filename\": \"/edge_base/harmony/graphics/WITIME.lmp\", \"start\": 6436045, \"end\": 6436892}, {\"filename\": \"/edge_base/harmony/graphics/WIVCTMS.lmp\", \"start\": 6436892, \"end\": 6437692}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN033.png\", \"start\": 6437692, \"end\": 6438855}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN034.png\", \"start\": 6438855, \"end\": 6440011}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN035.png\", \"start\": 6440011, \"end\": 6441180}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN036.png\", \"start\": 6441180, \"end\": 6442353}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN037.png\", \"start\": 6442353, \"end\": 6443529}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN038.png\", \"start\": 6443529, \"end\": 6444704}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN039.png\", \"start\": 6444704, \"end\": 6445851}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN040.png\", \"start\": 6445851, \"end\": 6447019}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN041.png\", \"start\": 6447019, \"end\": 6448187}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN042.png\", \"start\": 6448187, \"end\": 6449361}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN043.png\", \"start\": 6449361, \"end\": 6450531}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN044.png\", \"start\": 6450531, \"end\": 6451698}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN045.png\", \"start\": 6451698, \"end\": 6452596}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN046.png\", \"start\": 6452596, \"end\": 6453763}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN047.png\", \"start\": 6453763, \"end\": 6454936}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN048.png\", \"start\": 6454936, \"end\": 6456111}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN049.png\", \"start\": 6456111, \"end\": 6457277}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN050.png\", \"start\": 6457277, \"end\": 6458447}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN051.png\", \"start\": 6458447, \"end\": 6459622}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN052.png\", \"start\": 6459622, \"end\": 6460794}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN053.png\", \"start\": 6460794, \"end\": 6461968}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN054.png\", \"start\": 6461968, \"end\": 6463140}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN055.png\", \"start\": 6463140, \"end\": 6464313}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN056.png\", \"start\": 6464313, \"end\": 6465486}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN057.png\", \"start\": 6465486, \"end\": 6466656}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN058.png\", \"start\": 6466656, \"end\": 6467819}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN059.png\", \"start\": 6467819, \"end\": 6468977}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN060.png\", \"start\": 6468977, \"end\": 6470142}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN061.png\", \"start\": 6470142, \"end\": 6471294}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN062.png\", \"start\": 6471294, \"end\": 6472459}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN063.png\", \"start\": 6472459, \"end\": 6473631}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN064.png\", \"start\": 6473631, \"end\": 6474806}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN065.png\", \"start\": 6474806, \"end\": 6475979}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN066.png\", \"start\": 6475979, \"end\": 6477152}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN067.png\", \"start\": 6477152, \"end\": 6478324}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN068.png\", \"start\": 6478324, \"end\": 6479497}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN069.png\", \"start\": 6479497, \"end\": 6480400}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN070.png\", \"start\": 6480400, \"end\": 6481568}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN071.png\", \"start\": 6481568, \"end\": 6482740}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN072.png\", \"start\": 6482740, \"end\": 6483907}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN073.png\", \"start\": 6483907, \"end\": 6485071}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN074.png\", \"start\": 6485071, \"end\": 6486239}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN075.png\", \"start\": 6486239, \"end\": 6487415}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN076.png\", \"start\": 6487415, \"end\": 6488584}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN077.png\", \"start\": 6488584, \"end\": 6489764}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN078.png\", \"start\": 6489764, \"end\": 6490942}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN079.png\", \"start\": 6490942, \"end\": 6492116}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN080.png\", \"start\": 6492116, \"end\": 6493288}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN081.png\", \"start\": 6493288, \"end\": 6494464}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN082.png\", \"start\": 6494464, \"end\": 6495639}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN083.png\", \"start\": 6495639, \"end\": 6496813}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN084.png\", \"start\": 6496813, \"end\": 6497985}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN085.png\", \"start\": 6497985, \"end\": 6499156}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN086.png\", \"start\": 6499156, \"end\": 6500328}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN087.png\", \"start\": 6500328, \"end\": 6501506}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN088.png\", \"start\": 6501506, \"end\": 6502679}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN089.png\", \"start\": 6502679, \"end\": 6503852}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN090.png\", \"start\": 6503852, \"end\": 6505026}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN091.png\", \"start\": 6505026, \"end\": 6506193}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN092.png\", \"start\": 6506193, \"end\": 6507365}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN093.png\", \"start\": 6507365, \"end\": 6508532}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN094.png\", \"start\": 6508532, \"end\": 6509698}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN095.png\", \"start\": 6509698, \"end\": 6510596}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN121.png\", \"start\": 6510596, \"end\": 6511486}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STTPRCNT.png\", \"start\": 6511486, \"end\": 6512688}, {\"filename\": \"/edge_base/harmony/scripts/attacks.ddf\", \"start\": 6512688, \"end\": 6520576}, {\"filename\": \"/edge_base/harmony/scripts/coal_hud.ec\", \"start\": 6520576, \"end\": 6524487}, {\"filename\": \"/edge_base/harmony/scripts/colmap.ddf\", \"start\": 6524487, \"end\": 6524803}, {\"filename\": \"/edge_base/harmony/scripts/flats.ddf\", \"start\": 6524803, \"end\": 6525150}, {\"filename\": \"/edge_base/harmony/scripts/language.ldf\", \"start\": 6525150, \"end\": 6528924}, {\"filename\": \"/edge_base/harmony/scripts/levels.ddf\", \"start\": 6528924, \"end\": 6545213}, {\"filename\": \"/edge_base/harmony/scripts/playlist.ddf\", \"start\": 6545213, \"end\": 6546686}, {\"filename\": \"/edge_base/harmony/scripts/styles.ddf\", \"start\": 6546686, \"end\": 6547941}, {\"filename\": \"/edge_base/harmony/scripts/things.ddf\", \"start\": 6547941, \"end\": 6617961}, {\"filename\": \"/edge_base/harmony/scripts/weapons.ddf\", \"start\": 6617961, \"end\": 6621741}, {\"filename\": \"/edge_base/harmony/sprites/CELLA0.png\", \"start\": 6621741, \"end\": 6623483}, {\"filename\": \"/edge_base/harmony/sprites/CLIPA0.png\", \"start\": 6623483, \"end\": 6626169}, {\"filename\": \"/edge_base/harmony/sprites/ROCKA0.png\", \"start\": 6626169, \"end\": 6627600}, {\"filename\": \"/edge_base/harmony/sprites/SHELA0.png\", \"start\": 6627600, \"end\": 6629784}, {\"filename\": \"/edge_base/heretic/graphics/AUTOPAGE.png\", \"start\": 6629784, \"end\": 6672591}, {\"filename\": \"/edge_base/heretic/graphics/BARBACK.lmp\", \"start\": 6672591, \"end\": 6693105}, {\"filename\": \"/edge_base/heretic/graphics/CREDIT.lmp\", \"start\": 6693105, \"end\": 6812393}, {\"filename\": \"/edge_base/heretic/graphics/E2END.png\", \"start\": 6812393, \"end\": 6868817}, {\"filename\": \"/edge_base/heretic/graphics/FINAL1.lmp\", \"start\": 6868817, \"end\": 6988105}, {\"filename\": \"/edge_base/heretic/graphics/FINAL2.lmp\", \"start\": 6988105, \"end\": 7107393}, {\"filename\": \"/edge_base/heretic/graphics/HELP1.lmp\", \"start\": 7107393, \"end\": 7226681}, {\"filename\": \"/edge_base/heretic/graphics/HELP2.lmp\", \"start\": 7226681, \"end\": 7345969}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI1.lmp\", \"start\": 7345969, \"end\": 7349379}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI2.lmp\", \"start\": 7349379, \"end\": 7351366}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI3.lmp\", \"start\": 7351366, \"end\": 7355072}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI4.lmp\", \"start\": 7355072, \"end\": 7357248}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI5.lmp\", \"start\": 7357248, \"end\": 7361405}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI6.png\", \"start\": 7361405, \"end\": 7362713}, {\"filename\": \"/edge_base/heretic/graphics/IN1.png\", \"start\": 7362713, \"end\": 7363900}, {\"filename\": \"/edge_base/heretic/graphics/LTFCTOP.lmp\", \"start\": 7363900, \"end\": 7364591}, {\"filename\": \"/edge_base/heretic/graphics/MAPE1.lmp\", \"start\": 7364591, \"end\": 7483879}, {\"filename\": \"/edge_base/heretic/graphics/MAPE2.lmp\", \"start\": 7483879, \"end\": 7603167}, {\"filename\": \"/edge_base/heretic/graphics/MAPE3.lmp\", \"start\": 7603167, \"end\": 7722455}, {\"filename\": \"/edge_base/heretic/graphics/M_DOOM.lmp\", \"start\": 7722455, \"end\": 7730200}, {\"filename\": \"/edge_base/heretic/graphics/M_EPISOD.lmp\", \"start\": 7730200, \"end\": 7733168}, {\"filename\": \"/edge_base/heretic/graphics/M_HURT.lmp\", \"start\": 7733168, \"end\": 7736200}, {\"filename\": \"/edge_base/heretic/graphics/M_JKILL.lmp\", \"start\": 7736200, \"end\": 7740539}, {\"filename\": \"/edge_base/heretic/graphics/M_LOADG.lmp\", \"start\": 7740539, \"end\": 7742507}, {\"filename\": \"/edge_base/heretic/graphics/M_LSCNTR.lmp\", \"start\": 7742507, \"end\": 7742699}, {\"filename\": \"/edge_base/heretic/graphics/M_LSLEFT.lmp\", \"start\": 7742699, \"end\": 7742891}, {\"filename\": \"/edge_base/heretic/graphics/M_LSRGHT.lmp\", \"start\": 7742891, \"end\": 7743083}, {\"filename\": \"/edge_base/heretic/graphics/M_NEWG.lmp\", \"start\": 7743083, \"end\": 7745000}, {\"filename\": \"/edge_base/heretic/graphics/M_NGAME.lmp\", \"start\": 7745000, \"end\": 7746917}, {\"filename\": \"/edge_base/heretic/graphics/M_NMARE.lmp\", \"start\": 7746917, \"end\": 7752243}, {\"filename\": \"/edge_base/heretic/graphics/M_OPTION.lmp\", \"start\": 7752243, \"end\": 7753747}, {\"filename\": \"/edge_base/heretic/graphics/M_OPTTTL.lmp\", \"start\": 7753747, \"end\": 7755251}, {\"filename\": \"/edge_base/heretic/graphics/M_QUITG.lmp\", \"start\": 7755251, \"end\": 7757071}, {\"filename\": \"/edge_base/heretic/graphics/M_RDTHIS.lmp\", \"start\": 7757071, \"end\": 7758679}, {\"filename\": \"/edge_base/heretic/graphics/M_ROUGH.lmp\", \"start\": 7758679, \"end\": 7761997}, {\"filename\": \"/edge_base/heretic/graphics/M_SAVEG.lmp\", \"start\": 7761997, \"end\": 7764019}, {\"filename\": \"/edge_base/heretic/graphics/M_SKILL.lmp\", \"start\": 7764019, \"end\": 7767246}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL00.png\", \"start\": 7767246, \"end\": 7768422}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL01.png\", \"start\": 7768422, \"end\": 7769631}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL02.png\", \"start\": 7769631, \"end\": 7770896}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL03.png\", \"start\": 7770896, \"end\": 7772208}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL04.png\", \"start\": 7772208, \"end\": 7773622}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL05.png\", \"start\": 7773622, \"end\": 7774936}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL06.png\", \"start\": 7774936, \"end\": 7776323}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL07.png\", \"start\": 7776323, \"end\": 7777597}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL08.png\", \"start\": 7777597, \"end\": 7778651}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL09.png\", \"start\": 7778651, \"end\": 7779649}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL10.png\", \"start\": 7779649, \"end\": 7780741}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL11.png\", \"start\": 7780741, \"end\": 7781998}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL12.png\", \"start\": 7781998, \"end\": 7783481}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL13.png\", \"start\": 7783481, \"end\": 7784831}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL14.png\", \"start\": 7784831, \"end\": 7786435}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL15.png\", \"start\": 7786435, \"end\": 7787936}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL16.png\", \"start\": 7787936, \"end\": 7789214}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL17.png\", \"start\": 7789214, \"end\": 7790446}, {\"filename\": \"/edge_base/heretic/graphics/M_THERML.lmp\", \"start\": 7790446, \"end\": 7790580}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMM.lmp\", \"start\": 7790580, \"end\": 7790786}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMO.lmp\", \"start\": 7790786, \"end\": 7790894}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMR.lmp\", \"start\": 7790894, \"end\": 7791028}, {\"filename\": \"/edge_base/heretic/graphics/M_ULTRA.lmp\", \"start\": 7791028, \"end\": 7795283}, {\"filename\": \"/edge_base/heretic/graphics/NULL.png\", \"start\": 7795283, \"end\": 7796443}, {\"filename\": \"/edge_base/heretic/graphics/RTFCTOP.lmp\", \"start\": 7796443, \"end\": 7797192}, {\"filename\": \"/edge_base/heretic/graphics/STBARL.lmp\", \"start\": 7797192, \"end\": 7801433}, {\"filename\": \"/edge_base/heretic/graphics/STBARR.lmp\", \"start\": 7801433, \"end\": 7805674}, {\"filename\": \"/edge_base/heretic/graphics/TITLE.png\", \"start\": 7805674, \"end\": 7856297}, {\"filename\": \"/edge_base/heretic/graphics/WIENTER.png\", \"start\": 7856297, \"end\": 7857196}, {\"filename\": \"/edge_base/heretic/graphics/WIF.png\", \"start\": 7857196, \"end\": 7857942}, {\"filename\": \"/edge_base/heretic/graphics/__SKULL1.lmp\", \"start\": 7857942, \"end\": 7858318}, {\"filename\": \"/edge_base/heretic/graphics/__SKULL2.lmp\", \"start\": 7858318, \"end\": 7858694}, {\"filename\": \"/edge_base/heretic/scripts/anims.ddf\", \"start\": 7858694, \"end\": 7860417}, {\"filename\": \"/edge_base/heretic/scripts/attacks.ddf\", \"start\": 7860417, \"end\": 7902076}, {\"filename\": \"/edge_base/heretic/scripts/coal_hud.ec\", \"start\": 7902076, \"end\": 7917647}, {\"filename\": \"/edge_base/heretic/scripts/flats.ddf\", \"start\": 7917647, \"end\": 7918204}, {\"filename\": \"/edge_base/heretic/scripts/fonts.ddf\", \"start\": 7918204, \"end\": 7919252}, {\"filename\": \"/edge_base/heretic/scripts/games.ddf\", \"start\": 7919252, \"end\": 7921890}, {\"filename\": \"/edge_base/heretic/scripts/images.ddf\", \"start\": 7921890, \"end\": 7924709}, {\"filename\": \"/edge_base/heretic/scripts/language.ldf\", \"start\": 7924709, \"end\": 7933438}, {\"filename\": \"/edge_base/heretic/scripts/levels.ddf\", \"start\": 7933438, \"end\": 7947028}, {\"filename\": \"/edge_base/heretic/scripts/lines.ddf\", \"start\": 7947028, \"end\": 7951863}, {\"filename\": \"/edge_base/heretic/scripts/playlist.ddf\", \"start\": 7951863, \"end\": 7954019}, {\"filename\": \"/edge_base/heretic/scripts/rscript.rts\", \"start\": 7954019, \"end\": 7967067}, {\"filename\": \"/edge_base/heretic/scripts/sectors.ddf\", \"start\": 7967067, \"end\": 7968551}, {\"filename\": \"/edge_base/heretic/scripts/sounds.ddf\", \"start\": 7968551, \"end\": 7979753}, {\"filename\": \"/edge_base/heretic/scripts/styles.ddf\", \"start\": 7979753, \"end\": 7984298}, {\"filename\": \"/edge_base/heretic/scripts/switch.ddf\", \"start\": 7984298, \"end\": 7984753}, {\"filename\": \"/edge_base/heretic/scripts/things.ddf\", \"start\": 7984753, \"end\": 8068588}, {\"filename\": \"/edge_base/heretic/scripts/weapons.ddf\", \"start\": 8068588, \"end\": 8078909}, {\"filename\": \"/edge_base/heretic/sprites/STFFC0.lmp\", \"start\": 8078909, \"end\": 8096039}, {\"filename\": \"/edge_base/heretic/sprites/STFFH0.lmp\", \"start\": 8096039, \"end\": 8114085}, {\"filename\": \"/edge_base/plutonia/graphics/BOSSBACK.lmp\", \"start\": 8114085, \"end\": 8233373}, {\"filename\": \"/edge_base/plutonia/graphics/CREDIT.lmp\", \"start\": 8233373, \"end\": 8352661}, {\"filename\": \"/edge_base/plutonia/graphics/INTERPIC.lmp\", \"start\": 8352661, \"end\": 8471949}, {\"filename\": \"/edge_base/plutonia/graphics/TITLEPIC.lmp\", \"start\": 8471949, \"end\": 8591237}, {\"filename\": \"/edge_base/plutonia/scripts/images.ddf\", \"start\": 8591237, \"end\": 8592663}, {\"filename\": \"/edge_base/plutonia/scripts/language.ldf\", \"start\": 8592663, \"end\": 8596148}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_B.png\", \"start\": 8596148, \"end\": 8611179}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_E.png\", \"start\": 8611179, \"end\": 8626175}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_N.png\", \"start\": 8626175, \"end\": 8639254}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_S.png\", \"start\": 8639254, \"end\": 8652333}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_T.png\", \"start\": 8652333, \"end\": 8667364}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_W.png\", \"start\": 8667364, \"end\": 8682360}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_B.png\", \"start\": 8682360, \"end\": 8710295}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_E.png\", \"start\": 8710295, \"end\": 8721935}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_N.png\", \"start\": 8721935, \"end\": 8733844}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_S.png\", \"start\": 8733844, \"end\": 8745753}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_T.png\", \"start\": 8745753, \"end\": 8773688}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_W.png\", \"start\": 8773688, \"end\": 8785328}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_B.png\", \"start\": 8785328, \"end\": 8984078}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_E.png\", \"start\": 8984078, \"end\": 9074671}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_N.png\", \"start\": 9074671, \"end\": 9158055}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_S.png\", \"start\": 9158055, \"end\": 9241439}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_T.png\", \"start\": 9241439, \"end\": 9440189}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_W.png\", \"start\": 9440189, \"end\": 9530782}, {\"filename\": \"/edge_base/rekkr/graphics/M_DOOM.lmp\", \"start\": 9530782, \"end\": 9556073}, {\"filename\": \"/edge_base/rekkr/graphics/M_EPISOD.lmp\", \"start\": 9556073, \"end\": 9573543}, {\"filename\": \"/edge_base/rekkr/graphics/M_HURT.lmp\", \"start\": 9573543, \"end\": 9575682}, {\"filename\": \"/edge_base/rekkr/graphics/M_JKILL.lmp\", \"start\": 9575682, \"end\": 9578441}, {\"filename\": \"/edge_base/rekkr/graphics/M_LGTTL.lmp\", \"start\": 9578441, \"end\": 9580628}, {\"filename\": \"/edge_base/rekkr/graphics/M_LOADG.lmp\", \"start\": 9580628, \"end\": 9582745}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSCNTR.lmp\", \"start\": 9582745, \"end\": 9582937}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSLEFT.lmp\", \"start\": 9582937, \"end\": 9583129}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSRGHT.lmp\", \"start\": 9583129, \"end\": 9583321}, {\"filename\": \"/edge_base/rekkr/graphics/M_NEWG.lmp\", \"start\": 9583321, \"end\": 9586596}, {\"filename\": \"/edge_base/rekkr/graphics/M_NGAME.lmp\", \"start\": 9586596, \"end\": 9588644}, {\"filename\": \"/edge_base/rekkr/graphics/M_NMARE.lmp\", \"start\": 9588644, \"end\": 9591078}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTION.lmp\", \"start\": 9591078, \"end\": 9592915}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTTTL.lmp\", \"start\": 9592915, \"end\": 9594637}, {\"filename\": \"/edge_base/rekkr/graphics/M_QUITG.lmp\", \"start\": 9594637, \"end\": 9596705}, {\"filename\": \"/edge_base/rekkr/graphics/M_RDTHIS.lmp\", \"start\": 9596705, \"end\": 9597950}, {\"filename\": \"/edge_base/rekkr/graphics/M_ROUGH.lmp\", \"start\": 9597950, \"end\": 9600519}, {\"filename\": \"/edge_base/rekkr/graphics/M_SAVEG.lmp\", \"start\": 9600519, \"end\": 9602739}, {\"filename\": \"/edge_base/rekkr/graphics/M_SGTTL.lmp\", \"start\": 9602739, \"end\": 9604959}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKILL.lmp\", \"start\": 9604959, \"end\": 9633051}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL1.png\", \"start\": 9633051, \"end\": 9633639}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL2.png\", \"start\": 9633639, \"end\": 9634221}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL3.png\", \"start\": 9634221, \"end\": 9634816}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL4.png\", \"start\": 9634816, \"end\": 9635404}, {\"filename\": \"/edge_base/rekkr/graphics/M_ULTRA.lmp\", \"start\": 9635404, \"end\": 9637778}, {\"filename\": \"/edge_base/rekkr/graphics/STBARL.lmp\", \"start\": 9637778, \"end\": 9641189}, {\"filename\": \"/edge_base/rekkr/graphics/STBARR.lmp\", \"start\": 9641189, \"end\": 9644600}, {\"filename\": \"/edge_base/rekkr/graphics/WIENTER.lmp\", \"start\": 9644600, \"end\": 9646525}, {\"filename\": \"/edge_base/rekkr/graphics/WIF.lmp\", \"start\": 9646525, \"end\": 9648306}, {\"filename\": \"/edge_base/rekkr/graphics/WILV00.lmp\", \"start\": 9648306, \"end\": 9649905}, {\"filename\": \"/edge_base/rekkr/graphics/WILV01.lmp\", \"start\": 9649905, \"end\": 9650921}, {\"filename\": \"/edge_base/rekkr/graphics/WILV02.lmp\", \"start\": 9650921, \"end\": 9652948}, {\"filename\": \"/edge_base/rekkr/graphics/WILV03.lmp\", \"start\": 9652948, \"end\": 9655515}, {\"filename\": \"/edge_base/rekkr/graphics/WILV04.lmp\", \"start\": 9655515, \"end\": 9657230}, {\"filename\": \"/edge_base/rekkr/graphics/WILV05.lmp\", \"start\": 9657230, \"end\": 9658958}, {\"filename\": \"/edge_base/rekkr/graphics/WILV06.lmp\", \"start\": 9658958, \"end\": 9662342}, {\"filename\": \"/edge_base/rekkr/graphics/WILV07.lmp\", \"start\": 9662342, \"end\": 9665846}, {\"filename\": \"/edge_base/rekkr/graphics/WILV08.lmp\", \"start\": 9665846, \"end\": 9668689}, {\"filename\": \"/edge_base/rekkr/graphics/WILV10.lmp\", \"start\": 9668689, \"end\": 9670068}, {\"filename\": \"/edge_base/rekkr/graphics/WILV11.lmp\", \"start\": 9670068, \"end\": 9671704}, {\"filename\": \"/edge_base/rekkr/graphics/WILV12.lmp\", \"start\": 9671704, \"end\": 9674024}, {\"filename\": \"/edge_base/rekkr/graphics/WILV13.lmp\", \"start\": 9674024, \"end\": 9675234}, {\"filename\": \"/edge_base/rekkr/graphics/WILV14.lmp\", \"start\": 9675234, \"end\": 9677931}, {\"filename\": \"/edge_base/rekkr/graphics/WILV15.lmp\", \"start\": 9677931, \"end\": 9681018}, {\"filename\": \"/edge_base/rekkr/graphics/WILV16.lmp\", \"start\": 9681018, \"end\": 9682659}, {\"filename\": \"/edge_base/rekkr/graphics/WILV17.lmp\", \"start\": 9682659, \"end\": 9684547}, {\"filename\": \"/edge_base/rekkr/graphics/WILV18.lmp\", \"start\": 9684547, \"end\": 9685734}, {\"filename\": \"/edge_base/rekkr/graphics/WILV20.lmp\", \"start\": 9685734, \"end\": 9687695}, {\"filename\": \"/edge_base/rekkr/graphics/WILV21.lmp\", \"start\": 9687695, \"end\": 9690811}, {\"filename\": \"/edge_base/rekkr/graphics/WILV22.lmp\", \"start\": 9690811, \"end\": 9692572}, {\"filename\": \"/edge_base/rekkr/graphics/WILV23.lmp\", \"start\": 9692572, \"end\": 9695431}, {\"filename\": \"/edge_base/rekkr/graphics/WILV24.lmp\", \"start\": 9695431, \"end\": 9697144}, {\"filename\": \"/edge_base/rekkr/graphics/WILV25.lmp\", \"start\": 9697144, \"end\": 9699408}, {\"filename\": \"/edge_base/rekkr/graphics/WILV26.lmp\", \"start\": 9699408, \"end\": 9700641}, {\"filename\": \"/edge_base/rekkr/graphics/WILV27.lmp\", \"start\": 9700641, \"end\": 9701384}, {\"filename\": \"/edge_base/rekkr/graphics/WILV28.lmp\", \"start\": 9701384, \"end\": 9705162}, {\"filename\": \"/edge_base/rekkr/graphics/WILV30.lmp\", \"start\": 9705162, \"end\": 9707014}, {\"filename\": \"/edge_base/rekkr/graphics/WILV31.lmp\", \"start\": 9707014, \"end\": 9708652}, {\"filename\": \"/edge_base/rekkr/graphics/WILV32.lmp\", \"start\": 9708652, \"end\": 9709774}, {\"filename\": \"/edge_base/rekkr/graphics/WILV33.lmp\", \"start\": 9709774, \"end\": 9712113}, {\"filename\": \"/edge_base/rekkr/graphics/WILV34.lmp\", \"start\": 9712113, \"end\": 9714116}, {\"filename\": \"/edge_base/rekkr/graphics/WILV35.lmp\", \"start\": 9714116, \"end\": 9716250}, {\"filename\": \"/edge_base/rekkr/graphics/WILV36.lmp\", \"start\": 9716250, \"end\": 9719316}, {\"filename\": \"/edge_base/rekkr/graphics/WILV37.lmp\", \"start\": 9719316, \"end\": 9721311}, {\"filename\": \"/edge_base/rekkr/graphics/WILV38.lmp\", \"start\": 9721311, \"end\": 9723171}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTF.lmp\", \"start\": 9723171, \"end\": 9723433}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTI.lmp\", \"start\": 9723433, \"end\": 9724639}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTK.lmp\", \"start\": 9724639, \"end\": 9725704}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTS.lmp\", \"start\": 9725704, \"end\": 9726734}, {\"filename\": \"/edge_base/rekkr/graphics/WIPAR.lmp\", \"start\": 9726734, \"end\": 9727496}, {\"filename\": \"/edge_base/rekkr/graphics/WISCRT2.lmp\", \"start\": 9727496, \"end\": 9729063}, {\"filename\": \"/edge_base/rekkr/graphics/WITIME.lmp\", \"start\": 9729063, \"end\": 9729977}, {\"filename\": \"/edge_base/rekkr/scripts/anims.ddf\", \"start\": 9729977, \"end\": 9730121}, {\"filename\": \"/edge_base/rekkr/scripts/attacks.ddf\", \"start\": 9730121, \"end\": 9730881}, {\"filename\": \"/edge_base/rekkr/scripts/images.ddf\", \"start\": 9730881, \"end\": 9738029}, {\"filename\": \"/edge_base/rekkr/scripts/language.ldf\", \"start\": 9738029, \"end\": 9738839}, {\"filename\": \"/edge_base/rekkr/scripts/styles.ddf\", \"start\": 9738839, \"end\": 9742733}, {\"filename\": \"/edge_base/rekkr/scripts/things.ddf\", \"start\": 9742733, \"end\": 9744973}, {\"filename\": \"/edge_base/rekkr/scripts/weapons.ddf\", \"start\": 9744973, \"end\": 9746908}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA1.lmp\", \"start\": 9746908, \"end\": 9747533}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA2A8.lmp\", \"start\": 9747533, \"end\": 9748508}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA3A7.lmp\", \"start\": 9748508, \"end\": 9749483}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA4A6.lmp\", \"start\": 9749483, \"end\": 9750458}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA5.lmp\", \"start\": 9750458, \"end\": 9751089}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB1.lmp\", \"start\": 9751089, \"end\": 9751672}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB2B8.lmp\", \"start\": 9751672, \"end\": 9752639}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB3B7.lmp\", \"start\": 9752639, \"end\": 9753606}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB4B6.lmp\", \"start\": 9753606, \"end\": 9754573}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB5.lmp\", \"start\": 9754573, \"end\": 9755155}, {\"filename\": \"/edge_base/tnt/graphics/BOSSBACK.lmp\", \"start\": 9755155, \"end\": 9874443}, {\"filename\": \"/edge_base/tnt/graphics/CREDIT.lmp\", \"start\": 9874443, \"end\": 9993731}, {\"filename\": \"/edge_base/tnt/graphics/INTERPIC.lmp\", \"start\": 9993731, \"end\": 10113019}, {\"filename\": \"/edge_base/tnt/graphics/TITLEPIC.lmp\", \"start\": 10113019, \"end\": 10232307}, {\"filename\": \"/edge_base/tnt/scripts/images.ddf\", \"start\": 10232307, \"end\": 10233737}, {\"filename\": \"/edge_base/tnt/scripts/language.ldf\", \"start\": 10233737, \"end\": 10237516}, {\"filename\": \"/edge_base/tnt/textures/SKY1_B.png\", \"start\": 10237516, \"end\": 10253509}, {\"filename\": \"/edge_base/tnt/textures/SKY1_E.png\", \"start\": 10253509, \"end\": 10272975}, {\"filename\": \"/edge_base/tnt/textures/SKY1_N.png\", \"start\": 10272975, \"end\": 10290401}, {\"filename\": \"/edge_base/tnt/textures/SKY1_S.png\", \"start\": 10290401, \"end\": 10306308}, {\"filename\": \"/edge_base/tnt/textures/SKY1_T.png\", \"start\": 10306308, \"end\": 10346426}, {\"filename\": \"/edge_base/tnt/textures/SKY1_W.png\", \"start\": 10346426, \"end\": 10365750}, {\"filename\": \"/edge_base/tnt/textures/SKY2_B.png\", \"start\": 10365750, \"end\": 10367061}, {\"filename\": \"/edge_base/tnt/textures/SKY2_E.png\", \"start\": 10367061, \"end\": 10371584}, {\"filename\": \"/edge_base/tnt/textures/SKY2_N.png\", \"start\": 10371584, \"end\": 10372813}, {\"filename\": \"/edge_base/tnt/textures/SKY2_S.png\", \"start\": 10372813, \"end\": 10379030}, {\"filename\": \"/edge_base/tnt/textures/SKY2_T.png\", \"start\": 10379030, \"end\": 10383157}, {\"filename\": \"/edge_base/tnt/textures/SKY2_W.png\", \"start\": 10383157, \"end\": 10384699}, {\"filename\": \"/edge_base/tnt/textures/SKY3_B.png\", \"start\": 10384699, \"end\": 10409170}, {\"filename\": \"/edge_base/tnt/textures/SKY3_E.png\", \"start\": 10409170, \"end\": 10416872}, {\"filename\": \"/edge_base/tnt/textures/SKY3_N.png\", \"start\": 10416872, \"end\": 10424751}, {\"filename\": \"/edge_base/tnt/textures/SKY3_S.png\", \"start\": 10424751, \"end\": 10432099}, {\"filename\": \"/edge_base/tnt/textures/SKY3_T.png\", \"start\": 10432099, \"end\": 10456570}, {\"filename\": \"/edge_base/tnt/textures/SKY3_W.png\", \"start\": 10456570, \"end\": 10463911}, {\"filename\": \"/edge_defs/colormaps/AUTOMAPS.dat\", \"start\": 10463911, \"end\": 10464423}, {\"filename\": \"/edge_defs/colormaps/LAVAMAP.cmp\", \"start\": 10464423, \"end\": 10473127}, {\"filename\": \"/edge_defs/colormaps/NITEVMAP.cmp\", \"start\": 10473127, \"end\": 10473383}, {\"filename\": \"/edge_defs/colormaps/PLYRMAPS.dat\", \"start\": 10473383, \"end\": 10477223}, {\"filename\": \"/edge_defs/colormaps/SARGMAPS.dat\", \"start\": 10477223, \"end\": 10478759}, {\"filename\": \"/edge_defs/colormaps/SHADEMAP.cmp\", \"start\": 10478759, \"end\": 10479015}, {\"filename\": \"/edge_defs/colormaps/SKINMAPS.dat\", \"start\": 10479015, \"end\": 10480295}, {\"filename\": \"/edge_defs/colormaps/SLIMEMAP.cmp\", \"start\": 10480295, \"end\": 10488999}, {\"filename\": \"/edge_defs/colormaps/TEXTMAPS.dat\", \"start\": 10488999, \"end\": 10490791}, {\"filename\": \"/edge_defs/colormaps/TXTBLUES.dat\", \"start\": 10490791, \"end\": 10492071}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS1.dat\", \"start\": 10492071, \"end\": 10493351}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS2.dat\", \"start\": 10493351, \"end\": 10494631}, {\"filename\": \"/edge_defs/colormaps/TXTGREYS.dat\", \"start\": 10494631, \"end\": 10495911}, {\"filename\": \"/edge_defs/colormaps/TXTGRNS.dat\", \"start\": 10495911, \"end\": 10497191}, {\"filename\": \"/edge_defs/colormaps/TXTORANS.dat\", \"start\": 10497191, \"end\": 10498471}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS1.dat\", \"start\": 10498471, \"end\": 10499751}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS2.dat\", \"start\": 10499751, \"end\": 10501031}, {\"filename\": \"/edge_defs/colormaps/TXTPURPS.dat\", \"start\": 10501031, \"end\": 10502311}, {\"filename\": \"/edge_defs/colormaps/TXTREDS.dat\", \"start\": 10502311, \"end\": 10503591}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS1.dat\", \"start\": 10503591, \"end\": 10504871}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS2.dat\", \"start\": 10504871, \"end\": 10506151}, {\"filename\": \"/edge_defs/colormaps/WATERMAP.cmp\", \"start\": 10506151, \"end\": 10514855}, {\"filename\": \"/edge_defs/graphics/CREDIT2.lmp\", \"start\": 10514855, \"end\": 10581743}, {\"filename\": \"/edge_defs/graphics/DLITEXPN.png\", \"start\": 10581743, \"end\": 10596086}, {\"filename\": \"/edge_defs/graphics/EDGECBG1.jpg\", \"start\": 10596086, \"end\": 10659453}, {\"filename\": \"/edge_defs/graphics/EDGECRED.png\", \"start\": 10659453, \"end\": 10827052}, {\"filename\": \"/edge_defs/graphics/EDGETTL.lmp\", \"start\": 10827052, \"end\": 10893940}, {\"filename\": \"/edge_defs/graphics/ENDFONT.png\", \"start\": 10893940, \"end\": 10901044}, {\"filename\": \"/edge_defs/graphics/FONTVERD.png\", \"start\": 10901044, \"end\": 10945675}, {\"filename\": \"/edge_defs/graphics/MOUSE.lmp\", \"start\": 10945675, \"end\": 10945858}, {\"filename\": \"/edge_defs/graphics/M_EPI5.lmp\", \"start\": 10945858, \"end\": 10947002}, {\"filename\": \"/edge_defs/graphics/M_EPI6.lmp\", \"start\": 10947002, \"end\": 10950032}, {\"filename\": \"/edge_defs/graphics/STBARL.lmp\", \"start\": 10950032, \"end\": 10953443}, {\"filename\": \"/edge_defs/graphics/STBARR.lmp\", \"start\": 10953443, \"end\": 10956854}, {\"filename\": \"/edge_defs/graphics/STCFN000.lmp\", \"start\": 10956854, \"end\": 10956998}, {\"filename\": \"/edge_defs/graphics/STCFN132.lmp\", \"start\": 10956998, \"end\": 10957140}, {\"filename\": \"/edge_defs/graphics/STCFN134.lmp\", \"start\": 10957140, \"end\": 10957267}, {\"filename\": \"/edge_defs/graphics/STCFN148.lmp\", \"start\": 10957267, \"end\": 10957402}, {\"filename\": \"/edge_defs/graphics/STDESYNC.lmp\", \"start\": 10957402, \"end\": 10959999}, {\"filename\": \"/edge_defs/graphics/STFB0.lmp\", \"start\": 10959999, \"end\": 10961407}, {\"filename\": \"/edge_defs/graphics/STFB1.lmp\", \"start\": 10961407, \"end\": 10962815}, {\"filename\": \"/edge_defs/graphics/STFB2.lmp\", \"start\": 10962815, \"end\": 10964223}, {\"filename\": \"/edge_defs/graphics/STFB3.lmp\", \"start\": 10964223, \"end\": 10965631}, {\"filename\": \"/edge_defs/graphics/STFB4.lmp\", \"start\": 10965631, \"end\": 10967039}, {\"filename\": \"/edge_defs/graphics/STFB5.lmp\", \"start\": 10967039, \"end\": 10968447}, {\"filename\": \"/edge_defs/graphics/STFB6.lmp\", \"start\": 10968447, \"end\": 10969855}, {\"filename\": \"/edge_defs/graphics/STFB7.lmp\", \"start\": 10969855, \"end\": 10971263}, {\"filename\": \"/edge_defs/graphics/STKEYS6.lmp\", \"start\": 10971263, \"end\": 10971383}, {\"filename\": \"/edge_defs/graphics/STKEYS7.lmp\", \"start\": 10971383, \"end\": 10971503}, {\"filename\": \"/edge_defs/graphics/STKEYS8.lmp\", \"start\": 10971503, \"end\": 10971623}, {\"filename\": \"/edge_defs/graphics/STPB0.lmp\", \"start\": 10971623, \"end\": 10973101}, {\"filename\": \"/edge_defs/graphics/STPB1.lmp\", \"start\": 10973101, \"end\": 10974579}, {\"filename\": \"/edge_defs/graphics/STPB2.lmp\", \"start\": 10974579, \"end\": 10976057}, {\"filename\": \"/edge_defs/graphics/STPB3.lmp\", \"start\": 10976057, \"end\": 10977535}, {\"filename\": \"/edge_defs/graphics/STPB4.lmp\", \"start\": 10977535, \"end\": 10979013}, {\"filename\": \"/edge_defs/graphics/STPB5.lmp\", \"start\": 10979013, \"end\": 10980491}, {\"filename\": \"/edge_defs/graphics/STPB6.lmp\", \"start\": 10980491, \"end\": 10981969}, {\"filename\": \"/edge_defs/graphics/STPB7.lmp\", \"start\": 10981969, \"end\": 10983447}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR1.png\", \"start\": 10983447, \"end\": 10983640}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR2.png\", \"start\": 10983640, \"end\": 10983825}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR3.png\", \"start\": 10983825, \"end\": 10984010}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR4.png\", \"start\": 10984010, \"end\": 10984197}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR5.png\", \"start\": 10984197, \"end\": 10984463}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR6.png\", \"start\": 10984463, \"end\": 10984804}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR7.png\", \"start\": 10984804, \"end\": 10985098}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR8.png\", \"start\": 10985098, \"end\": 10986482}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR9.png\", \"start\": 10986482, \"end\": 10986901}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN001.png\", \"start\": 10986901, \"end\": 10987258}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN002.png\", \"start\": 10987258, \"end\": 10987603}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN003.png\", \"start\": 10987603, \"end\": 10987959}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN004.png\", \"start\": 10987959, \"end\": 10988307}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN005.png\", \"start\": 10988307, \"end\": 10988646}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN006.png\", \"start\": 10988646, \"end\": 10988964}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN007.png\", \"start\": 10988964, \"end\": 10989314}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN008.png\", \"start\": 10989314, \"end\": 10989670}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN009.png\", \"start\": 10989670, \"end\": 10989949}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN010.png\", \"start\": 10989949, \"end\": 10990274}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN011.png\", \"start\": 10990274, \"end\": 10990643}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN012.png\", \"start\": 10990643, \"end\": 10990967}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN013.png\", \"start\": 10990967, \"end\": 10991333}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN014.png\", \"start\": 10991333, \"end\": 10991689}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN015.png\", \"start\": 10991689, \"end\": 10992062}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN016.png\", \"start\": 10992062, \"end\": 10992396}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN017.png\", \"start\": 10992396, \"end\": 10992771}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN018.png\", \"start\": 10992771, \"end\": 10993129}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN019.png\", \"start\": 10993129, \"end\": 10993480}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN020.png\", \"start\": 10993480, \"end\": 10993799}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN021.png\", \"start\": 10993799, \"end\": 10994145}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN022.png\", \"start\": 10994145, \"end\": 10994474}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN023.png\", \"start\": 10994474, \"end\": 10994829}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN024.png\", \"start\": 10994829, \"end\": 10995180}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN025.png\", \"start\": 10995180, \"end\": 10995529}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN026.png\", \"start\": 10995529, \"end\": 10995867}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN027.png\", \"start\": 10995867, \"end\": 10996156}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN028.png\", \"start\": 10996156, \"end\": 10996470}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN029.png\", \"start\": 10996470, \"end\": 10996713}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN030.png\", \"start\": 10996713, \"end\": 10996956}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN031.png\", \"start\": 10996956, \"end\": 10997222}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN032.png\", \"start\": 10997222, \"end\": 10997455}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN033.png\", \"start\": 10997455, \"end\": 10997793}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN034.png\", \"start\": 10997793, \"end\": 10998086}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN035.png\", \"start\": 10998086, \"end\": 10998424}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN036.png\", \"start\": 10998424, \"end\": 10998753}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN037.png\", \"start\": 10998753, \"end\": 10999082}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN038.png\", \"start\": 10999082, \"end\": 10999415}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN039.png\", \"start\": 10999415, \"end\": 10999751}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN040.png\", \"start\": 10999751, \"end\": 11000048}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN041.png\", \"start\": 11000048, \"end\": 11000388}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN042.png\", \"start\": 11000388, \"end\": 11000728}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN043.png\", \"start\": 11000728, \"end\": 11000963}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN044.png\", \"start\": 11000963, \"end\": 11001283}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN045.png\", \"start\": 11001283, \"end\": 11001567}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN046.png\", \"start\": 11001567, \"end\": 11001897}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN047.png\", \"start\": 11001897, \"end\": 11002235}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN048.png\", \"start\": 11002235, \"end\": 11002550}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN049.png\", \"start\": 11002550, \"end\": 11002879}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN050.png\", \"start\": 11002879, \"end\": 11003201}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN051.png\", \"start\": 11003201, \"end\": 11003518}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN052.png\", \"start\": 11003518, \"end\": 11003857}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN053.png\", \"start\": 11003857, \"end\": 11004177}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN054.png\", \"start\": 11004177, \"end\": 11004451}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN055.png\", \"start\": 11004451, \"end\": 11004758}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN056.png\", \"start\": 11004758, \"end\": 11005103}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN057.png\", \"start\": 11005103, \"end\": 11005401}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN058.png\", \"start\": 11005401, \"end\": 11005755}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN059.png\", \"start\": 11005755, \"end\": 11006094}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN060.png\", \"start\": 11006094, \"end\": 11006433}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN061.png\", \"start\": 11006433, \"end\": 11006757}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN062.png\", \"start\": 11006757, \"end\": 11007097}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN063.png\", \"start\": 11007097, \"end\": 11007422}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN064.png\", \"start\": 11007422, \"end\": 11007761}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN065.png\", \"start\": 11007761, \"end\": 11008067}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN066.png\", \"start\": 11008067, \"end\": 11008401}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN067.png\", \"start\": 11008401, \"end\": 11008733}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN068.png\", \"start\": 11008733, \"end\": 11009081}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN069.png\", \"start\": 11009081, \"end\": 11009422}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN070.png\", \"start\": 11009422, \"end\": 11009747}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN071.png\", \"start\": 11009747, \"end\": 11010079}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN072.png\", \"start\": 11010079, \"end\": 11010408}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN073.png\", \"start\": 11010408, \"end\": 11010642}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN074.png\", \"start\": 11010642, \"end\": 11010888}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN075.png\", \"start\": 11010888, \"end\": 11011214}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN076.png\", \"start\": 11011214, \"end\": 11011501}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN077.png\", \"start\": 11011501, \"end\": 11011819}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN078.png\", \"start\": 11011819, \"end\": 11012139}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN079.png\", \"start\": 11012139, \"end\": 11012450}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN080.png\", \"start\": 11012450, \"end\": 11012767}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN081.png\", \"start\": 11012767, \"end\": 11013082}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN082.png\", \"start\": 11013082, \"end\": 11013384}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN083.png\", \"start\": 11013384, \"end\": 11013712}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN084.png\", \"start\": 11013712, \"end\": 11014044}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN085.png\", \"start\": 11014044, \"end\": 11014292}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN086.png\", \"start\": 11014292, \"end\": 11014543}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_1x.png\", \"start\": 11014543, \"end\": 11021879}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_2x.png\", \"start\": 11021879, \"end\": 11029268}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_1x.png\", \"start\": 11029268, \"end\": 11029432}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_2x.png\", \"start\": 11029432, \"end\": 11029606}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_1x.png\", \"start\": 11029606, \"end\": 11036909}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_2x.png\", \"start\": 11036909, \"end\": 11044244}, {\"filename\": \"/edge_defs/scripts/anims.ddf\", \"start\": 11044244, \"end\": 11046434}, {\"filename\": \"/edge_defs/scripts/attacks.ddf\", \"start\": 11046434, \"end\": 11069497}, {\"filename\": \"/edge_defs/scripts/coal_api.ec\", \"start\": 11069497, \"end\": 11084569}, {\"filename\": \"/edge_defs/scripts/coal_hud.ec\", \"start\": 11084569, \"end\": 11103346}, {\"filename\": \"/edge_defs/scripts/colmap.ddf\", \"start\": 11103346, \"end\": 11107565}, {\"filename\": \"/edge_defs/scripts/flats.ddf\", \"start\": 11107565, \"end\": 11112751}, {\"filename\": \"/edge_defs/scripts/fonts.ddf\", \"start\": 11112751, \"end\": 11114468}, {\"filename\": \"/edge_defs/scripts/games.ddf\", \"start\": 11114468, \"end\": 11119010}, {\"filename\": \"/edge_defs/scripts/images.ddf\", \"start\": 11119010, \"end\": 11138551}, {\"filename\": \"/edge_defs/scripts/language.ldf\", \"start\": 11138551, \"end\": 11257147}, {\"filename\": \"/edge_defs/scripts/levels.ddf\", \"start\": 11257147, \"end\": 11275390}, {\"filename\": \"/edge_defs/scripts/lines.ddf\", \"start\": 11275390, \"end\": 11373095}, {\"filename\": \"/edge_defs/scripts/playlist.ddf\", \"start\": 11373095, \"end\": 11376013}, {\"filename\": \"/edge_defs/scripts/rscript.rts\", \"start\": 11376013, \"end\": 11377704}, {\"filename\": \"/edge_defs/scripts/sectors.ddf\", \"start\": 11377704, \"end\": 11391541}, {\"filename\": \"/edge_defs/scripts/sounds.ddf\", \"start\": 11391541, \"end\": 11403136}, {\"filename\": \"/edge_defs/scripts/styles.ddf\", \"start\": 11403136, \"end\": 11409324}, {\"filename\": \"/edge_defs/scripts/switch.ddf\", \"start\": 11409324, \"end\": 11413628}, {\"filename\": \"/edge_defs/scripts/things.ddf\", \"start\": 11413628, \"end\": 11562955}, {\"filename\": \"/edge_defs/scripts/wadfixes.ddf\", \"start\": 11562955, \"end\": 11563826}, {\"filename\": \"/edge_defs/scripts/weapons.ddf\", \"start\": 11563826, \"end\": 11569520}, {\"filename\": \"/edge_defs/sounds/DPBAREXP.lmp\", \"start\": 11569520, \"end\": 11569603}, {\"filename\": \"/edge_defs/sounds/DPBDCLS.lmp\", \"start\": 11569603, \"end\": 11569649}, {\"filename\": \"/edge_defs/sounds/DPBDOPN.lmp\", \"start\": 11569649, \"end\": 11569690}, {\"filename\": \"/edge_defs/sounds/DPBFG.lmp\", \"start\": 11569690, \"end\": 11569878}, {\"filename\": \"/edge_defs/sounds/DPBGACT.lmp\", \"start\": 11569878, \"end\": 11569977}, {\"filename\": \"/edge_defs/sounds/DPBGDTH1.lmp\", \"start\": 11569977, \"end\": 11570066}, {\"filename\": \"/edge_defs/sounds/DPBGDTH2.lmp\", \"start\": 11570066, \"end\": 11570155}, {\"filename\": \"/edge_defs/sounds/DPBGSIT1.lmp\", \"start\": 11570155, \"end\": 11570266}, {\"filename\": \"/edge_defs/sounds/DPBGSIT2.lmp\", \"start\": 11570266, \"end\": 11570377}, {\"filename\": \"/edge_defs/sounds/DPBOSCUB.lmp\", \"start\": 11570377, \"end\": 11570413}, {\"filename\": \"/edge_defs/sounds/DPBOSDTH.lmp\", \"start\": 11570413, \"end\": 11570692}, {\"filename\": \"/edge_defs/sounds/DPBOSPIT.lmp\", \"start\": 11570692, \"end\": 11570737}, {\"filename\": \"/edge_defs/sounds/DPBOSPN.lmp\", \"start\": 11570737, \"end\": 11570775}, {\"filename\": \"/edge_defs/sounds/DPBOSSIT.lmp\", \"start\": 11570775, \"end\": 11570909}, {\"filename\": \"/edge_defs/sounds/DPBRSDTH.lmp\", \"start\": 11570909, \"end\": 11571021}, {\"filename\": \"/edge_defs/sounds/DPBRSSIT.lmp\", \"start\": 11571021, \"end\": 11571129}, {\"filename\": \"/edge_defs/sounds/DPBSPACT.lmp\", \"start\": 11571129, \"end\": 11571185}, {\"filename\": \"/edge_defs/sounds/DPBSPDTH.lmp\", \"start\": 11571185, \"end\": 11571276}, {\"filename\": \"/edge_defs/sounds/DPBSPSIT.lmp\", \"start\": 11571276, \"end\": 11571415}, {\"filename\": \"/edge_defs/sounds/DPBSPWLK.lmp\", \"start\": 11571415, \"end\": 11571460}, {\"filename\": \"/edge_defs/sounds/DPCACDTH.lmp\", \"start\": 11571460, \"end\": 11571549}, {\"filename\": \"/edge_defs/sounds/DPCACSIT.lmp\", \"start\": 11571549, \"end\": 11571661}, {\"filename\": \"/edge_defs/sounds/DPCLAW.lmp\", \"start\": 11571661, \"end\": 11571707}, {\"filename\": \"/edge_defs/sounds/DPCYBDTH.lmp\", \"start\": 11571707, \"end\": 11571844}, {\"filename\": \"/edge_defs/sounds/DPCYBSIT.lmp\", \"start\": 11571844, \"end\": 11571993}, {\"filename\": \"/edge_defs/sounds/DPDBCLS.lmp\", \"start\": 11571993, \"end\": 11572004}, {\"filename\": \"/edge_defs/sounds/DPDBLOAD.lmp\", \"start\": 11572004, \"end\": 11572015}, {\"filename\": \"/edge_defs/sounds/DPDBOPN.lmp\", \"start\": 11572015, \"end\": 11572026}, {\"filename\": \"/edge_defs/sounds/DPDMACT.lmp\", \"start\": 11572026, \"end\": 11572053}, {\"filename\": \"/edge_defs/sounds/DPDMPAIN.lmp\", \"start\": 11572053, \"end\": 11572094}, {\"filename\": \"/edge_defs/sounds/DPDORCLS.lmp\", \"start\": 11572094, \"end\": 11572165}, {\"filename\": \"/edge_defs/sounds/DPDOROPN.lmp\", \"start\": 11572165, \"end\": 11572238}, {\"filename\": \"/edge_defs/sounds/DPDSHTGN.lmp\", \"start\": 11572238, \"end\": 11572281}, {\"filename\": \"/edge_defs/sounds/DPFIRSHT.lmp\", \"start\": 11572281, \"end\": 11572316}, {\"filename\": \"/edge_defs/sounds/DPFIRXPL.lmp\", \"start\": 11572316, \"end\": 11572333}, {\"filename\": \"/edge_defs/sounds/DPFLAME.lmp\", \"start\": 11572333, \"end\": 11572410}, {\"filename\": \"/edge_defs/sounds/DPFLAMST.lmp\", \"start\": 11572410, \"end\": 11572424}, {\"filename\": \"/edge_defs/sounds/DPGETPOW.lmp\", \"start\": 11572424, \"end\": 11572561}, {\"filename\": \"/edge_defs/sounds/DPHOOF.lmp\", \"start\": 11572561, \"end\": 11572641}, {\"filename\": \"/edge_defs/sounds/DPITEMUP.lmp\", \"start\": 11572641, \"end\": 11572728}, {\"filename\": \"/edge_defs/sounds/DPITMBK.lmp\", \"start\": 11572728, \"end\": 11572813}, {\"filename\": \"/edge_defs/sounds/DPKEENDT.lmp\", \"start\": 11572813, \"end\": 11572919}, {\"filename\": \"/edge_defs/sounds/DPKEENPN.lmp\", \"start\": 11572919, \"end\": 11572975}, {\"filename\": \"/edge_defs/sounds/DPKNTDTH.lmp\", \"start\": 11572975, \"end\": 11573098}, {\"filename\": \"/edge_defs/sounds/DPKNTSIT.lmp\", \"start\": 11573098, \"end\": 11573164}, {\"filename\": \"/edge_defs/sounds/DPMANATK.lmp\", \"start\": 11573164, \"end\": 11573230}, {\"filename\": \"/edge_defs/sounds/DPMANDTH.lmp\", \"start\": 11573230, \"end\": 11573308}, {\"filename\": \"/edge_defs/sounds/DPMANSIT.lmp\", \"start\": 11573308, \"end\": 11573405}, {\"filename\": \"/edge_defs/sounds/DPMETAL.lmp\", \"start\": 11573405, \"end\": 11573424}, {\"filename\": \"/edge_defs/sounds/DPMNPAIN.lmp\", \"start\": 11573424, \"end\": 11573484}, {\"filename\": \"/edge_defs/sounds/DPNOWAY.lmp\", \"start\": 11573484, \"end\": 11573525}, {\"filename\": \"/edge_defs/sounds/DPOOF.lmp\", \"start\": 11573525, \"end\": 11573544}, {\"filename\": \"/edge_defs/sounds/DPPDIEHI.lmp\", \"start\": 11573544, \"end\": 11573622}, {\"filename\": \"/edge_defs/sounds/DPPEDTH.lmp\", \"start\": 11573622, \"end\": 11573731}, {\"filename\": \"/edge_defs/sounds/DPPEPAIN.lmp\", \"start\": 11573731, \"end\": 11573781}, {\"filename\": \"/edge_defs/sounds/DPPESIT.lmp\", \"start\": 11573781, \"end\": 11573898}, {\"filename\": \"/edge_defs/sounds/DPPISTOL.lmp\", \"start\": 11573898, \"end\": 11573916}, {\"filename\": \"/edge_defs/sounds/DPPLASMA.lmp\", \"start\": 11573916, \"end\": 11573958}, {\"filename\": \"/edge_defs/sounds/DPPLDETH.lmp\", \"start\": 11573958, \"end\": 11574107}, {\"filename\": \"/edge_defs/sounds/DPPLPAIN.lmp\", \"start\": 11574107, \"end\": 11574137}, {\"filename\": \"/edge_defs/sounds/DPPODTH1.lmp\", \"start\": 11574137, \"end\": 11574226}, {\"filename\": \"/edge_defs/sounds/DPPODTH2.lmp\", \"start\": 11574226, \"end\": 11574315}, {\"filename\": \"/edge_defs/sounds/DPPODTH3.lmp\", \"start\": 11574315, \"end\": 11574404}, {\"filename\": \"/edge_defs/sounds/DPPOPAIN.lmp\", \"start\": 11574404, \"end\": 11574442}, {\"filename\": \"/edge_defs/sounds/DPPOSACT.lmp\", \"start\": 11574442, \"end\": 11574472}, {\"filename\": \"/edge_defs/sounds/DPPOSIT1.lmp\", \"start\": 11574472, \"end\": 11574583}, {\"filename\": \"/edge_defs/sounds/DPPOSIT2.lmp\", \"start\": 11574583, \"end\": 11574694}, {\"filename\": \"/edge_defs/sounds/DPPOSIT3.lmp\", \"start\": 11574694, \"end\": 11574805}, {\"filename\": \"/edge_defs/sounds/DPPSTART.lmp\", \"start\": 11574805, \"end\": 11574846}, {\"filename\": \"/edge_defs/sounds/DPPSTOP.lmp\", \"start\": 11574846, \"end\": 11574863}, {\"filename\": \"/edge_defs/sounds/DPPUNCH.lmp\", \"start\": 11574863, \"end\": 11574900}, {\"filename\": \"/edge_defs/sounds/DPRADIO.lmp\", \"start\": 11574900, \"end\": 11574952}, {\"filename\": \"/edge_defs/sounds/DPRLAUNC.lmp\", \"start\": 11574952, \"end\": 11575015}, {\"filename\": \"/edge_defs/sounds/DPRXPLOD.lmp\", \"start\": 11575015, \"end\": 11575187}, {\"filename\": \"/edge_defs/sounds/DPSAWFUL.lmp\", \"start\": 11575187, \"end\": 11575215}, {\"filename\": \"/edge_defs/sounds/DPSAWHIT.lmp\", \"start\": 11575215, \"end\": 11575243}, {\"filename\": \"/edge_defs/sounds/DPSAWIDL.lmp\", \"start\": 11575243, \"end\": 11575248}, {\"filename\": \"/edge_defs/sounds/DPSAWUP.lmp\", \"start\": 11575248, \"end\": 11575336}, {\"filename\": \"/edge_defs/sounds/DPSGCOCK.lmp\", \"start\": 11575336, \"end\": 11575399}, {\"filename\": \"/edge_defs/sounds/DPSGTATK.lmp\", \"start\": 11575399, \"end\": 11575473}, {\"filename\": \"/edge_defs/sounds/DPSGTDTH.lmp\", \"start\": 11575473, \"end\": 11575562}, {\"filename\": \"/edge_defs/sounds/DPSGTSIT.lmp\", \"start\": 11575562, \"end\": 11575673}, {\"filename\": \"/edge_defs/sounds/DPSHOTGN.lmp\", \"start\": 11575673, \"end\": 11575715}, {\"filename\": \"/edge_defs/sounds/DPSKEACT.lmp\", \"start\": 11575715, \"end\": 11575755}, {\"filename\": \"/edge_defs/sounds/DPSKEATK.lmp\", \"start\": 11575755, \"end\": 11575814}, {\"filename\": \"/edge_defs/sounds/DPSKEDTH.lmp\", \"start\": 11575814, \"end\": 11575894}, {\"filename\": \"/edge_defs/sounds/DPSKEPCH.lmp\", \"start\": 11575894, \"end\": 11575931}, {\"filename\": \"/edge_defs/sounds/DPSKESIT.lmp\", \"start\": 11575931, \"end\": 11576037}, {\"filename\": \"/edge_defs/sounds/DPSKESWG.lmp\", \"start\": 11576037, \"end\": 11576077}, {\"filename\": \"/edge_defs/sounds/DPSKLATK.lmp\", \"start\": 11576077, \"end\": 11576157}, {\"filename\": \"/edge_defs/sounds/DPSKLDTH.lmp\", \"start\": 11576157, \"end\": 11576174}, {\"filename\": \"/edge_defs/sounds/DPSLOP.lmp\", \"start\": 11576174, \"end\": 11576283}, {\"filename\": \"/edge_defs/sounds/DPSPIDTH.lmp\", \"start\": 11576283, \"end\": 11576396}, {\"filename\": \"/edge_defs/sounds/DPSPISIT.lmp\", \"start\": 11576396, \"end\": 11576544}, {\"filename\": \"/edge_defs/sounds/DPSSDTH.lmp\", \"start\": 11576544, \"end\": 11576633}, {\"filename\": \"/edge_defs/sounds/DPSSSIT.lmp\", \"start\": 11576633, \"end\": 11576744}, {\"filename\": \"/edge_defs/sounds/DPSTNMOV.lmp\", \"start\": 11576744, \"end\": 11576752}, {\"filename\": \"/edge_defs/sounds/DPSWTCHN.lmp\", \"start\": 11576752, \"end\": 11576780}, {\"filename\": \"/edge_defs/sounds/DPSWTCHX.lmp\", \"start\": 11576780, \"end\": 11576809}, {\"filename\": \"/edge_defs/sounds/DPTELEPT.lmp\", \"start\": 11576809, \"end\": 11576911}, {\"filename\": \"/edge_defs/sounds/DPTINK.lmp\", \"start\": 11576911, \"end\": 11576963}, {\"filename\": \"/edge_defs/sounds/DPVILACT.lmp\", \"start\": 11576963, \"end\": 11577018}, {\"filename\": \"/edge_defs/sounds/DPVILATK.lmp\", \"start\": 11577018, \"end\": 11577081}, {\"filename\": \"/edge_defs/sounds/DPVILDTH.lmp\", \"start\": 11577081, \"end\": 11577349}, {\"filename\": \"/edge_defs/sounds/DPVILSIT.lmp\", \"start\": 11577349, \"end\": 11577425}, {\"filename\": \"/edge_defs/sounds/DPVIPAIN.lmp\", \"start\": 11577425, \"end\": 11577536}, {\"filename\": \"/edge_defs/sounds/DPWPNUP.lmp\", \"start\": 11577536, \"end\": 11577580}, {\"filename\": \"/edge_defs/sounds/DSACIDFT.ogg\", \"start\": 11577580, \"end\": 11585130, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSCRUSH.lmp\", \"start\": 11585130, \"end\": 11592148}, {\"filename\": \"/edge_defs/sounds/DSDGACT.ogg\", \"start\": 11592148, \"end\": 11599809, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGATK.ogg\", \"start\": 11599809, \"end\": 11606615, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGDTH.ogg\", \"start\": 11606615, \"end\": 11617431, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGPAIN.ogg\", \"start\": 11617431, \"end\": 11623423, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGSIT.ogg\", \"start\": 11623423, \"end\": 11629586, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT1.wav\", \"start\": 11629586, \"end\": 11644930, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT2.wav\", \"start\": 11644930, \"end\": 11660402, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT3.wav\", \"start\": 11660402, \"end\": 11672642, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT4.wav\", \"start\": 11672642, \"end\": 11688008, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSGLSBRK.wav\", \"start\": 11688008, \"end\": 11720606, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSJPDOWN.lmp\", \"start\": 11720606, \"end\": 11737194}, {\"filename\": \"/edge_defs/sounds/DSJPFLOW.lmp\", \"start\": 11737194, \"end\": 11741116}, {\"filename\": \"/edge_defs/sounds/DSJPIDLE.lmp\", \"start\": 11741116, \"end\": 11744083}, {\"filename\": \"/edge_defs/sounds/DSJPMOVE.lmp\", \"start\": 11744083, \"end\": 11745500}, {\"filename\": \"/edge_defs/sounds/DSJPRISE.lmp\", \"start\": 11745500, \"end\": 11753320}, {\"filename\": \"/edge_defs/sounds/DSMUCKFT.ogg\", \"start\": 11753320, \"end\": 11759394, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSSECRET.ogg\", \"start\": 11759394, \"end\": 11772235, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWATRFT.ogg\", \"start\": 11772235, \"end\": 11779896, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWTDIVE.wav\", \"start\": 11779896, \"end\": 11802372, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/HEARTBT1.ogg\", \"start\": 11802372, \"end\": 11822727, \"audio\": 1}, {\"filename\": \"/edge_defs/sprites/BSPHA0.png\", \"start\": 11822727, \"end\": 11823943}, {\"filename\": \"/edge_defs/sprites/BSPHB0.png\", \"start\": 11823943, \"end\": 11825164}, {\"filename\": \"/edge_defs/sprites/BSPHC0.png\", \"start\": 11825164, \"end\": 11826374}, {\"filename\": \"/edge_defs/sprites/BSPHD0.png\", \"start\": 11826374, \"end\": 11827575}, {\"filename\": \"/edge_defs/sprites/BSPHE0.png\", \"start\": 11827575, \"end\": 11828856}, {\"filename\": \"/edge_defs/sprites/BSPHF0.png\", \"start\": 11828856, \"end\": 11830199}, {\"filename\": \"/edge_defs/sprites/BSPHG0.png\", \"start\": 11830199, \"end\": 11831603}, {\"filename\": \"/edge_defs/sprites/BSPHH0.png\", \"start\": 11831603, \"end\": 11832948}, {\"filename\": \"/edge_defs/sprites/BSPHI0.png\", \"start\": 11832948, \"end\": 11834255}, {\"filename\": \"/edge_defs/sprites/BSPHJ0.png\", \"start\": 11834255, \"end\": 11835522}, {\"filename\": \"/edge_defs/sprites/BSPHK0.png\", \"start\": 11835522, \"end\": 11836759}, {\"filename\": \"/edge_defs/sprites/GLS1A0.lmp\", \"start\": 11836759, \"end\": 11836853}, {\"filename\": \"/edge_defs/sprites/GLS2A0.lmp\", \"start\": 11836853, \"end\": 11837067}, {\"filename\": \"/edge_defs/sprites/GLS3A0.lmp\", \"start\": 11837067, \"end\": 11837371}, {\"filename\": \"/edge_defs/sprites/GLS4A0.lmp\", \"start\": 11837371, \"end\": 11837739}, {\"filename\": \"/edge_defs/sprites/GLS5A0.lmp\", \"start\": 11837739, \"end\": 11838134}, {\"filename\": \"/edge_defs/sprites/GLS6A0.lmp\", \"start\": 11838134, \"end\": 11838570}, {\"filename\": \"/edge_defs/sprites/GLS7A0.lmp\", \"start\": 11838570, \"end\": 11839040}, {\"filename\": \"/edge_defs/sprites/GLS8A0.lmp\", \"start\": 11839040, \"end\": 11839472}, {\"filename\": \"/edge_defs/sprites/GLS9A0.lmp\", \"start\": 11839472, \"end\": 11839835}, {\"filename\": \"/edge_defs/sprites/JPCKA0.lmp\", \"start\": 11839835, \"end\": 11840651}, {\"filename\": \"/edge_defs/sprites/JPCKB0.lmp\", \"start\": 11840651, \"end\": 11841469}, {\"filename\": \"/edge_defs/sprites/JPCKC0.lmp\", \"start\": 11841469, \"end\": 11842287}, {\"filename\": \"/edge_defs/sprites/LVASA0.png\", \"start\": 11842287, \"end\": 11843585}, {\"filename\": \"/edge_defs/sprites/LVASB0.png\", \"start\": 11843585, \"end\": 11844968}, {\"filename\": \"/edge_defs/sprites/LVASC0.png\", \"start\": 11844968, \"end\": 11846322}, {\"filename\": \"/edge_defs/sprites/LVASD0.png\", \"start\": 11846322, \"end\": 11847622}, {\"filename\": \"/edge_defs/sprites/LVASE0.png\", \"start\": 11847622, \"end\": 11848891}, {\"filename\": \"/edge_defs/sprites/LVASF0.png\", \"start\": 11848891, \"end\": 11850114}, {\"filename\": \"/edge_defs/sprites/MUDSA0.png\", \"start\": 11850114, \"end\": 11851324}, {\"filename\": \"/edge_defs/sprites/MUDSB0.png\", \"start\": 11851324, \"end\": 11852536}, {\"filename\": \"/edge_defs/sprites/MUDSC0.png\", \"start\": 11852536, \"end\": 11853727}, {\"filename\": \"/edge_defs/sprites/MUDSD0.png\", \"start\": 11853727, \"end\": 11854912}, {\"filename\": \"/edge_defs/sprites/MUDSE0.png\", \"start\": 11854912, \"end\": 11856163}, {\"filename\": \"/edge_defs/sprites/MUDSF0.png\", \"start\": 11856163, \"end\": 11857404}, {\"filename\": \"/edge_defs/sprites/MUDSG0.png\", \"start\": 11857404, \"end\": 11858653}, {\"filename\": \"/edge_defs/sprites/MUDSH0.png\", \"start\": 11858653, \"end\": 11859875}, {\"filename\": \"/edge_defs/sprites/NVSCA0.lmp\", \"start\": 11859875, \"end\": 11860479}, {\"filename\": \"/edge_defs/sprites/NVSCB0.lmp\", \"start\": 11860479, \"end\": 11861083}, {\"filename\": \"/edge_defs/sprites/PLAYX1.lmp\", \"start\": 11861083, \"end\": 11862006}, {\"filename\": \"/edge_defs/sprites/PLAYX2X8.lmp\", \"start\": 11862006, \"end\": 11863222}, {\"filename\": \"/edge_defs/sprites/PLAYX3X7.lmp\", \"start\": 11863222, \"end\": 11864617}, {\"filename\": \"/edge_defs/sprites/PLAYX4X6.lmp\", \"start\": 11864617, \"end\": 11865746}, {\"filename\": \"/edge_defs/sprites/PLAYX5.lmp\", \"start\": 11865746, \"end\": 11866548}, {\"filename\": \"/edge_defs/sprites/PLAYY1.lmp\", \"start\": 11866548, \"end\": 11867496}, {\"filename\": \"/edge_defs/sprites/PLAYY2Y8.lmp\", \"start\": 11867496, \"end\": 11868724}, {\"filename\": \"/edge_defs/sprites/PLAYY3Y7.lmp\", \"start\": 11868724, \"end\": 11870110}, {\"filename\": \"/edge_defs/sprites/PLAYY4Y6.lmp\", \"start\": 11870110, \"end\": 11871248}, {\"filename\": \"/edge_defs/sprites/PLAYY5.lmp\", \"start\": 11871248, \"end\": 11872045}, {\"filename\": \"/edge_defs/sprites/PRT1A0.png\", \"start\": 11872045, \"end\": 11872917}, {\"filename\": \"/edge_defs/sprites/PRT2A0.png\", \"start\": 11872917, \"end\": 11873789}, {\"filename\": \"/edge_defs/sprites/PRT3A0.png\", \"start\": 11873789, \"end\": 11873918}, {\"filename\": \"/edge_defs/sprites/SLDGA0.png\", \"start\": 11873918, \"end\": 11875134}, {\"filename\": \"/edge_defs/sprites/SLDGB0.png\", \"start\": 11875134, \"end\": 11876352}, {\"filename\": \"/edge_defs/sprites/SLDGC0.png\", \"start\": 11876352, \"end\": 11877548}, {\"filename\": \"/edge_defs/sprites/SLDGD0.png\", \"start\": 11877548, \"end\": 11878735}, {\"filename\": \"/edge_defs/sprites/SLDGE0.png\", \"start\": 11878735, \"end\": 11879986}, {\"filename\": \"/edge_defs/sprites/SLDGF0.png\", \"start\": 11879986, \"end\": 11881227}, {\"filename\": \"/edge_defs/sprites/SLDGG0.png\", \"start\": 11881227, \"end\": 11882476}, {\"filename\": \"/edge_defs/sprites/SLDGH0.png\", \"start\": 11882476, \"end\": 11883698}, {\"filename\": \"/edge_defs/sprites/SLIMA0.png\", \"start\": 11883698, \"end\": 11884899}, {\"filename\": \"/edge_defs/sprites/SLIMB0.png\", \"start\": 11884899, \"end\": 11886104}, {\"filename\": \"/edge_defs/sprites/SLIMC0.png\", \"start\": 11886104, \"end\": 11887291}, {\"filename\": \"/edge_defs/sprites/SLIMD0.png\", \"start\": 11887291, \"end\": 11888469}, {\"filename\": \"/edge_defs/sprites/SLIME0.png\", \"start\": 11888469, \"end\": 11889714}, {\"filename\": \"/edge_defs/sprites/SLIMF0.png\", \"start\": 11889714, \"end\": 11890950}, {\"filename\": \"/edge_defs/sprites/SLIMG0.png\", \"start\": 11890950, \"end\": 11892195}, {\"filename\": \"/edge_defs/sprites/SLIMH0.png\", \"start\": 11892195, \"end\": 11893411}, {\"filename\": \"/edge_defs/sprites/SPSHA0.png\", \"start\": 11893411, \"end\": 11894628}, {\"filename\": \"/edge_defs/sprites/SPSHB0.png\", \"start\": 11894628, \"end\": 11895848}, {\"filename\": \"/edge_defs/sprites/SPSHC0.png\", \"start\": 11895848, \"end\": 11897059}, {\"filename\": \"/edge_defs/sprites/SPSHD0.png\", \"start\": 11897059, \"end\": 11898260}, {\"filename\": \"/edge_defs/sprites/SPSHE0.png\", \"start\": 11898260, \"end\": 11899540}, {\"filename\": \"/edge_defs/sprites/SPSHF0.png\", \"start\": 11899540, \"end\": 11900891}, {\"filename\": \"/edge_defs/sprites/SPSHG0.png\", \"start\": 11900891, \"end\": 11902298}, {\"filename\": \"/edge_defs/sprites/SPSHH0.png\", \"start\": 11902298, \"end\": 11903650}, {\"filename\": \"/edge_defs/sprites/SPSHI0.png\", \"start\": 11903650, \"end\": 11904961}, {\"filename\": \"/edge_defs/sprites/SPSHJ0.png\", \"start\": 11904961, \"end\": 11906229}, {\"filename\": \"/edge_defs/sprites/SPSHK0.png\", \"start\": 11906229, \"end\": 11907466}, {\"filename\": \"/edge_defs/sprites/TSTPA0.png\", \"start\": 11907466, \"end\": 11908591}, {\"filename\": \"/edge_defs/sprites/TSTPB0.lmp\", \"start\": 11908591, \"end\": 11908933}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA1.png\", \"start\": 11908933, \"end\": 11910213}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA2.png\", \"start\": 11910213, \"end\": 11911766}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA3.png\", \"start\": 11911766, \"end\": 11913397}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA4.png\", \"start\": 11913397, \"end\": 11914930}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA5.png\", \"start\": 11914930, \"end\": 11916116}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA6.png\", \"start\": 11916116, \"end\": 11917632}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA7.png\", \"start\": 11917632, \"end\": 11919225}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA8.png\", \"start\": 11919225, \"end\": 11920743}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB1.png\", \"start\": 11920743, \"end\": 11921973}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB2.png\", \"start\": 11921973, \"end\": 11923493}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB3.png\", \"start\": 11923493, \"end\": 11925100}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB4.png\", \"start\": 11925100, \"end\": 11926633}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB5.png\", \"start\": 11926633, \"end\": 11927843}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB6.png\", \"start\": 11927843, \"end\": 11929341}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB7.png\", \"start\": 11929341, \"end\": 11930933}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB8.png\", \"start\": 11930933, \"end\": 11932447}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC1.png\", \"start\": 11932447, \"end\": 11933744}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC2.png\", \"start\": 11933744, \"end\": 11935250}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC3.png\", \"start\": 11935250, \"end\": 11936821}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC4.png\", \"start\": 11936821, \"end\": 11938352}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC5.png\", \"start\": 11938352, \"end\": 11939689}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC6.png\", \"start\": 11939689, \"end\": 11941209}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC7.png\", \"start\": 11941209, \"end\": 11942745}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC8.png\", \"start\": 11942745, \"end\": 11944234}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD1.png\", \"start\": 11944234, \"end\": 11945545}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD2.png\", \"start\": 11945545, \"end\": 11947063}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD3.png\", \"start\": 11947063, \"end\": 11948651}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD4.png\", \"start\": 11948651, \"end\": 11950176}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD5.png\", \"start\": 11950176, \"end\": 11951502}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD6.png\", \"start\": 11951502, \"end\": 11953044}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD7.png\", \"start\": 11953044, \"end\": 11954617}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD8.png\", \"start\": 11954617, \"end\": 11956120}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE1.png\", \"start\": 11956120, \"end\": 11957482}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE2.png\", \"start\": 11957482, \"end\": 11958999}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE3.png\", \"start\": 11958999, \"end\": 11960547}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE4.png\", \"start\": 11960547, \"end\": 11962145}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE5.png\", \"start\": 11962145, \"end\": 11963583}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE6.png\", \"start\": 11963583, \"end\": 11965133}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE7.png\", \"start\": 11965133, \"end\": 11966687}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE8.png\", \"start\": 11966687, \"end\": 11968246}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF1.png\", \"start\": 11968246, \"end\": 11969643}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF2.png\", \"start\": 11969643, \"end\": 11971214}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF3.png\", \"start\": 11971214, \"end\": 11972816}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF4.png\", \"start\": 11972816, \"end\": 11974382}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF5.png\", \"start\": 11974382, \"end\": 11975785}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF6.png\", \"start\": 11975785, \"end\": 11977302}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF7.png\", \"start\": 11977302, \"end\": 11978898}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF8.png\", \"start\": 11978898, \"end\": 11980506}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG1.png\", \"start\": 11980506, \"end\": 11981895}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG2.png\", \"start\": 11981895, \"end\": 11983483}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG3.png\", \"start\": 11983483, \"end\": 11985127}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG4.png\", \"start\": 11985127, \"end\": 11986647}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG5.png\", \"start\": 11986647, \"end\": 11987997}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG6.png\", \"start\": 11987997, \"end\": 11989518}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG7.png\", \"start\": 11989518, \"end\": 11991140}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG8.png\", \"start\": 11991140, \"end\": 11992710}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH1.png\", \"start\": 11992710, \"end\": 11994020}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH2.png\", \"start\": 11994020, \"end\": 11995551}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH3.png\", \"start\": 11995551, \"end\": 11997143}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH4.png\", \"start\": 11997143, \"end\": 11998626}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH5.png\", \"start\": 11998626, \"end\": 11999920}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH6.png\", \"start\": 11999920, \"end\": 12001387}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH7.png\", \"start\": 12001387, \"end\": 12002965}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH8.png\", \"start\": 12002965, \"end\": 12004534}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDI0.png\", \"start\": 12004534, \"end\": 12006224}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDJ0.png\", \"start\": 12006224, \"end\": 12008006}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDK0.png\", \"start\": 12008006, \"end\": 12009752}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDL0.png\", \"start\": 12009752, \"end\": 12011472}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDM0.png\", \"start\": 12011472, \"end\": 12013199}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDN0.png\", \"start\": 12013199, \"end\": 12014938}, {\"filename\": \"/edge_defs/textures/FUZZMAP8.png\", \"start\": 12014938, \"end\": 12029738}, {\"filename\": \"/edge_defs/textures/PORTAL7A.jpg\", \"start\": 12029738, \"end\": 12051856}, {\"filename\": \"/edge_defs/textures/PORTAL7B.jpg\", \"start\": 12051856, \"end\": 12070209}, {\"filename\": \"/edge_defs/textures/PORTAL7C.jpg\", \"start\": 12070209, \"end\": 12085700}, {\"filename\": \"/edge_defs/textures/PORTAL7D.jpg\", \"start\": 12085700, \"end\": 12100994}, {\"filename\": \"/edge_defs/textures/PORTAL7E.jpg\", \"start\": 12100994, \"end\": 12115861}, {\"filename\": \"/edge_defs/textures/PORTAL7F.jpg\", \"start\": 12115861, \"end\": 12132862}, {\"filename\": \"/edge_defs/textures/PORTAL7G.jpg\", \"start\": 12132862, \"end\": 12153570}, {\"filename\": \"/edge_defs/ttf/ECFONT01.ttf\", \"start\": 12153570, \"end\": 12217910}, {\"filename\": \"/edge_defs/version.txt\", \"start\": 12217910, \"end\": 12217914}, {\"filename\": \"/freedm.wad\", \"start\": 12217914, \"end\": 34042362}, {\"filename\": \"/freedoom2.wad\", \"start\": 34042362, \"end\": 62586494}, {\"filename\": \"/soundfont/16-Bit Game Station.sf2\", \"start\": 62586494, \"end\": 66270032}, {\"filename\": \"/soundfont/ProtoSquare!.sf2\", \"start\": 66270032, \"end\": 66634270}, {\"filename\": \"/soundfont/adplug.op2\", \"start\": 66634270, \"end\": 66646178}, {\"filename\": \"/soundfont/bonkers_for_bits.sf2\", \"start\": 66646178, \"end\": 66674182}, {\"filename\": \"/soundfont/default.sf2\", \"start\": 66674182, \"end\": 70820622}, {\"filename\": \"/soundfont/dmxopl.op2\", \"start\": 70820622, \"end\": 70832530}, {\"filename\": \"/soundfont/dmxopl3.wopl\", \"start\": 70832530, \"end\": 71044599}, {\"filename\": \"/soundfont/wadsmoosh.op2\", \"start\": 71044599, \"end\": 71056507}], \"remote_package_size\": 52775041, \"package_uuid\": \"sha256-225a5f584c483f672fee11e63a367b45db009881a5b2b860b9abe3495be6829b\"});\r\n\r\n  })();\r\n\r\n\r\n// Sometimes an existing Module object exists with properties\r\n// meant to overwrite the default module functionality. Here\r\n// we collect those properties and reapply _after_ we configure\r\n// the current environment's defaults to avoid having to be so\r\n// defensive during initialization.\r\nvar moduleOverrides = Object.assign({}, Module);\r\n\r\nvar arguments_ = [];\r\nvar thisProgram = './this.program';\r\nvar quit_ = (status, toThrow) => {\r\n  throw toThrow;\r\n};\r\n\r\n// Determine the runtime environment we are in. You can customize this by\r\n// setting the ENVIRONMENT setting at compile time (see settings.js).\r\n\r\nvar ENVIRONMENT_IS_WEB = true;\r\nvar ENVIRONMENT_IS_WORKER = false;\r\nvar ENVIRONMENT_IS_NODE = false;\r\nvar ENVIRONMENT_IS_SHELL = false;\r\n\r\n// `/` should be present at the end if `scriptDirectory` is not empty\r\nvar scriptDirectory = '';\r\nfunction locateFile(path) {\r\n  if (Module['locateFile']) {\r\n    return Module['locateFile'](path, scriptDirectory);\r\n  }\r\n  return scriptDirectory + path;\r\n}\r\n\r\n// Hooks that are implemented differently in different runtime environments.\r\nvar read_,\r\n    readAsync,\r\n    readBinary,\r\n    setWindowTitle;\r\n\r\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\r\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\r\n// ENVIRONMENT_IS_NODE.\r\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\r\n    scriptDirectory = self.location.href;\r\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\r\n    scriptDirectory = document.currentScript.src;\r\n  }\r\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\r\n  // is gone, so we saved it, and we use it here instead of any other info.\r\n  if (_scriptDir) {\r\n    scriptDirectory = _scriptDir;\r\n  }\r\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\r\n  // otherwise, slice off the final part of the url to find the script directory.\r\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\r\n  // and scriptDirectory will correctly be replaced with an empty string.\r\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\r\n  // they are removed because they could contain a slash.\r\n  if (scriptDirectory.indexOf('blob:') !== 0) {\r\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\r\n  } else {\r\n    scriptDirectory = '';\r\n  }\r\n\r\n  // Differentiate the Web Worker from the Node Worker case, as reading must\r\n  // be done differently.\r\n  {\r\n// include: web_or_worker_shell_read.js\r\nread_ = (url) => {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, false);\r\n      xhr.send(null);\r\n      return xhr.responseText;\r\n  }\r\n\r\n  if (ENVIRONMENT_IS_WORKER) {\r\n    readBinary = (url) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, false);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.send(null);\r\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\r\n    };\r\n  }\r\n\r\n  readAsync = (url, onload, onerror) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url, true);\r\n    xhr.responseType = 'arraybuffer';\r\n    xhr.onload = () => {\r\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n        onload(xhr.response);\r\n        return;\r\n      }\r\n      onerror();\r\n    };\r\n    xhr.onerror = onerror;\r\n    xhr.send(null);\r\n  }\r\n\r\n// end include: web_or_worker_shell_read.js\r\n  }\r\n\r\n  setWindowTitle = (title) => document.title = title;\r\n} else\r\n{\r\n}\r\n\r\nvar out = Module['print'] || console.log.bind(console);\r\nvar err = Module['printErr'] || console.warn.bind(console);\r\n\r\n// Merge back in the overrides\r\nObject.assign(Module, moduleOverrides);\r\n// Free the object hierarchy contained in the overrides, this lets the GC\r\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\r\nmoduleOverrides = null;\r\n\r\n// Emit code to handle expected values on the Module object. This applies Module.x\r\n// to the proper local x. This has two benefits: first, we only emit it if it is\r\n// expected to arrive, and second, by using a local everywhere else that can be\r\n// minified.\r\n\r\nif (Module['arguments']) arguments_ = Module['arguments'];\r\n\r\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\r\n\r\nif (Module['quit']) quit_ = Module['quit'];\r\n\r\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\r\n\r\n\r\n// end include: shell.js\r\n// include: preamble.js\r\n// === Preamble library stuff ===\r\n\r\n// Documentation for the public APIs defined in this file must be updated in:\r\n//    site/source/docs/api_reference/preamble.js.rst\r\n// A prebuilt local version of the documentation is available at:\r\n//    site/build/text/docs/api_reference/preamble.js.txt\r\n// You can also build docs locally as HTML or other formats in site/\r\n// An online HTML version (which may be of a different version of Emscripten)\r\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\r\n\r\nvar wasmBinary;\r\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\r\nvar noExitRuntime = Module['noExitRuntime'] || true;\r\n\r\nif (typeof WebAssembly != 'object') {\r\n  abort('no native wasm support detected');\r\n}\r\n\r\n// Wasm globals\r\n\r\nvar wasmMemory;\r\n\r\n//========================================\r\n// Runtime essentials\r\n//========================================\r\n\r\n// whether we are quitting the application. no code should run after this.\r\n// set in exit() and abort()\r\nvar ABORT = false;\r\n\r\n// set by exit() and abort().  Passed to 'onExit' handler.\r\n// NOTE: This is also used as the process return code code in shell environments\r\n// but only when noExitRuntime is false.\r\nvar EXITSTATUS;\r\n\r\n/** @type {function(*, string=)} */\r\nfunction assert(condition, text) {\r\n  if (!condition) {\r\n    // This build was created without ASSERTIONS defined.  `assert()` should not\r\n    // ever be called in this configuration but in case there are callers in\r\n    // the wild leave this simple abort() implemenation here for now.\r\n    abort(text);\r\n  }\r\n}\r\n\r\n// Memory management\r\n\r\nvar HEAP,\r\n/** @type {!Int8Array} */\r\n  HEAP8,\r\n/** @type {!Uint8Array} */\r\n  HEAPU8,\r\n/** @type {!Int16Array} */\r\n  HEAP16,\r\n/** @type {!Uint16Array} */\r\n  HEAPU16,\r\n/** @type {!Int32Array} */\r\n  HEAP32,\r\n/** @type {!Uint32Array} */\r\n  HEAPU32,\r\n/** @type {!Float32Array} */\r\n  HEAPF32,\r\n/** @type {!Float64Array} */\r\n  HEAPF64;\r\n\r\nfunction updateMemoryViews() {\r\n  var b = wasmMemory.buffer;\r\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\r\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\r\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\r\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\r\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\r\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\r\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\r\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\r\n}\r\n\r\n// include: runtime_init_table.js\r\n// In regular non-RELOCATABLE mode the table is exported\r\n// from the wasm module and this will be assigned once\r\n// the exports are available.\r\nvar wasmTable;\r\n\r\n// end include: runtime_init_table.js\r\n// include: runtime_stack_check.js\r\n// end include: runtime_stack_check.js\r\n// include: runtime_assertions.js\r\n// end include: runtime_assertions.js\r\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\r\nvar __ATINIT__    = []; // functions called during startup\r\nvar __ATMAIN__    = []; // functions called when main() is to be run\r\nvar __ATEXIT__    = []; // functions called during shutdown\r\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\r\n\r\nvar runtimeInitialized = false;\r\n\r\nvar runtimeKeepaliveCounter = 0;\r\n\r\nfunction keepRuntimeAlive() {\r\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\r\n}\r\n\r\nfunction preRun() {\r\n  if (Module['preRun']) {\r\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\r\n    while (Module['preRun'].length) {\r\n      addOnPreRun(Module['preRun'].shift());\r\n    }\r\n  }\r\n  callRuntimeCallbacks(__ATPRERUN__);\r\n}\r\n\r\nfunction initRuntime() {\r\n  runtimeInitialized = true;\r\n\r\n  \r\nif (!Module[\"noFSInit\"] && !FS.init.initialized)\r\n  FS.init();\r\nFS.ignorePermissions = false;\r\n\r\nTTY.init();\r\n  callRuntimeCallbacks(__ATINIT__);\r\n}\r\n\r\nfunction preMain() {\r\n  \r\n  callRuntimeCallbacks(__ATMAIN__);\r\n}\r\n\r\nfunction postRun() {\r\n\r\n  if (Module['postRun']) {\r\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\r\n    while (Module['postRun'].length) {\r\n      addOnPostRun(Module['postRun'].shift());\r\n    }\r\n  }\r\n\r\n  callRuntimeCallbacks(__ATPOSTRUN__);\r\n}\r\n\r\nfunction addOnPreRun(cb) {\r\n  __ATPRERUN__.unshift(cb);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n  __ATINIT__.unshift(cb);\r\n}\r\n\r\nfunction addOnPreMain(cb) {\r\n  __ATMAIN__.unshift(cb);\r\n}\r\n\r\nfunction addOnExit(cb) {\r\n}\r\n\r\nfunction addOnPostRun(cb) {\r\n  __ATPOSTRUN__.unshift(cb);\r\n}\r\n\r\n// include: runtime_math.js\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\r\n\r\n// end include: runtime_math.js\r\n// A counter of dependencies for calling run(). If we need to\r\n// do asynchronous work before running, increment this and\r\n// decrement it. Incrementing must happen in a place like\r\n// Module.preRun (used by emcc to add file preloading).\r\n// Note that you can add dependencies in preRun, even though\r\n// it happens right before run - run will be postponed until\r\n// the dependencies are met.\r\nvar runDependencies = 0;\r\nvar runDependencyWatcher = null;\r\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\r\n\r\nfunction getUniqueRunDependency(id) {\r\n  return id;\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n  runDependencies++;\r\n\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n  runDependencies--;\r\n\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n\r\n  if (runDependencies == 0) {\r\n    if (runDependencyWatcher !== null) {\r\n      clearInterval(runDependencyWatcher);\r\n      runDependencyWatcher = null;\r\n    }\r\n    if (dependenciesFulfilled) {\r\n      var callback = dependenciesFulfilled;\r\n      dependenciesFulfilled = null;\r\n      callback(); // can add another dependenciesFulfilled\r\n    }\r\n  }\r\n}\r\n\r\n/** @param {string|number=} what */\r\nfunction abort(what) {\r\n  if (Module['onAbort']) {\r\n    Module['onAbort'](what);\r\n  }\r\n\r\n  what = 'Aborted(' + what + ')';\r\n  // TODO(sbc): Should we remove printing and leave it up to whoever\r\n  // catches the exception?\r\n  err(what);\r\n\r\n  ABORT = true;\r\n  EXITSTATUS = 1;\r\n\r\n  what += '. Build with -sASSERTIONS for more info.';\r\n\r\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\r\n  // exception, which means we'd run destructors on it. We need the error to\r\n  // simply make the program stop.\r\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\r\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\r\n  // a trap or not based on a hidden field within the object. So at the moment\r\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\r\n  // allows this in the wasm spec.\r\n\r\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\r\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\r\n  // though it can.\r\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\r\n  /** @suppress {checkTypes} */\r\n  var e = new WebAssembly.RuntimeError(what);\r\n\r\n  readyPromiseReject(e);\r\n  // Throw the error whether or not MODULARIZE is set because abort is used\r\n  // in code paths apart from instantiation where an exception is expected\r\n  // to be thrown when abort is called.\r\n  throw e;\r\n}\r\n\r\n// include: memoryprofiler.js\r\n// end include: memoryprofiler.js\r\n// include: URIUtils.js\r\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\r\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\r\n\r\n// Indicates whether filename is a base64 data URI.\r\nfunction isDataURI(filename) {\r\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\r\n  return filename.startsWith(dataURIPrefix);\r\n}\r\n\r\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\r\nfunction isFileURI(filename) {\r\n  return filename.startsWith('file://');\r\n}\r\n\r\n// end include: URIUtils.js\r\n// include: runtime_exceptions.js\r\n// end include: runtime_exceptions.js\r\nvar wasmBinaryFile;\r\n  wasmBinaryFile = 'edge-classic.wasm';\r\n  if (!isDataURI(wasmBinaryFile)) {\r\n    wasmBinaryFile = locateFile(wasmBinaryFile);\r\n  }\r\n\r\nfunction getBinary(file) {\r\n  try {\r\n    if (file == wasmBinaryFile && wasmBinary) {\r\n      return new Uint8Array(wasmBinary);\r\n    }\r\n    if (readBinary) {\r\n      return readBinary(file);\r\n    }\r\n    throw \"both async and sync fetching of the wasm failed\";\r\n  }\r\n  catch (err) {\r\n    abort(err);\r\n  }\r\n}\r\n\r\nfunction getBinaryPromise(binaryFile) {\r\n  // If we don't have the binary yet, try to load it asynchronously.\r\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\r\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\r\n  // Cordova or Electron apps are typically loaded from a file:// url.\r\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\r\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\r\n    if (typeof fetch == 'function'\r\n    ) {\r\n      return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n        if (!response['ok']) {\r\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\r\n        }\r\n        return response['arrayBuffer']();\r\n      }).catch(() => getBinary(binaryFile));\r\n    }\r\n  }\r\n\r\n  // Otherwise, getBinary should be able to get it synchronously\r\n  return Promise.resolve().then(() => getBinary(binaryFile));\r\n}\r\n\r\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\r\n  return getBinaryPromise(binaryFile).then((binary) => {\r\n    return WebAssembly.instantiate(binary, imports);\r\n  }).then((instance) => {\r\n    return instance;\r\n  }).then(receiver, (reason) => {\r\n    err('failed to asynchronously prepare wasm: ' + reason);\r\n\r\n    abort(reason);\r\n  });\r\n}\r\n\r\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\r\n  if (!binary &&\r\n      typeof WebAssembly.instantiateStreaming == 'function' &&\r\n      !isDataURI(binaryFile) &&\r\n      typeof fetch == 'function') {\r\n    return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n      // Suppress closure warning here since the upstream definition for\r\n      // instantiateStreaming only allows Promise<Repsponse> rather than\r\n      // an actual Response.\r\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\r\n      /** @suppress {checkTypes} */\r\n      var result = WebAssembly.instantiateStreaming(response, imports);\r\n\r\n      return result.then(\r\n        callback,\r\n        function(reason) {\r\n          // We expect the most common failure cause to be a bad MIME type for the binary,\r\n          // in which case falling back to ArrayBuffer instantiation should work.\r\n          err('wasm streaming compile failed: ' + reason);\r\n          err('falling back to ArrayBuffer instantiation');\r\n          return instantiateArrayBuffer(binaryFile, imports, callback);\r\n        });\r\n    });\r\n  } else {\r\n    return instantiateArrayBuffer(binaryFile, imports, callback);\r\n  }\r\n}\r\n\r\n// Create the wasm instance.\r\n// Receives the wasm imports, returns the exports.\r\nfunction createWasm() {\r\n  // prepare imports\r\n  var info = {\r\n    'env': wasmImports,\r\n    'wasi_snapshot_preview1': wasmImports,\r\n  };\r\n  // Load the wasm module and create an instance of using native support in the JS engine.\r\n  // handle a generated wasm instance, receiving its exports and\r\n  // performing other necessary setup\r\n  /** @param {WebAssembly.Module=} module*/\r\n  function receiveInstance(instance, module) {\r\n    var exports = instance.exports;\r\n\r\n    exports = Asyncify.instrumentWasmExports(exports);\r\n\r\n    Module['asm'] = exports;\r\n\r\n    wasmMemory = Module['asm']['memory'];\r\n    updateMemoryViews();\r\n\r\n    wasmTable = Module['asm']['__indirect_function_table'];\r\n\r\n    addOnInit(Module['asm']['__wasm_call_ctors']);\r\n\r\n    removeRunDependency('wasm-instantiate');\r\n\r\n    return exports;\r\n  }\r\n  // wait for the pthread pool (if any)\r\n  addRunDependency('wasm-instantiate');\r\n\r\n  // Prefer streaming instantiation if available.\r\n  function receiveInstantiationResult(result) {\r\n    // 'result' is a ResultObject object which has both the module and instance.\r\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\r\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\r\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\r\n    receiveInstance(result['instance']);\r\n  }\r\n\r\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\r\n  // to manually instantiate the Wasm module themselves. This allows pages to\r\n  // run the instantiation parallel to any other async startup actions they are\r\n  // performing.\r\n  // Also pthreads and wasm workers initialize the wasm instance through this\r\n  // path.\r\n  if (Module['instantiateWasm']) {\r\n\r\n    try {\r\n      return Module['instantiateWasm'](info, receiveInstance);\r\n    } catch(e) {\r\n      err('Module.instantiateWasm callback failed with error: ' + e);\r\n        // If instantiation fails, reject the module ready promise.\r\n        readyPromiseReject(e);\r\n    }\r\n  }\r\n\r\n  // If instantiation fails, reject the module ready promise.\r\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\r\n  return {}; // no exports yet; we'll fill them in later\r\n}\r\n\r\n// Globals used by JS i64 conversions (see makeSetValue)\r\nvar tempDouble;\r\nvar tempI64;\r\n\r\n// include: runtime_debug.js\r\n// end include: runtime_debug.js\r\n// === Body ===\r\n\r\nvar ASM_CONSTS = {\r\n  607796: () => { if (Module.edgePostInit) { Module.edgePostInit(); } },  \r\n 607852: ($0, $1) => { const args = []; for (let i = 0; i < $0; i++) { args.push(UTF8ToString(HEAP32[($1 >> 2) + i])); } console.log(`Edge command line: ${args}`); const homeIndex = args.indexOf(\"-home\"); if (homeIndex === -1 || homeIndex >= args.length || args[homeIndex + 1].startsWith(\"-\")) { throw \"No home command line option specified\" } const homeDir = args[homeIndex + 1]; if (!FS.analyzePath(homeDir).exists) { FS.mkdirTree(homeDir); } FS.mount(IDBFS, {}, homeDir); FS.syncfs(true, function (err) { if (err) { console.error(`Error mounting home dir ${err}`); return; } Module._I_WebMain($0, $1); }); },  \r\n 608442: () => { if (Module.onFullscreen) { Module.onFullscreen(); } },  \r\n 608498: ($0) => { if (Module.edgePreSyncFS) { Module.edgePreSyncFS(); } FS.syncfs($0, function (err) { if (Module.edgePostSyncFS) { Module.edgePostSyncFS(); } }); },  \r\n 608647: () => { if (typeof(AudioContext) !== 'undefined') { return true; } else if (typeof(webkitAudioContext) !== 'undefined') { return true; } return false; },  \r\n 608794: () => { if ((typeof(navigator.mediaDevices) !== 'undefined') && (typeof(navigator.mediaDevices.getUserMedia) !== 'undefined')) { return true; } else if (typeof(navigator.webkitGetUserMedia) !== 'undefined') { return true; } return false; },  \r\n 609028: ($0) => { if(typeof(Module['SDL2']) === 'undefined') { Module['SDL2'] = {}; } var SDL2 = Module['SDL2']; if (!$0) { SDL2.audio = {}; } else { SDL2.capture = {}; } if (!SDL2.audioContext) { if (typeof(AudioContext) !== 'undefined') { SDL2.audioContext = new AudioContext(); } else if (typeof(webkitAudioContext) !== 'undefined') { SDL2.audioContext = new webkitAudioContext(); } if (SDL2.audioContext) { autoResumeAudioContext(SDL2.audioContext); } } return SDL2.audioContext === undefined ? -1 : 0; },  \r\n 609521: () => { var SDL2 = Module['SDL2']; return SDL2.audioContext.sampleRate; },  \r\n 609589: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; var have_microphone = function(stream) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); SDL2.capture.silenceTimer = undefined; } SDL2.capture.mediaStreamNode = SDL2.audioContext.createMediaStreamSource(stream); SDL2.capture.scriptProcessorNode = SDL2.audioContext.createScriptProcessor($1, $0, 1); SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) { if ((SDL2 === undefined) || (SDL2.capture === undefined)) { return; } audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0); SDL2.capture.currentCaptureBuffer = audioProcessingEvent.inputBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode); SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination); SDL2.capture.stream = stream; }; var no_microphone = function(error) { }; SDL2.capture.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { SDL2.capture.currentCaptureBuffer = SDL2.capture.silenceBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.silenceTimer = setTimeout(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); if ((navigator.mediaDevices !== undefined) && (navigator.mediaDevices.getUserMedia !== undefined)) { navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(have_microphone).catch(no_microphone); } else if (navigator.webkitGetUserMedia !== undefined) { navigator.webkitGetUserMedia({ audio: true, video: false }, have_microphone, no_microphone); } },  \r\n 611241: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; SDL2.audio.scriptProcessorNode = SDL2.audioContext['createScriptProcessor']($1, 0, $0); SDL2.audio.scriptProcessorNode['onaudioprocess'] = function (e) { if ((SDL2 === undefined) || (SDL2.audio === undefined)) { return; } SDL2.audio.currentOutputBuffer = e['outputBuffer']; dynCall('vi', $2, [$3]); }; SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']); },  \r\n 611651: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.capture.currentCaptureBuffer.numberOfChannels; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.capture.currentCaptureBuffer.getChannelData(c); if (channelData.length != $1) { throw 'Web Audio capture buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } if (numChannels == 1) { for (var j = 0; j < $1; ++j) { setValue($0 + (j * 4), channelData[j], 'float'); } } else { for (var j = 0; j < $1; ++j) { setValue($0 + (((j * numChannels) + c) * 4), channelData[j], 'float'); } } } },  \r\n 612256: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.audio.currentOutputBuffer['numberOfChannels']; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.audio.currentOutputBuffer['getChannelData'](c); if (channelData.length != $1) { throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } for (var j = 0; j < $1; ++j) { channelData[j] = HEAPF32[$0 + ((j*numChannels + c) << 2) >> 2]; } } },  \r\n 612736: ($0) => { var SDL2 = Module['SDL2']; if ($0) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); } if (SDL2.capture.stream !== undefined) { var tracks = SDL2.capture.stream.getAudioTracks(); for (var i = 0; i < tracks.length; i++) { SDL2.capture.stream.removeTrack(tracks[i]); } SDL2.capture.stream = undefined; } if (SDL2.capture.scriptProcessorNode !== undefined) { SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) {}; SDL2.capture.scriptProcessorNode.disconnect(); SDL2.capture.scriptProcessorNode = undefined; } if (SDL2.capture.mediaStreamNode !== undefined) { SDL2.capture.mediaStreamNode.disconnect(); SDL2.capture.mediaStreamNode = undefined; } if (SDL2.capture.silenceBuffer !== undefined) { SDL2.capture.silenceBuffer = undefined } SDL2.capture = undefined; } else { if (SDL2.audio.scriptProcessorNode != undefined) { SDL2.audio.scriptProcessorNode.disconnect(); SDL2.audio.scriptProcessorNode = undefined; } SDL2.audio = undefined; } if ((SDL2.audioContext !== undefined) && (SDL2.audio === undefined) && (SDL2.capture === undefined)) { SDL2.audioContext.close(); SDL2.audioContext = undefined; } },  \r\n 613908: ($0, $1, $2) => { var w = $0; var h = $1; var pixels = $2; if (!Module['SDL2']) Module['SDL2'] = {}; var SDL2 = Module['SDL2']; if (SDL2.ctxCanvas !== Module['canvas']) { SDL2.ctx = Module['createContext'](Module['canvas'], false, true); SDL2.ctxCanvas = Module['canvas']; } if (SDL2.w !== w || SDL2.h !== h || SDL2.imageCtx !== SDL2.ctx) { SDL2.image = SDL2.ctx.createImageData(w, h); SDL2.w = w; SDL2.h = h; SDL2.imageCtx = SDL2.ctx; } var data = SDL2.image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = 0xff; src++; dst += 4; } } else { if (SDL2.data32Data !== data) { SDL2.data32 = new Int32Array(data.buffer); SDL2.data8 = new Uint8Array(data.buffer); SDL2.data32Data = data; } var data32 = SDL2.data32; num = data32.length; data32.set(HEAP32.subarray(src, src + num)); var data8 = SDL2.data8; var i = 3; var j = i + 4*num; if (num % 8 == 0) { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; } } else { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; } } } SDL2.ctx.putImageData(SDL2.image, 0, 0); },  \r\n 615377: ($0, $1, $2, $3, $4) => { var w = $0; var h = $1; var hot_x = $2; var hot_y = $3; var pixels = $4; var canvas = document.createElement(\"canvas\"); canvas.width = w; canvas.height = h; var ctx = canvas.getContext(\"2d\"); var image = ctx.createImageData(w, h); var data = image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = (val >> 24) & 0xff; src++; dst += 4; } } else { var data32 = new Int32Array(data.buffer); num = data32.length; data32.set(HEAP32.subarray(src, src + num)); } ctx.putImageData(image, 0, 0); var url = hot_x === 0 && hot_y === 0 ? \"url(\" + canvas.toDataURL() + \"), auto\" : \"url(\" + canvas.toDataURL() + \") \" + hot_x + \" \" + hot_y + \", auto\"; var urlBuf = _malloc(url.length + 1); stringToUTF8(url, urlBuf, url.length + 1); return urlBuf; },  \r\n 616366: ($0) => { if (Module['canvas']) { Module['canvas'].style['cursor'] = UTF8ToString($0); } },  \r\n 616449: () => { if (Module['canvas']) { Module['canvas'].style['cursor'] = 'none'; } },  \r\n 616518: () => { return window.innerWidth; },  \r\n 616548: () => { return window.innerHeight; },  \r\n 616579: ($0, $1) => { alert(UTF8ToString($0) + \"\\n\\n\" + UTF8ToString($1)); }\r\n};\r\n\r\n\r\n\r\n// end include: preamble.js\r\n\r\n  /** @constructor */\r\n  function ExitStatus(status) {\r\n      this.name = 'ExitStatus';\r\n      this.message = 'Program terminated with exit(' + status + ')';\r\n      this.status = status;\r\n    }\r\n\r\n  function listenOnce(object, event, func) {\r\n      object.addEventListener(event, func, { 'once': true });\r\n    }\r\n  /** @param {Object=} elements */\r\n  function autoResumeAudioContext(ctx, elements) {\r\n      if (!elements) {\r\n        elements = [document, document.getElementById('canvas')];\r\n      }\r\n      ['keydown', 'mousedown', 'touchstart'].forEach((event) => {\r\n        elements.forEach((element) => {\r\n          if (element) {\r\n            listenOnce(element, event, () => {\r\n              if (ctx.state === 'suspended') ctx.resume();\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n  function callRuntimeCallbacks(callbacks) {\r\n      while (callbacks.length > 0) {\r\n        // Pass the module as the first argument.\r\n        callbacks.shift()(Module);\r\n      }\r\n    }\r\n\r\n  function dynCallLegacy(sig, ptr, args) {\r\n      var f = Module['dynCall_' + sig];\r\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\r\n    }\r\n  \r\n  var wasmTableMirror = [];\r\n  \r\n  function getWasmTableEntry(funcPtr) {\r\n      var func = wasmTableMirror[funcPtr];\r\n      if (!func) {\r\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\r\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\r\n      }\r\n      return func;\r\n    }\r\n  /** @param {Object=} args */\r\n  function dynCall(sig, ptr, args) {\r\n      return dynCallLegacy(sig, ptr, args);\r\n    }\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {string} type\r\n     */\r\n  function getValue(ptr, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': return HEAP8[((ptr)>>0)];\r\n      case 'i8': return HEAP8[((ptr)>>0)];\r\n      case 'i16': return HEAP16[((ptr)>>1)];\r\n      case 'i32': return HEAP32[((ptr)>>2)];\r\n      case 'i64': return HEAP32[((ptr)>>2)];\r\n      case 'float': return HEAPF32[((ptr)>>2)];\r\n      case 'double': return HEAPF64[((ptr)>>3)];\r\n      case '*': return HEAPU32[((ptr)>>2)];\r\n      default: abort('invalid type for getValue: ' + type);\r\n    }\r\n  }\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {number} value\r\n     * @param {string} type\r\n     */\r\n  function setValue(ptr, value, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\r\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\r\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\r\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\r\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((ptr)>>2)] = tempI64[0],HEAP32[(((ptr)+(4))>>2)] = tempI64[1]); break;\r\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\r\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\r\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\r\n      default: abort('invalid type for setValue: ' + type);\r\n    }\r\n  }\r\n\r\n  /** @constructor */\r\n  function ExceptionInfo(excPtr) {\r\n      this.excPtr = excPtr;\r\n      this.ptr = excPtr - 24;\r\n  \r\n      this.set_type = function(type) {\r\n        HEAPU32[(((this.ptr)+(4))>>2)] = type;\r\n      };\r\n  \r\n      this.get_type = function() {\r\n        return HEAPU32[(((this.ptr)+(4))>>2)];\r\n      };\r\n  \r\n      this.set_destructor = function(destructor) {\r\n        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;\r\n      };\r\n  \r\n      this.get_destructor = function() {\r\n        return HEAPU32[(((this.ptr)+(8))>>2)];\r\n      };\r\n  \r\n      this.set_caught = function (caught) {\r\n        caught = caught ? 1 : 0;\r\n        HEAP8[(((this.ptr)+(12))>>0)] = caught;\r\n      };\r\n  \r\n      this.get_caught = function () {\r\n        return HEAP8[(((this.ptr)+(12))>>0)] != 0;\r\n      };\r\n  \r\n      this.set_rethrown = function (rethrown) {\r\n        rethrown = rethrown ? 1 : 0;\r\n        HEAP8[(((this.ptr)+(13))>>0)] = rethrown;\r\n      };\r\n  \r\n      this.get_rethrown = function () {\r\n        return HEAP8[(((this.ptr)+(13))>>0)] != 0;\r\n      };\r\n  \r\n      // Initialize native structure fields. Should be called once after allocated.\r\n      this.init = function(type, destructor) {\r\n        this.set_adjusted_ptr(0);\r\n        this.set_type(type);\r\n        this.set_destructor(destructor);\r\n      }\r\n  \r\n      this.set_adjusted_ptr = function(adjustedPtr) {\r\n        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;\r\n      };\r\n  \r\n      this.get_adjusted_ptr = function() {\r\n        return HEAPU32[(((this.ptr)+(16))>>2)];\r\n      };\r\n  \r\n      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\r\n      // when the pointer is casted to some of the exception object base classes (e.g. when virtual\r\n      // inheritance is used). When a pointer is thrown this method should return the thrown pointer\r\n      // itself.\r\n      this.get_exception_ptr = function() {\r\n        // Work around a fastcomp bug, this code is still included for some reason in a build without\r\n        // exceptions support.\r\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\r\n        if (isPointer) {\r\n          return HEAPU32[((this.excPtr)>>2)];\r\n        }\r\n        var adjusted = this.get_adjusted_ptr();\r\n        if (adjusted !== 0) return adjusted;\r\n        return this.excPtr;\r\n      };\r\n    }\r\n  \r\n  var exceptionLast = 0;\r\n  \r\n  var uncaughtExceptionCount = 0;\r\n  function ___cxa_throw(ptr, type, destructor) {\r\n      var info = new ExceptionInfo(ptr);\r\n      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\r\n      info.init(type, destructor);\r\n      exceptionLast = ptr;\r\n      uncaughtExceptionCount++;\r\n      throw exceptionLast;\r\n    }\r\n\r\n  var PATH = {isAbs:(path) => path.charAt(0) === '/',splitPath:(filename) => {\r\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n        return splitPathRe.exec(filename).slice(1);\r\n      },normalizeArray:(parts, allowAboveRoot) => {\r\n        // if the path tries to go above the root, `up` ends up > 0\r\n        var up = 0;\r\n        for (var i = parts.length - 1; i >= 0; i--) {\r\n          var last = parts[i];\r\n          if (last === '.') {\r\n            parts.splice(i, 1);\r\n          } else if (last === '..') {\r\n            parts.splice(i, 1);\r\n            up++;\r\n          } else if (up) {\r\n            parts.splice(i, 1);\r\n            up--;\r\n          }\r\n        }\r\n        // if the path is allowed to go above the root, restore leading ..s\r\n        if (allowAboveRoot) {\r\n          for (; up; up--) {\r\n            parts.unshift('..');\r\n          }\r\n        }\r\n        return parts;\r\n      },normalize:(path) => {\r\n        var isAbsolute = PATH.isAbs(path),\r\n            trailingSlash = path.substr(-1) === '/';\r\n        // Normalize the path\r\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\r\n        if (!path && !isAbsolute) {\r\n          path = '.';\r\n        }\r\n        if (path && trailingSlash) {\r\n          path += '/';\r\n        }\r\n        return (isAbsolute ? '/' : '') + path;\r\n      },dirname:(path) => {\r\n        var result = PATH.splitPath(path),\r\n            root = result[0],\r\n            dir = result[1];\r\n        if (!root && !dir) {\r\n          // No dirname whatsoever\r\n          return '.';\r\n        }\r\n        if (dir) {\r\n          // It has a dirname, strip trailing slash\r\n          dir = dir.substr(0, dir.length - 1);\r\n        }\r\n        return root + dir;\r\n      },basename:(path) => {\r\n        // EMSCRIPTEN return '/'' for '/', not an empty string\r\n        if (path === '/') return '/';\r\n        path = PATH.normalize(path);\r\n        path = path.replace(/\\/$/, \"\");\r\n        var lastSlash = path.lastIndexOf('/');\r\n        if (lastSlash === -1) return path;\r\n        return path.substr(lastSlash+1);\r\n      },join:function() {\r\n        var paths = Array.prototype.slice.call(arguments);\r\n        return PATH.normalize(paths.join('/'));\r\n      },join2:(l, r) => {\r\n        return PATH.normalize(l + '/' + r);\r\n      }};\r\n  \r\n  function initRandomFill() {\r\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\r\n        // for modern web browsers\r\n        return (view) => crypto.getRandomValues(view);\r\n      } else\r\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\r\n      abort(\"initRandomDevice\");\r\n    }\r\n  function randomFill(view) {\r\n      // Lazily init on the first invocation.\r\n      return (randomFill = initRandomFill())(view);\r\n    }\r\n  \r\n  \r\n  \r\n  var PATH_FS = {resolve:function() {\r\n        var resolvedPath = '',\r\n          resolvedAbsolute = false;\r\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\r\n          // Skip empty and invalid entries\r\n          if (typeof path != 'string') {\r\n            throw new TypeError('Arguments to path.resolve must be strings');\r\n          } else if (!path) {\r\n            return ''; // an invalid portion invalidates the whole thing\r\n          }\r\n          resolvedPath = path + '/' + resolvedPath;\r\n          resolvedAbsolute = PATH.isAbs(path);\r\n        }\r\n        // At this point the path should be resolved to a full absolute path, but\r\n        // handle relative paths to be safe (might happen when process.cwd() fails)\r\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\r\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n      },relative:(from, to) => {\r\n        from = PATH_FS.resolve(from).substr(1);\r\n        to = PATH_FS.resolve(to).substr(1);\r\n        function trim(arr) {\r\n          var start = 0;\r\n          for (; start < arr.length; start++) {\r\n            if (arr[start] !== '') break;\r\n          }\r\n          var end = arr.length - 1;\r\n          for (; end >= 0; end--) {\r\n            if (arr[end] !== '') break;\r\n          }\r\n          if (start > end) return [];\r\n          return arr.slice(start, end - start + 1);\r\n        }\r\n        var fromParts = trim(from.split('/'));\r\n        var toParts = trim(to.split('/'));\r\n        var length = Math.min(fromParts.length, toParts.length);\r\n        var samePartsLength = length;\r\n        for (var i = 0; i < length; i++) {\r\n          if (fromParts[i] !== toParts[i]) {\r\n            samePartsLength = i;\r\n            break;\r\n          }\r\n        }\r\n        var outputParts = [];\r\n        for (var i = samePartsLength; i < fromParts.length; i++) {\r\n          outputParts.push('..');\r\n        }\r\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n        return outputParts.join('/');\r\n      }};\r\n  \r\n  \r\n  function lengthBytesUTF8(str) {\r\n      var len = 0;\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        var c = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (c <= 0x7F) {\r\n          len++;\r\n        } else if (c <= 0x7FF) {\r\n          len += 2;\r\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\r\n          len += 4; ++i;\r\n        } else {\r\n          len += 3;\r\n        }\r\n      }\r\n      return len;\r\n    }\r\n  \r\n  function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\r\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\r\n      // undefined and false each don't write out any bytes.\r\n      if (!(maxBytesToWrite > 0))\r\n        return 0;\r\n  \r\n      var startIdx = outIdx;\r\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // and https://www.ietf.org/rfc/rfc2279.txt\r\n        // and https://tools.ietf.org/html/rfc3629\r\n        var u = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (u >= 0xD800 && u <= 0xDFFF) {\r\n          var u1 = str.charCodeAt(++i);\r\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\r\n        }\r\n        if (u <= 0x7F) {\r\n          if (outIdx >= endIdx) break;\r\n          heap[outIdx++] = u;\r\n        } else if (u <= 0x7FF) {\r\n          if (outIdx + 1 >= endIdx) break;\r\n          heap[outIdx++] = 0xC0 | (u >> 6);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else if (u <= 0xFFFF) {\r\n          if (outIdx + 2 >= endIdx) break;\r\n          heap[outIdx++] = 0xE0 | (u >> 12);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else {\r\n          if (outIdx + 3 >= endIdx) break;\r\n          heap[outIdx++] = 0xF0 | (u >> 18);\r\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        }\r\n      }\r\n      // Null-terminate the pointer to the buffer.\r\n      heap[outIdx] = 0;\r\n      return outIdx - startIdx;\r\n    }\r\n  /** @type {function(string, boolean=, number=)} */\r\n  function intArrayFromString(stringy, dontAddNull, length) {\r\n    var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\r\n    var u8array = new Array(len);\r\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n    if (dontAddNull) u8array.length = numBytesWritten;\r\n    return u8array;\r\n  }\r\n  var TTY = {ttys:[],init:function () {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\r\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\r\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\r\n        //   // with text files until FS.init can be refactored.\r\n        //   process.stdin.setEncoding('utf8');\r\n        // }\r\n      },shutdown:function() {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\r\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\r\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\r\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\r\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\r\n        //   process.stdin.pause();\r\n        // }\r\n      },register:function(dev, ops) {\r\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\r\n        FS.registerDevice(dev, TTY.stream_ops);\r\n      },stream_ops:{open:function(stream) {\r\n          var tty = TTY.ttys[stream.node.rdev];\r\n          if (!tty) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          stream.tty = tty;\r\n          stream.seekable = false;\r\n        },close:function(stream) {\r\n          // flush any pending line data\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },fsync:function(stream) {\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },read:function(stream, buffer, offset, length, pos /* ignored */) {\r\n          if (!stream.tty || !stream.tty.ops.get_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          var bytesRead = 0;\r\n          for (var i = 0; i < length; i++) {\r\n            var result;\r\n            try {\r\n              result = stream.tty.ops.get_char(stream.tty);\r\n            } catch (e) {\r\n              throw new FS.ErrnoError(29);\r\n            }\r\n            if (result === undefined && bytesRead === 0) {\r\n              throw new FS.ErrnoError(6);\r\n            }\r\n            if (result === null || result === undefined) break;\r\n            bytesRead++;\r\n            buffer[offset+i] = result;\r\n          }\r\n          if (bytesRead) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return bytesRead;\r\n        },write:function(stream, buffer, offset, length, pos) {\r\n          if (!stream.tty || !stream.tty.ops.put_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          try {\r\n            for (var i = 0; i < length; i++) {\r\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\r\n            }\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n          if (length) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return i;\r\n        }},default_tty_ops:{get_char:function(tty) {\r\n          if (!tty.input.length) {\r\n            var result = null;\r\n            if (typeof window != 'undefined' &&\r\n              typeof window.prompt == 'function') {\r\n              // Browser.\r\n              result = window.prompt('Input: ');  // returns null on cancel\r\n              if (result !== null) {\r\n                result += '\\n';\r\n              }\r\n            } else if (typeof readline == 'function') {\r\n              // Command line.\r\n              result = readline();\r\n              if (result !== null) {\r\n                result += '\\n';\r\n              }\r\n            }\r\n            if (!result) {\r\n              return null;\r\n            }\r\n            tty.input = intArrayFromString(result, true);\r\n          }\r\n          return tty.input.shift();\r\n        },put_char:function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\r\n          }\r\n        },fsync:function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        }},default_tty1_ops:{put_char:function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val);\r\n          }\r\n        },fsync:function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        }}};\r\n  \r\n  \r\n  function zeroMemory(address, size) {\r\n      HEAPU8.fill(0, address, address + size);\r\n      return address;\r\n    }\r\n  \r\n  function alignMemory(size, alignment) {\r\n      return Math.ceil(size / alignment) * alignment;\r\n    }\r\n  function mmapAlloc(size) {\r\n      abort();\r\n    }\r\n  var MEMFS = {ops_table:null,mount:function(mount) {\r\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\r\n      },createNode:function(parent, name, mode, dev) {\r\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n          // no supported\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (!MEMFS.ops_table) {\r\n          MEMFS.ops_table = {\r\n            dir: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr,\r\n                lookup: MEMFS.node_ops.lookup,\r\n                mknod: MEMFS.node_ops.mknod,\r\n                rename: MEMFS.node_ops.rename,\r\n                unlink: MEMFS.node_ops.unlink,\r\n                rmdir: MEMFS.node_ops.rmdir,\r\n                readdir: MEMFS.node_ops.readdir,\r\n                symlink: MEMFS.node_ops.symlink\r\n              },\r\n              stream: {\r\n                llseek: MEMFS.stream_ops.llseek\r\n              }\r\n            },\r\n            file: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr\r\n              },\r\n              stream: {\r\n                llseek: MEMFS.stream_ops.llseek,\r\n                read: MEMFS.stream_ops.read,\r\n                write: MEMFS.stream_ops.write,\r\n                allocate: MEMFS.stream_ops.allocate,\r\n                mmap: MEMFS.stream_ops.mmap,\r\n                msync: MEMFS.stream_ops.msync\r\n              }\r\n            },\r\n            link: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr,\r\n                readlink: MEMFS.node_ops.readlink\r\n              },\r\n              stream: {}\r\n            },\r\n            chrdev: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr\r\n              },\r\n              stream: FS.chrdev_stream_ops\r\n            }\r\n          };\r\n        }\r\n        var node = FS.createNode(parent, name, mode, dev);\r\n        if (FS.isDir(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.dir.node;\r\n          node.stream_ops = MEMFS.ops_table.dir.stream;\r\n          node.contents = {};\r\n        } else if (FS.isFile(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.file.node;\r\n          node.stream_ops = MEMFS.ops_table.file.stream;\r\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\r\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\r\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\r\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\r\n          node.contents = null; \r\n        } else if (FS.isLink(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.link.node;\r\n          node.stream_ops = MEMFS.ops_table.link.stream;\r\n        } else if (FS.isChrdev(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.chrdev.node;\r\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\r\n        }\r\n        node.timestamp = Date.now();\r\n        // add the new node to the parent\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n          parent.timestamp = node.timestamp;\r\n        }\r\n        return node;\r\n      },getFileDataAsTypedArray:function(node) {\r\n        if (!node.contents) return new Uint8Array(0);\r\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\r\n        return new Uint8Array(node.contents);\r\n      },expandFileStorage:function(node, newCapacity) {\r\n        var prevCapacity = node.contents ? node.contents.length : 0;\r\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\r\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\r\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\r\n        // avoid overshooting the allocation cap by a very large margin.\r\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\r\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\r\n        var oldContents = node.contents;\r\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\r\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\r\n      },resizeFileStorage:function(node, newSize) {\r\n        if (node.usedBytes == newSize) return;\r\n        if (newSize == 0) {\r\n          node.contents = null; // Fully decommit when requesting a resize to zero.\r\n          node.usedBytes = 0;\r\n        } else {\r\n          var oldContents = node.contents;\r\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\r\n          if (oldContents) {\r\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\r\n          }\r\n          node.usedBytes = newSize;\r\n        }\r\n      },node_ops:{getattr:function(node) {\r\n          var attr = {};\r\n          // device numbers reuse inode numbers.\r\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n          attr.ino = node.id;\r\n          attr.mode = node.mode;\r\n          attr.nlink = 1;\r\n          attr.uid = 0;\r\n          attr.gid = 0;\r\n          attr.rdev = node.rdev;\r\n          if (FS.isDir(node.mode)) {\r\n            attr.size = 4096;\r\n          } else if (FS.isFile(node.mode)) {\r\n            attr.size = node.usedBytes;\r\n          } else if (FS.isLink(node.mode)) {\r\n            attr.size = node.link.length;\r\n          } else {\r\n            attr.size = 0;\r\n          }\r\n          attr.atime = new Date(node.timestamp);\r\n          attr.mtime = new Date(node.timestamp);\r\n          attr.ctime = new Date(node.timestamp);\r\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\r\n          //       but this is not required by the standard.\r\n          attr.blksize = 4096;\r\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n          return attr;\r\n        },setattr:function(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n          if (attr.size !== undefined) {\r\n            MEMFS.resizeFileStorage(node, attr.size);\r\n          }\r\n        },lookup:function(parent, name) {\r\n          throw FS.genericErrors[44];\r\n        },mknod:function(parent, name, mode, dev) {\r\n          return MEMFS.createNode(parent, name, mode, dev);\r\n        },rename:function(old_node, new_dir, new_name) {\r\n          // if we're overwriting a directory at new_name, make sure it's empty.\r\n          if (FS.isDir(old_node.mode)) {\r\n            var new_node;\r\n            try {\r\n              new_node = FS.lookupNode(new_dir, new_name);\r\n            } catch (e) {\r\n            }\r\n            if (new_node) {\r\n              for (var i in new_node.contents) {\r\n                throw new FS.ErrnoError(55);\r\n              }\r\n            }\r\n          }\r\n          // do the internal rewiring\r\n          delete old_node.parent.contents[old_node.name];\r\n          old_node.parent.timestamp = Date.now()\r\n          old_node.name = new_name;\r\n          new_dir.contents[new_name] = old_node;\r\n          new_dir.timestamp = old_node.parent.timestamp;\r\n          old_node.parent = new_dir;\r\n        },unlink:function(parent, name) {\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },rmdir:function(parent, name) {\r\n          var node = FS.lookupNode(parent, name);\r\n          for (var i in node.contents) {\r\n            throw new FS.ErrnoError(55);\r\n          }\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },readdir:function(node) {\r\n          var entries = ['.', '..'];\r\n          for (var key in node.contents) {\r\n            if (!node.contents.hasOwnProperty(key)) {\r\n              continue;\r\n            }\r\n            entries.push(key);\r\n          }\r\n          return entries;\r\n        },symlink:function(parent, newname, oldpath) {\r\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\r\n          node.link = oldpath;\r\n          return node;\r\n        },readlink:function(node) {\r\n          if (!FS.isLink(node.mode)) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return node.link;\r\n        }},stream_ops:{read:function(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= stream.node.usedBytes) return 0;\r\n          var size = Math.min(stream.node.usedBytes - position, length);\r\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\r\n            buffer.set(contents.subarray(position, position + size), offset);\r\n          } else {\r\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\r\n          }\r\n          return size;\r\n        },write:function(stream, buffer, offset, length, position, canOwn) {\r\n          // If the buffer is located in main memory (HEAP), and if\r\n          // memory can grow, we can't hold on to references of the\r\n          // memory buffer, as they may get invalidated. That means we\r\n          // need to do copy its contents.\r\n          if (buffer.buffer === HEAP8.buffer) {\r\n            canOwn = false;\r\n          }\r\n  \r\n          if (!length) return 0;\r\n          var node = stream.node;\r\n          node.timestamp = Date.now();\r\n  \r\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\r\n            if (canOwn) {\r\n              node.contents = buffer.subarray(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\r\n              node.contents = buffer.slice(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\r\n              node.contents.set(buffer.subarray(offset, offset + length), position);\r\n              return length;\r\n            }\r\n          }\r\n  \r\n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\r\n          MEMFS.expandFileStorage(node, position+length);\r\n          if (node.contents.subarray && buffer.subarray) {\r\n            // Use typed array write which is available.\r\n            node.contents.set(buffer.subarray(offset, offset + length), position);\r\n          } else {\r\n            for (var i = 0; i < length; i++) {\r\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\r\n            }\r\n          }\r\n          node.usedBytes = Math.max(node.usedBytes, position + length);\r\n          return length;\r\n        },llseek:function(stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.usedBytes;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        },allocate:function(stream, offset, length) {\r\n          MEMFS.expandFileStorage(stream.node, offset + length);\r\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\r\n        },mmap:function(stream, length, position, prot, flags) {\r\n          if (!FS.isFile(stream.node.mode)) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          var ptr;\r\n          var allocated;\r\n          var contents = stream.node.contents;\r\n          // Only make a new copy when MAP_PRIVATE is specified.\r\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\r\n            // We can't emulate MAP_SHARED when the file is not backed by the\r\n            // buffer we're mapping to (e.g. the HEAP buffer).\r\n            allocated = false;\r\n            ptr = contents.byteOffset;\r\n          } else {\r\n            // Try to avoid unnecessary slices.\r\n            if (position > 0 || position + length < contents.length) {\r\n              if (contents.subarray) {\r\n                contents = contents.subarray(position, position + length);\r\n              } else {\r\n                contents = Array.prototype.slice.call(contents, position, position + length);\r\n              }\r\n            }\r\n            allocated = true;\r\n            ptr = mmapAlloc(length);\r\n            if (!ptr) {\r\n              throw new FS.ErrnoError(48);\r\n            }\r\n            HEAP8.set(contents, ptr);\r\n          }\r\n          return { ptr: ptr, allocated: allocated };\r\n        },msync:function(stream, buffer, offset, length, mmapFlags) {\r\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n          // should we check if bytesWritten and length are the same?\r\n          return 0;\r\n        }}};\r\n  \r\n  /** @param {boolean=} noRunDep */\r\n  function asyncLoad(url, onload, onerror, noRunDep) {\r\n      var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\r\n      readAsync(url, (arrayBuffer) => {\r\n        assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\r\n        onload(new Uint8Array(arrayBuffer));\r\n        if (dep) removeRunDependency(dep);\r\n      }, (event) => {\r\n        if (onerror) {\r\n          onerror();\r\n        } else {\r\n          throw 'Loading data file \"' + url + '\" failed.';\r\n        }\r\n      });\r\n      if (dep) addRunDependency(dep);\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  var IDBFS = {dbs:{},indexedDB:() => {\r\n        if (typeof indexedDB != 'undefined') return indexedDB;\r\n        var ret = null;\r\n        if (typeof window == 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        assert(ret, 'IDBFS used, but indexedDB not supported');\r\n        return ret;\r\n      },DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:function(mount) {\r\n        // reuse all of the core MEMFS functionality\r\n        return MEMFS.mount.apply(null, arguments);\r\n      },syncfs:(mount, populate, callback) => {\r\n        IDBFS.getLocalSet(mount, (err, local) => {\r\n          if (err) return callback(err);\r\n  \r\n          IDBFS.getRemoteSet(mount, (err, remote) => {\r\n            if (err) return callback(err);\r\n  \r\n            var src = populate ? remote : local;\r\n            var dst = populate ? local : remote;\r\n  \r\n            IDBFS.reconcile(src, dst, callback);\r\n          });\r\n        });\r\n      },quit:() => {\r\n        Object.values(IDBFS.dbs).forEach((value) => value.close());\r\n        IDBFS.dbs = {};\r\n      },getDB:(name, callback) => {\r\n        // check the cache first\r\n        var db = IDBFS.dbs[name];\r\n        if (db) {\r\n          return callback(null, db);\r\n        }\r\n  \r\n        var req;\r\n        try {\r\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n        if (!req) {\r\n          return callback(\"Unable to connect to IndexedDB\");\r\n        }\r\n        req.onupgradeneeded = (e) => {\r\n          var db = /** @type {IDBDatabase} */ (e.target.result);\r\n          var transaction = e.target.transaction;\r\n  \r\n          var fileStore;\r\n  \r\n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\r\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n          } else {\r\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\r\n          }\r\n  \r\n          if (!fileStore.indexNames.contains('timestamp')) {\r\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\r\n          }\r\n        };\r\n        req.onsuccess = () => {\r\n          db = /** @type {IDBDatabase} */ (req.result);\r\n  \r\n          // add to the cache\r\n          IDBFS.dbs[name] = db;\r\n          callback(null, db);\r\n        };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },getLocalSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        function isRealDir(p) {\r\n          return p !== '.' && p !== '..';\r\n        };\r\n        function toAbsolute(root) {\r\n          return (p) => {\r\n            return PATH.join2(root, p);\r\n          }\r\n        };\r\n  \r\n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\r\n  \r\n        while (check.length) {\r\n          var path = check.pop();\r\n          var stat;\r\n  \r\n          try {\r\n            stat = FS.stat(path);\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\r\n          }\r\n  \r\n          entries[path] = { 'timestamp': stat.mtime };\r\n        }\r\n  \r\n        return callback(null, { type: 'local', entries: entries });\r\n      },getRemoteSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        IDBFS.getDB(mount.mountpoint, (err, db) => {\r\n          if (err) return callback(err);\r\n  \r\n          try {\r\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\r\n            transaction.onerror = (e) => {\r\n              callback(this.error);\r\n              e.preventDefault();\r\n            };\r\n  \r\n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n            var index = store.index('timestamp');\r\n  \r\n            index.openKeyCursor().onsuccess = (event) => {\r\n              var cursor = event.target.result;\r\n  \r\n              if (!cursor) {\r\n                return callback(null, { type: 'remote', db: db, entries: entries });\r\n              }\r\n  \r\n              entries[cursor.primaryKey] = { 'timestamp': cursor.key };\r\n  \r\n              cursor.continue();\r\n            };\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n        });\r\n      },loadLocalEntry:(path, callback) => {\r\n        var stat, node;\r\n  \r\n        try {\r\n          var lookup = FS.lookupPath(path);\r\n          node = lookup.node;\r\n          stat = FS.stat(path);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        if (FS.isDir(stat.mode)) {\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode });\r\n        } else if (FS.isFile(stat.mode)) {\r\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\r\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\r\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode, 'contents': node.contents });\r\n        } else {\r\n          return callback(new Error('node type not supported'));\r\n        }\r\n      },storeLocalEntry:(path, entry, callback) => {\r\n        try {\r\n          if (FS.isDir(entry['mode'])) {\r\n            FS.mkdirTree(path, entry['mode']);\r\n          } else if (FS.isFile(entry['mode'])) {\r\n            FS.writeFile(path, entry['contents'], { canOwn: true });\r\n          } else {\r\n            return callback(new Error('node type not supported'));\r\n          }\r\n  \r\n          FS.chmod(path, entry['mode']);\r\n          FS.utime(path, entry['timestamp'], entry['timestamp']);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },removeLocalEntry:(path, callback) => {\r\n        try {\r\n          var stat = FS.stat(path);\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            FS.rmdir(path);\r\n          } else if (FS.isFile(stat.mode)) {\r\n            FS.unlink(path);\r\n          }\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },loadRemoteEntry:(store, path, callback) => {\r\n        var req = store.get(path);\r\n        req.onsuccess = (event) => { callback(null, event.target.result); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },storeRemoteEntry:(store, path, entry, callback) => {\r\n        try {\r\n          var req = store.put(entry, path);\r\n        } catch (e) {\r\n          callback(e);\r\n          return;\r\n        }\r\n        req.onsuccess = () => { callback(null); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },removeRemoteEntry:(store, path, callback) => {\r\n        var req = store.delete(path);\r\n        req.onsuccess = () => { callback(null); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },reconcile:(src, dst, callback) => {\r\n        var total = 0;\r\n  \r\n        var create = [];\r\n        Object.keys(src.entries).forEach(function (key) {\r\n          var e = src.entries[key];\r\n          var e2 = dst.entries[key];\r\n          if (!e2 || e['timestamp'].getTime() != e2['timestamp'].getTime()) {\r\n            create.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        var remove = [];\r\n        Object.keys(dst.entries).forEach(function (key) {\r\n          if (!src.entries[key]) {\r\n            remove.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        if (!total) {\r\n          return callback(null);\r\n        }\r\n  \r\n        var errored = false;\r\n        var db = src.type === 'remote' ? src.db : dst.db;\r\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\r\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n  \r\n        function done(err) {\r\n          if (err && !errored) {\r\n            errored = true;\r\n            return callback(err);\r\n          }\r\n        };\r\n  \r\n        transaction.onerror = (e) => {\r\n          done(this.error);\r\n          e.preventDefault();\r\n        };\r\n  \r\n        transaction.oncomplete = (e) => {\r\n          if (!errored) {\r\n            callback(null);\r\n          }\r\n        };\r\n  \r\n        // sort paths in ascending order so directory entries are created\r\n        // before the files inside them\r\n        create.sort().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.loadRemoteEntry(store, path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeLocalEntry(path, entry, done);\r\n            });\r\n          } else {\r\n            IDBFS.loadLocalEntry(path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeRemoteEntry(store, path, entry, done);\r\n            });\r\n          }\r\n        });\r\n  \r\n        // sort paths in descending order so files are deleted before their\r\n        // parent directories\r\n        remove.sort().reverse().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.removeLocalEntry(path, done);\r\n          } else {\r\n            IDBFS.removeRemoteEntry(store, path, done);\r\n          }\r\n        });\r\n      }};\r\n  \r\n  var LZ4 = {DIR_MODE:16895,FILE_MODE:33279,CHUNK_SIZE:-1,codec:null,init:function() {\r\n        if (LZ4.codec) return;\r\n        LZ4.codec = (function() {\r\n          /*\r\n  MiniLZ4: Minimal LZ4 block decoding and encoding.\r\n  \r\n  based off of node-lz4, https://github.com/pierrec/node-lz4\r\n  \r\n  ====\r\n  Copyright (c) 2012 Pierre Curto\r\n  \r\n  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  of this software and associated documentation files (the \"Software\"), to deal\r\n  in the Software without restriction, including without limitation the rights\r\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n  copies of the Software, and to permit persons to whom the Software is\r\n  furnished to do so, subject to the following conditions:\r\n  \r\n  The above copyright notice and this permission notice shall be included in\r\n  all copies or substantial portions of the Software.\r\n  \r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n  THE SOFTWARE.\r\n  ====\r\n  \r\n  changes have the same license\r\n  */\r\n  \r\n  var MiniLZ4 = (function() {\r\n  \r\n  var exports = {};\r\n  \r\n  /**\r\n   * Decode a block. Assumptions: input contains all sequences of a \r\n   * chunk, output is large enough to receive the decoded data.\r\n   * If the output buffer is too small, an error will be thrown.\r\n   * If the returned value is negative, an error occured at the returned offset.\r\n   *\r\n   * @param {ArrayBufferView} input input data\r\n   * @param {ArrayBufferView} output output data\r\n   * @param {number=} sIdx\r\n   * @param {number=} eIdx\r\n   * @return {number} number of decoded bytes\r\n   * @private\r\n   */\r\n  exports.uncompress = function (input, output, sIdx, eIdx) {\r\n  \tsIdx = sIdx || 0\r\n  \teIdx = eIdx || (input.length - sIdx)\r\n  \t// Process each sequence in the incoming data\r\n  \tfor (var i = sIdx, n = eIdx, j = 0; i < n;) {\r\n  \t\tvar token = input[i++]\r\n  \r\n  \t\t// Literals\r\n  \t\tvar literals_length = (token >> 4)\r\n  \t\tif (literals_length > 0) {\r\n  \t\t\t// length of literals\r\n  \t\t\tvar l = literals_length + 240\r\n  \t\t\twhile (l === 255) {\r\n  \t\t\t\tl = input[i++]\r\n  \t\t\t\tliterals_length += l\r\n  \t\t\t}\r\n  \r\n  \t\t\t// Copy the literals\r\n  \t\t\tvar end = i + literals_length\r\n  \t\t\twhile (i < end) output[j++] = input[i++]\r\n  \r\n  \t\t\t// End of buffer?\r\n  \t\t\tif (i === n) return j\r\n  \t\t}\r\n  \r\n  \t\t// Match copy\r\n  \t\t// 2 bytes offset (little endian)\r\n  \t\tvar offset = input[i++] | (input[i++] << 8)\r\n  \r\n  \t\t// XXX 0 is an invalid offset value\r\n  \t\tif (offset === 0) return j\r\n  \t\tif (offset > j) return -(i-2)\r\n  \r\n  \t\t// length of match copy\r\n  \t\tvar match_length = (token & 0xf)\r\n  \t\tvar l = match_length + 240\r\n  \t\twhile (l === 255) {\r\n  \t\t\tl = input[i++]\r\n  \t\t\tmatch_length += l\r\n  \t\t}\r\n  \r\n  \t\t// Copy the match\r\n  \t\tvar pos = j - offset // position of the match copy in the current output\r\n  \t\tvar end = j + match_length + 4 // minmatch = 4\r\n  \t\twhile (j < end) output[j++] = output[pos++]\r\n  \t}\r\n  \r\n  \treturn j\r\n  }\r\n  \r\n  var\r\n  \tmaxInputSize\t= 0x7E000000\r\n  ,\tminMatch\t\t= 4\r\n  // uint32() optimization\r\n  ,\thashLog\t\t\t= 16\r\n  ,\thashShift\t\t= (minMatch * 8) - hashLog\r\n  ,\thashSize\t\t= 1 << hashLog\r\n  \r\n  ,\tcopyLength\t\t= 8\r\n  ,\tlastLiterals\t= 5\r\n  ,\tmfLimit\t\t\t= copyLength + minMatch\r\n  ,\tskipStrength\t= 6\r\n  \r\n  ,\tmlBits  \t\t= 4\r\n  ,\tmlMask  \t\t= (1 << mlBits) - 1\r\n  ,\trunBits \t\t= 8 - mlBits\r\n  ,\trunMask \t\t= (1 << runBits) - 1\r\n  \r\n  ,\thasher \t\t\t= /* XXX uint32( */ 2654435761 /* ) */\r\n  \r\n  assert(hashShift === 16);\r\n  var hashTable = new Int16Array(1<<16);\r\n  var empty = new Int16Array(hashTable.length);\r\n  \r\n  // CompressBound returns the maximum length of a lz4 block, given it's uncompressed length\r\n  exports.compressBound = function (isize) {\r\n  \treturn isize > maxInputSize\r\n  \t\t? 0\r\n  \t\t: (isize + (isize/255) + 16) | 0\r\n  }\r\n  \r\n  /** @param {number=} sIdx\r\n  \t@param {number=} eIdx */\r\n  exports.compress = function (src, dst, sIdx, eIdx) {\r\n  \thashTable.set(empty);\r\n  \treturn compressBlock(src, dst, 0, sIdx || 0, eIdx || dst.length)\r\n  }\r\n  \r\n  function compressBlock (src, dst, pos, sIdx, eIdx) {\r\n  \t// XXX var Hash = uint32() // Reusable unsigned 32 bits integer\r\n  \tvar dpos = sIdx\r\n  \tvar dlen = eIdx - sIdx\r\n  \tvar anchor = 0\r\n  \r\n  \tif (src.length >= maxInputSize) throw new Error(\"input too large\")\r\n  \r\n  \t// Minimum of input bytes for compression (LZ4 specs)\r\n  \tif (src.length > mfLimit) {\r\n  \t\tvar n = exports.compressBound(src.length)\r\n  \t\tif ( dlen < n ) throw Error(\"output too small: \" + dlen + \" < \" + n)\r\n  \r\n  \t\tvar \r\n  \t\t\tstep  = 1\r\n  \t\t,\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \t\t// Keep last few bytes incompressible (LZ4 specs):\r\n  \t\t// last 5 bytes must be literals\r\n  \t\t,\tsrcLength = src.length - mfLimit\r\n  \r\n  \t\twhile (pos + minMatch < srcLength) {\r\n  \t\t\t// Find a match\r\n  \t\t\t// min match of 4 bytes aka sequence\r\n  \t\t\tvar sequenceLowBits = src[pos+1]<<8 | src[pos]\r\n  \t\t\tvar sequenceHighBits = src[pos+3]<<8 | src[pos+2]\r\n  \t\t\t// compute hash for the current sequence\r\n  \t\t\tvar hash = Math.imul(sequenceLowBits | (sequenceHighBits << 16), hasher) >>> hashShift;\r\n  \t\t\t/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)\r\n  \t\t\t\t\t\t\t.multiply(hasher)\r\n  \t\t\t\t\t\t\t.shiftr(hashShift)\r\n  \t\t\t\t\t\t\t.toNumber() */\r\n  \t\t\t// get the position of the sequence matching the hash\r\n  \t\t\t// NB. since 2 different sequences may have the same hash\r\n  \t\t\t// it is double-checked below\r\n  \t\t\t// do -1 to distinguish between initialized and uninitialized values\r\n  \t\t\tvar ref = hashTable[hash] - 1\r\n  \t\t\t// save position of current sequence in hash table\r\n  \t\t\thashTable[hash] = pos + 1\r\n  \r\n  \t\t\t// first reference or within 64k limit or current sequence !== hashed one: no match\r\n  \t\t\tif ( ref < 0 ||\r\n  \t\t\t\t((pos - ref) >>> 16) > 0 ||\r\n  \t\t\t\t(\r\n  \t\t\t\t\t((src[ref+3]<<8 | src[ref+2]) != sequenceHighBits) ||\r\n  \t\t\t\t\t((src[ref+1]<<8 | src[ref]) != sequenceLowBits )\r\n  \t\t\t\t)\r\n  \t\t\t) {\r\n  \t\t\t\t// increase step if nothing found within limit\r\n  \t\t\t\tstep = findMatchAttempts++ >> skipStrength\r\n  \t\t\t\tpos += step\r\n  \t\t\t\tcontinue\r\n  \t\t\t}\r\n  \r\n  \t\t\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \r\n  \t\t\t// got a match\r\n  \t\t\tvar literals_length = pos - anchor\r\n  \t\t\tvar offset = pos - ref\r\n  \r\n  \t\t\t// minMatch already verified\r\n  \t\t\tpos += minMatch\r\n  \t\t\tref += minMatch\r\n  \r\n  \t\t\t// move to the end of the match (>=minMatch)\r\n  \t\t\tvar match_length = pos\r\n  \t\t\twhile (pos < srcLength && src[pos] == src[ref]) {\r\n  \t\t\t\tpos++\r\n  \t\t\t\tref++\r\n  \t\t\t}\r\n  \r\n  \t\t\t// match length\r\n  \t\t\tmatch_length = pos - match_length\r\n  \r\n  \t\t\t// token\r\n  \t\t\tvar token = match_length < mlMask ? match_length : mlMask\r\n  \r\n  \t\t\t// encode literals length\r\n  \t\t\tif (literals_length >= runMask) {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (runMask << mlBits) + token\r\n  \t\t\t\tfor (var len = literals_length - runMask; len > 254; len -= 255) {\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \t\t\t\tdst[dpos++] = len\r\n  \t\t\t} else {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (literals_length << mlBits) + token\r\n  \t\t\t}\r\n  \r\n  \t\t\t// write literals\r\n  \t\t\tfor (var i = 0; i < literals_length; i++) {\r\n  \t\t\t\tdst[dpos++] = src[anchor+i]\r\n  \t\t\t}\r\n  \r\n  \t\t\t// encode offset\r\n  \t\t\tdst[dpos++] = offset\r\n  \t\t\tdst[dpos++] = (offset >> 8)\r\n  \r\n  \t\t\t// encode match length\r\n  \t\t\tif (match_length >= mlMask) {\r\n  \t\t\t\tmatch_length -= mlMask\r\n  \t\t\t\twhile (match_length >= 255) {\r\n  \t\t\t\t\tmatch_length -= 255\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \r\n  \t\t\t\tdst[dpos++] = match_length\r\n  \t\t\t}\r\n  \r\n  \t\t\tanchor = pos\r\n  \t\t}\r\n  \t}\r\n  \r\n  \t// cannot compress input\r\n  \tif (anchor == 0) return 0\r\n  \r\n  \t// Write last literals\r\n  \t// encode literals length\r\n  \tliterals_length = src.length - anchor\r\n  \tif (literals_length >= runMask) {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (runMask << mlBits)\r\n  \t\tfor (var ln = literals_length - runMask; ln > 254; ln -= 255) {\r\n  \t\t\tdst[dpos++] = 255\r\n  \t\t}\r\n  \t\tdst[dpos++] = ln\r\n  \t} else {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (literals_length << mlBits)\r\n  \t}\r\n  \r\n  \t// write literals\r\n  \tpos = anchor\r\n  \twhile (pos < src.length) {\r\n  \t\tdst[dpos++] = src[pos++]\r\n  \t}\r\n  \r\n  \treturn dpos\r\n  }\r\n  \r\n  exports.CHUNK_SIZE = 2048; // musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea\r\n  \r\n  exports.compressPackage = function(data, verify) {\r\n    if (verify) {\r\n      var temp = new Uint8Array(exports.CHUNK_SIZE);\r\n    }\r\n    // compress the data in chunks\r\n    assert(data instanceof ArrayBuffer);\r\n    data = new Uint8Array(data);\r\n    console.log('compressing package of size ' + data.length);\r\n    var compressedChunks = [];\r\n    var successes = [];\r\n    var offset = 0;\r\n    var total = 0;\r\n    while (offset < data.length) {\r\n      var chunk = data.subarray(offset, offset + exports.CHUNK_SIZE);\r\n      //console.log('compress a chunk ' + [offset, total, data.length]);\r\n      offset += exports.CHUNK_SIZE;\r\n      var bound = exports.compressBound(chunk.length);\r\n      var compressed = new Uint8Array(bound);\r\n      var compressedSize = exports.compress(chunk, compressed);\r\n      if (compressedSize > 0) {\r\n        assert(compressedSize <= bound);\r\n        compressed = compressed.subarray(0, compressedSize);\r\n        compressedChunks.push(compressed);\r\n        total += compressedSize;\r\n        successes.push(1);\r\n        if (verify) {\r\n          var back = exports.uncompress(compressed, temp);\r\n          assert(back === chunk.length, [back, chunk.length]);\r\n          for (var i = 0; i < chunk.length; i++) {\r\n            assert(chunk[i] === temp[i]);\r\n          }\r\n        }\r\n      } else {\r\n        assert(compressedSize === 0);\r\n        // failure to compress :(\r\n        compressedChunks.push(chunk);\r\n        total += chunk.length; // last chunk may not be the full exports.CHUNK_SIZE size\r\n        successes.push(0);\r\n      }\r\n    }\r\n    data = null; // XXX null out pack['data'] too?\r\n    var compressedData = {\r\n      'data': new Uint8Array(total + exports.CHUNK_SIZE*2), // store all the compressed data, plus room for two cached decompressed chunk, in one fast array\r\n      'cachedOffset': total,\r\n      'cachedIndexes': [-1, -1], // cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing\r\n      'cachedChunks': [null, null],\r\n      'offsets': [], // chunk# => start in compressed data\r\n      'sizes': [],\r\n      'successes': successes, // 1 if chunk is compressed\r\n    };\r\n    offset = 0;\r\n    for (var i = 0; i < compressedChunks.length; i++) {\r\n      compressedData['data'].set(compressedChunks[i], offset);\r\n      compressedData['offsets'][i] = offset;\r\n      compressedData['sizes'][i] = compressedChunks[i].length\r\n      offset += compressedChunks[i].length;\r\n    }\r\n    console.log('compressed package into ' + [compressedData['data'].length]);\r\n    assert(offset === total);\r\n    return compressedData;\r\n  };\r\n  \r\n  assert(exports.CHUNK_SIZE < (1 << 15)); // we use 16-bit ints as the type of the hash table, chunk size must be smaller\r\n  \r\n  return exports;\r\n  \r\n  })();\r\n  \r\n  ;\r\n          return MiniLZ4;\r\n        })();\r\n        LZ4.CHUNK_SIZE = LZ4.codec.CHUNK_SIZE;\r\n      },loadPackage:function (pack, preloadPlugin) {\r\n        LZ4.init();\r\n        var compressedData = pack['compressedData'];\r\n        if (!compressedData) compressedData = LZ4.codec.compressPackage(pack['data']);\r\n        assert(compressedData['cachedIndexes'].length === compressedData['cachedChunks'].length);\r\n        for (var i = 0; i < compressedData['cachedIndexes'].length; i++) {\r\n          compressedData['cachedIndexes'][i] = -1;\r\n          compressedData['cachedChunks'][i] = compressedData['data'].subarray(compressedData['cachedOffset'] + i*LZ4.CHUNK_SIZE,\r\n                                                                        compressedData['cachedOffset'] + (i+1)*LZ4.CHUNK_SIZE);\r\n          assert(compressedData['cachedChunks'][i].length === LZ4.CHUNK_SIZE);\r\n        }\r\n        pack['metadata'].files.forEach(function(file) {\r\n          var dir = PATH.dirname(file.filename);\r\n          var name = PATH.basename(file.filename);\r\n          FS.createPath('', dir, true, true);\r\n          var parent = FS.analyzePath(dir).object;\r\n          LZ4.createNode(parent, name, LZ4.FILE_MODE, 0, {\r\n            compressedData: compressedData,\r\n            start: file.start,\r\n            end: file.end,\r\n          });\r\n        });\r\n        // Preload files if necessary. This code is largely similar to\r\n        // createPreloadedFile in library_fs.js. However, a main difference here\r\n        // is that we only decompress the file if it can be preloaded.\r\n        // Abstracting out the common parts seems to be more effort than it is\r\n        // worth.\r\n        if (preloadPlugin) {\r\n          Browser.init();\r\n          pack['metadata'].files.forEach(function(file) {\r\n            var handled = false;\r\n            var fullname = file.filename;\r\n            Module['preloadPlugins'].forEach(function(plugin) {\r\n              if (handled) return;\r\n              if (plugin['canHandle'](fullname)) {\r\n                var dep = getUniqueRunDependency('fp ' + fullname);\r\n                addRunDependency(dep);\r\n                var finish = () => removeRunDependency(dep);\r\n                var byteArray = FS.readFile(fullname);\r\n                plugin['handle'](byteArray, fullname, finish, finish);\r\n                handled = true;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      },createNode:function (parent, name, mode, dev, contents, mtime) {\r\n        var node = FS.createNode(parent, name, mode);\r\n        node.mode = mode;\r\n        node.node_ops = LZ4.node_ops;\r\n        node.stream_ops = LZ4.stream_ops;\r\n        node.timestamp = (mtime || new Date).getTime();\r\n        assert(LZ4.FILE_MODE !== LZ4.DIR_MODE);\r\n        if (mode === LZ4.FILE_MODE) {\r\n          node.size = contents.end - contents.start;\r\n          node.contents = contents;\r\n        } else {\r\n          node.size = 4096;\r\n          node.contents = {};\r\n        }\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n        }\r\n        return node;\r\n      },node_ops:{getattr:function(node) {\r\n          return {\r\n            dev: 1,\r\n            ino: node.id,\r\n            mode: node.mode,\r\n            nlink: 1,\r\n            uid: 0,\r\n            gid: 0,\r\n            rdev: undefined,\r\n            size: node.size,\r\n            atime: new Date(node.timestamp),\r\n            mtime: new Date(node.timestamp),\r\n            ctime: new Date(node.timestamp),\r\n            blksize: 4096,\r\n            blocks: Math.ceil(node.size / 4096),\r\n          };\r\n        },setattr:function(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n        },lookup:function(parent, name) {\r\n          throw new FS.ErrnoError(44);\r\n        },mknod:function (parent, name, mode, dev) {\r\n          throw new FS.ErrnoError(63);\r\n        },rename:function (oldNode, newDir, newName) {\r\n          throw new FS.ErrnoError(63);\r\n        },unlink:function(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },rmdir:function(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },readdir:function(node) {\r\n          throw new FS.ErrnoError(63);\r\n        },symlink:function(parent, newName, oldPath) {\r\n          throw new FS.ErrnoError(63);\r\n        }},stream_ops:{read:function (stream, buffer, offset, length, position) {\r\n          //out('LZ4 read ' + [offset, length, position]);\r\n          length = Math.min(length, stream.node.size - position);\r\n          if (length <= 0) return 0;\r\n          var contents = stream.node.contents;\r\n          var compressedData = contents.compressedData;\r\n          var written = 0;\r\n          while (written < length) {\r\n            var start = contents.start + position + written; // start index in uncompressed data\r\n            var desired = length - written;\r\n            //out('current read: ' + ['start', start, 'desired', desired]);\r\n            var chunkIndex = Math.floor(start / LZ4.CHUNK_SIZE);\r\n            var compressedStart = compressedData['offsets'][chunkIndex];\r\n            var compressedSize = compressedData['sizes'][chunkIndex];\r\n            var currChunk;\r\n            if (compressedData['successes'][chunkIndex]) {\r\n              var found = compressedData['cachedIndexes'].indexOf(chunkIndex);\r\n              if (found >= 0) {\r\n                currChunk = compressedData['cachedChunks'][found];\r\n              } else {\r\n                // decompress the chunk\r\n                compressedData['cachedIndexes'].pop();\r\n                compressedData['cachedIndexes'].unshift(chunkIndex);\r\n                currChunk = compressedData['cachedChunks'].pop();\r\n                compressedData['cachedChunks'].unshift(currChunk);\r\n                if (compressedData['debug']) {\r\n                  out('decompressing chunk ' + chunkIndex);\r\n                  Module['decompressedChunks'] = (Module['decompressedChunks'] || 0) + 1;\r\n                }\r\n                var compressed = compressedData['data'].subarray(compressedStart, compressedStart + compressedSize);\r\n                //var t = Date.now();\r\n                var originalSize = LZ4.codec.uncompress(compressed, currChunk);\r\n                //out('decompress time: ' + (Date.now() - t));\r\n                if (chunkIndex < compressedData['successes'].length-1) assert(originalSize === LZ4.CHUNK_SIZE); // all but the last chunk must be full-size\r\n              }\r\n            } else {\r\n              // uncompressed\r\n              currChunk = compressedData['data'].subarray(compressedStart, compressedStart + LZ4.CHUNK_SIZE);\r\n            }\r\n            var startInChunk = start % LZ4.CHUNK_SIZE;\r\n            var endInChunk = Math.min(startInChunk + desired, LZ4.CHUNK_SIZE);\r\n            buffer.set(currChunk.subarray(startInChunk, endInChunk), offset + written);\r\n            var currWritten = endInChunk - startInChunk;\r\n            written += currWritten;\r\n          }\r\n          return written;\r\n        },write:function (stream, buffer, offset, length, position) {\r\n          throw new FS.ErrnoError(29);\r\n        },llseek:function (stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.size;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        }}};\r\n  var FS = {root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path, opts = {}) => {\r\n        path = PATH_FS.resolve(path);\r\n  \r\n        if (!path) return { path: '', node: null };\r\n  \r\n        var defaults = {\r\n          follow_mount: true,\r\n          recurse_count: 0\r\n        };\r\n        opts = Object.assign(defaults, opts)\r\n  \r\n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\r\n          throw new FS.ErrnoError(32);\r\n        }\r\n  \r\n        // split the absolute path\r\n        var parts = path.split('/').filter((p) => !!p);\r\n  \r\n        // start at the root\r\n        var current = FS.root;\r\n        var current_path = '/';\r\n  \r\n        for (var i = 0; i < parts.length; i++) {\r\n          var islast = (i === parts.length-1);\r\n          if (islast && opts.parent) {\r\n            // stop resolving\r\n            break;\r\n          }\r\n  \r\n          current = FS.lookupNode(current, parts[i]);\r\n          current_path = PATH.join2(current_path, parts[i]);\r\n  \r\n          // jump to the mount's root node if this is a mountpoint\r\n          if (FS.isMountpoint(current)) {\r\n            if (!islast || (islast && opts.follow_mount)) {\r\n              current = current.mounted.root;\r\n            }\r\n          }\r\n  \r\n          // by default, lookupPath will not follow a symlink if it is the final path component.\r\n          // setting opts.follow = true will override this behavior.\r\n          if (!islast || opts.follow) {\r\n            var count = 0;\r\n            while (FS.isLink(current.mode)) {\r\n              var link = FS.readlink(current_path);\r\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\r\n  \r\n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\r\n              current = lookup.node;\r\n  \r\n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\r\n                throw new FS.ErrnoError(32);\r\n              }\r\n            }\r\n          }\r\n        }\r\n  \r\n        return { path: current_path, node: current };\r\n      },getPath:(node) => {\r\n        var path;\r\n        while (true) {\r\n          if (FS.isRoot(node)) {\r\n            var mount = node.mount.mountpoint;\r\n            if (!path) return mount;\r\n            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;\r\n          }\r\n          path = path ? node.name + '/' + path : node.name;\r\n          node = node.parent;\r\n        }\r\n      },hashName:(parentid, name) => {\r\n        var hash = 0;\r\n  \r\n        for (var i = 0; i < name.length; i++) {\r\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\r\n        }\r\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\r\n      },hashAddNode:(node) => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        node.name_next = FS.nameTable[hash];\r\n        FS.nameTable[hash] = node;\r\n      },hashRemoveNode:(node) => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        if (FS.nameTable[hash] === node) {\r\n          FS.nameTable[hash] = node.name_next;\r\n        } else {\r\n          var current = FS.nameTable[hash];\r\n          while (current) {\r\n            if (current.name_next === node) {\r\n              current.name_next = node.name_next;\r\n              break;\r\n            }\r\n            current = current.name_next;\r\n          }\r\n        }\r\n      },lookupNode:(parent, name) => {\r\n        var errCode = FS.mayLookup(parent);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode, parent);\r\n        }\r\n        var hash = FS.hashName(parent.id, name);\r\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n          var nodeName = node.name;\r\n          if (node.parent.id === parent.id && nodeName === name) {\r\n            return node;\r\n          }\r\n        }\r\n        // if we failed to find it in the cache, call into the VFS\r\n        return FS.lookup(parent, name);\r\n      },createNode:(parent, name, mode, rdev) => {\r\n        var node = new FS.FSNode(parent, name, mode, rdev);\r\n  \r\n        FS.hashAddNode(node);\r\n  \r\n        return node;\r\n      },destroyNode:(node) => {\r\n        FS.hashRemoveNode(node);\r\n      },isRoot:(node) => {\r\n        return node === node.parent;\r\n      },isMountpoint:(node) => {\r\n        return !!node.mounted;\r\n      },isFile:(mode) => {\r\n        return (mode & 61440) === 32768;\r\n      },isDir:(mode) => {\r\n        return (mode & 61440) === 16384;\r\n      },isLink:(mode) => {\r\n        return (mode & 61440) === 40960;\r\n      },isChrdev:(mode) => {\r\n        return (mode & 61440) === 8192;\r\n      },isBlkdev:(mode) => {\r\n        return (mode & 61440) === 24576;\r\n      },isFIFO:(mode) => {\r\n        return (mode & 61440) === 4096;\r\n      },isSocket:(mode) => {\r\n        return (mode & 49152) === 49152;\r\n      },flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:(str) => {\r\n        var flags = FS.flagModes[str];\r\n        if (typeof flags == 'undefined') {\r\n          throw new Error('Unknown file open mode: ' + str);\r\n        }\r\n        return flags;\r\n      },flagsToPermissionString:(flag) => {\r\n        var perms = ['r', 'w', 'rw'][flag & 3];\r\n        if ((flag & 512)) {\r\n          perms += 'w';\r\n        }\r\n        return perms;\r\n      },nodePermissions:(node, perms) => {\r\n        if (FS.ignorePermissions) {\r\n          return 0;\r\n        }\r\n        // return 0 if any user, group or owner bits are set.\r\n        if (perms.includes('r') && !(node.mode & 292)) {\r\n          return 2;\r\n        } else if (perms.includes('w') && !(node.mode & 146)) {\r\n          return 2;\r\n        } else if (perms.includes('x') && !(node.mode & 73)) {\r\n          return 2;\r\n        }\r\n        return 0;\r\n      },mayLookup:(dir) => {\r\n        var errCode = FS.nodePermissions(dir, 'x');\r\n        if (errCode) return errCode;\r\n        if (!dir.node_ops.lookup) return 2;\r\n        return 0;\r\n      },mayCreate:(dir, name) => {\r\n        try {\r\n          var node = FS.lookupNode(dir, name);\r\n          return 20;\r\n        } catch (e) {\r\n        }\r\n        return FS.nodePermissions(dir, 'wx');\r\n      },mayDelete:(dir, name, isdir) => {\r\n        var node;\r\n        try {\r\n          node = FS.lookupNode(dir, name);\r\n        } catch (e) {\r\n          return e.errno;\r\n        }\r\n        var errCode = FS.nodePermissions(dir, 'wx');\r\n        if (errCode) {\r\n          return errCode;\r\n        }\r\n        if (isdir) {\r\n          if (!FS.isDir(node.mode)) {\r\n            return 54;\r\n          }\r\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n            return 10;\r\n          }\r\n        } else {\r\n          if (FS.isDir(node.mode)) {\r\n            return 31;\r\n          }\r\n        }\r\n        return 0;\r\n      },mayOpen:(node, flags) => {\r\n        if (!node) {\r\n          return 44;\r\n        }\r\n        if (FS.isLink(node.mode)) {\r\n          return 32;\r\n        } else if (FS.isDir(node.mode)) {\r\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\r\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\r\n            return 31;\r\n          }\r\n        }\r\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\r\n      },MAX_OPEN_FDS:4096,nextfd:(fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\r\n        for (var fd = fd_start; fd <= fd_end; fd++) {\r\n          if (!FS.streams[fd]) {\r\n            return fd;\r\n          }\r\n        }\r\n        throw new FS.ErrnoError(33);\r\n      },getStream:(fd) => FS.streams[fd],createStream:(stream, fd_start, fd_end) => {\r\n        if (!FS.FSStream) {\r\n          FS.FSStream = /** @constructor */ function() {\r\n            this.shared = { };\r\n          };\r\n          FS.FSStream.prototype = {};\r\n          Object.defineProperties(FS.FSStream.prototype, {\r\n            object: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.node; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.node = val; }\r\n            },\r\n            isRead: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 2097155) !== 1; }\r\n            },\r\n            isWrite: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 2097155) !== 0; }\r\n            },\r\n            isAppend: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 1024); }\r\n            },\r\n            flags: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.shared.flags; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.shared.flags = val; },\r\n            },\r\n            position : {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.shared.position; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.shared.position = val; },\r\n            },\r\n          });\r\n        }\r\n        // clone it, so we can return an instance of FSStream\r\n        stream = Object.assign(new FS.FSStream(), stream);\r\n        var fd = FS.nextfd(fd_start, fd_end);\r\n        stream.fd = fd;\r\n        FS.streams[fd] = stream;\r\n        return stream;\r\n      },closeStream:(fd) => {\r\n        FS.streams[fd] = null;\r\n      },chrdev_stream_ops:{open:(stream) => {\r\n          var device = FS.getDevice(stream.node.rdev);\r\n          // override node's stream ops with the device's\r\n          stream.stream_ops = device.stream_ops;\r\n          // forward the open call\r\n          if (stream.stream_ops.open) {\r\n            stream.stream_ops.open(stream);\r\n          }\r\n        },llseek:() => {\r\n          throw new FS.ErrnoError(70);\r\n        }},major:(dev) => ((dev) >> 8),minor:(dev) => ((dev) & 0xff),makedev:(ma, mi) => ((ma) << 8 | (mi)),registerDevice:(dev, ops) => {\r\n        FS.devices[dev] = { stream_ops: ops };\r\n      },getDevice:(dev) => FS.devices[dev],getMounts:(mount) => {\r\n        var mounts = [];\r\n        var check = [mount];\r\n  \r\n        while (check.length) {\r\n          var m = check.pop();\r\n  \r\n          mounts.push(m);\r\n  \r\n          check.push.apply(check, m.mounts);\r\n        }\r\n  \r\n        return mounts;\r\n      },syncfs:(populate, callback) => {\r\n        if (typeof populate == 'function') {\r\n          callback = populate;\r\n          populate = false;\r\n        }\r\n  \r\n        FS.syncFSRequests++;\r\n  \r\n        if (FS.syncFSRequests > 1) {\r\n          err('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');\r\n        }\r\n  \r\n        var mounts = FS.getMounts(FS.root.mount);\r\n        var completed = 0;\r\n  \r\n        function doCallback(errCode) {\r\n          FS.syncFSRequests--;\r\n          return callback(errCode);\r\n        }\r\n  \r\n        function done(errCode) {\r\n          if (errCode) {\r\n            if (!done.errored) {\r\n              done.errored = true;\r\n              return doCallback(errCode);\r\n            }\r\n            return;\r\n          }\r\n          if (++completed >= mounts.length) {\r\n            doCallback(null);\r\n          }\r\n        };\r\n  \r\n        // sync all mounts\r\n        mounts.forEach((mount) => {\r\n          if (!mount.type.syncfs) {\r\n            return done(null);\r\n          }\r\n          mount.type.syncfs(mount, populate, done);\r\n        });\r\n      },mount:(type, opts, mountpoint) => {\r\n        var root = mountpoint === '/';\r\n        var pseudo = !mountpoint;\r\n        var node;\r\n  \r\n        if (root && FS.root) {\r\n          throw new FS.ErrnoError(10);\r\n        } else if (!root && !pseudo) {\r\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n          mountpoint = lookup.path;  // use the absolute path\r\n          node = lookup.node;\r\n  \r\n          if (FS.isMountpoint(node)) {\r\n            throw new FS.ErrnoError(10);\r\n          }\r\n  \r\n          if (!FS.isDir(node.mode)) {\r\n            throw new FS.ErrnoError(54);\r\n          }\r\n        }\r\n  \r\n        var mount = {\r\n          type: type,\r\n          opts: opts,\r\n          mountpoint: mountpoint,\r\n          mounts: []\r\n        };\r\n  \r\n        // create a root node for the fs\r\n        var mountRoot = type.mount(mount);\r\n        mountRoot.mount = mount;\r\n        mount.root = mountRoot;\r\n  \r\n        if (root) {\r\n          FS.root = mountRoot;\r\n        } else if (node) {\r\n          // set as a mountpoint\r\n          node.mounted = mount;\r\n  \r\n          // add the new mount to the current mount's children\r\n          if (node.mount) {\r\n            node.mount.mounts.push(mount);\r\n          }\r\n        }\r\n  \r\n        return mountRoot;\r\n      },unmount:(mountpoint) => {\r\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n        if (!FS.isMountpoint(lookup.node)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n  \r\n        // destroy the nodes for this mount, and all its child mounts\r\n        var node = lookup.node;\r\n        var mount = node.mounted;\r\n        var mounts = FS.getMounts(mount);\r\n  \r\n        Object.keys(FS.nameTable).forEach((hash) => {\r\n          var current = FS.nameTable[hash];\r\n  \r\n          while (current) {\r\n            var next = current.name_next;\r\n  \r\n            if (mounts.includes(current.mount)) {\r\n              FS.destroyNode(current);\r\n            }\r\n  \r\n            current = next;\r\n          }\r\n        });\r\n  \r\n        // no longer a mountpoint\r\n        node.mounted = null;\r\n  \r\n        // remove this mount from the child mounts\r\n        var idx = node.mount.mounts.indexOf(mount);\r\n        node.mount.mounts.splice(idx, 1);\r\n      },lookup:(parent, name) => {\r\n        return parent.node_ops.lookup(parent, name);\r\n      },mknod:(path, mode, dev) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        if (!name || name === '.' || name === '..') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.mayCreate(parent, name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.mknod) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.mknod(parent, name, mode, dev);\r\n      },create:(path, mode) => {\r\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\r\n        mode &= 4095;\r\n        mode |= 32768;\r\n        return FS.mknod(path, mode, 0);\r\n      },mkdir:(path, mode) => {\r\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\r\n        mode &= 511 | 512;\r\n        mode |= 16384;\r\n        return FS.mknod(path, mode, 0);\r\n      },mkdirTree:(path, mode) => {\r\n        var dirs = path.split('/');\r\n        var d = '';\r\n        for (var i = 0; i < dirs.length; ++i) {\r\n          if (!dirs[i]) continue;\r\n          d += '/' + dirs[i];\r\n          try {\r\n            FS.mkdir(d, mode);\r\n          } catch(e) {\r\n            if (e.errno != 20) throw e;\r\n          }\r\n        }\r\n      },mkdev:(path, mode, dev) => {\r\n        if (typeof dev == 'undefined') {\r\n          dev = mode;\r\n          mode = 438 /* 0666 */;\r\n        }\r\n        mode |= 8192;\r\n        return FS.mknod(path, mode, dev);\r\n      },symlink:(oldpath, newpath) => {\r\n        if (!PATH_FS.resolve(oldpath)) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var lookup = FS.lookupPath(newpath, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var newname = PATH.basename(newpath);\r\n        var errCode = FS.mayCreate(parent, newname);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.symlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.symlink(parent, newname, oldpath);\r\n      },rename:(old_path, new_path) => {\r\n        var old_dirname = PATH.dirname(old_path);\r\n        var new_dirname = PATH.dirname(new_path);\r\n        var old_name = PATH.basename(old_path);\r\n        var new_name = PATH.basename(new_path);\r\n        // parents must exist\r\n        var lookup, old_dir, new_dir;\r\n  \r\n        // let the errors from non existant directories percolate up\r\n        lookup = FS.lookupPath(old_path, { parent: true });\r\n        old_dir = lookup.node;\r\n        lookup = FS.lookupPath(new_path, { parent: true });\r\n        new_dir = lookup.node;\r\n  \r\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\r\n        // need to be part of the same mount\r\n        if (old_dir.mount !== new_dir.mount) {\r\n          throw new FS.ErrnoError(75);\r\n        }\r\n        // source must exist\r\n        var old_node = FS.lookupNode(old_dir, old_name);\r\n        // old path should not be an ancestor of the new path\r\n        var relative = PATH_FS.relative(old_path, new_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        // new path should not be an ancestor of the old path\r\n        relative = PATH_FS.relative(new_path, old_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(55);\r\n        }\r\n        // see if the new path already exists\r\n        var new_node;\r\n        try {\r\n          new_node = FS.lookupNode(new_dir, new_name);\r\n        } catch (e) {\r\n          // not fatal\r\n        }\r\n        // early out if nothing needs to change\r\n        if (old_node === new_node) {\r\n          return;\r\n        }\r\n        // we'll need to delete the old entry\r\n        var isdir = FS.isDir(old_node.mode);\r\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        // need delete permissions if we'll be overwriting.\r\n        // need create permissions if new doesn't already exist.\r\n        errCode = new_node ?\r\n          FS.mayDelete(new_dir, new_name, isdir) :\r\n          FS.mayCreate(new_dir, new_name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!old_dir.node_ops.rename) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        // if we are going to change the parent, check write permissions\r\n        if (new_dir !== old_dir) {\r\n          errCode = FS.nodePermissions(old_dir, 'w');\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // remove the node from the lookup hash\r\n        FS.hashRemoveNode(old_node);\r\n        // do the underlying fs rename\r\n        try {\r\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          // add the node back to the hash (in case node_ops.rename\r\n          // changed its name)\r\n          FS.hashAddNode(old_node);\r\n        }\r\n      },rmdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, true);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.rmdir) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.rmdir(parent, name);\r\n        FS.destroyNode(node);\r\n      },readdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        if (!node.node_ops.readdir) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        return node.node_ops.readdir(node);\r\n      },unlink:(path) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, false);\r\n        if (errCode) {\r\n          // According to POSIX, we should map EISDIR to EPERM, but\r\n          // we instead do what Linux does (and we must, as we use\r\n          // the musl linux libc).\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.unlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.unlink(parent, name);\r\n        FS.destroyNode(node);\r\n      },readlink:(path) => {\r\n        var lookup = FS.lookupPath(path);\r\n        var link = lookup.node;\r\n        if (!link) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!link.node_ops.readlink) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\r\n      },stat:(path, dontFollow) => {\r\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n        var node = lookup.node;\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!node.node_ops.getattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return node.node_ops.getattr(node);\r\n      },lstat:(path) => {\r\n        return FS.stat(path, true);\r\n      },chmod:(path, mode, dontFollow) => {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          mode: (mode & 4095) | (node.mode & ~4095),\r\n          timestamp: Date.now()\r\n        });\r\n      },lchmod:(path, mode) => {\r\n        FS.chmod(path, mode, true);\r\n      },fchmod:(fd, mode) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        FS.chmod(stream.node, mode);\r\n      },chown:(path, uid, gid, dontFollow) => {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Date.now()\r\n          // we ignore the uid / gid for now\r\n        });\r\n      },lchown:(path, uid, gid) => {\r\n        FS.chown(path, uid, gid, true);\r\n      },fchown:(fd, uid, gid) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        FS.chown(stream.node, uid, gid);\r\n      },truncate:(path, len) => {\r\n        if (len < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: true });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!FS.isFile(node.mode)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.nodePermissions(node, 'w');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          size: len,\r\n          timestamp: Date.now()\r\n        });\r\n      },ftruncate:(fd, len) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        FS.truncate(stream.node, len);\r\n      },utime:(path, atime, mtime) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Math.max(atime, mtime)\r\n        });\r\n      },open:(path, flags, mode) => {\r\n        if (path === \"\") {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\r\n        mode = typeof mode == 'undefined' ? 438 /* 0666 */ : mode;\r\n        if ((flags & 64)) {\r\n          mode = (mode & 4095) | 32768;\r\n        } else {\r\n          mode = 0;\r\n        }\r\n        var node;\r\n        if (typeof path == 'object') {\r\n          node = path;\r\n        } else {\r\n          path = PATH.normalize(path);\r\n          try {\r\n            var lookup = FS.lookupPath(path, {\r\n              follow: !(flags & 131072)\r\n            });\r\n            node = lookup.node;\r\n          } catch (e) {\r\n            // ignore\r\n          }\r\n        }\r\n        // perhaps we need to create the node\r\n        var created = false;\r\n        if ((flags & 64)) {\r\n          if (node) {\r\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\r\n            if ((flags & 128)) {\r\n              throw new FS.ErrnoError(20);\r\n            }\r\n          } else {\r\n            // node doesn't exist, try to create it\r\n            node = FS.mknod(path, mode, 0);\r\n            created = true;\r\n          }\r\n        }\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        // can't truncate a device\r\n        if (FS.isChrdev(node.mode)) {\r\n          flags &= ~512;\r\n        }\r\n        // if asked only for a directory, then this must be one\r\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        // check permissions, if this is not a file we just created now (it is ok to\r\n        // create and write to a file with read-only permissions; it is read-only\r\n        // for later use)\r\n        if (!created) {\r\n          var errCode = FS.mayOpen(node, flags);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // do truncation if necessary\r\n        if ((flags & 512) && !created) {\r\n          FS.truncate(node, 0);\r\n        }\r\n        // we've already handled these, don't pass down to the underlying vfs\r\n        flags &= ~(128 | 512 | 131072);\r\n  \r\n        // register the stream with the filesystem\r\n        var stream = FS.createStream({\r\n          node: node,\r\n          path: FS.getPath(node),  // we want the absolute path to the node\r\n          flags: flags,\r\n          seekable: true,\r\n          position: 0,\r\n          stream_ops: node.stream_ops,\r\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\r\n          ungotten: [],\r\n          error: false\r\n        });\r\n        // call the new stream's open function\r\n        if (stream.stream_ops.open) {\r\n          stream.stream_ops.open(stream);\r\n        }\r\n        if (Module['logReadFiles'] && !(flags & 1)) {\r\n          if (!FS.readFiles) FS.readFiles = {};\r\n          if (!(path in FS.readFiles)) {\r\n            FS.readFiles[path] = 1;\r\n          }\r\n        }\r\n        return stream;\r\n      },close:(stream) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (stream.getdents) stream.getdents = null; // free readdir state\r\n        try {\r\n          if (stream.stream_ops.close) {\r\n            stream.stream_ops.close(stream);\r\n          }\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          FS.closeStream(stream.fd);\r\n        }\r\n        stream.fd = null;\r\n      },isClosed:(stream) => {\r\n        return stream.fd === null;\r\n      },llseek:(stream, offset, whence) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!stream.seekable || !stream.stream_ops.llseek) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        if (whence != 0 && whence != 1 && whence != 2) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n        stream.ungotten = [];\r\n        return stream.position;\r\n      },read:(stream, buffer, offset, length, position) => {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.read) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n        if (!seeking) stream.position += bytesRead;\r\n        return bytesRead;\r\n      },write:(stream, buffer, offset, length, position, canOwn) => {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.write) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (stream.seekable && stream.flags & 1024) {\r\n          // seek to the end before writing in append mode\r\n          FS.llseek(stream, 0, 2);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n        if (!seeking) stream.position += bytesWritten;\r\n        return bytesWritten;\r\n      },allocate:(stream, offset, length) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (offset < 0 || length <= 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (!stream.stream_ops.allocate) {\r\n          throw new FS.ErrnoError(138);\r\n        }\r\n        stream.stream_ops.allocate(stream, offset, length);\r\n      },mmap:(stream, length, position, prot, flags) => {\r\n        // User requests writing to file (prot & PROT_WRITE != 0).\r\n        // Checking if we have permissions to write to the file unless\r\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\r\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\r\n        // as all modifications will be visible only in the memory of\r\n        // the current process.\r\n        if ((prot & 2) !== 0\r\n            && (flags & 2) === 0\r\n            && (stream.flags & 2097155) !== 2) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if (!stream.stream_ops.mmap) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\r\n      },msync:(stream, buffer, offset, length, mmapFlags) => {\r\n        if (!stream.stream_ops.msync) {\r\n          return 0;\r\n        }\r\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\r\n      },munmap:(stream) => 0,ioctl:(stream, cmd, arg) => {\r\n        if (!stream.stream_ops.ioctl) {\r\n          throw new FS.ErrnoError(59);\r\n        }\r\n        return stream.stream_ops.ioctl(stream, cmd, arg);\r\n      },readFile:(path, opts = {}) => {\r\n        opts.flags = opts.flags || 0;\r\n        opts.encoding = opts.encoding || 'binary';\r\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\r\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\r\n        }\r\n        var ret;\r\n        var stream = FS.open(path, opts.flags);\r\n        var stat = FS.stat(path);\r\n        var length = stat.size;\r\n        var buf = new Uint8Array(length);\r\n        FS.read(stream, buf, 0, length, 0);\r\n        if (opts.encoding === 'utf8') {\r\n          ret = UTF8ArrayToString(buf, 0);\r\n        } else if (opts.encoding === 'binary') {\r\n          ret = buf;\r\n        }\r\n        FS.close(stream);\r\n        return ret;\r\n      },writeFile:(path, data, opts = {}) => {\r\n        opts.flags = opts.flags || 577;\r\n        var stream = FS.open(path, opts.flags, opts.mode);\r\n        if (typeof data == 'string') {\r\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\r\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\r\n        } else if (ArrayBuffer.isView(data)) {\r\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\r\n        } else {\r\n          throw new Error('Unsupported data type');\r\n        }\r\n        FS.close(stream);\r\n      },cwd:() => FS.currentPath,chdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        if (lookup.node === null) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!FS.isDir(lookup.node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        var errCode = FS.nodePermissions(lookup.node, 'x');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        FS.currentPath = lookup.path;\r\n      },createDefaultDirectories:() => {\r\n        FS.mkdir('/tmp');\r\n        FS.mkdir('/home');\r\n        FS.mkdir('/home/web_user');\r\n      },createDefaultDevices:() => {\r\n        // create /dev\r\n        FS.mkdir('/dev');\r\n        // setup /dev/null\r\n        FS.registerDevice(FS.makedev(1, 3), {\r\n          read: () => 0,\r\n          write: (stream, buffer, offset, length, pos) => length,\r\n        });\r\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\r\n        // setup /dev/tty and /dev/tty1\r\n        // stderr needs to print output using err() rather than out()\r\n        // so we register a second tty just for it.\r\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\r\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\r\n        // setup /dev/[u]random\r\n        // use a buffer to avoid overhead of individual crypto calls per byte\r\n        var randomBuffer = new Uint8Array(1024), randomLeft = 0;\r\n        var randomByte = () => {\r\n          if (randomLeft === 0) {\r\n            randomLeft = randomFill(randomBuffer).byteLength;\r\n          }\r\n          return randomBuffer[--randomLeft];\r\n        };\r\n        FS.createDevice('/dev', 'random', randomByte);\r\n        FS.createDevice('/dev', 'urandom', randomByte);\r\n        // we're not going to emulate the actual shm device,\r\n        // just create the tmp dirs that reside in it commonly\r\n        FS.mkdir('/dev/shm');\r\n        FS.mkdir('/dev/shm/tmp');\r\n      },createSpecialDirectories:() => {\r\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\r\n        // name of the stream for fd 6 (see test_unistd_ttyname)\r\n        FS.mkdir('/proc');\r\n        var proc_self = FS.mkdir('/proc/self');\r\n        FS.mkdir('/proc/self/fd');\r\n        FS.mount({\r\n          mount: () => {\r\n            var node = FS.createNode(proc_self, 'fd', 16384 | 511 /* 0777 */, 73);\r\n            node.node_ops = {\r\n              lookup: (parent, name) => {\r\n                var fd = +name;\r\n                var stream = FS.getStream(fd);\r\n                if (!stream) throw new FS.ErrnoError(8);\r\n                var ret = {\r\n                  parent: null,\r\n                  mount: { mountpoint: 'fake' },\r\n                  node_ops: { readlink: () => stream.path },\r\n                };\r\n                ret.parent = ret; // make it look like a simple root node\r\n                return ret;\r\n              }\r\n            };\r\n            return node;\r\n          }\r\n        }, {}, '/proc/self/fd');\r\n      },createStandardStreams:() => {\r\n        // TODO deprecate the old functionality of a single\r\n        // input / output callback and that utilizes FS.createDevice\r\n        // and instead require a unique set of stream ops\r\n  \r\n        // by default, we symlink the standard streams to the\r\n        // default tty devices. however, if the standard streams\r\n        // have been overwritten we create a unique device for\r\n        // them instead.\r\n        if (Module['stdin']) {\r\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdin');\r\n        }\r\n        if (Module['stdout']) {\r\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdout');\r\n        }\r\n        if (Module['stderr']) {\r\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\r\n        } else {\r\n          FS.symlink('/dev/tty1', '/dev/stderr');\r\n        }\r\n  \r\n        // open default streams for the stdin, stdout and stderr devices\r\n        var stdin = FS.open('/dev/stdin', 0);\r\n        var stdout = FS.open('/dev/stdout', 1);\r\n        var stderr = FS.open('/dev/stderr', 1);\r\n      },ensureErrnoError:() => {\r\n        if (FS.ErrnoError) return;\r\n        FS.ErrnoError = /** @this{Object} */ function ErrnoError(errno, node) {\r\n          // We set the `name` property to be able to identify `FS.ErrnoError`\r\n          // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\r\n          // - when using PROXYFS, an error can come from an underlying FS\r\n          // as different FS objects have their own FS.ErrnoError each,\r\n          // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\r\n          // we'll use the reliable test `err.name == \"ErrnoError\"` instead\r\n          this.name = 'ErrnoError';\r\n          this.node = node;\r\n          this.setErrno = /** @this{Object} */ function(errno) {\r\n            this.errno = errno;\r\n          };\r\n          this.setErrno(errno);\r\n          this.message = 'FS error';\r\n  \r\n        };\r\n        FS.ErrnoError.prototype = new Error();\r\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\r\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\r\n        [44].forEach((code) => {\r\n          FS.genericErrors[code] = new FS.ErrnoError(code);\r\n          FS.genericErrors[code].stack = '<generic error, no stack>';\r\n        });\r\n      },staticInit:() => {\r\n        FS.ensureErrnoError();\r\n  \r\n        FS.nameTable = new Array(4096);\r\n  \r\n        FS.mount(MEMFS, {}, '/');\r\n  \r\n        FS.createDefaultDirectories();\r\n        FS.createDefaultDevices();\r\n        FS.createSpecialDirectories();\r\n  \r\n        FS.filesystems = {\r\n          'MEMFS': MEMFS,\r\n          'IDBFS': IDBFS,\r\n        };\r\n      },init:(input, output, error) => {\r\n        FS.init.initialized = true;\r\n  \r\n        FS.ensureErrnoError();\r\n  \r\n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\r\n        Module['stdin'] = input || Module['stdin'];\r\n        Module['stdout'] = output || Module['stdout'];\r\n        Module['stderr'] = error || Module['stderr'];\r\n  \r\n        FS.createStandardStreams();\r\n      },quit:() => {\r\n        FS.init.initialized = false;\r\n        // force-flush all streams, so we get musl std streams printed out\r\n        // close all of our streams\r\n        for (var i = 0; i < FS.streams.length; i++) {\r\n          var stream = FS.streams[i];\r\n          if (!stream) {\r\n            continue;\r\n          }\r\n          FS.close(stream);\r\n        }\r\n      },getMode:(canRead, canWrite) => {\r\n        var mode = 0;\r\n        if (canRead) mode |= 292 | 73;\r\n        if (canWrite) mode |= 146;\r\n        return mode;\r\n      },findObject:(path, dontResolveLastLink) => {\r\n        var ret = FS.analyzePath(path, dontResolveLastLink);\r\n        if (!ret.exists) {\r\n          return null;\r\n        }\r\n        return ret.object;\r\n      },analyzePath:(path, dontResolveLastLink) => {\r\n        // operate from within the context of the symlink's target\r\n        try {\r\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          path = lookup.path;\r\n        } catch (e) {\r\n        }\r\n        var ret = {\r\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\r\n          parentExists: false, parentPath: null, parentObject: null\r\n        };\r\n        try {\r\n          var lookup = FS.lookupPath(path, { parent: true });\r\n          ret.parentExists = true;\r\n          ret.parentPath = lookup.path;\r\n          ret.parentObject = lookup.node;\r\n          ret.name = PATH.basename(path);\r\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          ret.exists = true;\r\n          ret.path = lookup.path;\r\n          ret.object = lookup.node;\r\n          ret.name = lookup.node.name;\r\n          ret.isRoot = lookup.path === '/';\r\n        } catch (e) {\r\n          ret.error = e.errno;\r\n        };\r\n        return ret;\r\n      },createPath:(parent, path, canRead, canWrite) => {\r\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n        var parts = path.split('/').reverse();\r\n        while (parts.length) {\r\n          var part = parts.pop();\r\n          if (!part) continue;\r\n          var current = PATH.join2(parent, part);\r\n          try {\r\n            FS.mkdir(current);\r\n          } catch (e) {\r\n            // ignore EEXIST\r\n          }\r\n          parent = current;\r\n        }\r\n        return current;\r\n      },createFile:(parent, name, properties, canRead, canWrite) => {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS.getMode(canRead, canWrite);\r\n        return FS.create(path, mode);\r\n      },createDataFile:(parent, name, data, canRead, canWrite, canOwn) => {\r\n        var path = name;\r\n        if (parent) {\r\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n          path = name ? PATH.join2(parent, name) : parent;\r\n        }\r\n        var mode = FS.getMode(canRead, canWrite);\r\n        var node = FS.create(path, mode);\r\n        if (data) {\r\n          if (typeof data == 'string') {\r\n            var arr = new Array(data.length);\r\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n            data = arr;\r\n          }\r\n          // make sure we can write to the file\r\n          FS.chmod(node, mode | 146);\r\n          var stream = FS.open(node, 577);\r\n          FS.write(stream, data, 0, data.length, 0, canOwn);\r\n          FS.close(stream);\r\n          FS.chmod(node, mode);\r\n        }\r\n        return node;\r\n      },createDevice:(parent, name, input, output) => {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS.getMode(!!input, !!output);\r\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\r\n        var dev = FS.makedev(FS.createDevice.major++, 0);\r\n        // Create a fake device that a set of stream ops to emulate\r\n        // the old behavior.\r\n        FS.registerDevice(dev, {\r\n          open: (stream) => {\r\n            stream.seekable = false;\r\n          },\r\n          close: (stream) => {\r\n            // flush any pending line data\r\n            if (output && output.buffer && output.buffer.length) {\r\n              output(10);\r\n            }\r\n          },\r\n          read: (stream, buffer, offset, length, pos /* ignored */) => {\r\n            var bytesRead = 0;\r\n            for (var i = 0; i < length; i++) {\r\n              var result;\r\n              try {\r\n                result = input();\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n              if (result === undefined && bytesRead === 0) {\r\n                throw new FS.ErrnoError(6);\r\n              }\r\n              if (result === null || result === undefined) break;\r\n              bytesRead++;\r\n              buffer[offset+i] = result;\r\n            }\r\n            if (bytesRead) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return bytesRead;\r\n          },\r\n          write: (stream, buffer, offset, length, pos) => {\r\n            for (var i = 0; i < length; i++) {\r\n              try {\r\n                output(buffer[offset+i]);\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n            }\r\n            if (length) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return i;\r\n          }\r\n        });\r\n        return FS.mkdev(path, mode, dev);\r\n      },forceLoadFile:(obj) => {\r\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\r\n        } else if (read_) {\r\n          // Command-line.\r\n          try {\r\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\r\n            //          read() will try to parse UTF8.\r\n            obj.contents = intArrayFromString(read_(obj.url), true);\r\n            obj.usedBytes = obj.contents.length;\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n        } else {\r\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\r\n        }\r\n      },createLazyFile:(parent, name, url, canRead, canWrite) => {\r\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\r\n        /** @constructor */\r\n        function LazyUint8Array() {\r\n          this.lengthKnown = false;\r\n          this.chunks = []; // Loaded chunks. Index is the chunk number\r\n        }\r\n        LazyUint8Array.prototype.get = /** @this{Object} */ function LazyUint8Array_get(idx) {\r\n          if (idx > this.length-1 || idx < 0) {\r\n            return undefined;\r\n          }\r\n          var chunkOffset = idx % this.chunkSize;\r\n          var chunkNum = (idx / this.chunkSize)|0;\r\n          return this.getter(chunkNum)[chunkOffset];\r\n        };\r\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\r\n          this.getter = getter;\r\n        };\r\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\r\n          // Find length\r\n          var xhr = new XMLHttpRequest();\r\n          xhr.open('HEAD', url, false);\r\n          xhr.send(null);\r\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n          var header;\r\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n  \r\n          var chunkSize = 1024*1024; // Chunk size in bytes\r\n  \r\n          if (!hasByteServing) chunkSize = datalength;\r\n  \r\n          // Function to get a range from the remote URL.\r\n          var doXHR = (from, to) => {\r\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n  \r\n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url, false);\r\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n  \r\n            // Some hints to the browser that we want binary data.\r\n            xhr.responseType = 'arraybuffer';\r\n            if (xhr.overrideMimeType) {\r\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\r\n            }\r\n  \r\n            xhr.send(null);\r\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n            if (xhr.response !== undefined) {\r\n              return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\r\n            }\r\n            return intArrayFromString(xhr.responseText || '', true);\r\n          };\r\n          var lazyArray = this;\r\n          lazyArray.setDataGetter((chunkNum) => {\r\n            var start = chunkNum * chunkSize;\r\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\r\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\r\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\r\n            }\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\r\n            return lazyArray.chunks[chunkNum];\r\n          });\r\n  \r\n          if (usesGzip || !datalength) {\r\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\r\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\r\n            datalength = this.getter(0).length;\r\n            chunkSize = datalength;\r\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\r\n          }\r\n  \r\n          this._length = datalength;\r\n          this._chunkSize = chunkSize;\r\n          this.lengthKnown = true;\r\n        };\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\r\n          var lazyArray = new LazyUint8Array();\r\n          Object.defineProperties(lazyArray, {\r\n            length: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._length;\r\n              }\r\n            },\r\n            chunkSize: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._chunkSize;\r\n              }\r\n            }\r\n          });\r\n  \r\n          var properties = { isDevice: false, contents: lazyArray };\r\n        } else {\r\n          var properties = { isDevice: false, url: url };\r\n        }\r\n  \r\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n        // This is a total hack, but I want to get this lazy file code out of the\r\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\r\n        // be its own thin LAZYFS proxying calls to MEMFS.\r\n        if (properties.contents) {\r\n          node.contents = properties.contents;\r\n        } else if (properties.url) {\r\n          node.contents = null;\r\n          node.url = properties.url;\r\n        }\r\n        // Add a function that defers querying the file size until it is asked the first time.\r\n        Object.defineProperties(node, {\r\n          usedBytes: {\r\n            get: /** @this {FSNode} */ function() { return this.contents.length; }\r\n          }\r\n        });\r\n        // override each stream op with one that tries to force load the lazy file first\r\n        var stream_ops = {};\r\n        var keys = Object.keys(node.stream_ops);\r\n        keys.forEach((key) => {\r\n          var fn = node.stream_ops[key];\r\n          stream_ops[key] = function forceLoadLazyFile() {\r\n            FS.forceLoadFile(node);\r\n            return fn.apply(null, arguments);\r\n          };\r\n        });\r\n        function writeChunks(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= contents.length)\r\n            return 0;\r\n          var size = Math.min(contents.length - position, length);\r\n          if (contents.slice) { // normal array\r\n            for (var i = 0; i < size; i++) {\r\n              buffer[offset + i] = contents[position + i];\r\n            }\r\n          } else {\r\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\r\n              buffer[offset + i] = contents.get(position + i);\r\n            }\r\n          }\r\n          return size;\r\n        }\r\n        // use a custom read function\r\n        stream_ops.read = (stream, buffer, offset, length, position) => {\r\n          FS.forceLoadFile(node);\r\n          return writeChunks(stream, buffer, offset, length, position)\r\n        };\r\n        // use a custom mmap function\r\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\r\n          FS.forceLoadFile(node);\r\n          var ptr = mmapAlloc(length);\r\n          if (!ptr) {\r\n            throw new FS.ErrnoError(48);\r\n          }\r\n          writeChunks(stream, HEAP8, ptr, length, position);\r\n          return { ptr: ptr, allocated: true };\r\n        };\r\n        node.stream_ops = stream_ops;\r\n        return node;\r\n      },createPreloadedFile:(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\r\n        // TODO we should allow people to just pass in a complete filename instead\r\n        // of parent and name being that we just join them anyways\r\n        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\r\n        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname\r\n        function processData(byteArray) {\r\n          function finish(byteArray) {\r\n            if (preFinish) preFinish();\r\n            if (!dontCreateFile) {\r\n              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\r\n            }\r\n            if (onload) onload();\r\n            removeRunDependency(dep);\r\n          }\r\n          if (Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\r\n            if (onerror) onerror();\r\n            removeRunDependency(dep);\r\n          })) {\r\n            return;\r\n          }\r\n          finish(byteArray);\r\n        }\r\n        addRunDependency(dep);\r\n        if (typeof url == 'string') {\r\n          asyncLoad(url, (byteArray) => processData(byteArray), onerror);\r\n        } else {\r\n          processData(url);\r\n        }\r\n      }};\r\n  \r\n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\r\n  \r\n    /**\r\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\r\n     * array that contains uint8 values, returns a copy of that string as a\r\n     * Javascript String object.\r\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\r\n     * @param {number} idx\r\n     * @param {number=} maxBytesToRead\r\n     * @return {string}\r\n     */\r\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\r\n      var endIdx = idx + maxBytesToRead;\r\n      var endPtr = idx;\r\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\r\n      // null terminator by itself.  Also, use the length info to avoid running tiny\r\n      // strings through TextDecoder, since .subarray() allocates garbage.\r\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\r\n      // so that undefined means Infinity)\r\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n  \r\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\r\n      }\r\n      var str = '';\r\n      // If building with TextDecoder, we have already computed the string length\r\n      // above, so test loop end condition against that\r\n      while (idx < endPtr) {\r\n        // For UTF8 byte structure, see:\r\n        // http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // https://www.ietf.org/rfc/rfc2279.txt\r\n        // https://tools.ietf.org/html/rfc3629\r\n        var u0 = heapOrArray[idx++];\r\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\r\n        var u1 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\r\n        var u2 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xF0) == 0xE0) {\r\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n        } else {\r\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\r\n        }\r\n  \r\n        if (u0 < 0x10000) {\r\n          str += String.fromCharCode(u0);\r\n        } else {\r\n          var ch = u0 - 0x10000;\r\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n        }\r\n      }\r\n      return str;\r\n    }\r\n  \r\n  \r\n    /**\r\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\r\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\r\n     *\r\n     * @param {number} ptr\r\n     * @param {number=} maxBytesToRead - An optional length that specifies the\r\n     *   maximum number of bytes to read. You can omit this parameter to scan the\r\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\r\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\r\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\r\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\r\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\r\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\r\n     * @return {string}\r\n     */\r\n  function UTF8ToString(ptr, maxBytesToRead) {\r\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\r\n    }\r\n  var SYSCALLS = {DEFAULT_POLLMASK:5,calculateAt:function(dirfd, path, allowEmpty) {\r\n        if (PATH.isAbs(path)) {\r\n          return path;\r\n        }\r\n        // relative path\r\n        var dir;\r\n        if (dirfd === -100) {\r\n          dir = FS.cwd();\r\n        } else {\r\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\r\n          dir = dirstream.path;\r\n        }\r\n        if (path.length == 0) {\r\n          if (!allowEmpty) {\r\n            throw new FS.ErrnoError(44);;\r\n          }\r\n          return dir;\r\n        }\r\n        return PATH.join2(dir, path);\r\n      },doStat:function(func, path, buf) {\r\n        try {\r\n          var stat = func(path);\r\n        } catch (e) {\r\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\r\n            // an error occurred while trying to look up the path; we should just report ENOTDIR\r\n            return -54;\r\n          }\r\n          throw e;\r\n        }\r\n        HEAP32[((buf)>>2)] = stat.dev;\r\n        HEAP32[(((buf)+(8))>>2)] = stat.ino;\r\n        HEAP32[(((buf)+(12))>>2)] = stat.mode;\r\n        HEAPU32[(((buf)+(16))>>2)] = stat.nlink;\r\n        HEAP32[(((buf)+(20))>>2)] = stat.uid;\r\n        HEAP32[(((buf)+(24))>>2)] = stat.gid;\r\n        HEAP32[(((buf)+(28))>>2)] = stat.rdev;\r\n        (tempI64 = [stat.size>>>0,(tempDouble=stat.size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(40))>>2)] = tempI64[0],HEAP32[(((buf)+(44))>>2)] = tempI64[1]);\r\n        HEAP32[(((buf)+(48))>>2)] = 4096;\r\n        HEAP32[(((buf)+(52))>>2)] = stat.blocks;\r\n        var atime = stat.atime.getTime();\r\n        var mtime = stat.mtime.getTime();\r\n        var ctime = stat.ctime.getTime();\r\n        (tempI64 = [Math.floor(atime / 1000)>>>0,(tempDouble=Math.floor(atime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(56))>>2)] = tempI64[0],HEAP32[(((buf)+(60))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(64))>>2)] = (atime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(mtime / 1000)>>>0,(tempDouble=Math.floor(mtime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(72))>>2)] = tempI64[0],HEAP32[(((buf)+(76))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(80))>>2)] = (mtime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(ctime / 1000)>>>0,(tempDouble=Math.floor(ctime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(88))>>2)] = tempI64[0],HEAP32[(((buf)+(92))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(96))>>2)] = (ctime % 1000) * 1000;\r\n        (tempI64 = [stat.ino>>>0,(tempDouble=stat.ino,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(104))>>2)] = tempI64[0],HEAP32[(((buf)+(108))>>2)] = tempI64[1]);\r\n        return 0;\r\n      },doMsync:function(addr, stream, len, flags, offset) {\r\n        if (!FS.isFile(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (flags & 2) {\r\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\r\n          return 0;\r\n        }\r\n        var buffer = HEAPU8.slice(addr, addr + len);\r\n        FS.msync(stream, buffer, offset, len, flags);\r\n      },varargs:undefined,get:function() {\r\n        SYSCALLS.varargs += 4;\r\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\r\n        return ret;\r\n      },getStr:function(ptr) {\r\n        var ret = UTF8ToString(ptr);\r\n        return ret;\r\n      },getStreamFromFD:function(fd) {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) throw new FS.ErrnoError(8);\r\n        return stream;\r\n      }};\r\n  function ___syscall_chmod(path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.chmod(path, mode);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fchmod(fd, mode) {\r\n  try {\r\n  \r\n      FS.fchmod(fd, mode);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function setErrNo(value) {\r\n      HEAP32[((___errno_location())>>2)] = value;\r\n      return value;\r\n    }\r\n  \r\n  function ___syscall_fcntl64(fd, cmd, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (cmd) {\r\n        case 0: {\r\n          var arg = SYSCALLS.get();\r\n          if (arg < 0) {\r\n            return -28;\r\n          }\r\n          var newStream;\r\n          newStream = FS.createStream(stream, arg);\r\n          return newStream.fd;\r\n        }\r\n        case 1:\r\n        case 2:\r\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\r\n        case 3:\r\n          return stream.flags;\r\n        case 4: {\r\n          var arg = SYSCALLS.get();\r\n          stream.flags |= arg;\r\n          return 0;\r\n        }\r\n        case 5:\r\n        /* case 5: Currently in musl F_GETLK64 has same value as F_GETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */ {\r\n          \r\n          var arg = SYSCALLS.get();\r\n          var offset = 0;\r\n          // We're always unlocked.\r\n          HEAP16[(((arg)+(offset))>>1)] = 2;\r\n          return 0;\r\n        }\r\n        case 6:\r\n        case 7:\r\n        /* case 6: Currently in musl F_SETLK64 has same value as F_SETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\r\n        /* case 7: Currently in musl F_SETLKW64 has same value as F_SETLKW, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\r\n          \r\n          \r\n          return 0; // Pretend that the locking is successful.\r\n        case 16:\r\n        case 8:\r\n          return -28; // These are for sockets. We don't have them fully implemented yet.\r\n        case 9:\r\n          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fcntl() returns that, and we set errno ourselves.\r\n          setErrNo(28);\r\n          return -1;\r\n        default: {\r\n          return -28;\r\n        }\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fstat64(fd, buf) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      return SYSCALLS.doStat(FS.stat, stream.path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function convertI32PairToI53Checked(lo, hi) {\r\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  function ___syscall_ftruncate64(fd, length_low, length_high) {\r\n  try {\r\n  \r\n      var length = convertI32PairToI53Checked(length_low, length_high); if (isNaN(length)) return -61;\r\n      FS.ftruncate(fd, length);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n      return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\r\n    }\r\n  \r\n  function ___syscall_getcwd(buf, size) {\r\n  try {\r\n  \r\n      if (size === 0) return -28;\r\n      var cwd = FS.cwd();\r\n      var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\r\n      if (size < cwdLengthInBytes) return -68;\r\n      stringToUTF8(cwd, buf, size);\r\n      return cwdLengthInBytes;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function ___syscall_getdents64(fd, dirp, count) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd)\r\n      if (!stream.getdents) {\r\n        stream.getdents = FS.readdir(stream.path);\r\n      }\r\n  \r\n      var struct_size = 280;\r\n      var pos = 0;\r\n      var off = FS.llseek(stream, 0, 1);\r\n  \r\n      var idx = Math.floor(off / struct_size);\r\n  \r\n      while (idx < stream.getdents.length && pos + struct_size <= count) {\r\n        var id;\r\n        var type;\r\n        var name = stream.getdents[idx];\r\n        if (name === '.') {\r\n          id = stream.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else if (name === '..') {\r\n          var lookup = FS.lookupPath(stream.path, { parent: true });\r\n          id = lookup.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else {\r\n          var child = FS.lookupNode(stream.node, name);\r\n          id = child.id;\r\n          type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.\r\n                 FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.\r\n                 FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.\r\n                 8;                             // DT_REG, regular file.\r\n        }\r\n        (tempI64 = [id>>>0,(tempDouble=id,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((dirp + pos)>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(4))>>2)] = tempI64[1]);\r\n        (tempI64 = [(idx + 1) * struct_size>>>0,(tempDouble=(idx + 1) * struct_size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((dirp + pos)+(8))>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(12))>>2)] = tempI64[1]);\r\n        HEAP16[(((dirp + pos)+(16))>>1)] = 280;\r\n        HEAP8[(((dirp + pos)+(18))>>0)] = type;\r\n        stringToUTF8(name, dirp + pos + 19, 256);\r\n        pos += struct_size;\r\n        idx += 1;\r\n      }\r\n      FS.llseek(stream, idx * struct_size, 0);\r\n      return pos;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_ioctl(fd, op, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (op) {\r\n        case 21509:\r\n        case 21505: {\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21510:\r\n        case 21511:\r\n        case 21512:\r\n        case 21506:\r\n        case 21507:\r\n        case 21508: {\r\n          if (!stream.tty) return -59;\r\n          return 0; // no-op, not actually adjusting terminal settings\r\n        }\r\n        case 21519: {\r\n          if (!stream.tty) return -59;\r\n          var argp = SYSCALLS.get();\r\n          HEAP32[((argp)>>2)] = 0;\r\n          return 0;\r\n        }\r\n        case 21520: {\r\n          if (!stream.tty) return -59;\r\n          return -28; // not supported\r\n        }\r\n        case 21531: {\r\n          var argp = SYSCALLS.get();\r\n          return FS.ioctl(stream, op, argp);\r\n        }\r\n        case 21523: {\r\n          // TODO: in theory we should write to the winsize struct that gets\r\n          // passed in, but for now musl doesn't read anything on it\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21524: {\r\n          // TODO: technically, this ioctl call should change the window size.\r\n          // but, since emscripten doesn't have any concept of a terminal window\r\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        default: return -28; // not supported\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_lstat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.lstat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_mkdirat(dirfd, path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      // remove a trailing slash, if one - /a/b/ has basename of '', but\r\n      // we want to create b in the context of this function\r\n      path = PATH.normalize(path);\r\n      if (path[path.length-1] === '/') path = path.substr(0, path.length-1);\r\n      FS.mkdir(path, mode, 0);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_newfstatat(dirfd, path, buf, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      var nofollow = flags & 256;\r\n      var allowEmpty = flags & 4096;\r\n      flags = flags & (~6400);\r\n      path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\r\n      return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_openat(dirfd, path, flags, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      var mode = varargs ? SYSCALLS.get() : 0;\r\n      return FS.open(path, flags, mode).fd;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_rmdir(path) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.rmdir(path);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_stat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_unlinkat(dirfd, path, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      if (flags === 0) {\r\n        FS.unlink(path);\r\n      } else if (flags === 512) {\r\n        FS.rmdir(path);\r\n      } else {\r\n        abort('Invalid flags passed to unlinkat');\r\n      }\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  var nowIsMonotonic = true;;\r\n  function __emscripten_get_now_is_monotonic() {\r\n      return nowIsMonotonic;\r\n    }\r\n\r\n  function readI53FromI64(ptr) {\r\n      return HEAPU32[ptr>>2] + HEAP32[ptr+4>>2] * 4294967296;\r\n    }\r\n  \r\n  function isLeapYear(year) {\r\n        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);\r\n    }\r\n  \r\n  var MONTH_DAYS_LEAP_CUMULATIVE = [0,31,60,91,121,152,182,213,244,274,305,335];\r\n  \r\n  var MONTH_DAYS_REGULAR_CUMULATIVE = [0,31,59,90,120,151,181,212,243,273,304,334];\r\n  function ydayFromDate(date) {\r\n      var leap = isLeapYear(date.getFullYear());\r\n      var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\r\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1; // -1 since it's days since Jan 1\r\n  \r\n      return yday;\r\n    }\r\n  function __localtime_js(time, tmPtr) {\r\n      var date = new Date(readI53FromI64(time)*1000);\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getFullYear()-1900;\r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n  \r\n      var yday = ydayFromDate(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      HEAP32[(((tmPtr)+(36))>>2)] = -(date.getTimezoneOffset() * 60);\r\n  \r\n      // Attention: DST is in December in South, and some regions don't have DST at all.\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\r\n      HEAP32[(((tmPtr)+(32))>>2)] = dst;\r\n    }\r\n\r\n  function __mktime_js(tmPtr) {\r\n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\r\n                          HEAP32[(((tmPtr)+(16))>>2)],\r\n                          HEAP32[(((tmPtr)+(12))>>2)],\r\n                          HEAP32[(((tmPtr)+(8))>>2)],\r\n                          HEAP32[(((tmPtr)+(4))>>2)],\r\n                          HEAP32[((tmPtr)>>2)],\r\n                          0);\r\n  \r\n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\r\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\r\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\r\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\r\n      var guessedOffset = date.getTimezoneOffset();\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\r\n      if (dst < 0) {\r\n        // Attention: some regions don't have DST at all.\r\n        HEAP32[(((tmPtr)+(32))>>2)] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\r\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\r\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\r\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\r\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\r\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\r\n      }\r\n  \r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n      var yday = ydayFromDate(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      // To match expected behavior, update fields from date\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getYear();\r\n  \r\n      return (date.getTime() / 1000)|0;\r\n    }\r\n\r\n  \r\n  \r\n  function stringToNewUTF8(str) {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = _malloc(size);\r\n      if (ret) stringToUTF8(str, ret, size);\r\n      return ret;\r\n    }\r\n  function __tzset_js(timezone, daylight, tzname) {\r\n      // TODO: Use (malleable) environment variables instead of system settings.\r\n      var currentYear = new Date().getFullYear();\r\n      var winter = new Date(currentYear, 0, 1);\r\n      var summer = new Date(currentYear, 6, 1);\r\n      var winterOffset = winter.getTimezoneOffset();\r\n      var summerOffset = summer.getTimezoneOffset();\r\n  \r\n      // Local standard timezone offset. Local standard time is not adjusted for daylight savings.\r\n      // This code uses the fact that getTimezoneOffset returns a greater value during Standard Time versus Daylight Saving Time (DST).\r\n      // Thus it determines the expected output during Standard Time, and it compares whether the output of the given date the same (Standard) or less (DST).\r\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\r\n  \r\n      // timezone is specified as seconds west of UTC (\"The external variable\r\n      // `timezone` shall be set to the difference, in seconds, between\r\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\r\n      // as returned by stdTimezoneOffset.\r\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\r\n      HEAPU32[((timezone)>>2)] = stdTimezoneOffset * 60;\r\n  \r\n      HEAP32[((daylight)>>2)] = Number(winterOffset != summerOffset);\r\n  \r\n      function extractZone(date) {\r\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\r\n        return match ? match[1] : \"GMT\";\r\n      };\r\n      var winterName = extractZone(winter);\r\n      var summerName = extractZone(summer);\r\n      var winterNamePtr = stringToNewUTF8(winterName);\r\n      var summerNamePtr = stringToNewUTF8(summerName);\r\n      if (summerOffset < winterOffset) {\r\n        // Northern hemisphere\r\n        HEAPU32[((tzname)>>2)] = winterNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = summerNamePtr;\r\n      } else {\r\n        HEAPU32[((tzname)>>2)] = summerNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = winterNamePtr;\r\n      }\r\n    }\r\n\r\n  function _abort() {\r\n      abort('');\r\n    }\r\n\r\n  function _emscripten_set_main_loop_timing(mode, value) {\r\n      Browser.mainLoop.timingMode = mode;\r\n      Browser.mainLoop.timingValue = value;\r\n  \r\n      if (!Browser.mainLoop.func) {\r\n        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.\r\n      }\r\n  \r\n      if (!Browser.mainLoop.running) {\r\n        \r\n        Browser.mainLoop.running = true;\r\n      }\r\n      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {\r\n          var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now())|0;\r\n          setTimeout(Browser.mainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop\r\n        };\r\n        Browser.mainLoop.method = 'timeout';\r\n      } else if (mode == 1 /*EM_TIMING_RAF*/) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {\r\n          Browser.requestAnimationFrame(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'rAF';\r\n      } else if (mode == 2 /*EM_TIMING_SETIMMEDIATE*/) {\r\n        if (typeof setImmediate == 'undefined') {\r\n          // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)\r\n          var setImmediates = [];\r\n          var emscriptenMainLoopMessageId = 'setimmediate';\r\n          /** @param {Event} event */\r\n          var Browser_setImmediate_messageHandler = (event) => {\r\n            // When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,\r\n            // so check for both cases.\r\n            if (event.data === emscriptenMainLoopMessageId || event.data.target === emscriptenMainLoopMessageId) {\r\n              event.stopPropagation();\r\n              setImmediates.shift()();\r\n            }\r\n          };\r\n          addEventListener(\"message\", Browser_setImmediate_messageHandler, true);\r\n          setImmediate = /** @type{function(function(): ?, ...?): number} */(function Browser_emulated_setImmediate(func) {\r\n            setImmediates.push(func);\r\n            if (ENVIRONMENT_IS_WORKER) {\r\n              if (Module['setImmediates'] === undefined) Module['setImmediates'] = [];\r\n              Module['setImmediates'].push(func);\r\n              postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js\r\n            } else postMessage(emscriptenMainLoopMessageId, \"*\"); // On the main thread, can just send the message to itself.\r\n          })\r\n        }\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {\r\n          setImmediate(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'immediate';\r\n      }\r\n      return 0;\r\n    }\r\n  \r\n  var _emscripten_get_now;_emscripten_get_now = () => performance.now();\r\n  ;\r\n  \r\n  \r\n    /**\r\n     * @param {number=} arg\r\n     * @param {boolean=} noSetTiming\r\n     */\r\n  function setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop, arg, noSetTiming) {\r\n      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');\r\n  \r\n      Browser.mainLoop.func = browserIterationFunc;\r\n      Browser.mainLoop.arg = arg;\r\n  \r\n      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;\r\n      function checkIsRunning() {\r\n        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) {\r\n          \r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n  \r\n      // We create the loop runner here but it is not actually running until\r\n      // _emscripten_set_main_loop_timing is called (which might happen a\r\n      // later time).  This member signifies that the current runner has not\r\n      // yet been started so that we can call runtimeKeepalivePush when it\r\n      // gets it timing set for the first time.\r\n      Browser.mainLoop.running = false;\r\n      Browser.mainLoop.runner = function Browser_mainLoop_runner() {\r\n        if (ABORT) return;\r\n        if (Browser.mainLoop.queue.length > 0) {\r\n          var start = Date.now();\r\n          var blocker = Browser.mainLoop.queue.shift();\r\n          blocker.func(blocker.arg);\r\n          if (Browser.mainLoop.remainingBlockers) {\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);\r\n            if (blocker.counted) {\r\n              Browser.mainLoop.remainingBlockers = next;\r\n            } else {\r\n              // not counted, but move the progress along a tiny bit\r\n              next = next + 0.5; // do not steal all the next one's progress\r\n              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;\r\n            }\r\n          }\r\n          out('main loop blocker \"' + blocker.name + '\" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);\r\n          Browser.mainLoop.updateStatus();\r\n  \r\n          // catches pause/resume main loop from blocker execution\r\n          if (!checkIsRunning()) return;\r\n  \r\n          setTimeout(Browser.mainLoop.runner, 0);\r\n          return;\r\n        }\r\n  \r\n        // catch pauses from non-main loop sources\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Implement very basic swap interval control\r\n        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;\r\n        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {\r\n          // Not the scheduled time to render this frame - skip.\r\n          Browser.mainLoop.scheduler();\r\n          return;\r\n        } else if (Browser.mainLoop.timingMode == 0/*EM_TIMING_SETTIMEOUT*/) {\r\n          Browser.mainLoop.tickStartTime = _emscripten_get_now();\r\n        }\r\n  \r\n        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize\r\n        // VBO double-buffering and reduce GPU stalls.\r\n        GL.newRenderingFrameStarted();\r\n  \r\n        Browser.mainLoop.runIter(browserIterationFunc);\r\n  \r\n        // catch pauses from the main loop itself\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able\r\n        // to queue the newest produced audio samples.\r\n        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()\r\n        //       do not need to be hardcoded into this function, but can be more generic.\r\n        if (typeof SDL == 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (!noSetTiming) {\r\n        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);\r\n        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (simulateInfiniteLoop) {\r\n        throw 'unwind';\r\n      }\r\n    }\r\n  \r\n  function handleException(e) {\r\n      // Certain exception types we do not treat as errors since they are used for\r\n      // internal control flow.\r\n      // 1. ExitStatus, which is thrown by exit()\r\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\r\n      //    that wish to return to JS event loop.\r\n      if (e instanceof ExitStatus || e == 'unwind') {\r\n        return EXITSTATUS;\r\n      }\r\n      quit_(1, e);\r\n    }\r\n  \r\n  \r\n  function _proc_exit(code) {\r\n      EXITSTATUS = code;\r\n      if (!keepRuntimeAlive()) {\r\n        if (Module['onExit']) Module['onExit'](code);\r\n        ABORT = true;\r\n      }\r\n      quit_(code, new ExitStatus(code));\r\n    }\r\n  /** @suppress {duplicate } */\r\n  /** @param {boolean|number=} implicit */\r\n  function exitJS(status, implicit) {\r\n      EXITSTATUS = status;\r\n  \r\n      _proc_exit(status);\r\n    }\r\n  var _exit = exitJS;\r\n  \r\n  function maybeExit() {\r\n      if (!keepRuntimeAlive()) {\r\n        try {\r\n          _exit(EXITSTATUS);\r\n        } catch (e) {\r\n          handleException(e);\r\n        }\r\n      }\r\n    }\r\n  function callUserCallback(func) {\r\n      if (ABORT) {\r\n        return;\r\n      }\r\n      try {\r\n        func();\r\n        maybeExit();\r\n      } catch (e) {\r\n        handleException(e);\r\n      }\r\n    }\r\n  \r\n  /** @param {number=} timeout */\r\n  function safeSetTimeout(func, timeout) {\r\n      \r\n      return setTimeout(() => {\r\n        \r\n        callUserCallback(func);\r\n      }, timeout);\r\n    }\r\n  \r\n  function warnOnce(text) {\r\n      if (!warnOnce.shown) warnOnce.shown = {};\r\n      if (!warnOnce.shown[text]) {\r\n        warnOnce.shown[text] = 1;\r\n        err(text);\r\n      }\r\n    }\r\n  \r\n  \r\n  var Browser = {mainLoop:{running:false,scheduler:null,method:\"\",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function() {\r\n          Browser.mainLoop.scheduler = null;\r\n          // Incrementing this signals the previous main loop that it's now become old, and it must return.\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n        },resume:function() {\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n          var timingMode = Browser.mainLoop.timingMode;\r\n          var timingValue = Browser.mainLoop.timingValue;\r\n          var func = Browser.mainLoop.func;\r\n          Browser.mainLoop.func = null;\r\n          // do not set timing and call scheduler, we will do it on the next lines\r\n          setMainLoop(func, 0, false, Browser.mainLoop.arg, true);\r\n          _emscripten_set_main_loop_timing(timingMode, timingValue);\r\n          Browser.mainLoop.scheduler();\r\n        },updateStatus:function() {\r\n          if (Module['setStatus']) {\r\n            var message = Module['statusMessage'] || 'Please wait...';\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var expected = Browser.mainLoop.expectedBlockers;\r\n            if (remaining) {\r\n              if (remaining < expected) {\r\n                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');\r\n              } else {\r\n                Module['setStatus'](message);\r\n              }\r\n            } else {\r\n              Module['setStatus']('');\r\n            }\r\n          }\r\n        },runIter:function(func) {\r\n          if (ABORT) return;\r\n          if (Module['preMainLoop']) {\r\n            var preRet = Module['preMainLoop']();\r\n            if (preRet === false) {\r\n              return; // |return false| skips a frame\r\n            }\r\n          }\r\n          callUserCallback(func);\r\n          if (Module['postMainLoop']) Module['postMainLoop']();\r\n        }},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function() {\r\n        if (!Module[\"preloadPlugins\"]) Module[\"preloadPlugins\"] = []; // needs to exist even in workers\r\n  \r\n        if (Browser.initted) return;\r\n        Browser.initted = true;\r\n  \r\n        try {\r\n          new Blob();\r\n          Browser.hasBlobConstructor = true;\r\n        } catch(e) {\r\n          Browser.hasBlobConstructor = false;\r\n          err(\"warning: no blob constructor, cannot create blobs with mimetypes\");\r\n        }\r\n        Browser.BlobBuilder = typeof MozBlobBuilder != \"undefined\" ? MozBlobBuilder : (typeof WebKitBlobBuilder != \"undefined\" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? err(\"warning: no BlobBuilder\") : null));\r\n        Browser.URLObject = typeof window != \"undefined\" ? (window.URL ? window.URL : window.webkitURL) : undefined;\r\n        if (!Module.noImageDecoding && typeof Browser.URLObject == 'undefined') {\r\n          err(\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\");\r\n          Module.noImageDecoding = true;\r\n        }\r\n  \r\n        // Support for plugins that can process preloaded files. You can add more of these to\r\n        // your app by creating and appending to Module.preloadPlugins.\r\n        //\r\n        // Each plugin is asked if it can handle a file based on the file's name. If it can,\r\n        // it is given the file's raw data. When it is done, it calls a callback with the file's\r\n        // (possibly modified) data. For example, a plugin might decompress a file, or it\r\n        // might create some side data structure for use later (like an Image element, etc.).\r\n  \r\n        var imagePlugin = {};\r\n        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {\r\n          return !Module.noImageDecoding && /\\.(jpg|jpeg|png|bmp)$/i.test(name);\r\n        };\r\n        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {\r\n          var b = null;\r\n          if (Browser.hasBlobConstructor) {\r\n            try {\r\n              b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n              if (b.size !== byteArray.length) { // Safari bug #118630\r\n                // Safari's Blob can only take an ArrayBuffer\r\n                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });\r\n              }\r\n            } catch(e) {\r\n              warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');\r\n            }\r\n          }\r\n          if (!b) {\r\n            var bb = new Browser.BlobBuilder();\r\n            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range\r\n            b = bb.getBlob();\r\n          }\r\n          var url = Browser.URLObject.createObjectURL(b);\r\n          var img = new Image();\r\n          img.onload = () => {\r\n            assert(img.complete, 'Image ' + name + ' could not be decoded');\r\n            var canvas = /** @type {!HTMLCanvasElement} */ (document.createElement('canvas'));\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            var ctx = canvas.getContext('2d');\r\n            ctx.drawImage(img, 0, 0);\r\n            preloadedImages[name] = canvas;\r\n            Browser.URLObject.revokeObjectURL(url);\r\n            if (onload) onload(byteArray);\r\n          };\r\n          img.onerror = (event) => {\r\n            out('Image ' + url + ' could not be decoded');\r\n            if (onerror) onerror();\r\n          };\r\n          img.src = url;\r\n        };\r\n        Module['preloadPlugins'].push(imagePlugin);\r\n  \r\n        var audioPlugin = {};\r\n        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {\r\n          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };\r\n        };\r\n        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {\r\n          var done = false;\r\n          function finish(audio) {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = audio;\r\n            if (onload) onload(byteArray);\r\n          }\r\n          function fail() {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = new Audio(); // empty shim\r\n            if (onerror) onerror();\r\n          }\r\n          if (Browser.hasBlobConstructor) {\r\n            try {\r\n              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n            } catch(e) {\r\n              return fail();\r\n            }\r\n            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!\r\n            var audio = new Audio();\r\n            audio.addEventListener('canplaythrough', () => finish(audio), false); // use addEventListener due to chromium bug 124926\r\n            audio.onerror = function audio_onerror(event) {\r\n              if (done) return;\r\n              err('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');\r\n              function encode64(data) {\r\n                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n                var PAD = '=';\r\n                var ret = '';\r\n                var leftchar = 0;\r\n                var leftbits = 0;\r\n                for (var i = 0; i < data.length; i++) {\r\n                  leftchar = (leftchar << 8) | data[i];\r\n                  leftbits += 8;\r\n                  while (leftbits >= 6) {\r\n                    var curr = (leftchar >> (leftbits-6)) & 0x3f;\r\n                    leftbits -= 6;\r\n                    ret += BASE[curr];\r\n                  }\r\n                }\r\n                if (leftbits == 2) {\r\n                  ret += BASE[(leftchar&3) << 4];\r\n                  ret += PAD + PAD;\r\n                } else if (leftbits == 4) {\r\n                  ret += BASE[(leftchar&0xf) << 2];\r\n                  ret += PAD;\r\n                }\r\n                return ret;\r\n              }\r\n              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);\r\n              finish(audio); // we don't wait for confirmation this worked - but it's worth trying\r\n            };\r\n            audio.src = url;\r\n            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror\r\n            safeSetTimeout(() => {\r\n              finish(audio); // try to use it even though it is not necessarily ready to play\r\n            }, 10000);\r\n          } else {\r\n            return fail();\r\n          }\r\n        };\r\n        Module['preloadPlugins'].push(audioPlugin);\r\n  \r\n        // Canvas event setup\r\n  \r\n        function pointerLockChange() {\r\n          Browser.pointerLock = document['pointerLockElement'] === Module['canvas'] ||\r\n                                document['mozPointerLockElement'] === Module['canvas'] ||\r\n                                document['webkitPointerLockElement'] === Module['canvas'] ||\r\n                                document['msPointerLockElement'] === Module['canvas'];\r\n        }\r\n        var canvas = Module['canvas'];\r\n        if (canvas) {\r\n          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module\r\n          // Module['forcedAspectRatio'] = 4 / 3;\r\n  \r\n          canvas.requestPointerLock = canvas['requestPointerLock'] ||\r\n                                      canvas['mozRequestPointerLock'] ||\r\n                                      canvas['webkitRequestPointerLock'] ||\r\n                                      canvas['msRequestPointerLock'] ||\r\n                                      (() => {});\r\n          canvas.exitPointerLock = document['exitPointerLock'] ||\r\n                                   document['mozExitPointerLock'] ||\r\n                                   document['webkitExitPointerLock'] ||\r\n                                   document['msExitPointerLock'] ||\r\n                                   (() => {}); // no-op if function does not exist\r\n          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\r\n  \r\n          document.addEventListener('pointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mozpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mspointerlockchange', pointerLockChange, false);\r\n  \r\n          if (Module['elementPointerLock']) {\r\n            canvas.addEventListener(\"click\", (ev) => {\r\n              if (!Browser.pointerLock && Module['canvas'].requestPointerLock) {\r\n                Module['canvas'].requestPointerLock();\r\n                ev.preventDefault();\r\n              }\r\n            }, false);\r\n          }\r\n        }\r\n      },handledByPreloadPlugin:function(byteArray, fullname, finish, onerror) {\r\n        // Ensure plugins are ready.\r\n        Browser.init();\r\n  \r\n        var handled = false;\r\n        Module['preloadPlugins'].forEach((plugin) => {\r\n          if (handled) return;\r\n          if (plugin['canHandle'](fullname)) {\r\n            plugin['handle'](byteArray, fullname, finish, onerror);\r\n            handled = true;\r\n          }\r\n        });\r\n        return handled;\r\n      },createContext:function(/** @type {HTMLCanvasElement} */ canvas, useWebGL, setInModule, webGLContextAttributes) {\r\n        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.\r\n  \r\n        var ctx;\r\n        var contextHandle;\r\n        if (useWebGL) {\r\n          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.\r\n          var contextAttributes = {\r\n            antialias: false,\r\n            alpha: false,\r\n            majorVersion: (typeof WebGL2RenderingContext != 'undefined') ? 2 : 1,\r\n          };\r\n  \r\n          if (webGLContextAttributes) {\r\n            for (var attribute in webGLContextAttributes) {\r\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\r\n            }\r\n          }\r\n  \r\n          // This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not\r\n          // actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function\r\n          // Browser.createContext() should not even be emitted.\r\n          if (typeof GL != 'undefined') {\r\n            contextHandle = GL.createContext(canvas, contextAttributes);\r\n            if (contextHandle) {\r\n              ctx = GL.getContext(contextHandle).GLctx;\r\n            }\r\n          }\r\n        } else {\r\n          ctx = canvas.getContext('2d');\r\n        }\r\n  \r\n        if (!ctx) return null;\r\n  \r\n        if (setInModule) {\r\n          if (!useWebGL) assert(typeof GLctx == 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');\r\n  \r\n          Module.ctx = ctx;\r\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\r\n          Module.useWebGL = useWebGL;\r\n          Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\r\n          Browser.init();\r\n        }\r\n        return ctx;\r\n      },destroyContext:function(canvas, useWebGL, setInModule) {},fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:function(lockPointer, resizeCanvas) {\r\n        Browser.lockPointer = lockPointer;\r\n        Browser.resizeCanvas = resizeCanvas;\r\n        if (typeof Browser.lockPointer == 'undefined') Browser.lockPointer = true;\r\n        if (typeof Browser.resizeCanvas == 'undefined') Browser.resizeCanvas = false;\r\n  \r\n        var canvas = Module['canvas'];\r\n        function fullscreenChange() {\r\n          Browser.isFullscreen = false;\r\n          var canvasContainer = canvas.parentNode;\r\n          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n               document['webkitCurrentFullScreenElement']) === canvasContainer) {\r\n            canvas.exitFullscreen = Browser.exitFullscreen;\r\n            if (Browser.lockPointer) canvas.requestPointerLock();\r\n            Browser.isFullscreen = true;\r\n            if (Browser.resizeCanvas) {\r\n              Browser.setFullscreenCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          } else {\r\n            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen\r\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\r\n            canvasContainer.parentNode.removeChild(canvasContainer);\r\n  \r\n            if (Browser.resizeCanvas) {\r\n              Browser.setWindowedCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          }\r\n          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullscreen);\r\n          if (Module['onFullscreen']) Module['onFullscreen'](Browser.isFullscreen);\r\n        }\r\n  \r\n        if (!Browser.fullscreenHandlersInstalled) {\r\n          Browser.fullscreenHandlersInstalled = true;\r\n          document.addEventListener('fullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('mozfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('MSFullscreenChange', fullscreenChange, false);\r\n        }\r\n  \r\n        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root\r\n        var canvasContainer = document.createElement(\"div\");\r\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\r\n        canvasContainer.appendChild(canvas);\r\n  \r\n        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)\r\n        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||\r\n                                            canvasContainer['mozRequestFullScreen'] ||\r\n                                            canvasContainer['msRequestFullscreen'] ||\r\n                                           (canvasContainer['webkitRequestFullscreen'] ? () => canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) : null) ||\r\n                                           (canvasContainer['webkitRequestFullScreen'] ? () => canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) : null);\r\n  \r\n        canvasContainer.requestFullscreen();\r\n      },exitFullscreen:function() {\r\n        // This is workaround for chrome. Trying to exit from fullscreen\r\n        // not in fullscreen state will cause \"TypeError: Document not active\"\r\n        // in chrome. See https://github.com/emscripten-core/emscripten/pull/8236\r\n        if (!Browser.isFullscreen) {\r\n          return false;\r\n        }\r\n  \r\n        var CFS = document['exitFullscreen'] ||\r\n                  document['cancelFullScreen'] ||\r\n                  document['mozCancelFullScreen'] ||\r\n                  document['msExitFullscreen'] ||\r\n                  document['webkitCancelFullScreen'] ||\r\n            (() => {});\r\n        CFS.apply(document, []);\r\n        return true;\r\n      },nextRAF:0,fakeRequestAnimationFrame:function(func) {\r\n        // try to keep 60fps between calls to here\r\n        var now = Date.now();\r\n        if (Browser.nextRAF === 0) {\r\n          Browser.nextRAF = now + 1000/60;\r\n        } else {\r\n          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0\r\n            Browser.nextRAF += 1000/60;\r\n          }\r\n        }\r\n        var delay = Math.max(Browser.nextRAF - now, 0);\r\n        setTimeout(func, delay);\r\n      },requestAnimationFrame:function(func) {\r\n        if (typeof requestAnimationFrame == 'function') {\r\n          requestAnimationFrame(func);\r\n          return;\r\n        }\r\n        var RAF = Browser.fakeRequestAnimationFrame;\r\n        RAF(func);\r\n      },safeSetTimeout:function(func, timeout) {\r\n        // Legacy function, this is used by the SDL2 port so we need to keep it\r\n        // around at least until that is updated.\r\n        // See https://github.com/libsdl-org/SDL/pull/6304\r\n        return safeSetTimeout(func, timeout);\r\n      },safeRequestAnimationFrame:function(func) {\r\n        \r\n        return Browser.requestAnimationFrame(() => {\r\n          \r\n          callUserCallback(func);\r\n        });\r\n      },getMimetype:function(name) {\r\n        return {\r\n          'jpg': 'image/jpeg',\r\n          'jpeg': 'image/jpeg',\r\n          'png': 'image/png',\r\n          'bmp': 'image/bmp',\r\n          'ogg': 'audio/ogg',\r\n          'wav': 'audio/wav',\r\n          'mp3': 'audio/mpeg'\r\n        }[name.substr(name.lastIndexOf('.')+1)];\r\n      },getUserMedia:function(func) {\r\n        if (!window.getUserMedia) {\r\n          window.getUserMedia = navigator['getUserMedia'] ||\r\n                                navigator['mozGetUserMedia'];\r\n        }\r\n        window.getUserMedia(func);\r\n      },getMovementX:function(event) {\r\n        return event['movementX'] ||\r\n               event['mozMovementX'] ||\r\n               event['webkitMovementX'] ||\r\n               0;\r\n      },getMovementY:function(event) {\r\n        return event['movementY'] ||\r\n               event['mozMovementY'] ||\r\n               event['webkitMovementY'] ||\r\n               0;\r\n      },getMouseWheelDelta:function(event) {\r\n        var delta = 0;\r\n        switch (event.type) {\r\n          case 'DOMMouseScroll':\r\n            // 3 lines make up a step\r\n            delta = event.detail / 3;\r\n            break;\r\n          case 'mousewheel':\r\n            // 120 units make up a step\r\n            delta = event.wheelDelta / 120;\r\n            break;\r\n          case 'wheel':\r\n            delta = event.deltaY\r\n            switch (event.deltaMode) {\r\n              case 0:\r\n                // DOM_DELTA_PIXEL: 100 pixels make up a step\r\n                delta /= 100;\r\n                break;\r\n              case 1:\r\n                // DOM_DELTA_LINE: 3 lines make up a step\r\n                delta /= 3;\r\n                break;\r\n              case 2:\r\n                // DOM_DELTA_PAGE: A page makes up 80 steps\r\n                delta *= 80;\r\n                break;\r\n              default:\r\n                throw 'unrecognized mouse wheel delta mode: ' + event.deltaMode;\r\n            }\r\n            break;\r\n          default:\r\n            throw 'unrecognized mouse wheel event: ' + event.type;\r\n        }\r\n        return delta;\r\n      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function(event) { // event should be mousemove, mousedown or mouseup\r\n        if (Browser.pointerLock) {\r\n          // When the pointer is locked, calculate the coordinates\r\n          // based on the movement of the mouse.\r\n          // Workaround for Firefox bug 764498\r\n          if (event.type != 'mousemove' &&\r\n              ('mozMovementX' in event)) {\r\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\r\n          } else {\r\n            Browser.mouseMovementX = Browser.getMovementX(event);\r\n            Browser.mouseMovementY = Browser.getMovementY(event);\r\n          }\r\n  \r\n          // check if SDL is available\r\n          if (typeof SDL != \"undefined\") {\r\n            Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;\r\n            Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;\r\n          } else {\r\n            // just add the mouse delta to the current absolut mouse position\r\n            // FIXME: ideally this should be clamped against the canvas size and zero\r\n            Browser.mouseX += Browser.mouseMovementX;\r\n            Browser.mouseY += Browser.mouseMovementY;\r\n          }\r\n        } else {\r\n          // Otherwise, calculate the movement based on the changes\r\n          // in the coordinates.\r\n          var rect = Module[\"canvas\"].getBoundingClientRect();\r\n          var cw = Module[\"canvas\"].width;\r\n          var ch = Module[\"canvas\"].height;\r\n  \r\n          // Neither .scrollX or .pageXOffset are defined in a spec, but\r\n          // we prefer .scrollX because it is currently in a spec draft.\r\n          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)\r\n          var scrollX = ((typeof window.scrollX != 'undefined') ? window.scrollX : window.pageXOffset);\r\n          var scrollY = ((typeof window.scrollY != 'undefined') ? window.scrollY : window.pageYOffset);\r\n  \r\n          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {\r\n            var touch = event.touch;\r\n            if (touch === undefined) {\r\n              return; // the \"touch\" property is only defined in SDL\r\n  \r\n            }\r\n            var adjustedX = touch.pageX - (scrollX + rect.left);\r\n            var adjustedY = touch.pageY - (scrollY + rect.top);\r\n  \r\n            adjustedX = adjustedX * (cw / rect.width);\r\n            adjustedY = adjustedY * (ch / rect.height);\r\n  \r\n            var coords = { x: adjustedX, y: adjustedY };\r\n  \r\n            if (event.type === 'touchstart') {\r\n              Browser.lastTouches[touch.identifier] = coords;\r\n              Browser.touches[touch.identifier] = coords;\r\n            } else if (event.type === 'touchend' || event.type === 'touchmove') {\r\n              var last = Browser.touches[touch.identifier];\r\n              if (!last) last = coords;\r\n              Browser.lastTouches[touch.identifier] = last;\r\n              Browser.touches[touch.identifier] = coords;\r\n            }\r\n            return;\r\n          }\r\n  \r\n          var x = event.pageX - (scrollX + rect.left);\r\n          var y = event.pageY - (scrollY + rect.top);\r\n  \r\n          // the canvas might be CSS-scaled compared to its backbuffer;\r\n          // SDL-using content will want mouse coordinates in terms\r\n          // of backbuffer units.\r\n          x = x * (cw / rect.width);\r\n          y = y * (ch / rect.height);\r\n  \r\n          Browser.mouseMovementX = x - Browser.mouseX;\r\n          Browser.mouseMovementY = y - Browser.mouseY;\r\n          Browser.mouseX = x;\r\n          Browser.mouseY = y;\r\n        }\r\n      },resizeListeners:[],updateResizeListeners:function() {\r\n        var canvas = Module['canvas'];\r\n        Browser.resizeListeners.forEach((listener) => listener(canvas.width, canvas.height));\r\n      },setCanvasSize:function(width, height, noUpdates) {\r\n        var canvas = Module['canvas'];\r\n        Browser.updateCanvasDimensions(canvas, width, height);\r\n        if (!noUpdates) Browser.updateResizeListeners();\r\n      },windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:function() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags | 0x00800000; // set SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },setWindowedCanvasSize:function() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },updateCanvasDimensions:function(canvas, wNative, hNative) {\r\n        if (wNative && hNative) {\r\n          canvas.widthNative = wNative;\r\n          canvas.heightNative = hNative;\r\n        } else {\r\n          wNative = canvas.widthNative;\r\n          hNative = canvas.heightNative;\r\n        }\r\n        var w = wNative;\r\n        var h = hNative;\r\n        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {\r\n          if (w/h < Module['forcedAspectRatio']) {\r\n            w = Math.round(h * Module['forcedAspectRatio']);\r\n          } else {\r\n            h = Math.round(w / Module['forcedAspectRatio']);\r\n          }\r\n        }\r\n        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {\r\n           var factor = Math.min(screen.width / w, screen.height / h);\r\n           w = Math.round(w * factor);\r\n           h = Math.round(h * factor);\r\n        }\r\n        if (Browser.resizeCanvas) {\r\n          if (canvas.width  != w) canvas.width  = w;\r\n          if (canvas.height != h) canvas.height = h;\r\n          if (typeof canvas.style != 'undefined') {\r\n            canvas.style.removeProperty( \"width\");\r\n            canvas.style.removeProperty(\"height\");\r\n          }\r\n        } else {\r\n          if (canvas.width  != wNative) canvas.width  = wNative;\r\n          if (canvas.height != hNative) canvas.height = hNative;\r\n          if (typeof canvas.style != 'undefined') {\r\n            if (w != wNative || h != hNative) {\r\n              canvas.style.setProperty( \"width\", w + \"px\", \"important\");\r\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\r\n            } else {\r\n              canvas.style.removeProperty( \"width\");\r\n              canvas.style.removeProperty(\"height\");\r\n            }\r\n          }\r\n        }\r\n      }};\r\n  \r\n  var EGL = {errorCode:12288,defaultDisplayInitialized:false,currentContext:0,currentReadSurface:0,currentDrawSurface:0,contextAttributes:{alpha:false,depth:false,stencil:false,antialias:false},stringCache:{},setErrorCode:function(code) {\r\n        EGL.errorCode = code;\r\n      },chooseConfig:function(display, attribList, config, config_size, numConfigs) {\r\n        if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n          EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n          return 0;\r\n        }\r\n  \r\n        if (attribList) {\r\n          // read attribList if it is non-null\r\n          for (;;) {\r\n            var param = HEAP32[((attribList)>>2)];\r\n            if (param == 0x3021 /*EGL_ALPHA_SIZE*/) {\r\n              var alphaSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.alpha = (alphaSize > 0);\r\n            } else if (param == 0x3025 /*EGL_DEPTH_SIZE*/) {\r\n              var depthSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.depth = (depthSize > 0);\r\n            } else if (param == 0x3026 /*EGL_STENCIL_SIZE*/) {\r\n              var stencilSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.stencil = (stencilSize > 0);\r\n            } else if (param == 0x3031 /*EGL_SAMPLES*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples > 0);\r\n            } else if (param == 0x3032 /*EGL_SAMPLE_BUFFERS*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples == 1);\r\n            } else if (param == 0x3100 /*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/) {\r\n              var requestedPriority = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.lowLatency = (requestedPriority != 0x3103 /*EGL_CONTEXT_PRIORITY_LOW_IMG*/);\r\n            } else if (param == 0x3038 /*EGL_NONE*/) {\r\n                break;\r\n            }\r\n            attribList += 8;\r\n          }\r\n        }\r\n  \r\n        if ((!config || !config_size) && !numConfigs) {\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n        }\r\n        if (numConfigs) {\r\n          HEAP32[((numConfigs)>>2)] = 1; // Total number of supported configs: 1.\r\n        }\r\n        if (config && config_size > 0) {\r\n          HEAP32[((config)>>2)] = 62002;\r\n        }\r\n  \r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }};\r\n  function _eglBindAPI(api) {\r\n      if (api == 0x30A0 /* EGL_OPENGL_ES_API */) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }\r\n      // if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {\r\n      EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n      return 0;\r\n    }\r\n\r\n  function _eglChooseConfig(display, attrib_list, configs, config_size, numConfigs) {\r\n      return EGL.chooseConfig(display, attrib_list, configs, config_size, numConfigs);\r\n    }\r\n\r\n  function webgl_enable_ANGLE_instanced_arrays(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 26 and Google Chrome 30 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('ANGLE_instanced_arrays');\r\n      if (ext) {\r\n        ctx['vertexAttribDivisor'] = function(index, divisor) { ext['vertexAttribDivisorANGLE'](index, divisor); };\r\n        ctx['drawArraysInstanced'] = function(mode, first, count, primcount) { ext['drawArraysInstancedANGLE'](mode, first, count, primcount); };\r\n        ctx['drawElementsInstanced'] = function(mode, count, type, indices, primcount) { ext['drawElementsInstancedANGLE'](mode, count, type, indices, primcount); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_OES_vertex_array_object(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 25 and WebKit 536.28/desktop Safari 6.0.3 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('OES_vertex_array_object');\r\n      if (ext) {\r\n        ctx['createVertexArray'] = function() { return ext['createVertexArrayOES'](); };\r\n        ctx['deleteVertexArray'] = function(vao) { ext['deleteVertexArrayOES'](vao); };\r\n        ctx['bindVertexArray'] = function(vao) { ext['bindVertexArrayOES'](vao); };\r\n        ctx['isVertexArray'] = function(vao) { return ext['isVertexArrayOES'](vao); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_draw_buffers(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 28 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('WEBGL_draw_buffers');\r\n      if (ext) {\r\n        ctx['drawBuffers'] = function(n, bufs) { ext['drawBuffersWEBGL'](n, bufs); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(ctx) {\r\n      // Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.dibvbi = ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance'));\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(ctx) {\r\n      // Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.mdibvbi = ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_multi_draw(ctx) {\r\n      // Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.\r\n      return !!(ctx.multiDrawWebgl = ctx.getExtension('WEBGL_multi_draw'));\r\n    }\r\n  \r\n  \r\n  var GL = {counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:[],offscreenCanvases:{},queries:[],samplers:[],transformFeedbacks:[],syncs:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],stringCache:{},stringiCache:{},unpackAlignment:4,recordError:function recordError(errorCode) {\r\n        if (!GL.lastError) {\r\n          GL.lastError = errorCode;\r\n        }\r\n      },getNewId:function(table) {\r\n        var ret = GL.counter++;\r\n        for (var i = table.length; i < ret; i++) {\r\n          table[i] = null;\r\n        }\r\n        return ret;\r\n      },MAX_TEMP_BUFFER_SIZE:16777216,numTempVertexBuffersPerSize:64,log2ceilLookup:function(i) {\r\n        return 32 - Math.clz32(i === 0 ? 0 : i - 1);\r\n      },generateTempBuffers:function(quads, context) {\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        context.tempVertexBufferCounters1 = [];\r\n        context.tempVertexBufferCounters2 = [];\r\n        context.tempVertexBufferCounters1.length = context.tempVertexBufferCounters2.length = largestIndex+1;\r\n        context.tempVertexBuffers1 = [];\r\n        context.tempVertexBuffers2 = [];\r\n        context.tempVertexBuffers1.length = context.tempVertexBuffers2.length = largestIndex+1;\r\n        context.tempIndexBuffers = [];\r\n        context.tempIndexBuffers.length = largestIndex+1;\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          context.tempIndexBuffers[i] = null; // Created on-demand\r\n          context.tempVertexBufferCounters1[i] = context.tempVertexBufferCounters2[i] = 0;\r\n          var ringbufferLength = GL.numTempVertexBuffersPerSize;\r\n          context.tempVertexBuffers1[i] = [];\r\n          context.tempVertexBuffers2[i] = [];\r\n          var ringbuffer1 = context.tempVertexBuffers1[i];\r\n          var ringbuffer2 = context.tempVertexBuffers2[i];\r\n          ringbuffer1.length = ringbuffer2.length = ringbufferLength;\r\n          for (var j = 0; j < ringbufferLength; ++j) {\r\n            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand\r\n          }\r\n        }\r\n  \r\n        if (quads) {\r\n          // GL_QUAD indexes can be precalculated\r\n          context.tempQuadIndexBuffer = GLctx.createBuffer();\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, context.tempQuadIndexBuffer);\r\n          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;\r\n          var quadIndexes = new Uint16Array(numIndexes);\r\n          var i = 0, v = 0;\r\n          while (1) {\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+1;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+3;\r\n            if (i >= numIndexes) break;\r\n            v += 4;\r\n          }\r\n          context.GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, quadIndexes, 0x88E4 /*GL_STATIC_DRAW*/);\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n        }\r\n      },getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ringbuffer = GL.currentContext.tempVertexBuffers1[idx];\r\n        var nextFreeBufferIndex = GL.currentContext.tempVertexBufferCounters1[idx];\r\n        GL.currentContext.tempVertexBufferCounters1[idx] = (GL.currentContext.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);\r\n        var vbo = ringbuffer[nextFreeBufferIndex];\r\n        if (vbo) {\r\n          return vbo;\r\n        }\r\n        var prevVBO = GLctx.getParameter(0x8894 /*GL_ARRAY_BUFFER_BINDING*/);\r\n        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, ringbuffer[nextFreeBufferIndex]);\r\n        GLctx.bufferData(0x8892 /*GL_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, prevVBO);\r\n        return ringbuffer[nextFreeBufferIndex];\r\n      },getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ibo = GL.currentContext.tempIndexBuffers[idx];\r\n        if (ibo) {\r\n          return ibo;\r\n        }\r\n        var prevIBO = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n        GL.currentContext.tempIndexBuffers[idx] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, GL.currentContext.tempIndexBuffers[idx]);\r\n        GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, prevIBO);\r\n        return GL.currentContext.tempIndexBuffers[idx];\r\n      },newRenderingFrameStarted:function newRenderingFrameStarted() {\r\n        if (!GL.currentContext) {\r\n          return;\r\n        }\r\n        var vb = GL.currentContext.tempVertexBuffers1;\r\n        GL.currentContext.tempVertexBuffers1 = GL.currentContext.tempVertexBuffers2;\r\n        GL.currentContext.tempVertexBuffers2 = vb;\r\n        vb = GL.currentContext.tempVertexBufferCounters1;\r\n        GL.currentContext.tempVertexBufferCounters1 = GL.currentContext.tempVertexBufferCounters2;\r\n        GL.currentContext.tempVertexBufferCounters2 = vb;\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          GL.currentContext.tempVertexBufferCounters1[i] = 0;\r\n        }\r\n      },getSource:function(shader, count, string, length) {\r\n        var source = '';\r\n        for (var i = 0; i < count; ++i) {\r\n          var len = length ? HEAP32[(((length)+(i*4))>>2)] : -1;\r\n          source += UTF8ToString(HEAP32[(((string)+(i*4))>>2)], len < 0 ? undefined : len);\r\n        }\r\n        return source;\r\n      },calcBufLength:function calcBufLength(size, type, stride, count) {\r\n        if (stride > 0) {\r\n          return count * stride;  // XXXvlad this is not exactly correct I don't think\r\n        }\r\n        var typeSize = GL.byteSizeByType[type - GL.byteSizeByTypeRoot];\r\n        return size * typeSize * count;\r\n      },usedTempBuffers:[],preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count) {\r\n        GL.resetBufferBinding = false;\r\n  \r\n        // TODO: initial pass to detect ranges we need to upload, might not need an upload per attrib\r\n        for (var i = 0; i < GL.currentContext.maxVertexAttribs; ++i) {\r\n          var cb = GL.currentContext.clientBuffers[i];\r\n          if (!cb.clientside || !cb.enabled) continue;\r\n  \r\n          GL.resetBufferBinding = true;\r\n  \r\n          var size = GL.calcBufLength(cb.size, cb.type, cb.stride, count);\r\n          var buf = GL.getTempVertexBuffer(size);\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, buf);\r\n          GLctx.bufferSubData(0x8892 /*GL_ARRAY_BUFFER*/,\r\n                                   0,\r\n                                   HEAPU8.subarray(cb.ptr, cb.ptr + size));\r\n          cb.vertexAttribPointerAdaptor.call(GLctx, i, cb.size, cb.type, cb.normalized, cb.stride, 0);\r\n        }\r\n      },postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings() {\r\n        if (GL.resetBufferBinding) {\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, GL.buffers[GLctx.currentArrayBufferBinding]);\r\n        }\r\n      },createContext:function(/** @type {HTMLCanvasElement} */ canvas, webGLContextAttributes) {\r\n  \r\n        // BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL context on a canvas,\r\n        // calling .getContext() will always return that context independent of which 'webgl' or 'webgl2'\r\n        // context version was passed. See https://bugs.webkit.org/show_bug.cgi?id=222758 and\r\n        // https://github.com/emscripten-core/emscripten/issues/13295.\r\n        // TODO: Once the bug is fixed and shipped in Safari, adjust the Safari version field in above check.\r\n        if (!canvas.getContextSafariWebGL2Fixed) {\r\n          canvas.getContextSafariWebGL2Fixed = canvas.getContext;\r\n          /** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */\r\n          function fixedGetContext(ver, attrs) {\r\n            var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\r\n            return ((ver == 'webgl') == (gl instanceof WebGLRenderingContext)) ? gl : null;\r\n          }\r\n          canvas.getContext = fixedGetContext;\r\n        }\r\n  \r\n        var ctx =\r\n          (webGLContextAttributes.majorVersion > 1)\r\n          ?\r\n            canvas.getContext(\"webgl2\", webGLContextAttributes)\r\n          :\r\n          (canvas.getContext(\"webgl\", webGLContextAttributes)\r\n            // https://caniuse.com/#feat=webgl\r\n            );\r\n  \r\n        if (!ctx) return 0;\r\n  \r\n        var handle = GL.registerContext(ctx, webGLContextAttributes);\r\n  \r\n        return handle;\r\n      },registerContext:function(ctx, webGLContextAttributes) {\r\n        // without pthreads a context is just an integer ID\r\n        var handle = GL.getNewId(GL.contexts);\r\n  \r\n        var context = {\r\n          handle: handle,\r\n          attributes: webGLContextAttributes,\r\n          version: webGLContextAttributes.majorVersion,\r\n          GLctx: ctx\r\n        };\r\n  \r\n        // Store the created context object so that we can access the context given a canvas without having to pass the parameters again.\r\n        if (ctx.canvas) ctx.canvas.GLctxObject = context;\r\n        GL.contexts[handle] = context;\r\n        if (typeof webGLContextAttributes.enableExtensionsByDefault == 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {\r\n          GL.initExtensions(context);\r\n        }\r\n  \r\n        context.maxVertexAttribs = context.GLctx.getParameter(0x8869 /*GL_MAX_VERTEX_ATTRIBS*/);\r\n        context.clientBuffers = [];\r\n        for (var i = 0; i < context.maxVertexAttribs; i++) {\r\n          context.clientBuffers[i] = { enabled: false, clientside: false, size: 0, type: 0, normalized: 0, stride: 0, ptr: 0, vertexAttribPointerAdaptor: null };\r\n        }\r\n  \r\n        GL.generateTempBuffers(false, context);\r\n  \r\n        return handle;\r\n      },makeContextCurrent:function(contextHandle) {\r\n  \r\n        GL.currentContext = GL.contexts[contextHandle]; // Active Emscripten GL layer context object.\r\n        Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx; // Active WebGL context object.\r\n        return !(contextHandle && !GLctx);\r\n      },getContext:function(contextHandle) {\r\n        return GL.contexts[contextHandle];\r\n      },deleteContext:function(contextHandle) {\r\n        if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = null;\r\n        if (typeof JSEvents == 'object') JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas); // Release all JS event handlers on the DOM element that the GL context is associated with since the context is now deleted.\r\n        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined; // Make sure the canvas object no longer refers to the context object so there are no GC surprises.\r\n        GL.contexts[contextHandle] = null;\r\n      },initExtensions:function(context) {\r\n        // If this function is called without a specific context object, init the extensions of the currently active context.\r\n        if (!context) context = GL.currentContext;\r\n  \r\n        if (context.initExtensionsDone) return;\r\n        context.initExtensionsDone = true;\r\n  \r\n        var GLctx = context.GLctx;\r\n  \r\n        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist.\r\n  \r\n        // Extensions that are only available in WebGL 1 (the calls will be no-ops if called on a WebGL 2 context active)\r\n        webgl_enable_ANGLE_instanced_arrays(GLctx);\r\n        webgl_enable_OES_vertex_array_object(GLctx);\r\n        webgl_enable_WEBGL_draw_buffers(GLctx);\r\n        // Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)\r\n        webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);\r\n        webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);\r\n  \r\n        // On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative\r\n        // that's based on core APIs, and exposes only the queryCounterEXT()\r\n        // entrypoint.\r\n        if (context.version >= 2) {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\");\r\n        }\r\n  \r\n        // However, Firefox exposes the WebGL 1 version on WebGL 2 as well and\r\n        // thus we look for the WebGL 1 version again if the WebGL 2 version\r\n        // isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882\r\n        if (context.version < 2 || !GLctx.disjointTimerQueryExt)\r\n        {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query\");\r\n        }\r\n  \r\n        webgl_enable_WEBGL_multi_draw(GLctx);\r\n  \r\n        // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n        var exts = GLctx.getSupportedExtensions() || [];\r\n        exts.forEach(function(ext) {\r\n          // WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders are not enabled by default.\r\n          if (!ext.includes('lose_context') && !ext.includes('debug')) {\r\n            // Call .getExtension() to enable that extension permanently.\r\n            GLctx.getExtension(ext);\r\n          }\r\n        });\r\n      }};\r\n  \r\n  function _eglCreateContext(display, config, hmm, contextAttribs) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n  \r\n      // EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.\r\n      // So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.\r\n      var glesContextVersion = 1;\r\n      for (;;) {\r\n        var param = HEAP32[((contextAttribs)>>2)];\r\n        if (param == 0x3098 /*EGL_CONTEXT_CLIENT_VERSION*/) {\r\n          glesContextVersion = HEAP32[(((contextAttribs)+(4))>>2)];\r\n        } else if (param == 0x3038 /*EGL_NONE*/) {\r\n          break;\r\n        } else {\r\n          /* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */\r\n          EGL.setErrorCode(0x3004 /*EGL_BAD_ATTRIBUTE*/);\r\n          return 0;\r\n        }\r\n        contextAttribs += 8;\r\n      }\r\n      if (glesContextVersion < 2 || glesContextVersion > 3) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n  \r\n      EGL.contextAttributes.majorVersion = glesContextVersion - 1; // WebGL 1 is GLES 2, WebGL2 is GLES3\r\n      EGL.contextAttributes.minorVersion = 0;\r\n  \r\n      EGL.context = GL.createContext(Module['canvas'], EGL.contextAttributes);\r\n  \r\n      if (EGL.context != 0) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n  \r\n        // Run callbacks so that GL emulation works\r\n        GL.makeContextCurrent(EGL.context);\r\n        Module.useWebGL = true;\r\n        Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });\r\n  \r\n        // Note: This function only creates a context, but it shall not make it active.\r\n        GL.makeContextCurrent(null);\r\n        return 62004; // Magic ID for Emscripten EGLContext\r\n      } else {\r\n        EGL.setErrorCode(0x3009 /* EGL_BAD_MATCH */); // By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n    }\r\n\r\n  function _eglCreateWindowSurface(display, config, win, attrib_list) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      // TODO: Examine attrib_list! Parameters that can be present there are:\r\n      // - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)\r\n      // - EGL_VG_COLORSPACE (can't be set)\r\n      // - EGL_VG_ALPHA_FORMAT (can't be set)\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 62006; /* Magic ID for Emscripten 'default surface' */\r\n    }\r\n\r\n  \r\n  function _eglDestroyContext(display, context) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (context != 62004 /* Magic ID for Emscripten EGLContext */) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.deleteContext(EGL.context);\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.currentContext == context) {\r\n        EGL.currentContext = 0;\r\n      }\r\n      return 1 /* EGL_TRUE */;\r\n    }\r\n\r\n  function _eglDestroySurface(display, surface) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (surface != 62006 /* Magic ID for the only EGLSurface supported by Emscripten */) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 1;\r\n      }\r\n      if (EGL.currentReadSurface == surface) {\r\n        EGL.currentReadSurface = 0;\r\n      }\r\n      if (EGL.currentDrawSurface == surface) {\r\n        EGL.currentDrawSurface = 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1; /* Magic ID for Emscripten 'default surface' */\r\n    }\r\n\r\n  function _eglGetConfigAttrib(display, config, attribute, value) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      if (!value) {\r\n        EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n        return 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      switch (attribute) {\r\n      case 0x3020: // EGL_BUFFER_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 32 : 24;\r\n        return 1;\r\n      case 0x3021: // EGL_ALPHA_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 8 : 0;\r\n        return 1;\r\n      case 0x3022: // EGL_BLUE_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3023: // EGL_GREEN_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3024: // EGL_RED_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3025: // EGL_DEPTH_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.depth ? 24 : 0;\r\n        return 1;\r\n      case 0x3026: // EGL_STENCIL_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.stencil ? 8 : 0;\r\n        return 1;\r\n      case 0x3027: // EGL_CONFIG_CAVEAT\r\n        // We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3028: // EGL_CONFIG_ID\r\n        HEAP32[((value)>>2)] = 62002;\r\n        return 1;\r\n      case 0x3029: // EGL_LEVEL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302A: // EGL_MAX_PBUFFER_HEIGHT\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302B: // EGL_MAX_PBUFFER_PIXELS\r\n        HEAP32[((value)>>2)] = 16777216;\r\n        return 1;\r\n      case 0x302C: // EGL_MAX_PBUFFER_WIDTH\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302D: // EGL_NATIVE_RENDERABLE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302E: // EGL_NATIVE_VISUAL_ID\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302F: // EGL_NATIVE_VISUAL_TYPE\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3031: // EGL_SAMPLES\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 4 : 0;\r\n        return 1;\r\n      case 0x3032: // EGL_SAMPLE_BUFFERS\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 1 : 0;\r\n        return 1;\r\n      case 0x3033: // EGL_SURFACE_TYPE\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3034: // EGL_TRANSPARENT_TYPE\r\n        // If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3035: // EGL_TRANSPARENT_BLUE_VALUE\r\n      case 0x3036: // EGL_TRANSPARENT_GREEN_VALUE\r\n      case 0x3037: // EGL_TRANSPARENT_RED_VALUE\r\n        // \"If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined.\"\r\n        HEAP32[((value)>>2)] = -1;\r\n        return 1;\r\n      case 0x3039: // EGL_BIND_TO_TEXTURE_RGB\r\n      case 0x303A: // EGL_BIND_TO_TEXTURE_RGBA\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303B: // EGL_MIN_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303C: // EGL_MAX_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 1;\r\n        return 1;\r\n      case 0x303D: // EGL_LUMINANCE_SIZE\r\n      case 0x303E: // EGL_ALPHA_MASK_SIZE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303F: // EGL_COLOR_BUFFER_TYPE\r\n        // EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.\r\n        HEAP32[((value)>>2)] = 0x308E;\r\n        return 1;\r\n      case 0x3040: // EGL_RENDERABLE_TYPE\r\n        // A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3042: // EGL_CONFORMANT\r\n        // \"EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API.\"\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      default:\r\n        EGL.setErrorCode(0x3004 /* EGL_BAD_ATTRIBUTE */);\r\n        return 0;\r\n      }\r\n    }\r\n\r\n  function _eglGetDisplay(nativeDisplayType) {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      // Note: As a 'conformant' implementation of EGL, we would prefer to init here only if the user\r\n      //       calls this function with EGL_DEFAULT_DISPLAY. Other display IDs would be preferred to be unsupported\r\n      //       and EGL_NO_DISPLAY returned. Uncomment the following code lines to do this.\r\n      // Instead, an alternative route has been preferred, namely that the Emscripten EGL implementation\r\n      // \"emulates\" X11, and eglGetDisplay is expected to accept/receive a pointer to an X11 Display object.\r\n      // Therefore, be lax and allow anything to be passed in, and return the magic handle to our default EGLDisplay object.\r\n  \r\n  //    if (nativeDisplayType == 0 /* EGL_DEFAULT_DISPLAY */) {\r\n          return 62000; // Magic ID for Emscripten 'default display'\r\n  //    }\r\n  //    else\r\n  //      return 0; // EGL_NO_DISPLAY\r\n    }\r\n\r\n  function _eglGetError() {\r\n      return EGL.errorCode;\r\n    }\r\n\r\n  function _eglInitialize(display, majorVersion, minorVersion) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (majorVersion) {\r\n        HEAP32[((majorVersion)>>2)] = 1; // Advertise EGL Major version: '1'\r\n      }\r\n      if (minorVersion) {\r\n        HEAP32[((minorVersion)>>2)] = 4; // Advertise EGL Minor version: '4'\r\n      }\r\n      EGL.defaultDisplayInitialized = true;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  \r\n  function _eglMakeCurrent(display, draw, read, context) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0 /* EGL_FALSE */;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      if (context != 0 && context != 62004 /* Magic ID for Emscripten EGLContext */) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n      if ((read != 0 && read != 62006) || (draw != 0 && draw != 62006 /* Magic ID for Emscripten 'default surface' */)) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.makeContextCurrent(context ? EGL.context : null);\r\n  \r\n      EGL.currentContext = context;\r\n      EGL.currentDrawSurface = draw;\r\n      EGL.currentReadSurface = read;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1 /* EGL_TRUE */;\r\n    }\r\n\r\n  \r\n  function _eglQueryString(display, name) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.stringCache[name]) return EGL.stringCache[name];\r\n      var ret;\r\n      switch (name) {\r\n        case 0x3053 /* EGL_VENDOR */: ret = stringToNewUTF8(\"Emscripten\"); break;\r\n        case 0x3054 /* EGL_VERSION */: ret = stringToNewUTF8(\"1.4 Emscripten EGL\"); break;\r\n        case 0x3055 /* EGL_EXTENSIONS */:  ret = stringToNewUTF8(\"\"); break; // Currently not supporting any EGL extensions.\r\n        case 0x308D /* EGL_CLIENT_APIS */: ret = stringToNewUTF8(\"OpenGL_ES\"); break;\r\n        default:\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n      }\r\n      EGL.stringCache[name] = ret;\r\n      return ret;\r\n    }\r\n\r\n  function _eglSwapBuffers() {\r\n  \r\n      if (!EGL.defaultDisplayInitialized) {\r\n        EGL.setErrorCode(0x3001 /* EGL_NOT_INITIALIZED */);\r\n      } else if (!Module.ctx) {\r\n        EGL.setErrorCode(0x3002 /* EGL_BAD_ACCESS */);\r\n      } else if (Module.ctx.isContextLost()) {\r\n        EGL.setErrorCode(0x300E /* EGL_CONTEXT_LOST */);\r\n      } else {\r\n        // According to documentation this does an implicit flush.\r\n        // Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871\r\n        // the flush was removed since this _may_ result in slowing code down.\r\n        //_glFlush();\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1 /* EGL_TRUE */;\r\n      }\r\n      return 0 /* EGL_FALSE */;\r\n    }\r\n\r\n  \r\n  function _eglSwapInterval(display, interval) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (interval == 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 0);\r\n      else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, interval);\r\n  \r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  function _eglTerminate(display) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      EGL.currentContext = 0;\r\n      EGL.currentReadSurface = 0;\r\n      EGL.currentDrawSurface = 0;\r\n      EGL.defaultDisplayInitialized = false;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _eglWaitClient() {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n  var _eglWaitGL = _eglWaitClient;\r\n\r\n  function _eglWaitNative(nativeEngineId) {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  var readEmAsmArgsArray = [];\r\n  function readEmAsmArgs(sigPtr, buf) {\r\n      readEmAsmArgsArray.length = 0;\r\n      var ch;\r\n      // Most arguments are i32s, so shift the buffer pointer so it is a plain\r\n      // index into HEAP32.\r\n      buf >>= 2;\r\n      while (ch = HEAPU8[sigPtr++]) {\r\n        // Floats are always passed as doubles, and doubles and int64s take up 8\r\n        // bytes (two 32-bit slots) in memory, align reads to these:\r\n        buf += (ch != 105/*i*/) & buf;\r\n        readEmAsmArgsArray.push(\r\n          ch == 105/*i*/ ? HEAP32[buf] :\r\n         HEAPF64[buf++ >> 1]\r\n        );\r\n        ++buf;\r\n      }\r\n      return readEmAsmArgsArray;\r\n    }\r\n  function runEmAsmFunction(code, sigPtr, argbuf) {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    }\r\n  function _emscripten_asm_const_int(code, sigPtr, argbuf) {\r\n      return runEmAsmFunction(code, sigPtr, argbuf);\r\n    }\r\n\r\n  function runMainThreadEmAsm(code, sigPtr, argbuf, sync) {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    }\r\n  function _emscripten_asm_const_int_sync_on_main_thread(code, sigPtr, argbuf) {\r\n      return runMainThreadEmAsm(code, sigPtr, argbuf, 1);\r\n    }\r\n\r\n  function _emscripten_date_now() {\r\n      return Date.now();\r\n    }\r\n\r\n  function withStackSave(f) {\r\n      var stack = stackSave();\r\n      var ret = f();\r\n      stackRestore(stack);\r\n      return ret;\r\n    }\r\n  var JSEvents = {inEventHandler:0,removeAllEventListeners:function() {\r\n        for (var i = JSEvents.eventHandlers.length-1; i >= 0; --i) {\r\n          JSEvents._removeHandler(i);\r\n        }\r\n        JSEvents.eventHandlers = [];\r\n        JSEvents.deferredCalls = [];\r\n      },registerRemoveEventListeners:function() {\r\n        if (!JSEvents.removeEventListenersRegistered) {\r\n          __ATEXIT__.push(JSEvents.removeAllEventListeners);\r\n          JSEvents.removeEventListenersRegistered = true;\r\n        }\r\n      },deferredCalls:[],deferCall:function(targetFunction, precedence, argsList) {\r\n        function arraysHaveEqualContent(arrA, arrB) {\r\n          if (arrA.length != arrB.length) return false;\r\n  \r\n          for (var i in arrA) {\r\n            if (arrA[i] != arrB[i]) return false;\r\n          }\r\n          return true;\r\n        }\r\n        // Test if the given call was already queued, and if so, don't add it again.\r\n        for (var i in JSEvents.deferredCalls) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\r\n            return;\r\n          }\r\n        }\r\n        JSEvents.deferredCalls.push({\r\n          targetFunction: targetFunction,\r\n          precedence: precedence,\r\n          argsList: argsList\r\n        });\r\n  \r\n        JSEvents.deferredCalls.sort(function(x,y) { return x.precedence < y.precedence; });\r\n      },removeDeferredCalls:function(targetFunction) {\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\r\n            JSEvents.deferredCalls.splice(i, 1);\r\n            --i;\r\n          }\r\n        }\r\n      },canPerformEventHandlerRequests:function() {\r\n        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\r\n      },runDeferredCalls:function() {\r\n        if (!JSEvents.canPerformEventHandlerRequests()) {\r\n          return;\r\n        }\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          JSEvents.deferredCalls.splice(i, 1);\r\n          --i;\r\n          call.targetFunction.apply(null, call.argsList);\r\n        }\r\n      },eventHandlers:[],removeAllHandlersOnTarget:function(target, eventTypeString) {\r\n        for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n          if (JSEvents.eventHandlers[i].target == target && \r\n            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\r\n             JSEvents._removeHandler(i--);\r\n           }\r\n        }\r\n      },_removeHandler:function(i) {\r\n        var h = JSEvents.eventHandlers[i];\r\n        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\r\n        JSEvents.eventHandlers.splice(i, 1);\r\n      },registerOrRemoveHandler:function(eventHandler) {\r\n        var jsEventHandler = function jsEventHandler(event) {\r\n          // Increment nesting count for the event handler.\r\n          ++JSEvents.inEventHandler;\r\n          JSEvents.currentEventHandler = eventHandler;\r\n          // Process any old deferred calls the user has placed.\r\n          JSEvents.runDeferredCalls();\r\n          // Process the actual event, calls back to user C code handler.\r\n          eventHandler.handlerFunc(event);\r\n          // Process any new deferred calls that were placed right now from this event handler.\r\n          JSEvents.runDeferredCalls();\r\n          // Out of event handler - restore nesting count.\r\n          --JSEvents.inEventHandler;\r\n        };\r\n        \r\n        if (eventHandler.callbackfunc) {\r\n          eventHandler.eventListenerFunc = jsEventHandler;\r\n          eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\r\n          JSEvents.eventHandlers.push(eventHandler);\r\n          JSEvents.registerRemoveEventListeners();\r\n        } else {\r\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n            if (JSEvents.eventHandlers[i].target == eventHandler.target\r\n             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\r\n               JSEvents._removeHandler(i--);\r\n             }\r\n          }\r\n        }\r\n      },getNodeNameForTarget:function(target) {\r\n        if (!target) return '';\r\n        if (target == window) return '#window';\r\n        if (target == screen) return '#screen';\r\n        return (target && target.nodeName) ? target.nodeName : '';\r\n      },fullscreenEnabled:function() {\r\n        return document.fullscreenEnabled\r\n        // Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.\r\n        // TODO: If Safari at some point ships with unprefixed version, update the version check above.\r\n        || document.webkitFullscreenEnabled\r\n         ;\r\n      }};\r\n  \r\n  function setLetterbox(element, topBottom, leftRight) {\r\n        // Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.\r\n        element.style.paddingLeft = element.style.paddingRight = leftRight + 'px';\r\n        element.style.paddingTop = element.style.paddingBottom = topBottom + 'px';\r\n    }\r\n  \r\n  function hideEverythingExceptGivenElement(onlyVisibleElement) {\r\n      var child = onlyVisibleElement;\r\n      var parent = child.parentNode;\r\n      var hiddenElements = [];\r\n      while (child != document.body) {\r\n        var children = parent.children;\r\n        for (var i = 0; i < children.length; ++i) {\r\n          if (children[i] != child) {\r\n            hiddenElements.push({ node: children[i], displayState: children[i].style.display });\r\n            children[i].style.display = 'none';\r\n          }\r\n        }\r\n        child = parent;\r\n        parent = parent.parentNode;\r\n      }\r\n      return hiddenElements;\r\n    }\r\n  \r\n  var restoreOldWindowedStyle = null;\r\n  \r\n  \r\n  \r\n  function maybeCStringToJsString(cString) {\r\n      // \"cString > 2\" checks if the input is a number, and isn't of the special\r\n      // values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).\r\n      // In other words, if cString > 2 then it's a pointer to a valid place in\r\n      // memory, and points to a C string.\r\n      return cString > 2 ? UTF8ToString(cString) : cString;\r\n    }\r\n  \r\n  var specialHTMLTargets = [0, document, window];\r\n  function findEventTarget(target) {\r\n      target = maybeCStringToJsString(target);\r\n      var domElement = specialHTMLTargets[target] || document.querySelector(target);\r\n      return domElement;\r\n    }\r\n  function findCanvasEventTarget(target) { return findEventTarget(target); }\r\n  function _emscripten_get_canvas_element_size(target, width, height) {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      HEAP32[((width)>>2)] = canvas.width;\r\n      HEAP32[((height)>>2)] = canvas.height;\r\n    }\r\n  \r\n  \r\n  \r\n  function stringToUTF8OnStack(str) {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = stackAlloc(size);\r\n      stringToUTF8(str, ret, size);\r\n      return ret;\r\n    }\r\n  function getCanvasElementSize(target) {\r\n      return withStackSave(function() {\r\n        var w = stackAlloc(8);\r\n        var h = w + 4;\r\n  \r\n        var targetInt = stringToUTF8OnStack(target.id);\r\n        var ret = _emscripten_get_canvas_element_size(targetInt, w, h);\r\n        var size = [HEAP32[((w)>>2)], HEAP32[((h)>>2)]];\r\n        return size;\r\n      });\r\n    }\r\n  \r\n  \r\n  function _emscripten_set_canvas_element_size(target, width, height) {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      return 0;\r\n    }\r\n  \r\n  \r\n  function setCanvasElementSize(target, width, height) {\r\n      if (!target.controlTransferredOffscreen) {\r\n        target.width = width;\r\n        target.height = height;\r\n      } else {\r\n        // This function is being called from high-level JavaScript code instead of asm.js/Wasm,\r\n        // and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.\r\n        withStackSave(function() {\r\n          var targetInt = stringToUTF8OnStack(target.id);\r\n          _emscripten_set_canvas_element_size(targetInt, width, height);\r\n        });\r\n      }\r\n    }\r\n  function registerRestoreOldStyle(canvas) {\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var oldWidth = canvasSize[0];\r\n      var oldHeight = canvasSize[1];\r\n      var oldCssWidth = canvas.style.width;\r\n      var oldCssHeight = canvas.style.height;\r\n      var oldBackgroundColor = canvas.style.backgroundColor; // Chrome reads color from here.\r\n      var oldDocumentBackgroundColor = document.body.style.backgroundColor; // IE11 reads color from here.\r\n      // Firefox always has black background color.\r\n      var oldPaddingLeft = canvas.style.paddingLeft; // Chrome, FF, Safari\r\n      var oldPaddingRight = canvas.style.paddingRight;\r\n      var oldPaddingTop = canvas.style.paddingTop;\r\n      var oldPaddingBottom = canvas.style.paddingBottom;\r\n      var oldMarginLeft = canvas.style.marginLeft; // IE11\r\n      var oldMarginRight = canvas.style.marginRight;\r\n      var oldMarginTop = canvas.style.marginTop;\r\n      var oldMarginBottom = canvas.style.marginBottom;\r\n      var oldDocumentBodyMargin = document.body.style.margin;\r\n      var oldDocumentOverflow = document.documentElement.style.overflow; // Chrome, Firefox\r\n      var oldDocumentScroll = document.body.scroll; // IE\r\n      var oldImageRendering = canvas.style.imageRendering;\r\n  \r\n      function restoreOldStyle() {\r\n        var fullscreenElement = document.fullscreenElement\r\n          || document.webkitFullscreenElement\r\n          ;\r\n        if (!fullscreenElement) {\r\n          document.removeEventListener('fullscreenchange', restoreOldStyle);\r\n  \r\n          // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n          // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n          document.removeEventListener('webkitfullscreenchange', restoreOldStyle);\r\n  \r\n          setCanvasElementSize(canvas, oldWidth, oldHeight);\r\n  \r\n          canvas.style.width = oldCssWidth;\r\n          canvas.style.height = oldCssHeight;\r\n          canvas.style.backgroundColor = oldBackgroundColor; // Chrome\r\n          // IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color\r\n          // before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user\r\n          // had explicitly set so subsequent fullscreen transitions would not set background color properly.\r\n          if (!oldDocumentBackgroundColor) document.body.style.backgroundColor = 'white';\r\n          document.body.style.backgroundColor = oldDocumentBackgroundColor; // IE11\r\n          canvas.style.paddingLeft = oldPaddingLeft; // Chrome, FF, Safari\r\n          canvas.style.paddingRight = oldPaddingRight;\r\n          canvas.style.paddingTop = oldPaddingTop;\r\n          canvas.style.paddingBottom = oldPaddingBottom;\r\n          canvas.style.marginLeft = oldMarginLeft; // IE11\r\n          canvas.style.marginRight = oldMarginRight;\r\n          canvas.style.marginTop = oldMarginTop;\r\n          canvas.style.marginBottom = oldMarginBottom;\r\n          document.body.style.margin = oldDocumentBodyMargin;\r\n          document.documentElement.style.overflow = oldDocumentOverflow; // Chrome, Firefox\r\n          document.body.scroll = oldDocumentScroll; // IE\r\n          canvas.style.imageRendering = oldImageRendering;\r\n          if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, oldWidth, oldHeight);\r\n  \r\n          if (currentFullscreenStrategy.canvasResizedCallback) {\r\n            ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n          }\r\n        }\r\n      }\r\n      document.addEventListener('fullscreenchange', restoreOldStyle);\r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      document.addEventListener('webkitfullscreenchange', restoreOldStyle);\r\n      return restoreOldStyle;\r\n    }\r\n  \r\n  function restoreHiddenElements(hiddenElements) {\r\n      for (var i = 0; i < hiddenElements.length; ++i) {\r\n        hiddenElements[i].node.style.display = hiddenElements[i].displayState;\r\n      }\r\n    }\r\n  \r\n  var currentFullscreenStrategy = {};\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  /** @suppress {checkTypes} */\r\n  function jstoi_q(str) {\r\n      return parseInt(str);\r\n    }\r\n  function softFullscreenResizeWebGLRenderTarget() {\r\n      var dpr = devicePixelRatio;\r\n      var inHiDPIFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode == 2;\r\n      var inAspectRatioFixedFullscreenMode = currentFullscreenStrategy.scaleMode == 2;\r\n      var inPixelPerfectFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode != 0;\r\n      var inCenteredWithoutScalingFullscreenMode = currentFullscreenStrategy.scaleMode == 3;\r\n      var screenWidth = inHiDPIFullscreenMode ? Math.round(innerWidth*dpr) : innerWidth;\r\n      var screenHeight = inHiDPIFullscreenMode ? Math.round(innerHeight*dpr) : innerHeight;\r\n      var w = screenWidth;\r\n      var h = screenHeight;\r\n      var canvas = currentFullscreenStrategy.target;\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var x = canvasSize[0];\r\n      var y = canvasSize[1];\r\n      var topMargin;\r\n  \r\n      if (inAspectRatioFixedFullscreenMode) {\r\n        if (w*y < x*h) h = (w * y / x) | 0;\r\n        else if (w*y > x*h) w = (h * x / y) | 0;\r\n        topMargin = ((screenHeight - h) / 2) | 0;\r\n      }\r\n  \r\n      if (inPixelPerfectFullscreenMode) {\r\n        setCanvasElementSize(canvas, w, h);\r\n        if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, w, h);\r\n      }\r\n  \r\n      // Back to CSS pixels.\r\n      if (inHiDPIFullscreenMode) {\r\n        topMargin /= dpr;\r\n        w /= dpr;\r\n        h /= dpr;\r\n        // Round to nearest 4 digits of precision.\r\n        w = Math.round(w*1e4)/1e4;\r\n        h = Math.round(h*1e4)/1e4;\r\n        topMargin = Math.round(topMargin*1e4)/1e4;\r\n      }\r\n  \r\n      if (inCenteredWithoutScalingFullscreenMode) {\r\n        var t = (innerHeight - jstoi_q(canvas.style.height)) / 2;\r\n        var b = (innerWidth - jstoi_q(canvas.style.width)) / 2;\r\n        setLetterbox(canvas, t, b);\r\n      } else {\r\n        canvas.style.width = w + 'px';\r\n        canvas.style.height = h + 'px';\r\n        var b = (innerWidth - w) / 2;\r\n        setLetterbox(canvas, topMargin, b);\r\n      }\r\n  \r\n      if (!inCenteredWithoutScalingFullscreenMode && currentFullscreenStrategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n      }\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  function getBoundingClientRect(e) {\r\n      return specialHTMLTargets.indexOf(e) < 0 ? e.getBoundingClientRect() : {'left':0,'top':0};\r\n    }\r\n  function JSEvents_resizeCanvasForFullscreen(target, strategy) {\r\n      var restoreOldStyle = registerRestoreOldStyle(target);\r\n      var cssWidth = strategy.softFullscreen ? innerWidth : screen.width;\r\n      var cssHeight = strategy.softFullscreen ? innerHeight : screen.height;\r\n      var rect = getBoundingClientRect(target);\r\n      var windowedCssWidth = rect.width;\r\n      var windowedCssHeight = rect.height;\r\n      var canvasSize = getCanvasElementSize(target);\r\n      var windowedRttWidth = canvasSize[0];\r\n      var windowedRttHeight = canvasSize[1];\r\n  \r\n      if (strategy.scaleMode == 3) {\r\n        setLetterbox(target, (cssHeight - windowedCssHeight) / 2, (cssWidth - windowedCssWidth) / 2);\r\n        cssWidth = windowedCssWidth;\r\n        cssHeight = windowedCssHeight;\r\n      } else if (strategy.scaleMode == 2) {\r\n        if (cssWidth*windowedRttHeight < windowedRttWidth*cssHeight) {\r\n          var desiredCssHeight = windowedRttHeight * cssWidth / windowedRttWidth;\r\n          setLetterbox(target, (cssHeight - desiredCssHeight) / 2, 0);\r\n          cssHeight = desiredCssHeight;\r\n        } else {\r\n          var desiredCssWidth = windowedRttWidth * cssHeight / windowedRttHeight;\r\n          setLetterbox(target, 0, (cssWidth - desiredCssWidth) / 2);\r\n          cssWidth = desiredCssWidth;\r\n        }\r\n      }\r\n  \r\n      // If we are adding padding, must choose a background color or otherwise Chrome will give the\r\n      // padding a default white color. Do it only if user has not customized their own background color.\r\n      if (!target.style.backgroundColor) target.style.backgroundColor = 'black';\r\n      // IE11 does the same, but requires the color to be set in the document body.\r\n      if (!document.body.style.backgroundColor) document.body.style.backgroundColor = 'black'; // IE11\r\n      // Firefox always shows black letterboxes independent of style color.\r\n  \r\n      target.style.width = cssWidth + 'px';\r\n      target.style.height = cssHeight + 'px';\r\n  \r\n      if (strategy.filteringMode == 1) {\r\n        target.style.imageRendering = 'optimizeSpeed';\r\n        target.style.imageRendering = '-moz-crisp-edges';\r\n        target.style.imageRendering = '-o-crisp-edges';\r\n        target.style.imageRendering = '-webkit-optimize-contrast';\r\n        target.style.imageRendering = 'optimize-contrast';\r\n        target.style.imageRendering = 'crisp-edges';\r\n        target.style.imageRendering = 'pixelated';\r\n      }\r\n  \r\n      var dpiScale = (strategy.canvasResolutionScaleMode == 2) ? devicePixelRatio : 1;\r\n      if (strategy.canvasResolutionScaleMode != 0) {\r\n        var newWidth = (cssWidth * dpiScale)|0;\r\n        var newHeight = (cssHeight * dpiScale)|0;\r\n        setCanvasElementSize(target, newWidth, newHeight);\r\n        if (target.GLctxObject) target.GLctxObject.GLctx.viewport(0, 0, newWidth, newHeight);\r\n      }\r\n      return restoreOldStyle;\r\n    }\r\n  \r\n  function _emscripten_enter_soft_fullscreen(target, fullscreenStrategy) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var strategy = {\r\n          scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n          canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n          filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n          canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n          canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)],\r\n          target: target,\r\n          softFullscreen: true\r\n      };\r\n  \r\n      var restoreOldStyle = JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n  \r\n      document.documentElement.style.overflow = 'hidden';  // Firefox, Chrome\r\n      document.body.scroll = \"no\"; // IE11\r\n      document.body.style.margin = '0px'; // Override default document margin area on all browsers.\r\n  \r\n      var hiddenElements = hideEverythingExceptGivenElement(target);\r\n  \r\n      function restoreWindowedState() {\r\n        restoreOldStyle();\r\n        restoreHiddenElements(hiddenElements);\r\n        removeEventListener('resize', softFullscreenResizeWebGLRenderTarget);\r\n        if (strategy.canvasResizedCallback) {\r\n          ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n        }\r\n        currentFullscreenStrategy = 0;\r\n      }\r\n      restoreOldWindowedStyle = restoreWindowedState;\r\n      currentFullscreenStrategy = strategy;\r\n      addEventListener('resize', softFullscreenResizeWebGLRenderTarget);\r\n  \r\n      // Inform the caller that the canvas size has changed.\r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function JSEvents_requestFullscreen(target, strategy) {\r\n      // EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.\r\n      if (strategy.scaleMode != 0 || strategy.canvasResolutionScaleMode != 0) {\r\n        JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n      }\r\n  \r\n      if (target.requestFullscreen) {\r\n        target.requestFullscreen();\r\n      } else if (target.webkitRequestFullscreen) {\r\n        target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n      } else {\r\n        return JSEvents.fullscreenEnabled() ? -3 : -1;\r\n      }\r\n  \r\n      currentFullscreenStrategy = strategy;\r\n  \r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n  \r\n  function _emscripten_exit_fullscreen() {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);\r\n  \r\n      var d = specialHTMLTargets[1];\r\n      if (d.exitFullscreen) {\r\n        d.fullscreenElement && d.exitFullscreen();\r\n      } else if (d.webkitExitFullscreen) {\r\n        d.webkitFullscreenElement && d.webkitExitFullscreen();\r\n      } else {\r\n        return -1;\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  function requestPointerLock(target) {\r\n      if (target.requestPointerLock) {\r\n        target.requestPointerLock();\r\n      } else {\r\n        // document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,\r\n        // or if the whole browser just doesn't support the feature.\r\n        if (document.body.requestPointerLock\r\n          ) {\r\n          return -3;\r\n        }\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n  function _emscripten_exit_pointerlock() {\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(requestPointerLock);\r\n  \r\n      if (document.exitPointerLock) {\r\n        document.exitPointerLock();\r\n      } else {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_exit_soft_fullscreen() {\r\n      if (restoreOldWindowedStyle) restoreOldWindowedStyle();\r\n      restoreOldWindowedStyle = null;\r\n  \r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_get_device_pixel_ratio() {\r\n      return devicePixelRatio;\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_get_element_css_size(target, width, height) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAPF64[((width)>>3)] = rect.width;\r\n      HEAPF64[((height)>>3)] = rect.height;\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  function fillGamepadEventData(eventStruct, e) {\r\n      HEAPF64[((eventStruct)>>3)] = e.timestamp;\r\n      for (var i = 0; i < e.axes.length; ++i) {\r\n        HEAPF64[(((eventStruct+i*8)+(16))>>3)] = e.axes[i];\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i].value;\r\n        } else {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i];\r\n        }\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i].pressed;\r\n        } else {\r\n          // Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:\r\n          /** @suppress {checkTypes} */\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i] == 1;\r\n        }\r\n      }\r\n      HEAP32[(((eventStruct)+(1296))>>2)] = e.connected;\r\n      HEAP32[(((eventStruct)+(1300))>>2)] = e.index;\r\n      HEAP32[(((eventStruct)+(8))>>2)] = e.axes.length;\r\n      HEAP32[(((eventStruct)+(12))>>2)] = e.buttons.length;\r\n      stringToUTF8(e.id, eventStruct + 1304, 64);\r\n      stringToUTF8(e.mapping, eventStruct + 1368, 64);\r\n    }\r\n  function _emscripten_get_gamepad_status(index, gamepadState) {\r\n  \r\n      // INVALID_PARAM is returned on a Gamepad index that never was there.\r\n      if (index < 0 || index >= JSEvents.lastGamepadState.length) return -5;\r\n  \r\n      // NO_DATA is returned on a Gamepad index that was removed.\r\n      // For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.\r\n      // This is because gamepads must keep their original position in the array.\r\n      // For example, removing the first of two gamepads produces [null/undefined/false, gamepad].\r\n      if (!JSEvents.lastGamepadState[index]) return -7;\r\n  \r\n      fillGamepadEventData(gamepadState, JSEvents.lastGamepadState[index]);\r\n      return 0;\r\n    }\r\n\r\n\r\n  function _emscripten_get_num_gamepads() {\r\n      // N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.\r\n      // Otherwise the following line will throw an exception.\r\n      return JSEvents.lastGamepadState.length;\r\n    }\r\n\r\n  function _emscripten_get_screen_size(width, height) {\r\n      HEAP32[((width)>>2)] = screen.width;\r\n      HEAP32[((height)>>2)] = screen.height;\r\n    }\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }\r\n  var _emscripten_glActiveTexture = _glActiveTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glAttachShader(program, shader) {\r\n      GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glAttachShader = _glAttachShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginQuery(target, id) {\r\n      GLctx.beginQuery(target, GL.queries[id]);\r\n    }\r\n  var _emscripten_glBeginQuery = _glBeginQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginQueryEXT(target, id) {\r\n      GLctx.disjointTimerQueryExt['beginQueryEXT'](target, GL.queries[id]);\r\n    }\r\n  var _emscripten_glBeginQueryEXT = _glBeginQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginTransformFeedback(x0) { GLctx.beginTransformFeedback(x0) }\r\n  var _emscripten_glBeginTransformFeedback = _glBeginTransformFeedback;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glBindAttribLocation(program, index, name) {\r\n      GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\r\n    }\r\n  var _emscripten_glBindAttribLocation = _glBindAttribLocation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBuffer(target, buffer) {\r\n      if (target == 0x8892 /*GL_ARRAY_BUFFER*/) {\r\n        GLctx.currentArrayBufferBinding = buffer;\r\n      } else if (target == 0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/) {\r\n        GLctx.currentElementArrayBufferBinding = buffer;\r\n      }\r\n  \r\n      if (target == 0x88EB /*GL_PIXEL_PACK_BUFFER*/) {\r\n        // In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that binding point is non-null to know what is\r\n        // the proper API function to call.\r\n        GLctx.currentPixelPackBufferBinding = buffer;\r\n      } else if (target == 0x88EC /*GL_PIXEL_UNPACK_BUFFER*/) {\r\n        // In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to\r\n        // use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that\r\n        // binding point is non-null to know what is the proper API function to\r\n        // call.\r\n        GLctx.currentPixelUnpackBufferBinding = buffer;\r\n      }\r\n      GLctx.bindBuffer(target, GL.buffers[buffer]);\r\n    }\r\n  var _emscripten_glBindBuffer = _glBindBuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBufferBase(target, index, buffer) {\r\n      GLctx.bindBufferBase(target, index, GL.buffers[buffer]);\r\n    }\r\n  var _emscripten_glBindBufferBase = _glBindBufferBase;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBufferRange(target, index, buffer, offset, ptrsize) {\r\n      GLctx.bindBufferRange(target, index, GL.buffers[buffer], offset, ptrsize);\r\n    }\r\n  var _emscripten_glBindBufferRange = _glBindBufferRange;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindFramebuffer(target, framebuffer) {\r\n  \r\n      GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\r\n  \r\n    }\r\n  var _emscripten_glBindFramebuffer = _glBindFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindRenderbuffer(target, renderbuffer) {\r\n      GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\r\n    }\r\n  var _emscripten_glBindRenderbuffer = _glBindRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindSampler(unit, sampler) {\r\n      GLctx.bindSampler(unit, GL.samplers[sampler]);\r\n    }\r\n  var _emscripten_glBindSampler = _glBindSampler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindTexture(target, texture) {\r\n      GLctx.bindTexture(target, GL.textures[texture]);\r\n    }\r\n  var _emscripten_glBindTexture = _glBindTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindTransformFeedback(target, id) {\r\n      GLctx.bindTransformFeedback(target, GL.transformFeedbacks[id]);\r\n    }\r\n  var _emscripten_glBindTransformFeedback = _glBindTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindVertexArray(vao) {\r\n      GLctx.bindVertexArray(GL.vaos[vao]);\r\n      var ibo = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n      GLctx.currentElementArrayBufferBinding = ibo ? (ibo.name | 0) : 0;\r\n    }\r\n  var _emscripten_glBindVertexArray = _glBindVertexArray;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glBindVertexArrayOES = _glBindVertexArray;\r\n  var _emscripten_glBindVertexArrayOES = _glBindVertexArrayOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendColor(x0, x1, x2, x3) { GLctx.blendColor(x0, x1, x2, x3) }\r\n  var _emscripten_glBlendColor = _glBlendColor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendEquation(x0) { GLctx.blendEquation(x0) }\r\n  var _emscripten_glBlendEquation = _glBlendEquation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendEquationSeparate(x0, x1) { GLctx.blendEquationSeparate(x0, x1) }\r\n  var _emscripten_glBlendEquationSeparate = _glBlendEquationSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }\r\n  var _emscripten_glBlendFunc = _glBlendFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendFuncSeparate(x0, x1, x2, x3) { GLctx.blendFuncSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glBlendFuncSeparate = _glBlendFuncSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) { GLctx.blitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) }\r\n  var _emscripten_glBlitFramebuffer = _glBlitFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBufferData(target, size, data, usage) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        // If size is zero, WebGL would interpret uploading the whole input arraybuffer (starting from given offset), which would\r\n        // not make sense in WebAssembly, so avoid uploading if size is zero. However we must still call bufferData to establish a\r\n        // backing storage of zero bytes.\r\n        if (data && size) {\r\n          GLctx.bufferData(target, HEAPU8, usage, data, size);\r\n        } else {\r\n          GLctx.bufferData(target, size, usage);\r\n        }\r\n      } else {\r\n        // N.b. here first form specifies a heap subarray, second form an integer size, so the ?: code here is polymorphic. It is advised to avoid\r\n        // randomly mixing both uses in calling code, to avoid any potential JS engine JIT issues.\r\n        GLctx.bufferData(target, data ? HEAPU8.subarray(data, data+size) : size, usage);\r\n      }\r\n    }\r\n  var _emscripten_glBufferData = _glBufferData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBufferSubData(target, offset, size, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        size && GLctx.bufferSubData(target, offset, HEAPU8, data, size);\r\n        return;\r\n      }\r\n      GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));\r\n    }\r\n  var _emscripten_glBufferSubData = _glBufferSubData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCheckFramebufferStatus(x0) { return GLctx.checkFramebufferStatus(x0) }\r\n  var _emscripten_glCheckFramebufferStatus = _glCheckFramebufferStatus;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClear(x0) { GLctx.clear(x0) }\r\n  var _emscripten_glClear = _glClear;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferfi(x0, x1, x2, x3) { GLctx.clearBufferfi(x0, x1, x2, x3) }\r\n  var _emscripten_glClearBufferfi = _glClearBufferfi;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferfv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferfv(buffer, drawbuffer, HEAPF32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferfv = _glClearBufferfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferiv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferiv(buffer, drawbuffer, HEAP32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferiv = _glClearBufferiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferuiv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferuiv(buffer, drawbuffer, HEAPU32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferuiv = _glClearBufferuiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }\r\n  var _emscripten_glClearColor = _glClearColor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearDepthf(x0) { GLctx.clearDepth(x0) }\r\n  var _emscripten_glClearDepthf = _glClearDepthf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearStencil(x0) { GLctx.clearStencil(x0) }\r\n  var _emscripten_glClearStencil = _glClearStencil;\r\n\r\n  function convertI32PairToI53(lo, hi) {\r\n      return (lo >>> 0) + hi * 4294967296;\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glClientWaitSync(sync, flags, timeout_low, timeout_high) {\r\n      // WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.\r\n      // In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.\r\n      // Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)\r\n      // See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      return GLctx.clientWaitSync(GL.syncs[sync], flags, timeout);\r\n    }\r\n  var _emscripten_glClientWaitSync = _glClientWaitSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glColorMask(red, green, blue, alpha) {\r\n      GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\r\n    }\r\n  var _emscripten_glColorMask = _glColorMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompileShader(shader) {\r\n      GLctx.compileShader(GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glCompileShader = _glCompileShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data);\r\n        } else {\r\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    }\r\n  var _emscripten_glCompressedTexImage2D = _glCompressedTexImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data);\r\n      } else {\r\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, HEAPU8, data, imageSize);\r\n      }\r\n    }\r\n  var _emscripten_glCompressedTexImage3D = _glCompressedTexImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\r\n        } else {\r\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    }\r\n  var _emscripten_glCompressedTexSubImage2D = _glCompressedTexSubImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\r\n      } else {\r\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, HEAPU8, data, imageSize);\r\n      }\r\n    }\r\n  var _emscripten_glCompressedTexSubImage3D = _glCompressedTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyBufferSubData(x0, x1, x2, x3, x4) { GLctx.copyBufferSubData(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glCopyBufferSubData = _glCopyBufferSubData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\r\n  var _emscripten_glCopyTexImage2D = _glCopyTexImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\r\n  var _emscripten_glCopyTexSubImage2D = _glCopyTexSubImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) { GLctx.copyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) }\r\n  var _emscripten_glCopyTexSubImage3D = _glCopyTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCreateProgram() {\r\n      var id = GL.getNewId(GL.programs);\r\n      var program = GLctx.createProgram();\r\n      // Store additional information needed for each shader program:\r\n      program.name = id;\r\n      // Lazy cache results of glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)\r\n      program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\r\n      program.uniformIdCounter = 1;\r\n      GL.programs[id] = program;\r\n      return id;\r\n    }\r\n  var _emscripten_glCreateProgram = _glCreateProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCreateShader(shaderType) {\r\n      var id = GL.getNewId(GL.shaders);\r\n      GL.shaders[id] = GLctx.createShader(shaderType);\r\n  \r\n      return id;\r\n    }\r\n  var _emscripten_glCreateShader = _glCreateShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCullFace(x0) { GLctx.cullFace(x0) }\r\n  var _emscripten_glCullFace = _glCullFace;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteBuffers(n, buffers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((buffers)+(i*4))>>2)];\r\n        var buffer = GL.buffers[id];\r\n  \r\n        // From spec: \"glDeleteBuffers silently ignores 0's and names that do not\r\n        // correspond to existing buffer objects.\"\r\n        if (!buffer) continue;\r\n  \r\n        GLctx.deleteBuffer(buffer);\r\n        buffer.name = 0;\r\n        GL.buffers[id] = null;\r\n  \r\n        if (id == GLctx.currentArrayBufferBinding) GLctx.currentArrayBufferBinding = 0;\r\n        if (id == GLctx.currentElementArrayBufferBinding) GLctx.currentElementArrayBufferBinding = 0;\r\n        if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\r\n        if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteBuffers = _glDeleteBuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteFramebuffers(n, framebuffers) {\r\n      for (var i = 0; i < n; ++i) {\r\n        var id = HEAP32[(((framebuffers)+(i*4))>>2)];\r\n        var framebuffer = GL.framebuffers[id];\r\n        if (!framebuffer) continue; // GL spec: \"glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects\".\r\n        GLctx.deleteFramebuffer(framebuffer);\r\n        framebuffer.name = 0;\r\n        GL.framebuffers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteFramebuffers = _glDeleteFramebuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteProgram(id) {\r\n      if (!id) return;\r\n      var program = GL.programs[id];\r\n      if (!program) { // glDeleteProgram actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteProgram(program);\r\n      program.name = 0;\r\n      GL.programs[id] = null;\r\n    }\r\n  var _emscripten_glDeleteProgram = _glDeleteProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteQueries(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.deleteQuery(query);\r\n        GL.queries[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteQueries = _glDeleteQueries;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteQueriesEXT(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);\r\n        GL.queries[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteQueriesEXT = _glDeleteQueriesEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteRenderbuffers(n, renderbuffers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];\r\n        var renderbuffer = GL.renderbuffers[id];\r\n        if (!renderbuffer) continue; // GL spec: \"glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects\".\r\n        GLctx.deleteRenderbuffer(renderbuffer);\r\n        renderbuffer.name = 0;\r\n        GL.renderbuffers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteRenderbuffers = _glDeleteRenderbuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteSamplers(n, samplers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((samplers)+(i*4))>>2)];\r\n        var sampler = GL.samplers[id];\r\n        if (!sampler) continue;\r\n        GLctx.deleteSampler(sampler);\r\n        sampler.name = 0;\r\n        GL.samplers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteSamplers = _glDeleteSamplers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteShader(id) {\r\n      if (!id) return;\r\n      var shader = GL.shaders[id];\r\n      if (!shader) { // glDeleteShader actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteShader(shader);\r\n      GL.shaders[id] = null;\r\n    }\r\n  var _emscripten_glDeleteShader = _glDeleteShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteSync(id) {\r\n      if (!id) return;\r\n      var sync = GL.syncs[id];\r\n      if (!sync) { // glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteSync(sync);\r\n      sync.name = 0;\r\n      GL.syncs[id] = null;\r\n    }\r\n  var _emscripten_glDeleteSync = _glDeleteSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteTextures(n, textures) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((textures)+(i*4))>>2)];\r\n        var texture = GL.textures[id];\r\n        if (!texture) continue; // GL spec: \"glDeleteTextures silently ignores 0s and names that do not correspond to existing textures\".\r\n        GLctx.deleteTexture(texture);\r\n        texture.name = 0;\r\n        GL.textures[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteTextures = _glDeleteTextures;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteTransformFeedbacks(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var transformFeedback = GL.transformFeedbacks[id];\r\n        if (!transformFeedback) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.deleteTransformFeedback(transformFeedback);\r\n        transformFeedback.name = 0;\r\n        GL.transformFeedbacks[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteTransformFeedbacks = _glDeleteTransformFeedbacks;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteVertexArrays(n, vaos) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\r\n        GLctx.deleteVertexArray(GL.vaos[id]);\r\n        GL.vaos[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteVertexArrays = _glDeleteVertexArrays;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDeleteVertexArraysOES = _glDeleteVertexArrays;\r\n  var _emscripten_glDeleteVertexArraysOES = _glDeleteVertexArraysOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthFunc(x0) { GLctx.depthFunc(x0) }\r\n  var _emscripten_glDepthFunc = _glDepthFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthMask(flag) {\r\n      GLctx.depthMask(!!flag);\r\n    }\r\n  var _emscripten_glDepthMask = _glDepthMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthRangef(x0, x1) { GLctx.depthRange(x0, x1) }\r\n  var _emscripten_glDepthRangef = _glDepthRangef;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDetachShader(program, shader) {\r\n      GLctx.detachShader(GL.programs[program], GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glDetachShader = _glDetachShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDisable(x0) { GLctx.disable(x0) }\r\n  var _emscripten_glDisable = _glDisable;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDisableVertexAttribArray(index) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = false;\r\n      GLctx.disableVertexAttribArray(index);\r\n    }\r\n  var _emscripten_glDisableVertexAttribArray = _glDisableVertexAttribArray;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawArrays(mode, first, count) {\r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(first + count);\r\n  \r\n      GLctx.drawArrays(mode, first, count);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings();\r\n    }\r\n  var _emscripten_glDrawArrays = _glDrawArrays;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawArraysInstanced(mode, first, count, primcount) {\r\n      GLctx.drawArraysInstanced(mode, first, count, primcount);\r\n    }\r\n  var _emscripten_glDrawArraysInstanced = _glDrawArraysInstanced;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedANGLE = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedANGLE = _glDrawArraysInstancedANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedARB = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedARB = _glDrawArraysInstancedARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedEXT = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedEXT = _glDrawArraysInstancedEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedNV = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedNV = _glDrawArraysInstancedNV;\r\n\r\n  var tempFixedLengthArray = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glDrawBuffers(n, bufs) {\r\n  \r\n      var bufArray = tempFixedLengthArray[n];\r\n      for (var i = 0; i < n; i++) {\r\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.drawBuffers(bufArray);\r\n    }\r\n  var _emscripten_glDrawBuffers = _glDrawBuffers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffersEXT = _glDrawBuffers;\r\n  var _emscripten_glDrawBuffersEXT = _glDrawBuffersEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffersWEBGL = _glDrawBuffers;\r\n  var _emscripten_glDrawBuffersWEBGL = _glDrawBuffersWEBGL;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawElements(mode, count, type, indices) {\r\n      var buf;\r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        var size = GL.calcBufLength(1, type, 0, count);\r\n        buf = GL.getTempIndexBuffer(size);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, buf);\r\n        GLctx.bufferSubData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/,\r\n                                 0,\r\n                                 HEAPU8.subarray(indices, indices + size));\r\n        // the index is now 0\r\n        indices = 0;\r\n      }\r\n  \r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      GLctx.drawElements(mode, count, type, indices);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n      }\r\n    }\r\n  var _emscripten_glDrawElements = _glDrawElements;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawElementsInstanced(mode, count, type, indices, primcount) {\r\n      GLctx.drawElementsInstanced(mode, count, type, indices, primcount);\r\n    }\r\n  var _emscripten_glDrawElementsInstanced = _glDrawElementsInstanced;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedANGLE = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedANGLE = _glDrawElementsInstancedANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedARB = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedARB = _glDrawElementsInstancedARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedEXT = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedEXT = _glDrawElementsInstancedEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedNV = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedNV = _glDrawElementsInstancedNV;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawRangeElements(mode, start, end, count, type, indices) {\r\n      // TODO: This should be a trivial pass-though function registered at the bottom of this page as\r\n      // glFuncs[6][1] += ' drawRangeElements';\r\n      // but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,\r\n      // we work around by ignoring the range.\r\n      _glDrawElements(mode, count, type, indices);\r\n    }\r\n  var _emscripten_glDrawRangeElements = _glDrawRangeElements;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEnable(x0) { GLctx.enable(x0) }\r\n  var _emscripten_glEnable = _glEnable;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEnableVertexAttribArray(index) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = true;\r\n      GLctx.enableVertexAttribArray(index);\r\n    }\r\n  var _emscripten_glEnableVertexAttribArray = _glEnableVertexAttribArray;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndQuery(x0) { GLctx.endQuery(x0) }\r\n  var _emscripten_glEndQuery = _glEndQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndQueryEXT(target) {\r\n      GLctx.disjointTimerQueryExt['endQueryEXT'](target);\r\n    }\r\n  var _emscripten_glEndQueryEXT = _glEndQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndTransformFeedback() { GLctx.endTransformFeedback() }\r\n  var _emscripten_glEndTransformFeedback = _glEndTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFenceSync(condition, flags) {\r\n      var sync = GLctx.fenceSync(condition, flags);\r\n      if (sync) {\r\n        var id = GL.getNewId(GL.syncs);\r\n        sync.name = id;\r\n        GL.syncs[id] = sync;\r\n        return id;\r\n      }\r\n      return 0; // Failed to create a sync object\r\n    }\r\n  var _emscripten_glFenceSync = _glFenceSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFinish() { GLctx.finish() }\r\n  var _emscripten_glFinish = _glFinish;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFlush() { GLctx.flush() }\r\n  var _emscripten_glFlush = _glFlush;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer) {\r\n      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,\r\n                                         GL.renderbuffers[renderbuffer]);\r\n    }\r\n  var _emscripten_glFramebufferRenderbuffer = _glFramebufferRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferTexture2D(target, attachment, textarget, texture, level) {\r\n      GLctx.framebufferTexture2D(target, attachment, textarget,\r\n                                      GL.textures[texture], level);\r\n    }\r\n  var _emscripten_glFramebufferTexture2D = _glFramebufferTexture2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferTextureLayer(target, attachment, texture, level, layer) {\r\n      GLctx.framebufferTextureLayer(target, attachment, GL.textures[texture], level, layer);\r\n    }\r\n  var _emscripten_glFramebufferTextureLayer = _glFramebufferTextureLayer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFrontFace(x0) { GLctx.frontFace(x0) }\r\n  var _emscripten_glFrontFace = _glFrontFace;\r\n\r\n  function __glGenObject(n, buffers, createFunction, objectTable\r\n      ) {\r\n      for (var i = 0; i < n; i++) {\r\n        var buffer = GLctx[createFunction]();\r\n        var id = buffer && GL.getNewId(objectTable);\r\n        if (buffer) {\r\n          buffer.name = id;\r\n          objectTable[id] = buffer;\r\n        } else {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n        }\r\n        HEAP32[(((buffers)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenBuffers(n, buffers) {\r\n      __glGenObject(n, buffers, 'createBuffer', GL.buffers\r\n        );\r\n    }\r\n  var _emscripten_glGenBuffers = _glGenBuffers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenFramebuffers(n, ids) {\r\n      __glGenObject(n, ids, 'createFramebuffer', GL.framebuffers\r\n        );\r\n    }\r\n  var _emscripten_glGenFramebuffers = _glGenFramebuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenQueries(n, ids) {\r\n      __glGenObject(n, ids, 'createQuery', GL.queries\r\n        );\r\n    }\r\n  var _emscripten_glGenQueries = _glGenQueries;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenQueriesEXT(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var query = GLctx.disjointTimerQueryExt['createQueryEXT']();\r\n        if (!query) {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n          while (i < n) HEAP32[(((ids)+(i++*4))>>2)] = 0;\r\n          return;\r\n        }\r\n        var id = GL.getNewId(GL.queries);\r\n        query.name = id;\r\n        GL.queries[id] = query;\r\n        HEAP32[(((ids)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  var _emscripten_glGenQueriesEXT = _glGenQueriesEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenRenderbuffers(n, renderbuffers) {\r\n      __glGenObject(n, renderbuffers, 'createRenderbuffer', GL.renderbuffers\r\n        );\r\n    }\r\n  var _emscripten_glGenRenderbuffers = _glGenRenderbuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenSamplers(n, samplers) {\r\n      __glGenObject(n, samplers, 'createSampler', GL.samplers\r\n        );\r\n    }\r\n  var _emscripten_glGenSamplers = _glGenSamplers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenTextures(n, textures) {\r\n      __glGenObject(n, textures, 'createTexture', GL.textures\r\n        );\r\n    }\r\n  var _emscripten_glGenTextures = _glGenTextures;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenTransformFeedbacks(n, ids) {\r\n      __glGenObject(n, ids, 'createTransformFeedback', GL.transformFeedbacks\r\n        );\r\n    }\r\n  var _emscripten_glGenTransformFeedbacks = _glGenTransformFeedbacks;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenVertexArrays(n, arrays) {\r\n      __glGenObject(n, arrays, 'createVertexArray', GL.vaos\r\n        );\r\n    }\r\n  var _emscripten_glGenVertexArrays = _glGenVertexArrays;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGenVertexArraysOES = _glGenVertexArrays;\r\n  var _emscripten_glGenVertexArraysOES = _glGenVertexArraysOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenerateMipmap(x0) { GLctx.generateMipmap(x0) }\r\n  var _emscripten_glGenerateMipmap = _glGenerateMipmap;\r\n\r\n  \r\n  function __glGetActiveAttribOrUniform(funcName, program, index, bufSize, length, size, type, name) {\r\n      program = GL.programs[program];\r\n      var info = GLctx[funcName](program, index);\r\n      if (info) { // If an error occurs, nothing will be written to length, size and type and name.\r\n        var numBytesWrittenExclNull = name && stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n        if (size) HEAP32[((size)>>2)] = info.size;\r\n        if (type) HEAP32[((type)>>2)] = info.type;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveAttrib(program, index, bufSize, length, size, type, name) {\r\n      __glGetActiveAttribOrUniform('getActiveAttrib', program, index, bufSize, length, size, type, name);\r\n    }\r\n  var _emscripten_glGetActiveAttrib = _glGetActiveAttrib;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniform(program, index, bufSize, length, size, type, name) {\r\n      __glGetActiveAttribOrUniform('getActiveUniform', program, index, bufSize, length, size, type, name);\r\n    }\r\n  var _emscripten_glGetActiveUniform = _glGetActiveUniform;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName) {\r\n      program = GL.programs[program];\r\n  \r\n      var result = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\r\n      if (!result) return; // If an error occurs, nothing will be written to uniformBlockName or length.\r\n      if (uniformBlockName && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(result, uniformBlockName, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformBlockName = _glGetActiveUniformBlockName;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8A41 /* GL_UNIFORM_BLOCK_NAME_LENGTH */) {\r\n        var name = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\r\n        HEAP32[((params)>>2)] = name.length+1;\r\n        return;\r\n      }\r\n  \r\n      var result = GLctx.getActiveUniformBlockParameter(program, uniformBlockIndex, pname);\r\n      if (result === null) return; // If an error occurs, nothing should be written to params.\r\n      if (pname == 0x8A43 /*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/) {\r\n        for (var i = 0; i < result.length; i++) {\r\n          HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n        }\r\n      } else {\r\n        HEAP32[((params)>>2)] = result;\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformBlockiv = _glGetActiveUniformBlockiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && uniformIndices == 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var ids = [];\r\n      for (var i = 0; i < uniformCount; i++) {\r\n        ids.push(HEAP32[(((uniformIndices)+(i*4))>>2)]);\r\n      }\r\n  \r\n      var result = GLctx.getActiveUniforms(program, ids, pname);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to params.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformsiv = _glGetActiveUniformsiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetAttachedShaders(program, maxCount, count, shaders) {\r\n      var result = GLctx.getAttachedShaders(GL.programs[program]);\r\n      var len = result.length;\r\n      if (len > maxCount) {\r\n        len = maxCount;\r\n      }\r\n      HEAP32[((count)>>2)] = len;\r\n      for (var i = 0; i < len; ++i) {\r\n        var id = GL.shaders.indexOf(result[i]);\r\n        HEAP32[(((shaders)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  var _emscripten_glGetAttachedShaders = _glGetAttachedShaders;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetAttribLocation(program, name) {\r\n      return GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\r\n    }\r\n  var _emscripten_glGetAttribLocation = _glGetAttribLocation;\r\n\r\n  function writeI53ToI64(ptr, num) {\r\n      HEAPU32[ptr>>2] = num;\r\n      HEAPU32[ptr+4>>2] = (num - HEAPU32[ptr>>2])/4294967296;\r\n    }\r\n  \r\n  function emscriptenWebGLGet(name_, p, type) {\r\n      // Guard against user passing a null pointer.\r\n      // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.\r\n      // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but\r\n      // better to report an error instead of doing anything random.\r\n      if (!p) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = undefined;\r\n      switch (name_) { // Handle a few trivial GLES values\r\n        case 0x8DFA: // GL_SHADER_COMPILER\r\n          ret = 1;\r\n          break;\r\n        case 0x8DF8: // GL_SHADER_BINARY_FORMATS\r\n          if (type != 0 && type != 1) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n          }\r\n          return; // Do not write anything to the out pointer, since no binary formats are supported.\r\n        case 0x87FE: // GL_NUM_PROGRAM_BINARY_FORMATS\r\n        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS\r\n          ret = 0;\r\n          break;\r\n        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS\r\n          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),\r\n          // so implement it ourselves to allow C++ GLES2 code get the length.\r\n          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);\r\n          ret = formats ? formats.length : 0;\r\n          break;\r\n  \r\n        case 0x821D: // GL_NUM_EXTENSIONS\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n            return;\r\n          }\r\n          // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          var exts = GLctx.getSupportedExtensions() || [];\r\n          ret = 2 * exts.length; // each extension is duplicated, first in unprefixed WebGL form, and then a second time with \"GL_\" prefix.\r\n          break;\r\n        case 0x821B: // GL_MAJOR_VERSION\r\n        case 0x821C: // GL_MINOR_VERSION\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          ret = name_ == 0x821B ? 3 : 0; // return version 3.0\r\n          break;\r\n      }\r\n  \r\n      if (ret === undefined) {\r\n        var result = GLctx.getParameter(name_);\r\n        switch (typeof result) {\r\n          case \"number\":\r\n            ret = result;\r\n            break;\r\n          case \"boolean\":\r\n            ret = result ? 1 : 0;\r\n            break;\r\n          case \"string\":\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          case \"object\":\r\n            if (result === null) {\r\n              // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise\r\n              // can mean an invalid name_, which we need to report as an error\r\n              switch (name_) {\r\n                case 0x8894: // ARRAY_BUFFER_BINDING\r\n                case 0x8B8D: // CURRENT_PROGRAM\r\n                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING\r\n                case 0x8CA6: // FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING\r\n                case 0x8CA7: // RENDERBUFFER_BINDING\r\n                case 0x8069: // TEXTURE_BINDING_2D\r\n                case 0x85B5: // WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES\r\n                case 0x8F36: // COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER\r\n                case 0x8F37: // COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER\r\n                case 0x88ED: // PIXEL_PACK_BUFFER_BINDING\r\n                case 0x88EF: // PIXEL_UNPACK_BUFFER_BINDING\r\n                case 0x8CAA: // READ_FRAMEBUFFER_BINDING\r\n                case 0x8919: // SAMPLER_BINDING\r\n                case 0x8C1D: // TEXTURE_BINDING_2D_ARRAY\r\n                case 0x806A: // TEXTURE_BINDING_3D\r\n                case 0x8E25: // TRANSFORM_FEEDBACK_BINDING\r\n                case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n                case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP\r\n                  ret = 0;\r\n                  break;\r\n                }\r\n                default: {\r\n                  GL.recordError(0x500); // GL_INVALID_ENUM\r\n                  return;\r\n                }\r\n              }\r\n            } else if (result instanceof Float32Array ||\r\n                       result instanceof Uint32Array ||\r\n                       result instanceof Int32Array ||\r\n                       result instanceof Array) {\r\n              for (var i = 0; i < result.length; ++i) {\r\n                switch (type) {\r\n                  case 0: HEAP32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 2: HEAPF32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 4: HEAP8[(((p)+(i))>>0)] = result[i] ? 1 : 0; break;\r\n                }\r\n              }\r\n              return;\r\n            } else {\r\n              try {\r\n                ret = result.name | 0;\r\n              } catch(e) {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                err('GL_INVALID_ENUM in glGet' + type + 'v: Unknown object returned from WebGL getParameter(' + name_ + ')! (error: ' + e + ')');\r\n                return;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            err('GL_INVALID_ENUM in glGet' + type + 'v: Native code calling glGet' + type + 'v(' + name_ + ') and it returns ' + result + ' of type ' + typeof(result) + '!');\r\n            return;\r\n        }\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(p, ret); break;\r\n        case 0: HEAP32[((p)>>2)] = ret; break;\r\n        case 2:   HEAPF32[((p)>>2)] = ret; break;\r\n        case 4: HEAP8[((p)>>0)] = ret ? 1 : 0; break;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetBooleanv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 4);\r\n    }\r\n  var _emscripten_glGetBooleanv = _glGetBooleanv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetBufferParameteri64v(target, value, data) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      writeI53ToI64(data, GLctx.getBufferParameter(target, value));\r\n    }\r\n  var _emscripten_glGetBufferParameteri64v = _glGetBufferParameteri64v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetBufferParameteriv(target, value, data) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((data)>>2)] = GLctx.getBufferParameter(target, value);\r\n    }\r\n  var _emscripten_glGetBufferParameteriv = _glGetBufferParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetError() {\r\n      var error = GLctx.getError() || GL.lastError;\r\n      GL.lastError = 0/*GL_NO_ERROR*/;\r\n      return error;\r\n    }\r\n  var _emscripten_glGetError = _glGetError;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetFloatv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 2);\r\n    }\r\n  var _emscripten_glGetFloatv = _glGetFloatv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetFragDataLocation(program, name) {\r\n      return GLctx.getFragDataLocation(GL.programs[program], UTF8ToString(name));\r\n    }\r\n  var _emscripten_glGetFragDataLocation = _glGetFragDataLocation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetFramebufferAttachmentParameteriv(target, attachment, pname, params) {\r\n      var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\r\n      if (result instanceof WebGLRenderbuffer ||\r\n          result instanceof WebGLTexture) {\r\n        result = result.name | 0;\r\n      }\r\n      HEAP32[((params)>>2)] = result;\r\n    }\r\n  var _emscripten_glGetFramebufferAttachmentParameteriv = _glGetFramebufferAttachmentParameteriv;\r\n\r\n  function emscriptenWebGLGetIndexed(target, index, data, type) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var result = GLctx.getIndexedParameter(target, index);\r\n      var ret;\r\n      switch (typeof result) {\r\n        case 'boolean':\r\n          ret = result ? 1 : 0;\r\n          break;\r\n        case 'number':\r\n          ret = result;\r\n          break;\r\n        case 'object':\r\n          if (result === null) {\r\n            switch (target) {\r\n              case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n              case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                ret = 0;\r\n                break;\r\n              default: {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                return;\r\n              }\r\n            }\r\n          } else if (result instanceof WebGLBuffer) {\r\n            ret = result.name | 0;\r\n          } else {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          GL.recordError(0x500); // GL_INVALID_ENUM\r\n          return;\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(data, ret); break;\r\n        case 0: HEAP32[((data)>>2)] = ret; break;\r\n        case 2: HEAPF32[((data)>>2)] = ret; break;\r\n        case 4: HEAP8[((data)>>0)] = ret ? 1 : 0; break;\r\n        default: throw 'internal emscriptenWebGLGetIndexed() error, bad type: ' + type;\r\n      }\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glGetInteger64i_v(target, index, data) {\r\n      emscriptenWebGLGetIndexed(target, index, data, 1);\r\n    }\r\n  var _emscripten_glGetInteger64i_v = _glGetInteger64i_v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetInteger64v(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 1);\r\n    }\r\n  var _emscripten_glGetInteger64v = _glGetInteger64v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetIntegeri_v(target, index, data) {\r\n      emscriptenWebGLGetIndexed(target, index, data, 0);\r\n    }\r\n  var _emscripten_glGetIntegeri_v = _glGetIntegeri_v;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetIntegerv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 0);\r\n    }\r\n  var _emscripten_glGetIntegerv = _glGetIntegerv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetInternalformativ(target, internalformat, pname, bufSize, params) {\r\n      if (bufSize < 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getInternalformatParameter(target, internalformat, pname);\r\n      if (ret === null) return;\r\n      for (var i = 0; i < ret.length && i < bufSize; ++i) {\r\n        HEAP32[(((params)+(i*4))>>2)] = ret[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetInternalformativ = _glGetInternalformativ;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramBinary(program, bufSize, length, binaryFormat, binary) {\r\n      GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n    }\r\n  var _emscripten_glGetProgramBinary = _glGetProgramBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramInfoLog(program, maxLength, length, infoLog) {\r\n      var log = GLctx.getProgramInfoLog(GL.programs[program]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetProgramInfoLog = _glGetProgramInfoLog;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramiv(program, pname, p) {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      if (program >= GL.counter) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getProgramInfoLog(program);\r\n        if (log === null) log = '(unknown error)';\r\n        HEAP32[((p)>>2)] = log.length + 1;\r\n      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\r\n        if (!program.maxUniformLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n            program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformLength;\r\n      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\r\n        if (!program.maxAttributeLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/); ++i) {\r\n            program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxAttributeLength;\r\n      } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\r\n        if (!program.maxUniformBlockNameLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/); ++i) {\r\n            program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformBlockNameLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getProgramParameter(program, pname);\r\n      }\r\n    }\r\n  var _emscripten_glGetProgramiv = _glGetProgramiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjecti64vEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param;\r\n      if (GL.currentContext.version < 2)\r\n      {\r\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      }\r\n      else {\r\n        param = GLctx.getQueryParameter(query, pname);\r\n      }\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      writeI53ToI64(params, ret);\r\n    }\r\n  var _emscripten_glGetQueryObjecti64vEXT = _glGetQueryObjecti64vEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjectivEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n  var _emscripten_glGetQueryObjectivEXT = _glGetQueryObjectivEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectui64vEXT = _glGetQueryObjecti64vEXT;\r\n  var _emscripten_glGetQueryObjectui64vEXT = _glGetQueryObjectui64vEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjectuiv(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.getQueryParameter(query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n  var _emscripten_glGetQueryObjectuiv = _glGetQueryObjectuiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectuivEXT = _glGetQueryObjectivEXT;\r\n  var _emscripten_glGetQueryObjectuivEXT = _glGetQueryObjectuivEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryiv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getQuery(target, pname);\r\n    }\r\n  var _emscripten_glGetQueryiv = _glGetQueryiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryivEXT(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.disjointTimerQueryExt['getQueryEXT'](target, pname);\r\n    }\r\n  var _emscripten_glGetQueryivEXT = _glGetQueryivEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetRenderbufferParameteriv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getRenderbufferParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetRenderbufferParameteriv = _glGetRenderbufferParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSamplerParameterfv(sampler, pname, params) {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\r\n    }\r\n  var _emscripten_glGetSamplerParameterfv = _glGetSamplerParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSamplerParameteriv(sampler, pname, params) {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\r\n    }\r\n  var _emscripten_glGetSamplerParameteriv = _glGetSamplerParameteriv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderInfoLog(shader, maxLength, length, infoLog) {\r\n      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetShaderInfoLog = _glGetShaderInfoLog;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderPrecisionFormat(shaderType, precisionType, range, precision) {\r\n      var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\r\n      HEAP32[((range)>>2)] = result.rangeMin;\r\n      HEAP32[(((range)+(4))>>2)] = result.rangeMax;\r\n      HEAP32[((precision)>>2)] = result.precision;\r\n    }\r\n  var _emscripten_glGetShaderPrecisionFormat = _glGetShaderPrecisionFormat;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderSource(shader, bufSize, length, source) {\r\n      var result = GLctx.getShaderSource(GL.shaders[shader]);\r\n      if (!result) return; // If an error occurs, nothing will be written to length or source.\r\n      var numBytesWrittenExclNull = (bufSize > 0 && source) ? stringToUTF8(result, source, bufSize) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetShaderSource = _glGetShaderSource;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderiv(shader, pname, p) {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n        if (log === null) log = '(unknown error)';\r\n        // The GLES2 specification says that if the shader has an empty info log,\r\n        // a value of 0 is returned. Otherwise the log has a null char appended.\r\n        // (An empty string is falsey, so we can just check that instead of\r\n        // looking at log.length.)\r\n        var logLength = log ? log.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = logLength;\r\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\r\n        var source = GLctx.getShaderSource(GL.shaders[shader]);\r\n        // source may be a null, or the empty string, both of which are falsey\r\n        // values that we report a 0 length for.\r\n        var sourceLength = source ? source.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = sourceLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getShaderParameter(GL.shaders[shader], pname);\r\n      }\r\n    }\r\n  var _emscripten_glGetShaderiv = _glGetShaderiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetString(name_) {\r\n      var ret = GL.stringCache[name_];\r\n      if (!ret) {\r\n        switch (name_) {\r\n          case 0x1F03 /* GL_EXTENSIONS */:\r\n            var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n            exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\r\n            ret = stringToNewUTF8(exts.join(' '));\r\n            break;\r\n          case 0x1F00 /* GL_VENDOR */:\r\n          case 0x1F01 /* GL_RENDERER */:\r\n          case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\r\n          case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\r\n            var s = GLctx.getParameter(name_);\r\n            if (!s) {\r\n              GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            }\r\n            ret = s && stringToNewUTF8(s);\r\n            break;\r\n  \r\n          case 0x1F02 /* GL_VERSION */:\r\n            var glVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\r\n            // return GLES version string corresponding to the version of the WebGL context\r\n            if (GL.currentContext.version >= 2) glVersion = 'OpenGL ES 3.0 (' + glVersion + ')';\r\n            else\r\n            {\r\n              glVersion = 'OpenGL ES 2.0 (' + glVersion + ')';\r\n            }\r\n            ret = stringToNewUTF8(glVersion);\r\n            break;\r\n          case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\r\n            var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\r\n            // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\r\n            var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\r\n            var ver_num = glslVersion.match(ver_re);\r\n            if (ver_num !== null) {\r\n              if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\r\n              glslVersion = 'OpenGL ES GLSL ES ' + ver_num[1] + ' (' + glslVersion + ')';\r\n            }\r\n            ret = stringToNewUTF8(glslVersion);\r\n            break;\r\n          default:\r\n            GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            // fall through\r\n        }\r\n        GL.stringCache[name_] = ret;\r\n      }\r\n      return ret;\r\n    }\r\n  var _emscripten_glGetString = _glGetString;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetStringi(name, index) {\r\n      if (GL.currentContext.version < 2) {\r\n        GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n        return 0;\r\n      }\r\n      var stringiCache = GL.stringiCache[name];\r\n      if (stringiCache) {\r\n        if (index < 0 || index >= stringiCache.length) {\r\n          GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n          return 0;\r\n        }\r\n        return stringiCache[index];\r\n      }\r\n      switch (name) {\r\n        case 0x1F03 /* GL_EXTENSIONS */:\r\n          var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\r\n          exts = exts.map(function(e) { return stringToNewUTF8(e); });\r\n  \r\n          stringiCache = GL.stringiCache[name] = exts;\r\n          if (index < 0 || index >= stringiCache.length) {\r\n            GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n            return 0;\r\n          }\r\n          return stringiCache[index];\r\n        default:\r\n          GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n          return 0;\r\n      }\r\n    }\r\n  var _emscripten_glGetStringi = _glGetStringi;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSynciv(sync, pname, bufSize, length, values) {\r\n      if (bufSize < 0) {\r\n        // GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,\r\n        // so raise GL_INVALID_VALUE here as well.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!values) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getSyncParameter(GL.syncs[sync], pname);\r\n      if (ret !== null) {\r\n        HEAP32[((values)>>2)] = ret;\r\n        if (length) HEAP32[((length)>>2)] = 1; // Report a single value outputted.\r\n      }\r\n    }\r\n  var _emscripten_glGetSynciv = _glGetSynciv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTexParameterfv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetTexParameterfv = _glGetTexParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTexParameteriv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetTexParameteriv = _glGetTexParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name) {\r\n      program = GL.programs[program];\r\n      var info = GLctx.getTransformFeedbackVarying(program, index);\r\n      if (!info) return; // If an error occurred, the return parameters length, size, type and name will be unmodified.\r\n  \r\n      if (name && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n  \r\n      if (size) HEAP32[((size)>>2)] = info.size;\r\n      if (type) HEAP32[((type)>>2)] = info.type;\r\n    }\r\n  var _emscripten_glGetTransformFeedbackVarying = _glGetTransformFeedbackVarying;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformBlockIndex(program, uniformBlockName) {\r\n      return GLctx.getUniformBlockIndex(GL.programs[program], UTF8ToString(uniformBlockName));\r\n    }\r\n  var _emscripten_glGetUniformBlockIndex = _glGetUniformBlockIndex;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformIndices(program, uniformCount, uniformNames, uniformIndices) {\r\n      if (!uniformIndices) {\r\n        // GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense\r\n        // if uniformIndices == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && (uniformNames == 0 || uniformIndices == 0)) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var names = [];\r\n      for (var i = 0; i < uniformCount; i++)\r\n        names.push(UTF8ToString(HEAP32[(((uniformNames)+(i*4))>>2)]));\r\n  \r\n      var result = GLctx.getUniformIndices(program, names);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to uniformIndices.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((uniformIndices)+(i*4))>>2)] = result[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetUniformIndices = _glGetUniformIndices;\r\n\r\n  \r\n  /** @noinline */\r\n  function webglGetLeftBracePos(name) {\r\n      return name.slice(-1) == ']' && name.lastIndexOf('[');\r\n    }\r\n  \r\n  function webglPrepareUniformLocationsBeforeFirstUse(program) {\r\n      var uniformLocsById = program.uniformLocsById, // Maps GLuint -> WebGLUniformLocation\r\n        uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, // Maps name -> [uniform array length, GLuint]\r\n        i, j;\r\n  \r\n      // On the first time invocation of glGetUniformLocation on this shader program:\r\n      // initialize cache data structures and discover which uniforms are arrays.\r\n      if (!uniformLocsById) {\r\n        // maps GLint integer locations to WebGLUniformLocations\r\n        program.uniformLocsById = uniformLocsById = {};\r\n        // maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations\r\n        program.uniformArrayNamesById = {};\r\n  \r\n        for (i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n          var u = GLctx.getActiveUniform(program, i);\r\n          var nm = u.name;\r\n          var sz = u.size;\r\n          var lb = webglGetLeftBracePos(nm);\r\n          var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\r\n  \r\n          // Assign a new location.\r\n          var id = program.uniformIdCounter;\r\n          program.uniformIdCounter += sz;\r\n          // Eagerly get the location of the uniformArray[0] base element.\r\n          // The remaining indices >0 will be left for lazy evaluation to\r\n          // improve performance. Those may never be needed to fetch, if the\r\n          // application fills arrays always in full starting from the first\r\n          // element of the array.\r\n          uniformSizeAndIdsByName[arrayName] = [sz, id];\r\n  \r\n          // Store placeholder integers in place that highlight that these\r\n          // >0 index locations are array indices pending population.\r\n          for(j = 0; j < sz; ++j) {\r\n            uniformLocsById[id] = j;\r\n            program.uniformArrayNamesById[id++] = arrayName;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformLocation(program, name) {\r\n  \r\n      name = UTF8ToString(name);\r\n  \r\n      if (program = GL.programs[program]) {\r\n        webglPrepareUniformLocationsBeforeFirstUse(program);\r\n        var uniformLocsById = program.uniformLocsById; // Maps GLuint -> WebGLUniformLocation\r\n        var arrayIndex = 0;\r\n        var uniformBaseName = name;\r\n  \r\n        // Invariant: when populating integer IDs for uniform locations, we must maintain the precondition that\r\n        // arrays reside in contiguous addresses, i.e. for a 'vec4 colors[10];', colors[4] must be at location colors[0]+4.\r\n        // However, user might call glGetUniformLocation(program, \"colors\") for an array, so we cannot discover based on the user\r\n        // input arguments whether the uniform we are dealing with is an array. The only way to discover which uniforms are arrays\r\n        // is to enumerate over all the active uniforms in the program.\r\n        var leftBrace = webglGetLeftBracePos(name);\r\n  \r\n        // If user passed an array accessor \"[index]\", parse the array index off the accessor.\r\n        if (leftBrace > 0) {\r\n          arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0; // \"index]\", coerce parseInt(']') with >>>0 to treat \"foo[]\" as \"foo[0]\" and foo[-1] as unsigned out-of-bounds.\r\n          uniformBaseName = name.slice(0, leftBrace);\r\n        }\r\n  \r\n        // Have we cached the location of this uniform before?\r\n        var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName]; // A pair [array length, GLint of the uniform location]\r\n  \r\n        // If an uniform with this name exists, and if its index is within the array limits (if it's even an array),\r\n        // query the WebGLlocation, or return an existing cached location.\r\n        if (sizeAndId && arrayIndex < sizeAndId[0]) {\r\n          arrayIndex += sizeAndId[1]; // Add the base location of the uniform to the array index offset.\r\n          if ((uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name))) {\r\n            return arrayIndex;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // N.b. we are currently unable to distinguish between GL program IDs that never existed vs GL program IDs that have been deleted,\r\n        // so report GL_INVALID_VALUE in both cases.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n      }\r\n      return -1;\r\n    }\r\n  var _emscripten_glGetUniformLocation = _glGetUniformLocation;\r\n\r\n  function webglGetUniformLocation(location) {\r\n      var p = GLctx.currentProgram;\r\n  \r\n      if (p) {\r\n        var webglLoc = p.uniformLocsById[location];\r\n        // p.uniformLocsById[location] stores either an integer, or a WebGLUniformLocation.\r\n  \r\n        // If an integer, we have not yet bound the location, so do it now. The integer value specifies the array index\r\n        // we should bind to.\r\n        if (typeof webglLoc == 'number') {\r\n          p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? '[' + webglLoc + ']' : ''));\r\n        }\r\n        // Else an already cached WebGLUniformLocation, return it.\r\n        return webglLoc;\r\n      } else {\r\n        GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n      }\r\n    }\r\n  \r\n  \r\n  /** @suppress{checkTypes} */\r\n  function emscriptenWebGLGetUniform(program, location, params, type) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      webglPrepareUniformLocationsBeforeFirstUse(program);\r\n      var data = GLctx.getUniform(program, webglGetUniformLocation(location));\r\n      if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformfv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 2);\r\n    }\r\n  var _emscripten_glGetUniformfv = _glGetUniformfv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformiv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    }\r\n  var _emscripten_glGetUniformiv = _glGetUniformiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformuiv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    }\r\n  var _emscripten_glGetUniformuiv = _glGetUniformuiv;\r\n\r\n  /** @suppress{checkTypes} */\r\n  function emscriptenWebGLGetVertexAttrib(index, pname, params, type) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttrib*v on client-side array: not supported, bad data returned\");\r\n      }\r\n      var data = GLctx.getVertexAttrib(index, pname);\r\n      if (pname == 0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/) {\r\n        HEAP32[((params)>>2)] = data && data[\"name\"];\r\n      } else if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n          case 5: HEAP32[((params)>>2)] = Math.fround(data); break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 5: HEAP32[(((params)+(i*4))>>2)] = Math.fround(data[i]); break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribIiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\r\n    }\r\n  var _emscripten_glGetVertexAttribIiv = _glGetVertexAttribIiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetVertexAttribIuiv = _glGetVertexAttribIiv;\r\n  var _emscripten_glGetVertexAttribIuiv = _glGetVertexAttribIuiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribPointerv(index, pname, pointer) {\r\n      if (!pointer) {\r\n        // GLES2 specification does not specify how to behave if pointer is a null pointer. Since calling this function does not make sense\r\n        // if pointer == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttribPointer on client-side array: not supported, bad data returned\");\r\n      }\r\n      HEAP32[((pointer)>>2)] = GLctx.getVertexAttribOffset(index, pname);\r\n    }\r\n  var _emscripten_glGetVertexAttribPointerv = _glGetVertexAttribPointerv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribfv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2);\r\n    }\r\n  var _emscripten_glGetVertexAttribfv = _glGetVertexAttribfv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5);\r\n    }\r\n  var _emscripten_glGetVertexAttribiv = _glGetVertexAttribiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glHint(x0, x1) { GLctx.hint(x0, x1) }\r\n  var _emscripten_glHint = _glHint;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glInvalidateFramebuffer(target, numAttachments, attachments) {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.invalidateFramebuffer(target, list);\r\n    }\r\n  var _emscripten_glInvalidateFramebuffer = _glInvalidateFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glInvalidateSubFramebuffer(target, numAttachments, attachments, x, y, width, height) {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.invalidateSubFramebuffer(target, list, x, y, width, height);\r\n    }\r\n  var _emscripten_glInvalidateSubFramebuffer = _glInvalidateSubFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsBuffer(buffer) {\r\n      var b = GL.buffers[buffer];\r\n      if (!b) return 0;\r\n      return GLctx.isBuffer(b);\r\n    }\r\n  var _emscripten_glIsBuffer = _glIsBuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsEnabled(x0) { return GLctx.isEnabled(x0) }\r\n  var _emscripten_glIsEnabled = _glIsEnabled;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsFramebuffer(framebuffer) {\r\n      var fb = GL.framebuffers[framebuffer];\r\n      if (!fb) return 0;\r\n      return GLctx.isFramebuffer(fb);\r\n    }\r\n  var _emscripten_glIsFramebuffer = _glIsFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsProgram(program) {\r\n      program = GL.programs[program];\r\n      if (!program) return 0;\r\n      return GLctx.isProgram(program);\r\n    }\r\n  var _emscripten_glIsProgram = _glIsProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsQuery(id) {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.isQuery(query);\r\n    }\r\n  var _emscripten_glIsQuery = _glIsQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsQueryEXT(id) {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.disjointTimerQueryExt['isQueryEXT'](query);\r\n    }\r\n  var _emscripten_glIsQueryEXT = _glIsQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsRenderbuffer(renderbuffer) {\r\n      var rb = GL.renderbuffers[renderbuffer];\r\n      if (!rb) return 0;\r\n      return GLctx.isRenderbuffer(rb);\r\n    }\r\n  var _emscripten_glIsRenderbuffer = _glIsRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsSampler(id) {\r\n      var sampler = GL.samplers[id];\r\n      if (!sampler) return 0;\r\n      return GLctx.isSampler(sampler);\r\n    }\r\n  var _emscripten_glIsSampler = _glIsSampler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsShader(shader) {\r\n      var s = GL.shaders[shader];\r\n      if (!s) return 0;\r\n      return GLctx.isShader(s);\r\n    }\r\n  var _emscripten_glIsShader = _glIsShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsSync(sync) {\r\n      return GLctx.isSync(GL.syncs[sync]);\r\n    }\r\n  var _emscripten_glIsSync = _glIsSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsTexture(id) {\r\n      var texture = GL.textures[id];\r\n      if (!texture) return 0;\r\n      return GLctx.isTexture(texture);\r\n    }\r\n  var _emscripten_glIsTexture = _glIsTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsTransformFeedback(id) {\r\n      return GLctx.isTransformFeedback(GL.transformFeedbacks[id]);\r\n    }\r\n  var _emscripten_glIsTransformFeedback = _glIsTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsVertexArray(array) {\r\n  \r\n      var vao = GL.vaos[array];\r\n      if (!vao) return 0;\r\n      return GLctx.isVertexArray(vao);\r\n    }\r\n  var _emscripten_glIsVertexArray = _glIsVertexArray;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glIsVertexArrayOES = _glIsVertexArray;\r\n  var _emscripten_glIsVertexArrayOES = _glIsVertexArrayOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glLineWidth(x0) { GLctx.lineWidth(x0) }\r\n  var _emscripten_glLineWidth = _glLineWidth;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glLinkProgram(program) {\r\n      program = GL.programs[program];\r\n      GLctx.linkProgram(program);\r\n      // Invalidate earlier computed uniform->ID mappings, those have now become stale\r\n      program.uniformLocsById = 0; // Mark as null-like so that glGetUniformLocation() knows to populate this again.\r\n      program.uniformSizeAndIdsByName = {};\r\n  \r\n    }\r\n  var _emscripten_glLinkProgram = _glLinkProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPauseTransformFeedback() { GLctx.pauseTransformFeedback() }\r\n  var _emscripten_glPauseTransformFeedback = _glPauseTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPixelStorei(pname, param) {\r\n      if (pname == 0xCF5 /* GL_UNPACK_ALIGNMENT */) {\r\n        GL.unpackAlignment = param;\r\n      }\r\n      GLctx.pixelStorei(pname, param);\r\n    }\r\n  var _emscripten_glPixelStorei = _glPixelStorei;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPolygonOffset(x0, x1) { GLctx.polygonOffset(x0, x1) }\r\n  var _emscripten_glPolygonOffset = _glPolygonOffset;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glProgramBinary(program, binaryFormat, binary, length) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glProgramBinary = _glProgramBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glProgramParameteri(program, pname, value) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glProgramParameteri = _glProgramParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glQueryCounterEXT(id, target) {\r\n      GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id], target);\r\n    }\r\n  var _emscripten_glQueryCounterEXT = _glQueryCounterEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glReadBuffer(x0) { GLctx.readBuffer(x0) }\r\n  var _emscripten_glReadBuffer = _glReadBuffer;\r\n\r\n  function computeUnpackAlignedImageSize(width, height, sizePerPixel, alignment) {\r\n      function roundedToNextMultipleOf(x, y) {\r\n        return (x + y - 1) & -y;\r\n      }\r\n      var plainRowSize = width * sizePerPixel;\r\n      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);\r\n      return height * alignedRowSize;\r\n    }\r\n  \r\n  function colorChannelsInGlTextureFormat(format) {\r\n      // Micro-optimizations for size: map format to size by subtracting smallest enum value (0x1902) from all values first.\r\n      // Also omit the most common size value (1) from the list, which is assumed by formats not on the list.\r\n      var colorChannels = {\r\n        // 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,\r\n        // 0x1906 /* GL_ALPHA */ - 0x1902: 1,\r\n        5: 3,\r\n        6: 4,\r\n        // 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,\r\n        8: 2,\r\n        29502: 3,\r\n        29504: 4,\r\n        // 0x1903 /* GL_RED */ - 0x1902: 1,\r\n        26917: 2,\r\n        26918: 2,\r\n        // 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,\r\n        29846: 3,\r\n        29847: 4\r\n      };\r\n      return colorChannels[format - 0x1902]||1;\r\n    }\r\n  \r\n  function heapObjectForWebGLType(type) {\r\n      // Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare\r\n      // smaller values for the heap, for shorter generated code size.\r\n      // Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.\r\n      // (since most types are HEAPU16)\r\n      type -= 0x1400;\r\n      if (type == 0) return HEAP8;\r\n  \r\n      if (type == 1) return HEAPU8;\r\n  \r\n      if (type == 2) return HEAP16;\r\n  \r\n      if (type == 4) return HEAP32;\r\n  \r\n      if (type == 6) return HEAPF32;\r\n  \r\n      if (type == 5\r\n        || type == 28922\r\n        || type == 28520\r\n        || type == 30779\r\n        || type == 30782\r\n        )\r\n        return HEAPU32;\r\n  \r\n      return HEAPU16;\r\n    }\r\n  \r\n  function heapAccessShiftForWebGLHeap(heap) {\r\n      return 31 - Math.clz32(heap.BYTES_PER_ELEMENT);\r\n    }\r\n  \r\n  function emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) {\r\n      var heap = heapObjectForWebGLType(type);\r\n      var shift = heapAccessShiftForWebGLHeap(heap);\r\n      var byteSize = 1<<shift;\r\n      var sizePerPixel = colorChannelsInGlTextureFormat(format) * byteSize;\r\n      var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel, GL.unpackAlignment);\r\n      return heap.subarray(pixels >> shift, pixels + bytes >> shift);\r\n    }\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glReadPixels(x, y, width, height, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelPackBufferBinding) {\r\n          GLctx.readPixels(x, y, width, height, format, type, pixels);\r\n        } else {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.readPixels(x, y, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);\r\n      if (!pixelData) {\r\n        GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n        return;\r\n      }\r\n      GLctx.readPixels(x, y, width, height, format, type, pixelData);\r\n    }\r\n  var _emscripten_glReadPixels = _glReadPixels;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glReleaseShaderCompiler() {\r\n      // NOP (as allowed by GLES 2.0 spec)\r\n    }\r\n  var _emscripten_glReleaseShaderCompiler = _glReleaseShaderCompiler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glRenderbufferStorage(x0, x1, x2, x3) { GLctx.renderbufferStorage(x0, x1, x2, x3) }\r\n  var _emscripten_glRenderbufferStorage = _glRenderbufferStorage;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glRenderbufferStorageMultisample(x0, x1, x2, x3, x4) { GLctx.renderbufferStorageMultisample(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glRenderbufferStorageMultisample = _glRenderbufferStorageMultisample;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glResumeTransformFeedback() { GLctx.resumeTransformFeedback() }\r\n  var _emscripten_glResumeTransformFeedback = _glResumeTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSampleCoverage(value, invert) {\r\n      GLctx.sampleCoverage(value, !!invert);\r\n    }\r\n  var _emscripten_glSampleCoverage = _glSampleCoverage;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameterf(sampler, pname, param) {\r\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameterf = _glSamplerParameterf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameterfv(sampler, pname, params) {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameterfv = _glSamplerParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameteri(sampler, pname, param) {\r\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameteri = _glSamplerParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameteriv(sampler, pname, params) {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameteriv = _glSamplerParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glScissor(x0, x1, x2, x3) { GLctx.scissor(x0, x1, x2, x3) }\r\n  var _emscripten_glScissor = _glScissor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glShaderBinary(count, shaders, binaryformat, binary, length) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glShaderBinary = _glShaderBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glShaderSource(shader, count, string, length) {\r\n      var source = GL.getSource(shader, count, string, length);\r\n  \r\n      GLctx.shaderSource(GL.shaders[shader], source);\r\n    }\r\n  var _emscripten_glShaderSource = _glShaderSource;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilFunc(x0, x1, x2) { GLctx.stencilFunc(x0, x1, x2) }\r\n  var _emscripten_glStencilFunc = _glStencilFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilFuncSeparate(x0, x1, x2, x3) { GLctx.stencilFuncSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glStencilFuncSeparate = _glStencilFuncSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilMask(x0) { GLctx.stencilMask(x0) }\r\n  var _emscripten_glStencilMask = _glStencilMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilMaskSeparate(x0, x1) { GLctx.stencilMaskSeparate(x0, x1) }\r\n  var _emscripten_glStencilMaskSeparate = _glStencilMaskSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilOp(x0, x1, x2) { GLctx.stencilOp(x0, x1, x2) }\r\n  var _emscripten_glStencilOp = _glStencilOp;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilOpSeparate(x0, x1, x2, x3) { GLctx.stencilOpSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glStencilOpSeparate = _glStencilOpSeparate;\r\n\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null);\r\n    }\r\n  var _emscripten_glTexImage2D = _glTexImage2D;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, null);\r\n      }\r\n    }\r\n  var _emscripten_glTexImage3D = _glTexImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameterf(x0, x1, x2) { GLctx.texParameterf(x0, x1, x2) }\r\n  var _emscripten_glTexParameterf = _glTexParameterf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameterfv(target, pname, params) {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.texParameterf(target, pname, param);\r\n    }\r\n  var _emscripten_glTexParameterfv = _glTexParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }\r\n  var _emscripten_glTexParameteri = _glTexParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameteriv(target, pname, params) {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.texParameteri(target, pname, param);\r\n    }\r\n  var _emscripten_glTexParameteriv = _glTexParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexStorage2D(x0, x1, x2, x3, x4) { GLctx.texStorage2D(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glTexStorage2D = _glTexStorage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexStorage3D(x0, x1, x2, x3, x4, x5) { GLctx.texStorage3D(x0, x1, x2, x3, x4, x5) }\r\n  var _emscripten_glTexStorage3D = _glTexStorage3D;\r\n\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = null;\r\n      if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0);\r\n      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\r\n    }\r\n  var _emscripten_glTexSubImage2D = _glTexSubImage2D;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, null);\r\n      }\r\n    }\r\n  var _emscripten_glTexSubImage3D = _glTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTransformFeedbackVaryings(program, count, varyings, bufferMode) {\r\n      program = GL.programs[program];\r\n      var vars = [];\r\n      for (var i = 0; i < count; i++)\r\n        vars.push(UTF8ToString(HEAP32[(((varyings)+(i*4))>>2)]));\r\n  \r\n      GLctx.transformFeedbackVaryings(program, vars, bufferMode);\r\n    }\r\n  var _emscripten_glTransformFeedbackVaryings = _glTransformFeedbackVaryings;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1f(location, v0) {\r\n      GLctx.uniform1f(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1f = _glUniform1f;\r\n\r\n  \r\n  var miniTempWebGLFloatBuffers = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform1fv = _glUniform1fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1i(location, v0) {\r\n      GLctx.uniform1i(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1i = _glUniform1i;\r\n\r\n  \r\n  var miniTempWebGLIntBuffers = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform1iv = _glUniform1iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform1ui(location, v0) {\r\n      GLctx.uniform1ui(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1ui = _glUniform1ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform1uiv(location, count, value) {\r\n      count && GLctx.uniform1uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count);\r\n    }\r\n  var _emscripten_glUniform1uiv = _glUniform1uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2f(location, v0, v1) {\r\n      GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2f = _glUniform2f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform2fv = _glUniform2fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2i(location, v0, v1) {\r\n      GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2i = _glUniform2i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform2iv = _glUniform2iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform2ui(location, v0, v1) {\r\n      GLctx.uniform2ui(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2ui = _glUniform2ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform2uiv(location, count, value) {\r\n      count && GLctx.uniform2uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*2);\r\n    }\r\n  var _emscripten_glUniform2uiv = _glUniform2uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3f(location, v0, v1, v2) {\r\n      GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3f = _glUniform3f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform3fv = _glUniform3fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3i(location, v0, v1, v2) {\r\n      GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3i = _glUniform3i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform3iv = _glUniform3iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform3ui(location, v0, v1, v2) {\r\n      GLctx.uniform3ui(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3ui = _glUniform3ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform3uiv(location, count, value) {\r\n      count && GLctx.uniform3uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*3);\r\n    }\r\n  var _emscripten_glUniform3uiv = _glUniform3uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4f(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4f = _glUniform4f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 4 * count; i += 4) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform4fv = _glUniform4fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4i(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4i = _glUniform4i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAP32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform4iv = _glUniform4iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform4ui(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4ui(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4ui = _glUniform4ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform4uiv(location, count, value) {\r\n      count && GLctx.uniform4uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*4);\r\n    }\r\n  var _emscripten_glUniform4uiv = _glUniform4uiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding) {\r\n      program = GL.programs[program];\r\n  \r\n      GLctx.uniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding);\r\n    }\r\n  var _emscripten_glUniformBlockBinding = _glUniformBlockBinding;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix2fv = _glUniformMatrix2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2x3fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    }\r\n  var _emscripten_glUniformMatrix2x3fv = _glUniformMatrix2x3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2x4fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    }\r\n  var _emscripten_glUniformMatrix2x4fv = _glUniformMatrix2x4fv;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*9);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 32) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[9*count-1];\r\n        for (var i = 0; i < 9*count; i += 9) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n          view[i+4] = HEAPF32[(((value)+(4*i+16))>>2)];\r\n          view[i+5] = HEAPF32[(((value)+(4*i+20))>>2)];\r\n          view[i+6] = HEAPF32[(((value)+(4*i+24))>>2)];\r\n          view[i+7] = HEAPF32[(((value)+(4*i+28))>>2)];\r\n          view[i+8] = HEAPF32[(((value)+(4*i+32))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*36)>>2);\r\n      }\r\n      GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix3fv = _glUniformMatrix3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3x2fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    }\r\n  var _emscripten_glUniformMatrix3x2fv = _glUniformMatrix3x2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3x4fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    }\r\n  var _emscripten_glUniformMatrix3x4fv = _glUniformMatrix3x4fv;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*16);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 18) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[16*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 16 * count; i += 16) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n          view[i + 4] = heap[dst + 4];\r\n          view[i + 5] = heap[dst + 5];\r\n          view[i + 6] = heap[dst + 6];\r\n          view[i + 7] = heap[dst + 7];\r\n          view[i + 8] = heap[dst + 8];\r\n          view[i + 9] = heap[dst + 9];\r\n          view[i + 10] = heap[dst + 10];\r\n          view[i + 11] = heap[dst + 11];\r\n          view[i + 12] = heap[dst + 12];\r\n          view[i + 13] = heap[dst + 13];\r\n          view[i + 14] = heap[dst + 14];\r\n          view[i + 15] = heap[dst + 15];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*64)>>2);\r\n      }\r\n      GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix4fv = _glUniformMatrix4fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4x2fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    }\r\n  var _emscripten_glUniformMatrix4x2fv = _glUniformMatrix4x2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4x3fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    }\r\n  var _emscripten_glUniformMatrix4x3fv = _glUniformMatrix4x3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUseProgram(program) {\r\n      program = GL.programs[program];\r\n      GLctx.useProgram(program);\r\n      // Record the currently active program so that we can access the uniform\r\n      // mapping table of that program.\r\n      GLctx.currentProgram = program;\r\n    }\r\n  var _emscripten_glUseProgram = _glUseProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glValidateProgram(program) {\r\n      GLctx.validateProgram(GL.programs[program]);\r\n    }\r\n  var _emscripten_glValidateProgram = _glValidateProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib1f(x0, x1) { GLctx.vertexAttrib1f(x0, x1) }\r\n  var _emscripten_glVertexAttrib1f = _glVertexAttrib1f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib1fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib1f(index, HEAPF32[v>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib1fv = _glVertexAttrib1fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib2f(x0, x1, x2) { GLctx.vertexAttrib2f(x0, x1, x2) }\r\n  var _emscripten_glVertexAttrib2f = _glVertexAttrib2f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib2fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib2f(index, HEAPF32[v>>2], HEAPF32[v+4>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib2fv = _glVertexAttrib2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib3f(x0, x1, x2, x3) { GLctx.vertexAttrib3f(x0, x1, x2, x3) }\r\n  var _emscripten_glVertexAttrib3f = _glVertexAttrib3f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib3fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib3f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib3fv = _glVertexAttrib3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib4f(x0, x1, x2, x3, x4) { GLctx.vertexAttrib4f(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttrib4f = _glVertexAttrib4f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib4fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib4f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2], HEAPF32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib4fv = _glVertexAttrib4fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribDivisor(index, divisor) {\r\n      GLctx.vertexAttribDivisor(index, divisor);\r\n    }\r\n  var _emscripten_glVertexAttribDivisor = _glVertexAttribDivisor;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorANGLE = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorANGLE = _glVertexAttribDivisorANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorARB = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorARB = _glVertexAttribDivisorARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorEXT = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorEXT = _glVertexAttribDivisorEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorNV = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorNV = _glVertexAttribDivisorNV;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4i(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4i(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttribI4i = _glVertexAttribI4i;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4iv(index, v) {\r\n      GLctx.vertexAttribI4i(index, HEAP32[v>>2], HEAP32[v+4>>2], HEAP32[v+8>>2], HEAP32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttribI4iv = _glVertexAttribI4iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4ui(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4ui(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttribI4ui = _glVertexAttribI4ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4uiv(index, v) {\r\n      GLctx.vertexAttribI4ui(index, HEAPU32[v>>2], HEAPU32[v+4>>2], HEAPU32[v+8>>2], HEAPU32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttribI4uiv = _glVertexAttribI4uiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribIPointer(index, size, type, stride, ptr) {\r\n      GLctx.vertexAttribIPointer(index, size, type, stride, ptr);\r\n    }\r\n  var _emscripten_glVertexAttribIPointer = _glVertexAttribIPointer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      if (!GLctx.currentArrayBufferBinding) {\r\n        cb.size = size;\r\n        cb.type = type;\r\n        cb.normalized = normalized;\r\n        cb.stride = stride;\r\n        cb.ptr = ptr;\r\n        cb.clientside = true;\r\n        cb.vertexAttribPointerAdaptor = function(index, size, type, normalized, stride, ptr) {\r\n          this.vertexAttribPointer(index, size, type, normalized, stride, ptr);\r\n        };\r\n        return;\r\n      }\r\n      cb.clientside = false;\r\n      GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\r\n    }\r\n  var _emscripten_glVertexAttribPointer = _glVertexAttribPointer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }\r\n  var _emscripten_glViewport = _glViewport;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glWaitSync(sync, flags, timeout_low, timeout_high) {\r\n      // See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      GLctx.waitSync(GL.syncs[sync], flags, timeout);\r\n    }\r\n  var _emscripten_glWaitSync = _glWaitSync;\r\n\r\n  function _emscripten_has_asyncify() {\r\n      return 1;\r\n    }\r\n\r\n  function _emscripten_memcpy_big(dest, src, num) {\r\n      HEAPU8.copyWithin(dest, src, src + num);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  function doRequestFullscreen(target, strategy) {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      if (!target.requestFullscreen\r\n        && !target.webkitRequestFullscreen\r\n        ) {\r\n        return -3;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (strategy.deferUntilInEventHandler) {\r\n          JSEvents.deferCall(JSEvents_requestFullscreen, 1 /* priority over pointer lock */, [target, strategy]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return JSEvents_requestFullscreen(target, strategy);\r\n    }\r\n  \r\n  \r\n  function _emscripten_request_fullscreen_strategy(target, deferUntilInEventHandler, fullscreenStrategy) {\r\n      var strategy = {\r\n        scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n        canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n        filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n        deferUntilInEventHandler: deferUntilInEventHandler,\r\n        canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n        canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)]\r\n      };\r\n  \r\n      return doRequestFullscreen(target, strategy);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_request_pointerlock(target, deferUntilInEventHandler) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      if (!target.requestPointerLock\r\n        ) {\r\n        return -1;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (deferUntilInEventHandler) {\r\n          JSEvents.deferCall(requestPointerLock, 2 /* priority below fullscreen */, [target]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return requestPointerLock(target);\r\n    }\r\n\r\n  function getHeapMax() {\r\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\r\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\r\n      // for any code that deals with heap sizes, which would require special\r\n      // casing all heap size related code to treat 0 specially.\r\n      return 2147483648;\r\n    }\r\n  \r\n  function emscripten_realloc_buffer(size) {\r\n      var b = wasmMemory.buffer;\r\n      try {\r\n        // round size grow request up to wasm page size (fixed 64KB per spec)\r\n        wasmMemory.grow((size - b.byteLength + 65535) >>> 16); // .grow() takes a delta compared to the previous size\r\n        updateMemoryViews();\r\n        return 1 /*success*/;\r\n      } catch(e) {\r\n      }\r\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\r\n      // anyhow)\r\n    }\r\n  function _emscripten_resize_heap(requestedSize) {\r\n      var oldSize = HEAPU8.length;\r\n      requestedSize = requestedSize >>> 0;\r\n      // With multithreaded builds, races can happen (another thread might increase the size\r\n      // in between), so return a failure, and let the caller retry.\r\n  \r\n      // Memory resize rules:\r\n      // 1.  Always increase heap size to at least the requested size, rounded up\r\n      //     to next page multiple.\r\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\r\n      //     geometrically: increase the heap size according to\r\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\r\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\r\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\r\n      //     linearly: increase the heap size by at least\r\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\r\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\r\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\r\n      // 4.  If we were unable to allocate as much memory, it may be due to\r\n      //     over-eager decision to excessively reserve due to (3) above.\r\n      //     Hence if an allocation fails, cut down on the amount of excess\r\n      //     growth, in an attempt to succeed to perform a smaller allocation.\r\n  \r\n      // A limit is set for how much we can grow. We should not exceed that\r\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\r\n      var maxHeapSize = getHeapMax();\r\n      if (requestedSize > maxHeapSize) {\r\n        return false;\r\n      }\r\n  \r\n      let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\r\n  \r\n      // Loop through potential heap size increases. If we attempt a too eager\r\n      // reservation that fails, cut down on the attempted size and reserve a\r\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\r\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\r\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\r\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\r\n  \r\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\r\n  \r\n        var replacement = emscripten_realloc_buffer(newSize);\r\n        if (replacement) {\r\n  \r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n  function _emscripten_sample_gamepad_data() {\r\n      return (JSEvents.lastGamepadState = (navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : null)))\r\n        ? 0 : -1;\r\n    }\r\n\r\n  \r\n  \r\n  function registerBeforeUnloadEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {\r\n      var beforeUnloadEventHandlerFunc = function(e = event) {\r\n        // Note: This is always called on the main browser thread, since it needs synchronously return a value!\r\n        var confirmationMessage = ((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, 0, userData);\r\n        \r\n        if (confirmationMessage) {\r\n          confirmationMessage = UTF8ToString(confirmationMessage);\r\n        }\r\n        if (confirmationMessage) {\r\n          e.preventDefault();\r\n          e.returnValue = confirmationMessage;\r\n          return confirmationMessage;\r\n        }\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: beforeUnloadEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_beforeunload_callback_on_thread(userData, callbackfunc, targetThread) {\r\n      if (typeof onbeforeunload == 'undefined') return -1;\r\n      // beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,\r\n      // and there is no time to start proxying it anywhere.\r\n      if (targetThread !== 1) return -5;\r\n      registerBeforeUnloadEventCallback(2, userData, true, callbackfunc, 28, \"beforeunload\");\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerFocusEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.focusEvent) JSEvents.focusEvent = _malloc( 256 );\r\n  \r\n      var focusEventHandlerFunc = function(e = event) {\r\n        var nodeName = JSEvents.getNodeNameForTarget(e.target);\r\n        var id = e.target.id ? e.target.id : '';\r\n  \r\n        var focusEvent = JSEvents.focusEvent;\r\n        stringToUTF8(nodeName, focusEvent + 0, 128);\r\n        stringToUTF8(id, focusEvent + 128, 128);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, focusEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: focusEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_blur_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 12, \"blur\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n\r\n  \r\n  function _emscripten_set_element_css_size(target, width, height) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      target.style.width = width + \"px\";\r\n      target.style.height = height + \"px\";\r\n  \r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_focus_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 13, \"focus\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillFullscreenChangeEventData(eventStruct) {\r\n      var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\r\n      var isFullscreen = !!fullscreenElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isFullscreen;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = JSEvents.fullscreenEnabled();\r\n      // If transitioning to fullscreen, report info about the element that is now fullscreen.\r\n      // If transitioning to windowed mode, report info about the element that just was fullscreen.\r\n      var reportedElement = isFullscreen ? fullscreenElement : JSEvents.previousFullscreenElement;\r\n      var nodeName = JSEvents.getNodeNameForTarget(reportedElement);\r\n      var id = (reportedElement && reportedElement.id) ? reportedElement.id : '';\r\n      stringToUTF8(nodeName, eventStruct + 8, 128);\r\n      stringToUTF8(id, eventStruct + 136, 128);\r\n      HEAP32[(((eventStruct)+(264))>>2)] = reportedElement ? reportedElement.clientWidth : 0;\r\n      HEAP32[(((eventStruct)+(268))>>2)] = reportedElement ? reportedElement.clientHeight : 0;\r\n      HEAP32[(((eventStruct)+(272))>>2)] = screen.width;\r\n      HEAP32[(((eventStruct)+(276))>>2)] = screen.height;\r\n      if (isFullscreen) {\r\n        JSEvents.previousFullscreenElement = fullscreenElement;\r\n      }\r\n    }\r\n  \r\n  \r\n  function registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.fullscreenChangeEvent) JSEvents.fullscreenChangeEvent = _malloc( 280 );\r\n  \r\n      var fullscreenChangeEventhandlerFunc = function(e = event) {\r\n        var fullscreenChangeEvent = JSEvents.fullscreenChangeEvent;\r\n  \r\n        fillFullscreenChangeEventData(fullscreenChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, fullscreenChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: fullscreenChangeEventhandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  \r\n  function _emscripten_set_fullscreenchange_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"fullscreenchange\", targetThread);\r\n  \r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"webkitfullscreenchange\", targetThread);\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerGamepadEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.gamepadEvent) JSEvents.gamepadEvent = _malloc( 1432 );\r\n  \r\n      var gamepadEventHandlerFunc = function(e = event) {\r\n        var gamepadEvent = JSEvents.gamepadEvent;\r\n        fillGamepadEventData(gamepadEvent, e[\"gamepad\"]);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, gamepadEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: gamepadEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_gamepadconnected_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\r\n      registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 26, \"gamepadconnected\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_gamepaddisconnected_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\r\n      registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 27, \"gamepaddisconnected\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerKeyEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.keyEvent) JSEvents.keyEvent = _malloc( 176 );\r\n  \r\n      var keyEventHandlerFunc = function(e) {\r\n  \r\n        var keyEventData = JSEvents.keyEvent;\r\n        HEAPF64[((keyEventData)>>3)] = e.timeStamp;\r\n  \r\n        var idx = keyEventData >> 2;\r\n  \r\n        HEAP32[idx + 2] = e.location;\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        HEAP32[idx + 7] = e.repeat;\r\n        HEAP32[idx + 8] = e.charCode;\r\n        HEAP32[idx + 9] = e.keyCode;\r\n        HEAP32[idx + 10] = e.which;\r\n        stringToUTF8(e.key || '', keyEventData + 44, 32);\r\n        stringToUTF8(e.code || '', keyEventData + 76, 32);\r\n        stringToUTF8(e.char || '', keyEventData + 108, 32);\r\n        stringToUTF8(e.locale || '', keyEventData + 140, 32);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, keyEventData, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: keyEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_keydown_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 2, \"keydown\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_keypress_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 1, \"keypress\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_keyup_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 3, \"keyup\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop) {\r\n      var browserIterationFunc = (() => dynCall_v.call(null, func));\r\n      setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillMouseEventData(eventStruct, e, target) {\r\n      HEAPF64[((eventStruct)>>3)] = e.timeStamp;\r\n      var idx = eventStruct >> 2;\r\n      HEAP32[idx + 2] = e.screenX;\r\n      HEAP32[idx + 3] = e.screenY;\r\n      HEAP32[idx + 4] = e.clientX;\r\n      HEAP32[idx + 5] = e.clientY;\r\n      HEAP32[idx + 6] = e.ctrlKey;\r\n      HEAP32[idx + 7] = e.shiftKey;\r\n      HEAP32[idx + 8] = e.altKey;\r\n      HEAP32[idx + 9] = e.metaKey;\r\n      HEAP16[idx*2 + 20] = e.button;\r\n      HEAP16[idx*2 + 21] = e.buttons;\r\n  \r\n      HEAP32[idx + 11] = e[\"movementX\"]\r\n        ;\r\n  \r\n      HEAP32[idx + 12] = e[\"movementY\"]\r\n        ;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAP32[idx + 13] = e.clientX - rect.left;\r\n      HEAP32[idx + 14] = e.clientY - rect.top;\r\n  \r\n    }\r\n  \r\n  \r\n  function registerMouseEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.mouseEvent) JSEvents.mouseEvent = _malloc( 72 );\r\n      target = findEventTarget(target);\r\n  \r\n      var mouseEventHandlerFunc = function(e = event) {\r\n        // TODO: Make this access thread safe, or this could update live while app is reading it.\r\n        fillMouseEventData(JSEvents.mouseEvent, e, target);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, JSEvents.mouseEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: eventTypeString != 'mousemove' && eventTypeString != 'mouseenter' && eventTypeString != 'mouseleave', // Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: mouseEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_mousedown_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 5, \"mousedown\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseenter_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 33, \"mouseenter\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseleave_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 34, \"mouseleave\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mousemove_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 8, \"mousemove\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseup_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 6, \"mouseup\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillPointerlockChangeEventData(eventStruct) {\r\n      var pointerLockElement = document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement || document.msPointerLockElement;\r\n      var isPointerlocked = !!pointerLockElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isPointerlocked;\r\n      var nodeName = JSEvents.getNodeNameForTarget(pointerLockElement);\r\n      var id = (pointerLockElement && pointerLockElement.id) ? pointerLockElement.id : '';\r\n      stringToUTF8(nodeName, eventStruct + 4, 128);\r\n      stringToUTF8(id, eventStruct + 132, 128);\r\n    }\r\n  \r\n  \r\n  function registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.pointerlockChangeEvent) JSEvents.pointerlockChangeEvent = _malloc( 260 );\r\n  \r\n      var pointerlockChangeEventHandlerFunc = function(e = event) {\r\n        var pointerlockChangeEvent = JSEvents.pointerlockChangeEvent;\r\n        fillPointerlockChangeEventData(pointerlockChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, pointerlockChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: pointerlockChangeEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  \r\n  /** @suppress {missingProperties} */\r\n  function _emscripten_set_pointerlockchange_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      // TODO: Currently not supported in pthreads or in --proxy-to-worker mode. (In pthreads mode, document object is not defined)\r\n      if (!document || !document.body || (!document.body.requestPointerLock && !document.body.mozRequestPointerLock && !document.body.webkitRequestPointerLock && !document.body.msRequestPointerLock)) {\r\n        return -1;\r\n      }\r\n  \r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"pointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mozpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"webkitpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mspointerlockchange\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  function registerUiEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.uiEvent) JSEvents.uiEvent = _malloc( 36 );\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var uiEventHandlerFunc = function(e = event) {\r\n        if (e.target != target) {\r\n          // Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that\r\n          // was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log\r\n          // message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,\r\n          // causing a new scroll, etc..\r\n          return;\r\n        }\r\n        var b = document.body; // Take document.body to a variable, Closure compiler does not outline access to it on its own.\r\n        if (!b) {\r\n          // During a page unload 'body' can be null, with \"Cannot read property 'clientWidth' of null\" being thrown\r\n          return;\r\n        }\r\n        var uiEvent = JSEvents.uiEvent;\r\n        HEAP32[((uiEvent)>>2)] = e.detail;\r\n        HEAP32[(((uiEvent)+(4))>>2)] = b.clientWidth;\r\n        HEAP32[(((uiEvent)+(8))>>2)] = b.clientHeight;\r\n        HEAP32[(((uiEvent)+(12))>>2)] = innerWidth;\r\n        HEAP32[(((uiEvent)+(16))>>2)] = innerHeight;\r\n        HEAP32[(((uiEvent)+(20))>>2)] = outerWidth;\r\n        HEAP32[(((uiEvent)+(24))>>2)] = outerHeight;\r\n        HEAP32[(((uiEvent)+(28))>>2)] = pageXOffset;\r\n        HEAP32[(((uiEvent)+(32))>>2)] = pageYOffset;\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, uiEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: uiEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_resize_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerUiEventCallback(target, userData, useCapture, callbackfunc, 10, \"resize\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerTouchEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.touchEvent) JSEvents.touchEvent = _malloc( 1696 );\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var touchEventHandlerFunc = function(e) {\r\n        var t, touches = {}, et = e.touches;\r\n        // To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches, \r\n        // only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in\r\n        // each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.\r\n  \r\n        for (var i = 0; i < et.length; ++i) {\r\n          t = et[i];\r\n          // Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any\r\n          // changed/target states we may have set from previous frame.\r\n          t.isChanged = t.onTarget = 0;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the changedTouches list.\r\n        for (var i = 0; i < e.changedTouches.length; ++i) {\r\n          t = e.changedTouches[i];\r\n          t.isChanged = 1;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the targetTouches list.\r\n        for (var i = 0; i < e.targetTouches.length; ++i) {\r\n          touches[e.targetTouches[i].identifier].onTarget = 1;\r\n        }\r\n  \r\n        var touchEvent = JSEvents.touchEvent;\r\n        HEAPF64[((touchEvent)>>3)] = e.timeStamp;\r\n        var idx = touchEvent>>2; // Pre-shift the ptr to index to HEAP32 to save code size\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        idx += 7; // Advance to the start of the touch array.\r\n        var targetRect = getBoundingClientRect(target);\r\n        var numTouches = 0;\r\n        for (var i in touches) {\r\n          t = touches[i];\r\n          HEAP32[idx + 0] = t.identifier;\r\n          HEAP32[idx + 1] = t.screenX;\r\n          HEAP32[idx + 2] = t.screenY;\r\n          HEAP32[idx + 3] = t.clientX;\r\n          HEAP32[idx + 4] = t.clientY;\r\n          HEAP32[idx + 5] = t.pageX;\r\n          HEAP32[idx + 6] = t.pageY;\r\n          HEAP32[idx + 7] = t.isChanged;\r\n          HEAP32[idx + 8] = t.onTarget;\r\n          HEAP32[idx + 9] = t.clientX - targetRect.left;\r\n          HEAP32[idx + 10] = t.clientY - targetRect.top;\r\n  \r\n          idx += 13;\r\n  \r\n          if (++numTouches > 31) {\r\n            break;\r\n          }\r\n        }\r\n        HEAP32[(((touchEvent)+(8))>>2)] = numTouches;\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, touchEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: eventTypeString == 'touchstart' || eventTypeString == 'touchend',\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: touchEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_touchcancel_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 25, \"touchcancel\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchend_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 23, \"touchend\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchmove_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 24, \"touchmove\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchstart_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 22, \"touchstart\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function fillVisibilityChangeEventData(eventStruct) {\r\n      var visibilityStates = [ \"hidden\", \"visible\", \"prerender\", \"unloaded\" ];\r\n      var visibilityState = visibilityStates.indexOf(document.visibilityState);\r\n  \r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = document.hidden;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = visibilityState;\r\n    }\r\n  \r\n  \r\n  function registerVisibilityChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.visibilityChangeEvent) JSEvents.visibilityChangeEvent = _malloc( 8 );\r\n  \r\n      var visibilityChangeEventHandlerFunc = function(e = event) {\r\n        var visibilityChangeEvent = JSEvents.visibilityChangeEvent;\r\n  \r\n        fillVisibilityChangeEventData(visibilityChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, visibilityChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: visibilityChangeEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  function _emscripten_set_visibilitychange_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      registerVisibilityChangeEventCallback(specialHTMLTargets[1], userData, useCapture, callbackfunc, 21, \"visibilitychange\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  function registerWheelEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.wheelEvent) JSEvents.wheelEvent = _malloc( 104 );\r\n  \r\n      // The DOM Level 3 events spec event 'wheel'\r\n      var wheelHandlerFunc = function(e = event) {\r\n        var wheelEvent = JSEvents.wheelEvent;\r\n        fillMouseEventData(wheelEvent, e, target);\r\n        HEAPF64[(((wheelEvent)+(72))>>3)] = e[\"deltaX\"];\r\n        HEAPF64[(((wheelEvent)+(80))>>3)] = e[\"deltaY\"];\r\n        HEAPF64[(((wheelEvent)+(88))>>3)] = e[\"deltaZ\"];\r\n        HEAP32[(((wheelEvent)+(96))>>2)] = e[\"deltaMode\"];\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, wheelEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: wheelHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  function _emscripten_set_wheel_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      target = findEventTarget(target);\r\n      if (typeof target.onwheel != 'undefined') {\r\n        registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, \"wheel\", targetThread);\r\n        return 0;\r\n      } else {\r\n        return -1;\r\n      }\r\n    }\r\n\r\n  \r\n  function _emscripten_set_window_title(title) {\r\n      setWindowTitle(UTF8ToString(title));\r\n    }\r\n\r\n  function _emscripten_sleep(ms) {\r\n      // emscripten_sleep() does not return a value, but we still need a |return|\r\n      // here for stack switching support (ASYNCIFY=2). In that mode this function\r\n      // returns a Promise instead of nothing, and that Promise is what tells the\r\n      // wasm VM to pause the stack.\r\n      return Asyncify.handleSleep((wakeUp) => safeSetTimeout(wakeUp, ms));\r\n    }\r\n  _emscripten_sleep.isAsync = true;\r\n\r\n  var ENV = {};\r\n  \r\n  function getExecutableName() {\r\n      return thisProgram || './this.program';\r\n    }\r\n  function getEnvStrings() {\r\n      if (!getEnvStrings.strings) {\r\n        // Default values.\r\n        // Browser language detection #8751\r\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\r\n        var env = {\r\n          'USER': 'web_user',\r\n          'LOGNAME': 'web_user',\r\n          'PATH': '/',\r\n          'PWD': '/',\r\n          'HOME': '/home/web_user',\r\n          'LANG': lang,\r\n          '_': getExecutableName()\r\n        };\r\n        // Apply the user-provided values, if any.\r\n        for (var x in ENV) {\r\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\r\n          // explicitly set to be so. We allow user code to do that to\r\n          // force variables with default values to remain unset.\r\n          if (ENV[x] === undefined) delete env[x];\r\n          else env[x] = ENV[x];\r\n        }\r\n        var strings = [];\r\n        for (var x in env) {\r\n          strings.push(x + '=' + env[x]);\r\n        }\r\n        getEnvStrings.strings = strings;\r\n      }\r\n      return getEnvStrings.strings;\r\n    }\r\n  \r\n  function stringToAscii(str, buffer) {\r\n      for (var i = 0; i < str.length; ++i) {\r\n        HEAP8[((buffer++)>>0)] = str.charCodeAt(i);\r\n      }\r\n      // Null-terminate the string\r\n      HEAP8[((buffer)>>0)] = 0;\r\n    }\r\n  \r\n  function _environ_get(__environ, environ_buf) {\r\n      var bufSize = 0;\r\n      getEnvStrings().forEach(function(string, i) {\r\n        var ptr = environ_buf + bufSize;\r\n        HEAPU32[(((__environ)+(i*4))>>2)] = ptr;\r\n        stringToAscii(string, ptr);\r\n        bufSize += string.length + 1;\r\n      });\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function _environ_sizes_get(penviron_count, penviron_buf_size) {\r\n      var strings = getEnvStrings();\r\n      HEAPU32[((penviron_count)>>2)] = strings.length;\r\n      var bufSize = 0;\r\n      strings.forEach(function(string) {\r\n        bufSize += string.length + 1;\r\n      });\r\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\r\n      return 0;\r\n    }\r\n\r\n\r\n  function _fd_close(fd) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.close(stream);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  function _fd_fdstat_get(fd, pbuf) {\r\n  try {\r\n  \r\n      var rightsBase = 0;\r\n      var rightsInheriting = 0;\r\n      var flags = 0;\r\n      {\r\n        var stream = SYSCALLS.getStreamFromFD(fd);\r\n        // All character devices are terminals (other things a Linux system would\r\n        // assume is a character device, like the mouse, we have special APIs for).\r\n        var type = stream.tty ? 2 :\r\n                   FS.isDir(stream.mode) ? 3 :\r\n                   FS.isLink(stream.mode) ? 7 :\r\n                   4;\r\n      }\r\n      HEAP8[((pbuf)>>0)] = type;\r\n      HEAP16[(((pbuf)+(2))>>1)] = flags;\r\n      (tempI64 = [rightsBase>>>0,(tempDouble=rightsBase,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(8))>>2)] = tempI64[0],HEAP32[(((pbuf)+(12))>>2)] = tempI64[1]);\r\n      (tempI64 = [rightsInheriting>>>0,(tempDouble=rightsInheriting,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(16))>>2)] = tempI64[0],HEAP32[(((pbuf)+(20))>>2)] = tempI64[1]);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  function doReadv(stream, iov, iovcnt, offset) {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.read(stream, HEAP8,ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (curr < len) break; // nothing more to read\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n  \r\n  function _fd_read(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doReadv(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\r\n  try {\r\n  \r\n      var offset = convertI32PairToI53Checked(offset_low, offset_high); if (isNaN(offset)) return 61;\r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.llseek(stream, offset, whence);\r\n      (tempI64 = [stream.position>>>0,(tempDouble=stream.position,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((newOffset)>>2)] = tempI64[0],HEAP32[(((newOffset)+(4))>>2)] = tempI64[1]);\r\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  function doWritev(stream, iov, iovcnt, offset) {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.write(stream, HEAP8,ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n  \r\n  function _fd_write(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doWritev(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n\r\n  \r\n  function arraySum(array, index) {\r\n      var sum = 0;\r\n      for (var i = 0; i <= index; sum += array[i++]) {\r\n        // no-op\r\n      }\r\n      return sum;\r\n    }\r\n  \r\n  \r\n  var MONTH_DAYS_LEAP = [31,29,31,30,31,30,31,31,30,31,30,31];\r\n  \r\n  var MONTH_DAYS_REGULAR = [31,28,31,30,31,30,31,31,30,31,30,31];\r\n  function addDays(date, days) {\r\n      var newDate = new Date(date.getTime());\r\n      while (days > 0) {\r\n        var leap = isLeapYear(newDate.getFullYear());\r\n        var currentMonth = newDate.getMonth();\r\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\r\n  \r\n        if (days > daysInCurrentMonth-newDate.getDate()) {\r\n          // we spill over to next month\r\n          days -= (daysInCurrentMonth-newDate.getDate()+1);\r\n          newDate.setDate(1);\r\n          if (currentMonth < 11) {\r\n            newDate.setMonth(currentMonth+1)\r\n          } else {\r\n            newDate.setMonth(0);\r\n            newDate.setFullYear(newDate.getFullYear()+1);\r\n          }\r\n        } else {\r\n          // we stay in current month\r\n          newDate.setDate(newDate.getDate()+days);\r\n          return newDate;\r\n        }\r\n      }\r\n  \r\n      return newDate;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  function writeArrayToMemory(array, buffer) {\r\n      HEAP8.set(array, buffer);\r\n    }\r\n  \r\n  function _strftime(s, maxsize, format, tm) {\r\n      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);\r\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html\r\n  \r\n      var tm_zone = HEAP32[(((tm)+(40))>>2)];\r\n  \r\n      var date = {\r\n        tm_sec: HEAP32[((tm)>>2)],\r\n        tm_min: HEAP32[(((tm)+(4))>>2)],\r\n        tm_hour: HEAP32[(((tm)+(8))>>2)],\r\n        tm_mday: HEAP32[(((tm)+(12))>>2)],\r\n        tm_mon: HEAP32[(((tm)+(16))>>2)],\r\n        tm_year: HEAP32[(((tm)+(20))>>2)],\r\n        tm_wday: HEAP32[(((tm)+(24))>>2)],\r\n        tm_yday: HEAP32[(((tm)+(28))>>2)],\r\n        tm_isdst: HEAP32[(((tm)+(32))>>2)],\r\n        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],\r\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''\r\n      };\r\n  \r\n      var pattern = UTF8ToString(format);\r\n  \r\n      // expand format\r\n      var EXPANSION_RULES_1 = {\r\n        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013\r\n        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y\r\n        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d\r\n        '%h': '%b',                       // Equivalent to %b\r\n        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation\r\n        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation\r\n        '%T': '%H:%M:%S',                 // Replaced by the time\r\n        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation\r\n        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation\r\n        // Modified Conversion Specifiers\r\n        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.\r\n        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.\r\n        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.\r\n        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.\r\n        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.\r\n        '%EY': '%Y',                      // Replaced by the full alternative year representation.\r\n        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.\r\n        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.\r\n        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.\r\n        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.\r\n        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.\r\n        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.\r\n        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.\r\n        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).\r\n        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.\r\n        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.\r\n        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.\r\n        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.\r\n        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.\r\n      };\r\n      for (var rule in EXPANSION_RULES_1) {\r\n        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\r\n      }\r\n  \r\n      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  \r\n      function leadingSomething(value, digits, character) {\r\n        var str = typeof value == 'number' ? value.toString() : (value || '');\r\n        while (str.length < digits) {\r\n          str = character[0]+str;\r\n        }\r\n        return str;\r\n      }\r\n  \r\n      function leadingNulls(value, digits) {\r\n        return leadingSomething(value, digits, '0');\r\n      }\r\n  \r\n      function compareByDay(date1, date2) {\r\n        function sgn(value) {\r\n          return value < 0 ? -1 : (value > 0 ? 1 : 0);\r\n        }\r\n  \r\n        var compare;\r\n        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {\r\n          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {\r\n            compare = sgn(date1.getDate()-date2.getDate());\r\n          }\r\n        }\r\n        return compare;\r\n      }\r\n  \r\n      function getFirstWeekStartDate(janFourth) {\r\n          switch (janFourth.getDay()) {\r\n            case 0: // Sunday\r\n              return new Date(janFourth.getFullYear()-1, 11, 29);\r\n            case 1: // Monday\r\n              return janFourth;\r\n            case 2: // Tuesday\r\n              return new Date(janFourth.getFullYear(), 0, 3);\r\n            case 3: // Wednesday\r\n              return new Date(janFourth.getFullYear(), 0, 2);\r\n            case 4: // Thursday\r\n              return new Date(janFourth.getFullYear(), 0, 1);\r\n            case 5: // Friday\r\n              return new Date(janFourth.getFullYear()-1, 11, 31);\r\n            case 6: // Saturday\r\n              return new Date(janFourth.getFullYear()-1, 11, 30);\r\n          }\r\n      }\r\n  \r\n      function getWeekBasedYear(date) {\r\n          var thisDate = addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);\r\n  \r\n          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\r\n          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);\r\n  \r\n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\r\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\r\n  \r\n          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\r\n            // this date is after the start of the first week of this year\r\n            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\r\n              return thisDate.getFullYear()+1;\r\n            }\r\n            return thisDate.getFullYear();\r\n          }\r\n          return thisDate.getFullYear()-1;\r\n      }\r\n  \r\n      var EXPANSION_RULES_2 = {\r\n        '%a': function(date) {\r\n          return WEEKDAYS[date.tm_wday].substring(0,3);\r\n        },\r\n        '%A': function(date) {\r\n          return WEEKDAYS[date.tm_wday];\r\n        },\r\n        '%b': function(date) {\r\n          return MONTHS[date.tm_mon].substring(0,3);\r\n        },\r\n        '%B': function(date) {\r\n          return MONTHS[date.tm_mon];\r\n        },\r\n        '%C': function(date) {\r\n          var year = date.tm_year+1900;\r\n          return leadingNulls((year/100)|0,2);\r\n        },\r\n        '%d': function(date) {\r\n          return leadingNulls(date.tm_mday, 2);\r\n        },\r\n        '%e': function(date) {\r\n          return leadingSomething(date.tm_mday, 2, ' ');\r\n        },\r\n        '%g': function(date) {\r\n          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.\r\n          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes\r\n          // January 4th, which is also the week that includes the first Thursday of the year, and\r\n          // is also the first week that contains at least four days in the year.\r\n          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of\r\n          // the last week of the preceding year; thus, for Saturday 2nd January 1999,\r\n          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,\r\n          // or 31st is a Monday, it and any following days are part of week 1 of the following year.\r\n          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.\r\n  \r\n          return getWeekBasedYear(date).toString().substring(2);\r\n        },\r\n        '%G': function(date) {\r\n          return getWeekBasedYear(date);\r\n        },\r\n        '%H': function(date) {\r\n          return leadingNulls(date.tm_hour, 2);\r\n        },\r\n        '%I': function(date) {\r\n          var twelveHour = date.tm_hour;\r\n          if (twelveHour == 0) twelveHour = 12;\r\n          else if (twelveHour > 12) twelveHour -= 12;\r\n          return leadingNulls(twelveHour, 2);\r\n        },\r\n        '%j': function(date) {\r\n          // Day of the year (001-366)\r\n          return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year+1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon-1), 3);\r\n        },\r\n        '%m': function(date) {\r\n          return leadingNulls(date.tm_mon+1, 2);\r\n        },\r\n        '%M': function(date) {\r\n          return leadingNulls(date.tm_min, 2);\r\n        },\r\n        '%n': function() {\r\n          return '\\n';\r\n        },\r\n        '%p': function(date) {\r\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\r\n            return 'AM';\r\n          }\r\n          return 'PM';\r\n        },\r\n        '%S': function(date) {\r\n          return leadingNulls(date.tm_sec, 2);\r\n        },\r\n        '%t': function() {\r\n          return '\\t';\r\n        },\r\n        '%u': function(date) {\r\n          return date.tm_wday || 7;\r\n        },\r\n        '%U': function(date) {\r\n          var days = date.tm_yday + 7 - date.tm_wday;\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%V': function(date) {\r\n          // Replaced by the week number of the year (Monday as the first day of the week)\r\n          // as a decimal number [01,53]. If the week containing 1 January has four\r\n          // or more days in the new year, then it is considered week 1.\r\n          // Otherwise, it is the last week of the previous year, and the next week is week 1.\r\n          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]\r\n          var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7 ) / 7);\r\n          // If 1 Jan is just 1-3 days past Monday, the previous week\r\n          // is also in this year.\r\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\r\n            val++;\r\n          }\r\n          if (!val) {\r\n            val = 52;\r\n            // If 31 December of prev year a Thursday, or Friday of a\r\n            // leap year, then the prev year has 53 weeks.\r\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\r\n            if (dec31 == 4 || (dec31 == 5 && isLeapYear(date.tm_year%400-1))) {\r\n              val++;\r\n            }\r\n          } else if (val == 53) {\r\n            // If 1 January is not a Thursday, and not a Wednesday of a\r\n            // leap year, then this year has only 52 weeks.\r\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\r\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year)))\r\n              val = 1;\r\n          }\r\n          return leadingNulls(val, 2);\r\n        },\r\n        '%w': function(date) {\r\n          return date.tm_wday;\r\n        },\r\n        '%W': function(date) {\r\n          var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%y': function(date) {\r\n          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]\r\n          return (date.tm_year+1900).toString().substring(2);\r\n        },\r\n        '%Y': function(date) {\r\n          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]\r\n          return date.tm_year+1900;\r\n        },\r\n        '%z': function(date) {\r\n          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).\r\n          // For example, \"-0430\" means 4 hours 30 minutes behind UTC (west of Greenwich).\r\n          var off = date.tm_gmtoff;\r\n          var ahead = off >= 0;\r\n          off = Math.abs(off) / 60;\r\n          // convert from minutes into hhmm format (which means 60 minutes = 100 units)\r\n          off = (off / 60)*100 + (off % 60);\r\n          return (ahead ? '+' : '-') + String(\"0000\" + off).slice(-4);\r\n        },\r\n        '%Z': function(date) {\r\n          return date.tm_zone;\r\n        },\r\n        '%%': function() {\r\n          return '%';\r\n        }\r\n      };\r\n  \r\n      // Replace %% with a pair of NULLs (which cannot occur in a C string), then\r\n      // re-inject them after processing.\r\n      pattern = pattern.replace(/%%/g, '\\0\\0')\r\n      for (var rule in EXPANSION_RULES_2) {\r\n        if (pattern.includes(rule)) {\r\n          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\r\n        }\r\n      }\r\n      pattern = pattern.replace(/\\0\\0/g, '%')\r\n  \r\n      var bytes = intArrayFromString(pattern, false);\r\n      if (bytes.length > maxsize) {\r\n        return 0;\r\n      }\r\n  \r\n      writeArrayToMemory(bytes, s);\r\n      return bytes.length-1;\r\n    }\r\n\r\n  function _strftime_l(s, maxsize, format, tm, loc) {\r\n      return _strftime(s, maxsize, format, tm); // no locale support yet\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  function runAndAbortIfError(func) {\r\n      try {\r\n        return func();\r\n      } catch (e) {\r\n        abort(e);\r\n      }\r\n    }\r\n  \r\n  \r\n  function sigToWasmTypes(sig) {\r\n      var typeNames = {\r\n        'i': 'i32',\r\n        // i64 values will be split into two i32s.\r\n        'j': 'i32',\r\n        'f': 'f32',\r\n        'd': 'f64',\r\n        'p': 'i32',\r\n      };\r\n      var type = {\r\n        parameters: [],\r\n        results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\r\n      };\r\n      for (var i = 1; i < sig.length; ++i) {\r\n        type.parameters.push(typeNames[sig[i]]);\r\n        if (sig[i] === 'j') {\r\n          type.parameters.push('i32');\r\n        }\r\n      }\r\n      return type;\r\n    }\r\n  \r\n  function runtimeKeepalivePush() {\r\n      runtimeKeepaliveCounter += 1;\r\n    }\r\n  \r\n  function runtimeKeepalivePop() {\r\n      runtimeKeepaliveCounter -= 1;\r\n    }\r\n  \r\n  \r\n  var Asyncify = {instrumentWasmImports:function(imports) {\r\n        var ASYNCIFY_IMPORTS = [\"invoke_*\",\"fd_sync\",\"__wasi_fd_sync\",\"__asyncjs__*\",\"emscripten_idb_load\",\"emscripten_idb_store\",\"emscripten_idb_delete\",\"emscripten_idb_exists\",\"emscripten_idb_load_blob\",\"emscripten_idb_store_blob\",\"emscripten_sleep\",\"emscripten_wget\",\"emscripten_wget_data\",\"emscripten_scan_registers\",\"emscripten_lazy_load_code\",\"_load_secondary_module\",\"emscripten_fiber_swap\"];\r\n        for (var x in imports) {\r\n          (function(x) {\r\n            var original = imports[x];\r\n            var sig = original.sig;\r\n            if (typeof original == 'function') {\r\n              var isAsyncifyImport = original.isAsync ||\r\n                                     ASYNCIFY_IMPORTS.indexOf(x) >= 0 ||\r\n                                     x.startsWith('__asyncjs__');\r\n            }\r\n          })(x);\r\n        }\r\n      },instrumentWasmExports:function(exports) {\r\n        var ret = {};\r\n        for (var x in exports) {\r\n          (function(x) {\r\n            var original = exports[x];\r\n            if (typeof original == 'function') {\r\n              ret[x] = function() {\r\n                Asyncify.exportCallStack.push(x);\r\n                try {\r\n                  return original.apply(null, arguments);\r\n                } finally {\r\n                  if (!ABORT) {\r\n                    var y = Asyncify.exportCallStack.pop();\r\n                    assert(y === x);\r\n                    Asyncify.maybeStopUnwind();\r\n                  }\r\n                }\r\n              };\r\n            } else {\r\n              ret[x] = original;\r\n            }\r\n          })(x);\r\n        }\r\n        return ret;\r\n      },State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId:function(funcName) {\r\n        var id = Asyncify.callStackNameToId[funcName];\r\n        if (id === undefined) {\r\n          id = Asyncify.callStackId++;\r\n          Asyncify.callStackNameToId[funcName] = id;\r\n          Asyncify.callStackIdToName[id] = funcName;\r\n        }\r\n        return id;\r\n      },maybeStopUnwind:function() {\r\n        if (Asyncify.currData &&\r\n            Asyncify.state === Asyncify.State.Unwinding &&\r\n            Asyncify.exportCallStack.length === 0) {\r\n          // We just finished unwinding.\r\n          // Be sure to set the state before calling any other functions to avoid\r\n          // possible infinite recursion here (For example in debug pthread builds\r\n          // the dbg() function itself can call back into WebAssembly to get the\r\n          // current pthread_self() pointer).\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          \r\n          // Keep the runtime alive so that a re-wind can be done later.\r\n          runAndAbortIfError(_asyncify_stop_unwind);\r\n          if (typeof Fibers != 'undefined') {\r\n            Fibers.trampoline();\r\n          }\r\n        }\r\n      },whenDone:function() {\r\n        return new Promise((resolve, reject) => {\r\n          Asyncify.asyncPromiseHandlers = {\r\n            resolve: resolve,\r\n            reject: reject\r\n          };\r\n        });\r\n      },allocateData:function() {\r\n        // An asyncify data structure has three fields:\r\n        //  0  current stack pos\r\n        //  4  max stack pos\r\n        //  8  id of function at bottom of the call stack (callStackIdToName[id] == name of js function)\r\n        //\r\n        // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\r\n        // We also embed a stack in the same memory region here, right next to the structure.\r\n        // This struct is also defined as asyncify_data_t in emscripten/fiber.h\r\n        var ptr = _malloc(12 + Asyncify.StackSize);\r\n        Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\r\n        Asyncify.setDataRewindFunc(ptr);\r\n        return ptr;\r\n      },setDataHeader:function(ptr, stack, stackSize) {\r\n        HEAP32[((ptr)>>2)] = stack;\r\n        HEAP32[(((ptr)+(4))>>2)] = stack + stackSize;\r\n      },setDataRewindFunc:function(ptr) {\r\n        var bottomOfCallStack = Asyncify.exportCallStack[0];\r\n        var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\r\n        HEAP32[(((ptr)+(8))>>2)] = rewindId;\r\n      },getDataRewindFunc:function(ptr) {\r\n        var id = HEAP32[(((ptr)+(8))>>2)];\r\n        var name = Asyncify.callStackIdToName[id];\r\n        var func = Module['asm'][name];\r\n        return func;\r\n      },doRewind:function(ptr) {\r\n        var start = Asyncify.getDataRewindFunc(ptr);\r\n        // Once we have rewound and the stack we no longer need to artificially\r\n        // keep the runtime alive.\r\n        \r\n        return start();\r\n      },handleSleep:function(startAsync) {\r\n        if (ABORT) return;\r\n        if (Asyncify.state === Asyncify.State.Normal) {\r\n          // Prepare to sleep. Call startAsync, and see what happens:\r\n          // if the code decided to call our callback synchronously,\r\n          // then no async operation was in fact begun, and we don't\r\n          // need to do anything.\r\n          var reachedCallback = false;\r\n          var reachedAfterCallback = false;\r\n          startAsync((handleSleepReturnValue = 0) => {\r\n            if (ABORT) return;\r\n            Asyncify.handleSleepReturnValue = handleSleepReturnValue;\r\n            reachedCallback = true;\r\n            if (!reachedAfterCallback) {\r\n              // We are happening synchronously, so no need for async.\r\n              return;\r\n            }\r\n            Asyncify.state = Asyncify.State.Rewinding;\r\n            runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.resume();\r\n            }\r\n            var asyncWasmReturnValue, isError = false;\r\n            try {\r\n              asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\r\n            } catch (err) {\r\n              asyncWasmReturnValue = err;\r\n              isError = true;\r\n            }\r\n            // Track whether the return value was handled by any promise handlers.\r\n            var handled = false;\r\n            if (!Asyncify.currData) {\r\n              // All asynchronous execution has finished.\r\n              // `asyncWasmReturnValue` now contains the final\r\n              // return value of the exported async WASM function.\r\n              //\r\n              // Note: `asyncWasmReturnValue` is distinct from\r\n              // `Asyncify.handleSleepReturnValue`.\r\n              // `Asyncify.handleSleepReturnValue` contains the return\r\n              // value of the last C function to have executed\r\n              // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\r\n              // contains the return value of the exported WASM function\r\n              // that may have called C functions that\r\n              // call `Asyncify.handleSleep()`.\r\n              var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\r\n              if (asyncPromiseHandlers) {\r\n                Asyncify.asyncPromiseHandlers = null;\r\n                (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\r\n                handled = true;\r\n              }\r\n            }\r\n            if (isError && !handled) {\r\n              // If there was an error and it was not handled by now, we have no choice but to\r\n              // rethrow that error into the global scope where it can be caught only by\r\n              // `onerror` or `onunhandledpromiserejection`.\r\n              throw asyncWasmReturnValue;\r\n            }\r\n          });\r\n          reachedAfterCallback = true;\r\n          if (!reachedCallback) {\r\n            // A true async operation was begun; start a sleep.\r\n            Asyncify.state = Asyncify.State.Unwinding;\r\n            // TODO: reuse, don't alloc/free every sleep\r\n            Asyncify.currData = Asyncify.allocateData();\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.pause();\r\n            }\r\n            runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\r\n          }\r\n        } else if (Asyncify.state === Asyncify.State.Rewinding) {\r\n          // Stop a resume.\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          runAndAbortIfError(_asyncify_stop_rewind);\r\n          _free(Asyncify.currData);\r\n          Asyncify.currData = null;\r\n          // Call all sleep callbacks now that the sleep-resume is all done.\r\n          Asyncify.sleepCallbacks.forEach((func) => callUserCallback(func));\r\n        } else {\r\n          abort('invalid state: ' + Asyncify.state);\r\n        }\r\n        return Asyncify.handleSleepReturnValue;\r\n      },handleAsync:function(startAsync) {\r\n        return Asyncify.handleSleep((wakeUp) => {\r\n          // TODO: add error handling as a second param when handleSleep implements it.\r\n          startAsync().then(wakeUp);\r\n        });\r\n      }};\r\n\r\n\r\n  var FSNode = /** @constructor */ function(parent, name, mode, rdev) {\r\n    if (!parent) {\r\n      parent = this;  // root node sets parent to itself\r\n    }\r\n    this.parent = parent;\r\n    this.mount = parent.mount;\r\n    this.mounted = null;\r\n    this.id = FS.nextInode++;\r\n    this.name = name;\r\n    this.mode = mode;\r\n    this.node_ops = {};\r\n    this.stream_ops = {};\r\n    this.rdev = rdev;\r\n  };\r\n  var readMode = 292/*292*/ | 73/*73*/;\r\n  var writeMode = 146/*146*/;\r\n  Object.defineProperties(FSNode.prototype, {\r\n   read: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & readMode) === readMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= readMode : this.mode &= ~readMode;\r\n    }\r\n   },\r\n   write: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & writeMode) === writeMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= writeMode : this.mode &= ~writeMode;\r\n    }\r\n   },\r\n   isFolder: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isDir(this.mode);\r\n    }\r\n   },\r\n   isDevice: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isChrdev(this.mode);\r\n    }\r\n   }\r\n  });\r\n  FS.FSNode = FSNode;\r\n  FS.staticInit();Module[\"FS_createPath\"] = FS.createPath;Module[\"FS_createDataFile\"] = FS.createDataFile;Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;Module[\"FS_unlink\"] = FS.unlink;Module[\"FS_createLazyFile\"] = FS.createLazyFile;Module[\"FS_createDevice\"] = FS.createDevice;;\r\n\r\n      // exports\r\n      Module[\"requestFullscreen\"] = function Module_requestFullscreen(lockPointer, resizeCanvas) { Browser.requestFullscreen(lockPointer, resizeCanvas) };\r\n      Module[\"requestAnimationFrame\"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };\r\n      Module[\"setCanvasSize\"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };\r\n      Module[\"pauseMainLoop\"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };\r\n      Module[\"resumeMainLoop\"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };\r\n      Module[\"getUserMedia\"] = function Module_getUserMedia() { Browser.getUserMedia() };\r\n      Module[\"createContext\"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) };\r\n      var preloadedImages = {};\r\n      var preloadedAudios = {};;\r\nvar GLctx;;\r\nfor (var i = 0; i < 32; ++i) tempFixedLengthArray.push(new Array(i));;\r\nvar miniTempWebGLFloatBuffersStorage = new Float32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n  miniTempWebGLFloatBuffers[i] = miniTempWebGLFloatBuffersStorage.subarray(0, i+1);\r\n  }\r\n  ;\r\nvar miniTempWebGLIntBuffersStorage = new Int32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n  miniTempWebGLIntBuffers[i] = miniTempWebGLIntBuffersStorage.subarray(0, i+1);\r\n  }\r\n  ;\r\n// include: base64Utils.js\r\n// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149\r\n\r\n// This code was written by Tyler Akins and has been placed in the\r\n// public domain.  It would be nice if you left this header intact.\r\n// Base64 code from Tyler Akins -- http://rumkin.com\r\n\r\n/**\r\n * Decodes a base64 string.\r\n * @param {string} input The string to decode.\r\n */\r\nvar decodeBase64 = typeof atob == 'function' ? atob : function (input) {\r\n  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\n  var output = '';\r\n  var chr1, chr2, chr3;\r\n  var enc1, enc2, enc3, enc4;\r\n  var i = 0;\r\n  // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\r\n  do {\r\n    enc1 = keyStr.indexOf(input.charAt(i++));\r\n    enc2 = keyStr.indexOf(input.charAt(i++));\r\n    enc3 = keyStr.indexOf(input.charAt(i++));\r\n    enc4 = keyStr.indexOf(input.charAt(i++));\r\n\r\n    chr1 = (enc1 << 2) | (enc2 >> 4);\r\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n    chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n    output = output + String.fromCharCode(chr1);\r\n\r\n    if (enc3 !== 64) {\r\n      output = output + String.fromCharCode(chr2);\r\n    }\r\n    if (enc4 !== 64) {\r\n      output = output + String.fromCharCode(chr3);\r\n    }\r\n  } while (i < input.length);\r\n  return output;\r\n};\r\n\r\n// Converts a string of base64 into a byte array.\r\n// Throws error on invalid input.\r\nfunction intArrayFromBase64(s) {\r\n\r\n  try {\r\n    var decoded = decodeBase64(s);\r\n    var bytes = new Uint8Array(decoded.length);\r\n    for (var i = 0 ; i < decoded.length ; ++i) {\r\n      bytes[i] = decoded.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n  } catch (_) {\r\n    throw new Error('Converting base64 string to bytes failed.');\r\n  }\r\n}\r\n\r\n// If filename is a base64 data URI, parses and returns data (Buffer on node,\r\n// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.\r\nfunction tryParseAsDataURI(filename) {\r\n  if (!isDataURI(filename)) {\r\n    return;\r\n  }\r\n\r\n  return intArrayFromBase64(filename.slice(dataURIPrefix.length));\r\n}\r\n\r\n\r\n// end include: base64Utils.js\r\nvar wasmImports = {\r\n  \"__cxa_throw\": ___cxa_throw,\r\n  \"__syscall_chmod\": ___syscall_chmod,\r\n  \"__syscall_fchmod\": ___syscall_fchmod,\r\n  \"__syscall_fcntl64\": ___syscall_fcntl64,\r\n  \"__syscall_fstat64\": ___syscall_fstat64,\r\n  \"__syscall_ftruncate64\": ___syscall_ftruncate64,\r\n  \"__syscall_getcwd\": ___syscall_getcwd,\r\n  \"__syscall_getdents64\": ___syscall_getdents64,\r\n  \"__syscall_ioctl\": ___syscall_ioctl,\r\n  \"__syscall_lstat64\": ___syscall_lstat64,\r\n  \"__syscall_mkdirat\": ___syscall_mkdirat,\r\n  \"__syscall_newfstatat\": ___syscall_newfstatat,\r\n  \"__syscall_openat\": ___syscall_openat,\r\n  \"__syscall_rmdir\": ___syscall_rmdir,\r\n  \"__syscall_stat64\": ___syscall_stat64,\r\n  \"__syscall_unlinkat\": ___syscall_unlinkat,\r\n  \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\r\n  \"_localtime_js\": __localtime_js,\r\n  \"_mktime_js\": __mktime_js,\r\n  \"_tzset_js\": __tzset_js,\r\n  \"abort\": _abort,\r\n  \"eglBindAPI\": _eglBindAPI,\r\n  \"eglChooseConfig\": _eglChooseConfig,\r\n  \"eglCreateContext\": _eglCreateContext,\r\n  \"eglCreateWindowSurface\": _eglCreateWindowSurface,\r\n  \"eglDestroyContext\": _eglDestroyContext,\r\n  \"eglDestroySurface\": _eglDestroySurface,\r\n  \"eglGetConfigAttrib\": _eglGetConfigAttrib,\r\n  \"eglGetDisplay\": _eglGetDisplay,\r\n  \"eglGetError\": _eglGetError,\r\n  \"eglInitialize\": _eglInitialize,\r\n  \"eglMakeCurrent\": _eglMakeCurrent,\r\n  \"eglQueryString\": _eglQueryString,\r\n  \"eglSwapBuffers\": _eglSwapBuffers,\r\n  \"eglSwapInterval\": _eglSwapInterval,\r\n  \"eglTerminate\": _eglTerminate,\r\n  \"eglWaitGL\": _eglWaitGL,\r\n  \"eglWaitNative\": _eglWaitNative,\r\n  \"emscripten_asm_const_int\": _emscripten_asm_const_int,\r\n  \"emscripten_asm_const_int_sync_on_main_thread\": _emscripten_asm_const_int_sync_on_main_thread,\r\n  \"emscripten_date_now\": _emscripten_date_now,\r\n  \"emscripten_enter_soft_fullscreen\": _emscripten_enter_soft_fullscreen,\r\n  \"emscripten_exit_fullscreen\": _emscripten_exit_fullscreen,\r\n  \"emscripten_exit_pointerlock\": _emscripten_exit_pointerlock,\r\n  \"emscripten_exit_soft_fullscreen\": _emscripten_exit_soft_fullscreen,\r\n  \"emscripten_get_device_pixel_ratio\": _emscripten_get_device_pixel_ratio,\r\n  \"emscripten_get_element_css_size\": _emscripten_get_element_css_size,\r\n  \"emscripten_get_gamepad_status\": _emscripten_get_gamepad_status,\r\n  \"emscripten_get_now\": _emscripten_get_now,\r\n  \"emscripten_get_num_gamepads\": _emscripten_get_num_gamepads,\r\n  \"emscripten_get_screen_size\": _emscripten_get_screen_size,\r\n  \"emscripten_glActiveTexture\": _emscripten_glActiveTexture,\r\n  \"emscripten_glAttachShader\": _emscripten_glAttachShader,\r\n  \"emscripten_glBeginQuery\": _emscripten_glBeginQuery,\r\n  \"emscripten_glBeginQueryEXT\": _emscripten_glBeginQueryEXT,\r\n  \"emscripten_glBeginTransformFeedback\": _emscripten_glBeginTransformFeedback,\r\n  \"emscripten_glBindAttribLocation\": _emscripten_glBindAttribLocation,\r\n  \"emscripten_glBindBuffer\": _emscripten_glBindBuffer,\r\n  \"emscripten_glBindBufferBase\": _emscripten_glBindBufferBase,\r\n  \"emscripten_glBindBufferRange\": _emscripten_glBindBufferRange,\r\n  \"emscripten_glBindFramebuffer\": _emscripten_glBindFramebuffer,\r\n  \"emscripten_glBindRenderbuffer\": _emscripten_glBindRenderbuffer,\r\n  \"emscripten_glBindSampler\": _emscripten_glBindSampler,\r\n  \"emscripten_glBindTexture\": _emscripten_glBindTexture,\r\n  \"emscripten_glBindTransformFeedback\": _emscripten_glBindTransformFeedback,\r\n  \"emscripten_glBindVertexArray\": _emscripten_glBindVertexArray,\r\n  \"emscripten_glBindVertexArrayOES\": _emscripten_glBindVertexArrayOES,\r\n  \"emscripten_glBlendColor\": _emscripten_glBlendColor,\r\n  \"emscripten_glBlendEquation\": _emscripten_glBlendEquation,\r\n  \"emscripten_glBlendEquationSeparate\": _emscripten_glBlendEquationSeparate,\r\n  \"emscripten_glBlendFunc\": _emscripten_glBlendFunc,\r\n  \"emscripten_glBlendFuncSeparate\": _emscripten_glBlendFuncSeparate,\r\n  \"emscripten_glBlitFramebuffer\": _emscripten_glBlitFramebuffer,\r\n  \"emscripten_glBufferData\": _emscripten_glBufferData,\r\n  \"emscripten_glBufferSubData\": _emscripten_glBufferSubData,\r\n  \"emscripten_glCheckFramebufferStatus\": _emscripten_glCheckFramebufferStatus,\r\n  \"emscripten_glClear\": _emscripten_glClear,\r\n  \"emscripten_glClearBufferfi\": _emscripten_glClearBufferfi,\r\n  \"emscripten_glClearBufferfv\": _emscripten_glClearBufferfv,\r\n  \"emscripten_glClearBufferiv\": _emscripten_glClearBufferiv,\r\n  \"emscripten_glClearBufferuiv\": _emscripten_glClearBufferuiv,\r\n  \"emscripten_glClearColor\": _emscripten_glClearColor,\r\n  \"emscripten_glClearDepthf\": _emscripten_glClearDepthf,\r\n  \"emscripten_glClearStencil\": _emscripten_glClearStencil,\r\n  \"emscripten_glClientWaitSync\": _emscripten_glClientWaitSync,\r\n  \"emscripten_glColorMask\": _emscripten_glColorMask,\r\n  \"emscripten_glCompileShader\": _emscripten_glCompileShader,\r\n  \"emscripten_glCompressedTexImage2D\": _emscripten_glCompressedTexImage2D,\r\n  \"emscripten_glCompressedTexImage3D\": _emscripten_glCompressedTexImage3D,\r\n  \"emscripten_glCompressedTexSubImage2D\": _emscripten_glCompressedTexSubImage2D,\r\n  \"emscripten_glCompressedTexSubImage3D\": _emscripten_glCompressedTexSubImage3D,\r\n  \"emscripten_glCopyBufferSubData\": _emscripten_glCopyBufferSubData,\r\n  \"emscripten_glCopyTexImage2D\": _emscripten_glCopyTexImage2D,\r\n  \"emscripten_glCopyTexSubImage2D\": _emscripten_glCopyTexSubImage2D,\r\n  \"emscripten_glCopyTexSubImage3D\": _emscripten_glCopyTexSubImage3D,\r\n  \"emscripten_glCreateProgram\": _emscripten_glCreateProgram,\r\n  \"emscripten_glCreateShader\": _emscripten_glCreateShader,\r\n  \"emscripten_glCullFace\": _emscripten_glCullFace,\r\n  \"emscripten_glDeleteBuffers\": _emscripten_glDeleteBuffers,\r\n  \"emscripten_glDeleteFramebuffers\": _emscripten_glDeleteFramebuffers,\r\n  \"emscripten_glDeleteProgram\": _emscripten_glDeleteProgram,\r\n  \"emscripten_glDeleteQueries\": _emscripten_glDeleteQueries,\r\n  \"emscripten_glDeleteQueriesEXT\": _emscripten_glDeleteQueriesEXT,\r\n  \"emscripten_glDeleteRenderbuffers\": _emscripten_glDeleteRenderbuffers,\r\n  \"emscripten_glDeleteSamplers\": _emscripten_glDeleteSamplers,\r\n  \"emscripten_glDeleteShader\": _emscripten_glDeleteShader,\r\n  \"emscripten_glDeleteSync\": _emscripten_glDeleteSync,\r\n  \"emscripten_glDeleteTextures\": _emscripten_glDeleteTextures,\r\n  \"emscripten_glDeleteTransformFeedbacks\": _emscripten_glDeleteTransformFeedbacks,\r\n  \"emscripten_glDeleteVertexArrays\": _emscripten_glDeleteVertexArrays,\r\n  \"emscripten_glDeleteVertexArraysOES\": _emscripten_glDeleteVertexArraysOES,\r\n  \"emscripten_glDepthFunc\": _emscripten_glDepthFunc,\r\n  \"emscripten_glDepthMask\": _emscripten_glDepthMask,\r\n  \"emscripten_glDepthRangef\": _emscripten_glDepthRangef,\r\n  \"emscripten_glDetachShader\": _emscripten_glDetachShader,\r\n  \"emscripten_glDisable\": _emscripten_glDisable,\r\n  \"emscripten_glDisableVertexAttribArray\": _emscripten_glDisableVertexAttribArray,\r\n  \"emscripten_glDrawArrays\": _emscripten_glDrawArrays,\r\n  \"emscripten_glDrawArraysInstanced\": _emscripten_glDrawArraysInstanced,\r\n  \"emscripten_glDrawArraysInstancedANGLE\": _emscripten_glDrawArraysInstancedANGLE,\r\n  \"emscripten_glDrawArraysInstancedARB\": _emscripten_glDrawArraysInstancedARB,\r\n  \"emscripten_glDrawArraysInstancedEXT\": _emscripten_glDrawArraysInstancedEXT,\r\n  \"emscripten_glDrawArraysInstancedNV\": _emscripten_glDrawArraysInstancedNV,\r\n  \"emscripten_glDrawBuffers\": _emscripten_glDrawBuffers,\r\n  \"emscripten_glDrawBuffersEXT\": _emscripten_glDrawBuffersEXT,\r\n  \"emscripten_glDrawBuffersWEBGL\": _emscripten_glDrawBuffersWEBGL,\r\n  \"emscripten_glDrawElements\": _emscripten_glDrawElements,\r\n  \"emscripten_glDrawElementsInstanced\": _emscripten_glDrawElementsInstanced,\r\n  \"emscripten_glDrawElementsInstancedANGLE\": _emscripten_glDrawElementsInstancedANGLE,\r\n  \"emscripten_glDrawElementsInstancedARB\": _emscripten_glDrawElementsInstancedARB,\r\n  \"emscripten_glDrawElementsInstancedEXT\": _emscripten_glDrawElementsInstancedEXT,\r\n  \"emscripten_glDrawElementsInstancedNV\": _emscripten_glDrawElementsInstancedNV,\r\n  \"emscripten_glDrawRangeElements\": _emscripten_glDrawRangeElements,\r\n  \"emscripten_glEnable\": _emscripten_glEnable,\r\n  \"emscripten_glEnableVertexAttribArray\": _emscripten_glEnableVertexAttribArray,\r\n  \"emscripten_glEndQuery\": _emscripten_glEndQuery,\r\n  \"emscripten_glEndQueryEXT\": _emscripten_glEndQueryEXT,\r\n  \"emscripten_glEndTransformFeedback\": _emscripten_glEndTransformFeedback,\r\n  \"emscripten_glFenceSync\": _emscripten_glFenceSync,\r\n  \"emscripten_glFinish\": _emscripten_glFinish,\r\n  \"emscripten_glFlush\": _emscripten_glFlush,\r\n  \"emscripten_glFramebufferRenderbuffer\": _emscripten_glFramebufferRenderbuffer,\r\n  \"emscripten_glFramebufferTexture2D\": _emscripten_glFramebufferTexture2D,\r\n  \"emscripten_glFramebufferTextureLayer\": _emscripten_glFramebufferTextureLayer,\r\n  \"emscripten_glFrontFace\": _emscripten_glFrontFace,\r\n  \"emscripten_glGenBuffers\": _emscripten_glGenBuffers,\r\n  \"emscripten_glGenFramebuffers\": _emscripten_glGenFramebuffers,\r\n  \"emscripten_glGenQueries\": _emscripten_glGenQueries,\r\n  \"emscripten_glGenQueriesEXT\": _emscripten_glGenQueriesEXT,\r\n  \"emscripten_glGenRenderbuffers\": _emscripten_glGenRenderbuffers,\r\n  \"emscripten_glGenSamplers\": _emscripten_glGenSamplers,\r\n  \"emscripten_glGenTextures\": _emscripten_glGenTextures,\r\n  \"emscripten_glGenTransformFeedbacks\": _emscripten_glGenTransformFeedbacks,\r\n  \"emscripten_glGenVertexArrays\": _emscripten_glGenVertexArrays,\r\n  \"emscripten_glGenVertexArraysOES\": _emscripten_glGenVertexArraysOES,\r\n  \"emscripten_glGenerateMipmap\": _emscripten_glGenerateMipmap,\r\n  \"emscripten_glGetActiveAttrib\": _emscripten_glGetActiveAttrib,\r\n  \"emscripten_glGetActiveUniform\": _emscripten_glGetActiveUniform,\r\n  \"emscripten_glGetActiveUniformBlockName\": _emscripten_glGetActiveUniformBlockName,\r\n  \"emscripten_glGetActiveUniformBlockiv\": _emscripten_glGetActiveUniformBlockiv,\r\n  \"emscripten_glGetActiveUniformsiv\": _emscripten_glGetActiveUniformsiv,\r\n  \"emscripten_glGetAttachedShaders\": _emscripten_glGetAttachedShaders,\r\n  \"emscripten_glGetAttribLocation\": _emscripten_glGetAttribLocation,\r\n  \"emscripten_glGetBooleanv\": _emscripten_glGetBooleanv,\r\n  \"emscripten_glGetBufferParameteri64v\": _emscripten_glGetBufferParameteri64v,\r\n  \"emscripten_glGetBufferParameteriv\": _emscripten_glGetBufferParameteriv,\r\n  \"emscripten_glGetError\": _emscripten_glGetError,\r\n  \"emscripten_glGetFloatv\": _emscripten_glGetFloatv,\r\n  \"emscripten_glGetFragDataLocation\": _emscripten_glGetFragDataLocation,\r\n  \"emscripten_glGetFramebufferAttachmentParameteriv\": _emscripten_glGetFramebufferAttachmentParameteriv,\r\n  \"emscripten_glGetInteger64i_v\": _emscripten_glGetInteger64i_v,\r\n  \"emscripten_glGetInteger64v\": _emscripten_glGetInteger64v,\r\n  \"emscripten_glGetIntegeri_v\": _emscripten_glGetIntegeri_v,\r\n  \"emscripten_glGetIntegerv\": _emscripten_glGetIntegerv,\r\n  \"emscripten_glGetInternalformativ\": _emscripten_glGetInternalformativ,\r\n  \"emscripten_glGetProgramBinary\": _emscripten_glGetProgramBinary,\r\n  \"emscripten_glGetProgramInfoLog\": _emscripten_glGetProgramInfoLog,\r\n  \"emscripten_glGetProgramiv\": _emscripten_glGetProgramiv,\r\n  \"emscripten_glGetQueryObjecti64vEXT\": _emscripten_glGetQueryObjecti64vEXT,\r\n  \"emscripten_glGetQueryObjectivEXT\": _emscripten_glGetQueryObjectivEXT,\r\n  \"emscripten_glGetQueryObjectui64vEXT\": _emscripten_glGetQueryObjectui64vEXT,\r\n  \"emscripten_glGetQueryObjectuiv\": _emscripten_glGetQueryObjectuiv,\r\n  \"emscripten_glGetQueryObjectuivEXT\": _emscripten_glGetQueryObjectuivEXT,\r\n  \"emscripten_glGetQueryiv\": _emscripten_glGetQueryiv,\r\n  \"emscripten_glGetQueryivEXT\": _emscripten_glGetQueryivEXT,\r\n  \"emscripten_glGetRenderbufferParameteriv\": _emscripten_glGetRenderbufferParameteriv,\r\n  \"emscripten_glGetSamplerParameterfv\": _emscripten_glGetSamplerParameterfv,\r\n  \"emscripten_glGetSamplerParameteriv\": _emscripten_glGetSamplerParameteriv,\r\n  \"emscripten_glGetShaderInfoLog\": _emscripten_glGetShaderInfoLog,\r\n  \"emscripten_glGetShaderPrecisionFormat\": _emscripten_glGetShaderPrecisionFormat,\r\n  \"emscripten_glGetShaderSource\": _emscripten_glGetShaderSource,\r\n  \"emscripten_glGetShaderiv\": _emscripten_glGetShaderiv,\r\n  \"emscripten_glGetString\": _emscripten_glGetString,\r\n  \"emscripten_glGetStringi\": _emscripten_glGetStringi,\r\n  \"emscripten_glGetSynciv\": _emscripten_glGetSynciv,\r\n  \"emscripten_glGetTexParameterfv\": _emscripten_glGetTexParameterfv,\r\n  \"emscripten_glGetTexParameteriv\": _emscripten_glGetTexParameteriv,\r\n  \"emscripten_glGetTransformFeedbackVarying\": _emscripten_glGetTransformFeedbackVarying,\r\n  \"emscripten_glGetUniformBlockIndex\": _emscripten_glGetUniformBlockIndex,\r\n  \"emscripten_glGetUniformIndices\": _emscripten_glGetUniformIndices,\r\n  \"emscripten_glGetUniformLocation\": _emscripten_glGetUniformLocation,\r\n  \"emscripten_glGetUniformfv\": _emscripten_glGetUniformfv,\r\n  \"emscripten_glGetUniformiv\": _emscripten_glGetUniformiv,\r\n  \"emscripten_glGetUniformuiv\": _emscripten_glGetUniformuiv,\r\n  \"emscripten_glGetVertexAttribIiv\": _emscripten_glGetVertexAttribIiv,\r\n  \"emscripten_glGetVertexAttribIuiv\": _emscripten_glGetVertexAttribIuiv,\r\n  \"emscripten_glGetVertexAttribPointerv\": _emscripten_glGetVertexAttribPointerv,\r\n  \"emscripten_glGetVertexAttribfv\": _emscripten_glGetVertexAttribfv,\r\n  \"emscripten_glGetVertexAttribiv\": _emscripten_glGetVertexAttribiv,\r\n  \"emscripten_glHint\": _emscripten_glHint,\r\n  \"emscripten_glInvalidateFramebuffer\": _emscripten_glInvalidateFramebuffer,\r\n  \"emscripten_glInvalidateSubFramebuffer\": _emscripten_glInvalidateSubFramebuffer,\r\n  \"emscripten_glIsBuffer\": _emscripten_glIsBuffer,\r\n  \"emscripten_glIsEnabled\": _emscripten_glIsEnabled,\r\n  \"emscripten_glIsFramebuffer\": _emscripten_glIsFramebuffer,\r\n  \"emscripten_glIsProgram\": _emscripten_glIsProgram,\r\n  \"emscripten_glIsQuery\": _emscripten_glIsQuery,\r\n  \"emscripten_glIsQueryEXT\": _emscripten_glIsQueryEXT,\r\n  \"emscripten_glIsRenderbuffer\": _emscripten_glIsRenderbuffer,\r\n  \"emscripten_glIsSampler\": _emscripten_glIsSampler,\r\n  \"emscripten_glIsShader\": _emscripten_glIsShader,\r\n  \"emscripten_glIsSync\": _emscripten_glIsSync,\r\n  \"emscripten_glIsTexture\": _emscripten_glIsTexture,\r\n  \"emscripten_glIsTransformFeedback\": _emscripten_glIsTransformFeedback,\r\n  \"emscripten_glIsVertexArray\": _emscripten_glIsVertexArray,\r\n  \"emscripten_glIsVertexArrayOES\": _emscripten_glIsVertexArrayOES,\r\n  \"emscripten_glLineWidth\": _emscripten_glLineWidth,\r\n  \"emscripten_glLinkProgram\": _emscripten_glLinkProgram,\r\n  \"emscripten_glPauseTransformFeedback\": _emscripten_glPauseTransformFeedback,\r\n  \"emscripten_glPixelStorei\": _emscripten_glPixelStorei,\r\n  \"emscripten_glPolygonOffset\": _emscripten_glPolygonOffset,\r\n  \"emscripten_glProgramBinary\": _emscripten_glProgramBinary,\r\n  \"emscripten_glProgramParameteri\": _emscripten_glProgramParameteri,\r\n  \"emscripten_glQueryCounterEXT\": _emscripten_glQueryCounterEXT,\r\n  \"emscripten_glReadBuffer\": _emscripten_glReadBuffer,\r\n  \"emscripten_glReadPixels\": _emscripten_glReadPixels,\r\n  \"emscripten_glReleaseShaderCompiler\": _emscripten_glReleaseShaderCompiler,\r\n  \"emscripten_glRenderbufferStorage\": _emscripten_glRenderbufferStorage,\r\n  \"emscripten_glRenderbufferStorageMultisample\": _emscripten_glRenderbufferStorageMultisample,\r\n  \"emscripten_glResumeTransformFeedback\": _emscripten_glResumeTransformFeedback,\r\n  \"emscripten_glSampleCoverage\": _emscripten_glSampleCoverage,\r\n  \"emscripten_glSamplerParameterf\": _emscripten_glSamplerParameterf,\r\n  \"emscripten_glSamplerParameterfv\": _emscripten_glSamplerParameterfv,\r\n  \"emscripten_glSamplerParameteri\": _emscripten_glSamplerParameteri,\r\n  \"emscripten_glSamplerParameteriv\": _emscripten_glSamplerParameteriv,\r\n  \"emscripten_glScissor\": _emscripten_glScissor,\r\n  \"emscripten_glShaderBinary\": _emscripten_glShaderBinary,\r\n  \"emscripten_glShaderSource\": _emscripten_glShaderSource,\r\n  \"emscripten_glStencilFunc\": _emscripten_glStencilFunc,\r\n  \"emscripten_glStencilFuncSeparate\": _emscripten_glStencilFuncSeparate,\r\n  \"emscripten_glStencilMask\": _emscripten_glStencilMask,\r\n  \"emscripten_glStencilMaskSeparate\": _emscripten_glStencilMaskSeparate,\r\n  \"emscripten_glStencilOp\": _emscripten_glStencilOp,\r\n  \"emscripten_glStencilOpSeparate\": _emscripten_glStencilOpSeparate,\r\n  \"emscripten_glTexImage2D\": _emscripten_glTexImage2D,\r\n  \"emscripten_glTexImage3D\": _emscripten_glTexImage3D,\r\n  \"emscripten_glTexParameterf\": _emscripten_glTexParameterf,\r\n  \"emscripten_glTexParameterfv\": _emscripten_glTexParameterfv,\r\n  \"emscripten_glTexParameteri\": _emscripten_glTexParameteri,\r\n  \"emscripten_glTexParameteriv\": _emscripten_glTexParameteriv,\r\n  \"emscripten_glTexStorage2D\": _emscripten_glTexStorage2D,\r\n  \"emscripten_glTexStorage3D\": _emscripten_glTexStorage3D,\r\n  \"emscripten_glTexSubImage2D\": _emscripten_glTexSubImage2D,\r\n  \"emscripten_glTexSubImage3D\": _emscripten_glTexSubImage3D,\r\n  \"emscripten_glTransformFeedbackVaryings\": _emscripten_glTransformFeedbackVaryings,\r\n  \"emscripten_glUniform1f\": _emscripten_glUniform1f,\r\n  \"emscripten_glUniform1fv\": _emscripten_glUniform1fv,\r\n  \"emscripten_glUniform1i\": _emscripten_glUniform1i,\r\n  \"emscripten_glUniform1iv\": _emscripten_glUniform1iv,\r\n  \"emscripten_glUniform1ui\": _emscripten_glUniform1ui,\r\n  \"emscripten_glUniform1uiv\": _emscripten_glUniform1uiv,\r\n  \"emscripten_glUniform2f\": _emscripten_glUniform2f,\r\n  \"emscripten_glUniform2fv\": _emscripten_glUniform2fv,\r\n  \"emscripten_glUniform2i\": _emscripten_glUniform2i,\r\n  \"emscripten_glUniform2iv\": _emscripten_glUniform2iv,\r\n  \"emscripten_glUniform2ui\": _emscripten_glUniform2ui,\r\n  \"emscripten_glUniform2uiv\": _emscripten_glUniform2uiv,\r\n  \"emscripten_glUniform3f\": _emscripten_glUniform3f,\r\n  \"emscripten_glUniform3fv\": _emscripten_glUniform3fv,\r\n  \"emscripten_glUniform3i\": _emscripten_glUniform3i,\r\n  \"emscripten_glUniform3iv\": _emscripten_glUniform3iv,\r\n  \"emscripten_glUniform3ui\": _emscripten_glUniform3ui,\r\n  \"emscripten_glUniform3uiv\": _emscripten_glUniform3uiv,\r\n  \"emscripten_glUniform4f\": _emscripten_glUniform4f,\r\n  \"emscripten_glUniform4fv\": _emscripten_glUniform4fv,\r\n  \"emscripten_glUniform4i\": _emscripten_glUniform4i,\r\n  \"emscripten_glUniform4iv\": _emscripten_glUniform4iv,\r\n  \"emscripten_glUniform4ui\": _emscripten_glUniform4ui,\r\n  \"emscripten_glUniform4uiv\": _emscripten_glUniform4uiv,\r\n  \"emscripten_glUniformBlockBinding\": _emscripten_glUniformBlockBinding,\r\n  \"emscripten_glUniformMatrix2fv\": _emscripten_glUniformMatrix2fv,\r\n  \"emscripten_glUniformMatrix2x3fv\": _emscripten_glUniformMatrix2x3fv,\r\n  \"emscripten_glUniformMatrix2x4fv\": _emscripten_glUniformMatrix2x4fv,\r\n  \"emscripten_glUniformMatrix3fv\": _emscripten_glUniformMatrix3fv,\r\n  \"emscripten_glUniformMatrix3x2fv\": _emscripten_glUniformMatrix3x2fv,\r\n  \"emscripten_glUniformMatrix3x4fv\": _emscripten_glUniformMatrix3x4fv,\r\n  \"emscripten_glUniformMatrix4fv\": _emscripten_glUniformMatrix4fv,\r\n  \"emscripten_glUniformMatrix4x2fv\": _emscripten_glUniformMatrix4x2fv,\r\n  \"emscripten_glUniformMatrix4x3fv\": _emscripten_glUniformMatrix4x3fv,\r\n  \"emscripten_glUseProgram\": _emscripten_glUseProgram,\r\n  \"emscripten_glValidateProgram\": _emscripten_glValidateProgram,\r\n  \"emscripten_glVertexAttrib1f\": _emscripten_glVertexAttrib1f,\r\n  \"emscripten_glVertexAttrib1fv\": _emscripten_glVertexAttrib1fv,\r\n  \"emscripten_glVertexAttrib2f\": _emscripten_glVertexAttrib2f,\r\n  \"emscripten_glVertexAttrib2fv\": _emscripten_glVertexAttrib2fv,\r\n  \"emscripten_glVertexAttrib3f\": _emscripten_glVertexAttrib3f,\r\n  \"emscripten_glVertexAttrib3fv\": _emscripten_glVertexAttrib3fv,\r\n  \"emscripten_glVertexAttrib4f\": _emscripten_glVertexAttrib4f,\r\n  \"emscripten_glVertexAttrib4fv\": _emscripten_glVertexAttrib4fv,\r\n  \"emscripten_glVertexAttribDivisor\": _emscripten_glVertexAttribDivisor,\r\n  \"emscripten_glVertexAttribDivisorANGLE\": _emscripten_glVertexAttribDivisorANGLE,\r\n  \"emscripten_glVertexAttribDivisorARB\": _emscripten_glVertexAttribDivisorARB,\r\n  \"emscripten_glVertexAttribDivisorEXT\": _emscripten_glVertexAttribDivisorEXT,\r\n  \"emscripten_glVertexAttribDivisorNV\": _emscripten_glVertexAttribDivisorNV,\r\n  \"emscripten_glVertexAttribI4i\": _emscripten_glVertexAttribI4i,\r\n  \"emscripten_glVertexAttribI4iv\": _emscripten_glVertexAttribI4iv,\r\n  \"emscripten_glVertexAttribI4ui\": _emscripten_glVertexAttribI4ui,\r\n  \"emscripten_glVertexAttribI4uiv\": _emscripten_glVertexAttribI4uiv,\r\n  \"emscripten_glVertexAttribIPointer\": _emscripten_glVertexAttribIPointer,\r\n  \"emscripten_glVertexAttribPointer\": _emscripten_glVertexAttribPointer,\r\n  \"emscripten_glViewport\": _emscripten_glViewport,\r\n  \"emscripten_glWaitSync\": _emscripten_glWaitSync,\r\n  \"emscripten_has_asyncify\": _emscripten_has_asyncify,\r\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\r\n  \"emscripten_request_fullscreen_strategy\": _emscripten_request_fullscreen_strategy,\r\n  \"emscripten_request_pointerlock\": _emscripten_request_pointerlock,\r\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\r\n  \"emscripten_sample_gamepad_data\": _emscripten_sample_gamepad_data,\r\n  \"emscripten_set_beforeunload_callback_on_thread\": _emscripten_set_beforeunload_callback_on_thread,\r\n  \"emscripten_set_blur_callback_on_thread\": _emscripten_set_blur_callback_on_thread,\r\n  \"emscripten_set_canvas_element_size\": _emscripten_set_canvas_element_size,\r\n  \"emscripten_set_element_css_size\": _emscripten_set_element_css_size,\r\n  \"emscripten_set_focus_callback_on_thread\": _emscripten_set_focus_callback_on_thread,\r\n  \"emscripten_set_fullscreenchange_callback_on_thread\": _emscripten_set_fullscreenchange_callback_on_thread,\r\n  \"emscripten_set_gamepadconnected_callback_on_thread\": _emscripten_set_gamepadconnected_callback_on_thread,\r\n  \"emscripten_set_gamepaddisconnected_callback_on_thread\": _emscripten_set_gamepaddisconnected_callback_on_thread,\r\n  \"emscripten_set_keydown_callback_on_thread\": _emscripten_set_keydown_callback_on_thread,\r\n  \"emscripten_set_keypress_callback_on_thread\": _emscripten_set_keypress_callback_on_thread,\r\n  \"emscripten_set_keyup_callback_on_thread\": _emscripten_set_keyup_callback_on_thread,\r\n  \"emscripten_set_main_loop\": _emscripten_set_main_loop,\r\n  \"emscripten_set_mousedown_callback_on_thread\": _emscripten_set_mousedown_callback_on_thread,\r\n  \"emscripten_set_mouseenter_callback_on_thread\": _emscripten_set_mouseenter_callback_on_thread,\r\n  \"emscripten_set_mouseleave_callback_on_thread\": _emscripten_set_mouseleave_callback_on_thread,\r\n  \"emscripten_set_mousemove_callback_on_thread\": _emscripten_set_mousemove_callback_on_thread,\r\n  \"emscripten_set_mouseup_callback_on_thread\": _emscripten_set_mouseup_callback_on_thread,\r\n  \"emscripten_set_pointerlockchange_callback_on_thread\": _emscripten_set_pointerlockchange_callback_on_thread,\r\n  \"emscripten_set_resize_callback_on_thread\": _emscripten_set_resize_callback_on_thread,\r\n  \"emscripten_set_touchcancel_callback_on_thread\": _emscripten_set_touchcancel_callback_on_thread,\r\n  \"emscripten_set_touchend_callback_on_thread\": _emscripten_set_touchend_callback_on_thread,\r\n  \"emscripten_set_touchmove_callback_on_thread\": _emscripten_set_touchmove_callback_on_thread,\r\n  \"emscripten_set_touchstart_callback_on_thread\": _emscripten_set_touchstart_callback_on_thread,\r\n  \"emscripten_set_visibilitychange_callback_on_thread\": _emscripten_set_visibilitychange_callback_on_thread,\r\n  \"emscripten_set_wheel_callback_on_thread\": _emscripten_set_wheel_callback_on_thread,\r\n  \"emscripten_set_window_title\": _emscripten_set_window_title,\r\n  \"emscripten_sleep\": _emscripten_sleep,\r\n  \"environ_get\": _environ_get,\r\n  \"environ_sizes_get\": _environ_sizes_get,\r\n  \"exit\": _exit,\r\n  \"fd_close\": _fd_close,\r\n  \"fd_fdstat_get\": _fd_fdstat_get,\r\n  \"fd_read\": _fd_read,\r\n  \"fd_seek\": _fd_seek,\r\n  \"fd_write\": _fd_write,\r\n  \"glGetFloatv\": _glGetFloatv,\r\n  \"strftime\": _strftime,\r\n  \"strftime_l\": _strftime_l\r\n};\r\nvar asm = createWasm();\r\n/** @type {function(...*):?} */\r\nvar ___wasm_call_ctors = function() {\r\n  return (___wasm_call_ctors = Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _free = function() {\r\n  return (_free = Module[\"asm\"][\"free\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _malloc = function() {\r\n  return (_malloc = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___errno_location = function() {\r\n  return (___errno_location = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebSetFullscreen = Module[\"_I_WebSetFullscreen\"] = function() {\r\n  return (_I_WebSetFullscreen = Module[\"_I_WebSetFullscreen\"] = Module[\"asm\"][\"I_WebSetFullscreen\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebOpenGameMenu = Module[\"_I_WebOpenGameMenu\"] = function() {\r\n  return (_I_WebOpenGameMenu = Module[\"_I_WebOpenGameMenu\"] = Module[\"asm\"][\"I_WebOpenGameMenu\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebSyncScreenSize = Module[\"_I_WebSyncScreenSize\"] = function() {\r\n  return (_I_WebSyncScreenSize = Module[\"_I_WebSyncScreenSize\"] = Module[\"asm\"][\"I_WebSyncScreenSize\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebMain = Module[\"_I_WebMain\"] = function() {\r\n  return (_I_WebMain = Module[\"_I_WebMain\"] = Module[\"asm\"][\"I_WebMain\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _main = Module[\"_main\"] = function() {\r\n  return (_main = Module[\"_main\"] = Module[\"asm\"][\"__main_argc_argv\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_set_limits = function() {\r\n  return (_emscripten_stack_set_limits = Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_get_base = function() {\r\n  return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_get_end = function() {\r\n  return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackSave = function() {\r\n  return (stackSave = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackRestore = function() {\r\n  return (stackRestore = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackAlloc = function() {\r\n  return (stackAlloc = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___cxa_increment_exception_refcount = function() {\r\n  return (___cxa_increment_exception_refcount = Module[\"asm\"][\"__cxa_increment_exception_refcount\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___cxa_is_pointer_type = function() {\r\n  return (___cxa_is_pointer_type = Module[\"asm\"][\"__cxa_is_pointer_type\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vi = Module[\"dynCall_vi\"] = function() {\r\n  return (dynCall_vi = Module[\"dynCall_vi\"] = Module[\"asm\"][\"dynCall_vi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() {\r\n  return (dynCall_ii = Module[\"dynCall_ii\"] = Module[\"asm\"][\"dynCall_ii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iii = Module[\"dynCall_iii\"] = function() {\r\n  return (dynCall_iii = Module[\"dynCall_iii\"] = Module[\"asm\"][\"dynCall_iii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vif = Module[\"dynCall_vif\"] = function() {\r\n  return (dynCall_vif = Module[\"dynCall_vif\"] = Module[\"asm\"][\"dynCall_vif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vffff = Module[\"dynCall_vffff\"] = function() {\r\n  return (dynCall_vffff = Module[\"dynCall_vffff\"] = Module[\"asm\"][\"dynCall_vffff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vii = Module[\"dynCall_vii\"] = function() {\r\n  return (dynCall_vii = Module[\"dynCall_vii\"] = Module[\"asm\"][\"dynCall_vii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() {\r\n  return (dynCall_iiii = Module[\"dynCall_iiii\"] = Module[\"asm\"][\"dynCall_iiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viii = Module[\"dynCall_viii\"] = function() {\r\n  return (dynCall_viii = Module[\"dynCall_viii\"] = Module[\"asm\"][\"dynCall_viii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vfff = Module[\"dynCall_vfff\"] = function() {\r\n  return (dynCall_vfff = Module[\"dynCall_vfff\"] = Module[\"asm\"][\"dynCall_vfff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_v = Module[\"dynCall_v\"] = function() {\r\n  return (dynCall_v = Module[\"dynCall_v\"] = Module[\"asm\"][\"dynCall_v\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function() {\r\n  return (dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = Module[\"asm\"][\"dynCall_iiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = function() {\r\n  return (dynCall_viiii = Module[\"dynCall_viiii\"] = Module[\"asm\"][\"dynCall_viiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiid = Module[\"dynCall_iiid\"] = function() {\r\n  return (dynCall_iiid = Module[\"dynCall_iiid\"] = Module[\"asm\"][\"dynCall_iiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = function() {\r\n  return (dynCall_iiiii = Module[\"dynCall_iiiii\"] = Module[\"asm\"][\"dynCall_iiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iijii = Module[\"dynCall_iijii\"] = function() {\r\n  return (dynCall_iijii = Module[\"dynCall_iijii\"] = Module[\"asm\"][\"dynCall_iijii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vf = Module[\"dynCall_vf\"] = function() {\r\n  return (dynCall_vf = Module[\"dynCall_vf\"] = Module[\"asm\"][\"dynCall_vf\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viif = Module[\"dynCall_viif\"] = function() {\r\n  return (dynCall_viif = Module[\"dynCall_viif\"] = Module[\"asm\"][\"dynCall_viif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = function() {\r\n  return (dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vff = Module[\"dynCall_vff\"] = function() {\r\n  return (dynCall_vff = Module[\"dynCall_vff\"] = Module[\"asm\"][\"dynCall_vff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viffff = Module[\"dynCall_viffff\"] = function() {\r\n  return (dynCall_viffff = Module[\"dynCall_viffff\"] = Module[\"asm\"][\"dynCall_viffff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiji = Module[\"dynCall_iiji\"] = function() {\r\n  return (dynCall_iiji = Module[\"dynCall_iiji\"] = Module[\"asm\"][\"dynCall_iiji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iji = Module[\"dynCall_iji\"] = function() {\r\n  return (dynCall_iji = Module[\"dynCall_iji\"] = Module[\"asm\"][\"dynCall_iji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function() {\r\n  return (dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = Module[\"asm\"][\"dynCall_viiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = function() {\r\n  return (dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = Module[\"asm\"][\"dynCall_iidiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\r\n  return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"dynCall_jiji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\r\n  return (dynCall_ji = Module[\"dynCall_ji\"] = Module[\"asm\"][\"dynCall_ji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = function() {\r\n  return (dynCall_viiiii = Module[\"dynCall_viiiii\"] = Module[\"asm\"][\"dynCall_viiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_i = Module[\"dynCall_i\"] = function() {\r\n  return (dynCall_i = Module[\"dynCall_i\"] = Module[\"asm\"][\"dynCall_i\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vfi = Module[\"dynCall_vfi\"] = function() {\r\n  return (dynCall_vfi = Module[\"dynCall_vfi\"] = Module[\"asm\"][\"dynCall_vfi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viff = Module[\"dynCall_viff\"] = function() {\r\n  return (dynCall_viff = Module[\"dynCall_viff\"] = Module[\"asm\"][\"dynCall_viff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vifff = Module[\"dynCall_vifff\"] = function() {\r\n  return (dynCall_vifff = Module[\"dynCall_vifff\"] = Module[\"asm\"][\"dynCall_vifff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifi = Module[\"dynCall_viifi\"] = function() {\r\n  return (dynCall_viifi = Module[\"dynCall_viifi\"] = Module[\"asm\"][\"dynCall_viifi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifff = Module[\"dynCall_viifff\"] = function() {\r\n  return (dynCall_viifff = Module[\"dynCall_viifff\"] = Module[\"asm\"][\"dynCall_viifff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifffii = Module[\"dynCall_viifffii\"] = function() {\r\n  return (dynCall_viifffii = Module[\"dynCall_viifffii\"] = Module[\"asm\"][\"dynCall_viifffii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiifiiiii = Module[\"dynCall_viiiifiiiii\"] = function() {\r\n  return (dynCall_viiiifiiiii = Module[\"dynCall_viiiifiiiii\"] = Module[\"asm\"][\"dynCall_viiiifiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = function() {\r\n  return (dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_diii = Module[\"dynCall_diii\"] = function() {\r\n  return (dynCall_diii = Module[\"dynCall_diii\"] = Module[\"asm\"][\"dynCall_diii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiid = Module[\"dynCall_viiid\"] = function() {\r\n  return (dynCall_viiid = Module[\"dynCall_viiid\"] = Module[\"asm\"][\"dynCall_viiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiddd = Module[\"dynCall_viiiddd\"] = function() {\r\n  return (dynCall_viiiddd = Module[\"dynCall_viiiddd\"] = Module[\"asm\"][\"dynCall_viiiddd\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vid = Module[\"dynCall_vid\"] = function() {\r\n  return (dynCall_vid = Module[\"dynCall_vid\"] = Module[\"asm\"][\"dynCall_vid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiffi = Module[\"dynCall_viiffi\"] = function() {\r\n  return (dynCall_viiffi = Module[\"dynCall_viiffi\"] = Module[\"asm\"][\"dynCall_viiffi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiifii = Module[\"dynCall_iiiifii\"] = function() {\r\n  return (dynCall_iiiifii = Module[\"dynCall_iiiifii\"] = Module[\"asm\"][\"dynCall_iiiifii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiif = Module[\"dynCall_iiiiif\"] = function() {\r\n  return (dynCall_iiiiif = Module[\"dynCall_iiiiif\"] = Module[\"asm\"][\"dynCall_iiiiif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vijji = Module[\"dynCall_vijji\"] = function() {\r\n  return (dynCall_vijji = Module[\"dynCall_vijji\"] = Module[\"asm\"][\"dynCall_vijji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\r\n  return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"dynCall_viijii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = function() {\r\n  return (dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\r\n  return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"dynCall_iiiiij\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = function() {\r\n  return (dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = Module[\"asm\"][\"dynCall_iiiiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\r\n  return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiijj\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = function() {\r\n  return (dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\r\n  return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiiijj\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_start_unwind = function() {\r\n  return (_asyncify_start_unwind = Module[\"asm\"][\"asyncify_start_unwind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_stop_unwind = function() {\r\n  return (_asyncify_stop_unwind = Module[\"asm\"][\"asyncify_stop_unwind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_start_rewind = function() {\r\n  return (_asyncify_start_rewind = Module[\"asm\"][\"asyncify_start_rewind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_stop_rewind = function() {\r\n  return (_asyncify_stop_rewind = Module[\"asm\"][\"asyncify_stop_rewind\"]).apply(null, arguments);\r\n};\r\n\r\n\r\n\r\n// include: postamble.js\r\n// === Auto-generated postamble setup entry stuff ===\r\n\r\nModule[\"addRunDependency\"] = addRunDependency;\r\nModule[\"removeRunDependency\"] = removeRunDependency;\r\nModule[\"FS_createPath\"] = FS.createPath;\r\nModule[\"FS_createDataFile\"] = FS.createDataFile;\r\nModule[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\r\nModule[\"FS_createLazyFile\"] = FS.createLazyFile;\r\nModule[\"FS_createDevice\"] = FS.createDevice;\r\nModule[\"FS_unlink\"] = FS.unlink;\r\nModule[\"LZ4\"] = LZ4;\r\n\r\n\r\nvar calledRun;\r\n\r\ndependenciesFulfilled = function runCaller() {\r\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\r\n  if (!calledRun) run();\r\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\r\n};\r\n\r\nfunction callMain(args = []) {\r\n\r\n  var entryFunction = _main;\r\n\r\n  args.unshift(thisProgram);\r\n\r\n  var argc = args.length;\r\n  var argv = stackAlloc((argc + 1) * 4);\r\n  var argv_ptr = argv >> 2;\r\n  args.forEach((arg) => {\r\n    HEAP32[argv_ptr++] = stringToUTF8OnStack(arg);\r\n  });\r\n  HEAP32[argv_ptr] = 0;\r\n\r\n  try {\r\n\r\n    var ret = entryFunction(argc, argv);\r\n\r\n    // if we're not running an evented main loop, it's time to exit\r\n    exitJS(ret, /* implicit = */ true);\r\n    return ret;\r\n  }\r\n  catch (e) {\r\n    return handleException(e);\r\n  }\r\n}\r\n\r\nfunction run(args = arguments_) {\r\n\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  preRun();\r\n\r\n  // a preRun added a dependency, run will be called later\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  function doRun() {\r\n    // run may have just been called through dependencies being fulfilled just in this very frame,\r\n    // or while the async setStatus time below was happening\r\n    if (calledRun) return;\r\n    calledRun = true;\r\n    Module['calledRun'] = true;\r\n\r\n    if (ABORT) return;\r\n\r\n    initRuntime();\r\n\r\n    preMain();\r\n\r\n    readyPromiseResolve(Module);\r\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\r\n\r\n    if (shouldRunNow) callMain(args);\r\n\r\n    postRun();\r\n  }\r\n\r\n  if (Module['setStatus']) {\r\n    Module['setStatus']('Running...');\r\n    setTimeout(function() {\r\n      setTimeout(function() {\r\n        Module['setStatus']('');\r\n      }, 1);\r\n      doRun();\r\n    }, 1);\r\n  } else\r\n  {\r\n    doRun();\r\n  }\r\n}\r\n\r\nif (Module['preInit']) {\r\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\r\n  while (Module['preInit'].length > 0) {\r\n    Module['preInit'].pop()();\r\n  }\r\n}\r\n\r\n// shouldRunNow refers to calling main(), not run().\r\nvar shouldRunNow = true;\r\n\r\nif (Module['noInitialRun']) shouldRunNow = false;\r\n\r\nrun();\r\n\r\n\r\n// end include: postamble.js\r\n\r\n\r\n  return createEdgeModule.ready\r\n}\r\n\r\n);\r\n})();\r\nexport default createEdgeModule;","import { Signal, signal } from '@preact/signals';\r\nimport { h } from 'preact';\r\nimport style from './style.css';\r\nimport { useEffect, useRef, useState } from 'preact/hooks';\r\nimport createEdgeModule from '../../edge-classic';\r\n\r\nconst defaultIWad = \"freedoom2.wad\"\r\nconst deathmatchIWad = \"freedm.wad\";\r\n\r\ntype PlayerConfig = {\r\n\tindexDBName: string;\r\n}\r\n\r\ntype WadState = {\r\n\terror?: string;\r\n\twadName?: string;\r\n\tisIWAD?: boolean;\r\n}\r\n\r\nconst config: PlayerConfig = {\r\n\tindexDBName: '/edge-classic'\r\n}\r\n\r\nclass WadHandler {\r\n\r\n\tconstructor(config: PlayerConfig) {\r\n\t\tthis.config = config;\r\n\t}\r\n\r\n\tprivate error(message: string) {\r\n\t\talert(message);\r\n\t\tconsole.error(message);\r\n\t\tconsole.trace();\r\n\t}\r\n\r\n\tsetWad(wadName: string, isIWAD?: boolean) {\r\n\t\tthis.wadState.value = { wadName: wadName, isIWAD: isIWAD };\r\n\t}\r\n\r\n\tasync uploadWad(file: File) {\r\n\r\n\t\tlet database: IDBDatabase | undefined;\r\n\r\n\t\ttry {\r\n\t\t\tdatabase = await this.openDatabase();\r\n\t\t\tif (!database) {\r\n\t\t\t\tthis.error(\"Unable to open database\")\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis.error(e);\r\n\t\t\tdatabase?.close();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst upload = new Promise<{ wadName: string, iwad: boolean }>((resolve, reject) => {\r\n\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\r\n\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\tconst bits = e.target.result;\r\n\t\t\t\tconst contents = new Uint8Array(bits as ArrayBuffer);\r\n\r\n\t\t\t\tconst iwad = contents[0] === 73;\r\n\r\n\t\t\t\tconst trans = database.transaction(['FILE_DATA'], 'readwrite');\r\n\t\t\t\tconst path = `${this.config.indexDBName}/${file.name}`;\r\n\t\t\t\tconst addReq = trans.objectStore('FILE_DATA').put({ timestamp: new Date(), mode: 33206, contents: contents }, path);\r\n\r\n\t\t\t\taddReq.onerror = (e) => {\r\n\t\t\t\t\treject(\"Error storing wad data\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttrans.oncomplete = (e) => {\r\n\t\t\t\t\tresolve({ wadName: file.name, iwad: iwad });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treader.onerror = (e) => {\r\n\t\t\t\treject(\"Error reading wad\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst wad = await upload;\r\n\t\t\tdatabase?.close();\r\n\t\t\tdatabase = undefined;\r\n\t\t\tthis.setWad(wad.wadName, wad.iwad);\r\n\t\t} catch (e) {\r\n\t\t\tthis.error(e);\r\n\t\t} finally {\r\n\t\t\tdatabase?.close();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate async openDatabase() {\r\n\r\n\t\treturn new Promise<IDBDatabase | undefined>((resolve, reject) => {\r\n\r\n\t\t\t// build pre-render guard\r\n\t\t\tif (typeof window !== 'undefined') {\r\n\t\t\t\tconst dbrequest = window.indexedDB.open(this.config.indexDBName);\r\n\r\n\t\t\t\tdbrequest.onerror = (e) => {\r\n\t\t\t\t\treject(`unable to load database ${this.config.indexDBName}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdbrequest.onupgradeneeded = (e) => {\r\n\r\n\t\t\t\t\tconsole.log(\"upgrade needed\");\r\n\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tif (!db.objectStoreNames.contains(\"FILE_DATA\")) {\r\n\t\t\t\t\t\tconsole.log(\"Creating FILE_DATA object store\");\r\n\t\t\t\t\t\tconst store = db.createObjectStore(\"FILE_DATA\", {});\r\n\t\t\t\t\t\tstore.createIndex(\"timestamp\", \"timestamp\", { unique: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tdbrequest.onsuccess = (e) => {\r\n\t\t\t\t\tconsole.log(\"db open\");\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tresolve(db);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\twadState: Signal<WadState> = signal({});\r\n\r\n\tconfig: PlayerConfig;\r\n\r\n\tstatic get singleton(): WadHandler {\r\n\t\tif (!WadHandler.instance) {\r\n\t\t\tWadHandler.instance = new WadHandler(config);\r\n\t\t}\r\n\t\treturn WadHandler.instance;\r\n\t}\r\n\r\n\tprivate static instance?: WadHandler;\r\n}\r\n\r\ntype Project = {\r\n\tname: string;\r\n\timage: string;\r\n\tlink: string;\r\n}\r\n\r\nconst projects: Project[] = [\r\n\r\n\t{ name: \"Operation: Arctic Wolf Revisited\", image: \"./assets/images/articwolf.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/arctic-wolf-revisited\" },\r\n\t{ name: \"Astral Pathfinder\", image: \"./assets/images/astralpathfinder.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/astral-pathfinder1\" },\r\n\t{ name: \"Aliens: Stranded\", image: \"./assets/images/aliensstranded.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/aliens-stranded\" }\r\n]\r\n\r\nconst WadChooser = () => {\r\n\r\n\tconst pelements = projects.map(p => {\r\n\t\treturn <a href={p.link} target=\"_blank\" style=\"display:flex;flex:1;flex-direction:column;height:100%;align-items:flex-end\">\r\n\t\t\t<div style={{ display: \"flex\", flex: 0 }}>\r\n\t\t\t\t<div style={{ paddingTop: 12, paddingBottom: 4, fontSize: 14, whiteSpace: \"pre\", fontWeight: \"normal\" }}>{p.name}</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", position: \"relative\", flexGrow: 1, width: \"100%\" }} >\r\n\t\t\t\t<img style=\"width:100%;height:100%;object-fit:cover;position:absolute\" src={p.image} />\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t});\r\n\r\n\treturn <div style={{ display: \"flex\", width: \"100%\", maxWidth: \"1440px\", padding: 24, paddingLeft: 42 }}>\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1 }}>\r\n\t\t\t<div style={{ display: \"flex\", width: \"80%\" }}>\r\n\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"start\" }}>\r\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t\t<div style={{ fontSize: 18, fontWeight: \"normal\", paddingBottom: 24, width: 800 }}>Play EDGE-Classic in your browser by selecting an option below:\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWad(defaultIWad, true)\r\n\t\t\t\t\t\t}}>Play Freedoom</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWad(deathmatchIWad, true)\r\n\t\t\t\t\t\t}}>Play Bot Death Match</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tdocument.getElementById('getWadFile').click()\r\n\t\t\t\t\t\t}}>Choose Wad, EPK, or Zip</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<input id=\"getWadFile\" style=\"display:none\" type=\"file\" onChange={(e) => {\r\n\t\t\t\t\tconst files = (e.target as any).files as File[];\r\n\t\t\t\t\tif (files.length !== 1) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(\"Please select a single wad, epk, or zip file\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst file = files[0];\r\n\t\t\t\t\tconst check = file.name.toLowerCase();\r\n\t\t\t\t\tif (!check.endsWith(\".wad\") && !check.endsWith(\".zip\") && !check.endsWith(\".epk\")) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(\"Please select a wad, epk, or zip file\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst wadHandler = WadHandler.singleton;\r\n\t\t\t\t\twadHandler.uploadWad(file);\r\n\r\n\t\t\t\t}} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1, width: \"50%\", flexDirection: \"column\" }}>\r\n\t\t\t<div style={{ display: \"flex\", flex: \"0 0 24px\", position: \"relative\" }}>\r\n\t\t\t\t<div style={{ position: \"absolute\", fontSize: 18, fontWeight: 400, whiteSpace: \"pre\" }}>Suggested Projects</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", flexShrink: 0, flexGrow: 1, flexDirection: \"column\" }}>\r\n\t\t\t\t{pelements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n}\r\n\r\nconst EdgeClassic = () => {\r\n\r\n\tconst canvasRef = useRef<HTMLCanvasElement>(null);\r\n\tconst canvasContainerRef = useRef<HTMLDivElement>(null);\r\n\tconst [state, setState] = useState<{ loading: boolean }>({ loading: true });\r\n\tconst wadState = WadHandler.singleton.wadState.value;\r\n\r\n\r\n\tconst pointerLockChange = () => {\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst lock = canvas === document.pointerLockElement;\r\n\r\n\t\t// disabled for embedded classic site\r\n\t\t//Module._I_WebSetFullscreen(lock ? 1 : 0);\r\n\r\n\t\t/*\r\n\t\t// It feels good to open the menu when releasing pointer lock\r\n\t\t// though, it makes the interaction tricky to close the menu\r\n\t\tif (!lock) {\r\n\t\t\tModule._I_WebOpenGameMenu(1);\r\n\t\t} \r\n\t\t*/\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst canvasContainer = canvasContainerRef?.current;\r\n\r\n\t\tconst wadName = wadState.wadName!;\r\n\r\n\t\tif (!canvasContainer) {\r\n\t\t\tthrow \"Unable to get canvas container\";\r\n\t\t}\r\n\r\n\t\tif (!canvas) {\r\n\t\t\tthrow \"Unable to get canvas\";\r\n\t\t}\r\n\r\n\t\tconst syncCanvasSize = () => {\r\n\t\t\tconst w = Math.floor(canvasContainer.offsetWidth);\r\n\t\t\tconst h = Math.floor(canvasContainer.offsetHeight);\r\n\t\t\tconsole.log(\"Setting canvas size\", w, h);\r\n\t\t\tcanvas.style.width = `${w}px`;\r\n\t\t\tcanvas.style.height = `${h}px`;\r\n\t\t\tcanvas.width = w;\r\n\t\t\tcanvas.height = h;\r\n\t\t}\r\n\r\n\t\t// initial update\t\t\r\n\t\tsyncCanvasSize();\r\n\r\n\t\tconst canvasSync = () => {\r\n\t\t\tsyncCanvasSize();\r\n\t\t\tModule._I_WebSyncScreenSize();\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"pointerlockchange\", pointerLockChange, false);\r\n\r\n\t\tlet doSyncTimeout;\r\n\t\twindow.addEventListener(\"resize\", (ev) => {\r\n\r\n\t\t\tclearTimeout(doSyncTimeout);\r\n\t\t\tdoSyncTimeout = setTimeout(canvasSync, 250);\r\n\r\n\t\t});\r\n\r\n\t\tcanvas.addEventListener(\"webglcontextlost\", function (e) { alert('FIXME: WebGL context lost, please reload the page'); e.preventDefault(); }, false);\r\n\r\n\r\n\t\tlet iwad = defaultIWad;\r\n\t\tif (wadState.wadName === deathmatchIWad) {\r\n\t\t\tiwad = deathmatchIWad;\r\n\t\t}\r\n\t\t\r\n\t\tif (wadState.wadName !== iwad && wadState.isIWAD) {\r\n\t\t\tiwad = `edge-classic/${wadName}`;\r\n\t\t}\r\n\r\n\t\tconst args = [\"-home\", \"edge-classic\", \"-windowed\", \"-width\", canvas.offsetWidth.toString(), \"-height\", canvas.offsetHeight.toString(), \"-iwad\", iwad];\r\n\r\n\t\tif (iwad === deathmatchIWad) {\r\n\t\t\targs.push(...[\"-deathmatch\", \"1\", \"-nomonsters\", \"-skill\", \"2\", \"-bots\", \"1\", \"-warp\", \"map03\"])\r\n\t\t}\r\n\r\n\t\tif (!wadState.isIWAD) {\r\n\t\t\targs.push(\"-file\")\r\n\t\t\targs.push(`edge-classic/${wadName}`);\r\n\t\t}\r\n\r\n\t\tcreateEdgeModule({\r\n\t\t\tedgePostInit: () => {\r\n\t\t\t\tconsole.log(\"Post-Init!\");\r\n\t\t\t\t// jump \r\n\t\t\t\tif (!args.find( a => a.startsWith(\"-warp\"))) {\r\n\t\t\t\t\tModule._I_WebOpenGameMenu(1);\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tsetState({ ...state, loading: false });\r\n\t\t\t},\r\n\t\t\tonFullscreen: () => {\r\n\t\t\t\t/*\r\n\t\t\t\tconsole.log(\"On fullscreen\");\r\n\t\t\t\tconst elements = document.querySelectorAll(\".playercontrols\");\r\n\t\t\t\telements?.forEach(e => {\r\n\t\t\t\t\t(e as any).style.display = \"flex\";\r\n\t\t\t\t});\r\n\t\t\t\t*/\r\n\t\t\t},\r\n\t\t\tpreEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\tpostEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\targuments: args,\r\n\t\t\tpreInit: () => {\r\n\t\t\t\tconsole.log(\"Pre-Init\");\r\n\t\t\t},\r\n\t\t\tpreRun: [],\r\n\t\t\tpostRun: [],\r\n\t\t\tprint: (function () {\r\n\t\t\t\treturn function (text) {\r\n\t\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\t\tconsole.log(text);\r\n\t\t\t\t};\r\n\t\t\t})(),\r\n\t\t\tprintErr: function (text) {\r\n\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\tconsole.error(text);\r\n\t\t\t},\r\n\t\t\tcanvas: canvas,\r\n\t\t\tsetStatus: function (text) { console.log(\"status\", text) },\r\n\t\t\tmonitorRunDependencies: function (left) { console.log(left) },\r\n\t\t}).then(module => {\r\n\t\t\tglobalThis.Module = module;\r\n\t\t\tmodule.canvas = canvas;\r\n\t\t});\r\n\r\n\r\n\t\treturn () => {\r\n\r\n\t\t};\r\n\r\n\t}, []);\r\n\r\n\r\n\treturn <div id=\"canvas-container\" ref={canvasContainerRef} style={{ display: \"flex\", width: \"100%\", height: \"100%\", position: \"relative\" }}>\r\n\t\t<canvas id=\"canvas\" ref={canvasRef} style={{ visibility: state.loading ? \"hidden\" : \"visible\" }}\r\n\t\t\tonClick={async (ev) => {\r\n\t\t\t\tconst lock = canvasRef.current === document.pointerLockElement;\r\n\t\t\t\tif (!lock) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait canvasRef.current?.requestPointerLock();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}} />\r\n\r\n\t\t{!!state.loading && <div style={{ position: \"absolute\", display: \"flex\", width: \"100%\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n\t\t\t<div class={style.loading}>\r\n\t\t\t\t<span style=\"--i:1\">L</span>\r\n\t\t\t\t<span style=\"--i:2\">O</span>\r\n\t\t\t\t<span style=\"--i:3\">A</span>\r\n\t\t\t\t<span style=\"--i:4\">D</span>\r\n\t\t\t\t<span style=\"--i:5\">I</span>\r\n\t\t\t\t<span style=\"--i:6\">N</span>\r\n\t\t\t\t<span style=\"--i:7\">G</span>\r\n\t\t\t\t<span style=\"--i:8\">.</span>\r\n\t\t\t\t<span style=\"--i:9\">.</span>\r\n\t\t\t\t<span style=\"--i:10\">.</span>\r\n\t\t\t</div>\r\n\t\t</div>}\r\n\r\n\t</div>\r\n}\r\n// floating player controls, not currently used\r\n// {!state.loading && <PlayerControls />} \r\n\r\nconst PlayerControls = () => {\r\n\tconst [fullscreen, setFullscreen] = useState(false);\r\n\treturn <div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\", padding: \"24px\", zIndex: 1, position: \"absolute\" }}>\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\" }} />\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", flexShrink: 1, paddingRight: \"48px\" }}>\r\n\t\t\t<button style={{ opacity: 1 }} className=\"playercontrols\" onClick={() => { Module._I_WebSetFullscreen(fullscreen ? 0 : 1, setFullscreen(!fullscreen)) }}>{fullscreen ? \"Minimize\" : \"Maximize\"}</button>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst Player = () => {\r\n\r\n\tconst wadHandler = WadHandler.singleton;\r\n\tconst wadState = wadHandler.wadState.value;\r\n\r\n\treturn (\r\n\t\t<div style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\r\n\t\t\t{!wadState.wadName && <WadChooser />}\r\n\t\t\t{!!wadState.wadName && <EdgeClassic />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Player;\r\n","import './style/index.css';\r\nimport App from './components/app';\r\n\r\nexport default App;\r\n","import { h } from 'preact';\r\n\r\nimport Player from './player';\r\n\r\nconst App = () => (\r\n\t<div id=\"app\">\r\n\t\t<main>\r\n\t\t\t<Player/>\r\n\t\t</main>\r\n\t</div>\r\n);\r\n\r\nexport default App;\r\n"],"sourceRoot":""}