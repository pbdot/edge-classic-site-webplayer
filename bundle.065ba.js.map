{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/preact-cli/src/lib/entry.js","webpack:///../node_modules/preact/src/util.js","webpack:///../node_modules/preact/src/create-element.js","webpack:///../node_modules/preact/src/component.js","webpack:///../node_modules/preact/src/diff/children.js","webpack:///../node_modules/preact/src/diff/props.js","webpack:///../node_modules/preact/src/diff/index.js","webpack:///../node_modules/preact/src/render.js","webpack:///../node_modules/preact/src/options.js","webpack:///../node_modules/preact/src/constants.js","webpack:///../node_modules/preact/src/diff/catch-error.js","webpack:///../node_modules/preact/hooks/src/index.js","webpack:///../node_modules/@preact/signals-core/src/index.ts","webpack:///../node_modules/@preact/signals/src/index.ts","webpack:///./components/player/style.css","webpack:///./edge-classic.js","webpack:///./components/player/index.tsx","webpack:///./index.ts","webpack:///./components/app.tsx"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","h","Preact","render","hydrate","interopDefault","default","normalizeURL","url","length","navigator","serviceWorker","register","__webpack_public_path__","require","root","document","getElementById","body","firstElementChild","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","innerHTML","CLI_DATA","currentURL","location","pathname","init","u","v","parentNode","removeChild","y","f","arguments","children","defaultProps","type","props","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","_","k","this","context","b","indexOf","g","base","push","w","__r","debounceRendering","e","sort","shift","__P","L","__n","ownerSVGElement","M","x","a","Array","isArray","A","C","$","nextSibling","S","O","appendChild","insertBefore","I","setProperty","test","T","style","cssText","replace","toLowerCase","slice","addEventListener","z","j","removeEventListener","removeAttribute","setAttribute","event","P","H","contextType","__E","q","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","diffed","some","localName","nodeType","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","checked","current","unmount","componentWillUnmount","B","firstChild","D","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","resolve","setTimeout","__H","__V","__N","filter","every","F","clearTimeout","cancelAnimationFrame","requestAnimationFrame","Error","U","useSignal","__$f","__$u","peek","subscribe","valueOf","toString","set","displayName","defineProperties","configurable","__np","_scriptDir","createEdgeModule","currentScript","src","undefined","assert","condition","text","abort","updateMemoryViews","wasmMemory","buffer","Module","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","Uint8Array","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","keepRuntimeAlive","noExitRuntime","runtimeKeepaliveCounter","addRunDependency","runDependencies","removeRunDependency","runDependencyWatcher","clearInterval","dependenciesFulfilled","callback","what","err","ABORT","EXITSTATUS","WebAssembly","RuntimeError","readyPromiseReject","isDataURI","filename","startsWith","dataURIPrefix","getBinary","file","wasmBinaryFile","wasmBinary","readBinary","instantiateArrayBuffer","binaryFile","imports","receiver","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","fetch","credentials","response","catch","getBinaryPromise","binary","instantiate","instance","reason","ExitStatus","status","message","callRuntimeCallbacks","callbacks","dynCall","sig","ptr","args","apply","concat","dynCallLegacy","setValue","endsWith","tempI64","tempDouble","Math","abs","floor","ceil","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","set_adjusted_ptr","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","randomFill","view","crypto","_typeof","getRandomValues","initRandomFill","lengthBytesUTF8","str","len","charCodeAt","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","endIdx","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","mmapAlloc","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endPtr","UTF8Decoder","decode","subarray","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","convertI32PairToI53Checked","lo","hi","NaN","stringToUTF8","outPtr","isLeapYear","year","ydayFromDate","date","getFullYear","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","getMonth","getDate","stringToNewUTF8","size","ret","_malloc","_emscripten_set_main_loop_timing","Browser","mainLoop","timingMode","timingValue","func","running","scheduler","timeUntilNextTick","max","tickStartTime","_emscripten_get_now","runner","method","setImmediate","setImmediates","emscriptenMainLoopMessageId","target","stopPropagation","postMessage","setMainLoop","browserIterationFunc","fps","simulateInfiniteLoop","arg","noSetTiming","checkIsRunning","thisMainLoopId","currentlyRunningMainloop","queue","start","Date","now","blocker","remainingBlockers","remaining","next","counted","out","updateStatus","currentFrameNumber","GL","newRenderingFrameStarted","runIter","SDL","audio","queueNewAudioData","handleException","quit_","exitJS","code","callUserCallback","_exit","maybeExit","safeSetTimeout","timeout","warnOnce","shown","readEmAsmArgs","sigPtr","buf","readEmAsmArgsArray","withStackSave","stack","stackSave","stackRestore","setLetterbox","element","topBottom","leftRight","paddingLeft","paddingRight","paddingTop","paddingBottom","findEventTarget","cString","specialHTMLTargets","findCanvasEventTarget","stringToUTF8OnStack","stackAlloc","getCanvasElementSize","width","height","canvas","_emscripten_get_canvas_element_size","id","_emscripten_set_canvas_element_size","setCanvasElementSize","controlTransferredOffscreen","jstoi_q","parseInt","softFullscreenResizeWebGLRenderTarget","topMargin","dpr","devicePixelRatio","inHiDPIFullscreenMode","currentFullscreenStrategy","canvasResolutionScaleMode","inAspectRatioFixedFullscreenMode","scaleMode","inPixelPerfectFullscreenMode","inCenteredWithoutScalingFullscreenMode","screenWidth","round","innerWidth","screenHeight","innerHeight","canvasSize","GLctxObject","GLctx","viewport","canvasResizedCallback","dynCall_iiii","canvasResizedCallbackUserData","getBoundingClientRect","JSEvents_resizeCanvasForFullscreen","strategy","restoreOldStyle","fullscreenElement","webkitFullscreenElement","oldWidth","oldHeight","oldCssWidth","oldCssHeight","backgroundColor","oldBackgroundColor","oldDocumentBackgroundColor","oldPaddingLeft","oldPaddingRight","oldPaddingTop","oldPaddingBottom","marginLeft","oldMarginLeft","marginRight","oldMarginRight","marginTop","oldMarginTop","marginBottom","oldMarginBottom","margin","oldDocumentBodyMargin","documentElement","overflow","oldDocumentOverflow","scroll","oldDocumentScroll","imageRendering","oldImageRendering","registerRestoreOldStyle","cssWidth","softFullscreen","screen","cssHeight","rect","windowedCssWidth","windowedCssHeight","windowedRttWidth","windowedRttHeight","desiredCssHeight","desiredCssWidth","filteringMode","dpiScale","newWidth","newHeight","JSEvents_requestFullscreen","requestFullscreen","webkitRequestFullscreen","JSEvents","fullscreenEnabled","Element","ALLOW_KEYBOARD_INPUT","requestPointerLock","fillGamepadEventData","eventStruct","timestamp","axes","buttons","pressed","connected","index","mapping","_glBindVertexArray","vao","bindVertexArray","vaos","ibo","getParameter","currentElementArrayBufferBinding","convertI32PairToI53","_glDeleteVertexArrays","deleteVertexArray","_glDrawArraysInstanced","first","count","primcount","drawArraysInstanced","_glDrawBuffers","bufs","bufArray","tempFixedLengthArray","drawBuffers","_glDrawElements","indices","calcBufLength","getTempIndexBuffer","bindBuffer","bufferSubData","preDrawHandleClientVertexAttribBindings","drawElements","postDrawHandleClientVertexAttribBindings","_glDrawElementsInstanced","drawElementsInstanced","__glGenObject","buffers","createFunction","objectTable","getNewId","recordError","_glGenVertexArrays","arrays","__glGetActiveAttribOrUniform","funcName","program","bufSize","info","programs","numBytesWrittenExclNull","writeI53ToI64","num","emscriptenWebGLGet","name_","formats","currentContext","version","getSupportedExtensions","result","_glGetFloatv","emscriptenWebGLGetIndexed","getIndexedParameter","WebGLBuffer","_glGetQueryObjecti64vEXT","pname","params","param","query","queries","disjointTimerQueryExt","getQueryParameter","_glGetQueryObjectivEXT","webglGetLeftBracePos","lastIndexOf","webglPrepareUniformLocationsBeforeFirstUse","uniformLocsById","uniformSizeAndIdsByName","uniformArrayNamesById","getProgramParameter","getActiveUniform","nm","sz","lb","arrayName","uniformIdCounter","webglGetUniformLocation","currentProgram","webglLoc","getUniformLocation","emscriptenWebGLGetUniform","getUniform","emscriptenWebGLGetVertexAttrib","clientBuffers","enabled","getVertexAttrib","fround","_glGetVertexAttribIiv","_glIsVertexArray","array","isVertexArray","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","clz32","BYTES_PER_ELEMENT","emscriptenWebGLGetTexPixelData","format","pixels","byteSize","sizePerPixel","colorChannelsInGlTextureFormat","bytes","alignment","alignedRowSize","roundedToNextMultipleOf","computeUnpackAlignedImageSize","unpackAlignment","_glVertexAttribDivisor","divisor","vertexAttribDivisor","emscripten_realloc_buffer","grow","byteLength","registerFocusEventCallback","userData","useCapture","callbackfunc","eventTypeId","eventTypeString","focusEvent","eventHandler","handlerFunc","nodeName","getNodeNameForTarget","preventDefault","registerOrRemoveHandler","registerFullscreenChangeEventCallback","fullscreenChangeEvent","mozFullScreenElement","msFullscreenElement","isFullscreen","reportedElement","previousFullscreenElement","clientWidth","clientHeight","fillFullscreenChangeEventData","registerGamepadEventCallback","gamepadEvent","allowsDeferredCalls","registerKeyEventCallback","keyEvent","keyEventData","timeStamp","ctrlKey","shiftKey","altKey","metaKey","repeat","charCode","keyCode","which","char","locale","fillMouseEventData","screenX","screenY","clientX","clientY","button","left","top","registerMouseEventCallback","mouseEvent","registerPointerlockChangeEventCallback","pointerlockChangeEvent","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","msPointerLockElement","fillPointerlockChangeEventData","registerTouchEventCallback","touchEvent","touches","et","isChanged","onTarget","identifier","changedTouches","targetTouches","targetRect","numTouches","pageX","pageY","registerVisibilityChangeEventCallback","visibilityChangeEvent","visibilityState","hidden","_emscripten_sleep","ms","Asyncify","handleSleep","wakeUp","getEnvStrings","strings","env","languages","thisProgram","ENV","_strftime","maxsize","tm","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","getTime","leap","currentMonth","daysInCurrentMonth","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","setDate","setMonth","setFullYear","addDays","tm_year","tm_yday","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_wday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","EXPANSION_RULES_2","substring","twelveHour","sum","arraySum","val","jan1","dec31","off","ahead","includes","runAndAbortIfError","run","doRun","calledRun","FS","initialized","ignorePermissions","TTY","__ATINIT__","__ATMAIN__","readyPromiseResolve","shouldRunNow","entryFunction","_main","unshift","argc","argv","argv_ptr","callMain","cb","__ATPOSTRUN__","postRun","arguments_","__ATPRERUN__","preRun","_this","reject","expectedDataFileDownloads","metadata","fetchRemotePackage","packageName","packageSize","xhr","XMLHttpRequest","open","responseType","onprogress","total","loaded","addedTotal","dataFileDownloads","download","onerror","onload","statusText","responseURL","send","runWithFS","check","msg","processPackageData","arrayBuffer","ArrayBuffer","byteArray","compressedData","loadPackage","preloadFallback","error","console","REMOTE_PACKAGE_NAME","REMOTE_PACKAGE_SIZE","indexedDB","PACKAGE_UUID","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","self","IDB_RO","IDB_RW","DB_NAME","DB_VERSION","METADATA_STORE_NAME","PACKAGE_STORE_NAME","CHUNK_SIZE","preloadResults","errback","openRequest","onupgradeneeded","db","objectStoreNames","contains","deleteObjectStore","createObjectStore","onsuccess","openDatabase","getRequest","transaction","objectStore","checkCachedPackage","PACKAGE_PATH","PACKAGE_NAME","useCached","fromCache","packages","chunksDone","totalSize","chunkCount","chunks","chunkId","tempTyped","byteOffset","fetchCachedPackage","packageData","packageMeta","chunkSliceStart","nextChunkSliceStart","finishedChunks","putPackageRequest","put","putMetadataRequest","uuid","cacheRemotePackage","process","encodeURIComponent","REMOTE_PACKAGE_BASE","read_","readAsync","setWindowTitle","moduleOverrides","_extends","toThrow","scriptDirectory","href","substr","responseText","title","log","warn","path","__ATEXIT__","ASM_CONSTS","edgePostInit","$0","$1","homeIndex","homeDir","analyzePath","exists","mkdirTree","mount","IDBFS","syncfs","_I_WebMain","onFullscreen","edgePreSyncFS","edgePostSyncFS","AudioContext","webkitAudioContext","mediaDevices","getUserMedia","webkitGetUserMedia","ctx","elements","SDL2","capture","audioContext","listenOnce","resume","sampleRate","$2","$3","have_microphone","stream","silenceTimer","mediaStreamNode","createMediaStreamSource","scriptProcessorNode","createScriptProcessor","onaudioprocess","audioProcessingEvent","outputBuffer","getChannelData","fill","currentCaptureBuffer","inputBuffer","connect","destination","no_microphone","silenceBuffer","createBuffer","video","currentOutputBuffer","numChannels","numberOfChannels","channelData","tracks","getAudioTracks","removeTrack","disconnect","close","ctxCanvas","imageCtx","image","createImageData","dst","CanvasPixelArray","data32Data","data32","data8","putImageData","$4","hot_x","hot_y","getContext","toDataURL","urlBuf","alert","PATH","isAbs","charAt","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","normalize","isAbsolute","trailingSlash","split","join","dirname","dir","basename","lastSlash","paths","join2","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","end","fromParts","toParts","min","samePartsLength","outputParts","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","tty","node","rdev","ErrnoError","seekable","fsync","read","offset","get_char","bytesRead","write","put_char","default_tty_ops","prompt","readline","default_tty1_ops","MEMFS","ops_table","createNode","parent","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","prot","flags","allocated","dbs","_indexedDB","DB_STORE_NAME","populate","getLocalSet","local","getRemoteSet","remote","reconcile","quit","values","getDB","req","fileStore","indexNames","createIndex","unique","isRealDir","toAbsolute","mountpoint","map","stat","pop","openKeyCursor","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","removeRemoteEntry","delete","done","errored","keys","e2","remove","oncomplete","reverse","LZ4","DIR_MODE","FILE_MODE","codec","MiniLZ4","sIdx","eIdx","token","literals_length","match_length","pos","maxInputSize","minMatch","hashShift","mfLimit","skipStrength","mlBits","mlMask","runMask","hasher","hashTable","empty","compressBound","isize","compress","dpos","dlen","anchor","findMatchAttempts","srcLength","sequenceLowBits","sequenceHighBits","hash","imul","ln","compressBlock","compressPackage","verify","temp","compressedChunks","successes","chunk","bound","compressed","compressedSize","back","uncompress","pack","preloadPlugin","files","createPath","handled","fullname","plugin","finish","readFile","written","currChunk","desired","chunkIndex","compressedStart","found","originalSize","startInChunk","endInChunk","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","opts","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","hashName","parentid","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_end","fd","getStream","createStream","fd_start","FSStream","shared","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","completed","pseudo","mountRoot","mkdir","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","dontFollow","lstat","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","mmapFlags","munmap","ioctl","cmd","encoding","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","staticInit","getMode","canRead","canWrite","findObject","dontResolveLastLink","parentExists","parentPath","parentObject","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","writeChunks","chunkOffset","chunkSize","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","chunkNum","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","fn","createPreloadedFile","dontCreateFile","preFinish","processData","handledByPreloadPlugin","noRunDep","dep","asyncLoad","TextDecoder","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","doMsync","addr","varargs","getStr","nowIsMonotonic","performance","pause","expected","expectedBlockers","pointerLock","moduleContextCreatedCallbacks","workers","pointerLockChange","initted","Blob","hasBlobConstructor","BlobBuilder","MozBlobBuilder","WebKitBlobBuilder","URLObject","URL","webkitURL","noImageDecoding","imagePlugin","getMimetype","bb","append","getBlob","createObjectURL","img","Image","complete","drawImage","preloadedImages","revokeObjectURL","audioPlugin","noAudioDecoding","preloadedAudios","fail","Audio","BASE","leftchar","leftbits","curr","PAD","encode64","exitPointerLock","ev","createContext","useWebGL","setInModule","webGLContextAttributes","contextHandle","contextAttributes","antialias","alpha","majorVersion","WebGL2RenderingContext","attribute","makeContextCurrent","destroyContext","fullscreenHandlersInstalled","lockPointer","resizeCanvas","fullscreenChange","canvasContainer","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","setWindowedCanvasSize","nextRAF","fakeRequestAnimationFrame","delay","_requestAnimationFrame","_x","RAF","safeRequestAnimationFrame","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","deltaY","deltaMode","mouseX","mouseY","mouseMovementX","mouseMovementY","lastTouches","calculateMouseEvent","cw","scrollX","pageXOffset","scrollY","pageYOffset","touch","adjustedX","adjustedY","coords","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","wNative","hNative","widthNative","heightNative","factor","removeProperty","EGL","errorCode","defaultDisplayInitialized","currentReadSurface","currentDrawSurface","depth","stencil","stringCache","setErrorCode","chooseConfig","display","attribList","config","config_size","numConfigs","lowLatency","counter","framebuffers","renderbuffers","textures","shaders","contexts","offscreenCanvases","samplers","transformFeedbacks","syncs","byteSizeByTypeRoot","byteSizeByType","stringiCache","lastError","table","MAX_TEMP_BUFFER_SIZE","numTempVertexBuffersPerSize","log2ceilLookup","generateTempBuffers","quads","largestIndex","tempVertexBufferCounters1","tempVertexBufferCounters2","tempVertexBuffers1","tempVertexBuffers2","tempIndexBuffers","ringbufferLength","ringbuffer1","ringbuffer2","tempQuadIndexBuffer","numIndexes","quadIndexes","bufferData","getTempVertexBuffer","sizeBytes","ringbuffer","nextFreeBufferIndex","vbo","prevVBO","prevIBO","vb","getSource","shader","string","source","stride","usedTempBuffers","resetBufferBinding","maxVertexAttribs","clientside","vertexAttribPointerAdaptor","normalized","currentArrayBufferBinding","getContextSafariWebGL2Fixed","ver","attrs","gl","WebGLRenderingContext","registerContext","handle","enableExtensionsByDefault","initExtensions","deleteContext","removeAllHandlersOnTarget","initExtensionsDone","ext","getExtension","webgl_enable_ANGLE_instanced_arrays","webgl_enable_OES_vertex_array_object","webgl_enable_WEBGL_draw_buffers","dibvbi","mdibvbi","webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance","multiDrawWebgl","webgl_enable_WEBGL_multi_draw","_eglWaitGL","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","runDeferredCalls","eventListenerFunc","jsEventHandler","webkitFullscreenEnabled","restoreOldWindowedStyle","_emscripten_glActiveTexture","x0","activeTexture","_emscripten_glAttachShader","attachShader","_emscripten_glBeginQuery","beginQuery","_emscripten_glBeginQueryEXT","_emscripten_glBeginTransformFeedback","beginTransformFeedback","_emscripten_glBindAttribLocation","bindAttribLocation","_emscripten_glBindBuffer","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","_emscripten_glBindBufferBase","bindBufferBase","_emscripten_glBindBufferRange","ptrsize","bindBufferRange","_emscripten_glBindFramebuffer","framebuffer","bindFramebuffer","_emscripten_glBindRenderbuffer","renderbuffer","bindRenderbuffer","_emscripten_glBindSampler","unit","sampler","bindSampler","_emscripten_glBindTexture","texture","bindTexture","_emscripten_glBindTransformFeedback","bindTransformFeedback","_emscripten_glBindVertexArray","_glBindVertexArrayOES","_emscripten_glBindVertexArrayOES","_emscripten_glBlendColor","x1","x2","x3","blendColor","_emscripten_glBlendEquation","blendEquation","_emscripten_glBlendEquationSeparate","blendEquationSeparate","_emscripten_glBlendFunc","blendFunc","_emscripten_glBlendFuncSeparate","blendFuncSeparate","_emscripten_glBlitFramebuffer","x4","x5","x6","x7","x8","x9","blitFramebuffer","_emscripten_glBufferData","usage","_emscripten_glBufferSubData","_emscripten_glCheckFramebufferStatus","checkFramebufferStatus","_emscripten_glClear","clear","_emscripten_glClearBufferfi","clearBufferfi","_emscripten_glClearBufferfv","drawbuffer","clearBufferfv","_emscripten_glClearBufferiv","clearBufferiv","_emscripten_glClearBufferuiv","clearBufferuiv","_emscripten_glClearColor","clearColor","_emscripten_glClearDepthf","clearDepth","_emscripten_glClearStencil","clearStencil","_emscripten_glClientWaitSync","sync","timeout_low","timeout_high","clientWaitSync","_emscripten_glColorMask","red","green","blue","colorMask","_emscripten_glCompileShader","compileShader","_emscripten_glCompressedTexImage2D","level","internalFormat","border","imageSize","compressedTexImage2D","_emscripten_glCompressedTexImage3D","compressedTexImage3D","_emscripten_glCompressedTexSubImage2D","xoffset","yoffset","compressedTexSubImage2D","_emscripten_glCompressedTexSubImage3D","zoffset","compressedTexSubImage3D","_emscripten_glCopyBufferSubData","copyBufferSubData","_emscripten_glCopyTexImage2D","copyTexImage2D","_emscripten_glCopyTexSubImage2D","copyTexSubImage2D","_emscripten_glCopyTexSubImage3D","copyTexSubImage3D","_emscripten_glCreateProgram","createProgram","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","_emscripten_glCreateShader","shaderType","createShader","_emscripten_glCullFace","cullFace","_emscripten_glDeleteBuffers","deleteBuffer","_emscripten_glDeleteFramebuffers","deleteFramebuffer","_emscripten_glDeleteProgram","deleteProgram","_emscripten_glDeleteQueries","ids","deleteQuery","_emscripten_glDeleteQueriesEXT","_emscripten_glDeleteRenderbuffers","deleteRenderbuffer","_emscripten_glDeleteSamplers","deleteSampler","_emscripten_glDeleteShader","deleteShader","_emscripten_glDeleteSync","deleteSync","_emscripten_glDeleteTextures","deleteTexture","_emscripten_glDeleteTransformFeedbacks","transformFeedback","deleteTransformFeedback","_emscripten_glDeleteVertexArrays","_glDeleteVertexArraysOES","_emscripten_glDeleteVertexArraysOES","_emscripten_glDepthFunc","depthFunc","_emscripten_glDepthMask","depthMask","_emscripten_glDepthRangef","depthRange","_emscripten_glDetachShader","detachShader","_emscripten_glDisable","disable","_emscripten_glDisableVertexAttribArray","disableVertexAttribArray","_emscripten_glDrawArrays","drawArrays","_emscripten_glDrawArraysInstanced","_glDrawArraysInstancedANGLE","_emscripten_glDrawArraysInstancedANGLE","_glDrawArraysInstancedARB","_emscripten_glDrawArraysInstancedARB","_glDrawArraysInstancedEXT","_emscripten_glDrawArraysInstancedEXT","_glDrawArraysInstancedNV","_emscripten_glDrawArraysInstancedNV","_emscripten_glDrawBuffers","_glDrawBuffersEXT","_emscripten_glDrawBuffersEXT","_glDrawBuffersWEBGL","_emscripten_glDrawBuffersWEBGL","_emscripten_glDrawElements","_emscripten_glDrawElementsInstanced","_glDrawElementsInstancedANGLE","_emscripten_glDrawElementsInstancedANGLE","_glDrawElementsInstancedARB","_emscripten_glDrawElementsInstancedARB","_glDrawElementsInstancedEXT","_emscripten_glDrawElementsInstancedEXT","_glDrawElementsInstancedNV","_emscripten_glDrawElementsInstancedNV","_emscripten_glDrawRangeElements","_emscripten_glEnable","enable","_emscripten_glEnableVertexAttribArray","enableVertexAttribArray","_emscripten_glEndQuery","endQuery","_emscripten_glEndQueryEXT","_emscripten_glEndTransformFeedback","endTransformFeedback","_emscripten_glFenceSync","fenceSync","_emscripten_glFinish","_emscripten_glFlush","flush","_emscripten_glFramebufferRenderbuffer","attachment","renderbuffertarget","framebufferRenderbuffer","_emscripten_glFramebufferTexture2D","textarget","framebufferTexture2D","_emscripten_glFramebufferTextureLayer","layer","framebufferTextureLayer","_emscripten_glFrontFace","frontFace","_emscripten_glGenBuffers","_emscripten_glGenFramebuffers","_emscripten_glGenQueries","_emscripten_glGenQueriesEXT","_emscripten_glGenRenderbuffers","_emscripten_glGenSamplers","_emscripten_glGenTextures","_emscripten_glGenTransformFeedbacks","_emscripten_glGenVertexArrays","_emscripten_glGenVertexArraysOES","_emscripten_glGenerateMipmap","generateMipmap","_emscripten_glGetActiveAttrib","_emscripten_glGetActiveUniform","_emscripten_glGetActiveUniformBlockName","uniformBlockIndex","uniformBlockName","getActiveUniformBlockName","_emscripten_glGetActiveUniformBlockiv","getActiveUniformBlockParameter","_emscripten_glGetActiveUniformsiv","uniformCount","uniformIndices","getActiveUniforms","_emscripten_glGetAttachedShaders","maxCount","getAttachedShaders","_emscripten_glGetAttribLocation","getAttribLocation","_emscripten_glGetBooleanv","_emscripten_glGetBufferParameteri64v","getBufferParameter","_emscripten_glGetBufferParameteriv","_emscripten_glGetError","getError","_emscripten_glGetFloatv","_emscripten_glGetFragDataLocation","getFragDataLocation","_emscripten_glGetFramebufferAttachmentParameteriv","getFramebufferAttachmentParameter","WebGLRenderbuffer","WebGLTexture","_emscripten_glGetInteger64i_v","_emscripten_glGetInteger64v","_emscripten_glGetIntegeri_v","_emscripten_glGetIntegerv","_emscripten_glGetInternalformativ","internalformat","getInternalformatParameter","_emscripten_glGetProgramBinary","_emscripten_glGetProgramInfoLog","maxLength","infoLog","getProgramInfoLog","_emscripten_glGetProgramiv","getActiveAttrib","_emscripten_glGetQueryObjecti64vEXT","_emscripten_glGetQueryObjectivEXT","_emscripten_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectuiv","_emscripten_glGetQueryObjectuivEXT","_emscripten_glGetQueryiv","getQuery","_emscripten_glGetQueryivEXT","_emscripten_glGetRenderbufferParameteriv","getRenderbufferParameter","_emscripten_glGetSamplerParameterfv","getSamplerParameter","_emscripten_glGetSamplerParameteriv","_emscripten_glGetShaderInfoLog","getShaderInfoLog","_emscripten_glGetShaderPrecisionFormat","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","_emscripten_glGetShaderSource","getShaderSource","_emscripten_glGetShaderiv","getShaderParameter","_emscripten_glGetString","exts","glVersion","glslVersion","ver_num","match","_emscripten_glGetStringi","_emscripten_glGetSynciv","getSyncParameter","_emscripten_glGetTexParameterfv","getTexParameter","_emscripten_glGetTexParameteriv","_emscripten_glGetTransformFeedbackVarying","getTransformFeedbackVarying","_emscripten_glGetUniformBlockIndex","getUniformBlockIndex","_emscripten_glGetUniformIndices","uniformNames","names","getUniformIndices","_emscripten_glGetUniformLocation","arrayIndex","uniformBaseName","leftBrace","sizeAndId","_emscripten_glGetUniformfv","_emscripten_glGetUniformiv","_emscripten_glGetUniformuiv","_emscripten_glGetVertexAttribIiv","_emscripten_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribPointerv","pointer","getVertexAttribOffset","_emscripten_glGetVertexAttribfv","_emscripten_glGetVertexAttribiv","_emscripten_glHint","hint","_emscripten_glInvalidateFramebuffer","numAttachments","attachments","list","invalidateFramebuffer","_emscripten_glInvalidateSubFramebuffer","invalidateSubFramebuffer","_emscripten_glIsBuffer","isBuffer","_emscripten_glIsEnabled","isEnabled","_emscripten_glIsFramebuffer","fb","isFramebuffer","_emscripten_glIsProgram","isProgram","_emscripten_glIsQuery","isQuery","_emscripten_glIsQueryEXT","_emscripten_glIsRenderbuffer","rb","isRenderbuffer","_emscripten_glIsSampler","isSampler","_emscripten_glIsShader","isShader","_emscripten_glIsSync","isSync","_emscripten_glIsTexture","isTexture","_emscripten_glIsTransformFeedback","isTransformFeedback","_emscripten_glIsVertexArray","_emscripten_glIsVertexArrayOES","_emscripten_glLineWidth","lineWidth","_emscripten_glLinkProgram","linkProgram","_emscripten_glPauseTransformFeedback","pauseTransformFeedback","_emscripten_glPixelStorei","pixelStorei","_emscripten_glPolygonOffset","polygonOffset","_emscripten_glProgramBinary","_emscripten_glProgramParameteri","_emscripten_glQueryCounterEXT","_emscripten_glReadBuffer","readBuffer","_emscripten_glReadPixels","readPixels","pixelData","_emscripten_glReleaseShaderCompiler","_emscripten_glRenderbufferStorage","renderbufferStorage","_emscripten_glRenderbufferStorageMultisample","renderbufferStorageMultisample","_emscripten_glResumeTransformFeedback","resumeTransformFeedback","_emscripten_glSampleCoverage","invert","sampleCoverage","_emscripten_glSamplerParameterf","samplerParameterf","_emscripten_glSamplerParameterfv","_emscripten_glSamplerParameteri","samplerParameteri","_emscripten_glSamplerParameteriv","_emscripten_glScissor","scissor","_emscripten_glShaderBinary","_emscripten_glShaderSource","shaderSource","_emscripten_glStencilFunc","stencilFunc","_emscripten_glStencilFuncSeparate","stencilFuncSeparate","_emscripten_glStencilMask","stencilMask","_emscripten_glStencilMaskSeparate","stencilMaskSeparate","_emscripten_glStencilOp","stencilOp","_emscripten_glStencilOpSeparate","stencilOpSeparate","_emscripten_glTexImage2D","texImage2D","_emscripten_glTexImage3D","texImage3D","_emscripten_glTexParameterf","texParameterf","_emscripten_glTexParameterfv","_emscripten_glTexParameteri","texParameteri","_emscripten_glTexParameteriv","_emscripten_glTexStorage2D","texStorage2D","_emscripten_glTexStorage3D","texStorage3D","_emscripten_glTexSubImage2D","texSubImage2D","_emscripten_glTexSubImage3D","texSubImage3D","_emscripten_glTransformFeedbackVaryings","varyings","bufferMode","vars","transformFeedbackVaryings","_emscripten_glUniform1f","v0","uniform1f","miniTempWebGLFloatBuffers","_emscripten_glUniform1fv","uniform1fv","_emscripten_glUniform1i","uniform1i","miniTempWebGLIntBuffers","_emscripten_glUniform1iv","uniform1iv","_emscripten_glUniform1ui","uniform1ui","_emscripten_glUniform1uiv","uniform1uiv","_emscripten_glUniform2f","v1","uniform2f","_emscripten_glUniform2fv","uniform2fv","_emscripten_glUniform2i","uniform2i","_emscripten_glUniform2iv","uniform2iv","_emscripten_glUniform2ui","uniform2ui","_emscripten_glUniform2uiv","uniform2uiv","_emscripten_glUniform3f","v2","uniform3f","_emscripten_glUniform3fv","uniform3fv","_emscripten_glUniform3i","uniform3i","_emscripten_glUniform3iv","uniform3iv","_emscripten_glUniform3ui","uniform3ui","_emscripten_glUniform3uiv","uniform3uiv","_emscripten_glUniform4f","v3","uniform4f","_emscripten_glUniform4fv","uniform4fv","_emscripten_glUniform4i","uniform4i","_emscripten_glUniform4iv","uniform4iv","_emscripten_glUniform4ui","uniform4ui","_emscripten_glUniform4uiv","uniform4uiv","_emscripten_glUniformBlockBinding","uniformBlockBinding","_emscripten_glUniformMatrix2fv","transpose","uniformMatrix2fv","_emscripten_glUniformMatrix2x3fv","uniformMatrix2x3fv","_emscripten_glUniformMatrix2x4fv","uniformMatrix2x4fv","_emscripten_glUniformMatrix3fv","uniformMatrix3fv","_emscripten_glUniformMatrix3x2fv","uniformMatrix3x2fv","_emscripten_glUniformMatrix3x4fv","uniformMatrix3x4fv","_emscripten_glUniformMatrix4fv","uniformMatrix4fv","_emscripten_glUniformMatrix4x2fv","uniformMatrix4x2fv","_emscripten_glUniformMatrix4x3fv","uniformMatrix4x3fv","_emscripten_glUseProgram","useProgram","_emscripten_glValidateProgram","validateProgram","_emscripten_glVertexAttrib1f","vertexAttrib1f","_emscripten_glVertexAttrib1fv","_emscripten_glVertexAttrib2f","vertexAttrib2f","_emscripten_glVertexAttrib2fv","_emscripten_glVertexAttrib3f","vertexAttrib3f","_emscripten_glVertexAttrib3fv","_emscripten_glVertexAttrib4f","vertexAttrib4f","_emscripten_glVertexAttrib4fv","_emscripten_glVertexAttribDivisor","_emscripten_glVertexAttribDivisorANGLE","_emscripten_glVertexAttribDivisorARB","_emscripten_glVertexAttribDivisorEXT","_emscripten_glVertexAttribDivisorNV","_emscripten_glVertexAttribI4i","vertexAttribI4i","_emscripten_glVertexAttribI4iv","_emscripten_glVertexAttribI4ui","vertexAttribI4ui","_emscripten_glVertexAttribI4uiv","_emscripten_glVertexAttribIPointer","vertexAttribIPointer","_emscripten_glVertexAttribPointer","vertexAttribPointer","_emscripten_glViewport","_emscripten_glWaitSync","waitSync","isAsync","instrumentWasmImports","ASYNCIFY_IMPORTS","original","instrumentWasmExports","exportCallStack","maybeStopUnwind","State","Normal","Unwinding","Rewinding","Disabled","StackSize","currData","handleSleepReturnValue","callStackNameToId","callStackIdToName","callStackId","asyncPromiseHandlers","sleepCallbacks","getCallStackId","_asyncify_stop_unwind","Fibers","trampoline","whenDone","allocateData","setDataHeader","setDataRewindFunc","stackSize","rewindId","getDataRewindFunc","doRewind","startAsync","reachedCallback","reachedAfterCallback","_asyncify_start_rewind","asyncWasmReturnValue","isError","_asyncify_start_unwind","_asyncify_stop_rewind","_free","handleAsync","readMode","writeMode","miniTempWebGLFloatBuffersStorage","miniTempWebGLIntBuffersStorage","atob","wasmImports","___errno_location","length_low","length_high","isNaN","cwdLengthInBytes","dirp","struct_size","child","op","argp","nofollow","time","tmPtr","getSeconds","getMinutes","getHours","yday","getTimezoneOffset","summerOffset","winterOffset","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","timezone","daylight","tzname","extractZone","toTimeString","currentYear","winter","summer","stdTimezoneOffset","winterName","summerName","winterNamePtr","summerNamePtr","api","attrib_list","configs","hmm","contextAttribs","glesContextVersion","minorVersion","surface","draw","isContextLost","interval","argbuf","runEmAsmFunction","runMainThreadEmAsm","fullscreenStrategy","hiddenElements","onlyVisibleElement","displayState","hideEverythingExceptGivenElement","restoreHiddenElements","webkitExitFullscreen","gamepadState","lastGamepadState","dest","copyWithin","deferUntilInEventHandler","doRequestFullscreen","requestedSize","oldSize","maxHeapSize","alignUp","multiple","cutDown","overGrownHeapSize","getGamepads","webkitGetGamepads","targetThread","onbeforeunload","confirmationMessage","returnValue","registerBeforeUnloadEventCallback","dynCall_v","mozRequestPointerLock","webkitRequestPointerLock","msRequestPointerLock","uiEvent","outerWidth","outerHeight","registerUiEventCallback","onwheel","wheelEvent","registerWheelEventCallback","__environ","environ_buf","stringToAscii","penviron_count","penviron_buf_size","pbuf","rightsBase","rightsInheriting","iov","iovcnt","pnum","doReadv","offset_low","offset_high","newOffset","doWritev","receiveInstance","instantiateStreaming","createWasm","runCaller","ready","defaultIWad","deathmatchIWad","indexDBName","WadHandler","_defineProperty","signal","_openDatabase","_uploadWad","trace","wadName","isIWAD","wadState","_asyncToGenerator","database","_database","upload","reader","FileReader","readAsArrayBuffer","iwad","trans","_database2","wad","setWad","_database3","_this2","dbrequest","projects","WadChooser","pelements","flex","fontSize","whiteSpace","fontWeight","flexGrow","maxWidth","padding","flexDirection","justifyContent","alignItems","onClick","singleton","click","onChange","uploadWad","flexShrink","EdgeClassic","canvasRef","useRef","canvasContainerRef","_useState2","_slicedToArray","useState","loading","lock","_I_WebSetFullscreen","useEffect","syncCanvasSize","offsetWidth","offsetHeight","doSyncTimeout","canvasSync","_I_WebSyncScreenSize","find","_I_WebOpenGameMenu","_objectSpread","preEdgeSyncFS","postEdgeSyncFS","preInit","print","printErr","setStatus","monitorRunDependencies","globalThis","visibility","_ref","_canvasRef$current","_x2","class","Player","App"],"mappings":"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U,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,4CAA6C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,4CAA6C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAs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wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,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AAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uDAAwD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uDAAwD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,U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","file":"bundle.065ba.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Pq/i\");\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function(p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","function cycleDetected(): never {\n\tthrow new Error(\"Cycle detected\");\n}\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\nfunction batch<T>(callback: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn callback();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\tpeek(): T;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\tconst signal = this;\n\treturn effect(function (this: Effect) {\n\t\tconst value = signal.value;\n\t\tconst flag = this._flags & TRACKING;\n\t\tthis._flags &= ~TRACKING;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tthis._flags |= flag;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.peek = function () {\n\treturn this._value;\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget() {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tcycleDetected();\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\nfunction signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_compute: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(compute: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, compute: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._compute = compute;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._compute();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when the it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nComputed.prototype.peek = function () {\n\tif (!this._refresh()) {\n\t\tcycleDetected();\n\t}\n\tif (this._flags & HAS_ERROR) {\n\t\tthrow this._value;\n\t}\n\treturn this._value;\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget() {\n\t\tif (this._flags & RUNNING) {\n\t\t\tcycleDetected();\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\ninterface ReadonlySignal<T = any> extends Signal<T> {\n\treadonly value: T;\n}\n\nfunction computed<T>(compute: () => T): ReadonlySignal<T> {\n\treturn new Computed(compute);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._compute = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ndeclare class Effect {\n\t_compute?: () => unknown;\n\t_cleanup?: unknown;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(compute: () => void);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, compute: () => void) {\n\tthis._compute = compute;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (!(this._flags & DISPOSED) && this._compute !== undefined) {\n\t\t\tthis._cleanup = this._compute();\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tcycleDetected();\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nfunction effect(compute: () => unknown): () => void {\n\tconst effect = new Effect(compute);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { signal, computed, effect, batch, Signal, ReadonlySignal };\n","import { options, Component } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport { signal, computed, batch, effect, Signal, type ReadonlySignal };\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction Text(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst s = useMemo(() => {\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Replace this component's vdom updater with a direct text one:\n\t\tthis._updater!._callback = () => {\n\t\t\t(this.base as Text).data = s.peek();\n\t\t};\n\n\t\treturn computed(() => {\n\t\t\tlet data = currentSignal.value;\n\t\t\tlet s = data.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\t}, []);\n\n\treturn s.value;\n}\nText.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: Text },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(() => {\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// let reason;\n\t// if (!hasSignals && !hasComputeds.has(this)) {\n\t// \treason = \"no signals or computeds\";\n\t// } else if (hasPendingUpdate.has(this)) {\n\t// \treason = \"has pending update\";\n\t// } else if (hasHookState.has(this)) {\n\t// \treason = \"has hook state\";\n\t// }\n\t// if (reason) {\n\t// \tif (!this) reason += \" (`this` bug)\";\n\t// \tconsole.log(\"not optimizing\", this?.constructor?.name, \": \", reason, {\n\t// \t\tdetails: {\n\t// \t\t\thasSignals,\n\t// \t\t\thasComputeds: hasComputeds.has(this),\n\t// \t\t\thasPendingUpdate: hasPendingUpdate.has(this),\n\t// \t\t\thasHookState: hasHookState.has(this),\n\t// \t\t\tdeps: Array.from(updater._deps),\n\t// \t\t\tupdater,\n\t// \t\t},\n\t// \t});\n\t// }\n\n\t// if this component used no signals or computeds, update:\n\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t// if there is a pending re-render triggered from Signals,\n\t// or if there is hook or class state, update:\n\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T) {\n\treturn useMemo(() => signal<T>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(() => callback.current());\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"loading__O14bA\"};","\r\nvar createEdgeModule = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  \r\n  return (\r\nfunction(createEdgeModule = {})  {\r\n\r\n// include: shell.js\r\n// The Module object: Our interface to the outside world. We import\r\n// and export values on it. There are various ways Module can be used:\r\n// 1. Not defined. We create it here\r\n// 2. A function parameter, function(Module) { ..generated code.. }\r\n// 3. pre-run appended it, var Module = {}; ..generated code..\r\n// 4. External script tag defines var Module.\r\n// We need to check if Module already exists (e.g. case 3 above).\r\n// Substitution will be replaced with actual code on later stage of the build,\r\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\r\n// Note that if you want to run closure, and also to use Module\r\n// after the generated code, you will need to define   var Module = {};\r\n// before the code. Then that object will be used in the code, and you\r\n// can continue to use Module afterwards as well.\r\nvar Module = typeof createEdgeModule != 'undefined' ? createEdgeModule : {};\r\n\r\n// Set up the promise that indicates the Module is initialized\r\nvar readyPromiseResolve, readyPromiseReject;\r\nModule['ready'] = new Promise((resolve, reject) => {\r\n  readyPromiseResolve = resolve;\r\n  readyPromiseReject = reject;\r\n});\r\n\r\n// --pre-jses are emitted after the Module integration code, so that they can\r\n// refer to Module (if they choose; they can also define Module)\r\n\r\n  var Module = typeof Module !== 'undefined' ? Module : {};\r\n\r\n  if (!Module.expectedDataFileDownloads) {\r\n    Module.expectedDataFileDownloads = 0;\r\n  }\r\n\r\n  Module.expectedDataFileDownloads++;\r\n  (function() {\r\n    // Do not attempt to redownload the virtual filesystem data when in a pthread or a Wasm Worker context.\r\n    if (Module['ENVIRONMENT_IS_PTHREAD'] || Module['$ww']) return;\r\n    var loadPackage = function(metadata) {\r\n\r\n      var PACKAGE_PATH = '';\r\n      if (typeof window === 'object') {\r\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');\r\n      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {\r\n        // web worker\r\n        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');\r\n      }\r\n      var PACKAGE_NAME = 'C:/Dev/EDGE-pbdot/web/site/edge-classic.data';\r\n      var REMOTE_PACKAGE_BASE = 'edge-classic.data';\r\n      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {\r\n        Module['locateFile'] = Module['locateFilePackage'];\r\n        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');\r\n      }\r\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\r\nvar REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\r\n\r\n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\r\n        \r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', packageName, true);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.onprogress = function(event) {\r\n          var url = packageName;\r\n          var size = packageSize;\r\n          if (event.total) size = event.total;\r\n          if (event.loaded) {\r\n            if (!xhr.addedTotal) {\r\n              xhr.addedTotal = true;\r\n              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};\r\n              Module.dataFileDownloads[url] = {\r\n                loaded: event.loaded,\r\n                total: size\r\n              };\r\n            } else {\r\n              Module.dataFileDownloads[url].loaded = event.loaded;\r\n            }\r\n            var total = 0;\r\n            var loaded = 0;\r\n            var num = 0;\r\n            for (var download in Module.dataFileDownloads) {\r\n            var data = Module.dataFileDownloads[download];\r\n              total += data.total;\r\n              loaded += data.loaded;\r\n              num++;\r\n            }\r\n            total = Math.ceil(total * Module.expectedDataFileDownloads/num);\r\n            if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');\r\n          } else if (!Module.dataFileDownloads) {\r\n            if (Module['setStatus']) Module['setStatus']('Downloading data...');\r\n          }\r\n        };\r\n        xhr.onerror = function(event) {\r\n          throw new Error(\"NetworkError for: \" + packageName);\r\n        }\r\n        xhr.onload = function(event) {\r\n          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n            var packageData = xhr.response;\r\n            callback(packageData);\r\n          } else {\r\n            throw new Error(xhr.statusText + \" : \" + xhr.responseURL);\r\n          }\r\n        };\r\n        xhr.send(null);\r\n      };\r\n\r\n      function handleError(error) {\r\n        console.error('package error:', error);\r\n      };\r\n\r\n    function runWithFS() {\r\n\r\n      function assert(check, msg) {\r\n        if (!check) throw msg + new Error().stack;\r\n      }\r\nModule['FS_createPath'](\"/\", \"edge_base\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"blasphemer\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom1\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom2\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"freedoom1\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1/graphics\", \"freedoom_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"freedoom2\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2/graphics\", \"freedoom_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"hacx\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"harmony\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony/graphics\", \"harmony_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"heretic\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"plutonia\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"rekkr\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"tnt\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/\", \"edge_defs\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"colormaps\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"crosshairs\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"edge1_font\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"overlays\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"sounds\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/sprites\", \"mbf_dog\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"ttf\", true, true);\r\nModule['FS_createPath'](\"/\", \"soundfont\", true, true);\r\n\r\n        var PACKAGE_UUID = metadata['package_uuid'];\r\n        var indexedDB;\r\n        if (typeof window === 'object') {\r\n          indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        } else if (typeof location !== 'undefined') {\r\n          // worker\r\n          indexedDB = self.indexedDB;\r\n        } else {\r\n          throw 'using IndexedDB to cache data can only be done on a web page or in a web worker';\r\n        }\r\n        var IDB_RO = \"readonly\";\r\n        var IDB_RW = \"readwrite\";\r\n        var DB_NAME = \"EM_PRELOAD_CACHE\";\r\n        var DB_VERSION = 1;\r\n        var METADATA_STORE_NAME = 'METADATA';\r\n        var PACKAGE_STORE_NAME = 'PACKAGES';\r\n        function openDatabase(callback, errback) {\r\n          try {\r\n            var openRequest = indexedDB.open(DB_NAME, DB_VERSION);\r\n          } catch (e) {\r\n            return errback(e);\r\n          }\r\n          openRequest.onupgradeneeded = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n\r\n            if (db.objectStoreNames.contains(PACKAGE_STORE_NAME)) {\r\n              db.deleteObjectStore(PACKAGE_STORE_NAME);\r\n            }\r\n            var packages = db.createObjectStore(PACKAGE_STORE_NAME);\r\n\r\n            if (db.objectStoreNames.contains(METADATA_STORE_NAME)) {\r\n              db.deleteObjectStore(METADATA_STORE_NAME);\r\n            }\r\n            var metadata = db.createObjectStore(METADATA_STORE_NAME);\r\n          };\r\n          openRequest.onsuccess = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n            callback(db);\r\n          };\r\n          openRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        };\r\n\r\n        // This is needed as chromium has a limit on per-entry files in IndexedDB\r\n        // https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177\r\n        // https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60\r\n        // We set the chunk size to 64MB to stay well-below the limit\r\n        var CHUNK_SIZE = 64 * 1024 * 1024;\r\n\r\n        function cacheRemotePackage(\r\n          db,\r\n          packageName,\r\n          packageData,\r\n          packageMeta,\r\n          callback,\r\n          errback\r\n        ) {\r\n          var transactionPackages = db.transaction([PACKAGE_STORE_NAME], IDB_RW);\r\n          var packages = transactionPackages.objectStore(PACKAGE_STORE_NAME);\r\n          var chunkSliceStart = 0;\r\n          var nextChunkSliceStart = 0;\r\n          var chunkCount = Math.ceil(packageData.byteLength / CHUNK_SIZE);\r\n          var finishedChunks = 0;\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            nextChunkSliceStart += CHUNK_SIZE;\r\n            var putPackageRequest = packages.put(\r\n              packageData.slice(chunkSliceStart, nextChunkSliceStart),\r\n              'package/' + packageName + '/' + chunkId\r\n            );\r\n            chunkSliceStart = nextChunkSliceStart;\r\n            putPackageRequest.onsuccess = function(event) {\r\n              finishedChunks++;\r\n              if (finishedChunks == chunkCount) {\r\n                var transaction_metadata = db.transaction(\r\n                  [METADATA_STORE_NAME],\r\n                  IDB_RW\r\n                );\r\n                var metadata = transaction_metadata.objectStore(METADATA_STORE_NAME);\r\n                var putMetadataRequest = metadata.put(\r\n                  {\r\n                    'uuid': packageMeta.uuid,\r\n                    'chunkCount': chunkCount\r\n                  },\r\n                  'metadata/' + packageName\r\n                );\r\n                putMetadataRequest.onsuccess = function(event) {\r\n                  callback(packageData);\r\n                };\r\n                putMetadataRequest.onerror = function(error) {\r\n                  errback(error);\r\n                };\r\n              }\r\n            };\r\n            putPackageRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n        /* Check if there's a cached package, and if so whether it's the latest available */\r\n        function checkCachedPackage(db, packageName, callback, errback) {\r\n          var transaction = db.transaction([METADATA_STORE_NAME], IDB_RO);\r\n          var metadata = transaction.objectStore(METADATA_STORE_NAME);\r\n          var getRequest = metadata.get('metadata/' + packageName);\r\n          getRequest.onsuccess = function(event) {\r\n            var result = event.target.result;\r\n            if (!result) {\r\n              return callback(false, null);\r\n            } else {\r\n              return callback(PACKAGE_UUID === result['uuid'], result);\r\n            }\r\n          };\r\n          getRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        }\r\n\r\n        function fetchCachedPackage(db, packageName, metadata, callback, errback) {\r\n          var transaction = db.transaction([PACKAGE_STORE_NAME], IDB_RO);\r\n          var packages = transaction.objectStore(PACKAGE_STORE_NAME);\r\n\r\n          var chunksDone = 0;\r\n          var totalSize = 0;\r\n          var chunkCount = metadata['chunkCount'];\r\n          var chunks = new Array(chunkCount);\r\n\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            var getRequest = packages.get('package/' + packageName + '/' + chunkId);\r\n            getRequest.onsuccess = function(event) {\r\n              // If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now\r\n              if (chunkCount == 1) {\r\n                callback(event.target.result);\r\n              } else {\r\n                chunksDone++;\r\n                totalSize += event.target.result.byteLength;\r\n                chunks.push(event.target.result);\r\n                if (chunksDone == chunkCount) {\r\n                  if (chunksDone == 1) {\r\n                    callback(event.target.result);\r\n                  } else {\r\n                    var tempTyped = new Uint8Array(totalSize);\r\n                    var byteOffset = 0;\r\n                    for (var chunkId in chunks) {\r\n                      var buffer = chunks[chunkId];\r\n                      tempTyped.set(new Uint8Array(buffer), byteOffset);\r\n                      byteOffset += buffer.byteLength;\r\n                      buffer = undefined;\r\n                    }\r\n                    chunks = undefined;\r\n                    callback(tempTyped.buffer);\r\n                    tempTyped = undefined;\r\n                  }\r\n                }\r\n              }\r\n            };\r\n            getRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n      function processPackageData(arrayBuffer) {\r\n        assert(arrayBuffer, 'Loading data file failed.');\r\n        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');\r\n        var byteArray = new Uint8Array(arrayBuffer);\r\n        var curr;\r\n        var compressedData = {\"data\":null,\"cachedOffset\":52769271,\"cachedIndexes\":[-1,-1],\"cachedChunks\":[null,null],\"offsets\":[0,2048,4096,6153,8201,10249,12297,14345,16393,18441,20489,22537,24585,26633,28681,30729,32777,34825,36873,38921,40969,43017,44320,45575,46645,47624,49234,50342,51819,53416,54516,55518,56293,57235,58188,59129,60147,60899,61811,62792,63738,64694,65555,66506,67313,68206,69153,69989,70783,71676,72484,73745,74644,75619,76538,77671,78797,79820,81106,82179,83055,84097,85381,86680,87934,89342,89915,90424,91002,91632,92221,92818,93813,94737,95579,96413,96936,97499,98239,98920,99570,100734,101523,102178,102815,103572,104243,105091,105938,106784,107756,108381,109014,109514,110084,110677,111412,112102,112979,113688,114401,115243,116153,117332,118091,118998,119954,120861,121700,122541,123401,124256,124923,125827,126779,127751,128589,129208,129567,130124,131001,131959,132332,132977,133931,134587,135270,135826,136452,137106,138004,138909,139671,140343,141050,141625,143367,145109,146548,148017,149499,151007,152538,154059,155571,157099,158609,160200,161935,163758,165708,167697,169697,171713,173709,175714,177734,179726,181639,183445,185239,187098,189029,190908,192880,194894,196853,198708,200552,202350,204091,205826,207575,209376,211193,213076,215028,216995,219009,221006,223011,224908,226581,228116,229601,231103,232636,234140,235664,237147,238632,240078,241516,242937,244654,246516,247797,249065,250324,251573,252873,254177,255552,256859,258092,259400,260641,261854,263248,264631,266100,267506,268937,270350,271772,273290,274834,276296,277810,279350,280907,282536,284190,285745,287356,288913,290511,292053,293558,295055,296736,298440,299995,301713,303360,304713,306070,307456,308765,310021,311280,312559,313799,314975,316145,317358,318512,319678,320892,322115,323425,324676,326109,328114,329166,330262,331424,332551,333562,334509,335587,336723,337849,339030,340141,341370,342549,343909,345311,346802,348344,349971,351528,353093,354712,356187,357579,359117,360708,362231,363803,365315,366676,368163,369450,370793,372183,373417,374725,376176,377649,379179,380686,382170,383611,384895,386082,387166,388197,389234,390267,391402,392619,393692,394555,395596,396685,397599,398524,399506,400584,402606,404149,405721,407312,408901,410491,412105,413775,415374,416964,418579,420268,421932,423361,424886,426479,428017,429634,431391,433033,434546,436188,437717,439179,440643,442174,443813,445287,446786,448315,449896,451452,452986,454534,456146,457719,459363,461028,462715,464323,465865,467455,469134,470697,472207,473488,474726,476288,477811,479306,480712,482321,483949,485631,487373,488961,490446,492030,493980,495468,496458,497566,498525,499609,500746,501804,502984,503976,504993,506129,507258,508444,509522,510610,511717,512903,514084,515296,516509,517754,519029,520351,521655,522837,524024,525105,526173,527178,528179,529204,530272,531325,532214,533127,534088,535028,536039,537047,538097,539130,540166,541216,542213,543108,544156,545124,546167,547181,548276,549427,550536,551668,552727,553717,554688,555559,557016,558867,560137,561411,562670,563937,565228,566525,567889,569207,570433,571739,572992,574132,575421,576728,578126,579426,580748,582059,583427,584901,586531,588158,589755,591169,592503,593888,595440,596994,598742,600431,602055,603495,604778,606159,607587,609062,610515,612031,613530,614898,616250,617624,618947,620189,621445,622731,623979,625141,626329,627545,628718,629898,631108,632320,633645,634904,636352,638383,639943,641542,643134,644759,646375,647921,649464,651084,652647,654220,655833,657542,659288,661108,662915,664669,666177,667855,669469,671233,673111,674921,676680,678566,680411,682214,684099,685945,687689,689518,691200,692910,694688,696352,698010,699788,701424,703273,705138,706858,708262,709635,710995,712264,713631,715151,716645,718099,719633,721183,722693,724196,725790,727259,728696,730169,731670,733715,734665,735499,736279,737188,738112,738866,739554,740493,741309,742150,742936,743754,744729,745858,747117,748327,749641,750919,752259,753707,755211,756798,758332,760001,761580,763239,764834,766443,768080,769693,771290,772793,774286,775756,777264,778834,780357,781796,783268,784697,786073,787415,788650,789824,791051,792209,793370,794373,795355,796404,797457,798430,799376,800389,801396,802314,803078,804761,806634,808512,810363,812251,814085,815885,817713,819570,821375,823120,824732,826281,827654,829416,831387,833260,835078,836984,838838,840711,842619,844542,846390,848088,849736,851309,852747,854429,856443,858157,859978,861869,863782,865659,867451,869196,870730,872166,873679,875255,876866,878519,880460,882105,884112,885992,887736,889751,891492,893357,895390,896907,898191,899827,901358,902815,904598,906388,907752,909233,910863,912381,913869,915841,917323,918686,920367,921925,923474,925261,927203,928877,930555,932254,934027,935774,937531,939261,941043,942878,944691,946538,948424,950158,951923,953705,955506,957339,959169,960969,962826,964668,966452,968215,969974,971736,973521,975264,977014,978825,980547,982301,984056,985886,987665,989447,991204,992952,994654,996350,998083,999850,1001578,1003283,1004931,1006654,1008507,1010406,1012243,1014082,1015881,1017735,1019656,1021515,1023300,1025010,1026656,1028355,1030403,1032339,1034257,1036165,1038111,1040026,1041937,1043837,1045751,1047640,1049510,1051431,1053344,1055152,1056966,1058712,1060481,1062236,1064073,1065882,1067696,1069495,1071312,1073160,1075002,1076822,1078582,1080313,1082020,1083602,1085162,1086825,1088559,1090370,1092137,1093873,1095614,1097305,1099027,1100736,1102466,1104226,1105996,1107810,1109564,1111341,1113260,1115158,1117119,1118963,1120767,1122610,1124514,1126430,1128356,1130245,1132156,1134002,1136050,1138030,1139972,1141956,1143961,1145963,1147972,1149962,1151915,1153845,1155756,1157741,1159740,1161721,1163660,1165544,1167469,1169465,1171421,1173403,1175385,1177413,1179435,1181368,1183297,1185224,1187118,1189048,1190883,1192587,1194365,1196168,1198069,1199987,1201923,1203882,1205857,1207829,1209809,1211741,1213649,1215659,1217588,1219393,1221236,1223105,1224964,1226827,1228638,1230432,1232233,1234102,1235920,1237643,1239339,1240920,1242425,1243878,1244667,1246572,1248620,1250668,1252716,1254764,1256812,1258860,1260908,1262956,1265004,1267052,1269100,1271148,1273196,1275244,1277292,1279340,1281388,1283436,1285484,1287532,1289580,1291628,1293676,1295724,1297772,1299820,1301868,1303916,1305964,1308012,1310060,1312108,1314156,1316204,1318252,1320300,1322348,1324396,1326444,1328492,1330540,1332588,1334636,1336684,1338732,1340780,1342828,1344876,1346924,1348972,1351020,1353068,1355116,1357164,1359212,1361260,1363308,1365356,1367404,1369452,1371500,1373548,1375596,1377644,1379692,1381740,1383788,1385836,1387884,1389932,1391980,1394028,1396076,1398124,1400172,1402220,1404268,1406316,1408364,1410412,1412460,1414517,1416565,1418613,1420661,1422709,1424757,1426805,1428853,1430901,1432949,1434997,1437045,1439093,1441141,1443198,1445246,1447294,1449342,1451390,1453438,1455486,1457534,1459582,1461630,1463678,1465726,1467774,1469822,1471870,1473918,1475966,1478021,1480069,1482117,1484165,1486213,1488261,1490309,1492357,1494405,1496453,1498501,1500549,1502597,1504645,1506693,1508741,1510789,1512837,1514885,1516933,1518981,1521029,1523077,1525125,1527173,1529221,1531269,1533317,1535365,1537413,1539461,1541509,1543557,1545605,1547653,1549701,1551749,1553797,1555845,1557893,1559941,1561989,1564037,1566085,1568133,1570181,1572229,1574277,1576325,1578373,1580421,1582469,1584517,1586565,1588613,1590661,1592709,1594757,1596805,1598853,1600901,1602949,1604997,1607045,1609093,1611141,1613189,1615237,1617285,1619333,1621381,1623429,1625477,1627525,1629573,1631621,1633669,1635717,1637765,1639813,1641861,1643909,1645957,1648005,1650053,1652101,1654149,1656197,1658245,1660293,1662341,1664389,1666437,1668485,1670533,1672581,1674629,1676677,1678725,1680773,1682821,1684869,1686917,1688965,1691013,1693061,1695109,1697157,1699205,1701253,1703301,1705349,1707397,1709445,1711493,1713541,1715589,1717637,1719685,1721733,1723781,1725829,1727877,1729925,1731973,1734021,1736069,1738117,1740165,1742213,1744261,1746309,1748357,1750405,1752453,1754501,1756549,1758597,1760645,1762693,1764741,1766789,1768846,1770387,1771853,1773207,1774746,1776246,1777818,1779245,1780685,1782006,1783193,1784513,1786015,1787415,1788603,1789900,1791333,1792869,1794269,1795749,1797194,1798573,1799911,1801391,1802877,1804314,1805801,1807293,1808771,1810226,1811717,1813248,1814772,1816366,1817836,1819410,1820926,1822497,1824010,1825487,1826909,1828484,1830061,1831492,1832934,1834313,1835941,1837611,1839256,1840890,1842485,1844006,1845619,1847315,1848909,1850440,1852078,1853602,1855523,1857015,1858054,1859199,1860291,1861408,1862399,1863440,1864534,1865602,1866746,1867853,1868976,1870205,1871537,1872901,1874366,1875874,1877446,1879031,1880557,1882186,1883752,1885152,1886553,1888157,1889738,1891245,1892798,1894215,1895649,1897039,1898346,1899675,1901038,1902281,1903685,1905137,1906661,1908183,1909681,1911188,1912518,1913735,1914905,1915904,1916967,1917985,1919172,1920338,1921526,1922509,1923380,1924436,1925401,1926336,1927289,1928300,1929864,1931586,1932663,1933766,1934902,1936009,1936954,1937982,1939032,1940104,1941247,1942464,1943712,1945021,1946203,1947696,1949252,1950766,1952261,1953779,1955240,1956859,1958461,1959962,1961414,1963040,1964671,1966058,1967591,1969094,1970657,1972299,1973980,1975823,1977733,1979586,1981145,1982919,1984741,1986495,1987991,1989663,1990939,1992375,1993712,1994627,1995709,1996815,1997909,1999027,2000217,2001275,2002158,2003206,2004210,2005106,2006045,2007015,2008304,2010332,2011844,2013390,2014920,2016472,2018037,2019509,2020995,2022526,2024026,2025529,2027099,2028747,2030473,2032254,2034026,2035743,2037232,2038911,2040497,2042221,2044104,2045871,2047551,2049424,2051171,2052936,2054816,2056533,2058148,2060001,2061684,2063361,2065129,2066652,2068218,2069941,2071532,2073366,2075190,2076880,2078249,2079622,2080953,2082207,2083554,2085003,2086482,2087921,2089373,2090848,2092297,2093754,2095284,2096681,2098054,2099475,2100924,2102969,2104683,2106340,2108007,2109749,2111534,2113261,2115001,2116788,2118581,2120411,2122232,2124128,2125905,2127666,2129461,2131241,2133055,2134871,2136700,2138484,2140371,2142172,2143930,2145701,2147468,2149212,2151003,2152683,2154443,2156249,2158001,2159753,2161535,2163375,2165148,2166899,2168651,2170358,2172094,2173801,2175522,2177254,2178977,2180681,2182294,2184132,2185990,2187891,2189735,2191543,2193365,2195247,2197129,2198982,2200759,2202449,2204036,2204936,2206729,2208777,2210825,2212873,2214921,2216969,2219017,2221065,2223113,2225161,2227209,2229257,2231305,2233353,2235401,2237449,2239497,2241545,2243593,2245641,2247689,2249737,2251785,2253833,2255881,2257929,2259977,2262025,2264073,2266121,2268169,2270217,2272265,2274313,2276361,2278409,2280457,2282505,2284553,2286601,2288649,2290697,2292745,2294793,2296841,2298889,2300937,2302985,2305033,2307081,2309129,2311177,2313225,2315273,2317321,2319369,2321417,2323465,2325513,2327561,2329609,2331657,2333705,2335753,2337801,2339849,2341452,2342683,2344078,2345471,2346928,2348475,2350011,2351439,2352913,2354378,2355860,2357285,2358746,2360194,2361523,2362855,2363473,2364441,2365571,2366992,2368604,2370298,2372120,2373951,2375838,2377702,2379525,2381256,2382977,2384717,2386472,2388316,2390193,2392072,2393886,2395724,2397546,2399353,2400929,2402216,2403268,2404336,2405586,2406887,2407989,2409400,2410657,2411768,2413036,2414289,2415707,2417188,2418667,2420142,2421519,2422934,2424334,2426041,2427879,2429313,2430750,2432249,2433802,2435264,2436776,2438310,2439725,2441194,2442746,2444378,2445822,2447319,2448967,2450644,2452285,2454026,2455822,2457460,2459182,2460844,2462412,2463968,2465453,2467024,2468656,2470218,2471815,2473434,2475066,2476653,2478204,2479752,2481388,2483011,2484635,2486261,2487862,2489391,2490939,2492549,2494205,2495804,2497285,2498461,2499849,2501331,2502808,2504181,2505626,2507130,2508710,2510320,2511907,2513325,2514730,2516340,2518344,2519700,2521079,2522454,2523886,2525234,2526625,2528101,2529504,2530941,2532345,2533852,2535221,2536386,2537916,2539448,2540989,2542566,2544236,2545828,2547395,2548994,2550459,2551918,2553410,2554973,2556521,2558022,2559468,2560999,2562558,2564059,2565541,2567052,2568645,2570184,2571757,2573305,2574914,2576483,2578002,2579528,2581050,2582439,2583744,2584765,2585789,2587150,2588540,2589847,2591127,2592596,2594079,2595601,2597154,2598490,2599771,2601195,2603235,2604885,2606542,2608196,2609933,2611696,2613413,2615187,2616870,2618544,2620270,2622085,2623850,2625322,2626911,2628568,2630188,2631848,2633660,2635392,2636971,2638667,2640274,2641810,2643346,2644947,2646664,2648224,2649774,2651342,2652971,2654620,2656246,2657853,2659530,2661197,2662937,2664666,2666450,2668115,2669734,2671368,2673087,2674695,2676250,2677553,2678909,2680626,2682312,2683921,2685476,2687177,2688929,2690713,2692564,2694270,2695872,2697536,2699512,2700634,2701178,2701786,2702470,2703135,2703846,2704599,2705562,2706577,2707661,2708569,2709547,2711009,2712489,2714120,2715770,2716971,2718406,2719886,2721606,2723307,2725044,2726610,2728304,2729946,2731713,2733335,2735038,2736492,2738229,2739953,2741701,2743408,2745145,2746839,2748492,2750186,2751925,2753663,2755382,2757059,2758448,2759866,2761104,2762286,2763586,2765071,2766357,2767533,2768828,2770138,2771581,2773148,2774668,2776164,2777727,2779350,2780581,2782284,2784332,2786380,2788428,2790476,2792524,2794572,2796620,2798668,2800716,2802764,2804812,2806860,2808908,2810956,2813004,2815052,2817100,2819148,2821205,2823253,2825301,2827349,2829397,2831445,2833493,2835541,2837589,2839637,2841685,2843733,2845781,2847829,2849877,2851925,2853973,2856021,2858069,2860117,2862165,2864213,2866261,2868309,2870357,2872405,2874453,2876501,2878549,2880597,2882645,2884693,2886741,2888789,2890837,2892885,2894933,2896981,2899029,2901077,2903125,2905173,2907221,2909269,2911317,2913365,2915413,2917461,2919509,2921557,2923605,2925653,2927701,2929749,2931797,2933845,2935893,2937941,2939989,2942037,2944085,2946133,2948181,2950229,2952277,2954325,2956373,2958421,2960469,2962517,2964565,2966613,2968661,2970709,2972757,2974805,2976853,2978901,2980949,2982997,2985045,2987093,2989141,2991189,2993237,2995285,2997333,2999381,3001429,3003477,3005525,3007573,3009621,3011669,3013717,3015765,3017813,3019861,3021909,3023957,3026005,3028053,3030101,3032149,3034197,3036254,3038302,3040350,3042398,3044446,3046494,3048542,3050590,3052638,3054686,3056734,3058782,3060830,3062878,3064926,3066974,3069022,3071070,3073118,3075175,3077223,3079271,3081319,3083367,3085415,3087463,3089511,3091559,3093607,3095655,3097703,3099751,3101799,3103847,3105895,3107943,3109991,3112039,3114087,3116135,3118183,3120231,3122279,3124327,3126375,3128423,3130471,3132519,3134567,3136615,3138663,3140711,3142759,3144807,3146855,3148903,3150951,3152999,3155047,3157103,3159160,3161208,3163224,3165247,3167294,3169342,3171396,3173444,3175498,3177551,3179599,3181647,3183695,3185743,3187791,3189839,3191887,3193935,3195983,3198031,3200079,3202127,3204175,3206223,3208271,3210319,3212367,3214422,3216470,3218518,3220566,3222614,3224662,3226710,3228758,3230806,3232854,3234902,3236950,3238998,3241046,3243094,3245142,3247190,3249238,3251286,3253334,3255382,3257430,3259474,3261486,3263534,3265583,3267631,3269679,3271727,3273777,3275834,3277882,3279930,3281978,3284026,3286074,3288122,3290170,3292218,3294266,3296314,3298362,3300410,3302458,3304506,3306554,3308602,3310650,3312701,3314749,3316797,3318845,3320893,3322941,3324989,3327037,3329085,3331133,3333181,3335229,3337277,3339325,3341373,3343421,3345469,3347517,3349565,3351613,3353661,3355709,3357750,3359763,3361796,3363842,3365899,3367947,3369995,3372044,3374092,3376140,3378188,3380236,3382284,3384332,3386380,3388428,3390476,3392524,3394572,3396620,3398668,3400716,3402764,3404812,3406860,3408908,3410965,3413013,3415061,3417109,3419157,3421205,3423253,3425301,3427349,3429397,3431445,3433493,3435541,3437589,3439637,3441685,3443733,3445781,3447829,3449877,3451925,3453973,3456021,3458069,3460117,3462165,3464213,3466261,3468309,3470357,3472405,3474453,3476501,3478549,3480597,3482645,3484693,3486741,3488789,3490837,3492885,3494933,3496981,3499029,3501077,3503125,3505173,3507221,3509269,3511317,3513365,3515413,3517461,3519509,3521557,3523605,3525653,3527701,3529749,3531797,3533845,3535893,3537941,3539989,3542037,3544085,3546133,3548181,3550229,3552277,3554325,3556373,3558421,3560469,3562517,3564565,3566613,3568661,3570709,3572757,3574805,3576853,3578901,3580949,3582997,3585045,3587093,3589141,3591189,3593237,3595285,3597333,3599381,3601429,3603477,3605525,3607573,3609621,3611669,3613717,3615765,3617813,3619861,3621909,3623957,3626005,3628053,3630101,3632149,3634197,3636245,3638293,3640342,3642350,3644381,3646430,3648484,3650532,3652588,3654640,3656696,3658744,3660792,3662840,3664888,3666936,3668984,3671032,3673080,3675128,3677176,3679224,3681272,3683320,3685368,3687416,3689464,3691384,3692639,3694015,3695278,3696405,3697492,3698479,3699569,3700747,3701828,3702969,3704075,3705328,3706417,3707557,3708705,3709672,3710865,3712019,3713230,3714400,3715532,3716749,3717630,3718474,3719390,3720376,3721319,3722207,3722975,3723946,3724768,3725552,3726159,3726497,3726833,3727167,3728468,3729734,3731220,3732657,3734124,3735565,3736284,3737396,3738493,3739382,3740286,3741128,3742515,3743801,3745258,3746592,3747694,3748716,3749784,3750870,3752028,3753193,3754232,3755324,3756564,3757656,3758878,3759938,3760988,3762122,3763313,3764483,3765700,3766815,3768028,3768988,3769895,3770852,3771832,3772764,3773509,3774403,3775239,3776092,3777097,3777643,3777980,3778326,3778846,3780014,3781315,3782773,3784179,3785582,3786868,3787834,3789026,3789884,3790782,3791645,3792665,3794713,3794775,3794823,3794872,3794934,3795021,3795142,3795306,3795509,3795683,3795893,3796127,3796381,3796827,3797701,3798711,3799687,3800730,3802089,3803691,3805289,3806925,3808555,3810251,3812013,3813781,3815459,3816991,3818541,3820127,3821851,3823503,3825237,3827018,3828722,3830350,3831998,3833582,3835211,3836834,3838118,3839058,3840045,3840917,3841554,3841894,3842115,3842269,3842388,3842499,3842659,3842807,3842880,3842949,3842994,3843039,3843084,3843126,3844884,3845551,3845722,3845901,3846124,3846391,3846693,3847137,3847472,3847868,3848352,3848684,3849009,3849568,3850359,3851325,3852219,3853345,3854478,3855978,3857666,3859421,3861235,3863010,3864859,3866672,3868483,3870135,3871820,3873528,3875347,3877205,3879055,3880930,3882785,3884534,3886417,3888305,3890174,3892018,3893724,3894637,3895615,3896505,3897298,3897895,3898378,3898705,3899047,3899396,3899796,3900205,3900470,3900646,3900805,3901027,3901270,3901419,3902723,3904490,3905761,3907161,3908363,3909605,3910992,3912371,3913718,3915118,3916436,3917866,3919360,3920817,3922187,3923649,3925081,3926530,3928035,3929428,3931001,3932391,3933743,3935118,3936524,3937873,3939008,3940176,3941511,3942830,3944182,3945556,3946949,3948177,3949470,3950910,3952256,3953566,3954899,3956360,3957899,3959310,3960835,3962203,3963587,3964975,3966420,3967842,3969330,3970704,3972013,3973407,3974696,3976089,3977483,3978769,3979964,3981109,3982625,3983949,3985347,3987031,3987954,3989117,3990683,3991813,3992977,3994797,3995726,3996761,3997498,3999490,4000074,4000119,4000164,4000209,4000977,4001885,4002978,4004068,4005425,4007012,4008310,4009933,4011771,4013562,4015214,4016912,4018588,4019372,4020594,4022145,4023904,4025713,4027515,4029272,4031083,4032893,4034617,4036205,4037873,4039560,4041467,4043298,4045179,4047024,4048825,4050577,4052481,4054333,4056206,4058082,4059834,4061451,4063034,4064554,4066325,4067687,4068945,4070273,4071533,4072774,4073833,4074786,4075648,4076060,4076108,4076155,4076200,4076820,4077552,4078522,4079317,4080054,4081185,4082616,4083945,4085126,4086046,4086999,4087464,4088414,4089089,4089810,4090507,4091248,4092174,4093050,4093873,4094749,4095661,4096633,4097461,4098271,4099038,4099955,4100857,4101816,4102729,4103644,4104331,4105102,4105713,4106372,4107120,4107929,4108636,4109386,4110300,4111197,4111894,4112713,4113531,4114358,4115234,4115931,4116786,4117750,4118616,4119467,4120297,4121120,4121950,4122937,4123691,4124509,4125969,4127482,4128946,4130445,4132085,4133696,4135251,4136760,4138476,4139891,4141419,4142932,4144591,4146176,4147616,4149358,4150739,4152207,4153655,4155316,4156906,4158407,4160010,4161442,4163078,4164965,4166397,4167891,4169181,4170297,4171514,4172815,4174194,4175322,4176431,4177635,4178732,4179858,4181087,4182326,4183635,4184769,4185589,4186449,4187122,4188991,4190508,4191914,4193378,4194765,4196058,4197432,4198628,4199812,4201162,4202496,4203753,4204893,4205809,4206706,4207364,4208236,4210111,4211615,4213127,4214613,4216035,4217371,4218704,4219899,4221098,4222435,4223744,4224953,4225892,4226714,4227433,4228103,4229901,4231382,4232876,4234302,4235800,4237129,4238403,4239808,4240977,4242273,4243656,4244974,4246176,4247259,4248206,4249084,4249740,4250668,4252554,4254005,4255497,4256913,4258373,4259891,4261381,4262800,4264019,4265009,4265858,4266610,4267451,4268325,4269177,4270779,4272321,4273818,4275236,4276698,4278021,4279234,4280613,4281775,4283074,4284444,4285738,4286924,4287936,4288893,4289706,4290356,4291838,4293621,4295095,4296472,4297650,4298864,4300313,4301750,4303124,4304073,4305066,4306414,4308150,4309716,4311287,4312679,4313954,4315074,4316589,4318018,4319279,4320320,4321586,4322857,4324192,4325212,4326259,4328039,4329755,4331570,4333399,4335106,4336751,4338082,4339897,4341818,4343656,4345332,4347227,4349115,4350507,4351706,4353004,4354368,4355782,4357178,4359114,4360522,4361870,4363186,4364535,4366005,4367470,4368967,4369873,4370803,4371867,4373715,4374778,4375603,4376498,4378138,4379559,4380875,4382528,4384185,4385689,4387403,4389137,4390965,4392178,4393678,4395404,4396925,4398504,4400359,4402195,4403941,4405141,4406699,4408412,4409958,4411685,4413591,4415477,4417027,4418289,4419925,4421623,4423192,4424990,4426900,4428820,4430225,4431570,4433234,4434956,4436500,4438210,4440111,4442030,4443469,4444851,4446452,4448184,4449694,4451359,4453216,4455142,4456539,4457880,4459543,4461180,4462685,4464420,4466212,4468014,4469203,4470714,4472446,4473969,4475564,4477328,4479099,4480672,4481930,4483548,4485230,4486745,4488431,4490213,4492122,4493399,4494797,4496489,4498032,4499605,4501400,4503239,4504849,4506465,4507998,4509637,4511232,4512724,4514392,4516026,4517588,4519081,4520683,4522130,4523725,4525349,4526851,4528422,4529849,4531366,4532878,4534203,4535781,4537250,4538467,4539578,4540720,4542061,4543393,4544523,4545803,4547458,4549032,4550368,4551664,4553010,4554400,4555876,4557070,4558485,4559569,4560944,4562831,4562940,4562989,4563034,4563079,4563124,4563202,4563582,4564236,4564988,4565814,4566734,4567727,4568693,4569752,4570677,4571796,4572928,4574200,4575551,4576748,4578021,4579368,4580535,4581738,4582896,4583872,4585100,4586156,4587344,4588511,4589531,4590472,4591425,4592252,4592891,4593604,4594296,4594701,4594746,4594791,4594833,4594882,4594927,4595969,4597028,4597774,4598543,4599625,4600847,4602169,4603191,4604177,4605207,4606224,4606997,4607680,4608457,4609436,4610408,4611493,4612678,4613797,4614968,4616228,4617502,4618693,4620059,4621407,4622727,4624100,4625413,4626750,4627974,4628900,4629729,4630330,4630868,4631384,4632148,4633023,4633802,4634617,4635498,4636488,4637501,4638378,4639342,4640526,4642314,4643501,4644786,4646168,4647581,4649056,4650530,4652153,4653865,4655650,4657471,4659283,4661084,4662794,4664561,4666215,4667851,4669619,4671260,4672926,4674547,4676207,4677806,4679254,4680867,4682567,4684191,4685740,4687309,4688899,4690468,4691899,4693131,4694186,4695500,4697125,4698645,4700246,4701813,4703298,4704641,4706054,4707512,4709419,4710340,4711053,4712084,4713213,4714339,4715615,4716995,4718328,4719569,4721103,4722563,4723868,4724693,4725565,4726687,4727977,4729395,4730647,4731886,4733118,4734235,4735424,4736581,4737827,4739159,4740347,4741618,4743055,4744346,4745604,4746959,4748340,4749666,4750972,4752235,4753481,4754675,4755714,4756706,4757812,4758951,4760220,4761365,4762911,4763837,4765283,4766831,4767735,4769170,4770232,4771856,4773176,4774997,4776582,4777312,4778203,4779591,4781647,4782449,4783332,4784076,4785135,4786184,4787231,4788205,4789224,4790376,4791679,4793158,4794824,4796456,4798141,4799694,4801008,4802441,4803954,4805586,4807195,4808864,4810506,4812151,4813753,4815333,4816811,4818352,4819879,4821699,4823529,4825402,4827233,4828982,4830768,4832301,4833719,4835081,4836454,4837795,4839088,4840222,4840875,4841749,4842911,4844033,4845099,4846144,4847232,4848214,4848889,4850402,4851333,4852342,4853373,4854352,4855302,4856345,4857345,4858327,4859343,4860295,4861324,4862330,4863337,4864293,4865290,4866268,4867266,4868221,4869228,4870234,4871256,4872265,4873203,4874215,4875238,4876254,4877202,4878218,4879229,4880228,4881194,4882201,4883218,4884206,4885187,4886161,4887310,4888261,4889117,4890220,4891103,4892213,4893404,4894824,4895502,4896168,4896761,4897527,4898175,4898832,4899463,4900156,4901243,4902310,4903310,4904152,4904959,4905783,4906592,4907404,4908247,4909188,4910042,4910944,4911896,4912692,4913569,4914414,4915401,4916342,4917313,4918331,4919283,4920109,4920703,4921373,4922082,4922765,4923474,4924420,4925291,4926108,4927039,4927845,4928619,4929470,4930314,4931303,4932064,4933594,4935402,4937221,4939029,4941077,4943125,4945173,4947221,4949269,4951317,4953365,4955413,4957461,4959509,4961557,4963605,4965653,4967701,4969749,4971797,4973845,4975893,4977941,4979989,4982037,4984094,4985994,4987837,4989541,4991292,4993016,4994736,4996484,4998406,5000303,5002359,5002867,5002915,5002964,5003009,5003053,5003098,5003146,5003195,5003240,5003284,5003329,5003377,5003527,5004304,5005334,5006771,5008166,5009714,5011283,5012711,5014223,5015762,5017352,5019026,5020720,5022476,5024223,5025900,5027617,5029242,5030909,5032533,5034154,5035724,5037333,5038774,5040064,5041362,5042503,5043663,5044571,5045043,5045378,5045597,5045737,5045782,5045832,5045879,5045924,5045968,5046013,5046063,5046110,5046155,5046199,5046244,5046294,5047607,5049655,5051703,5053751,5055799,5057847,5059895,5061943,5063991,5066039,5068087,5070135,5072183,5074231,5076279,5078327,5080375,5082423,5084471,5086519,5088567,5090615,5092663,5094711,5096759,5098807,5100855,5102912,5104960,5106346,5107571,5108761,5109978,5111211,5112313,5113468,5114603,5115808,5117022,5118291,5119604,5120799,5122120,5123379,5124835,5126547,5128117,5129657,5131036,5132418,5133911,5135501,5136941,5138315,5139916,5141523,5143083,5144577,5146063,5147616,5149062,5150433,5151839,5153305,5154763,5156257,5157532,5158748,5160068,5161362,5162632,5163791,5164860,5165718,5166769,5167806,5168917,5169898,5170720,5171430,5172169,5172991,5173673,5174283,5174914,5175485,5177324,5179010,5180165,5181270,5182434,5183451,5184627,5185952,5187276,5188448,5189674,5190837,5192085,5193427,5194684,5196268,5197789,5199561,5201337,5203013,5204772,5206544,5208139,5209620,5211184,5212687,5214050,5215627,5217250,5218736,5220191,5221824,5223378,5225022,5226519,5228217,5229753,5231127,5232420,5233772,5235009,5236110,5237253,5238307,5239300,5240351,5241273,5242254,5243297,5244328,5245378,5246282,5247135,5247790,5248370,5248814,5249252,5249619,5250954,5252362,5253062,5253771,5254420,5255090,5255761,5256441,5257148,5257794,5258464,5259107,5259796,5260502,5261696,5263275,5264781,5266339,5267911,5269576,5271189,5272740,5274258,5275702,5276788,5277627,5278878,5280338,5281786,5283339,5284858,5286299,5287808,5289233,5290560,5291671,5292657,5293827,5295246,5296764,5298239,5299706,5301216,5302606,5303842,5304780,5305465,5306122,5306801,5307490,5308158,5308845,5309540,5310241,5310934,5311590,5312246,5312952,5314098,5315891,5316569,5317215,5317871,5318566,5319254,5319935,5320575,5321226,5321942,5322626,5323301,5323951,5324767,5326170,5327804,5329402,5331036,5332742,5334438,5336023,5337531,5338958,5340326,5341667,5343047,5344311,5345600,5346936,5348265,5349573,5350838,5352117,5353263,5354928,5356611,5358227,5359833,5361511,5363108,5364643,5366024,5367080,5368079,5368850,5369614,5370261,5370934,5371611,5372275,5372971,5373634,5374280,5374934,5375616,5376311,5376944,5377732,5379471,5380957,5382741,5383962,5385707,5387537,5388731,5390496,5392281,5394337,5394798,5395213,5395730,5396366,5397023,5397789,5398673,5399533,5400533,5401641,5402696,5403842,5405231,5406751,5408308,5409880,5411459,5412999,5414477,5415946,5417383,5418836,5420267,5421702,5423260,5424719,5426173,5427546,5428915,5430202,5431616,5433028,5434482,5436096,5437685,5439210,5440622,5441867,5442962,5444189,5445474,5446690,5447958,5449158,5450337,5451447,5452429,5453410,5454446,5455506,5456493,5457456,5458308,5459137,5459849,5460426,5460762,5462385,5463253,5463599,5464117,5464685,5465319,5466031,5466878,5467751,5468662,5469666,5470687,5471840,5473083,5474448,5475990,5477632,5479311,5481039,5482690,5484312,5485786,5487214,5488567,5489865,5491185,5492596,5494031,5495482,5496926,5498368,5499851,5501251,5502707,5504153,5505588,5507021,5508592,5510283,5511903,5513399,5514685,5515963,5517177,5518419,5519611,5520774,5522018,5523223,5524268,5525357,5526372,5527294,5528179,5528984,5529635,5530271,5530766,5532017,5533360,5533733,5534195,5534844,5535530,5536250,5537047,5537884,5538822,5539920,5540977,5542038,5543480,5545023,5546494,5547970,5549533,5551027,5552475,5553709,5555013,5556354,5557715,5559048,5560456,5561876,5563323,5564657,5565949,5567320,5568711,5570089,5571393,5572704,5574013,5575315,5576717,5578227,5579759,5581367,5582774,5584237,5585624,5586961,5588159,5589400,5590626,5591770,5592911,5593972,5595011,5595986,5596882,5597794,5598536,5599218,5599691,5600453,5602083,5603742,5605364,5607108,5608566,5610321,5612146,5613470,5615084,5616561,5618031,5619659,5621222,5622270,5623693,5625302,5626929,5628742,5630053,5631693,5633235,5634762,5636757,5638805,5640764,5642812,5644809,5646772,5648731,5650779,5652804,5654811,5656854,5658652,5659749,5661501,5663333,5665022,5666397,5668094,5670069,5672117,5674165,5676213,5678261,5680309,5682357,5684405,5686453,5688501,5690549,5692597,5694645,5696693,5698741,5700789,5702837,5704885,5706933,5708981,5711029,5713077,5715125,5717173,5719221,5721262,5722471,5723425,5724209,5724999,5725895,5726886,5727931,5728757,5729547,5730561,5731376,5732324,5733118,5733984,5734827,5735653,5736676,5737521,5738319,5739203,5740035,5741364,5742366,5743286,5744183,5745173,5746286,5747372,5748441,5749484,5750190,5750837,5751926,5753174,5754486,5755736,5757243,5757755,5758342,5758978,5759591,5760168,5760713,5761775,5762778,5763813,5764626,5765144,5765699,5766542,5767062,5767799,5768741,5769574,5770272,5770862,5771613,5772281,5772934,5774114,5774891,5775975,5776617,5777368,5777891,5778444,5778979,5779687,5780458,5781269,5782110,5782737,5783403,5784328,5785439,5786342,5787295,5788131,5789083,5790030,5790580,5791585,5792238,5793139,5794157,5795051,5795819,5796611,5797594,5797864,5798471,5799236,5800279,5800686,5801238,5802026,5802752,5803395,5803963,5804615,5805280,5806223,5806975,5807762,5808403,5809057,5809669,5810527,5812419,5814095,5815675,5817139,5818556,5819949,5821405,5822951,5824929,5826680,5828460,5830038,5831477,5832932,5834331,5835815,5837355,5839403,5841033,5842631,5844348,5846011,5847626,5849239,5850983,5852723,5854532,5856288,5858009,5859748,5861189,5862398,5863629,5864901,5866518,5868128,5869779,5871547,5873319,5875047,5876754,5878446,5880214,5881956,5883645,5885343,5887034,5888806,5890552,5892309,5894030,5895778,5897517,5899286,5900987,5902769,5904467,5906064,5907668,5909214,5910538,5911869,5913168,5914648,5916156,5917708,5919352,5920981,5922570,5924274,5925777,5927287,5928937,5930555,5932139,5934110,5935737,5937192,5938675,5940216,5941726,5943185,5944721,5946230,5947662,5949161,5950755,5952389,5953804,5955359,5957047,5958716,5960408,5962207,5963955,5965608,5967336,5968921,5970503,5972058,5973593,5975190,5976810,5978403,5980010,5981632,5983247,5984840,5986384,5987945,5989548,5991213,5992790,5994439,5995987,5997563,5999153,6000802,6002412,6003993,6005375,6006517,6007978,6009486,6010938,6012290,6013758,6015268,6016850,6018464,6019981,6021386,6022865,6024684,6026402,6027617,6028826,6030056,6031292,6032539,6033797,6035042,6036309,6037575,6038873,6040156,6041688,6042988,6044280,6045570,6046877,6048188,6049503,6050807,6052032,6053296,6054569,6055835,6057076,6058366,6059580,6060820,6062090,6063359,6064587,6065796,6066976,6068199,6069428,6070643,6071873,6073101,6074356,6075600,6076856,6078091,6079358,6080658,6081957,6083490,6084804,6086069,6087363,6088681,6089998,6091295,6092580,6093812,6095108,6096383,6097631,6099080,6101129,6102844,6104613,6106409,6108200,6109981,6111770,6113553,6115309,6117077,6118863,6120586,6122332,6124020,6125750,6127397,6129012,6130663,6132244,6133873,6135508,6137160,6138796,6140449,6142160,6143862,6145582,6147359,6149082,6150879,6152602,6154383,6156132,6157880,6159632,6161242,6162903,6164613,6166250,6167955,6169560,6171214,6172915,6174614,6176299,6177981,6179755,6181477,6183248,6185005,6186746,6188486,6190226,6191970,6193713,6195478,6197220,6198990,6199740,6201175,6203097,6205145,6207193,6209241,6211289,6213337,6215385,6217433,6219481,6221529,6223577,6225625,6227673,6229721,6231769,6233826,6235874,6237922,6239970,6242018,6244066,6246114,6248162,6250210,6252258,6254306,6256354,6258402,6260450,6262498,6264546,6266594,6268642,6270690,6272738,6274786,6276834,6278882,6280930,6282978,6285026,6287074,6289122,6291170,6293218,6295266,6297314,6299362,6301410,6303458,6305506,6307554,6309602,6311650,6313698,6315746,6317794,6319842,6321890,6323938,6325986,6328034,6330082,6332130,6334178,6336226,6338274,6340322,6342370,6344418,6346466,6348514,6350562,6352610,6354658,6356706,6358754,6360802,6362850,6364898,6366946,6368994,6371042,6373090,6375138,6377186,6379234,6381282,6383330,6385378,6387426,6389474,6391522,6393570,6395618,6397666,6399714,6401762,6403810,6405858,6407906,6409954,6412002,6414050,6416098,6418146,6420194,6422242,6424290,6426338,6428386,6430434,6432482,6434530,6436578,6438626,6440674,6442722,6444770,6446818,6448866,6450914,6452962,6455010,6457058,6459106,6461154,6463202,6465250,6467298,6469346,6471394,6473442,6475490,6477538,6479586,6481634,6483682,6485730,6487778,6489826,6491874,6493922,6495970,6498018,6500066,6502114,6504162,6506210,6508258,6510306,6512354,6514402,6516450,6518498,6520546,6522594,6524642,6526690,6528738,6530786,6532834,6534882,6536930,6538978,6541026,6543074,6545122,6547170,6549218,6551266,6553314,6555362,6557410,6559458,6561506,6563554,6565602,6567650,6569698,6571746,6573794,6575842,6577890,6579938,6581986,6584034,6586082,6588130,6590178,6592226,6594274,6596322,6598370,6600418,6602466,6604514,6606562,6608610,6610658,6612706,6614754,6616802,6618850,6620898,6622946,6624994,6627042,6629090,6631138,6633186,6635234,6637282,6639330,6641378,6643426,6645474,6647522,6649570,6651618,6653666,6655714,6657762,6659810,6661858,6663906,6665954,6668002,6670050,6672098,6674146,6676194,6678242,6680290,6682347,6684395,6686443,6688491,6690539,6692587,6694635,6696683,6698731,6700779,6702827,6704875,6706923,6708971,6711019,6713067,6715115,6717163,6719211,6721259,6723307,6725355,6727403,6729451,6731499,6733547,6735595,6737643,6739691,6741739,6743787,6745835,6747883,6749931,6751979,6754027,6756075,6758123,6760171,6762219,6764267,6766315,6768363,6770411,6772459,6774507,6776555,6778603,6780651,6782699,6784747,6786795,6788843,6790891,6792939,6794987,6797035,6799083,6801131,6803179,6805227,6807275,6809323,6811371,6813419,6815467,6817515,6819563,6821611,6823659,6825707,6827755,6829803,6831851,6833899,6835947,6837995,6840043,6842091,6844139,6846187,6848235,6850283,6852331,6854379,6856427,6858475,6860523,6862571,6864619,6866667,6868715,6870763,6872811,6874859,6876907,6878955,6881003,6883051,6885099,6887147,6889195,6891243,6893291,6895339,6897387,6899435,6901483,6903531,6905579,6907627,6909675,6911723,6913771,6915819,6917867,6919915,6921963,6924011,6926059,6928107,6930155,6932203,6934251,6936299,6938347,6940395,6942443,6944491,6946539,6948587,6950635,6952683,6954731,6956779,6958827,6960875,6962923,6964971,6967019,6969067,6971115,6973163,6975211,6977259,6979307,6981355,6983403,6985451,6987499,6989547,6991595,6993643,6995691,6997739,6999787,7001835,7003883,7005931,7007979,7010027,7012075,7014123,7016171,7018219,7020267,7022315,7024363,7026411,7028459,7030507,7032555,7034603,7036651,7038699,7040747,7042795,7044843,7046891,7048939,7050987,7053035,7055083,7057131,7059179,7061227,7063275,7065323,7067371,7069419,7071467,7073515,7075563,7077611,7079659,7081707,7083755,7085803,7087851,7089899,7091947,7093995,7096043,7098091,7100139,7102187,7104235,7106283,7108331,7110379,7112427,7114475,7116523,7118571,7120619,7122667,7124715,7126763,7128811,7130859,7132907,7134955,7137003,7137863,7138599,7139158,7139736,7140338,7140948,7141571,7142243,7142865,7143400,7143989,7144741,7146089,7146546,7147111,7147763,7148349,7148778,7149144,7149562,7150804,7152456,7153877,7154925,7155955,7157210,7158344,7159404,7161054,7162302,7163466,7164565,7166285,7167763,7168665,7169568,7170741,7171093,7171535,7171996,7172485,7173016,7173451,7173895,7174213,7174563,7174838,7175136,7175441,7176371,7178383,7179941,7181770,7183297,7185026,7186377,7187491,7188663,7189621,7190848,7192010,7193021,7194165,7195037,7196178,7197310,7197847,7199036,7200257,7201348,7202420,7203654,7204482,7205676,7206608,7207555,7208780,7209724,7210889,7211542,7212554,7213490,7214451,7215728,7216548,7217692,7218625,7219748,7220822,7221935,7223258,7224224,7225312,7226429,7227335,7228411,7229121,7229957,7230269,7230580,7231019,7232030,7232941,7233867,7234744,7236381,7237300,7239142,7240074,7242108,7243797,7245316,7246795,7248390,7250000,7251583,7253198,7254834,7256508,7258124,7259768,7261436,7263104,7264745,7266379,7268018,7269622,7271239,7272905,7274636,7276345,7278034,7279782,7281547,7283301,7284981,7286693,7288439,7290242,7292025,7293852,7295742,7297633,7299520,7301404,7303300,7305163,7306938,7308737,7310558,7312373,7314215,7315993,7317818,7319624,7321408,7323075,7324582,7326186,7327815,7329418,7330952,7332381,7333942,7335546,7337200,7338838,7340703,7342520,7343942,7345372,7346862,7348417,7349873,7351389,7352931,7354344,7355822,7357352,7358975,7360420,7361896,7363563,7365233,7366864,7368606,7370402,7372057,7373776,7375425,7377008,7378567,7380061,7381641,7383276,7384828,7386439,7388056,7389694,7391279,7392812,7394360,7395988,7397618,7399226,7400855,7402449,7403993,7405548,7407161,7408792,7410399,7411855,7412995,7414409,7415904,7417386,7418749,7420190,7421687,7423259,7424858,7426441,7427865,7429279,7430901,7432759,7433314,7433939,7434518,7435123,7435828,7436548,7437206,7438107,7439065,7440099,7441197,7442135,7443357,7444617,7445933,7447224,7448517,7449871,7451235,7452610,7454079,7455526,7456909,7458303,7459846,7461361,7462789,7464197,7465612,7466827,7467811,7468825,7469722,7470980,7472282,7473565,7474740,7475822,7476823,7477786,7478834,7479830,7480604,7481579,7482537,7483451,7484155,7485035,7485924,7486664,7487012,7487800,7488474,7489095,7489797,7490357,7490923,7492941,7493797,7494541,7495357,7496240,7497204,7498298,7499370,7500487,7501590,7502730,7503784,7504670,7505499,7506233,7507387,7508711,7510092,7511535,7513003,7514493,7515981,7517463,7518739,7520310,7521875,7523474,7524976,7526524,7528174,7529887,7531576,7533188,7534680,7536247,7537770,7539338,7540835,7542310,7543690,7544963,7546262,7547457,7548468,7549435,7550517,7551554,7552686,7553790,7554964,7556193,7557405,7558443,7559379,7560163,7560979,7561783,7562536,7563243,7564651,7566368,7568416,7570464,7572512,7574560,7576608,7578656,7580704,7582752,7584800,7586848,7588896,7590944,7592992,7595040,7597088,7599136,7601184,7603232,7605280,7607328,7609376,7611424,7613472,7615520,7617568,7619616,7621664,7623712,7625760,7627808,7629856,7631904,7633952,7636000,7638048,7640096,7642144,7644192,7646240,7648288,7650336,7652384,7654432,7656480,7658528,7660576,7662624,7664672,7666720,7668768,7670816,7672864,7674912,7676960,7679008,7681056,7683104,7685152,7687200,7689248,7691296,7693344,7695392,7697448,7699496,7701521,7703569,7705617,7707665,7709713,7711761,7713809,7715857,7717905,7719953,7722001,7724049,7726097,7728145,7730193,7732241,7734289,7736337,7738385,7740433,7742481,7744529,7746577,7748625,7750673,7752721,7754769,7756817,7758865,7760913,7762961,7765009,7767057,7769105,7771153,7773201,7775249,7777297,7779345,7781393,7783441,7785489,7787537,7789585,7791633,7793248,7794577,7795852,7796990,7797844,7798172,7798730,7799825,7800803,7801879,7802960,7804010,7804677,7805682,7807211,7808792,7810093,7811532,7812858,7814219,7815587,7816622,7817818,7819010,7819977,7821664,7822937,7824287,7825606,7826811,7828022,7829219,7830350,7831602,7833007,7834439,7835879,7837202,7838501,7839753,7841016,7842494,7844014,7845655,7847241,7848839,7850407,7851970,7853516,7855100,7856654,7858172,7859659,7861157,7862576,7863966,7865307,7866753,7868801,7870849,7872897,7874945,7876993,7879047,7881103,7882998,7885046,7887094,7889142,7891190,7893238,7895286,7897334,7899382,7901430,7903478,7905526,7907574,7909622,7911670,7913718,7915766,7917814,7919862,7921910,7923958,7926006,7928054,7930102,7932150,7934205,7936253,7938301,7940318,7942315,7944225,7946273,7948321,7950369,7952417,7954465,7956513,7958561,7960609,7962657,7964705,7966753,7968801,7970849,7972897,7974945,7976993,7979041,7981089,7983137,7985185,7987233,7989281,7991329,7993377,7995425,7997473,7999521,8001569,8003617,8005665,8007713,8009761,8011809,8013857,8015905,8017953,8020001,8022049,8024097,8026145,8028193,8030241,8032289,8034337,8036385,8038433,8040481,8042529,8044577,8046625,8048673,8050721,8052769,8054817,8056865,8058913,8060961,8063009,8065057,8067105,8069153,8071201,8073249,8075297,8077345,8079393,8081441,8083489,8085537,8087585,8089633,8091681,8093729,8095777,8097825,8099873,8101921,8103969,8106017,8108065,8110113,8112161,8113727,8115048,8116489,8117880,8119242,8120609,8122049,8123509,8124997,8126660,8128343,8129894,8131333,8132777,8134082,8135599,8137236,8138956,8140714,8142368,8143999,8145517,8146963,8148512,8150145,8151789,8153462,8155097,8156706,8158253,8159707,8161285,8163211,8165260,8167308,8169281,8171329,8173354,8175386,8177434,8179446,8181461,8183509,8185503,8187551,8189572,8191595,8193643,8195699,8197745,8199793,8201849,8203869,8205888,8207728,8209776,8211825,8213816,8215369,8216930,8218515,8220133,8221693,8223295,8224205,8224424,8224638,8224847,8225073,8225286,8225670,8225889,8226103,8226345,8226565,8226785,8227917,8229868,8231146,8232402,8233797,8235069,8236147,8237376,8238511,8239773,8240949,8242156,8243435,8244543,8245843,8247843,8249591,8250367,8251623,8253671,8254976,8255602,8257180,8259228,8260184,8260907,8262879,8264534,8265261,8266399,8267357,8268279,8269201,8270123,8271057,8272003,8272950,8273545,8274505,8275296,8276038,8277014,8277988,8279095,8280001,8280969,8281862,8282683,8283678,8284706,8285729,8286763,8287836,8288844,8289682,8290899,8291860,8292962,8294245,8294933,8295712,8296150,8296537,8297537,8298578,8299595,8300515,8301032,8301366,8301702,8302038,8302452,8302815,8303323,8303843,8304730,8305958,8307086,8308036,8309283,8310660,8312208,8313748,8315048,8316443,8317435,8318669,8320214,8321562,8322824,8323989,8325210,8326641,8328075,8329596,8331118,8332211,8333246,8334442,8335728,8337162,8338565,8340118,8341638,8342710,8343919,8345010,8346303,8347793,8349214,8350788,8352232,8353336,8354478,8355599,8357027,8358403,8359902,8361421,8362741,8363824,8365002,8366150,8367592,8369045,8370564,8372062,8373070,8374327,8375497,8376862,8378161,8379533,8380431,8381068,8381675,8382293,8382962,8383620,8384305,8384938,8385576,8386541,8387500,8388341,8389073,8389734,8390680,8391675,8392483,8393127,8394046,8394908,8395815,8396328,8396968,8397727,8398331,8399080,8399929,8400635,8401452,8402118,8402937,8403426,8404109,8404762,8405189,8405932,8406544,8407223,8407975,8408545,8409380,8410003,8410443,8411025,8411770,8412486,8412994,8413476,8414149,8414584,8415020,8415507,8416062,8416704,8417510,8417930,8418401,8419269,8420179,8421277,8422340,8422910,8423431,8423916,8424666,8425379,8426297,8426957,8427591,8428213,8428848,8429873,8430934,8431981,8433071,8433550,8434123,8434950,8435705,8436341,8436946,8437625,8438447,8439150,8439585,8440124,8440907,8441606,8442516,8443298,8444409,8445019,8445877,8446670,8447497,8448402,8449283,8450117,8451012,8451894,8452765,8453608,8454451,8455392,8456129,8456928,8457798,8458615,8459453,8460276,8461310,8461991,8462916,8463904,8464882,8465844,8466818,8467784,8468735,8469681,8470641,8471617,8472583,8473532,8474497,8475455,8476394,8477222,8478396,8479189,8480002,8480509,8481317,8482253,8483096,8483914,8484732,8485549,8486268,8487097,8487951,8488844,8489525,8490341,8491052,8491821,8492603,8493295,8493915,8494836,8496074,8496788,8497518,8499176,8500919,8502725,8504542,8506558,8508447,8510495,8512543,8514599,8516304,8517677,8519422,8521185,8523233,8525275,8527149,8528964,8531012,8532887,8534654,8536701,8538749,8540797,8542724,8544489,8546526,8548408,8550173,8552222,8554226,8556025,8557906,8559128,8560278,8560816,8561502,8562080,8563959,8566015,8567973,8569468,8570863,8572054,8573215,8574606,8576632,8578392,8579623,8580912,8581991,8583198,8584801,8586295,8587668,8588635,8589118,8589261,8589830,8591878,8593926,8595974,8598022,8600070,8602118,8604166,8606214,8608271,8610319,8612367,8614422,8616479,8618466,8620379,8621793,8623850,8625898,8627946,8629994,8632051,8634099,8636147,8638191,8638641,8638917,8640940,8642980,8645028,8647076,8649029,8650393,8652314,8654319,8656349,8658254,8660272,8662320,8664368,8666416,8668464,8670485,8672368,8674416,8676393,8678380,8680428,8682437,8684494,8686542,8688578,8690628,8692681,8694697,8696459,8697921,8699666,8701569,8703617,8705665,8707713,8709761,8711809,8713857,8715905,8717953,8719054,8720037,8721230,8722519,8723758,8725016,8726679,8728152,8729127,8730610,8731773,8733104,8734154,8735260,8736329,8737328,8738482,8739870,8741587,8743472,8745382,8747279,8749182,8751101,8752631,8753785,8754760,8755878,8757067,8758671,8759839,8760867,8761934,8763027,8764225,8765279,8766292,8767600,8768791,8770139,8771184,8773150,8775196,8777236,8779251,8781279,8783250,8785298,8787272,8789320,8791377,8793352,8795392,8797424,8799472,8801500,8803474,8805527,8807584,8809552,8811595,8813626,8815674,8817702,8819687,8821735,8823783,8825754,8827802,8829859,8831831,8833875,8835923,8837907,8839941,8841945,8843994,8846029,8848077,8850051,8852085,8854070,8856118,8858154,8860125,8862173,8864173,8866221,8868266,8870314,8872371,8874342,8876390,8878438,8880486,8882534,8884582,8886638,8888694,8890742,8892761,8894809,8896857,8898905,8900962,8903010,8905058,8907106,8909154,8911202,8913250,8915151,8917199,8919247,8921295,8923343,8925391,8927439,8929487,8931535,8933431,8935479,8937527,8939575,8941623,8943671,8945719,8947767,8949658,8951706,8953754,8955802,8957850,8959898,8961946,8963843,8965891,8967939,8969987,8972035,8974083,8976131,8978150,8980138,8982186,8984234,8986282,8988330,8990378,8992426,8994474,8996367,8998415,9000472,9002520,9004568,9006616,9008664,9010712,9012760,9014808,9016417,9018243,9019890,9021550,9023382,9024574,9025578,9027514,9029523,9031575,9033623,9035657,9037639,9039667,9041512,9043514,9045532,9047567,9049532,9051554,9053607,9054908,9056346,9057736,9059302,9060634,9062561,9063681,9064856,9066000,9066859,9068423,9069931,9071425,9072912,9074322,9074956,9075651,9076334,9077064,9077784,9078463,9079117,9079693,9080198,9080784,9081327,9082727,9084569,9086246,9087946,9089637,9091322,9093250,9094968,9096716,9098486,9099648,9100653,9102457,9104113,9105639,9107118,9108609,9109396,9109901,9110168,9110598,9111019,9111477,9111756,9112372,9114154,9115850,9117533,9119228,9121069,9122851,9124653,9126153,9127648,9129260,9130741,9132219,9133733,9134233,9134751,9135246,9135731,9136126,9136482,9136980,9137482,9137932,9139098,9140912,9142589,9144259,9145931,9147693,9149519,9151316,9153049,9154246,9155902,9157564,9159038,9160512,9162000,9163488,9164285,9164913,9165571,9166142,9166687,9167223,9167815,9168339,9168947,9169451,9170015,9170426,9170808,9171872,9173814,9175512,9177185,9178874,9180552,9182242,9184113,9185963,9187682,9189373,9191140,9192229,9193675,9195342,9197046,9198536,9200013,9201496,9202598,9203181,9203765,9204379,9204945,9205532,9206146,9206728,9207264,9207848,9208380,9208926,9210409,9212249,9213930,9215599,9217260,9218950,9220711,9222585,9224289,9225979,9227673,9228780,9229883,9231635,9233287,9234807,9236297,9237786,9239088,9239658,9240222,9240792,9241283,9241692,9242264,9242835,9243430,9243901,9244261,9244763,9246073,9247860,9249551,9251233,9252905,9254563,9256454,9258168,9259900,9261585,9262995,9263878,9265743,9267405,9268920,9270406,9271531,9271924,9272444,9272844,9273262,9273770,9274273,9274743,9275480,9277302,9278945,9280637,9282299,9284154,9285840,9287536,9288981,9290360,9291932,9293426,9294903,9296358,9297848,9299335,9300678,9301351,9301979,9302478,9303033,9303746,9304235,9304885,9305542,9306108,9306710,9307430,9308144,9308794,9309540,9310223,9310827,9311462,9312089,9312702,9313182,9314161,9316151,9317868,9319536,9321246,9322924,9324582,9326276,9327991,9329698,9331382,9333292,9335106,9336862,9338578,9340262,9342091,9343919,9345699,9346553,9347274,9348250,9350064,9351901,9353567,9355378,9356940,9358416,9359884,9361352,9362814,9363611,9364050,9364512,9365031,9365617,9366236,9366833,9367441,9367920,9368391,9368990,9369489,9370042,9370621,9371588,9373578,9375270,9376964,9378652,9380341,9382034,9383712,9385648,9387365,9389127,9390920,9392703,9394059,9394738,9396087,9398053,9399727,9401433,9402967,9404447,9405941,9407405,9408848,9409476,9410123,9410772,9411384,9412005,9412553,9413038,9413626,9414307,9414933,9415374,9415883,9416340,9416855,9417325,9419239,9421026,9422712,9424399,9426092,9427792,9429502,9431265,9433187,9434872,9436587,9438378,9440177,9441659,9442428,9444008,9445883,9447653,9449202,9450690,9452187,9453668,9455043,9455604,9456160,9456795,9457415,9458055,9458619,9459128,9459363,9459605,9459788,9460023,9460264,9460497,9462121,9464066,9465790,9467478,9469184,9470899,9472629,9474333,9476363,9478148,9479891,9481677,9483461,9485204,9486202,9487871,9489489,9491055,9492510,9493522,9494212,9494818,9495521,9496165,9497857,9499544,9501315,9503033,9504314,9505887,9507342,9508817,9509965,9510541,9511097,9511655,9512171,9512624,9513093,9513525,9514034,9515241,9517030,9518688,9520368,9522020,9523892,9525575,9527258,9528098,9529797,9531483,9532933,9534408,9535873,9537154,9537724,9538324,9538948,9539482,9540046,9540623,9541209,9541550,9542140,9542707,9543276,9545143,9546820,9548497,9550179,9551862,9553553,9555409,9557088,9558850,9560581,9561289,9562905,9564721,9566270,9567741,9569201,9570387,9570947,9571517,9571859,9572349,9572875,9573337,9573639,9573937,9574365,9574932,9576814,9578497,9580189,9581860,9583492,9585204,9587059,9588792,9590450,9591867,9592728,9594581,9596253,9597714,9599159,9600591,9601449,9601713,9602081,9602397,9602810,9603260,9603735,9604054,9604353,9604780,9605182,9605605,9607384,9609017,9610649,9612296,9613966,9615621,9617456,9619197,9620827,9622369,9623599,9625295,9626830,9628312,9629814,9630341,9630793,9631291,9631865,9632450,9633090,9633697,9634296,9634781,9636226,9637955,9639633,9641283,9642965,9644832,9646507,9648192,9649929,9650739,9652566,9654192,9655658,9657137,9658617,9659981,9660510,9661007,9661566,9662118,9662713,9663316,9663929,9664340,9664792,9665357,9665802,9666296,9666820,9668746,9670453,9672125,9673808,9675483,9677161,9678836,9680801,9682476,9684115,9685857,9687481,9688272,9689863,9691616,9693347,9694760,9696245,9697736,9699202,9700689,9702188,9703685,9705170,9706650,9707520,9708182,9708924,9709580,9710143,9710760,9711318,9712064,9712581,9713209,9713689,9714347,9715040,9715636,9716277,9716911,9717519,9718131,9718490,9719183,9719841,9720522,9721033,9721470,9722013,9722572,9722822,9723096,9723898,9725919,9727955,9729695,9731423,9733138,9734824,9736533,9738206,9739900,9741589,9743259,9744925,9746629,9748323,9750363,9752265,9753933,9755665,9757325,9758992,9760698,9762402,9764075,9765762,9767244,9767995,9768841,9770374,9772276,9774107,9774587,9775353,9776245,9776639,9778322,9779976,9781644,9783137,9784646,9786151,9787658,9789163,9790668,9792158,9793634,9795128,9796602,9797558,9798246,9799046,9799697,9800370,9801115,9801784,9802502,9803253,9803908,9804506,9805188,9805880,9806456,9807147,9807787,9808583,9809247,9809890,9810471,9810944,9811472,9811992,9812316,9812593,9812957,9813459,9813977,9814409,9814753,9814989,9815136,9816427,9818484,9820425,9822207,9823902,9825593,9827300,9828970,9830656,9832347,9834064,9835711,9837391,9839055,9840725,9842420,9844122,9846030,9848078,9849868,9851610,9853324,9855050,9856774,9858421,9860101,9861746,9863396,9865117,9866850,9868172,9869049,9870124,9871956,9873832,9875477,9877270,9879040,9880626,9882114,9883588,9885071,9886549,9887050,9887576,9888117,9888668,9889142,9889689,9890115,9890589,9891005,9891529,9891634,9892234,9892815,9893977,9895889,9897551,9899242,9900915,9902601,9904302,9906195,9907876,9909603,9911293,9912998,9914184,9915427,9917182,9918912,9920345,9921794,9923252,9924732,9926236,9927735,9929215,9930682,9932062,9932653,9933247,9933878,9934481,9935018,9935628,9936284,9936955,9937672,9938267,9938756,9939485,9940113,9940785,9941370,9942095,9942660,9943146,9943756,9944379,9944956,9945370,9945876,9946450,9947865,9949892,9951706,9953400,9955067,9956747,9958445,9960144,9961845,9963533,9965192,9966892,9968710,9970733,9972431,9974095,9975775,9977467,9979187,9980908,9982658,9984213,9985069,9986257,9988056,9989699,9991212,9992859,9994502,9996020,9997493,9998967,10000449,10001937,10003430,10004023,10004561,10005037,10005608,10006314,10006907,10007598,10008170,10008871,10009552,10010111,10010577,10011177,10011898,10012562,10012972,10013383,10015000,10016941,10018614,10020277,10021931,10023607,10025320,10027009,10028681,10030622,10032400,10034090,10035807,10037626,10039378,10041120,10042162,10043734,10045466,10047291,10048862,10050344,10051846,10053323,10054835,10056321,10057807,10059292,10060786,10062291,10063800,10065306,10066803,10067503,10068148,10068838,10069385,10070053,10070659,10071145,10071774,10072425,10073060,10073660,10074248,10074849,10075443,10076014,10076598,10077188,10077681,10078205,10078808,10079407,10079794,10080412,10081021,10081635,10082199,10082739,10083231,10083858,10084430,10084972,10085534,10086110,10086600,10087183,10087575,10088058,10088608,10089066,10089691,10091103,10093142,10095182,10097143,10098849,10100566,10102284,10103993,10105713,10107403,10109115,10110820,10112542,10114256,10115980,10117678,10119395,10121089,10122805,10124524,10126227,10128189,10130237,10132055,10133726,10135459,10137167,10138866,10140562,10142292,10144023,10145684,10147428,10149149,10150928,10152400,10153300,10154200,10155037,10156059,10157772,10159415,10161032,10162648,10164219,10165782,10167138,10168255,10168908,10170635,10172414,10174190,10175830,10177311,10178793,10180272,10181757,10182986,10183662,10184332,10184929,10185460,10185908,10186275,10186670,10187153,10187393,10187864,10188397,10188760,10189656,10191625,10193300,10194986,10196663,10198353,10200020,10201717,10203672,10205409,10207158,10208877,10210589,10211506,10213230,10215000,10216505,10217966,10219448,10220281,10220693,10221240,10221661,10222033,10222312,10222751,10223057,10223953,10225777,10227448,10229124,10230791,10232676,10234399,10236114,10237619,10239099,10240715,10242176,10243653,10245114,10246582,10247534,10248088,10248676,10249276,10249903,10250436,10250981,10251587,10252221,10252546,10253033,10253462,10253967,10254287,10255841,10257663,10259313,10260971,10262641,10264289,10265980,10267685,10269552,10271245,10272944,10274642,10275852,10276312,10277454,10278837,10280227,10281838,10283352,10284836,10286144,10286527,10286715,10287155,10287498,10287852,10288170,10288406,10288889,10290705,10292351,10293995,10295647,10297444,10299104,10300621,10301631,10303172,10304656,10306103,10307515,10308086,10308669,10309050,10309544,10310069,10310503,10311457,10313230,10314890,10316550,10318380,10320113,10321205,10322841,10324339,10325832,10327298,10328778,10330233,10331706,10333190,10333987,10334581,10335235,10335905,10336497,10336974,10337485,10338058,10338681,10338997,10339575,10340073,10340644,10341121,10341602,10341976,10342328,10342821,10343096,10344153,10346075,10347877,10349533,10351221,10352912,10354605,10356290,10357947,10359606,10361266,10363316,10365031,10366759,10368510,10370237,10371906,10373578,10374591,10375405,10376965,10378532,10380041,10381707,10383374,10384868,10386352,10387829,10389313,10389967,10390419,10390809,10391355,10391801,10392223,10392546,10393047,10393534,10394007,10394418,10394800,10395136,10395778,10397698,10399362,10401023,10402682,10404345,10405999,10407667,10409633,10411267,10412953,10414639,10416180,10416801,10417951,10419522,10421202,10422724,10424207,10425418,10425938,10426484,10426784,10426959,10427550,10427859,10428613,10430357,10432063,10433758,10435612,10437412,10439161,10440234,10441896,10443943,10445993,10448049,10450101,10452151,10453767,10455359,10456886,10458244,10459181,10459996,10460846,10461626,10462482,10463326,10464862,10466850,10468872,10470778,10472730,10474274,10475386,10476746,10477977,10479436,10480648,10481557,10482888,10483665,10484533,10485636,10486815,10487801,10488909,10489890,10491004,10492030,10493011,10493944,10495003,10496132,10497240,10498265,10499076,10500064,10501015,10501920,10502849,10503758,10504626,10505621,10506540,10507501,10508535,10509542,10510482,10511560,10512589,10513536,10514442,10515292,10516211,10517222,10518094,10519094,10520060,10520983,10521937,10522792,10523805,10524864,10525850,10526875,10527735,10528742,10529781,10530843,10531878,10532882,10533862,10534974,10536058,10537177,10538354,10539449,10540565,10541653,10542794,10543886,10545002,10546114,10547265,10548309,10549400,10550379,10550988,10552089,10553275,10554340,10555302,10556396,10557586,10558688,10559713,10560820,10561855,10562862,10563926,10564975,10566225,10567374,10568436,10569446,10570567,10571719,10572794,10574013,10575143,10576340,10577461,10578509,10579653,10580805,10581947,10583115,10584191,10585392,10586623,10587736,10588808,10590012,10591129,10592571,10594619,10596021,10597100,10598180,10599140,10600081,10601061,10602172,10603168,10604184,10605090,10606300,10607445,10608256,10609296,10610288,10611292,10612301,10613012,10613832,10614578,10615423,10616478,10617898,10619361,10620842,10622339,10624308,10626356,10628411,10630369,10631770,10633807,10635857,10637905,10639953,10641991,10643790,10645845,10647515,10649437,10651490,10653538,10655586,10657634,10659682,10661730,10663778,10665826,10667857,10669892,10671908,10673945,10675985,10678018,10679966,10681809,10683516,10685461,10687509,10689557,10691605,10693653,10695701,10697749,10699797,10701852,10703900,10705948,10707996,10710016,10711964,10713794,10715597,10717028,10718675,10720611,10722504,10724305,10726203,10728254,10730308,10732365,10734413,10736461,10738509,10740557,10742605,10744653,10746701,10748749,10750797,10752845,10754893,10756902,10758443,10759464,10761489,10763537,10765585,10767633,10769681,10771729,10773777,10775825,10777873,10779921,10781969,10784017,10786065,10788113,10790161,10792209,10794257,10796305,10798353,10800394,10802118,10804037,10806085,10808133,10810184,10812074,10813680,10815070,10816276,10817285,10818044,10818557,10820387,10822435,10824483,10826531,10828579,10830627,10832675,10834732,10836789,10838841,10840726,10842189,10842960,10844955,10847012,10849029,10850995,10852845,10854560,10856083,10857317,10858204,10858812,10859094,10859279,10861162,10863217,10865265,10867317,10869365,10871413,10873469,10875526,10877583,10879631,10881679,10883727,10885784,10887781,10889605,10891238,10892737,10894016,10896035,10898092,10900149,10902197,10904253,10906301,10908349,10910406,10912454,10914508,10916565,10918608,10920652,10922585,10924303,10925795,10926852,10927956,10929754,10931637,10933643,10935691,10937747,10939803,10941758,10943461,10944799,10945676,10947733,10949784,10951832,10953822,10955736,10957784,10959840,10961673,10962353,10962410,10962624,10962658,10963278,10965326,10967374,10969422,10971470,10973526,10975583,10977637,10979679,10981591,10983626,10985674,10987722,10989770,10991778,10993826,10995874,10997922,10999970,11002018,11004066,11006121,11008178,11010226,11012194,11013718,11015701,11017692,11019243,11020858,11022906,11024920,11026525,11027863,11029350,11031207,11033237,11035292,11037347,11039395,11041444,11043500,11045388,11046860,11047307,11048213,11050261,11052309,11054365,11056413,11058464,11060520,11062568,11064625,11066677,11068731,11070763,11072622,11074468,11076417,11077993,11079962,11082010,11084058,11086113,11088161,11090209,11092257,11094314,11096362,11098282,11100339,11102387,11104435,11106483,11108531,11110579,11112636,11114684,11116333,11118328,11120287,11122215,11123238,11125291,11127339,11129367,11131256,11132927,11134975,11137023,11139071,11141119,11143170,11145218,11147266,11149314,11151370,11153221,11154586,11156181,11158102,11160080,11162102,11164141,11166191,11168239,11170264,11172319,11174370,11176416,11178453,11180465,11182480,11184475,11186455,11188440,11190490,11192539,11194592,11196627,11198674,11200688,11202727,11204774,11206819,11208864,11210910,11212932,11214835,11216651,11218255,11219670,11220967,11222120,11223340,11224525,11225598,11226639,11227777,11228738,11229760,11230617,11231529,11232376,11233211,11233874,11234458,11234924,11235099,11235284,11235424,11235484,11235547,11237305,11239332,11241383,11243431,11245471,11247394,11249143,11250800,11252045,11252848,11254896,11256944,11258992,11261040,11262943,11264991,11267039,11269087,11271052,11273100,11275148,11277196,11279242,11281258,11283306,11285354,11287407,11289460,11291504,11293552,11295600,11297643,11299668,11301721,11303764,11305746,11307645,11309483,11311189,11312943,11314590,11316462,11318519,11320576,11322609,11324657,11326705,11328757,11330632,11332537,11334591,11336647,11338695,11340752,11342800,11344855,11346903,11348816,11350873,11352921,11354885,11356474,11358295,11360343,11362391,11364007,11365778,11367826,11369881,11371929,11373977,11376025,11378073,11380129,11382183,11384217,11386169,11387892,11389402,11390855,11392139,11393363,11394794,11396851,11398899,11400956,11403008,11405055,11406967,11408704,11409825,11410086,11411074,11412523,11414206,11416074,11418035,11419925,11421868,11423864,11425812,11427583,11429154,11430493,11431613,11432257,11432621,11434115,11436146,11438194,11439735,11440745,11442378,11444426,11446474,11448522,11450570,11452618,11454666,11456714,11458762,11460693,11462739,11464764,11466623,11468169,11469221,11470623,11472675,11474563,11476011,11477641,11479689,11481737,11483789,11485837,11487885,11489934,11491990,11494046,11495985,11497880,11499502,11501535,11503245,11504432,11505545,11507598,11509646,11511694,11513742,11515790,11517847,11519895,11521778,11523635,11525692,11527740,11529788,11531836,11533884,11535941,11537960,11539039,11540463,11542305,11544333,11546381,11548429,11550477,11551826,11553415,11555346,11557329,11559377,11561425,11563473,11565521,11567543,11569419,11570748,11571761,11572576,11573060,11573482,11573729,11573845,11575577,11577625,11579673,11581721,11583769,11585817,11587865,11589913,11591961,11594009,11596057,11598105,11600153,11602201,11604249,11606297,11608345,11610401,11611715,11613770,11615818,11617866,11619914,11621962,11624010,11626058,11628106,11629277,11629527,11630803,11632500,11634452,11636505,11638553,11640601,11642649,11644697,11646745,11648793,11650841,11652889,11654935,11656840,11658495,11660004,11661395,11662577,11663689,11664665,11665599,11666336,11667172,11668181,11669053,11669872,11671464,11673506,11675554,11677602,11679650,11681698,11683746,11685794,11687842,11689890,11691938,11693986,11696034,11698082,11700030,11701309,11702062,11702732,11704191,11706239,11708287,11710335,11712388,11713906,11715612,11717660,11719406,11720715,11721722,11722286,11723073,11724073,11726130,11728035,11729259,11729742,11731536,11733463,11735460,11737506,11739563,11741616,11743666,11745696,11747734,11749247,11751040,11752838,11754774,11756750,11758803,11760851,11762899,11764947,11766995,11769043,11771091,11773134,11775145,11776909,11778430,11779325,11780018,11781556,11783607,11785655,11787703,11789751,11791799,11793847,11795904,11797961,11800018,11801994,11803745,11805225,11806337,11807327,11807531,11807923,11809977,11812022,11813996,11815916,11817713,11819413,11821146,11823202,11825229,11827019,11828614,11829872,11831652,11833403,11835428,11837476,11839395,11841450,11842463,11844511,11846194,11848055,11849938,11851986,11853657,11855581,11856984,11858430,11859555,11861183,11863182,11865237,11867248,11869242,11871230,11873256,11875168,11877216,11879273,11881318,11883055,11884079,11885362,11887410,11889458,11891506,11893554,11895611,11896859,11897925,11899973,11902021,11904069,11906117,11907634,11907972,11909824,11911872,11913911,11915959,11918014,11920062,11922110,11924075,11926130,11928178,11929648,11931694,11933751,11935496,11937553,11939606,11941239,11943263,11945311,11946799,11948087,11950024,11951537,11952261,11954308,11956356,11958413,11960465,11961816,11961930,11962066,11963388,11965428,11967476,11969524,11971581,11973638,11975686,11977740,11979659,11981707,11983755,11985695,11987742,11989797,11991754,11993802,11995835,11997883,11999939,12001982,12003983,12005918,12007716,12009511,12011244,12012820,12014544,12015761,12017402,12019109,12020674,12021982,12023264,12025300,12027218,12029134,12031060,12033108,12035156,12037204,12039224,12040717,12041772,12042468,12043890,12045791,12047129,12048767,12050567,12052615,12054663,12056711,12058759,12060807,12062864,12064912,12066960,12069015,12071053,12073036,12074820,12076386,12077794,12078986,12079889,12081212,12083260,12085308,12087356,12089404,12091452,12093006,12093677,12095676,12097730,12099785,12101799,12103672,12105705,12107753,12109807,12111855,12113911,12115959,12118015,12120062,12122015,12123806,12125230,12126019,12126978,12129026,12131074,12133122,12135170,12136549,12136754,12137755,12139792,12141840,12143888,12145936,12147984,12150040,12152088,12154136,12156065,12157626,12157867,12158424,12159825,12161778,12163835,12165883,12167931,12169988,12172036,12174091,12176139,12178196,12180244,12182299,12184299,12186221,12187991,12189774,12191496,12193065,12194470,12195746,12196983,12198217,12199279,12200065,12200616,12201168,12201681,12202162,12202639,12203054,12203454,12203909,12204378,12204796,12205340,12205833,12206059,12206439,12207315,12208481,12209635,12210882,12212040,12213082,12214007,12214903,12215592,12216085,12216371,12216504,12216667,12217716,12219349,12221206,12223261,12225309,12227357,12229370,12231326,12233316,12235164,12237156,12238917,12240942,12242902,12244586,12246138,12248184,12250235,12252283,12254301,12256340,12258383,12260417,12262468,12264473,12266466,12268462,12270497,12272381,12274364,12276418,12278466,12280501,12282209,12284050,12286059,12287828,12289700,12291757,12293509,12294792,12296431,12298483,12300539,12302531,12304444,12306358,12308297,12310176,12312092,12314105,12316162,12318218,12320270,12322117,12324173,12326218,12327829,12329367,12330968,12332345,12333481,12333922,12334535,12334916,12335386,12336094,12336798,12337907,12339509,12340885,12342307,12343663,12344932,12346352,12348061,12349761,12351552,12353351,12355270,12357274,12359291,12361335,12363392,12365445,12367493,12369548,12371596,12373652,12375700,12377740,12379734,12381703,12383716,12385702,12387612,12389375,12391100,12392817,12394507,12396195,12397726,12399161,12400617,12402059,12403487,12404827,12406082,12407312,12408534,12409730,12410874,12411951,12412893,12413863,12414779,12416316,12417749,12419233,12420753,12422195,12423622,12425171,12426723,12428213,12429766,12431237,12432814,12434426,12436158,12437729,12439372,12440897,12442419,12443999,12445691,12447445,12449226,12450999,12452732,12454536,12456395,12458304,12460157,12462142,12464082,12466051,12468102,12470145,12472193,12474241,12476289,12478345,12480398,12482415,12484337,12486076,12487697,12488819,12490162,12491952,12493929,12495981,12498034,12500090,12501512,12501702,12502671,12504728,12506776,12508833,12510225,12512278,12513378,12515368,12517421,12519054,12520549,12522606,12524654,12526702,12528750,12530302,12532359,12534354,12535920,12537186,12539234,12541291,12543339,12545396,12547444,12549492,12551484,12553516,12555564,12557612,12559660,12561708,12563756,12565804,12567852,12569900,12571948,12573996,12576044,12578037,12580094,12582150,12584207,12586255,12588312,12590339,12592312,12594308,12596364,12598421,12600469,12602502,12604550,12606598,12608646,12610694,12612742,12614790,12616576,12617861,12619918,12621966,12624014,12626071,12628119,12630166,12632214,12634135,12636039,12637877,12639420,12641041,12642481,12644181,12646018,12647624,12649061,12650432,12651577,12652511,12652896,12654352,12656400,12658448,12660496,12662552,12664526,12666199,12667368,12667590,12668446,12670496,12672544,12674523,12676174,12677573,12679312,12681170,12682286,12682494,12683169,12684191,12684577,12684969,12685318,12685656,12686101,12686498,12686880,12687177,12688003,12688893,12689740,12690466,12691010,12691539,12692018,12692477,12693138,12693611,12694280,12695052,12695530,12696192,12696810,12697647,12698624,12698847,12699308,12699862,12700198,12700628,12701714,12702327,12703046,12703525,12703918,12704820,12705501,12706396,12707057,12707913,12708939,12709735,12710862,12711866,12713134,12714381,12714755,12715201,12715671,12715877,12716176,12716554,12716828,12717387,12718039,12718637,12718810,12719113,12719431,12719781,12719931,12720131,12720457,12720640,12720919,12721224,12721486,12721847,12722144,12722353,12722458,12722643,12722872,12723010,12723268,12724092,12724742,12725185,12725615,12726320,12727069,12727963,12728636,12729511,12730568,12731336,12732059,12732900,12733223,12733710,12734023,12734360,12734716,12734947,12735360,12735958,12736331,12736628,12737094,12738105,12738700,12739885,12740547,12741206,12741949,12742804,12743239,12743707,12744350,12744723,12745516,12747285,12748941,12749933,12751150,12752582,12753997,12755492,12756332,12757381,12758333,12759149,12760050,12761278,12761756,12762910,12763710,12764736,12765349,12766415,12766675,12767247,12767818,12768132,12768924,12769296,12769790,12770587,12771332,12771857,12772516,12773031,12773421,12774002,12775203,12776524,12777452,12778268,12779173,12780462,12781414,12782187,12783481,12785073,12786082,12787178,12787997,12789211,12790287,12791744,12792675,12793826,12794684,12795903,12796735,12797677,12798583,12799591,12800637,12801744,12802783,12803126,12803592,12803845,12804189,12804617,12804817,12805096,12805177,12805498,12805797,12806362,12806827,12807363,12807639,12808207,12808775,12809660,12810480,12811162,12811911,12812590,12813585,12814959,12816041,12817265,12818654,12819730,12820690,12821549,12822019,12822418,12823148,12824104,12825153,12825820,12826762,12827126,12827450,12827961,12828584,12829073,12830199,12831422,12832497,12832839,12833407,12833836,12834368,12834882,12835439,12835776,12836310,12836648,12837187,12837637,12838136,12838451,12839099,12839339,12839725,12840469,12841084,12841878,12842169,12843634,12844159,12844637,12845245,12845818,12846221,12846929,12847346,12847697,12848237,12848406,12848852,12849407,12849909,12850796,12851549,12852706,12853566,12854577,12855139,12855557,12855939,12856152,12856404,12856887,12857610,12858278,12858818,12859474,12860005,12860383,12860763,12861245,12861648,12862069,12862461,12863167,12863368,12863657,12863869,12864196,12864450,12864816,12864948,12865165,12865416,12865780,12865893,12866002,12866179,12866295,12866408,12866512,12866640,12866753,12866857,12867094,12867411,12867865,12868142,12868321,12869186,12870015,12870829,12871437,12872445,12873252,12873816,12874443,12875006,12875496,12875768,12877101,12878445,12879525,12880603,12881733,12882991,12884410,12886008,12887647,12889036,12890247,12891097,12892054,12893010,12894403,12896131,12897807,12899032,12900550,12901991,12903141,12904172,12904779,12905312,12906022,12906310,12907046,12907638,12908451,12909213,12909656,12910080,12910511,12910865,12911236,12911590,12911899,12912477,12912687,12913110,12913325,12913813,12914254,12914581,12914805,12915062,12915271,12915420,12915631,12916121,12916773,12918041,12918934,12919690,12920046,12920236,12920712,12921265,12921896,12922311,12922911,12923516,12923741,12924221,12924918,12925980,12926830,12927442,12928143,12928570,12929092,12929884,12930368,12930846,12931276,12932023,12932582,12933202,12933829,12934520,12935021,12935251,12935672,12936077,12936490,12936899,12936976,12937013,12937051,12937186,12937379,12937555,12937759,12938040,12938212,12938414,12938605,12938769,12938906,12939333,12939635,12939955,12940314,12940512,12940571,12941522,12942727,12943899,12945070,12946166,12947347,12948104,12949402,12950177,12950557,12950932,12952118,12953416,12953966,12955067,12956853,12958295,12959728,12961260,12962796,12964235,12965775,12967136,12968633,12970090,12971614,12973035,12974477,12975954,12977544,12979015,12980539,12981966,12983465,12984864,12986212,12987571,12989129,12990651,12992280,12993675,12995240,12996873,12998407,13000115,13001759,13003439,13005133,13006690,13007712,13008649,13009760,13010885,13012141,13014031,13015737,13017505,13019250,13020937,13022633,13024360,13026065,13027788,13029507,13031197,13032932,13034688,13036461,13038225,13039925,13041532,13043200,13044883,13046537,13048229,13049951,13051638,13053383,13055066,13056760,13058433,13060087,13061752,13063407,13064988,13066583,13068233,13070142,13071691,13073432,13075109,13076729,13078383,13080020,13081758,13083490,13085303,13087149,13088972,13090808,13092633,13094415,13096116,13097899,13099563,13101339,13103143,13104988,13106756,13108414,13110178,13112009,13113701,13115491,13117279,13119029,13120744,13122409,13124030,13125656,13127354,13129056,13130709,13132323,13133905,13135497,13137166,13138819,13140460,13142176,13143874,13145592,13147252,13148979,13150672,13152433,13154148,13155779,13157519,13159240,13160950,13162664,13164327,13165959,13167649,13169328,13170941,13172580,13174178,13175786,13177326,13178820,13180342,13181849,13183476,13184599,13185662,13186519,13187178,13188102,13189421,13190881,13192347,13193632,13194750,13195922,13197160,13198320,13199698,13201064,13202342,13203653,13204914,13206194,13207348,13208341,13209228,13209966,13210882,13211815,13212519,13213179,13214034,13215092,13216160,13217227,13218447,13220077,13221617,13223042,13224466,13225867,13227484,13228889,13230379,13231905,13233495,13234835,13236129,13237399,13238661,13239302,13239529,13239736,13239985,13240200,13240446,13241344,13242691,13244078,13245266,13246877,13248515,13249866,13251232,13252812,13253963,13254738,13256111,13257404,13258161,13259558,13261079,13262538,13264119,13265674,13267279,13268809,13270170,13271524,13273106,13274366,13275825,13277350,13279073,13280474,13281921,13283333,13284781,13286226,13287861,13289002,13290502,13292149,13293656,13295353,13296840,13298428,13300069,13301232,13302978,13304279,13305901,13307359,13308492,13310008,13311529,13313219,13314786,13316163,13317602,13319171,13320514,13322086,13323661,13325256,13326638,13327854,13329464,13330991,13332540,13334125,13335470,13336844,13338336,13340021,13341282,13342987,13344260,13345730,13347283,13348947,13350244,13351532,13353077,13354748,13356324,13357979,13359161,13360686,13362048,13363696,13364734,13366272,13367639,13369328,13370341,13371767,13373195,13374677,13375996,13377404,13379004,13380589,13382207,13383839,13385376,13386728,13388063,13389775,13391201,13392881,13394564,13396025,13397532,13399117,13400572,13402242,13403340,13405069,13406740,13408112,13409915,13411283,13412913,13414723,13416240,13417899,13419159,13420737,13422532,13423759,13425479,13427279,13428630,13430085,13431695,13433093,13434681,13436309,13437711,13439302,13440941,13442439,13443989,13445584,13447276,13448984,13450586,13452143,13453359,13454970,13456794,13458175,13459751,13461635,13463519,13465432,13467377,13469425,13471425,13473475,13475496,13477525,13479535,13481570,13483594,13485629,13487656,13489703,13491759,13493795,13495828,13497815,13499809,13501808,13503838,13505867,13507902,13509951,13511999,13514028,13516068,13518116,13520132,13522144,13524168,13526214,13528258,13530300,13532341,13534396,13536424,13538439,13540462,13542290,13544277,13546312,13548363,13550420,13552449,13554480,13556508,13558546,13560561,13562549,13564543,13566527,13568509,13570520,13572516,13574541,13576581,13578612,13580664,13582688,13584689,13586654,13588644,13590643,13592655,13594635,13596685,13598697,13600720,13602770,13604798,13606787,13608744,13610739,13612755,13614739,13616741,13618791,13620837,13622884,13624917,13626918,13628900,13630879,13632904,13634919,13636958,13638982,13641030,13643083,13645131,13647186,13649211,13651263,13653284,13655311,13657311,13659346,13661333,13663381,13665386,13667321,13669295,13671257,13673245,13675220,13677238,13679195,13681135,13683126,13685118,13687092,13689035,13691043,13693030,13695024,13696950,13698916,13700882,13702869,13704850,13706849,13708776,13710758,13712767,13714722,13716676,13718686,13720657,13722643,13724602,13726576,13728572,13730562,13732525,13734507,13736480,13738464,13740489,13742472,13744480,13746473,13748448,13750457,13752419,13754435,13756363,13758362,13760329,13762321,13764316,13766295,13768269,13770215,13772193,13774172,13776175,13778133,13780140,13782139,13784131,13786138,13788158,13790155,13792157,13794159,13796129,13798123,13800088,13802060,13804069,13806075,13808016,13809951,13811938,13813973,13815933,13817903,13819946,13821966,13823964,13825942,13827987,13830004,13831955,13834003,13836005,13838026,13840059,13842110,13844107,13846129,13848163,13850176,13852175,13854151,13856137,13858158,13860174,13862165,13864136,13865971,13867966,13870014,13872070,13874125,13876046,13878010,13879928,13881830,13883573,13885491,13887370,13889283,13891031,13892962,13894802,13896770,13898763,13900738,13902572,13904516,13906456,13908289,13910165,13912010,13913984,13915932,13917894,13919800,13921734,13923655,13925587,13927472,13929326,13931335,13933301,13935213,13937177,13939006,13940981,13942833,13944707,13946549,13948437,13950395,13952384,13954271,13956309,13958286,13960184,13962052,13963891,13965813,13967670,13969616,13971587,13973496,13975450,13977463,13979422,13981398,13983159,13985105,13986843,13988838,13990785,13992741,13994662,13996539,13998506,14000451,14002410,14004232,14006252,14008214,14010187,14011985,14013702,14015532,14017269,14019175,14021050,14022923,14024737,14026581,14028433,14030275,14032235,14034169,14036085,14038021,14039940,14041832,14043769,14045686,14047574,14049497,14051397,14053289,14055234,14057126,14059122,14061019,14062977,14064866,14066735,14068663,14070497,14072391,14074200,14076106,14078028,14079822,14081780,14083285,14085061,14086407,14088156,14089977,14091707,14093593,14095560,14097496,14099469,14101449,14103422,14105417,14107339,14109313,14111321,14113282,14115237,14117215,14118972,14120399,14121834,14123248,14124686,14126162,14127685,14129066,14130686,14132167,14133610,14135168,14136848,14138619,14140228,14141854,14143755,14145778,14147754,14149693,14151704,14153676,14155485,14157427,14159354,14161365,14163347,14165276,14167261,14169177,14171140,14172974,14174828,14176794,14178806,14180817,14182711,14184731,14186635,14188566,14190463,14192338,14194329,14196292,14198305,14200201,14202258,14204189,14206108,14207994,14209841,14211853,14213774,14215792,14217684,14219644,14221505,14223419,14225323,14227186,14229153,14231131,14233139,14235055,14237023,14238966,14240833,14242731,14244603,14246598,14248615,14250596,14252530,14254533,14256457,14258306,14260234,14262161,14264125,14266066,14267982,14269927,14271870,14273774,14275734,14277651,14279536,14281270,14283029,14284662,14286315,14287980,14289678,14291455,14293161,14294839,14296511,14298222,14299947,14301644,14303375,14305072,14306727,14308418,14310095,14311794,14313530,14315243,14316975,14318617,14320264,14321910,14323623,14325360,14327105,14328792,14330391,14331973,14333640,14335414,14337122,14338796,14340417,14342060,14343708,14345370,14347131,14348873,14350592,14352253,14353903,14355565,14357344,14359143,14360911,14362554,14364152,14365783,14367554,14369438,14371292,14373047,14374784,14376553,14378347,14380215,14382049,14383894,14385692,14387466,14389317,14391052,14392847,14394575,14396282,14397961,14399669,14401393,14403027,14404629,14406390,14408116,14409832,14411435,14413282,14414916,14416554,14418358,14420061,14421589,14423304,14425018,14426762,14428416,14430179,14431936,14433704,14435386,14437177,14438964,14440782,14442445,14444201,14445955,14447670,14449409,14451172,14452942,14454903,14456802,14458804,14460813,14462804,14464755,14466679,14468613,14470533,14472551,14474524,14476506,14478512,14480499,14482477,14484482,14486448,14488443,14490418,14492397,14494362,14496356,14498363,14500351,14502334,14504293,14506291,14508261,14510204,14512177,14514196,14516204,14518213,14520178,14522164,14524135,14526112,14528084,14530059,14532024,14533985,14535974,14537935,14539904,14541863,14543852,14545817,14547778,14549731,14551713,14553660,14555626,14557580,14559525,14561498,14563455,14565430,14567394,14569360,14571332,14573303,14575255,14577227,14579181,14581147,14583099,14585066,14587019,14588984,14590936,14592907,14594858,14596830,14598777,14600750,14602715,14604607,14606550,14608446,14610353,14612256,14614175,14616062,14617991,14619890,14621804,14623733,14625634,14627531,14629446,14631358,14633268,14635205,14637059,14638980,14640885,14642724,14644624,14646548,14648387,14650278,14652213,14654047,14655928,14657875,14659720,14661581,14663533,14665375,14667222,14669181,14671036,14672858,14674818,14676655,14678465,14680439,14682271,14684092,14685977,14687766,14689596,14691493,14693267,14695105,14696991,14698742,14700610,14702506,14704263,14706140,14708028,14709800,14711680,14713538,14715320,14717212,14719044,14720860,14722757,14724553,14726426,14728338,14730167,14732037,14733942,14735746,14737638,14739493,14741354,14743264,14745095,14746952,14748872,14750680,14752563,14754430,14756277,14758189,14760026,14761873,14763783,14765633,14767532,14769413,14771267,14773161,14775045,14776895,14778788,14780669,14782517,14784412,14786298,14788143,14790037,14791925,14793771,14795662,14797555,14799401,14801291,14803183,14805028,14806913,14808806,14810645,14812540,14814450,14816282,14818188,14820097,14821934,14823852,14825758,14827599,14829514,14831413,14833257,14835178,14837048,14838903,14840832,14842693,14844553,14846473,14848331,14850208,14852123,14853973,14855838,14857762,14859684,14861598,14863523,14865446,14867370,14869287,14871210,14873128,14875047,14876967,14878896,14880813,14882722,14884635,14886536,14888463,14890393,14892375,14894346,14896340,14898327,14900308,14902295,14904293,14906278,14908257,14910232,14912230,14914137,14916098,14917983,14919909,14921804,14923721,14925614,14927539,14929366,14931306,14933214,14935090,14937012,14938980,14940961,14942919,14944884,14946847,14948795,14950781,14952703,14954691,14956621,14958602,14960538,14962511,14964456,14966434,14968325,14970277,14972108,14974096,14975932,14977891,14979758,14981669,14983559,14985436,14987352,14989206,14991164,14992995,14994982,14996821,14998768,15000601,15002477,15004334,15006165,15008056,15009856,15011789,15013589,15015470,15017329,15019169,15021042,15022862,15024782,15026567,15028489,15030308,15032190,15034030,15036079,15038127,15040161,15042174,15044196,15046188,15048218,15050240,15052251,15054289,15056311,15058352,15060385,15062424,15064445,15066442,15068271,15070269,15072276,15074313,15076358,15078412,15080433,15082464,15084502,15086508,15088518,15090530,15092571,15094596,15096630,15098679,15100716,15102763,15104795,15106808,15108774,15110727,15112731,15114733,15116756,15118806,15120836,15122841,15124862,15126847,15128838,15130831,15132803,15134793,15136821,15138865,15140883,15142901,15144914,15146929,15148908,15150911,15152913,15154890,15156874,15158893,15160936,15162946,15164967,15166985,15168992,15170975,15172977,15174982,15176950,15178926,15180938,15182977,15184988,15187041,15189094,15191121,15193122,15195161,15197175,15199180,15201153,15203191,15205226,15207276,15209318,15211370,15213416,15215459,15217476,15219503,15221525,15223575,15225623,15227676,15229674,15231688,15233654,15235646,15237619,15239627,15241630,15243598,15245612,15247602,15249567,15251577,15253553,15255497,15257443,15259414,15261398,15263400,15265382,15267392,15269389,15271306,15273254,15275200,15277126,15278927,15280844,15282839,15284839,15286796,15288803,15290785,15292772,15294748,15296740,15298727,15300698,15302584,15304478,15306400,15308389,15310352,15312263,15314171,15316125,15318127,15320074,15322002,15323843,15325733,15327708,15329702,15331605,15333456,15335385,15337349,15339302,15341176,15343061,15344934,15346784,15348701,15350654,15352581,15354520,15356468,15358320,15360207,15362064,15363950,15365929,15367838,15369808,15371773,15373654,15375535,15377434,15379316,15381272,15383270,15385204,15387091,15388906,15390739,15392630,15394567,15396541,15398391,15400270,15402088,15403741,15405684,15407605,15409499,15411413,15413329,15415170,15417040,15418979,15420820,15422710,15424592,15426451,15428322,15430177,15431992,15433850,15435816,15437779,15439696,15441615,15443500,15445348,15447207,15449091,15450929,15452780,15454711,15456669,15458634,15460555,15462502,15464325,15466215,15468171,15470099,15472135,15474163,15476182,15478134,15480087,15482089,15484057,15486066,15488022,15489964,15491901,15493955,15495963,15497948,15499754,15501725,15503733,15505745,15507738,15509683,15511670,15513683,15515689,15517687,15519648,15521635,15523640,15525663,15527677,15529646,15531498,15533465,15535441,15537410,15539432,15541402,15543415,15545454,15547460,15549451,15551459,15553431,15555447,15557453,15559437,15561420,15563439,15565461,15567455,15569380,15571127,15572915,15574803,15576827,15578837,15580799,15582825,15584822,15586792,15588751,15590719,15592679,15594637,15596519,15598479,15600438,15602412,15604358,15606361,15608320,15610348,15612345,15614339,15616286,15618238,15620226,15622204,15624169,15626025,15627961,15629908,15631875,15633749,15635649,15637590,15639533,15641402,15643323,15645318,15647291,15649275,15651264,15653271,15655287,15657282,15659298,15661196,15663099,15665087,15667012,15668718,15670628,15672578,15674527,15676484,15678419,15680362,15682387,15684376,15686378,15688363,15690336,15692298,15694324,15696303,15698264,15700260,15702200,15704130,15706096,15708031,15710008,15711947,15713920,15715895,15717889,15719896,15721915,15723906,15725883,15727858,15729881,15731846,15733835,15735801,15737774,15739717,15741719,15743666,15745613,15747599,15749573,15751579,15753556,15755490,15757479,15759502,15761485,15763438,15765394,15767332,15769366,15771315,15773304,15775301,15777291,15779305,15781276,15783241,15785268,15787252,15789217,15791237,15793160,15795205,15797141,15799092,15801065,15803028,15805015,15807012,15809000,15810953,15812854,15814812,15816809,15818742,15820690,15822680,15824641,15826555,15828514,15830490,15832503,15834506,15836439,15838393,15840357,15842284,15844280,15846192,15848134,15850088,15851935,15853815,15855774,15857742,15859635,15861531,15863455,15865360,15867325,15869273,15871188,15873191,15875160,15877103,15879100,15881086,15883021,15885053,15886863,15888846,15890803,15892813,15894830,15896818,15898833,15900883,15902916,15904784,15906798,15908762,15910780,15912802,15914833,15916884,15918924,15920945,15922892,15924899,15926894,15928920,15930954,15932978,15935003,15936998,15939038,15941015,15943062,15945056,15947094,15949142,15951166,15953220,15955250,15957296,15959253,15961271,15963261,15965292,15967336,15969358,15971404,15973454,15975508,15977486,15979495,15981463,15983514,15985554,15987586,15989637,15991677,15993722,15995655,15997605,15999555,16001464,16003372,16005376,16007339,16009322,16011321,16013317,16015349,16017374,16019274,16021273,16023235,16025261,16027226,16029234,16031165,16033013,16035001,16036979,16038951,16040961,16042957,16044911,16046696,16048657,16050609,16052254,16054127,16055916,16057589,16059200,16060830,16062392,16064193,16065552,16067067,16068604,16069968,16071558,16072835,16074339,16075814,16076964,16078474,16079627,16081025,16082319,16083600,16084980,16086134,16087549,16088697,16089659,16091229,16092656,16093798,16095051,16096402,16097711,16098657,16099929,16101323,16102444,16104065,16105178,16106562,16107736,16109274,16110490,16111787,16113222,16114734,16115871,16117506,16118976,16120458,16122054,16123415,16124994,16126309,16127809,16129349,16130517,16132150,16133307,16134755,16135902,16137498,16138694,16140083,16141456,16142483,16143713,16145218,16146659,16147744,16149020,16150385,16151696,16152655,16153973,16155387,16156551,16158099,16159190,16160560,16161673,16163332,16164553,16166022,16167503,16168884,16170381,16171838,16173400,16174844,16176430,16177927,16179191,16180635,16182130,16183512,16184756,16186324,16187592,16188941,16190106,16191718,16192938,16194364,16195670,16196625,16197996,16199426,16200827,16201924,16203240,16204737,16205826,16206849,16208128,16209512,16210705,16212181,16213318,16214702,16215839,16217457,16218674,16220181,16221664,16223011,16224531,16225941,16227474,16228961,16230450,16232026,16233250,16234745,16236223,16237417,16238829,16240300,16241635,16243004,16244159,16245730,16246905,16248311,16249648,16250505,16252089,16253415,16254702,16255919,16257131,16258744,16259598,16260823,16262214,16263397,16264916,16265947,16267310,16268590,16269949,16271296,16272522,16273938,16275446,16276688,16278308,16279773,16281240,16282802,16284119,16285759,16287046,16288573,16290096,16291360,16293009,16294155,16295546,16296788,16298197,16299578,16300890,16302319,16303406,16304408,16305989,16307410,16308557,16309822,16311199,16312669,16313579,16314842,16316278,16317457,16319060,16320105,16321487,16322565,16324225,16325463,16326857,16328320,16329752,16331118,16332566,16334148,16335593,16337167,16338630,16340007,16341407,16342882,16344366,16345575,16347251,16348440,16349852,16351007,16352613,16353756,16355195,16356476,16357389,16358752,16360136,16361565,16362654,16363981,16365502,16366513,16367587,16368932,16370198,16371424,16372944,16374122,16375495,16376678,16378279,16379527,16381000,16382492,16383869,16385308,16386746,16388334,16389855,16391443,16393029,16394273,16395802,16397365,16398683,16399718,16401418,16402623,16403973,16405109,16406667,16407884,16409176,16410546,16411521,16412738,16414212,16415647,16416725,16418032,16419559,16420543,16421599,16422959,16424210,16425302,16426789,16427930,16429320,16430473,16432100,16433219,16434617,16436138,16437592,16439035,16440561,16442148,16443662,16445211,16446819,16448123,16449601,16451150,16452510,16453603,16455343,16456539,16457935,16459066,16460669,16461847,16463112,16464518,16465607,16466552,16468139,16469612,16470773,16472023,16473381,16474724,16475655,16476964,16478332,16479467,16481011,16482074,16483453,16484738,16486340,16487565,16488787,16490316,16491857,16493218,16494893,16496312,16497813,16499392,16500792,16502495,16503751,16505268,16506804,16508006,16509654,16510886,16512272,16513583,16514881,16516371,16517592,16519055,16520238,16521153,16522800,16524113,16525341,16526591,16527794,16529459,16530259,16531521,16532978,16534220,16535867,16536937,16538261,16539480,16540918,16542372,16543690,16545113,16546617,16547861,16549553,16551063,16552608,16554197,16555610,16557303,16558616,16560175,16561682,16562860,16564495,16565751,16567191,16568556,16569814,16571321,16572562,16574053,16575276,16576133,16577799,16579082,16580334,16581572,16582760,16584380,16585277,16586477,16587895,16589320,16590761,16592056,16593350,16594720,16596008,16597656,16598865,16600386,16601950,16603236,16604858,16606412,16608052,16609630,16611176,16612800,16614175,16615392,16616628,16617932,16619361,16620971,16622557,16624005,16625319,16626545,16628103,16629614,16630987,16632747,16634285,16635598,16636830,16638280,16639742,16641156,16642877,16644399,16645878,16647236,16648480,16649972,16651369,16652740,16654396,16655976,16657570,16659002,16660192,16661586,16662949,16664176,16665644,16667347,16668593,16669710,16671012,16672304,16674035,16675419,16676695,16678143,16679803,16680980,16682679,16684350,16686233,16688175,16690059,16691925,16693851,16695632,16697383,16699220,16701125,16702885,16704731,16706313,16707582,16709318,16711006,16712784,16714509,16716219,16717909,16719361,16720080,16721429,16723428,16725412,16727220,16728768,16729910,16731290,16733096,16734715,16736475,16738215,16740115,16741829,16743553,16745220,16747108,16748789,16750592,16752492,16754389,16756243,16757916,16759607,16761549,16763260,16765243,16767042,16768981,16770948,16772908,16774828,16776702,16778448,16780004,16781913,16783734,16785624,16787538,16789350,16790993,16792727,16794271,16795992,16797746,16799414,16801008,16802689,16804256,16805665,16807361,16809159,16811175,16813188,16815169,16817078,16819079,16821101,16823095,16825038,16827053,16829090,16831098,16833058,16835058,16837080,16839048,16841039,16842971,16844933,16846857,16848865,16850810,16852779,16854740,16856792,16858798,16860800,16862810,16864828,16866853,16868855,16870840,16872669,16874666,16876722,16878776,16880813,16882802,16884759,16886616,16888261,16890211,16892086,16894034,16895930,16897844,16899751,16901660,16903555,16905457,16907343,16909291,16911148,16913053,16915028,16916932,16918842,16920764,16922639,16924536,16925871,16927609,16929568,16931274,16932754,16934238,16935484,16937086,16938794,16940411,16942035,16943885,16945424,16947009,16948624,16950202,16951712,16953256,16954889,16956541,16958102,16959388,16960677,16962346,16963947,16965214,16966588,16968554,16970394,16972156,16973913,16975710,16977412,16979219,16981090,16982808,16984468,16986142,16987890,16989502,16991125,16992978,16994718,16996018,16997504,16999205,17000670,17002127,17003379,17004743,17006489,17007990,17009224,17010393,17011847,17013466,17014701,17016261,17018238,17020233,17022209,17024186,17026153,17028061,17029877,17031407,17033318,17035191,17037059,17038648,17040461,17042455,17044335,17046208,17048101,17049868,17051654,17053470,17055164,17057059,17058562,17060006,17061742,17063202,17064576,17066141,17067754,17069172,17070917,17072307,17074048,17075470,17077178,17078763,17080616,17082116,17083862,17085389,17087162,17088628,17090103,17091713,17093224,17095104,17096371,17097635,17098951,17100743,17102584,17104390,17106096,17107476,17108931,17110610,17112369,17113929,17115375,17117021,17118657,17120290,17121937,17123497,17125049,17126726,17128329,17129689,17131256,17132674,17134377,17135995,17137386,17138994,17140517,17142143,17143795,17145291,17146531,17148109,17149646,17150862,17152169,17153538,17154774,17156114,17157450,17159001,17160215,17161463,17162909,17164255,17165608,17166987,17168367,17169679,17171284,17172870,17174443,17176354,17177823,17179308,17181156,17182999,17184854,17186776,17188332,17190315,17192080,17193646,17195603,17197253,17199235,17200457,17202311,17204220,17205751,17207471,17209178,17210871,17212523,17214094,17215565,17217189,17218684,17220246,17221716,17223291,17224862,17226396,17227926,17229358,17230953,17232502,17233992,17235428,17237021,17238496,17240297,17242154,17244068,17245937,17247776,17249507,17250982,17252475,17254061,17255573,17257491,17259432,17261340,17263217,17265101,17266988,17268882,17270848,17271828,17272368,17272946,17273425,17274135,17274768,17275358,17275939,17276573,17278405,17280381,17282365,17284328,17286261,17288224,17290198,17292149,17294087,17295738,17297393,17299001,17300644,17302417,17303986,17305703,17307287,17308994,17310529,17312082,17313715,17315211,17316717,17318218,17319595,17321067,17322440,17324049,17325572,17326799,17327949,17329394,17330740,17332325,17333780,17335188,17336559,17338129,17339603,17341209,17342652,17344042,17345438,17346821,17348268,17349682,17351064,17352533,17354375,17356134,17357960,17359839,17361719,17363601,17365393,17367152,17368962,17370617,17372335,17374114,17375953,17377774,17379519,17381239,17382904,17383970,17384760,17385543,17386426,17387936,17389648,17391304,17392942,17394619,17396251,17397846,17399448,17401104,17402872,17404523,17406220,17407871,17409538,17411354,17413152,17415038,17416378,17418167,17419671,17421406,17422986,17424788,17426271,17427940,17429868,17431551,17433398,17435250,17437099,17438675,17440530,17442388,17444120,17445200,17446246,17447213,17448311,17449361,17450459,17451409,17452486,17454190,17455736,17457342,17458870,17460445,17462012,17463557,17465093,17466764,17468195,17469755,17471334,17472998,17474239,17475285,17476308,17477307,17478641,17480069,17481671,17483443,17485036,17486452,17487553,17489011,17490547,17491675,17492966,17494482,17496011,17497466,17499078,17500702,17502236,17503797,17505437,17506938,17508287,17509146,17509986,17511022,17511576,17512573,17513297,17514360,17515744,17517212,17517977,17518547,17519424,17520018,17520832,17521370,17522099,17522825,17523548,17524412,17524895,17525705,17526413,17527341,17527848,17528393,17529252,17529928,17530814,17531320,17532186,17532898,17533796,17534233,17534664,17535577,17536150,17536875,17537168,17537759,17538005,17538202,17538763,17538923,17539520,17539785,17540394,17540564,17541086,17541276,17541432,17541900,17541940,17542510,17542677,17543250,17543476,17543726,17545268,17546699,17548138,17549330,17550553,17551721,17553103,17554099,17555095,17556093,17557084,17558056,17559051,17560046,17561039,17562585,17563964,17565366,17566816,17568325,17569787,17571170,17572517,17574075,17575531,17577020,17578543,17580144,17581740,17583225,17584755,17586276,17587837,17589235,17590675,17592066,17593484,17594933,17596328,17597760,17599237,17600638,17602029,17603393,17604777,17605880,17606832,17607786,17608711,17609835,17610741,17611688,17612614,17613668,17614592,17615523,17616430,17617455,17618849,17620261,17621664,17623062,17624182,17625089,17626043,17626968,17628437,17630047,17631617,17633181,17634698,17636222,17637745,17639365,17640958,17642537,17643880,17645233,17646530,17647750,17649075,17650404,17651750,17653310,17654856,17656384,17657716,17659222,17660559,17661826,17663067,17664628,17666272,17667971,17669535,17671142,17672655,17674430,17676145,17677953,17679559,17680751,17681918,17683419,17684838,17686316,17687522,17688846,17690238,17691665,17693331,17694741,17696336,17697767,17699237,17700901,17702594,17704243,17705909,17707477,17709141,17710782,17712425,17714187,17715813,17717519,17719181,17720787,17722380,17724032,17725657,17727158,17728874,17730549,17732160,17733846,17735323,17736961,17738583,17740225,17741884,17743499,17745195,17746880,17748533,17750129,17751794,17753445,17754981,17756790,17758426,17760044,17761662,17763462,17765160,17766773,17768420,17770059,17771919,17773595,17775271,17776938,17778708,17780397,17782053,17783756,17785403,17786613,17787586,17788529,17789501,17790892,17792372,17793931,17795424,17797025,17798338,17799671,17801052,17802334,17803612,17804754,17806013,17807275,17808616,17809764,17810704,17811662,17813125,17814320,17815470,17816549,17817765,17818917,17819802,17820787,17821776,17823365,17824887,17826418,17827973,17829459,17830971,17832482,17834027,17835722,17837119,17838515,17839867,17841238,17842612,17843983,17845336,17846740,17848457,17849983,17851529,17853102,17854659,17856205,17857737,17859247,17860900,17862563,17864178,17865798,17867450,17869072,17870666,17872266,17873923,17875683,17877147,17878564,17879964,17881387,17882862,17884278,17885677,17887141,17889005,17890760,17892478,17894153,17895899,17897635,17899331,17901040,17902936,17904687,17906391,17908090,17909790,17911523,17913186,17914866,17916566,17917876,17918864,17920089,17921120,17922234,17923304,17924540,17925670,17926791,17927842,17928814,17929572,17930212,17930935,17931578,17933219,17934865,17936605,17938297,17940016,17941684,17943406,17945104,17946884,17948686,17950420,17952101,17953723,17955441,17957124,17958857,17960556,17962437,17964184,17965958,17967709,17969474,17971255,17973030,17974801,17976554,17978393,17980115,17981798,17983419,17985105,17986763,17988485,17990152,17991850,17993299,17994806,17996199,17997825,17998827,17999845,18000869,18001906,18003760,18005585,18007394,18009227,18010887,18012725,18014524,18016363,18018166,18019576,18020741,18021954,18023525,18025001,18026007,18027049,18028390,18030134,18031724,18033322,18034892,18036429,18038065,18039682,18041290,18043046,18044561,18046014,18047442,18048913,18050305,18051793,18053233,18054681,18056105,18057897,18059251,18061009,18062286,18063777,18065220,18066710,18068129,18069817,18071451,18073060,18074682,18076214,18077813,18079413,18080976,18082643,18084158,18085632,18087075,18088446,18089991,18091432,18092867,18094272,18096075,18097880,18099715,18101559,18103233,18105071,18106873,18108701,18110434,18112127,18113765,18115379,18117063,18118684,18120323,18121921,18123624,18125203,18126701,18128137,18129611,18131010,18132507,18133957,18135397,18136991,18138819,18140622,18142477,18144396,18146094,18147933,18149750,18151623,18153302,18154919,18156548,18158162,18159706,18161370,18163012,18164606,18166302,18167913,18169351,18170771,18172259,18173677,18175161,18176604,18178072,18179646,18181485,18183305,18185160,18186860,18188728,18190527,18192384,18194178,18195497,18196576,18198236,18198918,18199606,18200783,18201475,18202547,18203301,18203980,18205479,18206519,18207171,18207878,18209064,18210315,18211303,18212555,18213949,18215241,18215844,18217003,18218257,18219454,18220769,18222058,18223796,18225025,18225976,18226926,18228578,18230168,18231750,18233477,18235130,18236845,18238398,18240163,18241650,18243119,18244392,18245287,18246457,18248048,18249549,18250562,18251568,18252578,18253616,18254920,18255985,18257036,18258113,18259488,18261393,18263424,18265435,18267449,18269476,18271504,18273515,18275494,18277512,18279560,18281593,18283612,18285614,18287627,18289631,18291623,18293600,18295623,18297646,18299682,18301679,18303706,18305711,18307718,18309679,18311700,18313746,18315786,18317773,18319768,18321779,18323783,18325781,18327761,18329808,18331716,18333623,18335527,18337409,18339302,18341207,18343043,18344908,18346788,18348714,18350590,18352473,18354305,18356172,18358000,18359885,18361838,18363507,18365186,18366843,18368534,18370201,18371852,18373508,18375129,18376930,18378574,18380234,18381880,18383498,18385174,18386816,18388413,18390096,18391639,18393072,18394497,18395891,18397335,18398768,18400170,18401571,18403144,18404652,18406167,18407678,18409193,18410515,18412061,18413614,18415243,18416647,18418208,18419677,18421361,18422793,18424247,18425777,18427404,18428756,18430149,18431624,18433125,18435070,18436749,18438281,18439941,18441527,18443114,18444630,18446222,18447934,18449466,18451040,18452663,18454354,18456089,18457708,18459294,18460824,18462490,18464029,18465600,18467144,18468689,18470216,18471796,18473316,18474753,18476330,18477802,18479528,18481063,18482726,18484331,18485996,18487645,18489306,18491109,18492800,18494295,18496020,18497952,18499792,18501498,18503230,18505125,18507062,18508992,18510932,18512922,18514867,18516791,18518704,18520633,18522455,18524293,18526165,18528147,18529999,18531862,18533728,18535561,18537353,18539126,18540919,18542702,18544718,18546672,18548640,18550610,18552525,18554432,18556335,18558218,18560204,18562130,18564009,18565896,18567757,18569566,18571406,18573227,18575013,18577022,18579011,18580996,18582960,18584904,18586850,18588781,18590682,18592659,18594577,18596387,18598192,18599924,18601700,18603459,18605225,18606985,18608910,18610758,18612607,18614369,18616176,18617999,18619820,18621624,18623382,18625064,18626477,18627929,18629376,18630790,18632235,18633652,18635058,18636666,18638624,18640561,18642524,18644488,18646431,18648331,18650238,18652161,18654066,18655930,18657853,18659847,18661790,18663744,18665639,18667555,18669448,18671392,18673270,18675212,18676906,18678419,18679934,18681543,18683127,18684727,18686296,18687822,18689672,18691468,18693280,18695080,18696834,18698574,18700320,18702041,18703763,18705325,18706652,18707957,18709251,18710674,18711956,18713316,18714661,18716217,18717701,18719172,18720661,18722229,18723794,18725305,18726777,18728221,18729893,18731572,18733054,18734732,18736375,18737939,18739515,18740982,18742351,18743705,18745019,18746254,18747540,18748706,18749991,18751699,18753592,18755448,18757323,18759228,18761113,18762979,18764849,18766739,18768714,18770618,18772495,18774359,18776240,18778117,18780007,18781891,18783784,18785220,18786636,18788017,18789413,18790880,18792338,18793812,18795286,18797067,18798736,18800434,18802169,18803846,18805455,18807035,18808583,18810231,18811761,18813302,18814877,18816505,18818229,18819951,18821647,18823289,18824989,18826442,18827911,18829380,18830827,18832177,18833585,18834991,18836521,18838045,18839558,18841069,18842608,18843843,18845369,18846884,18848338,18850000,18851488,18853025,18854515,18855789,18857283,18858784,18860305,18861838,18863845,18865804,18867725,18869398,18870825,18872237,18873655,18874476,18875899,18877310,18878719,18880313,18881489,18882634,18883733,18884867,18885952,18887018,18888163,18889338,18890857,18892287,18893711,18895625,18897525,18899424,18901332,18903229,18905135,18907028,18908963,18910656,18912268,18913768,18915307,18916760,18918128,18919026,18919985,18920778,18921673,18922477,18923439,18924139,18925063,18925954,18926974,18927715,18928657,18929526,18930573,18931503,18932455,18933805,18935046,18936376,18937666,18938485,18938846,18939449,18939966,18940341,18940638,18941106,18941776,18943111,18944025,18944891,18945725,18946804,18948109,18948871,18950196,18950972,18951186,18951615,18951887,18952205,18953587,18955008,18956503,18958180,18960017,18961741,18963559,18965379,18967183,18968954,18970710,18972498,18974252,18975887,18977542,18979111,18980713,18982313,18983964,18985529,18987178,18988554,18989861,18991191,18992518,18994125,18995804,18997463,18999130,19000800,19002464,19004106,19005799,19007483,19009160,19010826,19012501,19013457,19015030,19016856,19018715,19020495,19022288,19024099,19025984,19027797,19029553,19031197,19032651,19034121,19035575,19037218,19039081,19040933,19042780,19044641,19046502,19048372,19050229,19052108,19053958,19055031,19056781,19057990,19059074,19060342,19061441,19062619,19064657,19066660,19068633,19070551,19072527,19074477,19076376,19078285,19080170,19082139,19084082,19086031,19087944,19089865,19091746,19093678,19095689,19097459,19099131,19100895,19102696,19104513,19106319,19108002,19109611,19111487,19113542,19115597,19117639,19119680,19121727,19123768,19125802,19127859,19129907,19131960,19134002,19136052,19138099,19140143,19142191,19144232,19146287,19148161,19150081,19151938,19153792,19155614,19157478,19159319,19161186,19163135,19165034,19166914,19168755,19170620,19172455,19174319,19176166,19178110,19179417,19180853,19181649,19182505,19183252,19183927,19184668,19185232,19186016,19186896,19187690,19188075,19188800,19189587,19190464,19191093,19191503,19192272,19193134,19194034,19194483,19195016,19195793,19196631,19197555,19198183,19198630,19199882,19200909,19202016,19202499,19203172,19204349,19205446,19206501,19206880,19207784,19208917,19209943,19210839,19211244,19212303,19213442,19214544,19215196,19216605,19217917,19219501,19220817,19222585,19223965,19224950,19226102,19227245,19228371,19229524,19230616,19231699,19232812,19233976,19235084,19236282,19237499,19238561,19239596,19240620,19241896,19243289,19244392,19245481,19246653,19247726,19248793,19249923,19250981,19251993,19252978,19253868,19254901,19255923,19256784,19257618,19258434,19259301,19260638,19261052,19261616,19262138,19262688,19263254,19263716,19264285,19264834,19265296,19265824,19266295,19266790,19267290,19267831,19268404,19268906,19270373,19271859,19273338,19274827,19276383,19277885,19279402,19280919,19282414,19283517,19284487,19285480,19286955,19288499,19289863,19291256,19292592,19293958,19295450,19297186,19298826,19300492,19302146,19303753,19305370,19307030,19308677,19310339,19311999,19313489,19314952,19316469,19317926,19319455,19320971,19322426,19323990,19325028,19326200,19327430,19328781,19330121,19331416,19332709,19333826,19335217,19336672,19338055,19339499,19341053,19342572,19344119,19345666,19347386,19348700,19349698,19350804,19351984,19353129,19354279,19355399,19356502,19357603,19358757,19359866,19361099,19362294,19363354,19364416,19365500,19366771,19368093,19369250,19370372,19371569,19372645,19373694,19374802,19375820,19376852,19377853,19378794,19379840,19380913,19381767,19382589,19383416,19384338,19385571,19386012,19386584,19387072,19387625,19388170,19388647,19389204,19389739,19390213,19390725,19391220,19391711,19392229,19392747,19393320,19393853,19395629,19397434,19399231,19401024,19402823,19404605,19406335,19408076,19409490,19410887,19412272,19413669,19415324,19416549,19417746,19418986,19420524,19421964,19423291,19424602,19426123,19427409,19428439,19429426,19430407,19431882,19433576,19435010,19436697,19438359,19439714,19440909,19442086,19443298,19444741,19446127,19447828,19449494,19451091,19452783,19454481,19456074,19457738,19459379,19461064,19462203,19463637,19465074,19466615,19468527,19470230,19472192,19473958,19475648,19477303,19479012,19480736,19482351,19484093,19485874,19487559,19489129,19490625,19492174,19493721,19495274,19496811,19498381,19499619,19501379,19502998,19504603,19506194,19507758,19509315,19510903,19512518,19514297,19515766,19517523,19519307,19520812,19522246,19523989,19525774,19527310,19528997,19530045,19531137,19532274,19533412,19534585,19535715,19536845,19538019,19539140,19540270,19541381,19542580,19543721,19544811,19545819,19546924,19548212,19549258,19550483,19551628,19552423,19553150,19554279,19555437,19556542,19557508,19558470,19559714,19560804,19561749,19562359,19563465,19564708,19565844,19566835,19567772,19569017,19570141,19571045,19571539,19572703,19573946,19575153,19576119,19576966,19578158,19579276,19580273,19580697,19581903,19583107,19584252,19585253,19585993,19587123,19588276,19589348,19589760,19590945,19592112,19593256,19594146,19595456,19596601,19597688,19598883,19599933,19600974,19602074,19603093,19604126,19605145,19606077,19607135,19608179,19609026,19609851,19610692,19611620,19612572,19613743,19614990,19616217,19616578,19617559,19618805,19619920,19620803,19622070,19623221,19624469,19625667,19626902,19628054,19629179,19630432,19631590,19632887,19634016,19635158,19636358,19637562,19638861,19639979,19641132,19642366,19643492,19644770,19645956,19646928,19647962,19649097,19650452,19651562,19652561,19653544,19654726,19656045,19657102,19658092,19659154,19660431,19661639,19662697,19663651,19664758,19666264,19666911,19667425,19667967,19669243,19670811,19672564,19674422,19676290,19678115,19679710,19681104,19681601,19682118,19682645,19683169,19683716,19684682,19685970,19687011,19688294,19689801,19690991,19692082,19693556,19694902,19695949,19697223,19698728,19699926,19701005,19702443,19704179,19706044,19707785,19709517,19711418,19713086,19714886,19716773,19718480,19720303,19722112,19723937,19725652,19727508,19729273,19731041,19732939,19734673,19736412,19738290,19740020,19741813,19743614,19745367,19747240,19749050,19750879,19752549,19754447,19756189,19758048,19759848,19761594,19763497,19765169,19766996,19768867,19770656,19772414,19774229,19776070,19777779,19779604,19781485,19783200,19785104,19786836,19788607,19790525,19792265,19794008,19795818,19797644,19799391,19801209,19803037,19804709,19806615,19808295,19810120,19811898,19813662,19815528,19817306,19819134,19820926,19822734,19824485,19826285,19828189,19829912,19831647,19833530,19835234,19837113,19838885,19840637,19841997,19843180,19844411,19845643,19846905,19848064,19849298,19850389,19851417,19851982,19852778,19853645,19854394,19854795,19855520,19856326,19857230,19857823,19858261,19859046,19859884,19860816,19861264,19861803,19862584,19863433,19864329,19865003,19866442,19867471,19868633,19869782,19870913,19872086,19873169,19874261,19875381,19876527,19877645,19878808,19879979,19881073,19882148,19883143,19884248,19885708,19887229,19888824,19889881,19890973,19892168,19893252,19894316,19895396,19896443,19897473,19898480,19899343,19900356,19901405,19902277,19903189,19903956,19904851,19906320,19907744,19909255,19910435,19910866,19911442,19911952,19912491,19913046,19913541,19914080,19914603,19915087,19915612,19916111,19916589,19917101,19917615,19918200,19918716,19920398,19922054,19923741,19925310,19927031,19928688,19930335,19931993,19933693,19935384,19937158,19938802,19940428,19942031,19943723,19945317,19946261,19946780,19947802,19948360,19948782,19949106,19949934,19951016,19953053,19955093,19957123,19959126,19961149,19963139,19965124,19967097,19969116,19971151,19973195,19975222,19977234,19979250,19981268,19983232,19985256,19986638,19987989,19989600,19991134,19992495,19993860,19995126,19996245,19997366,19998490,19999610,20000732,20001852,20002668,20002733,20003608,20005599,20007656,20009509,20011379,20013294,20015143,20016985,20018879,20020774,20022626,20024572,20026489,20028425,20030382,20032233,20034130,20036053,20037977,20039852,20041644,20043648,20045525,20047417,20049348,20051257,20053081,20054848,20056666,20058424,20060342,20062239,20064136,20066007,20067876,20069768,20071661,20073576,20075407,20077416,20079165,20081039,20082897,20084816,20086659,20088302,20089669,20089964,20090560,20091221,20091858,20092493,20093081,20093687,20094437,20095160,20095825,20096610,20097419,20098344,20098954,20099839,20100015,20101126,20101448,20101833,20103402,20104088,20105077,20105325,20105668,20105997,20106975,20108546,20110002,20111607,20113242,20114838,20116391,20117823,20119338,20120954,20122575,20124211,20125789,20127263,20128836,20130396,20131902,20133655,20135172,20136821,20138447,20139952,20141806,20143653,20145439,20147195,20149037,20150891,20152733,20154567,20156425,20158129,20159458,20160754,20162102,20163450,20164790,20166080,20167401,20168852,20170338,20171797,20173247,20174710,20176195,20177658,20179119,20180541,20182159,20183621,20185065,20186494,20187983,20189477,20190942,20192367,20193874,20195466,20196921,20198372,20199827,20201328,20202818,20204272,20205701,20207293,20208774,20210163,20211590,20213032,20214495,20215937,20217361,20218761,20220377,20221739,20223125,20224544,20226043,20227511,20228916,20230323,20231930,20233356,20234773,20236156,20237631,20239120,20240556,20241957,20243361,20244972,20246329,20247692,20249112,20250572,20252052,20253465,20254833,20256445,20257860,20259247,20260696,20262186,20263644,20265120,20266574,20267980,20269614,20271072,20272494,20273961,20275442,20276935,20278382,20279826,20281316,20282768,20284088,20285393,20286773,20288146,20289523,20290803,20292057,20293603,20294936,20296236,20297576,20298967,20300319,20301657,20302976,20304273,20305822,20307132,20308449,20309805,20311136,20312466,20313800,20315069,20316628,20318099,20319515,20320963,20322441,20323932,20325410,20326846,20328215,20329851,20331238,20332647,20334120,20335607,20337104,20338550,20339944,20341578,20342986,20344340,20345710,20347193,20348639,20350060,20351500,20352900,20354521,20355936,20357302,20358735,20360217,20361661,20363080,20364464,20365995,20367484,20368885,20370255,20371694,20373184,20374643,20376080,20377493,20379079,20380544,20381958,20383388,20384873,20386341,20387797,20389219,20390628,20392435,20394198,20396017,20397749,20399612,20401196,20402954,20404766,20406602,20408420,20410182,20411797,20413533,20415316,20417038,20418795,20420586,20422445,20424268,20426155,20427989,20429883,20431726,20433627,20435483,20437373,20439206,20441036,20442786,20444606,20446433,20448216,20449978,20451795,20453716,20455505,20457283,20458997,20460763,20462483,20464245,20465952,20467778,20469613,20471429,20473208,20474959,20476743,20478486,20480233,20482004,20483961,20485852,20487667,20489492,20491293,20493090,20494945,20496739,20498546,20500417,20502140,20503923,20505674,20507416,20509141,20510896,20512676,20514528,20516330,20518188,20520010,20521819,20523649,20525397,20527175,20528963,20530776,20532564,20534306,20536072,20537686,20539331,20541079,20542808,20544434,20546279,20548060,20549766,20551555,20553188,20554839,20556474,20558154,20559960,20561839,20563496,20565105,20566738,20568400,20570089,20571779,20573441,20575111,20576852,20578541,20580170,20581820,20583531,20585223,20586903,20588588,20590395,20592213,20593969,20595742,20597537,20599357,20601151,20602990,20604766,20606603,20608388,20610091,20611838,20613616,20615407,20617176,20618939,20620803,20622554,20624385,20626268,20628141,20630022,20631957,20633848,20635664,20637479,20639158,20640862,20642611,20644366,20646101,20647902,20649629,20651436,20653140,20654816,20656642,20658439,20660227,20662068,20663879,20665596,20667303,20668709,20670240,20671762,20673263,20674781,20676283,20677787,20679382,20681432,20683383,20685313,20687318,20689315,20691247,20693245,20695166,20697080,20699049,20701035,20703049,20704995,20706939,20708921,20710908,20712950,20714505,20714912,20714952,20714990,20715030,20715349,20715387,20715427,20715465,20716247,20718101,20719890,20721721,20723572,20725404,20727225,20728995,20730841,20732581,20734049,20735508,20736954,20738419,20739838,20741268,20742708,20744337,20746163,20747993,20749798,20751550,20753338,20755117,20756885,20758694,20759851,20760613,20760651,20760691,20760731,20761044,20761084,20761122,20761162,20761202,20762333,20763458,20765228,20766947,20768677,20770432,20772185,20773904,20775612,20777351,20779121,20780908,20782000,20783273,20784719,20785862,20786782,20788380,20789798,20790999,20792122,20793947,20795559,20797208,20797621,20797661,20797699,20797739,20798058,20798096,20798136,20798174,20798772,20800214,20801599,20802817,20803991,20805708,20807357,20808976,20810681,20812351,20814024,20815692,20817303,20818806,20818844,20818884,20818922,20818962,20820112,20820348,20820469,20821760,20823627,20825655,20827371,20829030,20830635,20832280,20833961,20835625,20837331,20839062,20840747,20842494,20844240,20845984,20847708,20849429,20851141,20852820,20854580,20855617,20856739,20857021,20858181,20859996,20861742,20863467,20865228,20866963,20868766,20870427,20872158,20874017,20875864,20877709,20879592,20881364,20883298,20885083,20886924,20888820,20890662,20892331,20893977,20895705,20897370,20899192,20900975,20902692,20904566,20906357,20908321,20910093,20912055,20913839,20915797,20917669,20919544,20921465,20922741,20923899,20925001,20926023,20927250,20928659,20930002,20931342,20932701,20934091,20935237,20936393,20937468,20938630,20939767,20941019,20942652,20943318,20944152,20945107,20946111,20947550,20949238,20950318,20951103,20951763,20952608,20954091,20955720,20957463,20958986,20959859,20961194,20962876,20964193,20965419,20966348,20967133,20968114,20968810,20969327,20970305,20971530,20972904,20974102,20975343,20976689,20978061,20979471,20980726,20982197,20984119,20986019,20987895,20989827,20991661,20993524,20995424,20997318,20999159,21001052,21002972,21004918,21006746,21008631,21010516,21012465,21013612,21014563,21015520,21016447,21018063,21020018,21021716,21023648,21025501,21026626,21027837,21029024,21030276,21032277,21034301,21036302,21038338,21040276,21042195,21044078,21045980,21047948,21049976,21052011,21054053,21056094,21057842,21059666,21061451,21063294,21065104,21066906,21068623,21070424,21072283,21074220,21076162,21078103,21080078,21081642,21082894,21084206,21085866,21087130,21088307,21089578,21090851,21092181,21093368,21094624,21095872,21097523,21098890,21100149,21101338,21103049,21104622,21105385,21106190,21107800,21109486,21110359,21111105,21112465,21113798,21114834,21115564,21116558,21118090,21119671,21121044,21122446,21124070,21125882,21127642,21129446,21131225,21133064,21134829,21136698,21138525,21140350,21142004,21143673,21145334,21147082,21148849,21150644,21152463,21154198,21155804,21157250,21158658,21160106,21161675,21163120,21164541,21165985,21167580,21169093,21170536,21172025,21173602,21175171,21176651,21178135,21179689,21181622,21183605,21185564,21187481,21189499,21191481,21193450,21195420,21197429,21199186,21200949,21202697,21204457,21206232,21207812,21209357,21210936,21212835,21214747,21216538,21218437,21220358,21222121,21223961,21225732,21227582,21229520,21231383,21233227,21235128,21237003,21238823,21240600,21242449,21244356,21245758,21247225,21248772,21250340,21251551,21252763,21254321,21255597,21256778,21258025,21259241,21260988,21262116,21263365,21264675,21266569,21268341,21270130,21271904,21273717,21275528,21277311,21279099,21280897,21282777,21284607,21286414,21288229,21289660,21290533,21291340,21292143,21293158,21294316,21295471,21296642,21297800,21299066,21300275,21301449,21302661,21303978,21305384,21306791,21308076,21309717,21311561,21313432,21315279,21317172,21319009,21320820,21322683,21324514,21326457,21328358,21330287,21332195,21334128,21336038,21337977,21339920,21341815,21343672,21345526,21347351,21349069,21350937,21352757,21354460,21356050,21357704,21359494,21361338,21363195,21365075,21366958,21368753,21370651,21372526,21374013,21375471,21376904,21378435,21379981,21381604,21383390,21384963,21386503,21388155,21389788,21391498,21393193,21394944,21396676,21398472,21400269,21402174,21404230,21406285,21408236,21410209,21412188,21414172,21416142,21418149,21420077,21422029,21423950,21425872,21426997,21428349,21429715,21430785,21432543,21434336,21436069,21437830,21439543,21441056,21442699,21444233,21445888,21447658,21449429,21451212,21452953,21454813,21456596,21458403,21460160,21461943,21463642,21465347,21467066,21468689,21470371,21472194,21473988,21475618,21476779,21477813,21478875,21480033,21481363,21482265,21483136,21484075,21485374,21486323,21487561,21488474,21489763,21490291,21490951,21491381,21492055,21492947,21493701,21494471,21495174,21495960,21497167,21498349,21499556,21500611,21501902,21503306,21504728,21506163,21507479,21508896,21510541,21512164,21513516,21514975,21516615,21518092,21519573,21521301,21522918,21524561,21525994,21526194,21526415,21526610,21527075,21527779,21528261,21528674,21529144,21530978,21533024,21535069,21537123,21539147,21541183,21543231,21545264,21547287,21549262,21551193,21553135,21555065,21556943,21558855,21560775,21562684,21564358,21565773,21567130,21568606,21570043,21571158,21572360,21573491,21574586,21576006,21577454,21578852,21580299,21582066,21583923,21585749,21587580,21589464,21591311,21593092,21594889,21596789,21598588,21600331,21602073,21603852,21605528,21607290,21609087,21610784,21612380,21613796,21615290,21616727,21618190,21619622,21621094,21622654,21624109,21625957,21627819,21629687,21631572,21633113,21634302,21635551,21636774,21638412,21640238,21642012,21643796,21645635,21647017,21648443,21649915,21651352,21653341,21655367,21657404,21659413,21661447,21663443,21665447,21667421,21669371,21670906,21672383,21673867,21675382,21677103,21678774,21680436,21682106,21684091,21686053,21688041,21690035,21692023,21693756,21695459,21697176,21699023,21701078,21703127,21705167,21707215,21708669,21709975,21711000,21711530,21712057,21712584,21713364,21714616,21716056,21717523,21718712,21719927,21721432,21722829,21724170,21725470,21727035,21728512,21730138,21731599,21733015,21734691,21736404,21738241,21740076,21741670,21742880,21744217,21745441,21746768,21747730,21748733,21749723,21750877,21751731,21752611,21753576,21754597,21755679,21757661,21759628,21761563,21763510,21765539,21767546,21769513,21771518,21773474,21775019,21776509,21778134,21779870,21781505,21783193,21784878,21786523,21788331,21789810,21791348,21792958,21794792,21796396,21798114,21799760,21801443,21802976,21804678,21806259,21807738,21809165,21810778,21812309,21813751,21815633,21817536,21819406,21821249,21823131,21825016,21826901,21828761,21830663,21832280,21833775,21835208,21836880,21838857,21840838,21842823,21844817,21846801,21848618,21850400,21852195,21854040,21855911,21857837,21859770,21861604,21862966,21864433,21865852,21867209,21868725,21870211,21871737,21873222,21874754,21876321,21878082,21879767,21881362,21882846,21884452,21885970,21887443,21889215,21890946,21892577,21894335,21895988,21897738,21899401,21901169,21902829,21904499,21906026,21907727,21909435,21911064,21912715,21914257,21915955,21917527,21919101,21920666,21922137,21923665,21925436,21926836,21928574,21930203,21931714,21933222,21934735,21936261,21937783,21939300,21940949,21942554,21943883,21945180,21946572,21948083,21949704,21951555,21952976,21954507,21956186,21957683,21959432,21961195,21962879,21964509,21966072,21967347,21968559,21969809,21971069,21972425,21973640,21974997,21976748,21978085,21979542,21980813,21982180,21983280,21984448,21985690,21986867,21988195,21989611,21991015,21992370,21993810,21995386,21996614,21997910,21999518,22001242,22003095,22004733,22006076,22007204,22008212,22009123,22010026,22011117,22012293,22013558,22014843,22016268,22017905,22019476,22021139,22022996,22024417,22025605,22026600,22027590,22028537,22029242,22030165,22031481,22032634,22033878,22035131,22036387,22037678,22039140,22040832,22042567,22044446,22046258,22048039,22049807,22051521,22052893,22054134,22055318,22056656,22057942,22059273,22060584,22061856,22063085,22064354,22065648,22066920,22068224,22069995,22071581,22073282,22074860,22076391,22077842,22079520,22081151,22082803,22084184,22085407,22086570,22087865,22089120,22090370,22091793,22093237,22095089,22096523,22097763,22099146,22100343,22101582,22102711,22103987,22105372,22107001,22108716,22110355,22111989,22113425,22114813,22116275,22117601,22119416,22120888,22122301,22123550,22124789,22126066,22127241,22128496,22129841,22131551,22133256,22134977,22136642,22138163,22139810,22141531,22143024,22144706,22146255,22147178,22147435,22148548,22150116,22151079,22151346,22152375,22153933,22154871,22155130,22156178,22157738,22158702,22158959,22160013,22161550,22162542,22162799,22163801,22165342,22166321,22166578,22167465,22168701,22169986,22171254,22172684,22174016,22175256,22176611,22177897,22179327,22180633,22181943,22183207,22184637,22185961,22187267,22188589,22189874,22191367,22192722,22193993,22195265,22196500,22197765,22199041,22200277,22201520,22203095,22204261,22205428,22206667,22207857,22209086,22210281,22211450,22212694,22214160,22215428,22216667,22217949,22219209,22220485,22221731,22222986,22224639,22226346,22228097,22229840,22231486,22233160,22234864,22236627,22238455,22239643,22240980,22242300,22243680,22245004,22246426,22247674,22249062,22250391,22251757,22253107,22254452,22255813,22257207,22258597,22259990,22261839,22263509,22265096,22266682,22268337,22269931,22271438,22272917,22274162,22275533,22276930,22278376,22279958,22281482,22282912,22284426,22286129,22288050,22289729,22291334,22292898,22294535,22296117,22297657,22299146,22300412,22301812,22303174,22304603,22306188,22307704,22309160,22310682,22312343,22314273,22315934,22317536,22319132,22320771,22322352,22323904,22325435,22326727,22328132,22329478,22330863,22332408,22333912,22335407,22336946,22338590,22340469,22342183,22343776,22345397,22347000,22348579,22350152,22351634,22352952,22354300,22355663,22357038,22358568,22360089,22361602,22363092,22364682,22366527,22367987,22369184,22370311,22371249,22372134,22373071,22374150,22375107,22376235,22377419,22378692,22379888,22380874,22381833,22382867,22383940,22385121,22386675,22387870,22389031,22390014,22390863,22391814,22392877,22393850,22394952,22396081,22397349,22398551,22399580,22400514,22401541,22402599,22403677,22405697,22407613,22409515,22411453,22413426,22415417,22417361,22419290,22421161,22422990,22424773,22426578,22428468,22430388,22432336,22434275,22436241,22437701,22439678,22441589,22443552,22445550,22447519,22449459,22451430,22453411,22455299,22457061,22458811,22460590,22462380,22464137,22465956,22467734,22469472,22471246,22473008,22474810,22476553,22478236,22479994,22482005,22483952,22485830,22487703,22489611,22491571,22493076,22493805,22494734,22496726,22498719,22500727,22502710,22504651,22506640,22508620,22510577,22512585,22514544,22516495,22518473,22520443,22522432,22524385,22526346,22528309,22530066,22531629,22533199,22534778,22536343,22537911,22539463,22541034,22542725,22544512,22546147,22547844,22549416,22551100,22552938,22554748,22556587,22558400,22560038,22561574,22563123,22564613,22566324,22567980,22569714,22571286,22573044,22574672,22576372,22578062,22579828,22581666,22583495,22585345,22587227,22589020,22590680,22592383,22593968,22595805,22597628,22599455,22601282,22603128,22604659,22606265,22607855,22609401,22611075,22612756,22614484,22616125,22617880,22619601,22621396,22623133,22624949,22626484,22628072,22629767,22631515,22633145,22634715,22636562,22638162,22639932,22641626,22643443,22645080,22646784,22648357,22650061,22651776,22653284,22654800,22656537,22658177,22659813,22661106,22662765,22664711,22666469,22667501,22669407,22671333,22672902,22674595,22676139,22678172,22680176,22682191,22683893,22685311,22686553,22687793,22689092,22690299,22691856,22693463,22695043,22696550,22697958,22699448,22700930,22702426,22703964,22705378,22706584,22707560,22708465,22709446,22710819,22711889,22712856,22714041,22715116,22716938,22718752,22720624,22722509,22724315,22726156,22727936,22729730,22731684,22733453,22734985,22736636,22738294,22740002,22741762,22743519,22745208,22747062,22748884,22750763,22752632,22754415,22756289,22758054,22759854,22761820,22763602,22765214,22766873,22768513,22770272,22772035,22773831,22775520,22777366,22779164,22781065,22782853,22784786,22786550,22788507,22790290,22792218,22794198,22796056,22798053,22800012,22801902,22803856,22805867,22807806,22809803,22811648,22813332,22815107,22816928,22818711,22820526,22822366,22824212,22825875,22827448,22828737,22830077,22831739,22833314,22834959,22836039,22837280,22838331,22839397,22839754,22840104,22841445,22842713,22844008,22845320,22846674,22848044,22849360,22850695,22851974,22853395,22854747,22856004,22857418,22858694,22860135,22861493,22862799,22864155,22865472,22866928,22868540,22869596,22871104,22872479,22874378,22876293,22878260,22880305,22882334,22884344,22886334,22888294,22890282,22891893,22893465,22894987,22896490,22898216,22899777,22901533,22903266,22904841,22906594,22908380,22909965,22911747,22913274,22914869,22916507,22918149,22919801,22921610,22923519,22925416,22927212,22928819,22930558,22932411,22934345,22936302,22938153,22939794,22941571,22943420,22945344,22947161,22948903,22950591,22952493,22954401,22956309,22958181,22959779,22961584,22963498,22965460,22967396,22969300,22970979,22972706,22974612,22976489,22978361,22980106,22981337,22982336,22983305,22984315,22985783,22987292,22988903,22990485,22992127,22993757,22995441,22997079,22998682,23000311,23002139,23003828,23005576,23007307,23008920,23010622,23012261,23013912,23015579,23017295,23019229,23020952,23022669,23024414,23026113,23027895,23029607,23031209,23032954,23034605,23036371,23038004,23039617,23041317,23042948,23044471,23046444,23048343,23050197,23052114,23054065,23055991,23057870,23059553,23061314,23062948,23064612,23066420,23068347,23070216,23072117,23074017,23075915,23077904,23079830,23081776,23083707,23085623,23087433,23089218,23091001,23092814,23094727,23096677,23098554,23100432,23102369,23104263,23106124,23107988,23109589,23110952,23112239,23113691,23115349,23116957,23118582,23120228,23122147,23124016,23125859,23127707,23129556,23131388,23133232,23135101,23136978,23138860,23140762,23142656,23143371,23143900,23144538,23145625,23146659,23147660,23149001,23150268,23151554,23152595,23154383,23156065,23157706,23159248,23161030,23162589,23164253,23165952,23167485,23169012,23170635,23172097,23173390,23174696,23176279,23177961,23179613,23181334,23183047,23184771,23186451,23188048,23189739,23191097,23192495,23194009,23195450,23196982,23198431,23199945,23201397,23202891,23204279,23205646,23206975,23208838,23210639,23212480,23214363,23216230,23218071,23219933,23221738,23223633,23225450,23227267,23229108,23231027,23232927,23234789,23236644,23238501,23240485,23242487,23244450,23246363,23248262,23250137,23252101,23254019,23255947,23257858,23259788,23261688,23263545,23265401,23267284,23269179,23271056,23272805,23274277,23275753,23277404,23279045,23280642,23282250,23283872,23285472,23287106,23288738,23290337,23292102,23293755,23295398,23297061,23298706,23300347,23302008,23303662,23305419,23307056,23308718,23310338,23311998,23313620,23315251,23316888,23318521,23320445,23322307,23324178,23326013,23327878,23329756,23331607,23333477,23335349,23337255,23339122,23340943,23342779,23344616,23346470,23348317,23350154,23352114,23353993,23355828,23357684,23359546,23361394,23363236,23365100,23366978,23368508,23369896,23371322,23372750,23374037,23375496,23376916,23378496,23379852,23381160,23382697,23384167,23385596,23387025,23388919,23390808,23392638,23394447,23396240,23398082,23399933,23401839,23403795,23405418,23407166,23408895,23410577,23412280,23413914,23415757,23417321,23419039,23420642,23422354,23424113,23425835,23427562,23429336,23431040,23432675,23434318,23436223,23438057,23439893,23441738,23443345,23445185,23447035,23448902,23450725,23452615,23454241,23455991,23457754,23459509,23461303,23463023,23464699,23466484,23468163,23469865,23471682,23473272,23475028,23476767,23478552,23480280,23482060,23483738,23485435,23487132,23488766,23490462,23492182,23493492,23494685,23495969,23497175,23498431,23499714,23500882,23502326,23503990,23505542,23507023,23508675,23510349,23511896,23513423,23515061,23516596,23518164,23519711,23521287,23523163,23525034,23526965,23528825,23530712,23532431,23533993,23535392,23537062,23538818,23540620,23542409,23544131,23545878,23547356,23548865,23550614,23552308,23554093,23555536,23556894,23558446,23560279,23562184,23563647,23565102,23566697,23568114,23569661,23571207,23572648,23574324,23575812,23577282,23578786,23580314,23581807,23583389,23584861,23586306,23587866,23589349,23590949,23592446,23593938,23595436,23597099,23598641,23600101,23601636,23602983,23604466,23605909,23607450,23609341,23611202,23613045,23614827,23616649,23618467,23620225,23621947,23623637,23625230,23627040,23628726,23630505,23632294,23633903,23635682,23637460,23639105,23640998,23642927,23644778,23646653,23648546,23650296,23652221,23653933,23655683,23657434,23659072,23660804,23662557,23664327,23665922,23667688,23669434,23671200,23672872,23674670,23676332,23678184,23679862,23681518,23683191,23684848,23686557,23688274,23690108,23691750,23693442,23695102,23696895,23698581,23700316,23701980,23703687,23705422,23707175,23708673,23710124,23711781,23713544,23715213,23716961,23718740,23720307,23721751,23723354,23724858,23726349,23727753,23729265,23730778,23732329,23733986,23735777,23737466,23739239,23741008,23742669,23744360,23746102,23747713,23749331,23751034,23752646,23754353,23755959,23757567,23759209,23760928,23762577,23764209,23765802,23767503,23769124,23770779,23772434,23774064,23775791,23777405,23779063,23780680,23782360,23783995,23785625,23787237,23788948,23790587,23792212,23793846,23795537,23797208,23798834,23800460,23802062,23803812,23805433,23807142,23808866,23810644,23812274,23813899,23815529,23817275,23818861,23820508,23822212,23823908,23825706,23827307,23828939,23830586,23832296,23833977,23835854,23837614,23839285,23840924,23842719,23844478,23846126,23847843,23849668,23851467,23853168,23855098,23856952,23858819,23860772,23862772,23864721,23866665,23868634,23870633,23872339,23874192,23876146,23878138,23880128,23882139,23884132,23885939,23887893,23889708,23891515,23893441,23895449,23897478,23899477,23901491,23903464,23905380,23907315,23909223,23911119,23913031,23914936,23916886,23918833,23920778,23922592,23924471,23926370,23928261,23930105,23931832,23933435,23935081,23937041,23938807,23940607,23942188,23943798,23945424,23947052,23948588,23950392,23951788,23953198,23954527,23955917,23957305,23958817,23960349,23961652,23963095,23964636,23966118,23967514,23968964,23970440,23971935,23973408,23974875,23976559,23978285,23980103,23981747,23983473,23985202,23986964,23988685,23990362,23992079,23993772,23995532,23997187,23998851,24000529,24002204,24003880,24005559,24007246,24008904,24010552,24012299,24013995,24015627,24017254,24018988,24020608,24022266,24023920,24025706,24027616,24029510,24031424,24033355,24035246,24037172,24039056,24040961,24042873,24044646,24046420,24048222,24050179,24052185,24054161,24056203,24058255,24060298,24062335,24064361,24066377,24068416,24070450,24072497,24074542,24076599,24078647,24080680,24082728,24084777,24086615,24088462,24090333,24092247,24094168,24096050,24097920,24099801,24101506,24102966,24104468,24105878,24107556,24109183,24110796,24112307,24113894,24115544,24117082,24118724,24120233,24121658,24123237,24124859,24126408,24127967,24129634,24131063,24132468,24134033,24135478,24137247,24139120,24140912,24142661,24144314,24145943,24147837,24149662,24151529,24153357,24155152,24156943,24158630,24160445,24162288,24164062,24165736,24167736,24169722,24171726,24173614,24175511,24177446,24179052,24180722,24182480,24184207,24185936,24187687,24189495,24191226,24192871,24194651,24196334,24198032,24199724,24201266,24202810,24204321,24205833,24207335,24208866,24210384,24211906,24213401,24214960,24216470,24217974,24219520,24221017,24222561,24224088,24225608,24227091,24228550,24229883,24231190,24232463,24233731,24235679,24237618,24239544,24241418,24243378,24245330,24247273,24249206,24251008,24252346,24253675,24254992,24256313,24257638,24258959,24260280,24261747,24263341,24264799,24266269,24267883,24269534,24271023,24272605,24274154,24275886,24277564,24279221,24280919,24282521,24284214,24285854,24287505,24289233,24290805,24292049,24293315,24294625,24295898,24297214,24298464,24299661,24301132,24302365,24303414,24304472,24305573,24306808,24307978,24309004,24310364,24311853,24313118,24314413,24315642,24316892,24318109,24319412,24320797,24322176,24323667,24324951,24326242,24327588,24328932,24330248,24331545,24332880,24334667,24336235,24337882,24339626,24341329,24342921,24344438,24345628,24347578,24349564,24350981,24352078,24353323,24354507,24355863,24356921,24358590,24360548,24362482,24364037,24365807,24367618,24369429,24371161,24372751,24374697,24375723,24376192,24376784,24377285,24377832,24378306,24378835,24379348,24380274,24380714,24381893,24383206,24384635,24385956,24387156,24388275,24388677,24389596,24390229,24391640,24393092,24394600,24396111,24397521,24398490,24399260,24400591,24401748,24403175,24404329,24405799,24407145,24408349,24409529,24411368,24413149,24414867,24416600,24418432,24418574,24418705,24419928,24420459,24421103,24421774,24422343,24422800,24423502,24424132,24424655,24425949,24426836,24427837,24429270,24430685,24432068,24433485,24434908,24436497,24438069,24439766,24441354,24442974,24444539,24446148,24447983,24449514,24450577,24451730,24452941,24454160,24455495,24456751,24458073,24459362,24460807,24462338,24463944,24465574,24467258,24468808,24470166,24471589,24472918,24473681,24473706,24473736,24473761,24474346,24474941,24476250,24476835,24478367,24479982,24481656,24483241,24484872,24486021,24487691,24489189,24490775,24492297,24494028,24495937,24497877,24499778,24501737,24503638,24505275,24506134,24507332,24508844,24510106,24511067,24512035,24513297,24514633,24516068,24517498,24518988,24520526,24522071,24523722,24525445,24527170,24528719,24530310,24531833,24533397,24535006,24536491,24538048,24539799,24541854,24543906,24545947,24547947,24549832,24551790,24553814,24555740,24557484,24559413,24561292,24563253,24565253,24567288,24569280,24571307,24573304,24575323,24577315,24579345,24581394,24583405,24585130,24587012,24589012,24591020,24593016,24594925,24596603,24598151,24599397,24600609,24601788,24603298,24605310,24607191,24608910,24610677,24612570,24614443,24616176,24617962,24619736,24621603,24623539,24625514,24627474,24629450,24631417,24633379,24635388,24637233,24638766,24640321,24641870,24643385,24644887,24646474,24647982,24649492,24650871,24652265,24653598,24654929,24656217,24657543,24658888,24660482,24662510,24664507,24666535,24668509,24670520,24672463,24674408,24676359,24678374,24680188,24681915,24683564,24685229,24686935,24688596,24689738,24689911,24690409,24691671,24692973,24694240,24695182,24696240,24697174,24698255,24699486,24701147,24702849,24704414,24706142,24707883,24709538,24711063,24712667,24714230,24715847,24717403,24719012,24720503,24721978,24723170,24724532,24725602,24726776,24728020,24729344,24730585,24731944,24733351,24734901,24736491,24738081,24739536,24741000,24742419,24743623,24744608,24745753,24747349,24748842,24749509,24750747,24752025,24753436,24754968,24756425,24757938,24759379,24760512,24761857,24763286,24764810,24766518,24768250,24770111,24771934,24773716,24775495,24777055,24778704,24780304,24781941,24783527,24785143,24786636,24788202,24789711,24791150,24792381,24793793,24795320,24796894,24798250,24799639,24801015,24802420,24803786,24804977,24805467,24806119,24806562,24807419,24808860,24810393,24811937,24813455,24814869,24816359,24817907,24819374,24820763,24822085,24823224,24824411,24825732,24827143,24828659,24829972,24831048,24831841,24832105,24833137,24834887,24836786,24838579,24840333,24841889,24843214,24844259,24845455,24846998,24848593,24850166,24851728,24853284,24854862,24856387,24858141,24859878,24861704,24863410,24865239,24866996,24868886,24870629,24872331,24873728,24875136,24876511,24877936,24879356,24880868,24882543,24884241,24885788,24887332,24888849,24890310,24891857,24893384,24894824,24896532,24898437,24900199,24901759,24902931,24903660,24904544,24905397,24906607,24908137,24909747,24911415,24913137,24914602,24916223,24917523,24918826,24920060,24921013,24921559,24922413,24923213,24924073,24924682,24925749,24927140,24928260,24928790,24929369,24929859,24930984,24932757,24934350,24935437,24936557,24937559,24938771,24940160,24941488,24942582,24943701,24944641,24945763,24947206,24948679,24950122,24951561,24952990,24954575,24956260,24958034,24959686,24961505,24963378,24965173,24966735,24968079,24969085,24970300,24971449,24972606,24973587,24974639,24975501,24976631,24977617,24978833,24980077,24981164,24981625,24982222,24982849,24983530,24984028,24984596,24985208,24985859,24986377,24986983,24987595,24988281,24988816,24989445,24990053,24990710,24991141,24991676,24992237,24993429,24995297,24996914,24997948,24999090,25000116,25001253,25002279,25003379,25004498,25005896,25007681,25009302,25010999,25012724,25014378,25016053,25017762,25019280,25020413,25021804,25023471,25025131,25026838,25028602,25030471,25031754,25032000,25032382,25032649,25033008,25033193,25033498,25033723,25034078,25034130,25034402,25034427,25034620,25034766,25035050,25035330,25035633,25035824,25036605,25038083,25039601,25041269,25042685,25043748,25044849,25045930,25047117,25048280,25049641,25051133,25052668,25054119,25055824,25057684,25059552,25061244,25062944,25064306,25065939,25067579,25069182,25070559,25072000,25073251,25074526,25076214,25077759,25079278,25080530,25082134,25083583,25085071,25086552,25087894,25089171,25090615,25092069,25093487,25095013,25096524,25098036,25099286,25100436,25101736,25103083,25104417,25105644,25106968,25108029,25109155,25110181,25111715,25113220,25114716,25116204,25117741,25119274,25120800,25122311,25123276,25124035,25124604,25125169,25125929,25126637,25127391,25128065,25128692,25129236,25129794,25130485,25131189,25131845,25132545,25133257,25133977,25134663,25135432,25136245,25136999,25137646,25138269,25138752,25139858,25141886,25143806,25145564,25147319,25149009,25150683,25152380,25154090,25155803,25157499,25159194,25160885,25162800,25164724,25166528,25168296,25169984,25171696,25173458,25175164,25176910,25177865,25178873,25180249,25182047,25183479,25185231,25187068,25188609,25190057,25191532,25193008,25194485,25195954,25197449,25198920,25200416,25201608,25202208,25202732,25203320,25203981,25204579,25205028,25205593,25206213,25206786,25207378,25207952,25208568,25209139,25209646,25209946,25210347,25210933,25211311,25211560,25212039,25212655,25212992,25213343,25213752,25214166,25214595,25216026,25217951,25219782,25221450,25223110,25224792,25226464,25228137,25229807,25231467,25233163,25234846,25236535,25238219,25240150,25241974,25243624,25245312,25246990,25248756,25250523,25252196,25253885,25254858,25255574,25256279,25257720,25259609,25261253,25262999,25264547,25266328,25268129,25269678,25271203,25272682,25274198,25275682,25277169,25278672,25280175,25281678,25283167,25284679,25286175,25287663,25289151,25290651,25292137,25293645,25295144,25296639,25298104,25299498,25300111,25300412,25300980,25301585,25302236,25302737,25303328,25303983,25304551,25304826,25305463,25305953,25306399,25306838,25307344,25307601,25307963,25308586,25309205,25309837,25310478,25311211,25311762,25312437,25313080,25313578,25314282,25314686,25315239,25315503,25316082,25316532,25316988,25317312,25317782,25318272,25318721,25319202,25319721,25320149,25320582,25321092,25321638,25322196,25322799,25323303,25323659,25324227,25324592,25325152,25325571,25325950,25326331,25326892,25327263,25327814,25328345,25328566,25328894,25329493,25331485,25333482,25335528,25337520,25339528,25341560,25343267,25344939,25346636,25348321,25350021,25351735,25353451,25355129,25356825,25358496,25360182,25361872,25363550,25365237,25366925,25368627,25370316,25372024,25373758,25375475,25377173,25378855,25380552,25382263,25383950,25385639,25387311,25389287,25391335,25393383,25395187,25396760,25398462,25400214,25401887,25403619,25405368,25407025,25408716,25410447,25412155,25413801,25415477,25417128,25418864,25420607,25422296,25423965,25425638,25427331,25428915,25429856,25430797,25431701,25432523,25433216,25434218,25435315,25436402,25437428,25438687,25439834,25440988,25441875,25443011,25443898,25444984,25445786,25446701,25447932,25448863,25450853,25452815,25454692,25456444,25458012,25459463,25461031,25462514,25464037,25465573,25467056,25468516,25470035,25471534,25473025,25474403,25474907,25475408,25475783,25476230,25476665,25477083,25477557,25477907,25478568,25479235,25479749,25480308,25480902,25481384,25481919,25482181,25482397,25482533,25482934,25483443,25484107,25484587,25485091,25485623,25486039,25486479,25486982,25487340,25487564,25487847,25489764,25491812,25493709,25495418,25497129,25498798,25500497,25502201,25503910,25505593,25507293,25508976,25510756,25512469,25514138,25515868,25517916,25519755,25521504,25523140,25524832,25526597,25528332,25529997,25531793,25533595,25535226,25536749,25537747,25538942,25540300,25541865,25543782,25545441,25546913,25548466,25549946,25551447,25552946,25554422,25555914,25557408,25558890,25560340,25561787,25562036,25562289,25562515,25562744,25563266,25563703,25563920,25564175,25564538,25564988,25565285,25565687,25566021,25566333,25566443,25566673,25566788,25567185,25567467,25567933,25568424,25568693,25568989,25569397,25569906,25570449,25570738,25571080,25572701,25574699,25576709,25578380,25580067,25581793,25583456,25585157,25586846,25588500,25590162,25591853,25593561,25595267,25596987,25598888,25600936,25602722,25604580,25606303,25608110,25609833,25611520,25613291,25615097,25616919,25618796,25620097,25620669,25621199,25622086,25623164,25623954,25625368,25627082,25628791,25630529,25631995,25633473,25634981,25636487,25637967,25639432,25640138,25640559,25640921,25641273,25641590,25642057,25642371,25642792,25643241,25643712,25644037,25644504,25644878,25645148,25645396,25645826,25646280,25647651,25649618,25651350,25653035,25654739,25656411,25658089,25659782,25661465,25663177,25665196,25666976,25668723,25670370,25672081,25673867,25675691,25677486,25678356,25679642,25681022,25682610,25684212,25685763,25687248,25688746,25690075,25690652,25691159,25691612,25692087,25692626,25693115,25693674,25694201,25694538,25694963,25695308,25696415,25698318,25699976,25701628,25703277,25704960,25706631,25708609,25710311,25711927,25713644,25714994,25716436,25718063,25719649,25721211,25722659,25724179,25725668,25727162,25728663,25730151,25731645,25733130,25734644,25736128,25737646,25739135,25740621,25742122,25743611,25744922,25745446,25745910,25746377,25746685,25746937,25747413,25747895,25748283,25748546,25749096,25749575,25750057,25750497,25750894,25751304,25751700,25752159,25752531,25753018,25753321,25753485,25753671,25754107,25754381,25754674,25754880,25755074,25755402,25755718,25756020,25756391,25756642,25757020,25757232,25757601,25758001,25758387,25758807,25759140,25759559,25759902,25760394,25760703,25761129,25761450,25761735,25762093,25762478,25762744,25763224,25763745,25764174,25764975,25766959,25768900,25770856,25772837,25774731,25776389,25778057,25779731,25781420,25783112,25784794,25786462,25788136,25789852,25791578,25793257,25794932,25796600,25798281,25799948,25801625,25803296,25804979,25806645,25808325,25809995,25811677,25813349,25815294,25817342,25819340,25820949,25822562,25824205,25825857,25827485,25829206,25831004,25832692,25834424,25836106,25837786,25839379,25841015,25842686,25844394,25846079,25847718,25848616,25849236,25849903,25850512,25851129,25851770,25852769,25854137,25855666,25856818,25857961,25858963,25860430,25861915,25863432,25864674,25866165,25867535,25869016,25870904,25872712,25874545,25876320,25877916,25879456,25880929,25882398,25883880,25885377,25886849,25888364,25889869,25891352,25892848,25894351,25895485,25896032,25896526,25897184,25897849,25898376,25898890,25899342,25899805,25900186,25900362,25900848,25901115,25901585,25902055,25902677,25903116,25903415,25903870,25904464,25905033,25905717,25906334,25906926,25907262,25907790,25908039,25908441,25908994,25909682,25910408,25911063,25911460,25911828,25912204,25912742,25913048,25913211,25914672,25916653,25918680,25920651,25922348,25924069,25925729,25927438,25929131,25930826,25932512,25934222,25935917,25937615,25939330,25941082,25942772,25944492,25946192,25947914,25949961,25952009,25953786,25955527,25957273,25959033,25960831,25962606,25964373,25966134,25967861,25969669,25971433,25973215,25974984,25976468,25977425,25978296,25979570,25980944,25982543,25984047,25985620,25987567,25989326,25990914,25992483,25994185,25995706,25997194,25998677,26000181,26001677,26003169,26004665,26006156,26007632,26009121,26010620,26012127,26013613,26015102,26016566,26018052,26019519,26020997,26022481,26023986,26025484,26026737,26027326,26027989,26028672,26029210,26029831,26030395,26030919,26031574,26032193,26032733,26033253,26033603,26034034,26034583,26035154,26035608,26036025,26036536,26037111,26037565,26038224,26038661,26039247,26039856,26040227,26040603,26041191,26041656,26042182,26042782,26043116,26043670,26044051,26044462,26044943,26045446,26045804,26046107,26046468,26046973,26047450,26047990,26048513,26048865,26049138,26049627,26050033,26050332,26050816,26051153,26051377,26051693,26052043,26052461,26052975,26053465,26053888,26054120,26054716,26055168,26055452,26055774,26056142,26056626,26057045,26057342,26057657,26058254,26058760,26059160,26059586,26060032,26060368,26061001,26061591,26062300,26064355,26066407,26068456,26070504,26072559,26074612,26076622,26078360,26080081,26081834,26083580,26085362,26087129,26088877,26090576,26092323,26094055,26095785,26097522,26099208,26100944,26102697,26104441,26106210,26107953,26109714,26111468,26113212,26114988,26116695,26118411,26120140,26121909,26123668,26125446,26127190,26128921,26130686,26132451,26134179,26135930,26137771,26139819,26141867,26143915,26145963,26147884,26149572,26151374,26153198,26155062,26156956,26158722,26160538,26162337,26164155,26165922,26167616,26169410,26171253,26173050,26174874,26176699,26178507,26180317,26182171,26184023,26185823,26187589,26189423,26191280,26193147,26194983,26196824,26198658,26200501,26202383,26204240,26206032,26207390,26208261,26209058,26209922,26210612,26211541,26212912,26214221,26215629,26216742,26217953,26219460,26220679,26221591,26222404,26223308,26224533,26225852,26227409,26228711,26230698,26232645,26234495,26236245,26237874,26239336,26240976,26242545,26244147,26245660,26247144,26248644,26250152,26251671,26253189,26254690,26256127,26257604,26259098,26260596,26262056,26263553,26265035,26266559,26268060,26269547,26271053,26272557,26274041,26275535,26276359,26276872,26277547,26278127,26278639,26279098,26279439,26280049,26280630,26281250,26281893,26282454,26283063,26283753,26284239,26284759,26285185,26285762,26286343,26286805,26287202,26287645,26288133,26288702,26289296,26289670,26290170,26290621,26291008,26291614,26292015,26292231,26292475,26292886,26293324,26293730,26294068,26294501,26294719,26295187,26295579,26296069,26296362,26296662,26297120,26297498,26298026,26298318,26298676,26298823,26299288,26299702,26300014,26300168,26300376,26300573,26300846,26301148,26301698,26302191,26302671,26303252,26303667,26304143,26304726,26306764,26308747,26310693,26312676,26314658,26316574,26318210,26319890,26321577,26323259,26324922,26326635,26328343,26330036,26331720,26333393,26335042,26336701,26338392,26340111,26341802,26343479,26345186,26346893,26348584,26350260,26351939,26353634,26355295,26356982,26358640,26360315,26361977,26363704,26365752,26367800,26369783,26371395,26373096,26374811,26376546,26378325,26380082,26381754,26383385,26385074,26386859,26388584,26390380,26392095,26393837,26395558,26397280,26398974,26400688,26402397,26404153,26405526,26406393,26407086,26407699,26408222,26408966,26409696,26410686,26411757,26412649,26413360,26414094,26414739,26415490,26416207,26416861,26417625,26418326,26419053,26419440,26419791,26420559,26421198,26422127,26422833,26423372,26423891,26424678,26426212,26426884,26428490,26430163,26431954,26433741,26435514,26437170,26438835,26440331,26441961,26443585,26445115,26446598,26448080,26449564,26451045,26452516,26453996,26455483,26456960,26458413,26459897,26461390,26462848,26464331,26465798,26467270,26468736,26470218,26471697,26473153,26474626,26476116,26477605,26479088,26480563,26482050,26483549,26485020,26486492,26487945,26489424,26490866,26492340,26493803,26495267,26496738,26498220,26499667,26501126,26502600,26504062,26505550,26507038,26508525,26509989,26511447,26512917,26514403,26515841,26517292,26518717,26520128,26521560,26523033,26524528,26526002,26527427,26528884,26530366,26531824,26533305,26534763,26536252,26537740,26539197,26540684,26542113,26543582,26545053,26546528,26548020,26549496,26550964,26552404,26553728,26554301,26554780,26555226,26555858,26556314,26556781,26557072,26557573,26558072,26558321,26558630,26559235,26559809,26560293,26560916,26561337,26561830,26562468,26563064,26563578,26564248,26564683,26565302,26565847,26566233,26566765,26567368,26567966,26568521,26568950,26569403,26569851,26570360,26570894,26571396,26571844,26572344,26572901,26573420,26573956,26574568,26575108,26575798,26576306,26576621,26576883,26577412,26577904,26578374,26578968,26579551,26580199,26580718,26581267,26581846,26582290,26582880,26583250,26583664,26584199,26584647,26585129,26585549,26586088,26586595,26586951,26587388,26587858,26588272,26588854,26589215,26589760,26590157,26590749,26591367,26591956,26592600,26593212,26593815,26594345,26594919,26595448,26595952,26596570,26597102,26597384,26597821,26598135,26598655,26599093,26599585,26600072,26600413,26600713,26601228,26601616,26601931,26602392,26602902,26603405,26603716,26604137,26604667,26605263,26605760,26606257,26606847,26607217,26607456,26607930,26608280,26608491,26608697,26609093,26609671,26610195,26610723,26611066,26611442,26611929,26612244,26612576,26612868,26613223,26613557,26614132,26614547,26615019,26615527,26615979,26616552,26617173,26617671,26618215,26618737,26619304,26619806,26620210,26620664,26621133,26621715,26622286,26622830,26623339,26623796,26624307,26624835,26625141,26625394,26625877,26626351,26626783,26627354,26627878,26628373,26628917,26629380,26629708,26630066,26630618,26631133,26631652,26632082,26632548,26633007,26633424,26633899,26634536,26635113,26635579,26636049,26636546,26637012,26637470,26638081,26638692,26639217,26639615,26639952,26640478,26640961,26641346,26641852,26642465,26642811,26643134,26643541,26643856,26644162,26644446,26644801,26645202,26645550,26645863,26646084,26646645,26647173,26647799,26648318,26648835,26649148,26649494,26650108,26650629,26651143,26651621,26652142,26652650,26653141,26653630,26654136,26654579,26655093,26655410,26655767,26656157,26656512,26657154,26657711,26658236,26658660,26659086,26659628,26660117,26660503,26661107,26661683,26662131,26662619,26663081,26663564,26664051,26664547,26664965,26665453,26665944,26666081,26666277,26666795,26667311,26667841,26668428,26668881,26669488,26670028,26670515,26671035,26671408,26672200,26674112,26676053,26678104,26680019,26681947,26683897,26685900,26687845,26689833,26691800,26693748,26695741,26697672,26699627,26701626,26703593,26705520,26707535,26709588,26711448,26713116,26714743,26716379,26718051,26719742,26721457,26723173,26724897,26726589,26728256,26729951,26731621,26733320,26734999,26736691,26738361,26740049,26741731,26743406,26745082,26746754,26748445,26750131,26751825,26753514,26755211,26756875,26758559,26760233,26761909,26763594,26765282,26766957,26768634,26770314,26771999,26773687,26775357,26777053,26778743,26780410,26782067,26783714,26785387,26787091,26788741,26790431,26792100,26793778,26795413,26797077,26798758,26800428,26802079,26803751,26805462,26807153,26808835,26810522,26812212,26813880,26815552,26817236,26818904,26820559,26822280,26823996,26825679,26827349,26829012,26830674,26832345,26834042,26835686,26837345,26839020,26840670,26842310,26843971,26845644,26847322,26848976,26850647,26852325,26853983,26855678,26857400,26859066,26860774,26862468,26864155,26865882,26867552,26869209,26870912,26872630,26874320,26876009,26877683,26879376,26881050,26882732,26884413,26886114,26887806,26889474,26891381,26893429,26895477,26897525,26899573,26901621,26903669,26905717,26907765,26909813,26911861,26913710,26915327,26916913,26918615,26920373,26922158,26923908,26925618,26927366,26929123,26930782,26932441,26934114,26935804,26937516,26939171,26940913,26942662,26944337,26946056,26947765,26949517,26951248,26952967,26954647,26956231,26957957,26959667,26961373,26963017,26964732,26966343,26968047,26969707,26971418,26973099,26974719,26976447,26978167,26979905,26981671,26983444,26985173,26986824,26988536,26990233,26991944,26993704,26995437,26997123,26998737,27000460,27002247,27003916,27005446,27006906,27008484,27010107,27011816,27013565,27015222,27017003,27018820,27020517,27022252,27023954,27025612,27027416,27029174,27030844,27032496,27034245,27035984,27037752,27039542,27041243,27042957,27043949,27044822,27045546,27046450,27047341,27048023,27048830,27049545,27050154,27050846,27051420,27052013,27052600,27053287,27053497,27053831,27054520,27055202,27055966,27056621,27057507,27058169,27058802,27059560,27060346,27061148,27061899,27062648,27063427,27064259,27064952,27065836,27066690,27067448,27068236,27069034,27069940,27070609,27071398,27072094,27072843,27073618,27074310,27075092,27075858,27076524,27077375,27078033,27078860,27079735,27080345,27080908,27081216,27081678,27082313,27082850,27083722,27084320,27084697,27085415,27085963,27086803,27087675,27088603,27089349,27090008,27090427,27090933,27091553,27092174,27092984,27093581,27094127,27094750,27095290,27095929,27096417,27097051,27097818,27098602,27099228,27099990,27100828,27101357,27101890,27102787,27103267,27103805,27104288,27105198,27105996,27106864,27107504,27108208,27108961,27109549,27110335,27110977,27111718,27112438,27113013,27113649,27114369,27114976,27115768,27116316,27116821,27117338,27117779,27118621,27119411,27120279,27121207,27121796,27122539,27123349,27124101,27124382,27125270,27126100,27126787,27127428,27128107,27128907,27129586,27130240,27130882,27131652,27132350,27132946,27133671,27134144,27134748,27135495,27136273,27136656,27137025,27137364,27137647,27137967,27138256,27138667,27139066,27139359,27139646,27139948,27140241,27140561,27140979,27141477,27141972,27142705,27143195,27143533,27144078,27144814,27145343,27146059,27146739,27147269,27147961,27148751,27149315,27149960,27150694,27151631,27152154,27152570,27152969,27153432,27153872,27154193,27154646,27154975,27155201,27155715,27156043,27156375,27156685,27156927,27157128,27157716,27158275,27158753,27159408,27160122,27160817,27161173,27161390,27161627,27161878,27162118,27162271,27162457,27162677,27163285,27164612,27166519,27167827,27169743,27171635,27173580,27175497,27177403,27179330,27181270,27183220,27185134,27187114,27189027,27190932,27192794,27194606,27196509,27198337,27200214,27201729,27203249,27204721,27206206,27207683,27209176,27210662,27212141,27213641,27215134,27216470,27216940,27217422,27217887,27218421,27218865,27219324,27219849,27220295,27220762,27221041,27221561,27222012,27222529,27222963,27223430,27224021,27224259,27224653,27225081,27225376,27225832,27226162,27226448,27226826,27227211,27227530,27228017,27228260,27228535,27228929,27229348,27230131,27232112,27234065,27236030,27237726,27239406,27241119,27242827,27244519,27246235,27247907,27249622,27251328,27253023,27254707,27256374,27258050,27259731,27261542,27263590,27265445,27267234,27268943,27270756,27272504,27274202,27275980,27277792,27279564,27281294,27282970,27284696,27285893,27286656,27287457,27288569,27290147,27291465,27292812,27293984,27295585,27297240,27298994,27300520,27301966,27303496,27304995,27306462,27307906,27309410,27310905,27312413,27313909,27315345,27315717,27316027,27316494,27316932,27317287,27317991,27318524,27319108,27319629,27320217,27320750,27321233,27321660,27322020,27322260,27322711,27323145,27323514,27323808,27324206,27324528,27325002,27325549,27325889,27326194,27326718,27326972,27327170,27328473,27330476,27332524,27334218,27335904,27337607,27339320,27341054,27342760,27344473,27346152,27347864,27349566,27351254,27352957,27354641,27356537,27358585,27360238,27361866,27363666,27365501,27367347,27369090,27370825,27372608,27374454,27376210,27377994,27379771,27380681,27381436,27382315,27383426,27384435,27385806,27387123,27388699,27390383,27392102,27393690,27395277,27396863,27398361,27399848,27401334,27402821,27404309,27405811,27407298,27408790,27410260,27411726,27413192,27414694,27416159,27417612,27419093,27420591,27422075,27423556,27425040,27426507,27427956,27429427,27430896,27432395,27433869,27435341,27436831,27438314,27439801,27441279,27442765,27444251,27445754,27447239,27448695,27450190,27450923,27451559,27452115,27452771,27453487,27454145,27454792,27455322,27455910,27456445,27457006,27457680,27458263,27458874,27459471,27460122,27460753,27461391,27461923,27462489,27463148,27463810,27464392,27464958,27465487,27466153,27466753,27467357,27467968,27468544,27469039,27469533,27470039,27470709,27471314,27471840,27472390,27472924,27473458,27474028,27474562,27475115,27475668,27476305,27476845,27477246,27477616,27477828,27478198,27478637,27478968,27479503,27479972,27480377,27480833,27481368,27482063,27482589,27482910,27483092,27483301,27483668,27483788,27484015,27484386,27484841,27485330,27485844,27486300,27486823,27487479,27487992,27488586,27489215,27489831,27490436,27490993,27491473,27492019,27492428,27493004,27493487,27494105,27494700,27495255,27495537,27496054,27496549,27497068,27497549,27497859,27498121,27498479,27499074,27499654,27500257,27500822,27501286,27501707,27502312,27502922,27503381,27503963,27504550,27505161,27505711,27506289,27506731,27507324,27508956,27510969,27512952,27514943,27516990,27518891,27520865,27522808,27524795,27526777,27528488,27530208,27531913,27533624,27535335,27537042,27538727,27540428,27542147,27543810,27545529,27547209,27548903,27550600,27552312,27554006,27555699,27557380,27559081,27560787,27562421,27564086,27565746,27567400,27569077,27570753,27572422,27574109,27575813,27577490,27579168,27580843,27582540,27584227,27585925,27587617,27589268,27590937,27592609,27594303,27595976,27597639,27599292,27600990,27602653,27604315,27606340,27608388,27610436,27612484,27614472,27616219,27617996,27619695,27621354,27623018,27624723,27626452,27628236,27629992,27631737,27633483,27635137,27636862,27638581,27640179,27641920,27643549,27645261,27646968,27648712,27650443,27652148,27653896,27655650,27657357,27658958,27660559,27662254,27663994,27665704,27667415,27669112,27670146,27671056,27671959,27672810,27673557,27674395,27675252,27676004,27676898,27677653,27678684,27679686,27680649,27681448,27682420,27683298,27684648,27685660,27686822,27688001,27689045,27690206,27691497,27692591,27693747,27694964,27696398,27697798,27699184,27700130,27701199,27702478,27703225,27704025,27704756,27705271,27706044,27706552,27706969,27707725,27708694,27709627,27710746,27711874,27712994,27713912,27714472,27714982,27715822,27717116,27718090,27719047,27720147,27721625,27723473,27725345,27727197,27729067,27730977,27732910,27734809,27736754,27738592,27740155,27741668,27743155,27744637,27746129,27747613,27749108,27750575,27752042,27753531,27755026,27756517,27757430,27757840,27758034,27758491,27759062,27759406,27759808,27760333,27760813,27761177,27761332,27761497,27761745,27762056,27762337,27762735,27763206,27763550,27764067,27764466,27764762,27765120,27765513,27765972,27766403,27766674,27767050,27767378,27767719,27768165,27768402,27768861,27769216,27769557,27770548,27772532,27774504,27776521,27778176,27779879,27781525,27783236,27784918,27786590,27788291,27789992,27791701,27793385,27795081,27796789,27798490,27800182,27801900,27803948,27805878,27807560,27809256,27811039,27812784,27814518,27816304,27818104,27819877,27821606,27823356,27825062,27826691,27827319,27828148,27829536,27831025,27831717,27832493,27833578,27835227,27837056,27838855,27840391,27841996,27843486,27844977,27846477,27847971,27849477,27850973,27851576,27852071,27852651,27853294,27853784,27854177,27854749,27855208,27855564,27855981,27856409,27856860,27857037,27857376,27857750,27858253,27858644,27858924,27859350,27859740,27860108,27860421,27861213,27863140,27865097,27866798,27868505,27870218,27871905,27873616,27875279,27876946,27878630,27880331,27882042,27884097,27885817,27887605,27889397,27891178,27892904,27894629,27896387,27898242,27899719,27900486,27901258,27902901,27904639,27906140,27907526,27909105,27910778,27912248,27913718,27915079,27916564,27918057,27919534,27921040,27922498,27923975,27925448,27926924,27928435,27929948,27931423,27932915,27934403,27935629,27936196,27936605,27937169,27937767,27938207,27938777,27939196,27939695,27940220,27940723,27941191,27941866,27942447,27942995,27943290,27943692,27944048,27944377,27944839,27945287,27945846,27946231,27946741,27947059,27947288,27947500,27948102,27948723,27949368,27949938,27950549,27951079,27951585,27952160,27952500,27952986,27953524,27953957,27954612,27955171,27955569,27956031,27956544,27956813,27957457,27959452,27961422,27963429,27965453,27967143,27968875,27970586,27972287,27973977,27975658,27977340,27978997,27980708,27982429,27984096,27985772,27987440,27989168,27990883,27992595,27994322,27996056,27997779,27999484,28001485,28003533,28005434,28007154,28008837,28010577,28012317,28014012,28015701,28017389,28019008,28020684,28022420,28024199,28025930,28027717,28029474,28031235,28032420,28033329,28034069,28035066,28036730,28038308,28039641,28041175,28042604,28044231,28045645,28047456,28049290,28051042,28052658,28054074,28055520,28057009,28058490,28059978,28061440,28062934,28064416,28065898,28067370,28068845,28070328,28071823,28073299,28074776,28076164,28076685,28077203,28077802,28078322,28078820,28079204,28079749,28080292,28080853,28081213,28081642,28082145,28082503,28082891,28083130,28083569,28084051,28084577,28085147,28085563,28086093,28086675,28087066,28087499,28087695,28087943,28088150,28088626,28089072,28089403,28089620,28089682,28089893,28090253,28090512,28090741,28091087,28091616,28091999,28092443,28092855,28093100,28093400,28093736,28093989,28095807,28097762,28099678,28101709,28103442,28105139,28106829,28108513,28110200,28111880,28113571,28115287,28116960,28118606,28120271,28121945,28123647,28125326,28127002,28128676,28130349,28132024,28133706,28135383,28137325,28139373,28141339,28143049,28144756,28146430,28148200,28149916,28151684,28153396,28155053,28156744,28158456,28160062,28161834,28163482,28165144,28166959,28168254,28168948,28169673,28170194,28171157,28172038,28172700,28173559,28174417,28175217,28175982,28176487,28177738,28179030,28180808,28182517,28184129,28185770,28187436,28188917,28190406,28191904,28193400,28194906,28196401,28197879,28199326,28200815,28202307,28203814,28205297,28206809,28208291,28209811,28211293,28212787,28214211,28215684,28217191,28218723,28220246,28220853,28221428,28222021,28222343,28222732,28223228,28223767,28224355,28224905,28225304,28225734,28226204,28226760,28227208,28227336,28227921,28228490,28229026,28229476,28229890,28230304,28230620,28230808,28230978,28231494,28232067,28232594,28233119,28233689,28234176,28234652,28235095,28235446,28235824,28236347,28236864,28237392,28237860,28238166,28238484,28238990,28239334,28239685,28239865,28239976,28240167,28240730,28241213,28241684,28242191,28242578,28242910,28243384,28243823,28244200,28244561,28244869,28245030,28245376,28245774,28246208,28246573,28247012,28247510,28247897,28248240,28248692,28249138,28249590,28249981,28251385,28253394,28255426,28257413,28259412,28261465,28263332,28265047,28266731,28268373,28270035,28271730,28273433,28275076,28276767,28278486,28280155,28281865,28283569,28285256,28286930,28288622,28290297,28291982,28293682,28295385,28297091,28298777,28300443,28302105,28303805,28305522,28307219,28308895,28310584,28312288,28314000,28315715,28317743,28319791,28321839,28323876,28325551,28327261,28328869,28330532,28332299,28333819,28335631,28337396,28339186,28340931,28342659,28344364,28346102,28347808,28349507,28351259,28352969,28354662,28356379,28358140,28359995,28361612,28363403,28365192,28367026,28368040,28368662,28369204,28369841,28370376,28371101,28371809,28372541,28373177,28373577,28373798,28374321,28375030,28375715,28376096,28376601,28377052,28377299,28377845,28378285,28378614,28378861,28379246,28380336,28381549,28382079,28383689,28385405,28387177,28388953,28390751,28392495,28394023,28395446,28396932,28398425,28399940,28401446,28402538,28403046,28403279,28403516,28403795,28404211,28404503,28404654,28404913,28405158,28405364,28405876,28406291,28406637,28407015,28407493,28408016,28409674,28411638,28413304,28414979,28416682,28418376,28420053,28421716,28423395,28425296,28427118,28428887,28430632,28432404,28434097,28435728,28436664,28437542,28438709,28439990,28441662,28443314,28444926,28446445,28447956,28449460,28450955,28452426,28453921,28455395,28456893,28458382,28459856,28461332,28462823,28464323,28465810,28467293,28468781,28470254,28471763,28472456,28473058,28473660,28474190,28474737,28475281,28475796,28476320,28476868,28477402,28477940,28478511,28478917,28479528,28480135,28480591,28481214,28481586,28482051,28482657,28483224,28483778,28484288,28484868,28485491,28485784,28486264,28486857,28487363,28487752,28488047,28488563,28489013,28489570,28490115,28490507,28490904,28491342,28491888,28492347,28492788,28493420,28493792,28494396,28494967,28495567,28496197,28496607,28496965,28497618,28498108,28498545,28499070,28499654,28500038,28500659,28501211,28501831,28502426,28503035,28504519,28506569,28508589,28510627,28512664,28514493,28516207,28517918,28519634,28521332,28523016,28524724,28526430,28528138,28529840,28531513,28533189,28534889,28536565,28538279,28539956,28541691,28543365,28545077,28546743,28548409,28550086,28551750,28553456,28555167,28556884,28558710,28560758,28562806,28564646,28566384,28568166,28569909,28571662,28573305,28575013,28576692,28578452,28580280,28582062,28583901,28585729,28587406,28589039,28590801,28592609,28594405,28595795,28596528,28597298,28598156,28598857,28599787,28601502,28603079,28604335,28605654,28607380,28609041,28610563,28611951,28613053,28614764,28616605,28618453,28620189,28622039,28623625,28625135,28626676,28628176,28629663,28631147,28632629,28634113,28635601,28637079,28638550,28640033,28641527,28642985,28644476,28645954,28647442,28648949,28650466,28651950,28653448,28654940,28656443,28657797,28658316,28658385,28658652,28658849,28659335,28659883,28660399,28660849,28661300,28661805,28662436,28663075,28663307,28663735,28664190,28664552,28664964,28665267,28665835,28666392,28666934,28667253,28667636,28667804,28668237,28668545,28668739,28669309,28669647,28670266,28670811,28671258,28671734,28672265,28672797,28673068,28673368,28673929,28674304,28674803,28675409,28676000,28676541,28677032,28677267,28677509,28677938,28678341,28678793,28679318,28679760,28680315,28680924,28681455,28682082,28682667,28683174,28683678,28684114,28684439,28684902,28685373,28685532,28685650,28686121,28686503,28687008,28687303,28687662,28689302,28691341,28693336,28695365,28697409,28699388,28701050,28702754,28704446,28706130,28707779,28709470,28711145,28712794,28714445,28716139,28717824,28719490,28721184,28722887,28724599,28726273,28727983,28729655,28731332,28733033,28734727,28736426,28738125,28739839,28741553,28743221,28744912,28746591,28748249,28750019,28752067,28754115,28756163,28757895,28759634,28761387,28763118,28764882,28766577,28768216,28769957,28771677,28773359,28775035,28776857,28778625,28780416,28782120,28783873,28785604,28787253,28789018,28790740,28792375,28793935,28795681,28796626,28797459,28798150,28798928,28799725,28800455,28801188,28801895,28802478,28803191,28803977,28805008,28806002,28807058,28807868,28808604,28809480,28810477,28811651,28812587,28813519,28814527,28815532,28816408,28817231,28818173,28819001,28819552,28820188,28820859,28820931,28821592,28822807,28824275,28826031,28827888,28829705,28831549,28833323,28834880,28836406,28837957,28839454,28840943,28842434,28843933,28845432,28846938,28848421,28849918,28851438,28852349,28852742,28853093,28853322,28853645,28854211,28854746,28855071,28855565,28855974,28856459,28856958,28857352,28857636,28858147,28858520,28858801,28859329,28859752,28860065,28860386,28860903,28861291,28861663,28862050,28862401,28862598,28862984,28863187,28863473,28863835,28864348,28864708,28864949,28865224,28865443,28867188,28869176,28871135,28872950,28874649,28876331,28878017,28879707,28881342,28883038,28884708,28886390,28888047,28889713,28891404,28893096,28894807,28896496,28898181,28900229,28902272,28903989,28905730,28907462,28909228,28910869,28912628,28914336,28915969,28917630,28919406,28921127,28922889,28924542,28925623,28926225,28926898,28927716,28928914,28930079,28930993,28932180,28933893,28935780,28937667,28939289,28940804,28942317,28943811,28945310,28946801,28948290,28949785,28951298,28952792,28954278,28955774,28957276,28958764,28960269,28961801,28963295,28964779,28966263,28967755,28969251,28970763,28972241,28973737,28975229,28976717,28978191,28979716,28981222,28982734,28984213,28985734,28987223,28988703,28990165,28990706,28991239,28991783,28992208,28992756,28993308,28993837,28994487,28995084,28995679,28996269,28996746,28997151,28997580,28998150,28998606,28999069,28999616,29000206,29000816,29001432,29001976,29002472,29003073,29003565,29004001,29004523,29005108,29005705,29006233,29006550,29007034,29007469,29008033,29008524,29008973,29009477,29009981,29010477,29011035,29011468,29011985,29012510,29012948,29013226,29013524,29013912,29014350,29014702,29014975,29015284,29015810,29016175,29016597,29017069,29017520,29018130,29018687,29019142,29019463,29019980,29020597,29021237,29021829,29022395,29022959,29023335,29023874,29024283,29024873,29025371,29025796,29026227,29026751,29027118,29027602,29028110,29028616,29029043,29029401,29029823,29030368,29030828,29031180,29031646,29032091,29032436,29032814,29033048,29033616,29034139,29034497,29034924,29035341,29035681,29036017,29036626,29036946,29037400,29037847,29038102,29038317,29038633,29039040,29039409,29039708,29040094,29040448,29040660,29041072,29041359,29042797,29044796,29046840,29048827,29050804,29052810,29054837,29056831,29058879,29060936,29062656,29064344,29066032,29067716,29069407,29071094,29072767,29074464,29076192,29077898,29079603,29081335,29083057,29084795,29086512,29088243,29089964,29091721,29093456,29095195,29096902,29098591,29100287,29101978,29103670,29105361,29107032,29108707,29110410,29112091,29113805,29115514,29117167,29118826,29120518,29122207,29123904,29125622,29127334,29129071,29130814,29132559,29134284,29135942,29137631,29139344,29141043,29142708,29144363,29146043,29147964,29150012,29152060,29154108,29156156,29158145,29159835,29161559,29163236,29164932,29166557,29168230,29169987,29171716,29173502,29175229,29177001,29178778,29180525,29182216,29183926,29185638,29187350,29189054,29190786,29192425,29194076,29195712,29197331,29199100,29200848,29202491,29204227,29205826,29207500,29209134,29210868,29212641,29214399,29216102,29217909,29219530,29221103,29222697,29223695,29224488,29225218,29226009,29226875,29227398,29228162,29228904,29229526,29230399,29231299,29232252,29233245,29234210,29234663,29235246,29235877,29236594,29237522,29238300,29238940,29239631,29240294,29240967,29241757,29242382,29242985,29243560,29243974,29244196,29245063,29245923,29246751,29247702,29248731,29249853,29250672,29251699,29252641,29253444,29254124,29254674,29255998,29257398,29259130,29260992,29262809,29264681,29266529,29268331,29270162,29272056,29273704,29275379,29276951,29278441,29279951,29281434,29282920,29284425,29285901,29287387,29288869,29290352,29291570,29292015,29292524,29293034,29293439,29293980,29294425,29294927,29295276,29295706,29296054,29296335,29296652,29296776,29296833,29297307,29297856,29298480,29299025,29299621,29300156,29300754,29301075,29301247,29301298,29301620,29302035,29302287,29302652,29303043,29303200,29303262,29303625,29305639,29307685,29309734,29311423,29313096,29314791,29316489,29318191,29319920,29321641,29323359,29325039,29326701,29328412,29330127,29331832,29333568,29335602,29337650,29339451,29341293,29343100,29344901,29346673,29348404,29350204,29351969,29353693,29355505,29357326,29359190,29360054,29360837,29361550,29362441,29363391,29363943,29365417,29366058,29367436,29369010,29370664,29372258,29373769,29375354,29376888,29378368,29379872,29381369,29382880,29384368,29385858,29387344,29388835,29390316,29391811,29393295,29394790,29396276,29397064,29397466,29397723,29398000,29398352,29398799,29399177,29399566,29399972,29400192,29400437,29401052,29401527,29402082,29402668,29403110,29403602,29404038,29404318,29404600,29404994,29405414,29405689,29406145,29406655,29407012,29407289,29407671,29408131,29408496,29408890,29409139,29409587,29410001,29410467,29410920,29411405,29411683,29412480,29414512,29416530,29418551,29420244,29421904,29423557,29425259,29426968,29428652,29430342,29432040,29433748,29435448,29437145,29438827,29440488,29442141,29443808,29445455,29447142,29449190,29451215,29452819,29454470,29456281,29458172,29460059,29461869,29463685,29465511,29467347,29469166,29470861,29472545,29474154,29475086,29475756,29476365,29477113,29477686,29477987,29478317,29478764,29479121,29479497,29479920,29480404,29480904,29482498,29483659,29484114,29484840,29486338,29487872,29489362,29490856,29492574,29494234,29495828,29497484,29498983,29500501,29502010,29503541,29505056,29506587,29508108,29509638,29511133,29512651,29514172,29515681,29517190,29518703,29520205,29521719,29523254,29524754,29526271,29527771,29529279,29530798,29532313,29533821,29535325,29536864,29538357,29539865,29541409,29542946,29544483,29546025,29547540,29549062,29550583,29552095,29553608,29555117,29556611,29558111,29559604,29561097,29562571,29564053,29565553,29567044,29568546,29570022,29570512,29571049,29571528,29571994,29572510,29573023,29573585,29574025,29574545,29575228,29575913,29576557,29577282,29577968,29578668,29579380,29580062,29580700,29581355,29582106,29582838,29583570,29584175,29584713,29585305,29585650,29586259,29586795,29587396,29588079,29588797,29589401,29590057,29590697,29591384,29591970,29592634,29593238,29593851,29594478,29594955,29595561,29596216,29596775,29597361,29597947,29598523,29599059,29599561,29600136,29600723,29601329,29601939,29602459,29603003,29603654,29604247,29604774,29605344,29605887,29606517,29607027,29607452,29607969,29608527,29609048,29609618,29610246,29610789,29611402,29612020,29612572,29613209,29613719,29614318,29614866,29615528,29616116,29616650,29617159,29617719,29618249,29618713,29619273,29619764,29620370,29620945,29621398,29621806,29622379,29622985,29623524,29624237,29624785,29625520,29626299,29626996,29627654,29628329,29628984,29629672,29630386,29630977,29631528,29632161,29632830,29633455,29634088,29634629,29635167,29635691,29636308,29636899,29637537,29638141,29638763,29639319,29639924,29640502,29641105,29641671,29642227,29642776,29643327,29643609,29644189,29644752,29645296,29645812,29646366,29646875,29647381,29647916,29648412,29648930,29649533,29650143,29650661,29651036,29651402,29652023,29652521,29653030,29653571,29653953,29654386,29654877,29655440,29656021,29656536,29657036,29657385,29658754,29660811,29662865,29664912,29666960,29668998,29671053,29673092,29675140,29677196,29679252,29681271,29683326,29685290,29687003,29688732,29690415,29692115,29693817,29695550,29697252,29698930,29700648,29702344,29704057,29705755,29707455,29709158,29710862,29712562,29714295,29716029,29717725,29719449,29721176,29722908,29724650,29726388,29728148,29729913,29731671,29733423,29735156,29736869,29738559,29740275,29741982,29743669,29745351,29747021,29748728,29750463,29752149,29753835,29755537,29757250,29758948,29760661,29762378,29764130,29765882,29767644,29769381,29771125,29772832,29774550,29776268,29778009,29779731,29781471,29783205,29784965,29786698,29788424,29790169,29791928,29793681,29795423,29797147,29798904,29800952,29803000,29805048,29807096,29809153,29811201,29813249,29815212,29816908,29818539,29820277,29822017,29823712,29825396,29827118,29828889,29830596,29832365,29834160,29835921,29837765,29839540,29841370,29843188,29844982,29846770,29848577,29850322,29852111,29853902,29855521,29857116,29858820,29860544,29862220,29863850,29865490,29867295,29868955,29870680,29872383,29874074,29875800,29877651,29879486,29881305,29883124,29884927,29886741,29888422,29890135,29891724,29893387,29895172,29897009,29898828,29900616,29902461,29904320,29906134,29907904,29908936,29909902,29910803,29911740,29912701,29913626,29914378,29915157,29916068,29916949,29918116,29919425,29920816,29922050,29923214,29924438,29925690,29926965,29928283,29929573,29930760,29931855,29933073,29933829,29934541,29935301,29936210,29937161,29938091,29939140,29940464,29941421,29941913,29942555,29944181,29945527,29947320,29949284,29950974,29952793,29954667,29956581,29958380,29960189,29962015,29963848,29965734,29967591,29969119,29970594,29972146,29973637,29975138,29976621,29978120,29979631,29981124,29982591,29984004,29984160,29984280,29984562,29984675,29984779,29985044,29985311,29985741,29986001,29986317,29986642,29986923,29987088,29987464,29987710,29987864,29988001,29988194,29988677,29989076,29989347,29989553,29990091,29990511,29990883,29991306,29991583,29991744,29993015,29995036,29997080,29998812,30000519,30002210,30003900,30005625,30007321,30008995,30010702,30012417,30014154,30015859,30017516,30019203,30021071,30023119,30024959,30026751,30028402,30030041,30031850,30033566,30035342,30037167,30038956,30040829,30042560,30044247,30044948,30045818,30047600,30049022,30050640,30052230,30053875,30055390,30056838,30058016,30059533,30061017,30061465,30061888,30062383,30062921,30063478,30063969,30064403,30066170,30067900,30069589,30071286,30073130,30074930,30076552,30077190,30077995,30079449,30081008,30082500,30084004,30085487,30086525,30086719,30087171,30087594,30088135,30088555,30088668,30088875,30089437,30089806,30090095,30090362,30090878,30091608,30093553,30095260,30096927,30098621,30100302,30101977,30103635,30105591,30107204,30108933,30110701,30112381,30113594,30114471,30116158,30117945,30119608,30121069,30122542,30124034,30125541,30127033,30128012,30128497,30128932,30129305,30129712,30130175,30130410,30130687,30131198,30131693,30132156,30132492,30133009,30133472,30133910,30134475,30135496,30137518,30139168,30140836,30142489,30144178,30145857,30147535,30149216,30151168,30152829,30154538,30156279,30158045,30159367,30159914,30160871,30162116,30163047,30164349,30165969,30167898,30169952,30172008,30174054,30176106,30177943,30179551,30181129,30182594,30183684,30184477,30185277,30186032,30186853,30187773,30188902,30190920,30192946,30194891,30196815,30198665,30199154,30200183,30201290,30202772,30203897,30205358,30206744,30208086,30209232,30210000,30210636,30211777,30212878,30214094,30215166,30216195,30216963,30217957,30218849,30219936,30220993,30222033,30223117,30224220,30225395,30226212,30226935,30227679,30228471,30229498,30230206,30231106,30231874,30232675,30233982,30236030,30237328,30238415,30239479,30240413,30241376,30242390,30243512,30244508,30245505,30246443,30247653,30248713,30249576,30250645,30251634,30252594,30253591,30254354,30255150,30255879,30256719,30257865,30259279,30260788,30262182,30263805,30265796,30267844,30269901,30271754,30273214,30275237,30277293,30279341,30281389,30283343,30285177,30287225,30288859,30290811,30292859,30294907,30296955,30299003,30301051,30303099,30305147,30307199,30309234,30311270,30313294,30315317,30317362,30319402,30321350,30323152,30324832,30326820,30328868,30330916,30332964,30335012,30337060,30339108,30341156,30343204,30345252,30347300,30349356,30351346,30353281,30355112,30356880,30358155,30360004,30361931,30363824,30365578,30367520,30369575,30371628,30373684,30375732,30377780,30379828,30381876,30383924,30385972,30388020,30390068,30392116,30394164,30396212,30398208,30399657,30400769,30402818,30404866,30406914,30408962,30411010,30413058,30415106,30417154,30419202,30421250,30423298,30425346,30427394,30429442,30431490,30433538,30435586,30437634,30439682,30441710,30443264,30445312,30447360,30449408,30451460,30453309,30454857,30456191,30457355,30458347,30459023,30459536,30461583,30463631,30465679,30467727,30469775,30471830,30473878,30475926,30477979,30480035,30481827,30483259,30484111,30486159,30488216,30490230,30492155,30493995,30495680,30497153,30498295,30499161,30499691,30499940,30500399,30502363,30504411,30506459,30508507,30510554,30512602,30514650,30516698,30518746,30520801,30522858,30524909,30526951,30528914,30530720,30532318,30533800,30535192,30537238,30539286,30541334,30543382,30545436,30547484,30549541,30551598,30553646,30555702,30557756,30559800,30561823,30563703,30565385,30566818,30567835,30569100,30570930,30572826,30574842,30576890,30578941,30580989,30582891,30584555,30585804,30586861,30588909,30590954,30593002,30594804,30596853,30598910,30600958,30602692,30603116,30603214,30603400,30603433,30604393,30606441,30608489,30610537,30612594,30614642,30616698,30618746,30620789,30622689,30624746,30626803,30628851,30630899,30632909,30634957,30637005,30639053,30641101,30643149,30645197,30647245,30649293,30651350,30653247,30654800,30656801,30658776,30660405,30662033,30664089,30666073,30667623,30668886,30670494,30672422,30674460,30676512,30678569,30680626,30682679,30684699,30686547,30687945,30688220,30689466,30691514,30693562,30695619,30697673,30699729,30701777,30703825,30705881,30707927,30709972,30711964,30713798,30715669,30717619,30719170,30721209,30723266,30725322,30727370,30729418,30731466,30733514,30735562,30737534,30739533,30741581,30743629,30745677,30747725,30749781,30751829,30753877,30755798,30757531,30759511,30761486,30763274,30764433,30766487,30768543,30770562,30772406,30774174,30776222,30778270,30780318,30782366,30784417,30786465,30788513,30790561,30792609,30794390,30795689,30797411,30799342,30801340,30803358,30805411,30807464,30809481,30811508,30813549,30815592,30817643,30819700,30821705,30823720,30825697,30827671,30829657,30831707,30833744,30835792,30837841,30839877,30841893,30843936,30845985,30848022,30850055,30852107,30854128,30856038,30857836,30859430,30860813,30862095,30863276,30864385,30865577,30866598,30867650,30868765,30869763,30870771,30871657,30872500,30873359,30874132,30874768,30875328,30875763,30875957,30876128,30876233,30876292,30876382,30878438,30880458,30882515,30884563,30886595,30888497,30890233,30891821,30893000,30893960,30896008,30898056,30900104,30902152,30904050,30906098,30908146,30910194,30912164,30914212,30916260,30918308,30920336,30922389,30924446,30926503,30928551,30930605,30932651,30934699,30936756,30938798,30940846,30942898,30944912,30946869,30948754,30950592,30952324,30954082,30955682,30957628,30959685,30961742,30963762,30965814,30967869,30969920,30971703,30973700,30975756,30977804,30979861,30981916,30983973,30986021,30988069,30990004,30992052,30994100,30996031,30997518,30999495,31001543,31003596,31005081,31006944,31008992,31011040,31013088,31015136,31017184,31019232,31021288,31023337,31025344,31027237,31028967,31030480,31031865,31033145,31034316,31035908,31037956,31040004,31042061,31044113,31046150,31048028,31049688,31050712,31051013,31052063,31053580,31055313,31057200,31059162,31061051,31062986,31064994,31066938,31068679,31070215,31071575,31072630,31073209,31073647,31075339,31077387,31079427,31080826,31081641,31083597,31085645,31087693,31089741,31091789,31093837,31095885,31097933,31099958,31101933,31103971,31106010,31107785,31109255,31110205,31111847,31113895,31115693,31117115,31118878,31120926,31122974,31125025,31127073,31129121,31131178,31133234,31135287,31137221,31139110,31140804,31142852,31144275,31145406,31146828,31148882,31150930,31152978,31155026,31157074,31159122,31161162,31163006,31164918,31166966,31169014,31171062,31173110,31175158,31177206,31179085,31180086,31181578,31183495,31185523,31187571,31189619,31191667,31192955,31194650,31196461,31198515,31200563,31202611,31204668,31206721,31208727,31210543,31211816,31212791,31213532,31214034,31214364,31214611,31214767,31216765,31218813,31220861,31222909,31224957,31227005,31229053,31231101,31233149,31235197,31237245,31239293,31241341,31243389,31245437,31247485,31249533,31251587,31252904,31254952,31257000,31259048,31261096,31263144,31265192,31267240,31269294,31270179,31270537,31271930,31273640,31275625,31277680,31279728,31281776,31283824,31285872,31287920,31289968,31292016,31294064,31296105,31297954,31299560,31301011,31302341,31303501,31304556,31305607,31306501,31307220,31308067,31308984,31309838,31310781,31312487,31314543,31316591,31318639,31320687,31322735,31324783,31326831,31328879,31330927,31332975,31335023,31337071,31339128,31340944,31342155,31342889,31343560,31345220,31347268,31349316,31351364,31353418,31354769,31356661,31358647,31360401,31361672,31362634,31363202,31363901,31365160,31367208,31369046,31370089,31370785,31372594,31374552,31376560,31378616,31380661,31382717,31384765,31386797,31388722,31390330,31392103,31393959,31395868,31397865,31399918,31401973,31404021,31406069,31408117,31410174,31412222,31414270,31416247,31418009,31419424,31420108,31420891,31422657,31424713,31426761,31428809,31430857,31432905,31434953,31437001,31439049,31441105,31443069,31444774,31446192,31447174,31448102,31448293,31448934,31450982,31453019,31454976,31456885,31458678,31460388,31462207,31464255,31466267,31467998,31469552,31470941,31472651,31474453,31476502,31478550,31480479,31482490,31483559,31485603,31487292,31489101,31491061,31493109,31494759,31496637,31497988,31499403,31500531,31502261,31504222,31506253,31508251,31510239,31512260,31514224,31516133,31518181,31520230,31522265,31523878,31524791,31526311,31528359,31530407,31532455,31534503,31536551,31537493,31538865,31540913,31542961,31545009,31547057,31548374,31548781,31550780,31552828,31554868,31556916,31558971,31561019,31563067,31564992,31567048,31569064,31570598,31572646,31574656,31576504,31578561,31580581,31582281,31584313,31586340,31587683,31588963,31590988,31592292,31593215,31595271,31597319,31599367,31601403,31602437,31602546,31602780,31604337,31606393,31608441,31610489,31612537,31614593,31616649,31618677,31620624,31622672,31624720,31626612,31628665,31630690,31632727,31634775,31636782,31638830,31640874,31642929,31644855,31646881,31648566,31650480,31652059,31653817,31655404,31656690,31658359,31660071,31661565,31662881,31664287,31666342,31668248,31670063,31672120,31674168,31676216,31678264,31680247,31681593,31682676,31683340,31685004,31686784,31688194,31690172,31691993,31694041,31696089,31698137,31700185,31702233,31704281,31706338,31708394,31710442,31712474,31714408,31716179,31717748,31719121,31720247,31721067,31722626,31724674,31726722,31728770,31730818,31732875,31734111,31735059,31737089,31739137,31741193,31743155,31745076,31747105,31749161,31751209,31753257,31755305,31757353,31759409,31761451,31763380,31765122,31766462,31767058,31768356,31770404,31772452,31774500,31776548,31777641,31777826,31779116,31781163,31783211,31785259,31787307,31789355,31791403,31793451,31795499,31797347,31798645,31798915,31799576,31801063,31803057,31805105,31807153,31809201,31811249,31813297,31815354,31817402,31819457,31821505,31823562,31825572,31827421,31829217,31831016,31832728,31834237,31835627,31836878,31838132,31839323,31840343,31841064,31841572,31842119,31842627,31843068,31843557,31843941,31844356,31844811,31845267,31845743,31846317,31846762,31846948,31847375,31848381,31849543,31850720,31851955,31853053,31854069,31855021,31855893,31856550,31857000,31857261,31857357,31857600,31858833,31860473,31862398,31864450,31866498,31868555,31870565,31872549,31874494,31876353,31878352,31880145,31882165,31884160,31885693,31887386,31889436,31891493,31893541,31895547,31897579,31899624,31901653,31903696,31905717,31907660,31909717,31911698,31913606,31915626,31917676,31919724,31921753,31923426,31925308,31927295,31929043,31930957,31932997,31934628,31935950,31937675,31939723,31941771,31943747,31945659,31947577,31949429,31951384,31953260,31955314,31957362,31959416,31961435,31963305,31965353,31967345,31968891,31970464,31972027,31973370,31974361,31974807,31975386,31975779,31976334,31977015,31977746,31978934,31980567,31981941,31983381,31984686,31985953,31987436,31989127,31990913,31992703,31994499,31996432,31998453,32000469,32002515,32004563,32006613,32008661,32010718,32012766,32014814,32016870,32018910,32020883,32022889,32024877,32026850,32028722,32030439,32032159,32033897,32035594,32037245,32038755,32040206,32041640,32043074,32044524,32045830,32047072,32048284,32049496,32050663,32051784,32052794,32053784,32054727,32055693,32057234,32058641,32060161,32061721,32063108,32064583,32066129,32067676,32069128,32070739,32072157,32073734,32075381,32077082,32078608,32080302,32081780,32083274,32084934,32086568,32088353,32090086,32091837,32093618,32095459,32097330,32099231,32101119,32103097,32105040,32107021,32109069,32111123,32113179,32115227,32117284,32119341,32121394,32123397,32125287,32127028,32128553,32129583,32131057,32132845,32134872,32136924,32138972,32141020,32142167,32142320,32143628,32145685,32147733,32149745,32151186,32153238,32154295,32156349,32158397,32159879,32161536,32163592,32165640,32167688,32169736,32171266,32173314,32175266,32176762,32178167,32180215,32182263,32184311,32186367,32188415,32190471,32192444,32194496,32196544,32198592,32200640,32202688,32204736,32206784,32208832,32210880,32212928,32214976,32217028,32219044,32221092,32223146,32225194,32227242,32229290,32231251,32233199,32235226,32237282,32239330,32241371,32243425,32245480,32247537,32249585,32251633,32253681,32255729,32257369,32258799,32260854,32262902,32264959,32267007,32269055,32271097,32273152,32275049,32276975,32278756,32280321,32281930,32283363,32285124,32286928,32288498,32289945,32291278,32292379,32293239,32293508,32295304,32297352,32299400,32301448,32303503,32305486,32307059,32308015,32308204,32309346,32311394,32313451,32315391,32317073,32318529,32320313,32322192,32322994,32323198,32324049,32324969,32325343,32325778,32326136,32326576,32326919,32327331,32327614,32328074,32328766,32329689,32330511,32331099,32331653,32332334,32333421,32334255,32334850,32336321,32337740,32339152,32340376,32341584,32342919,32343559,32344169,32344976,32345368,32345634,32346182,32346596,32346944,32347942,32348849,32349231,32349554,32349921,32350570,32351367,32351866,32352415,32353009,32353399,32353824,32354475,32355283,32356104,32356915,32357428,32358447,32359237,32359887,32360852,32361649,32362285,32363193,32363597,32364198,32364825,32365631,32366513,32367098,32367383,32367687,32367906,32368185,32368692,32369008,32369325,32369585,32369761,32370236,32370809,32371545,32372241,32372802,32373297,32373498,32373969,32374541,32375009,32375554,32376022,32376482,32376963,32377197,32377889,32378705,32378994,32379282,32379730,32380017,32380876,32381776,32382326,32382447,32382641,32382919,32383357,32384194,32384515,32384944,32385244,32385668,32385838,32386580,32386838,32387179,32388133,32388794,32389001,32389250,32389619,32390069,32390356,32390619,32390888,32391229,32392090,32392697,32393241,32393652,32394369,32394770,32395329,32395744,32396079,32396845,32397349,32397674,32398301,32399032,32400003,32400231,32400424,32400801,32401167,32401907,32402256,32402827,32403265,32403786,32404315,32404865,32405213,32405808,32406080,32406643,32407167,32407692,32408294,32408488,32409286,32409803,32410341,32410579,32411232,32412031,32412628,32413496,32414704,32415851,32416984,32418113,32419221,32420259,32420662,32421029,32422191,32423286,32424241,32424889,32425408,32426837,32427122,32427563,32427899,32428088,32428412,32428646,32428820,32428959,32429204,32429519,32429951,32430084,32430219,32430356,32430669,32431108,32431714,32432026,32432713,32433276,32433691,32434584,32435104,32435710,32435884,32436228,32436822,32437099,32437447,32437763,32438461,32438874,32439466,32439933,32440240,32440533,32440811,32441099,32441597,32441786,32442146,32442340,32442588,32442924,32443084,32443564,32443844,32444143,32444325,32444624,32444812,32445045,32445583,32445938,32446346,32446665,32447361,32448514,32448753,32449177,32449637,32450075,32450679,32451303,32451623,32452200,32453283,32454154,32454972,32455533,32456092,32456459,32456832,32457241,32457578,32457948,32458405,32458674,32458946,32459227,32459363,32459556,32460346,32461206,32462068,32462866,32463469,32464032,32464618,32464886,32465365,32465655,32466113,32466834,32467020,32467398,32467767,32468385,32469137,32470002,32470723,32471217,32471622,32472146,32472433,32472785,32473026,32473298,32473524,32474129,32474546,32475090,32475454,32476072,32476641,32477199,32477954,32478498,32478560,32478895,32479365,32479913,32480697,32481130,32481554,32481966,32482316,32482675,32483015,32483341,32484568,32485856,32487070,32488388,32489564,32490930,32492849,32494616,32495112,32495234,32495393,32495827,32496400,32496561,32496755,32496878,32497363,32497553,32497969,32498549,32499073,32500264,32501060,32501711,32502001,32502178,32502580,32502806,32503166,32503407,32503592,32503950,32504144,32504667,32505065,32505674,32506188,32506664,32507305,32508044,32508950,32509151,32509748,32509962,32510330,32510687,32511118,32511572,32511858,32512090,32512600,32512917,32513275,32513556,32513825,32514154,32514433,32515007,32515244,32515619,32515801,32516343,32516753,32517162,32517281,32517725,32518328,32518852,32519371,32519528,32519817,32520267,32520726,32521154,32521464,32521893,32522592,32522891,32523600,32523994,32524461,32525178,32525514,32526058,32526913,32527114,32527279,32527409,32527548,32527692,32527871,32528282,32528450,32528617,32528770,32528934,32529124,32529432,32529580,32529810,32530124,32530437,32530845,32531511,32531627,32531844,32532086,32532315,32532738,32533221,32533594,32534176,32534706,32534888,32535085,32535268,32535762,32536026,32536391,32537036,32537239,32537619,32537797,32537976,32538207,32538576,32538696,32539149,32539703,32539858,32540076,32540346,32540535,32540838,32540968,32541092,32541786,32542293,32542761,32543183,32543583,32544013,32544234,32544491,32544830,32545211,32545523,32545799,32546715,32547066,32547449,32547818,32548287,32548644,32549266,32550261,32551028,32552072,32552824,32553575,32555197,32556179,32557331,32558629,32560008,32561469,32562962,32564431,32565967,32567485,32569046,32570635,32572106,32573611,32575108,32576594,32578193,32579693,32581266,32582716,32584257,32585736,32587195,32588501,32589816,32591032,32592284,32593687,32595032,32596278,32597457,32598574,32599661,32601086,32602412,32604024,32605960,32607681,32609445,32611183,32612858,32614566,32616295,32618009,32619731,32621461,32623161,32624890,32626647,32628419,32630190,32631891,32633539,32635228,32636914,32638564,32640254,32641974,32643677,32645418,32647101,32648801,32650452,32652092,32653766,32655415,32657001,32658580,32660219,32662125,32663655,32665381,32667061,32668664,32670323,32671971,32673700,32675437,32677259,32679103,32680919,32682737,32684548,32686345,32688050,32689835,32691499,32693273,32695092,32696941,32698688,32700335,32702098,32703931,32705636,32707428,32709196,32710954,32712674,32714347,32715997,32717618,32719271,32720998,32722642,32724270,32725853,32727437,32729098,32730761,32732412,32734117,32735815,32737531,32739193,32740914,32742601,32744358,32746093,32747711,32749457,32751177,32752880,32754611,32756280,32757927,32759616,32761297,32762914,32764573,32766166,32767771,32769304,32770814,32772335,32773835,32775498,32776603,32777673,32778526,32779177,32780098,32781420,32782861,32784332,32785617,32786748,32787919,32789126,32790261,32791648,32793006,32794246,32795541,32796810,32798086,32799269,32800245,32801125,32801857,32802747,32803652,32804391,32805014,32805851,32806902,32807992,32809054,32810267,32811861,32813408,32814811,32816250,32817631,32819253,32820688,32822172,32823715,32825292,32826646,32827943,32829212,32830471,32831151,32831391,32831598,32831847,32832070,32832292,32833179,32834565,32835973,32837162,32838737,32840385,32841780,32843061,32844594,32845711,32846449,32847827,32849132,32849926,32851357,32852917,32854362,32856002,32857571,32859190,32860661,32862016,32863332,32864969,32866237,32867684,32869229,32870950,32872361,32873769,32875164,32876738,32878110,32879742,32880893,32882454,32884153,32885716,32887445,32888934,32890480,32892181,32893362,32895085,32896358,32898025,32899468,32900602,32902145,32903658,32905336,32906843,32908232,32909697,32911186,32912556,32914114,32915753,32917341,32918775,32919996,32921583,32923062,32924598,32926191,32927544,32928916,32930398,32932087,32933347,32935003,32936200,32937649,32939151,32940815,32942050,32943406,32944911,32946566,32948146,32949815,32950930,32952488,32953822,32955442,32956482,32958048,32959463,32961167,32962121,32963612,32965063,32966533,32967863,32969344,32970905,32972525,32974126,32975742,32977277,32978619,32979975,32981687,32983165,32984900,32986140,32987902,32989153,32990970,32992367,32993898,32995118,32996904,32998585,33000166,33001657,33003113,33004963,33006434,33007813,33009574,33011222,33012492,33014108,33015763,33017469,33019332,33020742,33022421,33024182,33025943,33027496,33029199,33030911,33032223,33033913,33035275,33036855,33038469,33040274,33041610,33043274,33044965,33046544,33048159,33049750,33051285,33053128,33054634,33056423,33057996,33059885,33061743,33063663,33065612,33067658,33069655,33071706,33073728,33075756,33077774,33079809,33081833,33083869,33085888,33087935,33089983,33092026,33094059,33096043,33098025,33100021,33102049,33104081,33106115,33108165,33110213,33112241,33114281,33116328,33118340,33120361,33122393,33124433,33126482,33128528,33130568,33132621,33134660,33136671,33138695,33140530,33142525,33144558,33146595,33148643,33150674,33152704,33154732,33156770,33158780,33160761,33162763,33164743,33166725,33168729,33170729,33172744,33174785,33176812,33178854,33180871,33182870,33184843,33186834,33188820,33190834,33192818,33194850,33196870,33198896,33200946,33202976,33204966,33206923,33208919,33210935,33212921,33214921,33216972,33219019,33221070,33223108,33225107,33227093,33229078,33231105,33233120,33235159,33237181,33239232,33241287,33243335,33245372,33247396,33249445,33251475,33253505,33255500,33257537,33259527,33261574,33263580,33265526,33267512,33269466,33271447,33273429,33275435,33277394,33279334,33281323,33283316,33285284,33287226,33289233,33291214,33293209,33295148,33297110,33299073,33301051,33303034,33305033,33306958,33308937,33310932,33312903,33314867,33316872,33318846,33320828,33322797,33324775,33326770,33328754,33330721,33332697,33334676,33336668,33338692,33340675,33342680,33344670,33346646,33348651,33350612,33352627,33354570,33356573,33358539,33360520,33362513,33364497,33366468,33368414,33370393,33372378,33374380,33376339,33378347,33380343,33382335,33384336,33386354,33388352,33390354,33392360,33394327,33396322,33398286,33400258,33402262,33404267,33406212,33408152,33410139,33412178,33414137,33416109,33418157,33420190,33422175,33424157,33426201,33428215,33430168,33432199,33434199,33436221,33438261,33440303,33442300,33444312,33446356,33448365,33450363,33452331,33454314,33456329,33458346,33460344,33462329,33464169,33466151,33468199,33470252,33472298,33474209,33476173,33478095,33479989,33481736,33483655,33485539,33487446,33489197,33491134,33492981,33494944,33496941,33498924,33500757,33502693,33504643,33506470,33508345,33510189,33512167,33514123,33516079,33517975,33519910,33521812,33523753,33525637,33527468,33529482,33531451,33533358,33535307,33537154,33539123,33540973,33542854,33544700,33546583,33548542,33550534,33552431,33554461,33556440,33558332,33560200,33562029,33563959,33565816,33567761,33569739,33571649,33573609,33575625,33577585,33579546,33581324,33583260,33584999,33586992,33588928,33590887,33592807,33594694,33596660,33598606,33600557,33602378,33604397,33606365,33608336,33610132,33611849,33613656,33615406,33617316,33619185,33621055,33622869,33624728,33626578,33628432,33630393,33632326,33634245,33636186,33638094,33639992,33641922,33643846,33645736,33647654,33649556,33651450,33653409,33655308,33657300,33659190,33661147,33663035,33664905,33666840,33668689,33670597,33672406,33674313,33676237,33678025,33679984,33681489,33683252,33684584,33686343,33688172,33689890,33691782,33693754,33695689,33697660,33699642,33701617,33703608,33705535,33707508,33709516,33711483,33713441,33715424,33717173,33718591,33720000,33721422,33722848,33724322,33725869,33727240,33728867,33730361,33731774,33733307,33734984,33736750,33738362,33739988,33741892,33743915,33745884,33747817,33749826,33751798,33753605,33755553,33757499,33759513,33761492,33763436,33765424,33767349,33769306,33771141,33772991,33774958,33776974,33778985,33780877,33782897,33784804,33786720,33788621,33790504,33792494,33794460,33796476,33798372,33800415,33802349,33804257,33806150,33808007,33810013,33811941,33813982,33815878,33817847,33819704,33821601,33823504,33825361,33827332,33829310,33831316,33833232,33835182,33837123,33838986,33840879,33842753,33844745,33846762,33848736,33850673,33852678,33854598,33856448,33858367,33860291,33862255,33864198,33866115,33868047,33870005,33871914,33873873,33875782,33877665,33879408,33881160,33882799,33884464,33886134,33887848,33889620,33891322,33892998,33894662,33896382,33898106,33899817,33901551,33903251,33904902,33906590,33908261,33909955,33911690,33913403,33915130,33916765,33918402,33920056,33921780,33923528,33925264,33926934,33928543,33930133,33931808,33933579,33935282,33936955,33938577,33940237,33941874,33943554,33945314,33947047,33948761,33950430,33952077,33953741,33955515,33957311,33959071,33960722,33962325,33963983,33965751,33967646,33969488,33971232,33972969,33974736,33976545,33978415,33980243,33982079,33983881,33985657,33987516,33989251,33991024,33992733,33994429,33996111,33997803,33999526,34001157,34002762,34004512,34006238,34007955,34009570,34011418,34013078,34014706,34016501,34018203,34019726,34021459,34023173,34024903,34026571,34028328,34030084,34031838,34033514,34035301,34037098,34038908,34040578,34042343,34044080,34045817,34047550,34049317,34051087,34053041,34054935,34056933,34058920,34060908,34062858,34064777,34066712,34068623,34070640,34072617,34074594,34076598,34078583,34080559,34082570,34084534,34086528,34088503,34090476,34092441,34094432,34096441,34098430,34100419,34102388,34104378,34106349,34108301,34110281,34112300,34114298,34116299,34118255,34120243,34122215,34124187,34126158,34128128,34130104,34132069,34134059,34136022,34137993,34139958,34141947,34143912,34145877,34147828,34149825,34151770,34153733,34155698,34157642,34159609,34161566,34163557,34165521,34167483,34169450,34171416,34173368,34175335,34177288,34179253,34181205,34183176,34185127,34187099,34189046,34191019,34192964,34194936,34196882,34198858,34200819,34202718,34204661,34206557,34208462,34210367,34212277,34214167,34216093,34217980,34219889,34221812,34223715,34225622,34227533,34229441,34231356,34233297,34235152,34237077,34238980,34240813,34242717,34244636,34246474,34248364,34250299,34252136,34254021,34255970,34257812,34259681,34261632,34263475,34265329,34267284,34269129,34270960,34272919,34274766,34276575,34278539,34280378,34282192,34284075,34285862,34287696,34289591,34291355,34293199,34295092,34296833,34298707,34300605,34302365,34304250,34306136,34307906,34309797,34311650,34313432,34315330,34317157,34318976,34320873,34322670,34324541,34326452,34328273,34330155,34332055,34333858,34335750,34337595,34339469,34341381,34343201,34345072,34346989,34348794,34350683,34352540,34354389,34356298,34358137,34359987,34361898,34363746,34365639,34367520,34369368,34371263,34373149,34374994,34376888,34378776,34380622,34382513,34384406,34386252,34388142,34390034,34391879,34393764,34395657,34397500,34399383,34401277,34403121,34404993,34406885,34408724,34410618,34412524,34414361,34416266,34418178,34420008,34421922,34423823,34425659,34427578,34429482,34431326,34433247,34435126,34436981,34438914,34440772,34442632,34444560,34446424,34448292,34450214,34452077,34453948,34455865,34457782,34459708,34461631,34463536,34465451,34467366,34469290,34471208,34473120,34475041,34476979,34478893,34480802,34482714,34484616,34486537,34488465,34490453,34492420,34494419,34496404,34498389,34500372,34502374,34504362,34506350,34508324,34510314,34512224,34514185,34516068,34518004,34519903,34521820,34523712,34525637,34527455,34529399,34531319,34533193,34535117,34537082,34539050,34540999,34542980,34544943,34546880,34548867,34550793,34552774,34554707,34556682,34558616,34560580,34562528,34564530,34566424,34568374,34570210,34572197,34574028,34575991,34577850,34579765,34581666,34583543,34585470,34587326,34589286,34591116,34593094,34594935,34596884,34598710,34600585,34602444,34604293,34606183,34607993,34609924,34611726,34613617,34615478,34617317,34619183,34620995,34622911,34624698,34626627,34628439,34630316,34632149,34634199,34636247,34638280,34640288,34642308,34644313,34646343,34648363,34650381,34652417,34654445,34656486,34658522,34660571,34662591,34664588,34666420,34668403,34670413,34672455,34674509,34676563,34678580,34680612,34682641,34684645,34686655,34688675,34690718,34692741,34694775,34696830,34698866,34700909,34702942,34704961,34706926,34708887,34710912,34712912,34714943,34716994,34719025,34721032,34723050,34725037,34727022,34729018,34730995,34732987,34735028,34737064,34739086,34741101,34743115,34745128,34747116,34749114,34751111,34753085,34755074,34757093,34759136,34761149,34763170,34765178,34767190,34769168,34771171,34773162,34775129,34777106,34779118,34781158,34783169,34785219,34787273,34789300,34791298,34793344,34795355,34797363,34799330,34801364,34803397,34805445,34807487,34809543,34811585,34813631,34815648,34817672,34819696,34821738,34823793,34825849,34827858,34829872,34831844,34833841,34835812,34837817,34839816,34841788,34843803,34845786,34847753,34849764,34851739,34853681,34855631,34857601,34859583,34861585,34863586,34865593,34867595,34869509,34871456,34873403,34875335,34877140,34879064,34881065,34883076,34885046,34887054,34889027,34891010,34892976,34894975,34896963,34898927,34900808,34902696,34904618,34906604,34908569,34910471,34912384,34914346,34916345,34918292,34920224,34922071,34923966,34925944,34927937,34929847,34931699,34933636,34935607,34937555,34939430,34941313,34943188,34945039,34946970,34948934,34950860,34952800,34954743,34956590,34958475,34960339,34962226,34964201,34966103,34968078,34970038,34971917,34973801,34975697,34977577,34979543,34981533,34983465,34985351,34987163,34988999,34990893,34992851,34994825,34996679,34998556,35000373,35002034,35003979,35005894,35007782,35009697,35011607,35013454,35015323,35017270,35019101,35020996,35022879,35024735,35026609,35028463,35030275,35032141,35034103,35036069,35037986,35039895,35041775,35043616,35045466,35047350,35049181,35051030,35052961,35054931,35056895,35058814,35060753,35062582,35064466,35066416,35068351,35070391,35072420,35074427,35076378,35078339,35080346,35082315,35084337,35086293,35088237,35090178,35092234,35094245,35096226,35098012,35099976,35101984,35103999,35105991,35107922,35109906,35111938,35113946,35115934,35117889,35119875,35121870,35123893,35125908,35127877,35129715,35131684,35133667,35135641,35137662,35139643,35141647,35143685,35145693,35147685,35149697,35151595,35153611,35155614,35157596,35159582,35161603,35163624,35165617,35167537,35169296,35171077,35172965,35174985,35176993,35178947,35180967,35182967,35184940,35186895,35188867,35190831,35192783,35194660,35196616,35198570,35200546,35202495,35204500,35206470,35208497,35210491,35212488,35214430,35216399,35218388,35220365,35222329,35224197,35226130,35228076,35230042,35231914,35233823,35235762,35237706,35239577,35241515,35243513,35245480,35247458,35249454,35251470,35253482,35255475,35257505,35259408,35261319,35263296,35265222,35266942,35268844,35270799,35272748,35274711,35276642,35278575,35280603,35282586,35284590,35286580,35288549,35290516,35292534,35294515,35296474,35298465,35300403,35302348,35304308,35306248,35308221,35310170,35312139,35314113,35316113,35318120,35320133,35322126,35324099,35326073,35328099,35330058,35332053,35334025,35336001,35337938,35339939,35341879,35343828,35345823,35347794,35349788,35351766,35353700,35355684,35357706,35359696,35361640,35363601,35365535,35367569,35369518,35371509,35373504,35375491,35377509,35379474,35381447,35383475,35385462,35387428,35389448,35391372,35393417,35395351,35397305,35399277,35401224,35403222,35405219,35407208,35409162,35411068,35413020,35415017,35416950,35418896,35420896,35422852,35424770,35426727,35428702,35430712,35432716,35434647,35436599,35438568,35440491,35442489,35444395,35446342,35448291,35450144,35452028,35453982,35455935,35457837,35459732,35461652,35463557,35465530,35467476,35469394,35471394,35473365,35475311,35477311,35479287,35481231,35483262,35485057,35487044,35488995,35491011,35493033,35495024,35497039,35499089,35501118,35502985,35504999,35506958,35508976,35510999,35513025,35515066,35517110,35519132,35521068,35523077,35525070,35527101,35529140,35531176,35533195,35535187,35537221,35539200,35541235,35543229,35545269,35547310,35549334,35551389,35553418,35555462,35557414,35559433,35561413,35563447,35565489,35567518,35569565,35571617,35573639,35575626,35577634,35579603,35581637,35583677,35585704,35587752,35589798,35591842,35593774,35595727,35597675,35599565,35601479,35603482,35605444,35607430,35609436,35611430,35613457,35615485,35617376,35619382,35621344,35623361,35625338,35627352,35629286,35631111,35633101,35635060,35637025,35639031,35641023,35642974,35644759,35646724,35648667,35650328,35652210,35653990,35655656,35657282,35658888,35660449,35662250,35663607,35665125,35666664,35668026,35669612,35670894,35672399,35673882,35675037,35676549,35677705,35679108,35680402,35681699,35683050,35684212,35685624,35686731,35687687,35689274,35690693,35691844,35693089,35694446,35695732,35696692,35697967,35699350,35700457,35702092,35703203,35704604,35705761,35707314,35708511,35709817,35711230,35712734,35713904,35715511,35716995,35718468,35720056,35721423,35722985,35724308,35725807,35727348,35728523,35730153,35731313,35732755,35733897,35735501,35736683,35738093,35739453,35740462,35741716,35743209,35744646,35745732,35747018,35748391,35749674,35750634,35751952,35753374,35754566,35756100,35757201,35758543,35759652,35761310,35762527,35763996,35765468,35766836,35768352,35769807,35771366,35772823,35774414,35775942,35777188,35778637,35780133,35781515,35782775,35784334,35785606,35786945,35788108,35789712,35790940,35792367,35793675,35794627,35796022,35797437,35798824,35799911,35801217,35802738,35803800,35804832,35806106,35807485,35808698,35810152,35811304,35812685,35813810,35815437,35816678,35818191,35819670,35821010,35822550,35823954,35825477,35826977,35828442,35830033,35831255,35832738,35834231,35835406,35836842,35838283,35839620,35840986,35842151,35843717,35844887,35846303,35847639,35848477,35850064,35851383,35852688,35853898,35855104,35856710,35857557,35858778,35860161,35861333,35862840,35863904,35865238,35866529,35867894,35869227,35870465,35871882,35873391,35874621,35876253,35877723,35879189,35880749,35882046,35883712,35885014,35886527,35888056,35889335,35890984,35892123,35893511,35894741,35896169,35897534,35898859,35900288,35901380,35902420,35903978,35905411,35906562,35907809,35909193,35910633,35911570,35912845,35914266,35915434,35917038,35918094,35919486,35920542,35922205,35923456,35924867,35926326,35927738,35929130,35930568,35932139,35933583,35935158,35936628,35937981,35939398,35940869,35942354,35943552,35945222,35946420,35947819,35948990,35950608,35951748,35953218,35954495,35955403,35956804,35958186,35959625,35960702,35962039,35963573,35964559,35965662,35967013,35968304,35969552,35971049,35972241,35973596,35974775,35976382,35977627,35979087,35980581,35981948,35983392,35984823,35986415,35987947,35989516,35991093,35992349,35993883,35995440,35996752,35997805,35999482,36000708,36002047,36003168,36004741,36005964,36007280,36008630,36009582,36010810,36012281,36013735,36014816,36016145,36017682,36018634,36019716,36021085,36022334,36023448,36024917,36026078,36027459,36028601,36030237,36031351,36032762,36034286,36035729,36037180,36038702,36040271,36041776,36043325,36044939,36046214,36047694,36049243,36050596,36051687,36053433,36054605,36056011,36057138,36058748,36059923,36061193,36062587,36063671,36064647,36066219,36067691,36068835,36070084,36071465,36072777,36073728,36075039,36076394,36077531,36079089,36080163,36081546,36082821,36084438,36085642,36086879,36088389,36089921,36091281,36092965,36094392,36095894,36097474,36098871,36100580,36101836,36103363,36104885,36106069,36107719,36108932,36110312,36111635,36112964,36114434,36115682,36117152,36118323,36119256,36120903,36122224,36123463,36124698,36125910,36127584,36128396,36129648,36131107,36132344,36133976,36135067,36136402,36137600,36139070,36140508,36141836,36143249,36144739,36145974,36147667,36149166,36150693,36152288,36153698,36155384,36156693,36158262,36159763,36160947,36162580,36163854,36165290,36166610,36167893,36169385,36170625,36172124,36173335,36174199,36175861,36177159,36178396,36179620,36180810,36182453,36183324,36184533,36185975,36187405,36188866,36190139,36191446,36192821,36194109,36195751,36196968,36198483,36200061,36201334,36202964,36204532,36206161,36207733,36209255,36210910,36212265,36213486,36214730,36216064,36217479,36219104,36220673,36222141,36223433,36224665,36226225,36227744,36229123,36230909,36232434,36233751,36234986,36236445,36237920,36239329,36241065,36242578,36244048,36245408,36246662,36248170,36249551,36250925,36252605,36254169,36255761,36257192,36258396,36259798,36261134,36262359,36263841,36265528,36266775,36267910,36269205,36270502,36272241,36273626,36274912,36276373,36278012,36279216,36280915,36282594,36284455,36286391,36288269,36290143,36292066,36293849,36295599,36297437,36299333,36301086,36302934,36304500,36305764,36307501,36309187,36310971,36312715,36314422,36316102,36317558,36318255,36319638,36321638,36323628,36325432,36326980,36328091,36329498,36331315,36332950,36334725,36336470,36338361,36340078,36341783,36343429,36345321,36346984,36348787,36350677,36352572,36354423,36356101,36357813,36359746,36361477,36363466,36365251,36367189,36369151,36371114,36373027,36374903,36376636,36378178,36380089,36381908,36383794,36385698,36387506,36389155,36390901,36392452,36394180,36395925,36397591,36399177,36400875,36402446,36403857,36405551,36407352,36409369,36411375,36413345,36415271,36417273,36419296,36421290,36423237,36425254,36427290,36429296,36431254,36433256,36435289,36437259,36439247,36441172,36443129,36445062,36447072,36449017,36450982,36452958,36454979,36456985,36458979,36460988,36463009,36465040,36467049,36469034,36470871,36472872,36474928,36476968,36479013,36481002,36482914,36484798,36486458,36488393,36490296,36492228,36494133,36496052,36497957,36499867,36501766,36503665,36505550,36507488,36509348,36511272,36513241,36515150,36517061,36518980,36520856,36522749,36524098,36525839,36527804,36529521,36530989,36532491,36533744,36535334,36537035,36538646,36540277,36542123,36543652,36545228,36546841,36548414,36549919,36551462,36553086,36554753,36556319,36557589,36558860,36560531,36562124,36563399,36564772,36566735,36568574,36570334,36572085,36573878,36575592,36577410,36579281,36580995,36582667,36584346,36586096,36587705,36589324,36591186,36592902,36594216,36595716,36597427,36598883,36600313,36601570,36602952,36604699,36606202,36607412,36608597,36610064,36611684,36612917,36614512,36616493,36618487,36620483,36622467,36624437,36626346,36628158,36629691,36631594,36633467,36635350,36636931,36638757,36640743,36642621,36644492,36646382,36648149,36649922,36651737,36653434,36655329,36656838,36658255,36659988,36661433,36662802,36664390,36665995,36667403,36669164,36670558,36672315,36673727,36675434,36677027,36678890,36680385,36682137,36683634,36685404,36686876,36688366,36689967,36691466,36693349,36694620,36695867,36697163,36698980,36700825,36702622,36704331,36705708,36707159,36708858,36710603,36712167,36713610,36715263,36716918,36718539,36720185,36721762,36723318,36725015,36726610,36727966,36729539,36730963,36732665,36734293,36735666,36737273,36738780,36740402,36742064,36743544,36744803,36746380,36747919,36749118,36750443,36751812,36753050,36754381,36755690,36757246,36758446,36759690,36761139,36762493,36763844,36765202,36766581,36767899,36769493,36771095,36772663,36774575,36776051,36777517,36779356,36781207,36783048,36784951,36786503,36788489,36790251,36791836,36793820,36795474,36797470,36798687,36800539,36802441,36803949,36805662,36807368,36809065,36810720,36812300,36813779,36815402,36816895,36818450,36819918,36821507,36823091,36824636,36826175,36827620,36829212,36830771,36832270,36833685,36835283,36836763,36838569,36840438,36842351,36844217,36846052,36847777,36849265,36850751,36852354,36853879,36855808,36857743,36859634,36861489,36863382,36865256,36867167,36869124,36870070,36870602,36871254,36871735,36872434,36873068,36873644,36874204,36874896,36876764,36878740,36880723,36882688,36884619,36886579,36888556,36890515,36892464,36894115,36895760,36897375,36899016,36900789,36902367,36904079,36905653,36907376,36908913,36910470,36912097,36913592,36915095,36916593,36917963,36919437,36920810,36922438,36923961,36925195,36926361,36927799,36929157,36930747,36932220,36933632,36935003,36936569,36938013,36939620,36941036,36942414,36943799,36945205,36946643,36948045,36949443,36950930,36952739,36954501,36956323,36958192,36960092,36961973,36963769,36965525,36967338,36969001,36970731,36972508,36974345,36976163,36977911,36979629,36981307,36982397,36983189,36983992,36984860,36986379,36988087,36989747,36991386,36993069,36994690,36996290,36997906,36999567,37001327,37002991,37004686,37006345,37008002,37009823,37011625,37013505,37014814,37016625,37018154,37019911,37021464,37023253,37024709,37026382,37028297,37029988,37031805,37033652,37035496,37037089,37038944,37040806,37042541,37043602,37044644,37045626,37046697,37047771,37048850,37049788,37050881,37052570,37054107,37055685,37057204,37058813,37060360,37061920,37063452,37065114,37066551,37068133,37069708,37071359,37072589,37073612,37074651,37075663,37077034,37078445,37080058,37081844,37083432,37084845,37085944,37087397,37088953,37090080,37091362,37092875,37094398,37095867,37097488,37099109,37100634,37102189,37103823,37105305,37106650,37107507,37108320,37109365,37109935,37110944,37111686,37112763,37114147,37115589,37116316,37116892,37117766,37118323,37119175,37119733,37120463,37121207,37121922,37122779,37123253,37124087,37124822,37125743,37126243,37126778,37127610,37128293,37129153,37129682,37130547,37131283,37132198,37132634,37133059,37133962,37134550,37135292,37135587,37136197,37136438,37136726,37137251,37137414,37137997,37138253,37138889,37139065,37139582,37139731,37139897,37140361,37140400,37140976,37141133,37141704,37141917,37142188,37143704,37145143,37146553,37147759,37149005,37150182,37151552,37152535,37153526,37154543,37155506,37156494,37157475,37158472,37159487,37161026,37162426,37163825,37165267,37166775,37168220,37169633,37170980,37172553,37173981,37175468,37177014,37178601,37180192,37181680,37183191,37184714,37186285,37187692,37189131,37190500,37191935,37193383,37194801,37196224,37197662,37199067,37200457,37201839,37203204,37204296,37205262,37206203,37207162,37208265,37209182,37210143,37211072,37212141,37213046,37213981,37214901,37215937,37217348,37218758,37220156,37221552,37222663,37223591,37224525,37225461,37226960,37228572,37230140,37231702,37233221,37234738,37236259,37237871,37239477,37241039,37242387,37243751,37245074,37246296,37247624,37248936,37250253,37251828,37253380,37254917,37256254,37257743,37259086,37260363,37261570,37263154,37264796,37266500,37268072,37269676,37271206,37272978,37274680,37276499,37278108,37279324,37280502,37282006,37283421,37284915,37286130,37287464,37288824,37290242,37291900,37293321,37294915,37296348,37297818,37299455,37301149,37302805,37304465,37306043,37307704,37309348,37310985,37312746,37314370,37316068,37317731,37319318,37320927,37322580,37324207,37325718,37327429,37329095,37330704,37332391,37333872,37335507,37337117,37338747,37340420,37342045,37343746,37345433,37347081,37348674,37350348,37352014,37353554,37355358,37356990,37358618,37360242,37362047,37363752,37365366,37367002,37368642,37370499,37372177,37373849,37375514,37377296,37378982,37380631,37382330,37383978,37385180,37386128,37387079,37388046,37389435,37390917,37392461,37393936,37395540,37396851,37398179,37399551,37400851,37402151,37403305,37404572,37405820,37407168,37408297,37409258,37410211,37411690,37412901,37414068,37415159,37416378,37417541,37418413,37419413,37420416,37422037,37423555,37425079,37426622,37428128,37429639,37431145,37432678,37434369,37435774,37437162,37438545,37439921,37441296,37442671,37444012,37445417,37447145,37448675,37450221,37451778,37453338,37454889,37456428,37457939,37459603,37461255,37462861,37464494,37466136,37467764,37469365,37470971,37472631,37474386,37475856,37477287,37478684,37480110,37481571,37483002,37484408,37485895,37487751,37489509,37491224,37492923,37494671,37496404,37498105,37499812,37501708,37503470,37505173,37506877,37508582,37510309,37511978,37513653,37515355,37516660,37517659,37518866,37519895,37521005,37522072,37523337,37524462,37525617,37526681,37527655,37528389,37529029,37529733,37530377,37532042,37533683,37535420,37537115,37538840,37540510,37542237,37543928,37545726,37547523,37549253,37550926,37552547,37554261,37555934,37557668,37559377,37561251,37562992,37564751,37566498,37568268,37570035,37571814,37573582,37575338,37577172,37578890,37580558,37582180,37583868,37585525,37587241,37588909,37590595,37592024,37593531,37594923,37596549,37597552,37598561,37599581,37600626,37602477,37604295,37606101,37607936,37609587,37611435,37613233,37615058,37616863,37618261,37619420,37620644,37622232,37623675,37624690,37625738,37627084,37628827,37630446,37632040,37633626,37635178,37636802,37638422,37640023,37641786,37643290,37644732,37646172,37647643,37649045,37650503,37651927,37653384,37654796,37656581,37657943,37659716,37660980,37662468,37663907,37665383,37666823,37668500,37670133,37671756,37673383,37674935,37676540,37678134,37679721,37681381,37682879,37684365,37685797,37687154,37688701,37690160,37691606,37693000,37694839,37696640,37698484,37700318,37702008,37703832,37705625,37707456,37709188,37710872,37712517,37714109,37715781,37717423,37719062,37720683,37722396,37723988,37725481,37726942,37728394,37729792,37731298,37732740,37734195,37735794,37737615,37739424,37741279,37743184,37744882,37746717,37748531,37750404,37752071,37753675,37755317,37756936,37758474,37760135,37761783,37763378,37765088,37766672,37768132,37769554,37771054,37772476,37773943,37775361,37776834,37778414,37780235,37782068,37783914,37785611,37787481,37789274,37791124,37792921,37794212,37795312,37796947,37797623,37798295,37799456,37800150,37801218,37801952,37802632,37804158,37805167,37805821,37806537,37807739,37808957,37809924,37811152,37812543,37813836,37814437,37815592,37816825,37818029,37819322,37820619,37822367,37823639,37824588,37825533,37827216,37828801,37830400,37832112,37833764,37835469,37837031,37838797,37840285,37841736,37843011,37843945,37845111,37846686,37848183,37849208,37850201,37851214,37852268,37853552,37854645,37855687,37856783,37858154,37860074,37862109,37864130,37866143,37868171,37870187,37872204,37874181,37876199,37878252,37880280,37882301,37884281,37886298,37888304,37890302,37892278,37894305,37896347,37898367,37900373,37902408,37904411,37906433,37908386,37910407,37912437,37914472,37916469,37918471,37920481,37922488,37924481,37926460,37928507,37930412,37932317,37934223,37936099,37937999,37939908,37941749,37943614,37945495,37947421,37949306,37951195,37953035,37954910,37956735,37958622,37960557,37962220,37963893,37965550,37967244,37968911,37970569,37972228,37973847,37975639,37977286,37978948,37980601,37982227,37983897,37985543,37987150,37988837,37990354,37991789,37993233,37994646,37996092,37997528,37998945,38000337,38001900,38003401,38004919,38006439,38007954,38009273,38010804,38012355,38013971,38015342,38016927,38018393,38020083,38021494,38022952,38024475,38026115,38027476,38028878,38030332,38031833,38033789,38035455,38036981,38038657,38040229,38041824,38043360,38044960,38046661,38048186,38049770,38051387,38053087,38054818,38056446,38058024,38059559,38061232,38062779,38064358,38065917,38067461,38068985,38070565,38072090,38073541,38075100,38076563,38078301,38079834,38081495,38083113,38084757,38086390,38088062,38089865,38091571,38093069,38094792,38096726,38098563,38100261,38102012,38103906,38105846,38107775,38109717,38111705,38113647,38115584,38117499,38119424,38121242,38123064,38124941,38126935,38128787,38130633,38132483,38134315,38136112,38137887,38139669,38141446,38143463,38145422,38147392,38149348,38151291,38153188,38155099,38156990,38158972,38160893,38162774,38164688,38166554,38168359,38170198,38172011,38173807,38175819,38177810,38179800,38181816,38183763,38185708,38187636,38189544,38191520,38193425,38195236,38197049,38198782,38200541,38202302,38204064,38205828,38207749,38209595,38211430,38213205,38215020,38216845,38218660,38220465,38222234,38223906,38225311,38226763,38228210,38229620,38231066,38232464,38233885,38235498,38237468,38239404,38241372,38243352,38245293,38247207,38249111,38251035,38252946,38254808,38256730,38258726,38260670,38262633,38264536,38266453,38268345,38270280,38272166,38274101,38275781,38277298,38278816,38280412,38281988,38283593,38285164,38286669,38288522,38290321,38292154,38293946,38295711,38297450,38299192,38300912,38302657,38304201,38305524,38306812,38308092,38309483,38310769,38312116,38313467,38315049,38316541,38318009,38319513,38321084,38322663,38324158,38325639,38327083,38328751,38330432,38331908,38333596,38335259,38336804,38338390,38339848,38341229,38342578,38343887,38345119,38346391,38347558,38348872,38350600,38352490,38354355,38356233,38358135,38360011,38361882,38363753,38365638,38367606,38369514,38371404,38373274,38375152,38377037,38378920,38380799,38382690,38384131,38385562,38386935,38388321,38389784,38391244,38392717,38394186,38395977,38397641,38399353,38401098,38402773,38404381,38405958,38407522,38409149,38410674,38412226,38413812,38415423,38417148,38418862,38420568,38422209,38423898,38425343,38426808,38428284,38429723,38431087,38432504,38433916,38435485,38436994,38438499,38439990,38441534,38442767,38444293,38445811,38447265,38448930,38450408,38451929,38453418,38454667,38456155,38457662,38459177,38460726,38462698,38464649,38466567,38468231,38469659,38471073,38472481,38473306,38474724,38476126,38477533,38479133,38480307,38481454,38482582,38483713,38484855,38485926,38487058,38488236,38489750,38491185,38492613,38494543,38496436,38498338,38500250,38502154,38504054,38505948,38507890,38509580,38511189,38512685,38514223,38515662,38517025,38517927,38518868,38519678,38520586,38521388,38522332,38523040,38523932,38524849,38525875,38526629,38527595,38528463,38529534,38530429,38531410,38532747,38534007,38535362,38536638,38537445,38537807,38538402,38538943,38539287,38539591,38540065,38540760,38542117,38542993,38543879,38544747,38545824,38547109,38547905,38549247,38549995,38550191,38550636,38550915,38551226,38552632,38554040,38555535,38557230,38559067,38560798,38562608,38564431,38566247,38568030,38569782,38571576,38573334,38574961,38576611,38578182,38579802,38581415,38583062,38584648,38586308,38587668,38588967,38590293,38591617,38593230,38594910,38596575,38598241,38599913,38601568,38603200,38604879,38606560,38608225,38609885,38611561,38612527,38614097,38615924,38617777,38619550,38621337,38623136,38625026,38626854,38628588,38630243,38631688,38633163,38634605,38636253,38638115,38639967,38641814,38643674,38645546,38647410,38649261,38651140,38652992,38654061,38655812,38657004,38658092,38659344,38660431,38661620,38663658,38665669,38667639,38669560,38671532,38673481,38675371,38677265,38679151,38681124,38683066,38685013,38686929,38688842,38690727,38692658,38694668,38696420,38698081,38699840,38701639,38703447,38705243,38706931,38708541,38710430,38712486,38714534,38716575,38718623,38720676,38722717,38724754,38726810,38728867,38730922,38732960,38734994,38737042,38739091,38741139,38743179,38745236,38747119,38749045,38750895,38752746,38754570,38756431,38758263,38760138,38762092,38763996,38765876,38767723,38769584,38771420,38773272,38775123,38777067,38778392,38779805,38780613,38781421,38782173,38782842,38783554,38784119,38784910,38785779,38786533,38786936,38787662,38788469,38789363,38789964,38790396,38791171,38792015,38792943,38793397,38793931,38794699,38795551,38796456,38797094,38797569,38798823,38799862,38800984,38801458,38802174,38803339,38804430,38805475,38805856,38806786,38807904,38808936,38809810,38810207,38811262,38812423,38813524,38814150,38815564,38816897,38818474,38819798,38821577,38822941,38823913,38825052,38826201,38827330,38828453,38829545,38830642,38831757,38832915,38834022,38835240,38836445,38837538,38838590,38839651,38840927,38842304,38843408,38844494,38845696,38846741,38847782,38848897,38849937,38850918,38851948,38852828,38853865,38854896,38855736,38856573,38857397,38858267,38859583,38860005,38860567,38861071,38861630,38862178,38862657,38863223,38863764,38864226,38864738,38865205,38865698,38866203,38866733,38867308,38867818,38869301,38870771,38872250,38873747,38875306,38876803,38878331,38879862,38881370,38882462,38883439,38884449,38885939,38887457,38888822,38890216,38891538,38892922,38894408,38896140,38897791,38899449,38901101,38902699,38904311,38905971,38907615,38909282,38910929,38912411,38913892,38915411,38916867,38918378,38919893,38921358,38922888,38923939,38925062,38926305,38927673,38928987,38930294,38931603,38932700,38934103,38935544,38936957,38938396,38939947,38941468,38943019,38944586,38946311,38947604,38948583,38949711,38950886,38951982,38953136,38954205,38955302,38956390,38957545,38958650,38959836,38961021,38962106,38963156,38964237,38965537,38966841,38967962,38969048,38970269,38971320,38972371,38973475,38974473,38975485,38976485,38977373,38978423,38979476,38980315,38981132,38981977,38982923,38984121,38984573,38985141,38985651,38986195,38986746,38987237,38987776,38988307,38988788,38989311,38989803,38990286,38990806,38991334,38991911,38992446,38994251,38996056,38997850,38999646,39001444,39003223,39004957,39006673,39008076,39009499,39010899,39012288,39013958,39015188,39016390,39017630,39019181,39020627,39021940,39023268,39024786,39026058,39027098,39028125,39029090,39030570,39032263,39033710,39035402,39037050,39038405,39039591,39040770,39042015,39043440,39044851,39046533,39048207,39049801,39051491,39053189,39054769,39056437,39058071,39059760,39060913,39062315,39063751,39065319,39067239,39068956,39070912,39072677,39074356,39076020,39077738,39079468,39081096,39082838,39084628,39086312,39087892,39089394,39090946,39092480,39094026,39095578,39097151,39098378,39100157,39101768,39103376,39104964,39106540,39108101,39109703,39111325,39113089,39114562,39116313,39118112,39119605,39121036,39122799,39124576,39126141,39127821,39128866,39129971,39131123,39132290,39133458,39134605,39135701,39136868,39138010,39139137,39140259,39141480,39142638,39143719,39144740,39145834,39147090,39148161,39149382,39150542,39151318,39152102,39153238,39154395,39155479,39156447,39157441,39158701,39159798,39160717,39161366,39162465,39163697,39164820,39165812,39166740,39167986,39169119,39170058,39170584,39171747,39172978,39174172,39175139,39175963,39177161,39178262,39179259,39179691,39180884,39182069,39183235,39184229,39185039,39186184,39187341,39188415,39188838,39190018,39191145,39192304,39193247,39194544,39195654,39196749,39197927,39198973,39200034,39201142,39202141,39203120,39204150,39205060,39206114,39207126,39207968,39208800,39209636,39210569,39211493,39212661,39213893,39215098,39215489,39216525,39217787,39218894,39219805,39221066,39222211,39223460,39224648,39225897,39227021,39228129,39229361,39230542,39231831,39232972,39234087,39235306,39236501,39237821,39238917,39240094,39241329,39242492,39243794,39244967,39245937,39246975,39248092,39249471,39250590,39251602,39252570,39253761,39255063,39256135,39257113,39258186,39259481,39260706,39261780,39262721,39263822,39265351,39265966,39266485,39267020,39268309,39269876,39271629,39273491,39275363,39277173,39278755,39280142,39280620,39281131,39281656,39282182,39282727,39283722,39284987,39286025,39287305,39288811,39289993,39291126,39292616,39293943,39294997,39296259,39297769,39298963,39300041,39301486,39303221,39305071,39306820,39308554,39310458,39312127,39313935,39315826,39317568,39319347,39321168,39322996,39324716,39326572,39328376,39330114,39332010,39333730,39335491,39337380,39339126,39340888,39342692,39344442,39346309,39348139,39349960,39351633,39353536,39355279,39357113,39358902,39360651,39362534,39364234,39366069,39367915,39369707,39371458,39373276,39375127,39376841,39378640,39380515,39382224,39384129,39385860,39387625,39389552,39391285,39393023,39394839,39396702,39398436,39400248,39402072,39403750,39405654,39407328,39409162,39410938,39412702,39414536,39416315,39418139,39419923,39421749,39423508,39425298,39427187,39428899,39430638,39432644,39434347,39436224,39438001,39439755,39441094,39442277,39443474,39444650,39445950,39447131,39448353,39449423,39450423,39451031,39451835,39452676,39453417,39453815,39454552,39455386,39456254,39456817,39457276,39458055,39458868,39459812,39460247,39460778,39461568,39462401,39463279,39463980,39465401,39466405,39467558,39468715,39469849,39471004,39472088,39473159,39474289,39475448,39476569,39477746,39478936,39480039,39481110,39482152,39483339,39484787,39486294,39487846,39488950,39490031,39491212,39492282,39493352,39494452,39495504,39496525,39497559,39498458,39499486,39500521,39501386,39502277,39503041,39503927,39505398,39506818,39508340,39509492,39509917,39510504,39511006,39511539,39512092,39512588,39513116,39513640,39514120,39514645,39515146,39515636,39516129,39516646,39517222,39517739,39519441,39521091,39522776,39524354,39526074,39527729,39529356,39531015,39532737,39534420,39536196,39537844,39539479,39541078,39542768,39544356,39545263,39545797,39546844,39547366,39547794,39548108,39548952,39550061,39552098,39554145,39556175,39558191,39560209,39562203,39564194,39566178,39568204,39570237,39572263,39574289,39576306,39578320,39580331,39582292,39584314,39585688,39587058,39588676,39590213,39591563,39592964,39594202,39595322,39596443,39597566,39598693,39599815,39600938,39601737,39601806,39602721,39604713,39606761,39608620,39610488,39612396,39614253,39616101,39617996,39619901,39621754,39623702,39625621,39627554,39629515,39631366,39633273,39635193,39637118,39638996,39640789,39642786,39644660,39646548,39648482,39650390,39652228,39653990,39655812,39657577,39659500,39661402,39663292,39665164,39667037,39668920,39670823,39672730,39674572,39676574,39678324,39680204,39682059,39683981,39685843,39687474,39689310,39690770,39692283,39693906,39695535,39697136,39698658,39700111,39701696,39703297,39704908,39706557,39708091,39709595,39711184,39712761,39714259,39716142,39717782,39719396,39720901,39722509,39724478,39726293,39728063,39729830,39731686,39733546,39735392,39737261,39739177,39740601,39741882,39743182,39744529,39745838,39747194,39748534,39749781,39751381,39752830,39754287,39755727,39757191,39758686,39760149,39761579,39763049,39764667,39766122,39767575,39769043,39770549,39772019,39773475,39774912,39776522,39777977,39779437,39780886,39782351,39783842,39785300,39786751,39788182,39789822,39791247,39792663,39794078,39795581,39797030,39798473,39799881,39801480,39802883,39804318,39805697,39807125,39808605,39810060,39811485,39812885,39814506,39815911,39817267,39818695,39820181,39821633,39823033,39824427,39825973,39827436,39828794,39830191,39831660,39833130,39834552,39835983,39837374,39839007,39840437,39841805,39843273,39844771,39846239,39847687,39849111,39850607,39852214,39853685,39855120,39856579,39858058,39859571,39861036,39862437,39864044,39865377,39866681,39868033,39869418,39870761,39872119,39873426,39874692,39876254,39877588,39878890,39880279,39881631,39882965,39884272,39885548,39887101,39888433,39889731,39891064,39892437,39893746,39895113,39896451,39897704,39899338,39900786,39902216,39903676,39905160,39906667,39908134,39909542,39911149,39912572,39913979,39915434,39916921,39918394,39919862,39921303,39922703,39924313,39925687,39927043,39928467,39929920,39931395,39932821,39934199,39935713,39937251,39938616,39939968,39941434,39942913,39944360,39945746,39947154,39948754,39950160,39951552,39952986,39954433,39955901,39957332,39958745,39960127,39961770,39963179,39964577,39966005,39967507,39968971,39970399,39971791,39973479,39975129,39976961,39978725,39980487,39982295,39983942,39985729,39987561,39989395,39991199,39992947,39994528,39996377,39998113,39999906,40001591,40003414,40005217,40007075,40008938,40010755,40012695,40014597,40016424,40018333,40020264,40022103,40023917,40025703,40027541,40029331,40031117,40032881,40034766,40036591,40038384,40040135,40041883,40043662,40045384,40047097,40048846,40050743,40052567,40054377,40056098,40057878,40059628,40061382,40063116,40064894,40066885,40068723,40070544,40072357,40074154,40075979,40077808,40079615,40081520,40083248,40085001,40086781,40088503,40090234,40091954,40093733,40095488,40097349,40099242,40101097,40102930,40104746,40106561,40108309,40110091,40111869,40113735,40115404,40117145,40118921,40120431,40122173,40123920,40125576,40127324,40129119,40130885,40132611,40134401,40136011,40137682,40139285,40141091,40142892,40144641,40146328,40147934,40149572,40151269,40152947,40154630,40156290,40158060,40159727,40161365,40163023,40164697,40166396,40168077,40169784,40171452,40173304,40175108,40176814,40178604,40180442,40182239,40184045,40185840,40187696,40189451,40191198,40192923,40194677,40196476,40198221,40200031,40201764,40203609,40205412,40207309,40209180,40211052,40212976,40214935,40216766,40218620,40220325,40222000,40223739,40225465,40227206,40228973,40230713,40232449,40234243,40235922,40237642,40239476,40241259,40243048,40244920,40246648,40248406,40249962,40251416,40252933,40254473,40255971,40257482,40259012,40260485,40262303,40264305,40266241,40268195,40270198,40272168,40274111,40276100,40277994,40279939,40281931,40283939,40285931,40287851,40289827,40291824,40293831,40295783,40297072,40297110,40297150,40297188,40297306,40297515,40297553,40297593,40297631,40299159,40300941,40302769,40304611,40306457,40308297,40310104,40311903,40313809,40315293,40316752,40318183,40319629,40321042,40322453,40323901,40325364,40327186,40329030,40330843,40332602,40334389,40336147,40337952,40339708,40341523,40342266,40342693,40342731,40342771,40342811,40343128,40343168,40343206,40343246,40343646,40344840,40346135,40347911,40349627,40351371,40353137,40354887,40356601,40358337,40360084,40361855,40363158,40364475,40365866,40367375,40367991,40369366,40370906,40372234,40373313,40374843,40376615,40378216,40379621,40379659,40379699,40379737,40379859,40380064,40380102,40380142,40380180,40381243,40382497,40383707,40384841,40386114,40387824,40389437,40391091,40392790,40394463,40396115,40397788,40399427,40400335,40400373,40400413,40400451,40401171,40402109,40402179,40402650,40404332,40406177,40408181,40409827,40411455,40413085,40414728,40416368,40418049,40419783,40421513,40423216,40424976,40426689,40428460,40430174,40431870,40433537,40435214,40436912,40437774,40438927,40438972,40440820,40442621,40444326,40446041,40447804,40449554,40451287,40453008,40454830,40456723,40458553,40460442,40462332,40464167,40466026,40467838,40469642,40471610,40473399,40474956,40476663,40478344,40480088,40481869,40483664,40485384,40487250,40489099,40491025,40492859,40494779,40496581,40498542,40500326,40502308,40503922,40505127,40506308,40507362,40508416,40509779,40511179,40512519,40513900,40515294,40516623,40517765,40518878,40519973,40521111,40522280,40523546,40524907,40525617,40526495,40527490,40528621,40530207,40531779,40532641,40533317,40534053,40535065,40536645,40538373,40540094,40541315,40542322,40543676,40545399,40546639,40547751,40548515,40549475,40550373,40550958,40551666,40552720,40554013,40555295,40556479,40557789,40559176,40560570,40561930,40563184,40564897,40566815,40568723,40570632,40572459,40574313,40576227,40578080,40579985,40581852,40583780,40585702,40587652,40589493,40591365,40593287,40595128,40596088,40597022,40597970,40598922,40600888,40602851,40604448,40606430,40607978,40609122,40610352,40611507,40613116,40615112,40617115,40619137,40621152,40623004,40624940,40626832,40628687,40630722,40632764,40634812,40636844,40638789,40640586,40642323,40644198,40646015,40647835,40649580,40651379,40653136,40655108,40657063,40659007,40660912,40662908,40664202,40665497,40666857,40668615,40669819,40671061,40672320,40673705,40674892,40676117,40677342,40678635,40680446,40681599,40682833,40684216,40685565,40686661,40687403,40688365,40689945,40691429,40692179,40693051,40694723,40696449,40697273,40698013,40699491,40700978,40702292,40703692,40705090,40707054,40708825,40710589,40712409,40714225,40715983,40717806,40719681,40721457,40723228,40724893,40726572,40728228,40730017,40731776,40733573,40735380,40737165,40738628,40740020,40741470,40742956,40744472,40745903,40747316,40748789,40750407,40751897,40753341,40754844,40756481,40758020,40759486,40761001,40762672,40764639,40766625,40768557,40770478,40772492,40774476,40776445,40778449,40780395,40782160,40783928,40785668,40787497,40789160,40790704,40792275,40793894,40795846,40797734,40799526,40801438,40803317,40805127,40806925,40808742,40810687,40812578,40814428,40816318,40818259,40820036,40821859,40823628,40825461,40827187,40828714,40830200,40831734,40832972,40834218,40835454,40837185,40838328,40839565,40840769,40842077,40843591,40844705,40845933,40847510,40849354,40851139,40852890,40854658,40856578,40858360,40860136,40861900,40863772,40865582,40867423,40869247,40871034,40872065,40872925,40873746,40874459,40875630,40876797,40877947,40879126,40880393,40881572,40882800,40883984,40885327,40886585,40887970,40889329,40890618,40892444,40894275,40896143,40897993,40899886,40901717,40903565,40905432,40907347,40909248,40911175,40913093,40914980,40916932,40918837,40920799,40922754,40924620,40926464,40928343,40930134,40931928,40933764,40935501,40937152,40938819,40940400,40942314,40944114,40945968,40947883,40949758,40951603,40953522,40955273,40956760,40958160,40959620,40961168,40962663,40964360,40966126,40967646,40969240,40970934,40972568,40974266,40975967,40977751,40979486,40981255,40983101,40985078,40987130,40989173,40991043,40993042,40995026,40996992,40998917,41000943,41002896,41004831,41006705,41008335,41009453,41010872,41012144,41013439,41015208,41017000,41018742,41020480,41022141,41023638,41025196,41026797,41028526,41030322,41032112,41033899,41035699,41037507,41039340,41041133,41042935,41044628,41046296,41048018,41049655,41051277,41053047,41054875,41056603,41058112,41059122,41060241,41061158,41062642,41063668,41064575,41065442,41066555,41067776,41068835,41069933,41070883,41071952,41072514,41073044,41073587,41074279,41074967,41075709,41076432,41077395,41078205,41079424,41080579,41081658,41082985,41084319,41085779,41087114,41088482,41089920,41091359,41093074,41094577,41095852,41097410,41099060,41100392,41102041,41103754,41105359,41107028,41107926,41108153,41108386,41108595,41109386,41109897,41110345,41110823,41111658,41113698,41115720,41117772,41119813,41121842,41123881,41125917,41127945,41129992,41131963,41133884,41135854,41137748,41139648,41141582,41143496,41145384,41146819,41148203,41149626,41151081,41152425,41153559,41154722,41155840,41157073,41158520,41159879,41161423,41162914,41164763,41166575,41168406,41170285,41172152,41173975,41175758,41177566,41179454,41181224,41182973,41184728,41186529,41188268,41189964,41191718,41193391,41194831,41196292,41197787,41199227,41200661,41202107,41203645,41205132,41206713,41208607,41210494,41212349,41214281,41215481,41216765,41217980,41219251,41221101,41222928,41224709,41226508,41228195,41229660,41231044,41232561,41234125,41236164,41238190,41240227,41242242,41244253,41246242,41248212,41250211,41251960,41253473,41254965,41256442,41258149,41259852,41261506,41263192,41264914,41266909,41268889,41270908,41272904,41274764,41276487,41278208,41279938,41281914,41283968,41286021,41288069,41290021,41291318,41292553,41293291,41293823,41294362,41294901,41295842,41297266,41298695,41300113,41301236,41302534,41304120,41305733,41306982,41308341,41309901,41311447,41312932,41314426,41315965,41317716,41319347,41321263,41323109,41324429,41325654,41326995,41328244,41329435,41330383,41331376,41332343,41333683,41334551,41335525,41336460,41337297,41338990,41340961,41342923,41344885,41346862,41348902,41350889,41352856,41354862,41356681,41358174,41359690,41361299,41363108,41364708,41366415,41368035,41369797,41371417,41372891,41374490,41376173,41377885,41379570,41381288,41382896,41384495,41386138,41387781,41389279,41390782,41392311,41393911,41395407,41396992,41398876,41400798,41402648,41404499,41406410,41408302,41410158,41412023,41413899,41415410,41416885,41418335,41420242,41422195,41424162,41426176,41428179,41430031,41431823,41433629,41435420,41437264,41439171,41441091,41442995,41444680,41446064,41447527,41448915,41450347,41451803,41453344,41454836,41456270,41457829,41459501,41461215,41462847,41464397,41465938,41467517,41469069,41470695,41472425,41474062,41475811,41477567,41479226,41480988,41482648,41484384,41486055,41487720,41489238,41490955,41492607,41494277,41495778,41497444,41499181,41500610,41502175,41503727,41505273,41506731,41508296,41509915,41511639,41513136,41514644,41516202,41517716,41519193,41520654,41522216,41523941,41525415,41526739,41527968,41529495,41530996,41532621,41534347,41535770,41537441,41538932,41540485,41542239,41543980,41545524,41547180,41548604,41549835,41550973,41552257,41553549,41554910,41556120,41557499,41559265,41560595,41561986,41563356,41564588,41565745,41566876,41568174,41569363,41570755,41572220,41573606,41574957,41576544,41577894,41579092,41580452,41582322,41584045,41585803,41587377,41588633,41589665,41590686,41591555,41592500,41593574,41594759,41596070,41597314,41598913,41600522,41602072,41603796,41605733,41606787,41608014,41608997,41610005,41610831,41611463,41612679,41613825,41615223,41616421,41617688,41618942,41620276,41621843,41623577,41625382,41627370,41629056,41630844,41632644,41634246,41635549,41636800,41638012,41639325,41640610,41641928,41643275,41644511,41645714,41647033,41648332,41649515,41651167,41652824,41654505,41656191,41657701,41659133,41660703,41662468,41664011,41665663,41666883,41668089,41669350,41670589,41671887,41673193,41674673,41676228,41677875,41679263,41680562,41681925,41683155,41684289,41685505,41686828,41688296,41689988,41691719,41693385,41694967,41696335,41697800,41699163,41700642,41702298,41703895,41705217,41706490,41707702,41708952,41710118,41711371,41712889,41714639,41716304,41718068,41719658,41721213,41722928,41724583,41726037,41727722,41729354,41729706,41729973,41731561,41733186,41733576,41733858,41735356,41736934,41737348,41737616,41739132,41740732,41741170,41741433,41742966,41744560,41745022,41745285,41746731,41748310,41748783,41749045,41750278,41751571,41752834,41754068,41755526,41756789,41758090,41759391,41760783,41762107,41763341,41764671,41765966,41767381,41768665,41770015,41771316,41772754,41774281,41775529,41776755,41778030,41779233,41780510,41781754,41783047,41784292,41785751,41786943,41788156,41789332,41790514,41791715,41792909,41794095,41795606,41796871,41798128,41799426,41800716,41802032,41803305,41804612,41805890,41807772,41809495,41811276,41812970,41814640,41816263,41818092,41819938,41821393,41822650,41824013,41825368,41826711,41828082,41829434,41830701,41832104,41833394,41834834,41836138,41837512,41838894,41840293,41841649,41843140,41844976,41846615,41848204,41849794,41851410,41853026,41854530,41855914,41857220,41858592,41860004,41861495,41863012,41864569,41865989,41867568,41869301,41871189,41872854,41874445,41876020,41877636,41879216,41880693,41882092,41883401,41884791,41886184,41887646,41889187,41890724,41892138,41893698,41895405,41897301,41898981,41900563,41902156,41903805,41905402,41906897,41908361,41909636,41911002,41912420,41913874,41915441,41916977,41918400,41919904,41921631,41923546,41925219,41926807,41928391,41930047,41931641,41933145,41934623,41935869,41937241,41938640,41940087,41941673,41943197,41944623,41946137,41947839,41949734,41950919,41952142,41953214,41954099,41954981,41956021,41957044,41958042,41959143,41960443,41961683,41962876,41963773,41964754,41965833,41966845,41968438,41969614,41970838,41971942,41972859,41973741,41974781,41975796,41976742,41977851,41979127,41980347,41981570,41982508,41983495,41984567,41985601,41987059,41989028,41990943,41992862,41994824,41996793,41998748,42000700,42002622,42004486,42006290,42008067,42009924,42011798,42013742,42015664,42017616,42019307,42021044,42023014,42024951,42026928,42028950,42030936,42032863,42034833,42036848,42038621,42040366,42042138,42043897,42045687,42047439,42049295,42051059,42052794,42054572,42056353,42058123,42059954,42061480,42063402,42065397,42067336,42069217,42071096,42073050,42074914,42075965,42076769,42078286,42080221,42082205,42084192,42086190,42088119,42090108,42092079,42094021,42096057,42098010,42099988,42101966,42103898,42105891,42107834,42109807,42111809,42113384,42114924,42116489,42118083,42119653,42121219,42122814,42124380,42126157,42127872,42129491,42131166,42132716,42134578,42136389,42138218,42139988,42141831,42143334,42144923,42146434,42147949,42149661,42151342,42153043,42154662,42156435,42158058,42159770,42161473,42163341,42165147,42167013,42168844,42170734,42172382,42174067,42175747,42177332,42179190,42180987,42182828,42184648,42186443,42187974,42189604,42191138,42192772,42194399,42196122,42197801,42199484,42201233,42202958,42204726,42206490,42208223,42209781,42211498,42213191,42214974,42216480,42218183,42219990,42221608,42223288,42225098,42226846,42228468,42230153,42231734,42233487,42235101,42236678,42238246,42239986,42241622,42243319,42244359,42246241,42248146,42249700,42251270,42253213,42255084,42256589,42258136,42259884,42261886,42263907,42265871,42267593,42268907,42269891,42270983,42272297,42273414,42275167,42276768,42278312,42279744,42281150,42282635,42284118,42285628,42287350,42288527,42289630,42290450,42291461,42292784,42293804,42294819,42295867,42296976,42298319,42300145,42301917,42303795,42305588,42307469,42309257,42311128,42312926,42314766,42316449,42318075,42319848,42321456,42323244,42324971,42326649,42328504,42330392,42332178,42334044,42335856,42337703,42339541,42341403,42343183,42345057,42346812,42348416,42350190,42351816,42353579,42355315,42357031,42358818,42360612,42362480,42364323,42366174,42368053,42369890,42371799,42373623,42375589,42377520,42379436,42381423,42383308,42385265,42387218,42389245,42391188,42393121,42394902,42396627,42398423,42400180,42402017,42403847,42405675,42407425,42409111,42410554,42411820,42413359,42414902,42416659,42418095,42419197,42420429,42421536,42422305,42422549,42423347,42424668,42425898,42427286,42428519,42429952,42431267,42432525,42433895,42435217,42436627,42437917,42439222,42440568,42441876,42443347,42444686,42446002,42447348,42448705,42450184,42451828,42452728,42454385,42455841,42457713,42459639,42461644,42463688,42465688,42467700,42469669,42471586,42473468,42475099,42476638,42478144,42479723,42481364,42483021,42484735,42486488,42488291,42490016,42491746,42493384,42495097,42496661,42498273,42499917,42501251,42502918,42504745,42506684,42508548,42510269,42511941,42513710,42515648,42517645,42519552,42521349,42523016,42524847,42526749,42528675,42530461,42532143,42533808,42535734,42537640,42539552,42541299,42542883,42544814,42546759,42548721,42550647,42552518,42554120,42555939,42557807,42559682,42561552,42563215,42564169,42565165,42566158,42567113,42568763,42570250,42571958,42573525,42575186,42576804,42578505,42580147,42581679,42583526,42585216,42586902,42588636,42590329,42591996,42593665,42595299,42596982,42598636,42600394,42602318,42604058,42605836,42607525,42609172,42610983,42612678,42614300,42616071,42617711,42619530,42621142,42622791,42624447,42626085,42627835,42629710,42631609,42633511,42635399,42637344,42639262,42641053,42642730,42644487,42646131,42647820,42649731,42651650,42653528,42655413,42657330,42659282,42661260,42663162,42665119,42667064,42668948,42670731,42672507,42674290,42676088,42678055,42679967,42681864,42683750,42685664,42687518,42689392,42691308,42692695,42693973,42695295,42696890,42698480,42700136,42701731,42703460,42705339,42707191,42709074,42710905,42712775,42714594,42716442,42718357,42720174,42722070,42723972,42725680,42726321,42726810,42727409,42728670,42729721,42730845,42732182,42733434,42734573,42736118,42737829,42739439,42741063,42742725,42744493,42745986,42747662,42749387,42750694,42752354,42753889,42755244,42756479,42757976,42759599,42761274,42762990,42764755,42766417,42768154,42769815,42771423,42773010,42774370,42775870,42777346,42778861,42780285,42781736,42783242,42784676,42786163,42787566,42789089,42790529,42792337,42794141,42795981,42797880,42799723,42801565,42803403,42805245,42807136,42808974,42810805,42812680,42814591,42816465,42818350,42820200,42822117,42824082,42826075,42828003,42829896,42831794,42833713,42835634,42837565,42839464,42841413,42843351,42845238,42847104,42848950,42850847,42852741,42854622,42856207,42857598,42859043,42860821,42862458,42864040,42865675,42867276,42868883,42870548,42872182,42873874,42875547,42877207,42878845,42880518,42882142,42883780,42885399,42887025,42888771,42890437,42892074,42893743,42895384,42897007,42898649,42900310,42901962,42903899,42905771,42907637,42909509,42911396,42913253,42915112,42916971,42918901,42920721,42922564,42924378,42926229,42928081,42929922,42931760,42933608,42935595,42937447,42939312,42941177,42943027,42944873,42946740,42948600,42950537,42951869,42953293,42954730,42956117,42957471,42958922,42960525,42961909,42963260,42964646,42966161,42967571,42969030,42970554,42972466,42974365,42976172,42977914,42979717,42981572,42983420,42985325,42987181,42988816,42990569,42992358,42994017,42995693,42997405,42999138,43000762,43002449,43004146,43005873,43007544,43009320,43011033,43012833,43014441,43016156,43017866,43019732,43021540,43023418,43025128,43026765,43028665,43030522,43032469,43034297,43036152,43037794,43039578,43041331,43043110,43044934,43046545,43048181,43049912,43051579,43053334,43055070,43056650,43058476,43060205,43062001,43063726,43065543,43067149,43068876,43070503,43072113,43073872,43075506,43076631,43077909,43079155,43080382,43081678,43082975,43084033,43085714,43087320,43088821,43090386,43092013,43093576,43095095,43096694,43098269,43099847,43101386,43102954,43104709,43106526,43108438,43110358,43112219,43113756,43115641,43117079,43118491,43120264,43122048,43123895,43125642,43127356,43129000,43130470,43132173,43133879,43135660,43137331,43138708,43139999,43141801,43143627,43145447,43146927,43148415,43149867,43151316,43152998,43154564,43155982,43157580,43159110,43160637,43162132,43163668,43165147,43166679,43168069,43169468,43171006,43172541,43174132,43175596,43177072,43178549,43180254,43181790,43183320,43184781,43186145,43187622,43189111,43190841,43192639,43194522,43196332,43198149,43200006,43201796,43203547,43205249,43206871,43208515,43210308,43211979,43213778,43215496,43217240,43219030,43220767,43222489,43224358,43226294,43228115,43229977,43231785,43233645,43235481,43237214,43238887,43240569,43242269,43243980,43245751,43247471,43249147,43250843,43252657,43254439,43256050,43257888,43259590,43261310,43263006,43264752,43266361,43268057,43269728,43271464,43273270,43274941,43276645,43278289,43280057,43281761,43283508,43285195,43286789,43288578,43290338,43291730,43293219,43294990,43296759,43298422,43300113,43301857,43303267,43304773,43306315,43307830,43309312,43310745,43312334,43313855,43315350,43317144,43318906,43320569,43322309,43324039,43325700,43327443,43329191,43330818,43332472,43334126,43335791,43337438,43339038,43340651,43342289,43343962,43345625,43347257,43348867,43350556,43352170,43353832,43355472,43357217,43358859,43360505,43362132,43363759,43365468,43367093,43368761,43370407,43372116,43373753,43375405,43377038,43378739,43380365,43382005,43383605,43385318,43386940,43388575,43390300,43392069,43393791,43395446,43397069,43398711,43400444,43402070,43403741,43405372,43407159,43408825,43410440,43412067,43413721,43415431,43417219,43419068,43420768,43422422,43424130,43425942,43427642,43429348,43431107,43432941,43434730,43436467,43438356,43440241,43442107,43444100,43446061,43448018,43449944,43451923,43453812,43455633,43457500,43459456,43461466,43463482,43465482,43467392,43469258,43471179,43472966,43474803,43476772,43478791,43480817,43482812,43484818,43486764,43488705,43490618,43492508,43494426,43496362,43498299,43500256,43502223,43504052,43505854,43507787,43509702,43511597,43513424,43515037,43516660,43518452,43520315,43522146,43523807,43525452,43527056,43528677,43530307,43531953,43533525,43534926,43536289,43537600,43539062,43540530,43542053,43543507,43544911,43546317,43547825,43549348,43550677,43552106,43553652,43555116,43556521,43558177,43559884,43561578,43563327,43564976,43566661,43568358,43570130,43571833,43573511,43575234,43577059,43578751,43580437,43582077,43583771,43585444,43587158,43588819,43590503,43592160,43593892,43595566,43597296,43598927,43600568,43602326,43603952,43605596,43607258,43609182,43611061,43612972,43614893,43616796,43618709,43620604,43622497,43624429,43626215,43628001,43629798,43631613,43633627,43635627,43637638,43639680,43641719,43643747,43645772,43647795,43649833,43651881,43653908,43655957,43658005,43660061,43662115,43664143,43666186,43668167,43670019,43671868,43673789,43675710,43677647,43679519,43681370,43683272,43684719,43686142,43687629,43689141,43690872,43692473,43694032,43695612,43697204,43698757,43700363,43702018,43703464,43704972,43706553,43708122,43709653,43711265,43712851,43714268,43715826,43717233,43718824,43720553,43722487,43724227,43725925,43727616,43729296,43731211,43733089,43734961,43736780,43738555,43740338,43742108,43743927,43745805,43747336,43749229,43751208,43753224,43755195,43757098,43758993,43760801,43762456,43764119,43765881,43767602,43769368,43771108,43772908,43774585,43776273,43778050,43779708,43781406,43783101,43784462,43785943,43787452,43788980,43790479,43792068,43793604,43795128,43796627,43798190,43799688,43801183,43802703,43804266,43805777,43807283,43808781,43810295,43811651,43812968,43814271,43815531,43817120,43819046,43820969,43822872,43824746,43826707,43828631,43830557,43832493,43834067,43835382,43836640,43837973,43839317,43840609,43841914,43843281,43844870,43846376,43847850,43849386,43851044,43852621,43854147,43855802,43857318,43859147,43860773,43862445,43864180,43865515,43867181,43868843,43870504,43872398,43873604,43874838,43876093,43877381,43878650,43879923,43881167,43882391,43883876,43885066,43886032,43887210,43888306,43889610,43890693,43891819,43893147,43894463,43895728,43896987,43898188,43899466,43900706,43902078,43903445,43905064,43906447,43907730,43909043,43910396,43911716,43913031,43914333,43915712,43917709,43919169,43920827,43922580,43924248,43925807,43927282,43928725,43930702,43932612,43933671,43934899,43936016,43937267,43938546,43939680,43941613,43943598,43945522,43946983,43948798,43950628,43952443,43953912,43955841,43957788,43958234,43958859,43959335,43959820,43960408,43960930,43961494,43961894,43962771,43963370,43964708,43966125,43967504,43968743,43969908,43970716,43971386,43971971,43973015,43974408,43975929,43977439,43978862,43980246,43980860,43982116,43983061,43984524,43985955,43987138,43988479,43989719,43991011,43992398,43994333,43996062,43997780,43999568,44000799,44000868,44001377,44002414,44003176,44003655,44004355,44004832,44005531,44006067,44006676,44007481,44008710,44009473,44010709,44012141,44013537,44014960,44016387,44017802,44019498,44021117,44022792,44024396,44025955,44027479,44029223,44030985,44032371,44033470,44034570,44035789,44037060,44038453,44039675,44040933,44042302,44043752,44045362,44046918,44048599,44050289,44051741,44053044,44054500,44055742,44056040,44056065,44056095,44056120,44057027,44057699,44058999,44059874,44061518,44063125,44064783,44066389,44067984,44069250,44070902,44072439,44073975,44075524,44077389,44079294,44081232,44083136,44085074,44086974,44088088,44088942,44090408,44091898,44092903,44093863,44094983,44096254,44097676,44099099,44100591,44102058,44103625,44105133,44106854,44108607,44110166,44111773,44113293,44114852,44116419,44117975,44119481,44121057,44123026,44125074,44127129,44129164,44131102,44132965,44134996,44137004,44138824,44140601,44142541,44144407,44146450,44148439,44150476,44152470,44154503,44156491,44158521,44160494,44162550,44164600,44166435,44168166,44170138,44172143,44174155,44176147,44177905,44179564,44180926,44182115,44183354,44184555,44186392,44188401,44190165,44191881,44193739,44195650,44197475,44199239,44200997,44202752,44204698,44206634,44208615,44210582,44212535,44214548,44216534,44218509,44220169,44221715,44223293,44224825,44226385,44227933,44229495,44231025,44232490,44233873,44235220,44236563,44237871,44239110,44240495,44241782,44243671,44245673,44247673,44249635,44251634,44253613,44255567,44257477,44259487,44261475,44263189,44264897,44266554,44268213,44269891,44271559,44272114,44272371,44273298,44274653,44275988,44277207,44278217,44279277,44280185,44281209,44282666,44284377,44285996,44287643,44289393,44291106,44292694,44294188,44295801,44297347,44298952,44300498,44302071,44303542,44304985,44306291,44307435,44308513,44309845,44311103,44312369,44313590,44315031,44316460,44318031,44319621,44321133,44322609,44323990,44325406,44326372,44327336,44328764,44330347,44331540,44332337,44333649,44334903,44336383,44337860,44339332,44340851,44342167,44343326,44344739,44346226,44347806,44349494,44351291,44353146,44354921,44356753,44358420,44359967,44361604,44363215,44364847,44366402,44367990,44369481,44371059,44372562,44373866,44375173,44376683,44378220,44379684,44381049,44382439,44383824,44385214,44386584,44387414,44387916,44388478,44388928,44390215,44391675,44393300,44394825,44396273,44397696,44399225,44400734,44402195,44403538,44404750,44405871,44407138,44408463,44409927,44411422,44412590,44413583,44414087,44414412,44415966,44417764,44419633,44421409,44423048,44424575,44425654,44426694,44428123,44429673,44431244,44432812,44434382,44435962,44437526,44439084,44440920,44442680,44444510,44446244,44448121,44449924,44451780,44453569,44454916,44456289,44457692,44459055,44460492,44461904,44463522,44465199,44466832,44468370,44469887,44471394,44472907,44474443,44475931,44477400,44479258,44481196,44482820,44484362,44485139,44485871,44486802,44487635,44488827,44490332,44492019,44493695,44495305,44496784,44498342,44499682,44500909,44502099,44502895,44503469,44504355,44505173,44505921,44506526,44507719,44509274,44510011,44510513,44511097,44511594,44513186,44514991,44516285,44517372,44518464,44519496,44520840,44522219,44523433,44524492,44525458,44526354,44527712,44529163,44530624,44532069,44533484,44534939,44536615,44538320,44540054,44541696,44543586,44545490,44547146,44548717,44549832,44550865,44552095,44553232,44554275,44555252,44556210,44557045,44558214,44559206,44560452,44561672,44562421,44562911,44563531,44564155,44564758,44565269,44565884,44566496,44567068,44567579,44568223,44568845,44569436,44569951,44570584,44571178,44571733,44572143,44572694,44573237,44574899,44576777,44578048,44579090,44580206,44581240,44582357,44583393,44584553,44585657,44587377,44589136,44590780,44592507,44594177,44595870,44597561,44599241,44600520,44601735,44603302,44604974,44606656,44608370,44610237,44612087,44612639,44612845,44613194,44613482,44613747,44613945,44614308,44614493,44614751,44614807,44615064,44615089,44615302,44615432,44615700,44615934,44616229,44616482,44617696,44619190,44620752,44622441,44623635,44624722,44625795,44626872,44627998,44629224,44630728,44632185,44633674,44635093,44636917,44638766,44640536,44642228,44643834,44645218,44646857,44648448,44649943,44651324,44652718,44653997,44655318,44657058,44658659,44659888,44661410,44662893,44664368,44665877,44667370,44668573,44669969,44671421,44672853,44674308,44675848,44677371,44678863,44679916,44681140,44682457,44683907,44685027,44686310,44687550,44688681,44689742,44690983,44693031,44695079,44697127,44699175,44701223,44703271,44705319,44707367,44709415,44711463,44713511,44715559,44717607,44719655,44721703,44723751,44725799,44727847,44729895,44731943,44733991,44736039,44738087,44740135,44742183,44744239,44746279,44748209,44750257,44752305,44754353,44756401,44758449,44760497,44762545,44764593,44766641,44768689,44770737,44772785,44774833,44776881,44778929,44780977,44783025,44785073,44787121,44789169,44791217,44793265,44795313,44797361,44799414,44801449,44803324,44805372,44807420,44809397,44811445,44813493,44815474,44817522,44819570,44821618,44823666,44825714,44827762,44829745,44831793,44833841,44835889,44837937,44839985,44842033,44844081,44846056,44848104,44850152,44852200,44854182,44856230,44858278,44860326,44862374,44864349,44866397,44868445,44870493,44872541,44874597,44876645,44878622,44880670,44882718,44884766,44886817,44888730,44890778,44892826,44894874,44896890,44898820,44900868,44902834,44904882,44906850,44908898,44910946,44912994,44915042,44917090,44919138,44921186,44923234,44925282,44927330,44929378,44931426,44933474,44935522,44937578,44939626,44941665,44943667,44945481,44947529,44949577,44951625,44953673,44955721,44957769,44959817,44961865,44963913,44965961,44968009,44970057,44972105,44974161,44976217,44978265,44980321,44982377,44984313,44986216,44988264,44990312,44992360,44994416,44996472,44998428,45000355,45002403,45004451,45006499,45008552,45010598,45012523,45014484,45016532,45018580,45020628,45022676,45024724,45026772,45028820,45030868,45032916,45034964,45037012,45039060,45041108,45043156,45045204,45047252,45049308,45051356,45053404,45055452,45057500,45059548,45061596,45063644,45065692,45067743,45069781,45071736,45073583,45075631,45077679,45079727,45081775,45083823,45085871,45087919,45089967,45092015,45094063,45096111,45098159,45100207,45102255,45104303,45106351,45108399,45110447,45112495,45114543,45116591,45118639,45120687,45122735,45124789,45126840,45128888,45130855,45132583,45134631,45136610,45138658,45140634,45142682,45144730,45146778,45148826,45150874,45152922,45154970,45157018,45159066,45161114,45163162,45165210,45167258,45169306,45171354,45173402,45175450,45177498,45179546,45181594,45183642,45185690,45187738,45189786,45191834,45193882,45195879,45197816,45199864,45201912,45203960,45206008,45208056,45210104,45212152,45214200,45216248,45218296,45220344,45222392,45224440,45226488,45228536,45230584,45232632,45234680,45236728,45238776,45240824,45242872,45244920,45246968,45249023,45251067,45252947,45254995,45257043,45259091,45261139,45263107,45265155,45267203,45269251,45271299,45273254,45275302,45277350,45279398,45281446,45283494,45285542,45287508,45289556,45291604,45293652,45295700,45297748,45299796,45301762,45303810,45305866,45307914,45309962,45311938,45313986,45316034,45318082,45320130,45322178,45324226,45326274,45328322,45330370,45332418,45334466,45336514,45338562,45340610,45342658,45344706,45346683,45348731,45350779,45352827,45354875,45356923,45358971,45361019,45363067,45365115,45367163,45369211,45371259,45373307,45375355,45377403,45379451,45381422,45383470,45385518,45387566,45389614,45391662,45393710,45395758,45397806,45399854,45401902,45403950,45405998,45408046,45410094,45412142,45414190,45416238,45418216,45420264,45422312,45424360,45426408,45428456,45430504,45432552,45434600,45436648,45438696,45440744,45442792,45444840,45446888,45448936,45450984,45453032,45455080,45457054,45459102,45461150,45463198,45465246,45467294,45469342,45471390,45473438,45475486,45477534,45479582,45481630,45483678,45485726,45487774,45489822,45491804,45493852,45495900,45497948,45499996,45502044,45504092,45506140,45508188,45510236,45512284,45514332,45516380,45518428,45520476,45522524,45524572,45526620,45528596,45530644,45532623,45534671,45536651,45538699,45540684,45542732,45544780,45546755,45548731,45550779,45552495,45554454,45556502,45558550,45560560,45562437,45564393,45566434,45568482,45570506,45572420,45574328,45576376,45578424,45580479,45582433,45584333,45586348,45588396,45590448,45592419,45594328,45596315,45598369,45600417,45602421,45604330,45606279,45608314,45610362,45612387,45614302,45616269,45618317,45620365,45622413,45624461,45626509,45628557,45630605,45632653,45634701,45636749,45638797,45640845,45642843,45644891,45646939,45648987,45651035,45653083,45655131,45657179,45659227,45661275,45663323,45665371,45667419,45669467,45671448,45673496,45675544,45677592,45679640,45681688,45683736,45685784,45687832,45689880,45691928,45693910,45695958,45698006,45700054,45702102,45704150,45706198,45708246,45710294,45712342,45714390,45716366,45718414,45720462,45722510,45724558,45726531,45728579,45730627,45732675,45734660,45736708,45738685,45740733,45742712,45744690,45746738,45748715,45750763,45752811,45754859,45756907,45758885,45760933,45762981,45765029,45767077,45769053,45771029,45773002,45775050,45777098,45779146,45781194,45783242,45785290,45787338,45789386,45791434,45793482,45795530,45797578,45799626,45801674,45803722,45805770,45807818,45809795,45811843,45813891,45815939,45817987,45820035,45822083,45824131,45826179,45828227,45830275,45832323,45834371,45836419,45838467,45840515,45842563,45844611,45846659,45848635,45850649,45852692,45854672,45856720,45858695,45860680,45862728,45864776,45866753,45868801,45870849,45872825,45874873,45876855,45878903,45880883,45882931,45884914,45886962,45888940,45890988,45893036,45895084,45897132,45899180,45901228,45903276,45905324,45907372,45909420,45911468,45913516,45915564,45917612,45919660,45921708,45923756,45925732,45927780,45929828,45931876,45933924,45935972,45938020,45940068,45942116,45944164,45946212,45948260,45950308,45952356,45954404,45956452,45958500,45960548,45962544,45964592,45966640,45968618,45970666,45972714,45974762,45976737,45978785,45980833,45982881,45984929,45986905,45988953,45991001,45993049,45995097,45997069,45999117,46001165,46003213,46005261,46007309,46009357,46011405,46013453,46015501,46017549,46019597,46021571,46023619,46025667,46027715,46029763,46031811,46033859,46035830,46037878,46039926,46041974,46044022,46046070,46048055,46050103,46052151,46054199,46056247,46058295,46060343,46062391,46064439,46066487,46068535,46070583,46072631,46074679,46076727,46078775,46080823,46082871,46084850,46086898,46088946,46090994,46093042,46095090,46097138,46099186,46101234,46103282,46105330,46107378,46109426,46111474,46113522,46115570,46117618,46119666,46121643,46123691,46125739,46127787,46129835,46131883,46133931,46135979,46138027,46140075,46142123,46144171,46146219,46148267,46150315,46152363,46154411,46156459,46158507,46160555,46162603,46164622,46166460,46168508,46170556,46172604,46174652,46176700,46178748,46180796,46182844,46184892,46186940,46188988,46191036,46193092,46195140,46197188,46199236,46201288,46203330,46205337,46207330,46209295,46211094,46213003,46215051,46217099,46219147,46221195,46223243,46225291,46227339,46229387,46231435,46233483,46235531,46237579,46239627,46241675,46243723,46245771,46247819,46249867,46251915,46253963,46256011,46257990,46260038,46262086,46264134,46266182,46268230,46270278,46272326,46274374,46276422,46278470,46280518,46282566,46284614,46286662,46288710,46290758,46292806,46294854,46296902,46298950,46300998,46303046,46305002,46307050,46309098,46311146,46313194,46315242,46317290,46319338,46321386,46323434,46325482,46327530,46329578,46331626,46333674,46335722,46337770,46339818,46341799,46343847,46345895,46347943,46349991,46352039,46354087,46356135,46358183,46360231,46362279,46364327,46366375,46368423,46370471,46372519,46374567,46376615,46378663,46380555,46382603,46384651,46386699,46388747,46390795,46392843,46394891,46396939,46398987,46401035,46403083,46405131,46407179,46409227,46411275,46413323,46415371,46417345,46419393,46421441,46423489,46425537,46427585,46429633,46431681,46433729,46435777,46437825,46439873,46441921,46443969,46446017,46448065,46450113,46452095,46454143,46456191,46458239,46460287,46462335,46464383,46466275,46468323,46470371,46472347,46474395,46476443,46478491,46480539,46482587,46484635,46486683,46488731,46490779,46492750,46494798,46496846,46498894,46500942,46502990,46505038,46507086,46509134,46511182,46513230,46515278,46517326,46519374,46521422,46523470,46525518,46527575,46529623,46531671,46533719,46535767,46537815,46539863,46541911,46543959,46546007,46548055,46550103,46552151,46554199,46556247,46558227,46560275,46562323,46564371,46566419,46568467,46570515,46572563,46574611,46576659,46578707,46580755,46582803,46584851,46586899,46588947,46590995,46593043,46595091,46597139,46599187,46601235,46603283,46605331,46607379,46609427,46611475,46613523,46615571,46617619,46619667,46621715,46623763,46625741,46627789,46629837,46631885,46633933,46635981,46638029,46640077,46642059,46644107,46646155,46648203,46650251,46652299,46654347,46656395,46658440,46660450,46662498,46664488,46666544,46668592,46670575,46672623,46674671,46676719,46678767,46680815,46682863,46684911,46686959,46689007,46691055,46693103,46695151,46697199,46699176,46701224,46703272,46705320,46707368,46709416,46711464,46713512,46715560,46717608,46719656,46721704,46723752,46725809,46727788,46729836,46731884,46733932,46735980,46738028,46740076,46742124,46744172,46746220,46748268,46750246,46752294,46754342,46756390,46758438,46760486,46762534,46764582,46766630,46768678,46770726,46772701,46774678,46776726,46778774,46780747,46782795,46784776,46786824,46788840,46790816,46792835,46794768,46796816,46798793,46800841,46802889,46804862,46806910,46808883,46810931,46812902,46814950,46817005,46819053,46821101,46823149,46825197,46827245,46829293,46831341,46833389,46835437,46837485,46839533,46841581,46843629,46845677,46847725,46849773,46851821,46853869,46855917,46857965,46860013,46862061,46864109,46866080,46868128,46870176,46872224,46874272,46876320,46878368,46880416,46882464,46884512,46886560,46888608,46890656,46892704,46894752,46896800,46898848,46900896,46902944,46904992,46907040,46909088,46911136,46913184,46915232,46917280,46919257,46921305,46923353,46925401,46927449,46929497,46931545,46933518,46935566,46937614,46939662,46941710,46943758,46945743,46947791,46949770,46951818,46953793,46955841,46957889,46959937,46961985,46963964,46966012,46968060,46970108,46972156,46974204,46976180,46978228,46980276,46982324,46984372,46986420,46988468,46990516,46992564,46994612,46996660,46998708,47000756,47002804,47004852,47006833,47008881,47010929,47012977,47015025,47017073,47019121,47021169,47023217,47025265,47027313,47029361,47031409,47033457,47035505,47037553,47039534,47041582,47043630,47045592,47047640,47049688,47051660,47053708,47055756,47057804,47059852,47061900,47063948,47065996,47068044,47070092,47072140,47074188,47076236,47078284,47080332,47082380,47084428,47086476,47088524,47090579,47092627,47094674,47096705,47098627,47100391,47102439,47104487,47106535,47108583,47110631,47112679,47114727,47116775,47118823,47120871,47122919,47124967,47127015,47129063,47131111,47133159,47135207,47137255,47139303,47141351,47143399,47145447,47147469,47149319,47151266,47153314,47155362,47157410,47159458,47161506,47163554,47165602,47167650,47169698,47171746,47173794,47175842,47177890,47179938,47181986,47184034,47186090,47188147,47190203,47192259,47194293,47196150,47198198,47200246,47202294,47204342,47206390,47208438,47210486,47212534,47214582,47216630,47218678,47220726,47222774,47224822,47226870,47228918,47230975,47233023,47235071,47237125,47239166,47241055,47243001,47245049,47247097,47249145,47251193,47253241,47255221,47257206,47259236,47261262,47263310,47265358,47267406,47269454,47271502,47273550,47275598,47277577,47279625,47281673,47283721,47285769,47287817,47289865,47291913,47293961,47295942,47297990,47300038,47302086,47304134,47306182,47308159,47310207,47312255,47314303,47316351,47318399,47320373,47322421,47324469,47326517,47328565,47330613,47332661,47334709,47336757,47338805,47340853,47342901,47344949,47346997,47349045,47351093,47353141,47355189,47357237,47359285,47361333,47363381,47365429,47367347,47369395,47371443,47373491,47375539,47377587,47379635,47381683,47383731,47385779,47387827,47389875,47391923,47393971,47396019,47398067,47400115,47402163,47404211,47406259,47408307,47410355,47412403,47414451,47416394,47418442,47420490,47422538,47424586,47426634,47428682,47430730,47432778,47434826,47436874,47438922,47440970,47443018,47445066,47447114,47449162,47451210,47453258,47455306,47457362,47459418,47461471,47463285,47465333,47467381,47469429,47471477,47473525,47475573,47477621,47479669,47481717,47483765,47485813,47487861,47489909,47491957,47494005,47496053,47498101,47500149,47502197,47504253,47506301,47508349,47510379,47512242,47514290,47516266,47518314,47520291,47522329,47524347,47526326,47528374,47530422,47532470,47534518,47536566,47538603,47540515,47542563,47544611,47546659,47548707,47550755,47552810,47554747,47556795,47558843,47560891,47562939,47564987,47567035,47569083,47571131,47573179,47575157,47577205,47579253,47581301,47583349,47585397,47587445,47589493,47591541,47593589,47595568,47597553,47599601,47601493,47603541,47605516,47607514,47609406,47611454,47613502,47615550,47617598,47619646,47621694,47623742,47625790,47627838,47629886,47631934,47633982,47636030,47638078,47640126,47642174,47644222,47646201,47648249,47650297,47652345,47654393,47656441,47658489,47660537,47662585,47664633,47666681,47668729,47670777,47672825,47674873,47676921,47678969,47681017,47682994,47685042,47687090,47689138,47691186,47693234,47695282,47697330,47699378,47701426,47703474,47705522,47707570,47709618,47711666,47713646,47715694,47717742,47719790,47721838,47723886,47725934,47727982,47730030,47732078,47734126,47736174,47738222,47740270,47742318,47744366,47746343,47748391,47750439,47752487,47754535,47756514,47758562,47760617,47762665,47764713,47766696,47768744,47770792,47772840,47774888,47776936,47778984,47781032,47783080,47785128,47787176,47789224,47791272,47793320,47795368,47797416,47799464,47801512,47803560,47805608,47807582,47809630,47811678,47813726,47815774,47817822,47819870,47821918,47823966,47826014,47828062,47830110,47832158,47834206,47836254,47838302,47840350,47842398,47844446,47846427,47848475,47850523,47852571,47854619,47856667,47858649,47860697,47862745,47864793,47866841,47868889,47870868,47872916,47874964,47877012,47879060,47881108,47883156,47885204,47887252,47889300,47891348,47893396,47895444,47897492,47899540,47901588,47903636,47905684,47907657,47909705,47911753,47913801,47915849,47917897,47919945,47921993,47924041,47926089,47928137,47930185,47932233,47934281,47936329,47938377,47940425,47942405,47944453,47946501,47948549,47950597,47952645,47954693,47956741,47958789,47960768,47962816,47964864,47966912,47968960,47971008,47973056,47975104,47977102,47979150,47981198,47983246,47985294,47987342,47989390,47991438,47993486,47995534,47997582,47999630,48001678,48003726,48005774,48007822,48009870,48011846,48013894,48015942,48017990,48020038,48022086,48024134,48026182,48028230,48030278,48032326,48034374,48036422,48038470,48040518,48042566,48044614,48046591,48048639,48050533,48052581,48054629,48056677,48058624,48060672,48062720,48064768,48066719,48068699,48070679,48072727,48074702,48076503,48078476,48080453,48082501,48084474,48086522,48088570,48090618,48092666,48094722,48096770,48098818,48100873,48102887,48104843,48106561,48108609,48110657,48112705,48114753,48116801,48118849,48120897,48122945,48124993,48127041,48129043,48130899,48132947,48134995,48137043,48139091,48141139,48143187,48145235,48147283,48149331,48151308,48153356,48155404,48157452,48159500,48161548,48163596,48165644,48167692,48169740,48171714,48173762,48175810,48177858,48179906,48181880,48183928,48185976,48188024,48190072,48192045,48194093,48196141,48198189,48200237,48202290,48204186,48206234,48208282,48210330,48212378,48214434,48216475,48218313,48220368,48222416,48224464,48226512,48228560,48230608,48232656,48234704,48236752,48238800,48240848,48242896,48244944,48246992,48249040,48251088,48253136,48255184,48257232,48259280,48261328,48263376,48265424,48267472,48269520,48271568,48273464,48275520,48277568,48279616,48281664,48283712,48285760,48287808,48289856,48291904,48293952,48296000,48298048,48300096,48302144,48304192,48306240,48308288,48310336,48312384,48314432,48316480,48318528,48320576,48322624,48324672,48326720,48328672,48329705,48330799,48332435,48333820,48335645,48336952,48337921,48339078,48340454,48341876,48343335,48344825,48346588,48348455,48350338,48352232,48354178,48356011,48357899,48359947,48361995,48364043,48366091,48368139,48370187,48372235,48374283,48376331,48378379,48380427,48382475,48384523,48386571,48388619,48390667,48392715,48394763,48396817,48398789,48400837,48402885,48404933,48406981,48409029,48411077,48413125,48415173,48417221,48419269,48421317,48423365,48425413,48427461,48429509,48431557,48433613,48435661,48437640,48439688,48441736,48443784,48445832,48447880,48449928,48451976,48454024,48456072,48458120,48460168,48462216,48464264,48466312,48468360,48470408,48472456,48474504,48476552,48478527,48480575,48482623,48484671,48486719,48488767,48490815,48492863,48494911,48496959,48499007,48501055,48503103,48505151,48507199,48509247,48511295,48513343,48515391,48517368,48519416,48521464,48523512,48525560,48527608,48529656,48531704,48533752,48535800,48537848,48539896,48541944,48543992,48546040,48548088,48550136,48552184,48554232,48556280,48558257,48560305,48562353,48564401,48566449,48568497,48570545,48572593,48574641,48576689,48578737,48580785,48582833,48584881,48586929,48588977,48591025,48593073,48595121,48597169,48599140,48601188,48603236,48605284,48607332,48609380,48611428,48613476,48615524,48617572,48619620,48621668,48623716,48625764,48627812,48629860,48631908,48633956,48636004,48637982,48640030,48642078,48644126,48646174,48648222,48650270,48652318,48654366,48656414,48658462,48660510,48662558,48664606,48666654,48668702,48670750,48672798,48674846,48676894,48678867,48680915,48682963,48684941,48686989,48688970,48691018,48692485,48693830,48695409,48696934,48698103,48699474,48700990,48702354,48703237,48704031,48704894,48705734,48706627,48707434,48709471,48711519,48711649,48711674,48711699,48713565,48715619,48716918,48716943,48716968,48717992,48719159,48720535,48721432,48723480,48725424,48727426,48729474,48731522,48733570,48735618,48737666,48739669,48741717,48743765,48745774,48747822,48749870,48751869,48753917,48755965,48758013,48760061,48762109,48764157,48766046,48768047,48769997,48771943,48773887,48775826,48777778,48779727,48781735,48783783,48785831,48787879,48789927,48791975,48793868,48795742,48797790,48799838,48801886,48803934,48805941,48807989,48809855,48811903,48813951,48815962,48818010,48820058,48822057,48824105,48826161,48828209,48830257,48832305,48834353,48836409,48838410,48840458,48842506,48844554,48846602,48848650,48850698,48852697,48854745,48856754,48858802,48860676,48862724,48864772,48866820,48868868,48870916,48872964,48874971,48877019,48879067,48881115,48883163,48885131,48887179,48889053,48891109,48893005,48895053,48896937,48898875,48900797,48902804,48904725,48906541,48908589,48910637,48912685,48914733,48916781,48918829,48920877,48922925,48924973,48926954,48929002,48930981,48933026,48935033,48937081,48939049,48940990,48942995,48944994,48946932,48948876,48950802,48952800,48954848,48956896,48958903,48960951,48962999,48965047,48967050,48969098,48971089,48973137,48975185,48977233,48979281,48981329,48983377,48985425,48987473,48989521,48991569,48993617,48995665,48997670,48999718,49001766,49003814,49005862,49007910,49009915,49011963,49014011,49016059,49018107,49020155,49022203,49024150,49026198,49028246,49030294,49032342,49034390,49036438,49038486,49040439,49042383,49044431,49046305,49048353,49050401,49052449,49054497,49056545,49058593,49060641,49062689,49064679,49066727,49068775,49070780,49072828,49074876,49076880,49078885,49080933,49082981,49085029,49087077,49089125,49091173,49093177,49095225,49097273,49099321,49101369,49103417,49105465,49107513,49109561,49111609,49113657,49115705,49117753,49119801,49121849,49123897,49125945,49127993,49130000,49131941,49133856,49135904,49137822,49139770,49141818,49143696,49145702,49147648,49149696,49151744,49153792,49155840,49157844,49159892,49161940,49163988,49166036,49168084,49170093,49171963,49173902,49175905,49177953,49179952,49181836,49183662,49185710,49187758,49189806,49191854,49193902,49195901,49197842,49199848,49201792,49203840,49205888,49207936,49209984,49212032,49214080,49216128,49218173,49220211,49222259,49224307,49226355,49228403,49230451,49232499,49234547,49236595,49238643,49240691,49242739,49244739,49246787,49248835,49250883,49252931,49254979,49256982,49259030,49261078,49262900,49264825,49266463,49268511,49270559,49272607,49274655,49276577,49278625,49280673,49282721,49284700,49286748,49288796,49290741,49292789,49294730,49296778,49298619,49300667,49302669,49304717,49306765,49308511,49310559,49312431,49314479,49316527,49318575,49320623,49322671,49324719,49326682,49328730,49330778,49332826,49334874,49336922,49338970,49341018,49343020,49345068,49347116,49349164,49351212,49353260,49355212,49357260,49359308,49361356,49363404,49365276,49367324,49369372,49371339,49373387,49375290,49377264,49379189,49381237,49383180,49385228,49387167,49389215,49391263,49393311,49395359,49397407,49399455,49401461,49403509,49405459,49407507,49409555,49411603,49413651,49415656,49417704,49419752,49421800,49423848,49425896,49427895,49429943,49431991,49433993,49436041,49437912,49439960,49442008,49444056,49446104,49448110,49450158,49452206,49454169,49456217,49458265,49460313,49462309,49464357,49466312,49468360,49470292,49472234,49474230,49476160,49478208,49480215,49482263,49484311,49486359,49488173,49490146,49492088,49494043,49496091,49498139,49500187,49502235,49504283,49506270,49508318,49510193,49512148,49514033,49515972,49518020,49520068,49522116,49524164,49526212,49528165,49530213,49532184,49534232,49536232,49538116,49539843,49541891,49543939,49545987,49548035,49550083,49552131,49554140,49556033,49558081,49560129,49562177,49564180,49566228,49568276,49570324,49572285,49574333,49576263,49578272,49580320,49582368,49584416,49586418,49588466,49590514,49592523,49594571,49596619,49598667,49600671,49602719,49604767,49606815,49608863,49610871,49612919,49614967,49616909,49618957,49621005,49623053,49625101,49626968,49629016,49631064,49633112,49635160,49637104,49639152,49641200,49643248,49645266,49647280,49649328,49651342,49653390,49655207,49657255,49659225,49661273,49663321,49665077,49667125,49669173,49671221,49673220,49675268,49677316,49679321,49681306,49683362,49685410,49687458,49689506,49691554,49693602,49695651,49697699,49699755,49701692,49703740,49705788,49707836,49709884,49711888,49713936,49715984,49717926,49719974,49722022,49724070,49726118,49728166,49730035,49732083,49733957,49735803,49737801,49739849,49741897,49743945,49745993,49748041,49749224,49751107,49753155,49755203,49757251,49759190,49761238,49763286,49765265,49767313,49769361,49771090,49773138,49775089,49777137,49778989,49781037,49782917,49784965,49786837,49788885,49790933,49792981,49794753,49796801,49798849,49800897,49802945,49804993,49806939,49808987,49811035,49812954,49815002,49817050,49818989,49820912,49822960,49824921,49826969,49829017,49831065,49833017,49835020,49836939,49838987,49841035,49843083,49845131,49847179,49849186,49851234,49853282,49855330,49857378,49859400,49861396,49863444,49865492,49867467,49869505,49871553,49873601,49874798,49876846,49878894,49880942,49882990,49884992,49887040,49889088,49891136,49893137,49895185,49897233,49899281,49901329,49903377,49905383,49907431,49909479,49911527,49913575,49915623,49917634,49919682,49921730,49923778,49925826,49927874,49929875,49931923,49933971,49936019,49938001,49940049,49942097,49944145,49946193,49948197,49950245,49952293,49954341,49956341,49958389,49960396,49962444,49964492,49966540,49968588,49970636,49972321,49974194,49976242,49978239,49980242,49982216,49984272,49986273,49988321,49990369,49992417,49994465,49996341,49998389,50000437,50002485,50004533,50006581,50008629,50010677,50012725,50014773,50016821,50018869,50020917,50022965,50025013,50027061,50029109,50030985,50033033,50034913,50036961,50039009,50041057,50043105,50044978,50047026,50049074,50051122,50053170,50055218,50057266,50059314,50061200,50062966,50064960,50067008,50068865,50070417,50072465,50074465,50076468,50078516,50080564,50082503,50084551,50086554,50088572,50090590,50092628,50094540,50096527,50098575,50100514,50102462,50104510,50106453,50108392,50110440,50112437,50114485,50116533,50118581,50120521,50122569,50124617,50126559,50128607,50130655,50132703,50134700,50136748,50138732,50140687,50142643,50144691,50146739,50148787,50150835,50152834,50154882,50156930,50158978,50160979,50163027,50165075,50167062,50169110,50171158,50173112,50175160,50177099,50179052,50181100,50183148,50185119,50187167,50189117,50191165,50193170,50195218,50197106,50199047,50201095,50203143,50205151,50207092,50209050,50211098,50213146,50215021,50217069,50219027,50221023,50223071,50225119,50227167,50229215,50231263,50233311,50235359,50237407,50239413,50241461,50243509,50245557,50247605,50249603,50251651,50253699,50255701,50257717,50259765,50261647,50263695,50265743,50267791,50269734,50271782,50273718,50275657,50277599,50279546,50281594,50283405,50285453,50287501,50289549,50291597,50293645,50295693,50297741,50299789,50301837,50303885,50305933,50307981,50310037,50312085,50314094,50316142,50318147,50320150,50322198,50324246,50326294,50328342,50330390,50332438,50334440,50336488,50338536,50340584,50342632,50344680,50346728,50348731,50350779,50352827,50354875,50356874,50358922,50360970,50363018,50365066,50367114,50369162,50371210,50373258,50375306,50377354,50379402,50381450,50383451,50385499,50387547,50389595,50391643,50393691,50395739,50397787,50399835,50401883,50403931,50405979,50408027,50410030,50412078,50414126,50416174,50418222,50420270,50422318,50424366,50426414,50428462,50430510,50432511,50434559,50436607,50438655,50440703,50442751,50444799,50446847,50448895,50450900,50452948,50454996,50457044,50459092,50461140,50463188,50465236,50467284,50469332,50471380,50473382,50475430,50477478,50479526,50481574,50483622,50485670,50487678,50489726,50491774,50493822,50495870,50497918,50499966,50502014,50504015,50506063,50508111,50510159,50512207,50514255,50516303,50518307,50520355,50522403,50524451,50526499,50528547,50530552,50532600,50534648,50536696,50538744,50540683,50542686,50544688,50546689,50548737,50550785,50552833,50554703,50556701,50558749,50560690,50562738,50564786,50566834,50568838,50570886,50572934,50574982,50577030,50579078,50581085,50583133,50585181,50587229,50589277,50591325,50593330,50595378,50597426,50599474,50601522,50603462,50605467,50607515,50609563,50611572,50613620,50615668,50617672,50619720,50621768,50623775,50625823,50627871,50629876,50631924,50633972,50635851,50637899,50639947,50641995,50644043,50646091,50648139,50650187,50652235,50654237,50656285,50658333,50660381,50662429,50664477,50666525,50668573,50670621,50672625,50674630,50676639,50678687,50680628,50682676,50684724,50686664,50688712,50690760,50692361,50694409,50696409,50698457,50700505,50702553,50704601,50706649,50708697,50710745,50712793,50714841,50716889,50718937,50720985,50723033,50725081,50727082,50729130,50731178,50733226,50735274,50737322,50739370,50741418,50743466,50745514,50747515,50749563,50751611,50753659,50755707,50757755,50759803,50761851,50763899,50765947,50767106,50768685,50770733,50772676,50774724,50776492,50778540,50780588,50782636,50784684,50786732,50788780,50790752,50792800,50794848,50796896,50798944,50800992,50803030,50805026,50807074,50809122,50811170,50813218,50815266,50817314,50819321,50821369,50823417,50825465,50827513,50829561,50831565,50833613,50835661,50837709,50839757,50841805,50843807,50845855,50847903,50849951,50851953,50853952,50856000,50858048,50860096,50862144,50864192,50866240,50868288,50870336,50872337,50874385,50876433,50878481,50880536,50882584,50884583,50886631,50888679,50890682,50892730,50894778,50896826,50898874,50900922,50902970,50904842,50906890,50908938,50910986,50913034,50915082,50916937,50918985,50921033,50923081,50925129,50927177,50929225,50931273,50933321,50935195,50937243,50939291,50941339,50943215,50945263,50947311,50949359,50951407,50953455,50955503,50957551,50959599,50961647,50963695,50965743,50967791,50969839,50971598,50973646,50975694,50977742,50979790,50981838,50983847,50985895,50987943,50989991,50992039,50994041,50996089,50998137,51000185,51002196,51004244,51006182,51008181,51010229,51012277,51014077,51016125,51018173,51020221,51022269,51024209,51026010,51027608,51029656,51031704,51033752,51035624,51037672,51039720,51041768,51043816,51045864,51047912,51049960,51051962,51053927,51055975,51057962,51059858,51061840,51063888,51065936,51067805,51069853,51071901,51073949,51075997,51078045,51080093,51082098,51084146,51086194,51088242,51090290,51092338,51094339,51096387,51098259,51100307,51102306,51104354,51106224,51108272,51110320,51112368,51114416,51116464,51118512,51120560,51122608,51124656,51126704,51128752,51130755,51132803,51134851,51136899,51138947,51140995,51143043,51145091,51147139,51149142,51151190,51153238,51155286,51157334,51159382,51161430,51163436,51165311,51167359,51169232,51171280,51173328,51175376,51177424,51179472,51181476,51183524,51185572,51187620,51189668,51191716,51193764,51195812,51197812,51199860,51201908,51203956,51206004,51208052,51210100,51212102,51214150,51216198,51218246,51220294,51222342,51224390,51226392,51228440,51230488,51232536,51234584,51236632,51238680,51240679,51242727,51244731,51246779,51248827,51250875,51252923,51254971,51257019,51259067,51261115,51263163,51265211,51267216,51269264,51271312,51273360,51275408,51277456,51279504,51281552,51283600,51285648,51287696,51289700,51291748,51293796,51295844,51297892,51299940,51301988,51304036,51306084,51308092,51310140,51312188,51314236,51316284,51318332,51320380,51322428,51324476,51326524,51328572,51330620,51332668,51334716,51336727,51338775,51340823,51342871,51344919,51346967,51348974,51351022,51353070,51355118,51357166,51359054,51361102,51362970,51364847,51366895,51368943,51370905,51372953,51375001,51377049,51379097,51381145,51383193,51385241,51387289,51389337,51391336,51393384,51395432,51397480,51399528,51401533,51403581,51405629,51407677,51409725,51411664,51413712,51415760,51417808,51419856,51421802,51423850,51425898,51427946,51429894,51431942,51433990,51435933,51437981,51440029,51442077,51444125,51446173,51448221,51450269,51452317,51454365,51456364,51458412,51460460,51462508,51464556,51466604,51468652,51470700,51472748,51474753,51476801,51478849,51480897,51482945,51484993,51487041,51489089,51491137,51493185,51495233,51497281,51499280,51501328,51503376,51505424,51507472,51509520,51511568,51513574,51515622,51517579,51519627,51521675,51523723,51525725,51527773,51529649,51531697,51533745,51535793,51537847,51539895,51541943,51543991,51546039,51548087,51550135,51552183,51554231,51556285,51558333,51560381,51562429,51564433,51566481,51568529,51570520,51572568,51574616,51576563,51578614,51580662,51582710,51584758,51586806,51588854,51590902,51592950,51594998,51596952,51599000,51601048,51602667,51604715,51606763,51608770,51610818,51612866,51614914,51616962,51619010,51621058,51623106,51625154,51627099,51629147,51631195,51633243,51635291,51637347,51639114,51640821,51642869,51644837,51646779,51648827,51650875,51652923,51654971,51657019,51658999,51661001,51663049,51664976,51666936,51668984,51671032,51673080,51674991,51677039,51679087,51681098,51683095,51685143,51687191,51689239,51691287,51693276,51695324,51697322,51699370,51701426,51703313,51704943,51706991,51708988,51711036,51713084,51715132,51717114,51719162,51721210,51723258,51725306,51727287,51729335,51731383,51733431,51735402,51737450,51739498,51741546,51743594,51745642,51747478,51749526,51751574,51753622,51755670,51757718,51759766,51761814,51763862,51765910,51767958,51770006,51772001,51774049,51776097,51778082,51780130,51782131,51784179,51786227,51788275,51790323,51792371,51794419,51796467,51798515,51800563,51802611,51804659,51806707,51808755,51810803,51812851,51814899,51816947,51818995,51821043,51823044,51825092,51827140,51829188,51831236,51833284,51835332,51837380,51839428,51841476,51843524,51845572,51847620,51849668,51851716,51853764,51855812,51857860,51859908,51861956,51864004,51866052,51868100,51870148,51872196,51874244,51876242,51878290,51880338,51882386,51884434,51886482,51888530,51890578,51892577,51894625,51896673,51898721,51900769,51902817,51904865,51906913,51908961,51910966,51913014,51915062,51917110,51919158,51921206,51923254,51925302,51927350,51929398,51931446,51933494,51935542,51937590,51939638,51941686,51943734,51945782,51947830,51949878,51951926,51953983,51956031,51958028,51960076,51962124,51964172,51966166,51968214,51970213,51972261,51974309,51976304,51978352,51980400,51982454,51984291,51986339,51988387,51990257,51992305,51994356,51996058,51998030,52000078,52002126,52004182,52006230,52008223,52010271,52012319,52014367,52016415,52018422,52020470,52022518,52024566,52026614,52028662,52030710,52032758,52034806,52036808,52038856,52040904,52042952,52045000,52047048,52049096,52051151,52053207,52055197,52057245,52059293,52061341,52063389,52065386,52067434,52069432,52071480,52073528,52075525,52077524,52079572,52081620,52083582,52085630,52087678,52089726,52091774,52093822,52095870,52097870,52099918,52101842,52103890,52105884,52107932,52109980,52111979,52114027,52116075,52118074,52120122,52122170,52124159,52126207,52128206,52130254,52132302,52134350,52136398,52138446,52140450,52142498,52144546,52146594,52148642,52150690,52152738,52154786,52156834,52158882,52160930,52162930,52164978,52167018,52168961,52171009,52173057,52175105,52177153,52179201,52181202,52183250,52185298,52187346,52189347,52191395,52193443,52195491,52197539,52199587,52201635,52203683,52205731,52207779,52209827,52211875,52213923,52215971,52217976,52220024,52222072,52224120,52226173,52228195,52230243,52232291,52234339,52236387,52238435,52240483,52242531,52244579,52246627,52248675,52250723,52252771,52254828,52256876,52258839,52260887,52262935,52264983,52267031,52269079,52271127,52273175,52275223,52277225,52279273,52281321,52283369,52285417,52287402,52289450,52291498,52293546,52295594,52297642,52299690,52301738,52303786,52305773,52307821,52309869,52311917,52313965,52316013,52318061,52320055,52322103,52324151,52326199,52328160,52330159,52332207,52334255,52336303,52338351,52340399,52342447,52344495,52346543,52348591,52350639,52352687,52354735,52356783,52358831,52360879,52362927,52364926,52366974,52369022,52371070,52373118,52375166,52377214,52379262,52381260,52383308,52385356,52387404,52389452,52391500,52393548,52395596,52397557,52399605,52401653,52403701,52405749,52407797,52409845,52411893,52413896,52415944,52417992,52420040,52422088,52424136,52426184,52428232,52430280,52432275,52434323,52436371,52438419,52440467,52442515,52444563,52446611,52448659,52450707,52452755,52454752,52456800,52458848,52460896,52462944,52464992,52467040,52469088,52471136,52473184,52475232,52477280,52479328,52481376,52483424,52485472,52487467,52489515,52491563,52493611,52495659,52497707,52499755,52501803,52503860,52505908,52507956,52510009,52511924,52513865,52515913,52517920,52519968,52522016,52524064,52526112,52528160,52530208,52532256,52534304,52536352,52538400,52540448,52542496,52544544,52546592,52548640,52550688,52552736,52554730,52556778,52558826,52560874,52562922,52564970,52567018,52569017,52571065,52573113,52575116,52577164,52579212,52581208,52583256,52585304,52587292,52589340,52591388,52593436,52595473,52597521,52599513,52601561,52603609,52605657,52607705,52609701,52611749,52613797,52615845,52617893,52619941,52621989,52624037,52626085,52628133,52630181,52632229,52634277,52636325,52638373,52640421,52642469,52644469,52646517,52648565,52650613,52652661,52654709,52656757,52658805,52660853,52662901,52664949,52666997,52669045,52671093,52673141,52675189,52676712,52677826,52678933,52680070,52681245,52683227,52683916,52684604,52685951,52687999,52690047,52690884,52690918,52690952,52690986,52691020,52691054,52691212,52691734,52692077,52692578,52693132,52693756,52694433,52695057,52695574,52696187,52696745,52697361,52697883,52698568,52699267,52699840,52700487,52701112,52701886,52702654,52703422,52704184,52704961,52705645,52706808,52707812,52708719,52709625,52710576,52711499,52712430,52713398,52714379,52715352,52716350,52717312,52718067,52719117,52720446,52721642,52723004,52724205,52725579,52726733,52727908,52729053,52730236,52731398,52732543,52733702,52734853,52736005,52737088,52738029,52739362,52740816,52742044,52742841,52743616,52744333,52745351,52746661,52747871,52749199,52750148,52750488,52750590,52750692,52750806,52751021,52751069,52751186,52751235,52751284,52751331,52751434,52751481,52751528,52751770,52751879,52751926,52751973,52752071,52752112,52752159,52752206,52752309,52752353,52752397,52752447,52752565,52752614,52752659,52752703,52752880,52752921,52752968,52753016,52753064,52753112,52753230,52753278,52753402,52753450,52753498,52753571,52753679,52753724,52753769,52753814,52753909,52753954,52753999,52754044,52754089,52754130,52754222,52754272,52754322,52754372,52754422,52754464,52754590,52754643,52754693,52754797,52754843,52754949,52754993,52755039,52755085,52755184,52755230,52755276,52755322,52755369,52755450,52755497,52755544,52755591,52755636,52755681,52755794,52755839,52755884,52755977,52756022,52756067,52756108,52756199,52756249,52756447,52757404,52758607,52758768,52758818,52759613,52760807,52761150,52761194,52761843,52763023,52763504,52763969,52765161,52766401,52767163,52767992,52768919],\"sizes\":[2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1303,1255,1070,979,1610,1108,1477,1597,1100,1002,775,942,953,941,1018,752,912,981,946,956,861,951,807,893,947,836,794,893,808,1261,899,975,919,1133,1126,1023,1286,1073,876,1042,1284,1299,1254,1408,573,509,578,630,589,597,995,924,842,834,523,563,740,681,650,1164,789,655,637,757,671,848,847,846,972,625,633,500,570,593,735,690,877,709,713,842,910,1179,759,907,956,907,839,841,860,855,667,904,952,972,838,619,359,557,877,958,373,645,954,656,683,556,626,654,898,905,762,672,707,575,1742,1742,1439,1469,1482,1508,1531,1521,1512,1528,1510,1591,1735,1823,1950,1989,2000,2016,1996,2005,2020,1992,1913,1806,1794,1859,1931,1879,1972,2014,1959,1855,1844,1798,1741,1735,1749,1801,1817,1883,1952,1967,2014,1997,2005,1897,1673,1535,1485,1502,1533,1504,1524,1483,1485,1446,1438,1421,1717,1862,1281,1268,1259,1249,1300,1304,1375,1307,1233,1308,1241,1213,1394,1383,1469,1406,1431,1413,1422,1518,1544,1462,1514,1540,1557,1629,1654,1555,1611,1557,1598,1542,1505,1497,1681,1704,1555,1718,1647,1353,1357,1386,1309,1256,1259,1279,1240,1176,1170,1213,1154,1166,1214,1223,1310,1251,1433,2005,1052,1096,1162,1127,1011,947,1078,1136,1126,1181,1111,1229,1179,1360,1402,1491,1542,1627,1557,1565,1619,1475,1392,1538,1591,1523,1572,1512,1361,1487,1287,1343,1390,1234,1308,1451,1473,1530,1507,1484,1441,1284,1187,1084,1031,1037,1033,1135,1217,1073,863,1041,1089,914,925,982,1078,2022,1543,1572,1591,1589,1590,1614,1670,1599,1590,1615,1689,1664,1429,1525,1593,1538,1617,1757,1642,1513,1642,1529,1462,1464,1531,1639,1474,1499,1529,1581,1556,1534,1548,1612,1573,1644,1665,1687,1608,1542,1590,1679,1563,1510,1281,1238,1562,1523,1495,1406,1609,1628,1682,1742,1588,1485,1584,1950,1488,990,1108,959,1084,1137,1058,1180,992,1017,1136,1129,1186,1078,1088,1107,1186,1181,1212,1213,1245,1275,1322,1304,1182,1187,1081,1068,1005,1001,1025,1068,1053,889,913,961,940,1011,1008,1050,1033,1036,1050,997,895,1048,968,1043,1014,1095,1151,1109,1132,1059,990,971,871,1457,1851,1270,1274,1259,1267,1291,1297,1364,1318,1226,1306,1253,1140,1289,1307,1398,1300,1322,1311,1368,1474,1630,1627,1597,1414,1334,1385,1552,1554,1748,1689,1624,1440,1283,1381,1428,1475,1453,1516,1499,1368,1352,1374,1323,1242,1256,1286,1248,1162,1188,1216,1173,1180,1210,1212,1325,1259,1448,2031,1560,1599,1592,1625,1616,1546,1543,1620,1563,1573,1613,1709,1746,1820,1807,1754,1508,1678,1614,1764,1878,1810,1759,1886,1845,1803,1885,1846,1744,1829,1682,1710,1778,1664,1658,1778,1636,1849,1865,1720,1404,1373,1360,1269,1367,1520,1494,1454,1534,1550,1510,1503,1594,1469,1437,1473,1501,2045,950,834,780,909,924,754,688,939,816,841,786,818,975,1129,1259,1210,1314,1278,1340,1448,1504,1587,1534,1669,1579,1659,1595,1609,1637,1613,1597,1503,1493,1470,1508,1570,1523,1439,1472,1429,1376,1342,1235,1174,1227,1158,1161,1003,982,1049,1053,973,946,1013,1007,918,764,1683,1873,1878,1851,1888,1834,1800,1828,1857,1805,1745,1612,1549,1373,1762,1971,1873,1818,1906,1854,1873,1908,1923,1848,1698,1648,1573,1438,1682,2014,1714,1821,1891,1913,1877,1792,1745,1534,1436,1513,1576,1611,1653,1941,1645,2007,1880,1744,2015,1741,1865,2033,1517,1284,1636,1531,1457,1783,1790,1364,1481,1630,1518,1488,1972,1482,1363,1681,1558,1549,1787,1942,1674,1678,1699,1773,1747,1757,1730,1782,1835,1813,1847,1886,1734,1765,1782,1801,1833,1830,1800,1857,1842,1784,1763,1759,1762,1785,1743,1750,1811,1722,1754,1755,1830,1779,1782,1757,1748,1702,1696,1733,1767,1728,1705,1648,1723,1853,1899,1837,1839,1799,1854,1921,1859,1785,1710,1646,1699,2048,1936,1918,1908,1946,1915,1911,1900,1914,1889,1870,1921,1913,1808,1814,1746,1769,1755,1837,1809,1814,1799,1817,1848,1842,1820,1760,1731,1707,1582,1560,1663,1734,1811,1767,1736,1741,1691,1722,1709,1730,1760,1770,1814,1754,1777,1919,1898,1961,1844,1804,1843,1904,1916,1926,1889,1911,1846,2048,1980,1942,1984,2005,2002,2009,1990,1953,1930,1911,1985,1999,1981,1939,1884,1925,1996,1956,1982,1982,2028,2022,1933,1929,1927,1894,1930,1835,1704,1778,1803,1901,1918,1936,1959,1975,1972,1980,1932,1908,2010,1929,1805,1843,1869,1859,1863,1811,1794,1801,1869,1818,1723,1696,1581,1505,1453,789,1905,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1541,1466,1354,1539,1500,1572,1427,1440,1321,1187,1320,1502,1400,1188,1297,1433,1536,1400,1480,1445,1379,1338,1480,1486,1437,1487,1492,1478,1455,1491,1531,1524,1594,1470,1574,1516,1571,1513,1477,1422,1575,1577,1431,1442,1379,1628,1670,1645,1634,1595,1521,1613,1696,1594,1531,1638,1524,1921,1492,1039,1145,1092,1117,991,1041,1094,1068,1144,1107,1123,1229,1332,1364,1465,1508,1572,1585,1526,1629,1566,1400,1401,1604,1581,1507,1553,1417,1434,1390,1307,1329,1363,1243,1404,1452,1524,1522,1498,1507,1330,1217,1170,999,1063,1018,1187,1166,1188,983,871,1056,965,935,953,1011,1564,1722,1077,1103,1136,1107,945,1028,1050,1072,1143,1217,1248,1309,1182,1493,1556,1514,1495,1518,1461,1619,1602,1501,1452,1626,1631,1387,1533,1503,1563,1642,1681,1843,1910,1853,1559,1774,1822,1754,1496,1672,1276,1436,1337,915,1082,1106,1094,1118,1190,1058,883,1048,1004,896,939,970,1289,2028,1512,1546,1530,1552,1565,1472,1486,1531,1500,1503,1570,1648,1726,1781,1772,1717,1489,1679,1586,1724,1883,1767,1680,1873,1747,1765,1880,1717,1615,1853,1683,1677,1768,1523,1566,1723,1591,1834,1824,1690,1369,1373,1331,1254,1347,1449,1479,1439,1452,1475,1449,1457,1530,1397,1373,1421,1449,2045,1714,1657,1667,1742,1785,1727,1740,1787,1793,1830,1821,1896,1777,1761,1795,1780,1814,1816,1829,1784,1887,1801,1758,1771,1767,1744,1791,1680,1760,1806,1752,1752,1782,1840,1773,1751,1752,1707,1736,1707,1721,1732,1723,1704,1613,1838,1858,1901,1844,1808,1822,1882,1882,1853,1777,1690,1587,900,1793,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1603,1231,1395,1393,1457,1547,1536,1428,1474,1465,1482,1425,1461,1448,1329,1332,618,968,1130,1421,1612,1694,1822,1831,1887,1864,1823,1731,1721,1740,1755,1844,1877,1879,1814,1838,1822,1807,1576,1287,1052,1068,1250,1301,1102,1411,1257,1111,1268,1253,1418,1481,1479,1475,1377,1415,1400,1707,1838,1434,1437,1499,1553,1462,1512,1534,1415,1469,1552,1632,1444,1497,1648,1677,1641,1741,1796,1638,1722,1662,1568,1556,1485,1571,1632,1562,1597,1619,1632,1587,1551,1548,1636,1623,1624,1626,1601,1529,1548,1610,1656,1599,1481,1176,1388,1482,1477,1373,1445,1504,1580,1610,1587,1418,1405,1610,2004,1356,1379,1375,1432,1348,1391,1476,1403,1437,1404,1507,1369,1165,1530,1532,1541,1577,1670,1592,1567,1599,1465,1459,1492,1563,1548,1501,1446,1531,1559,1501,1482,1511,1593,1539,1573,1548,1609,1569,1519,1526,1522,1389,1305,1021,1024,1361,1390,1307,1280,1469,1483,1522,1553,1336,1281,1424,2040,1650,1657,1654,1737,1763,1717,1774,1683,1674,1726,1815,1765,1472,1589,1657,1620,1660,1812,1732,1579,1696,1607,1536,1536,1601,1717,1560,1550,1568,1629,1649,1626,1607,1677,1667,1740,1729,1784,1665,1619,1634,1719,1608,1555,1303,1356,1717,1686,1609,1555,1701,1752,1784,1851,1706,1602,1664,1976,1122,544,608,684,665,711,753,963,1015,1084,908,978,1462,1480,1631,1650,1201,1435,1480,1720,1701,1737,1566,1694,1642,1767,1622,1703,1454,1737,1724,1748,1707,1737,1694,1653,1694,1739,1738,1719,1677,1389,1418,1238,1182,1300,1485,1286,1176,1295,1310,1443,1567,1520,1496,1563,1623,1231,1703,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2057,2048,2016,2023,2047,2048,2054,2048,2054,2053,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2044,2012,2048,2049,2048,2048,2048,2050,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2051,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2041,2013,2033,2046,2057,2048,2048,2049,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2049,2008,2031,2049,2054,2048,2056,2052,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1920,1255,1376,1263,1127,1087,987,1090,1178,1081,1141,1106,1253,1089,1140,1148,967,1193,1154,1211,1170,1132,1217,881,844,916,986,943,888,768,971,822,784,607,338,336,334,1301,1266,1486,1437,1467,1441,719,1112,1097,889,904,842,1387,1286,1457,1334,1102,1022,1068,1086,1158,1165,1039,1092,1240,1092,1222,1060,1050,1134,1191,1170,1217,1115,1213,960,907,957,980,932,745,894,836,853,1005,546,337,346,520,1168,1301,1458,1406,1403,1286,966,1192,858,898,863,1020,2048,62,48,49,62,87,121,164,203,174,210,234,254,446,874,1010,976,1043,1359,1602,1598,1636,1630,1696,1762,1768,1678,1532,1550,1586,1724,1652,1734,1781,1704,1628,1648,1584,1629,1623,1284,940,987,872,637,340,221,154,119,111,160,148,73,69,45,45,45,42,1758,667,171,179,223,267,302,444,335,396,484,332,325,559,791,966,894,1126,1133,1500,1688,1755,1814,1775,1849,1813,1811,1652,1685,1708,1819,1858,1850,1875,1855,1749,1883,1888,1869,1844,1706,913,978,890,793,597,483,327,342,349,400,409,265,176,159,222,243,149,1304,1767,1271,1400,1202,1242,1387,1379,1347,1400,1318,1430,1494,1457,1370,1462,1432,1449,1505,1393,1573,1390,1352,1375,1406,1349,1135,1168,1335,1319,1352,1374,1393,1228,1293,1440,1346,1310,1333,1461,1539,1411,1525,1368,1384,1388,1445,1422,1488,1374,1309,1394,1289,1393,1394,1286,1195,1145,1516,1324,1398,1684,923,1163,1566,1130,1164,1820,929,1035,737,1992,584,45,45,45,768,908,1093,1090,1357,1587,1298,1623,1838,1791,1652,1698,1676,784,1222,1551,1759,1809,1802,1757,1811,1810,1724,1588,1668,1687,1907,1831,1881,1845,1801,1752,1904,1852,1873,1876,1752,1617,1583,1520,1771,1362,1258,1328,1260,1241,1059,953,862,412,48,47,45,620,732,970,795,737,1131,1431,1329,1181,920,953,465,950,675,721,697,741,926,876,823,876,912,972,828,810,767,917,902,959,913,915,687,771,611,659,748,809,707,750,914,897,697,819,818,827,876,697,855,964,866,851,830,823,830,987,754,818,1460,1513,1464,1499,1640,1611,1555,1509,1716,1415,1528,1513,1659,1585,1440,1742,1381,1468,1448,1661,1590,1501,1603,1432,1636,1887,1432,1494,1290,1116,1217,1301,1379,1128,1109,1204,1097,1126,1229,1239,1309,1134,820,860,673,1869,1517,1406,1464,1387,1293,1374,1196,1184,1350,1334,1257,1140,916,897,658,872,1875,1504,1512,1486,1422,1336,1333,1195,1199,1337,1309,1209,939,822,719,670,1798,1481,1494,1426,1498,1329,1274,1405,1169,1296,1383,1318,1202,1083,947,878,656,928,1886,1451,1492,1416,1460,1518,1490,1419,1219,990,849,752,841,874,852,1602,1542,1497,1418,1462,1323,1213,1379,1162,1299,1370,1294,1186,1012,957,813,650,1482,1783,1474,1377,1178,1214,1449,1437,1374,949,993,1348,1736,1566,1571,1392,1275,1120,1515,1429,1261,1041,1266,1271,1335,1020,1047,1780,1716,1815,1829,1707,1645,1331,1815,1921,1838,1676,1895,1888,1392,1199,1298,1364,1414,1396,1936,1408,1348,1316,1349,1470,1465,1497,906,930,1064,1848,1063,825,895,1640,1421,1316,1653,1657,1504,1714,1734,1828,1213,1500,1726,1521,1579,1855,1836,1746,1200,1558,1713,1546,1727,1906,1886,1550,1262,1636,1698,1569,1798,1910,1920,1405,1345,1664,1722,1544,1710,1901,1919,1439,1382,1601,1732,1510,1665,1857,1926,1397,1341,1663,1637,1505,1735,1792,1802,1189,1511,1732,1523,1595,1764,1771,1573,1258,1618,1682,1515,1686,1782,1909,1277,1398,1692,1543,1573,1795,1839,1610,1616,1533,1639,1595,1492,1668,1634,1562,1493,1602,1447,1595,1624,1502,1571,1427,1517,1512,1325,1578,1469,1217,1111,1142,1341,1332,1130,1280,1655,1574,1336,1296,1346,1390,1476,1194,1415,1084,1375,1887,109,49,45,45,45,78,380,654,752,826,920,993,966,1059,925,1119,1132,1272,1351,1197,1273,1347,1167,1203,1158,976,1228,1056,1188,1167,1020,941,953,827,639,713,692,405,45,45,42,49,45,1042,1059,746,769,1082,1222,1322,1022,986,1030,1017,773,683,777,979,972,1085,1185,1119,1171,1260,1274,1191,1366,1348,1320,1373,1313,1337,1224,926,829,601,538,516,764,875,779,815,881,990,1013,877,964,1184,1788,1187,1285,1382,1413,1475,1474,1623,1712,1785,1821,1812,1801,1710,1767,1654,1636,1768,1641,1666,1621,1660,1599,1448,1613,1700,1624,1549,1569,1590,1569,1431,1232,1055,1314,1625,1520,1601,1567,1485,1343,1413,1458,1907,921,713,1031,1129,1126,1276,1380,1333,1241,1534,1460,1305,825,872,1122,1290,1418,1252,1239,1232,1117,1189,1157,1246,1332,1188,1271,1437,1291,1258,1355,1381,1326,1306,1263,1246,1194,1039,992,1106,1139,1269,1145,1546,926,1446,1548,904,1435,1062,1624,1320,1821,1585,730,891,1388,2056,802,883,744,1059,1049,1047,974,1019,1152,1303,1479,1666,1632,1685,1553,1314,1433,1513,1632,1609,1669,1642,1645,1602,1580,1478,1541,1527,1820,1830,1873,1831,1749,1786,1533,1418,1362,1373,1341,1293,1134,653,874,1162,1122,1066,1045,1088,982,675,1513,931,1009,1031,979,950,1043,1000,982,1016,952,1029,1006,1007,956,997,978,998,955,1007,1006,1022,1009,938,1012,1023,1016,948,1016,1011,999,966,1007,1017,988,981,974,1149,951,856,1103,883,1110,1191,1420,678,666,593,766,648,657,631,693,1087,1067,1000,842,807,824,809,812,843,941,854,902,952,796,877,845,987,941,971,1018,952,826,594,670,709,683,709,946,871,817,931,806,774,851,844,989,761,1530,1808,1819,1808,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1900,1843,1704,1751,1724,1720,1748,1922,1897,2056,508,48,49,45,44,45,48,49,45,44,45,48,150,777,1030,1437,1395,1548,1569,1428,1512,1539,1590,1674,1694,1756,1747,1677,1717,1625,1667,1624,1621,1570,1609,1441,1290,1298,1141,1160,908,472,335,219,140,45,50,47,45,44,45,50,47,45,44,45,50,1313,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,1386,1225,1190,1217,1233,1102,1155,1135,1205,1214,1269,1313,1195,1321,1259,1456,1712,1570,1540,1379,1382,1493,1590,1440,1374,1601,1607,1560,1494,1486,1553,1446,1371,1406,1466,1458,1494,1275,1216,1320,1294,1270,1159,1069,858,1051,1037,1111,981,822,710,739,822,682,610,631,571,1839,1686,1155,1105,1164,1017,1176,1325,1324,1172,1226,1163,1248,1342,1257,1584,1521,1772,1776,1676,1759,1772,1595,1481,1564,1503,1363,1577,1623,1486,1455,1633,1554,1644,1497,1698,1536,1374,1293,1352,1237,1101,1143,1054,993,1051,922,981,1043,1031,1050,904,853,655,580,444,438,367,1335,1408,700,709,649,670,671,680,707,646,670,643,689,706,1194,1579,1506,1558,1572,1665,1613,1551,1518,1444,1086,839,1251,1460,1448,1553,1519,1441,1509,1425,1327,1111,986,1170,1419,1518,1475,1467,1510,1390,1236,938,685,657,679,689,668,687,695,701,693,656,656,706,1146,1793,678,646,656,695,688,681,640,651,716,684,675,650,816,1403,1634,1598,1634,1706,1696,1585,1508,1427,1368,1341,1380,1264,1289,1336,1329,1308,1265,1279,1146,1665,1683,1616,1606,1678,1597,1535,1381,1056,999,771,764,647,673,677,664,696,663,646,654,682,695,633,788,1739,1486,1784,1221,1745,1830,1194,1765,1785,2056,461,415,517,636,657,766,884,860,1000,1108,1055,1146,1389,1520,1557,1572,1579,1540,1478,1469,1437,1453,1431,1435,1558,1459,1454,1373,1369,1287,1414,1412,1454,1614,1589,1525,1412,1245,1095,1227,1285,1216,1268,1200,1179,1110,982,981,1036,1060,987,963,852,829,712,577,336,1623,868,346,518,568,634,712,847,873,911,1004,1021,1153,1243,1365,1542,1642,1679,1728,1651,1622,1474,1428,1353,1298,1320,1411,1435,1451,1444,1442,1483,1400,1456,1446,1435,1433,1571,1691,1620,1496,1286,1278,1214,1242,1192,1163,1244,1205,1045,1089,1015,922,885,805,651,636,495,1251,1343,373,462,649,686,720,797,837,938,1098,1057,1061,1442,1543,1471,1476,1563,1494,1448,1234,1304,1341,1361,1333,1408,1420,1447,1334,1292,1371,1391,1378,1304,1311,1309,1302,1402,1510,1532,1608,1407,1463,1387,1337,1198,1241,1226,1144,1141,1061,1039,975,896,912,742,682,473,762,1630,1659,1622,1744,1458,1755,1825,1324,1614,1477,1470,1628,1563,1048,1423,1609,1627,1813,1311,1640,1542,1527,1995,2048,1959,2048,1997,1963,1959,2048,2025,2007,2043,1798,1097,1752,1832,1689,1375,1697,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2041,1209,954,784,790,896,991,1045,826,790,1014,815,948,794,866,843,826,1023,845,798,884,832,1329,1002,920,897,990,1113,1086,1069,1043,706,647,1089,1248,1312,1250,1507,512,587,636,613,577,545,1062,1003,1035,813,518,555,843,520,737,942,833,698,590,751,668,653,1180,777,1084,642,751,523,553,535,708,771,811,841,627,666,925,1111,903,953,836,952,947,550,1005,653,901,1018,894,768,792,983,270,607,765,1043,407,552,788,726,643,568,652,665,943,752,787,641,654,612,858,1892,1676,1580,1464,1417,1393,1456,1546,1978,1751,1780,1578,1439,1455,1399,1484,1540,2048,1630,1598,1717,1663,1615,1613,1744,1740,1809,1756,1721,1739,1441,1209,1231,1272,1617,1610,1651,1768,1772,1728,1707,1692,1768,1742,1689,1698,1691,1772,1746,1757,1721,1748,1739,1769,1701,1782,1698,1597,1604,1546,1324,1331,1299,1480,1508,1552,1644,1629,1589,1704,1503,1510,1650,1618,1584,1971,1627,1455,1483,1541,1510,1459,1536,1509,1432,1499,1594,1634,1415,1555,1688,1669,1692,1799,1748,1653,1728,1585,1582,1555,1535,1597,1620,1593,1607,1622,1615,1593,1544,1561,1603,1665,1577,1649,1548,1576,1590,1649,1610,1581,1382,1142,1461,1508,1452,1352,1468,1510,1582,1614,1517,1405,1479,1819,1718,1215,1209,1230,1236,1247,1258,1245,1267,1266,1298,1283,1532,1300,1292,1290,1307,1311,1315,1304,1225,1264,1273,1266,1241,1290,1214,1240,1270,1269,1228,1209,1180,1223,1229,1215,1230,1228,1255,1244,1256,1235,1267,1300,1299,1533,1314,1265,1294,1318,1317,1297,1285,1232,1296,1275,1248,1449,2049,1715,1769,1796,1791,1781,1789,1783,1756,1768,1786,1723,1746,1688,1730,1647,1615,1651,1581,1629,1635,1652,1636,1653,1711,1702,1720,1777,1723,1797,1723,1781,1749,1748,1752,1610,1661,1710,1637,1705,1605,1654,1701,1699,1685,1682,1774,1722,1771,1757,1741,1740,1740,1744,1743,1765,1742,1770,750,1435,1922,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,860,736,559,578,602,610,623,672,622,535,589,752,1348,457,565,652,586,429,366,418,1242,1652,1421,1048,1030,1255,1134,1060,1650,1248,1164,1099,1720,1478,902,903,1173,352,442,461,489,531,435,444,318,350,275,298,305,930,2012,1558,1829,1527,1729,1351,1114,1172,958,1227,1162,1011,1144,872,1141,1132,537,1189,1221,1091,1072,1234,828,1194,932,947,1225,944,1165,653,1012,936,961,1277,820,1144,933,1123,1074,1113,1323,966,1088,1117,906,1076,710,836,312,311,439,1011,911,926,877,1637,919,1842,932,2034,1689,1519,1479,1595,1610,1583,1615,1636,1674,1616,1644,1668,1668,1641,1634,1639,1604,1617,1666,1731,1709,1689,1748,1765,1754,1680,1712,1746,1803,1783,1827,1890,1891,1887,1884,1896,1863,1775,1799,1821,1815,1842,1778,1825,1806,1784,1667,1507,1604,1629,1603,1534,1429,1561,1604,1654,1638,1865,1817,1422,1430,1490,1555,1456,1516,1542,1413,1478,1530,1623,1445,1476,1667,1670,1631,1742,1796,1655,1719,1649,1583,1559,1494,1580,1635,1552,1611,1617,1638,1585,1533,1548,1628,1630,1608,1629,1594,1544,1555,1613,1631,1607,1456,1140,1414,1495,1482,1363,1441,1497,1572,1599,1583,1424,1414,1622,1858,555,625,579,605,705,720,658,901,958,1034,1098,938,1222,1260,1316,1291,1293,1354,1364,1375,1469,1447,1383,1394,1543,1515,1428,1408,1415,1215,984,1014,897,1258,1302,1283,1175,1082,1001,963,1048,996,774,975,958,914,704,880,889,740,348,788,674,621,702,560,566,2018,856,744,816,883,964,1094,1072,1117,1103,1140,1054,886,829,734,1154,1324,1381,1443,1468,1490,1488,1482,1276,1571,1565,1599,1502,1548,1650,1713,1689,1612,1492,1567,1523,1568,1497,1475,1380,1273,1299,1195,1011,967,1082,1037,1132,1104,1174,1229,1212,1038,936,784,816,804,753,707,1408,1717,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2025,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1615,1329,1275,1138,854,328,558,1095,978,1076,1081,1050,667,1005,1529,1581,1301,1439,1326,1361,1368,1035,1196,1192,967,1687,1273,1350,1319,1205,1211,1197,1131,1252,1405,1432,1440,1323,1299,1252,1263,1478,1520,1641,1586,1598,1568,1563,1546,1584,1554,1518,1487,1498,1419,1390,1341,1446,2048,2048,2048,2048,2048,2054,2056,1895,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2017,1997,1910,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1566,1321,1441,1391,1362,1367,1440,1460,1488,1663,1683,1551,1439,1444,1305,1517,1637,1720,1758,1654,1631,1518,1446,1549,1633,1644,1673,1635,1609,1547,1454,1578,1926,2049,2048,1973,2048,2025,2032,2048,2012,2015,2048,1994,2048,2021,2023,2048,2056,2046,2048,2056,2020,2019,1840,2048,2049,1991,1553,1561,1585,1618,1560,1602,910,219,214,209,226,213,384,219,214,242,220,220,1132,1951,1278,1256,1395,1272,1078,1229,1135,1262,1176,1207,1279,1108,1300,2000,1748,776,1256,2048,1305,626,1578,2048,956,723,1972,1655,727,1138,958,922,922,922,934,946,947,595,960,791,742,976,974,1107,906,968,893,821,995,1028,1023,1034,1073,1008,838,1217,961,1102,1283,688,779,438,387,1000,1041,1017,920,517,334,336,336,414,363,508,520,887,1228,1128,950,1247,1377,1548,1540,1300,1395,992,1234,1545,1348,1262,1165,1221,1431,1434,1521,1522,1093,1035,1196,1286,1434,1403,1553,1520,1072,1209,1091,1293,1490,1421,1574,1444,1104,1142,1121,1428,1376,1499,1519,1320,1083,1178,1148,1442,1453,1519,1498,1008,1257,1170,1365,1299,1372,898,637,607,618,669,658,685,633,638,965,959,841,732,661,946,995,808,644,919,862,907,513,640,759,604,749,849,706,817,666,819,489,683,653,427,743,612,679,752,570,835,623,440,582,745,716,508,482,673,435,436,487,555,642,806,420,471,868,910,1098,1063,570,521,485,750,713,918,660,634,622,635,1025,1061,1047,1090,479,573,827,755,636,605,679,822,703,435,539,783,699,910,782,1111,610,858,793,827,905,881,834,895,882,871,843,843,941,737,799,870,817,838,823,1034,681,925,988,978,962,974,966,951,946,960,976,966,949,965,958,939,828,1174,793,813,507,808,936,843,818,818,817,719,829,854,893,681,816,711,769,782,692,620,921,1238,714,730,1658,1743,1806,1817,2016,1889,2048,2048,2056,1705,1373,1745,1763,2048,2042,1874,1815,2048,1875,1767,2047,2048,2048,1927,1765,2037,1882,1765,2049,2004,1799,1881,1222,1150,538,686,578,1879,2056,1958,1495,1395,1191,1161,1391,2026,1760,1231,1289,1079,1207,1603,1494,1373,967,483,143,569,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2055,2057,1987,1913,1414,2057,2048,2048,2048,2057,2048,2048,2044,450,276,2023,2040,2048,2048,1953,1364,1921,2005,2030,1905,2018,2048,2048,2048,2048,2021,1883,2048,1977,1987,2048,2009,2057,2048,2036,2050,2053,2016,1762,1462,1745,1903,2048,2048,2048,2048,2048,2048,2048,2048,1101,983,1193,1289,1239,1258,1663,1473,975,1483,1163,1331,1050,1106,1069,999,1154,1388,1717,1885,1910,1897,1903,1919,1530,1154,975,1118,1189,1604,1168,1028,1067,1093,1198,1054,1013,1308,1191,1348,1045,1966,2046,2040,2015,2028,1971,2048,1974,2048,2057,1975,2040,2032,2048,2028,1974,2053,2057,1968,2043,2031,2048,2028,1985,2048,2048,1971,2048,2057,1972,2044,2048,1984,2034,2004,2049,2035,2048,1974,2034,1985,2048,2036,1971,2048,2000,2048,2045,2048,2057,1971,2048,2048,2048,2048,2048,2056,2056,2048,2019,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,1901,2048,2048,2048,2048,2048,2048,2048,2048,1896,2048,2048,2048,2048,2048,2048,2048,1891,2048,2048,2048,2048,2048,2048,1897,2048,2048,2048,2048,2048,2048,2019,1988,2048,2048,2048,2048,2048,2048,2048,1893,2048,2057,2048,2048,2048,2048,2048,2048,2048,1609,1826,1647,1660,1832,1192,1004,1936,2009,2052,2048,2034,1982,2028,1845,2002,2018,2035,1965,2022,2053,1301,1438,1390,1566,1332,1927,1120,1175,1144,859,1564,1508,1494,1487,1410,634,695,683,730,720,679,654,576,505,586,543,1400,1842,1677,1700,1691,1685,1928,1718,1748,1770,1162,1005,1804,1656,1526,1479,1491,787,505,267,430,421,458,279,616,1782,1696,1683,1695,1841,1782,1802,1500,1495,1612,1481,1478,1514,500,518,495,485,395,356,498,502,450,1166,1814,1677,1670,1672,1762,1826,1797,1733,1197,1656,1662,1474,1474,1488,1488,797,628,658,571,545,536,592,524,608,504,564,411,382,1064,1942,1698,1673,1689,1678,1690,1871,1850,1719,1691,1767,1089,1446,1667,1704,1490,1477,1483,1102,583,584,614,566,587,614,582,536,584,532,546,1483,1840,1681,1669,1661,1690,1761,1874,1704,1690,1694,1107,1103,1752,1652,1520,1490,1489,1302,570,564,570,491,409,572,571,595,471,360,502,1310,1787,1691,1682,1672,1658,1891,1714,1732,1685,1410,883,1865,1662,1515,1486,1125,393,520,400,418,508,503,470,737,1822,1643,1692,1662,1855,1686,1696,1445,1379,1572,1494,1477,1455,1490,1487,1343,673,628,499,555,713,489,650,657,566,602,720,714,650,746,683,604,635,627,613,480,979,1990,1717,1668,1710,1678,1658,1694,1715,1707,1684,1910,1814,1756,1716,1684,1829,1828,1780,854,721,976,1814,1837,1666,1811,1562,1476,1468,1468,1462,797,439,462,519,586,619,597,608,479,471,599,499,553,579,967,1990,1692,1694,1688,1689,1693,1678,1936,1717,1762,1793,1783,1356,679,1349,1966,1674,1706,1534,1480,1494,1464,1443,628,647,649,612,621,548,485,588,681,626,441,509,457,515,470,1914,1787,1686,1687,1693,1700,1710,1763,1922,1685,1715,1791,1799,1482,769,1580,1875,1770,1549,1488,1497,1481,1375,561,556,635,620,640,564,509,235,242,183,235,241,233,1624,1945,1724,1688,1706,1715,1730,1704,2030,1785,1743,1786,1784,1743,998,1669,1618,1566,1455,1012,690,606,703,644,1692,1687,1771,1718,1281,1573,1455,1475,1148,576,556,558,516,453,469,432,509,1207,1789,1658,1680,1652,1872,1683,1683,840,1699,1686,1450,1475,1465,1281,570,600,624,534,564,577,586,341,590,567,569,1867,1677,1677,1682,1683,1691,1856,1679,1762,1731,708,1616,1816,1549,1471,1460,1186,560,570,342,490,526,462,302,298,428,567,1882,1683,1692,1671,1632,1712,1855,1733,1658,1417,861,1853,1672,1461,1445,1432,858,264,368,316,413,450,475,319,299,427,402,423,1779,1633,1632,1647,1670,1655,1835,1741,1630,1542,1230,1696,1535,1482,1502,527,452,498,574,585,640,607,599,485,1445,1729,1678,1650,1682,1867,1675,1685,1737,810,1827,1626,1466,1479,1480,1364,529,497,559,552,595,603,613,411,452,565,445,494,524,1926,1707,1672,1683,1675,1678,1675,1965,1675,1639,1742,1624,791,1591,1753,1731,1413,1485,1491,1466,1487,1499,1497,1485,1480,870,662,742,656,563,617,558,746,517,628,480,658,693,596,641,634,608,612,359,693,658,681,511,437,543,559,250,274,802,2021,2036,1740,1728,1715,1686,1709,1673,1694,1689,1670,1666,1704,1694,2040,1902,1668,1732,1660,1667,1706,1704,1673,1687,1482,751,846,1533,1902,1831,480,766,892,394,1683,1654,1668,1493,1509,1505,1507,1505,1505,1490,1476,1494,1474,956,688,800,651,673,745,669,718,751,655,598,682,692,576,691,640,796,664,643,581,473,528,520,324,277,364,502,518,432,344,236,147,1291,2057,1941,1782,1695,1691,1707,1670,1686,1691,1717,1647,1680,1664,1670,1695,1702,1908,2048,1790,1742,1714,1726,1724,1647,1680,1645,1650,1721,1733,1322,877,1075,1832,1876,1645,1793,1770,1586,1488,1474,1483,1478,501,526,541,551,474,547,426,474,416,524,105,600,581,1162,1912,1662,1691,1673,1686,1701,1893,1681,1727,1690,1705,1186,1243,1755,1730,1433,1449,1458,1480,1504,1499,1480,1467,1380,591,594,631,603,537,610,656,671,717,595,489,729,628,672,585,725,565,486,610,623,577,414,506,574,1415,2027,1814,1694,1667,1680,1698,1699,1701,1688,1659,1700,1818,2023,1698,1664,1680,1692,1720,1721,1750,1555,856,1188,1799,1643,1513,1647,1643,1518,1473,1474,1482,1488,1493,593,538,476,571,706,593,691,572,701,681,559,466,600,721,664,410,411,1617,1941,1673,1663,1654,1676,1713,1689,1672,1941,1778,1690,1717,1819,1752,1742,1042,1572,1732,1825,1571,1482,1502,1477,1512,1486,1486,1485,1494,1505,1509,1506,1497,700,645,690,547,668,606,486,629,651,635,600,588,601,594,571,584,590,493,524,603,599,387,618,609,614,564,540,492,627,572,542,562,576,490,583,392,483,550,458,625,1412,2039,2040,1961,1706,1717,1718,1709,1720,1690,1712,1705,1722,1714,1724,1698,1717,1694,1716,1719,1703,1962,2048,1818,1671,1733,1708,1699,1696,1730,1731,1661,1744,1721,1779,1472,900,900,837,1022,1713,1643,1617,1616,1571,1563,1356,1117,653,1727,1779,1776,1640,1481,1482,1479,1485,1229,676,670,597,531,448,367,395,483,240,471,533,363,896,1969,1675,1686,1677,1690,1667,1697,1955,1737,1749,1719,1712,917,1724,1770,1505,1461,1482,833,412,547,421,372,279,439,306,896,1824,1671,1676,1667,1885,1723,1715,1505,1480,1616,1461,1477,1461,1468,952,554,588,600,627,533,545,606,634,325,487,429,505,320,1554,1822,1650,1658,1670,1648,1691,1705,1867,1693,1699,1698,1210,460,1142,1383,1390,1611,1514,1484,1308,383,188,440,343,354,318,236,483,1816,1646,1644,1652,1797,1660,1517,1010,1541,1484,1447,1412,571,583,381,494,525,434,954,1773,1660,1660,1830,1733,1092,1636,1498,1493,1466,1480,1455,1473,1484,797,594,654,670,592,477,511,573,623,316,578,498,571,477,481,374,352,493,275,1057,1922,1802,1656,1688,1691,1693,1685,1657,1659,1660,2050,1715,1728,1751,1727,1669,1672,1013,814,1560,1567,1509,1666,1667,1494,1484,1477,1484,654,452,390,546,446,422,323,501,487,473,411,382,336,642,1920,1664,1661,1659,1663,1654,1668,1966,1634,1686,1686,1541,621,1150,1571,1680,1522,1483,1211,520,546,300,175,591,309,754,1744,1706,1695,1854,1800,1749,1073,1662,2047,2050,2056,2052,2050,1616,1592,1527,1358,937,815,850,780,856,844,1536,1988,2022,1906,1952,1544,1112,1360,1231,1459,1212,909,1331,777,868,1103,1179,986,1108,981,1114,1026,981,933,1059,1129,1108,1025,811,988,951,905,929,909,868,995,919,961,1034,1007,940,1078,1029,947,906,850,919,1011,872,1000,966,923,954,855,1013,1059,986,1025,860,1007,1039,1062,1035,1004,980,1112,1084,1119,1177,1095,1116,1088,1141,1092,1116,1112,1151,1044,1091,979,609,1101,1186,1065,962,1094,1190,1102,1025,1107,1035,1007,1064,1049,1250,1149,1062,1010,1121,1152,1075,1219,1130,1197,1121,1048,1144,1152,1142,1168,1076,1201,1231,1113,1072,1204,1117,1442,2048,1402,1079,1080,960,941,980,1111,996,1016,906,1210,1145,811,1040,992,1004,1009,711,820,746,845,1055,1420,1463,1481,1497,1969,2048,2055,1958,1401,2037,2050,2048,2048,2038,1799,2055,1670,1922,2053,2048,2048,2048,2048,2048,2048,2048,2031,2035,2016,2037,2040,2033,1948,1843,1707,1945,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2020,1948,1830,1803,1431,1647,1936,1893,1801,1898,2051,2054,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,1541,1021,2025,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2041,1724,1919,2048,2048,2051,1890,1606,1390,1206,1009,759,513,1830,2048,2048,2048,2048,2048,2048,2057,2057,2052,1885,1463,771,1995,2057,2017,1966,1850,1715,1523,1234,887,608,282,185,1883,2055,2048,2052,2048,2048,2056,2057,2057,2048,2048,2048,2057,1997,1824,1633,1499,1279,2019,2057,2057,2048,2056,2048,2048,2057,2048,2054,2057,2043,2044,1933,1718,1492,1057,1104,1798,1883,2006,2048,2056,2056,1955,1703,1338,877,2057,2051,2048,1990,1914,2048,2056,1833,680,57,214,34,620,2048,2048,2048,2048,2056,2057,2054,2042,1912,2035,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2055,2057,2048,1968,1524,1983,1991,1551,1615,2048,2014,1605,1338,1487,1857,2030,2055,2055,2048,2049,2056,1888,1472,447,906,2048,2048,2056,2048,2051,2056,2048,2057,2052,2054,2032,1859,1846,1949,1576,1969,2048,2048,2055,2048,2048,2048,2057,2048,1920,2057,2048,2048,2048,2048,2048,2057,2048,1649,1995,1959,1928,1023,2053,2048,2028,1889,1671,2048,2048,2048,2048,2051,2048,2048,2048,2056,1851,1365,1595,1921,1978,2022,2039,2050,2048,2025,2055,2051,2046,2037,2012,2015,1995,1980,1985,2050,2049,2053,2035,2047,2014,2039,2047,2045,2045,2046,2022,1903,1816,1604,1415,1297,1153,1220,1185,1073,1041,1138,961,1022,857,912,847,835,663,584,466,175,185,140,60,63,1758,2027,2051,2048,2040,1923,1749,1657,1245,803,2048,2048,2048,2048,1903,2048,2048,2048,1965,2048,2048,2048,2046,2016,2048,2048,2053,2053,2044,2048,2048,2043,2025,2053,2043,1982,1899,1838,1706,1754,1647,1872,2057,2057,2033,2048,2048,2052,1875,1905,2054,2056,2048,2057,2048,2055,2048,1913,2057,2048,1964,1589,1821,2048,2048,1616,1771,2048,2055,2048,2048,2048,2048,2056,2054,2034,1952,1723,1510,1453,1284,1224,1431,2057,2048,2057,2052,2047,1912,1737,1121,261,988,1449,1683,1868,1961,1890,1943,1996,1948,1771,1571,1339,1120,644,364,1494,2031,2048,1541,1010,1633,2048,2048,2048,2048,2048,2048,2048,2048,1931,2046,2025,1859,1546,1052,1402,2052,1888,1448,1630,2048,2048,2052,2048,2048,2049,2056,2056,1939,1895,1622,2033,1710,1187,1113,2053,2048,2048,2048,2048,2057,2048,1883,1857,2057,2048,2048,2048,2048,2057,2019,1079,1424,1842,2028,2048,2048,2048,1349,1589,1931,1983,2048,2048,2048,2048,2022,1876,1329,1013,815,484,422,247,116,1732,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1314,2055,2048,2048,2048,2048,2048,2048,2048,1171,250,1276,1697,1952,2053,2048,2048,2048,2048,2048,2048,2048,2048,2046,1905,1655,1509,1391,1182,1112,976,934,737,836,1009,872,819,1592,2042,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1948,1279,753,670,1459,2048,2048,2048,2053,1518,1706,2048,1746,1309,1007,564,787,1000,2057,1905,1224,483,1794,1927,1997,2046,2057,2053,2050,2030,2038,1513,1793,1798,1936,1976,2053,2048,2048,2048,2048,2048,2048,2043,2011,1764,1521,895,693,1538,2051,2048,2048,2048,2048,2048,2057,2057,2057,1976,1751,1480,1112,990,204,392,2054,2045,1974,1920,1797,1700,1733,2056,2027,1790,1595,1258,1780,1751,2025,2048,1919,2055,1013,2048,1683,1861,1883,2048,1671,1924,1403,1446,1125,1628,1999,2055,2011,1994,1988,2026,1912,2048,2057,2045,1737,1024,1283,2048,2048,2048,2048,2057,1248,1066,2048,2048,2048,2048,1517,338,1852,2048,2039,2048,2055,2048,2048,1965,2055,2048,1470,2046,2057,1745,2057,2053,1633,2024,2048,1488,1288,1937,1513,724,2047,2048,2057,2052,1351,114,136,1322,2040,2048,2048,2057,2057,2048,2054,1919,2048,2048,1940,2047,2055,1957,2048,2033,2048,2056,2043,2001,1935,1798,1795,1733,1576,1724,1217,1641,1707,1565,1308,1282,2036,1918,1916,1926,2048,2048,2048,2020,1493,1055,696,1422,1901,1338,1638,1800,2048,2048,2048,2048,2048,2057,2048,2048,2055,2038,1983,1784,1566,1408,1192,903,1323,2048,2048,2048,2048,2048,1554,671,1999,2054,2055,2014,1873,2033,2048,2054,2048,2056,2048,2056,2047,1953,1791,1424,789,959,2048,2048,2048,2048,1379,205,1001,2037,2048,2048,2048,2048,2056,2048,2048,1929,1561,241,557,1401,1953,2057,2048,2048,2057,2048,2055,2048,2057,2048,2055,2000,1922,1770,1783,1722,1569,1405,1276,1237,1234,1062,786,551,552,513,481,477,415,400,455,469,418,544,493,226,380,876,1166,1154,1247,1158,1042,925,896,689,493,286,133,163,1049,1633,1857,2055,2048,2048,2013,1956,1990,1848,1992,1761,2025,1960,1684,1552,2046,2051,2048,2018,2039,2043,2034,2051,2005,1993,1996,2035,1884,1983,2054,2048,2035,1708,1841,2009,1769,1872,2057,1752,1283,1639,2052,2056,1992,1913,1914,1939,1879,1916,2013,2057,2056,2052,1847,2056,2045,1611,1538,1601,1377,1136,441,613,381,470,708,704,1109,1602,1376,1422,1356,1269,1420,1709,1700,1791,1799,1919,2004,2017,2044,2057,2053,2048,2055,2048,2056,2048,2040,1994,1969,2013,1986,1910,1763,1725,1717,1690,1688,1531,1435,1456,1442,1428,1340,1255,1230,1222,1196,1144,1077,942,970,916,1537,1433,1484,1520,1442,1427,1549,1552,1490,1553,1471,1577,1612,1732,1571,1643,1525,1522,1580,1692,1754,1781,1773,1733,1804,1859,1909,1853,1985,1940,1969,2051,2043,2048,2048,2048,2056,2053,2017,1922,1739,1621,1122,1343,1790,1977,2052,2053,2056,1422,190,969,2057,2048,2057,1392,2053,1100,1990,2053,1633,1495,2057,2048,2048,2048,1552,2057,1995,1566,1266,2048,2057,2048,2057,2048,2048,1992,2032,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1993,2057,2056,2057,2048,2057,2027,1973,1996,2056,2057,2048,2033,2048,2048,2048,2048,2048,2048,1786,1285,2057,2048,2048,2057,2048,2047,2048,1921,1904,1838,1543,1621,1440,1700,1837,1606,1437,1371,1145,934,385,1456,2048,2048,2048,2056,1974,1673,1169,222,856,2050,2048,1979,1651,1399,1739,1858,1116,208,675,1022,386,392,349,338,445,397,382,297,826,890,847,726,544,529,479,459,661,473,669,772,478,662,618,837,977,223,461,554,336,430,1086,613,719,479,393,902,681,895,661,856,1026,796,1127,1004,1268,1247,374,446,470,206,299,378,274,559,652,598,173,303,318,350,150,200,326,183,279,305,262,361,297,209,105,185,229,138,258,824,650,443,430,705,749,894,673,875,1057,768,723,841,323,487,313,337,356,231,413,598,373,297,466,1011,595,1185,662,659,743,855,435,468,643,373,793,1769,1656,992,1217,1432,1415,1495,840,1049,952,816,901,1228,478,1154,800,1026,613,1066,260,572,571,314,792,372,494,797,745,525,659,515,390,581,1201,1321,928,816,905,1289,952,773,1294,1592,1009,1096,819,1214,1076,1457,931,1151,858,1219,832,942,906,1008,1046,1107,1039,343,466,253,344,428,200,279,81,321,299,565,465,536,276,568,568,885,820,682,749,679,995,1374,1082,1224,1389,1076,960,859,470,399,730,956,1049,667,942,364,324,511,623,489,1126,1223,1075,342,568,429,532,514,557,337,534,338,539,450,499,315,648,240,386,744,615,794,291,1465,525,478,608,573,403,708,417,351,540,169,446,555,502,887,753,1157,860,1011,562,418,382,213,252,483,723,668,540,656,531,378,380,482,403,421,392,706,201,289,212,327,254,366,132,217,251,364,113,109,177,116,113,104,128,113,104,237,317,454,277,179,865,829,814,608,1008,807,564,627,563,490,272,1333,1344,1080,1078,1130,1258,1419,1598,1639,1389,1211,850,957,956,1393,1728,1676,1225,1518,1441,1150,1031,607,533,710,288,736,592,813,762,443,424,431,354,371,354,309,578,210,423,215,488,441,327,224,257,209,149,211,490,652,1268,893,756,356,190,476,553,631,415,600,605,225,480,697,1062,850,612,701,427,522,792,484,478,430,747,559,620,627,691,501,230,421,405,413,409,77,37,38,135,193,176,204,281,172,202,191,164,137,427,302,320,359,198,59,951,1205,1172,1171,1096,1181,757,1298,775,380,375,1186,1298,550,1101,1786,1442,1433,1532,1536,1439,1540,1361,1497,1457,1524,1421,1442,1477,1590,1471,1524,1427,1499,1399,1348,1359,1558,1522,1629,1395,1565,1633,1534,1708,1644,1680,1694,1557,1022,937,1111,1125,1256,1890,1706,1768,1745,1687,1696,1727,1705,1723,1719,1690,1735,1756,1773,1764,1700,1607,1668,1683,1654,1692,1722,1687,1745,1683,1694,1673,1654,1665,1655,1581,1595,1650,1909,1549,1741,1677,1620,1654,1637,1738,1732,1813,1846,1823,1836,1825,1782,1701,1783,1664,1776,1804,1845,1768,1658,1764,1831,1692,1790,1788,1750,1715,1665,1621,1626,1698,1702,1653,1614,1582,1592,1669,1653,1641,1716,1698,1718,1660,1727,1693,1761,1715,1631,1740,1721,1710,1714,1663,1632,1690,1679,1613,1639,1598,1608,1540,1494,1522,1507,1627,1123,1063,857,659,924,1319,1460,1466,1285,1118,1172,1238,1160,1378,1366,1278,1311,1261,1280,1154,993,887,738,916,933,704,660,855,1058,1068,1067,1220,1630,1540,1425,1424,1401,1617,1405,1490,1526,1590,1340,1294,1270,1262,641,227,207,249,215,246,898,1347,1387,1188,1611,1638,1351,1366,1580,1151,775,1373,1293,757,1397,1521,1459,1581,1555,1605,1530,1361,1354,1582,1260,1459,1525,1723,1401,1447,1412,1448,1445,1635,1141,1500,1647,1507,1697,1487,1588,1641,1163,1746,1301,1622,1458,1133,1516,1521,1690,1567,1377,1439,1569,1343,1572,1575,1595,1382,1216,1610,1527,1549,1585,1345,1374,1492,1685,1261,1705,1273,1470,1553,1664,1297,1288,1545,1671,1576,1655,1182,1525,1362,1648,1038,1538,1367,1689,1013,1426,1428,1482,1319,1408,1600,1585,1618,1632,1537,1352,1335,1712,1426,1680,1683,1461,1507,1585,1455,1670,1098,1729,1671,1372,1803,1368,1630,1810,1517,1659,1260,1578,1795,1227,1720,1800,1351,1455,1610,1398,1588,1628,1402,1591,1639,1498,1550,1595,1692,1708,1602,1557,1216,1611,1824,1381,1576,1884,1884,1913,1945,2048,2000,2050,2021,2029,2010,2035,2024,2035,2027,2047,2056,2036,2033,1987,1994,1999,2030,2029,2035,2049,2048,2029,2040,2048,2016,2012,2024,2046,2044,2042,2041,2055,2028,2015,2023,1828,1987,2035,2051,2057,2029,2031,2028,2038,2015,1988,1994,1984,1982,2011,1996,2025,2040,2031,2052,2024,2001,1965,1990,1999,2012,1980,2050,2012,2023,2050,2028,1989,1957,1995,2016,1984,2002,2050,2046,2047,2033,2001,1982,1979,2025,2015,2039,2024,2048,2053,2048,2055,2025,2052,2021,2027,2000,2035,1987,2048,2005,1935,1974,1962,1988,1975,2018,1957,1940,1991,1992,1974,1943,2008,1987,1994,1926,1966,1966,1987,1981,1999,1927,1982,2009,1955,1954,2010,1971,1986,1959,1974,1996,1990,1963,1982,1973,1984,2025,1983,2008,1993,1975,2009,1962,2016,1928,1999,1967,1992,1995,1979,1974,1946,1978,1979,2003,1958,2007,1999,1992,2007,2020,1997,2002,2002,1970,1994,1965,1972,2009,2006,1941,1935,1987,2035,1960,1970,2043,2020,1998,1978,2045,2017,1951,2048,2002,2021,2033,2051,1997,2022,2034,2013,1999,1976,1986,2021,2016,1991,1971,1835,1995,2048,2056,2055,1921,1964,1918,1902,1743,1918,1879,1913,1748,1931,1840,1968,1993,1975,1834,1944,1940,1833,1876,1845,1974,1948,1962,1906,1934,1921,1932,1885,1854,2009,1966,1912,1964,1829,1975,1852,1874,1842,1888,1958,1989,1887,2038,1977,1898,1868,1839,1922,1857,1946,1971,1909,1954,2013,1959,1976,1761,1946,1738,1995,1947,1956,1921,1877,1967,1945,1959,1822,2020,1962,1973,1798,1717,1830,1737,1906,1875,1873,1814,1844,1852,1842,1960,1934,1916,1936,1919,1892,1937,1917,1888,1923,1900,1892,1945,1892,1996,1897,1958,1889,1869,1928,1834,1894,1809,1906,1922,1794,1958,1505,1776,1346,1749,1821,1730,1886,1967,1936,1973,1980,1973,1995,1922,1974,2008,1961,1955,1978,1757,1427,1435,1414,1438,1476,1523,1381,1620,1481,1443,1558,1680,1771,1609,1626,1901,2023,1976,1939,2011,1972,1809,1942,1927,2011,1982,1929,1985,1916,1963,1834,1854,1966,2012,2011,1894,2020,1904,1931,1897,1875,1991,1963,2013,1896,2057,1931,1919,1886,1847,2012,1921,2018,1892,1960,1861,1914,1904,1863,1967,1978,2008,1916,1968,1943,1867,1898,1872,1995,2017,1981,1934,2003,1924,1849,1928,1927,1964,1941,1916,1945,1943,1904,1960,1917,1885,1734,1759,1633,1653,1665,1698,1777,1706,1678,1672,1711,1725,1697,1731,1697,1655,1691,1677,1699,1736,1713,1732,1642,1647,1646,1713,1737,1745,1687,1599,1582,1667,1774,1708,1674,1621,1643,1648,1662,1761,1742,1719,1661,1650,1662,1779,1799,1768,1643,1598,1631,1771,1884,1854,1755,1737,1769,1794,1868,1834,1845,1798,1774,1851,1735,1795,1728,1707,1679,1708,1724,1634,1602,1761,1726,1716,1603,1847,1634,1638,1804,1703,1528,1715,1714,1744,1654,1763,1757,1768,1682,1791,1787,1818,1663,1756,1754,1715,1739,1763,1770,1961,1899,2002,2009,1991,1951,1924,1934,1920,2018,1973,1982,2006,1987,1978,2005,1966,1995,1975,1979,1965,1994,2007,1988,1983,1959,1998,1970,1943,1973,2019,2008,2009,1965,1986,1971,1977,1972,1975,1965,1961,1989,1961,1969,1959,1989,1965,1961,1953,1982,1947,1966,1954,1945,1973,1957,1975,1964,1966,1972,1971,1952,1972,1954,1966,1952,1967,1953,1965,1952,1971,1951,1972,1947,1973,1965,1892,1943,1896,1907,1903,1919,1887,1929,1899,1914,1929,1901,1897,1915,1912,1910,1937,1854,1921,1905,1839,1900,1924,1839,1891,1935,1834,1881,1947,1845,1861,1952,1842,1847,1959,1855,1822,1960,1837,1810,1974,1832,1821,1885,1789,1830,1897,1774,1838,1886,1751,1868,1896,1757,1877,1888,1772,1880,1858,1782,1892,1832,1816,1897,1796,1873,1912,1829,1870,1905,1804,1892,1855,1861,1910,1831,1857,1920,1808,1883,1867,1847,1912,1837,1847,1910,1850,1899,1881,1854,1894,1884,1850,1893,1881,1848,1895,1886,1845,1894,1888,1846,1891,1893,1846,1890,1892,1845,1885,1893,1839,1895,1910,1832,1906,1909,1837,1918,1906,1841,1915,1899,1844,1921,1870,1855,1929,1861,1860,1920,1858,1877,1915,1850,1865,1924,1922,1914,1925,1923,1924,1917,1923,1918,1919,1920,1929,1917,1909,1913,1901,1927,1930,1982,1971,1994,1987,1981,1987,1998,1985,1979,1975,1998,1907,1961,1885,1926,1895,1917,1893,1925,1827,1940,1908,1876,1922,1968,1981,1958,1965,1963,1948,1986,1922,1988,1930,1981,1936,1973,1945,1978,1891,1952,1831,1988,1836,1959,1867,1911,1890,1877,1916,1854,1958,1831,1987,1839,1947,1833,1876,1857,1831,1891,1800,1933,1800,1881,1859,1840,1873,1820,1920,1785,1922,1819,1882,1840,2049,2048,2034,2013,2022,1992,2030,2022,2011,2038,2022,2041,2033,2039,2021,1997,1829,1998,2007,2037,2045,2054,2021,2031,2038,2006,2010,2012,2041,2025,2034,2049,2037,2047,2032,2013,1966,1953,2004,2002,2023,2050,2030,2005,2021,1985,1991,1993,1972,1990,2028,2044,2018,2018,2013,2015,1979,2003,2002,1977,1984,2019,2043,2010,2021,2018,2007,1983,2002,2005,1968,1976,2012,2039,2011,2053,2053,2027,2001,2039,2014,2005,1973,2038,2035,2050,2042,2052,2046,2043,2017,2027,2022,2050,2048,2053,1998,2014,1966,1992,1973,2008,2003,1968,2014,1990,1965,2010,1976,1944,1946,1971,1984,2002,1982,2010,1997,1917,1948,1946,1926,1801,1917,1995,2000,1957,2007,1982,1987,1976,1992,1987,1971,1886,1894,1922,1989,1963,1911,1908,1954,2002,1947,1928,1841,1890,1975,1994,1903,1851,1929,1964,1953,1874,1885,1873,1850,1917,1953,1927,1939,1948,1852,1887,1857,1886,1979,1909,1970,1965,1881,1881,1899,1882,1956,1998,1934,1887,1815,1833,1891,1937,1974,1850,1879,1818,1653,1943,1921,1894,1914,1916,1841,1870,1939,1841,1890,1882,1859,1871,1855,1815,1858,1966,1963,1917,1919,1885,1848,1859,1884,1838,1851,1931,1958,1965,1921,1947,1823,1890,1956,1928,2036,2028,2019,1952,1953,2002,1968,2009,1956,1942,1937,2054,2008,1985,1806,1971,2008,2012,1993,1945,1987,2013,2006,1998,1961,1987,2005,2023,2014,1969,1852,1967,1976,1969,2022,1970,2013,2039,2006,1991,2008,1972,2016,2006,1984,1983,2019,2022,1994,1925,1747,1788,1888,2024,2010,1962,2026,1997,1970,1959,1968,1960,1958,1882,1960,1959,1974,1946,2003,1959,2028,1997,1994,1947,1952,1988,1978,1965,1856,1936,1947,1967,1874,1900,1941,1943,1869,1921,1995,1973,1984,1989,2007,2016,1995,2016,1898,1903,1988,1925,1706,1910,1950,1949,1957,1935,1943,2025,1989,2002,1985,1973,1962,2026,1979,1961,1996,1940,1930,1966,1935,1977,1939,1973,1975,1994,2007,2019,1991,1977,1975,2023,1965,1989,1966,1973,1943,2002,1947,1947,1986,1974,2006,1977,1934,1989,2023,1983,1953,1956,1938,2034,1949,1989,1997,1990,2014,1971,1965,2027,1984,1965,2020,1923,2045,1936,1951,1973,1963,1987,1997,1988,1953,1901,1958,1997,1933,1948,1990,1961,1914,1959,1976,2013,2003,1933,1954,1964,1927,1996,1912,1942,1954,1847,1880,1959,1968,1893,1896,1924,1905,1965,1948,1915,2003,1969,1943,1997,1986,1935,2032,1810,1983,1957,2010,2017,1988,2015,2050,2033,1868,2014,1964,2018,2022,2031,2051,2040,2021,1947,2007,1995,2026,2034,2024,2025,1995,2040,1977,2047,1994,2038,2048,2024,2054,2030,2046,1957,2018,1990,2031,2044,2022,2046,2050,2054,1978,2009,1968,2051,2040,2032,2051,2040,2045,1933,1950,1950,1909,1908,2004,1963,1983,1999,1996,2032,2025,1900,1999,1962,2026,1965,2008,1931,1848,1988,1978,1972,2010,1996,1954,1785,1961,1952,1645,1873,1789,1673,1611,1630,1562,1801,1359,1515,1537,1364,1590,1277,1504,1475,1150,1510,1153,1398,1294,1281,1380,1154,1415,1148,962,1570,1427,1142,1253,1351,1309,946,1272,1394,1121,1621,1113,1384,1174,1538,1216,1297,1435,1512,1137,1635,1470,1482,1596,1361,1579,1315,1500,1540,1168,1633,1157,1448,1147,1596,1196,1389,1373,1027,1230,1505,1441,1085,1276,1365,1311,959,1318,1414,1164,1548,1091,1370,1113,1659,1221,1469,1481,1381,1497,1457,1562,1444,1586,1497,1264,1444,1495,1382,1244,1568,1268,1349,1165,1612,1220,1426,1306,955,1371,1430,1401,1097,1316,1497,1089,1023,1279,1384,1193,1476,1137,1384,1137,1618,1217,1507,1483,1347,1520,1410,1533,1487,1489,1576,1224,1495,1478,1194,1412,1471,1335,1369,1155,1571,1175,1406,1337,857,1584,1326,1287,1217,1212,1613,854,1225,1391,1183,1519,1031,1363,1280,1359,1347,1226,1416,1508,1242,1620,1465,1467,1562,1317,1640,1287,1527,1523,1264,1649,1146,1391,1242,1409,1381,1312,1429,1087,1002,1581,1421,1147,1265,1377,1470,910,1263,1436,1179,1603,1045,1382,1078,1660,1238,1394,1463,1432,1366,1448,1582,1445,1574,1463,1377,1400,1475,1484,1209,1676,1189,1412,1155,1606,1143,1439,1281,913,1363,1384,1429,1089,1327,1521,1011,1074,1345,1266,1226,1520,1178,1373,1183,1601,1248,1473,1492,1377,1439,1438,1588,1521,1588,1586,1244,1529,1563,1318,1035,1700,1205,1350,1136,1558,1217,1292,1370,975,1217,1474,1435,1078,1307,1527,984,1056,1360,1251,1092,1487,1141,1390,1153,1627,1119,1398,1521,1454,1443,1526,1587,1514,1549,1608,1304,1478,1549,1360,1093,1740,1196,1396,1131,1603,1178,1265,1406,1089,945,1587,1473,1161,1250,1358,1343,931,1309,1368,1135,1544,1063,1379,1285,1602,1225,1222,1529,1541,1361,1675,1419,1501,1579,1400,1703,1256,1517,1536,1202,1648,1232,1386,1311,1298,1490,1221,1463,1183,915,1647,1313,1228,1250,1203,1665,800,1262,1457,1242,1647,1070,1324,1219,1438,1454,1318,1423,1504,1244,1692,1510,1545,1589,1413,1693,1313,1559,1507,1178,1635,1256,1440,1365,1258,1507,1241,1491,1223,857,1666,1283,1252,1238,1188,1620,897,1200,1418,1425,1441,1295,1294,1370,1288,1648,1209,1521,1564,1286,1622,1554,1640,1578,1546,1624,1375,1217,1236,1304,1429,1610,1586,1448,1314,1226,1558,1511,1373,1760,1538,1313,1232,1450,1462,1414,1721,1522,1479,1358,1244,1492,1397,1371,1656,1580,1594,1432,1190,1394,1363,1227,1468,1703,1246,1117,1302,1292,1731,1384,1276,1448,1660,1177,1699,1671,1883,1942,1884,1866,1926,1781,1751,1837,1905,1760,1846,1582,1269,1736,1688,1778,1725,1710,1690,1452,719,1349,1999,1984,1808,1548,1142,1380,1806,1619,1760,1740,1900,1714,1724,1667,1888,1681,1803,1900,1897,1854,1673,1691,1942,1711,1983,1799,1939,1967,1960,1920,1874,1746,1556,1909,1821,1890,1914,1812,1643,1734,1544,1721,1754,1668,1594,1681,1567,1409,1696,1798,2016,2013,1981,1909,2001,2022,1994,1943,2015,2037,2008,1960,2000,2022,1968,1991,1932,1962,1924,2008,1945,1969,1961,2052,2006,2002,2010,2018,2025,2002,1985,1829,1997,2056,2054,2037,1989,1957,1857,1645,1950,1875,1948,1896,1914,1907,1909,1895,1902,1886,1948,1857,1905,1975,1904,1910,1922,1875,1897,1335,1738,1959,1706,1480,1484,1246,1602,1708,1617,1624,1850,1539,1585,1615,1578,1510,1544,1633,1652,1561,1286,1289,1669,1601,1267,1374,1966,1840,1762,1757,1797,1702,1807,1871,1718,1660,1674,1748,1612,1623,1853,1740,1300,1486,1701,1465,1457,1252,1364,1746,1501,1234,1169,1454,1619,1235,1560,1977,1995,1976,1977,1967,1908,1816,1530,1911,1873,1868,1589,1813,1994,1880,1873,1893,1767,1786,1816,1694,1895,1503,1444,1736,1460,1374,1565,1613,1418,1745,1390,1741,1422,1708,1585,1853,1500,1746,1527,1773,1466,1475,1610,1511,1880,1267,1264,1316,1792,1841,1806,1706,1380,1455,1679,1759,1560,1446,1646,1636,1633,1647,1560,1552,1677,1603,1360,1567,1418,1703,1618,1391,1608,1523,1626,1652,1496,1240,1578,1537,1216,1307,1369,1236,1340,1336,1551,1214,1248,1446,1346,1353,1379,1380,1312,1605,1586,1573,1911,1469,1485,1848,1843,1855,1922,1556,1983,1765,1566,1957,1650,1982,1222,1854,1909,1531,1720,1707,1693,1652,1571,1471,1624,1495,1562,1470,1575,1571,1534,1530,1432,1595,1549,1490,1436,1593,1475,1801,1857,1914,1869,1839,1731,1475,1493,1586,1512,1918,1941,1908,1877,1884,1887,1894,1966,980,540,578,479,710,633,590,581,634,1832,1976,1984,1963,1933,1963,1974,1951,1938,1651,1655,1608,1643,1773,1569,1717,1584,1707,1535,1553,1633,1496,1506,1501,1377,1472,1373,1609,1523,1227,1150,1445,1346,1585,1455,1408,1371,1570,1474,1606,1443,1390,1396,1383,1447,1414,1382,1469,1842,1759,1826,1879,1880,1882,1792,1759,1810,1655,1718,1779,1839,1821,1745,1720,1665,1066,790,783,883,1510,1712,1656,1638,1677,1632,1595,1602,1656,1768,1651,1697,1651,1667,1816,1798,1886,1340,1789,1504,1735,1580,1802,1483,1669,1928,1683,1847,1852,1849,1576,1855,1858,1732,1080,1046,967,1098,1050,1098,950,1077,1704,1546,1606,1528,1575,1567,1545,1536,1671,1431,1560,1579,1664,1241,1046,1023,999,1334,1428,1602,1772,1593,1416,1101,1458,1536,1128,1291,1516,1529,1455,1612,1624,1534,1561,1640,1501,1349,859,840,1036,554,997,724,1063,1384,1468,765,570,877,594,814,538,729,726,723,864,483,810,708,928,507,545,859,676,886,506,866,712,898,437,431,913,573,725,293,591,246,197,561,160,597,265,609,170,522,190,156,468,40,570,167,573,226,250,1542,1431,1439,1192,1223,1168,1382,996,996,998,991,972,995,995,993,1546,1379,1402,1450,1509,1462,1383,1347,1558,1456,1489,1523,1601,1596,1485,1530,1521,1561,1398,1440,1391,1418,1449,1395,1432,1477,1401,1391,1364,1384,1103,952,954,925,1124,906,947,926,1054,924,931,907,1025,1394,1412,1403,1398,1120,907,954,925,1469,1610,1570,1564,1517,1524,1523,1620,1593,1579,1343,1353,1297,1220,1325,1329,1346,1560,1546,1528,1332,1506,1337,1267,1241,1561,1644,1699,1564,1607,1513,1775,1715,1808,1606,1192,1167,1501,1419,1478,1206,1324,1392,1427,1666,1410,1595,1431,1470,1664,1693,1649,1666,1568,1664,1641,1643,1762,1626,1706,1662,1606,1593,1652,1625,1501,1716,1675,1611,1686,1477,1638,1622,1642,1659,1615,1696,1685,1653,1596,1665,1651,1536,1809,1636,1618,1618,1800,1698,1613,1647,1639,1860,1676,1676,1667,1770,1689,1656,1703,1647,1210,973,943,972,1391,1480,1559,1493,1601,1313,1333,1381,1282,1278,1142,1259,1262,1341,1148,940,958,1463,1195,1150,1079,1216,1152,885,985,989,1589,1522,1531,1555,1486,1512,1511,1545,1695,1397,1396,1352,1371,1374,1371,1353,1404,1717,1526,1546,1573,1557,1546,1532,1510,1653,1663,1615,1620,1652,1622,1594,1600,1657,1760,1464,1417,1400,1423,1475,1416,1399,1464,1864,1755,1718,1675,1746,1736,1696,1709,1896,1751,1704,1699,1700,1733,1663,1680,1700,1310,988,1225,1031,1114,1070,1236,1130,1121,1051,972,758,640,723,643,1641,1646,1740,1692,1719,1668,1722,1698,1780,1802,1734,1681,1622,1718,1683,1733,1699,1881,1747,1774,1751,1765,1781,1775,1771,1753,1839,1722,1683,1621,1686,1658,1722,1667,1698,1449,1507,1393,1626,1002,1018,1024,1037,1854,1825,1809,1833,1660,1838,1799,1839,1803,1410,1165,1213,1571,1476,1006,1042,1341,1744,1590,1598,1570,1537,1636,1617,1608,1756,1515,1453,1428,1471,1392,1488,1440,1448,1424,1792,1354,1758,1277,1491,1443,1490,1419,1688,1634,1609,1622,1532,1599,1600,1563,1667,1515,1474,1443,1371,1545,1441,1435,1405,1803,1805,1835,1844,1674,1838,1802,1828,1733,1693,1638,1614,1684,1621,1639,1598,1703,1579,1498,1436,1474,1399,1497,1450,1440,1594,1828,1803,1855,1919,1698,1839,1817,1873,1679,1617,1629,1614,1544,1664,1642,1594,1696,1611,1438,1420,1488,1418,1484,1443,1468,1574,1839,1820,1855,1700,1868,1799,1857,1794,1319,1079,1660,682,688,1177,692,1072,754,679,1499,1040,652,707,1186,1251,988,1252,1394,1292,603,1159,1254,1197,1315,1289,1738,1229,951,950,1652,1590,1582,1727,1653,1715,1553,1765,1487,1469,1273,895,1170,1591,1501,1013,1006,1010,1038,1304,1065,1051,1077,1375,1905,2031,2011,2014,2027,2028,2011,1979,2018,2048,2033,2019,2002,2013,2004,1992,1977,2023,2023,2036,1997,2027,2005,2007,1961,2021,2046,2040,1987,1995,2011,2004,1998,1980,2047,1908,1907,1904,1882,1893,1905,1836,1865,1880,1926,1876,1883,1832,1867,1828,1885,1953,1669,1679,1657,1691,1667,1651,1656,1621,1801,1644,1660,1646,1618,1676,1642,1597,1683,1543,1433,1425,1394,1444,1433,1402,1401,1573,1508,1515,1511,1515,1322,1546,1553,1629,1404,1561,1469,1684,1432,1454,1530,1627,1352,1393,1475,1501,1945,1679,1532,1660,1586,1587,1516,1592,1712,1532,1574,1623,1691,1735,1619,1586,1530,1666,1539,1571,1544,1545,1527,1580,1520,1437,1577,1472,1726,1535,1663,1605,1665,1649,1661,1803,1691,1495,1725,1932,1840,1706,1732,1895,1937,1930,1940,1990,1945,1924,1913,1929,1822,1838,1872,1982,1852,1863,1866,1833,1792,1773,1793,1783,2016,1954,1968,1970,1915,1907,1903,1883,1986,1926,1879,1887,1861,1809,1840,1821,1786,2009,1989,1985,1964,1944,1946,1931,1901,1977,1918,1810,1805,1732,1776,1759,1766,1760,1925,1848,1849,1762,1807,1823,1821,1804,1758,1682,1413,1452,1447,1414,1445,1417,1406,1608,1958,1937,1963,1964,1943,1900,1907,1923,1905,1864,1923,1994,1943,1954,1895,1916,1893,1944,1878,1942,1694,1513,1515,1609,1584,1600,1569,1526,1850,1796,1812,1800,1754,1740,1746,1721,1722,1562,1327,1305,1294,1423,1282,1360,1345,1556,1484,1471,1489,1568,1565,1511,1472,1444,1672,1679,1482,1678,1643,1564,1576,1467,1369,1354,1314,1235,1286,1166,1285,1708,1893,1856,1875,1905,1885,1866,1870,1890,1975,1904,1877,1864,1881,1877,1890,1884,1893,1436,1416,1381,1396,1467,1458,1474,1474,1781,1669,1698,1735,1677,1609,1580,1548,1648,1530,1541,1575,1628,1724,1722,1696,1642,1700,1453,1469,1469,1447,1350,1408,1406,1530,1524,1513,1511,1539,1235,1526,1515,1454,1662,1488,1537,1490,1274,1494,1501,1521,1533,2007,1959,1921,1673,1427,1412,1418,821,1423,1411,1409,1594,1176,1145,1099,1134,1085,1066,1145,1175,1519,1430,1424,1914,1900,1899,1908,1897,1906,1893,1935,1693,1612,1500,1539,1453,1368,898,959,793,895,804,962,700,924,891,1020,741,942,869,1047,930,952,1350,1241,1330,1290,819,361,603,517,375,297,468,670,1335,914,866,834,1079,1305,762,1325,776,214,429,272,318,1382,1421,1495,1677,1837,1724,1818,1820,1804,1771,1756,1788,1754,1635,1655,1569,1602,1600,1651,1565,1649,1376,1307,1330,1327,1607,1679,1659,1667,1670,1664,1642,1693,1684,1677,1666,1675,956,1573,1826,1859,1780,1793,1811,1885,1813,1756,1644,1454,1470,1454,1643,1863,1852,1847,1861,1861,1870,1857,1879,1850,1073,1750,1209,1084,1268,1099,1178,2038,2003,1973,1918,1976,1950,1899,1909,1885,1969,1943,1949,1913,1921,1881,1932,2011,1770,1672,1764,1801,1817,1806,1683,1609,1876,2055,2055,2042,2041,2047,2041,2034,2057,2048,2053,2042,2050,2047,2044,2048,2041,2055,1874,1920,1857,1854,1822,1864,1841,1867,1949,1899,1880,1841,1865,1835,1864,1847,1944,1307,1436,796,856,747,675,741,564,784,880,794,385,725,787,877,629,410,769,862,900,449,533,777,838,924,628,447,1252,1027,1107,483,673,1177,1097,1055,379,904,1133,1026,896,405,1059,1139,1102,652,1409,1312,1584,1316,1768,1380,985,1152,1143,1126,1153,1092,1083,1113,1164,1108,1198,1217,1062,1035,1024,1276,1393,1103,1089,1172,1073,1067,1130,1058,1012,985,890,1033,1022,861,834,816,867,1337,414,564,522,550,566,462,569,549,462,528,471,495,500,541,573,502,1467,1486,1479,1489,1556,1502,1517,1517,1495,1103,970,993,1475,1544,1364,1393,1336,1366,1492,1736,1640,1666,1654,1607,1617,1660,1647,1662,1660,1490,1463,1517,1457,1529,1516,1455,1564,1038,1172,1230,1351,1340,1295,1293,1117,1391,1455,1383,1444,1554,1519,1547,1547,1720,1314,998,1106,1180,1145,1150,1120,1103,1101,1154,1109,1233,1195,1060,1062,1084,1271,1322,1157,1122,1197,1076,1049,1108,1018,1032,1001,941,1046,1073,854,822,827,922,1233,441,572,488,553,545,477,557,535,474,512,495,491,518,518,573,533,1776,1805,1797,1793,1799,1782,1730,1741,1414,1397,1385,1397,1655,1225,1197,1240,1538,1440,1327,1311,1521,1286,1030,987,981,1475,1694,1434,1687,1662,1355,1195,1177,1212,1443,1386,1701,1666,1597,1692,1698,1593,1664,1641,1685,1139,1434,1437,1541,1912,1703,1962,1766,1690,1655,1709,1724,1615,1742,1781,1685,1570,1496,1549,1547,1553,1537,1570,1238,1760,1619,1605,1591,1564,1557,1588,1615,1779,1469,1757,1784,1505,1434,1743,1785,1536,1687,1048,1092,1137,1138,1173,1130,1130,1174,1121,1130,1111,1199,1141,1090,1008,1105,1288,1046,1225,1145,795,727,1129,1158,1105,966,962,1244,1090,945,610,1106,1243,1136,991,937,1245,1124,904,494,1164,1243,1207,966,847,1192,1118,997,424,1206,1204,1145,1001,740,1130,1153,1072,412,1185,1167,1144,890,1310,1145,1087,1195,1050,1041,1100,1019,1033,1019,932,1058,1044,847,825,841,928,952,1171,1247,1227,361,981,1246,1115,883,1267,1151,1248,1198,1235,1152,1125,1253,1158,1297,1129,1142,1200,1204,1299,1118,1153,1234,1126,1278,1186,972,1034,1135,1355,1110,999,983,1182,1319,1057,990,1062,1277,1208,1058,954,1107,1506,647,514,542,1276,1568,1753,1858,1868,1825,1595,1394,497,517,527,524,547,966,1288,1041,1283,1507,1190,1091,1474,1346,1047,1274,1505,1198,1079,1438,1736,1865,1741,1732,1901,1668,1800,1887,1707,1823,1809,1825,1715,1856,1765,1768,1898,1734,1739,1878,1730,1793,1801,1753,1873,1810,1829,1670,1898,1742,1859,1800,1746,1903,1672,1827,1871,1789,1758,1815,1841,1709,1825,1881,1715,1904,1732,1771,1918,1740,1743,1810,1826,1747,1818,1828,1672,1906,1680,1825,1778,1764,1866,1778,1828,1792,1808,1751,1800,1904,1723,1735,1883,1704,1879,1772,1752,1360,1183,1231,1232,1262,1159,1234,1091,1028,565,796,867,749,401,725,806,904,593,438,785,838,932,448,539,781,849,896,674,1439,1029,1162,1149,1131,1173,1083,1092,1120,1146,1118,1163,1171,1094,1075,995,1105,1460,1521,1595,1057,1092,1195,1084,1064,1080,1047,1030,1007,863,1013,1049,872,912,767,895,1469,1424,1511,1180,431,576,510,539,555,495,539,523,484,525,499,478,512,514,585,516,1682,1656,1687,1569,1721,1657,1647,1658,1700,1691,1774,1644,1626,1603,1692,1594,944,519,1022,558,422,324,828,1082,2037,2040,2030,2003,2023,1990,1985,1973,2019,2035,2044,2027,2012,2016,2018,1964,2024,1382,1351,1611,1534,1361,1365,1266,1119,1121,1124,1120,1122,1120,816,65,875,1991,2057,1853,1870,1915,1849,1842,1894,1895,1852,1946,1917,1936,1957,1851,1897,1923,1924,1875,1792,2004,1877,1892,1931,1909,1824,1767,1818,1758,1918,1897,1897,1871,1869,1892,1893,1915,1831,2009,1749,1874,1858,1919,1843,1643,1367,295,596,661,637,635,588,606,750,723,665,785,809,925,610,885,176,1111,322,385,1569,686,989,248,343,329,978,1571,1456,1605,1635,1596,1553,1432,1515,1616,1621,1636,1578,1474,1573,1560,1506,1753,1517,1649,1626,1505,1854,1847,1786,1756,1842,1854,1842,1834,1858,1704,1329,1296,1348,1348,1340,1290,1321,1451,1486,1459,1450,1463,1485,1463,1461,1422,1618,1462,1444,1429,1489,1494,1465,1425,1507,1592,1455,1451,1455,1501,1490,1454,1429,1592,1481,1389,1427,1442,1463,1442,1424,1400,1616,1362,1386,1419,1499,1468,1405,1407,1607,1426,1417,1383,1475,1489,1436,1401,1404,1611,1357,1363,1420,1460,1480,1413,1368,1612,1415,1387,1449,1490,1458,1476,1454,1406,1634,1458,1422,1467,1481,1493,1447,1444,1490,1452,1320,1305,1380,1373,1377,1280,1254,1546,1333,1300,1340,1391,1352,1338,1319,1297,1549,1310,1317,1356,1331,1330,1334,1269,1559,1471,1416,1448,1478,1491,1478,1436,1369,1636,1387,1409,1473,1487,1497,1446,1394,1634,1408,1354,1370,1483,1446,1421,1440,1400,1621,1415,1366,1433,1482,1444,1419,1384,1531,1489,1401,1370,1439,1490,1459,1437,1413,1586,1465,1414,1430,1485,1468,1456,1422,1409,1807,1763,1819,1732,1863,1584,1758,1812,1836,1818,1762,1615,1736,1783,1722,1757,1791,1859,1823,1887,1834,1894,1843,1901,1856,1890,1833,1830,1750,1820,1827,1783,1762,1817,1921,1789,1778,1714,1766,1720,1762,1707,1826,1835,1816,1779,1751,1784,1743,1747,1771,1957,1891,1815,1825,1801,1797,1855,1794,1807,1871,1723,1783,1751,1742,1725,1755,1780,1852,1802,1858,1822,1809,1830,1748,1778,1788,1813,1788,1742,1766,1614,1645,1748,1729,1626,1845,1781,1706,1789,1633,1651,1635,1680,1806,1879,1657,1609,1633,1662,1689,1690,1662,1670,1741,1689,1629,1650,1711,1692,1680,1685,1807,1818,1756,1773,1795,1820,1794,1839,1776,1837,1785,1703,1747,1778,1791,1769,1763,1864,1751,1831,1883,1873,1881,1935,1891,1816,1815,1679,1704,1749,1755,1735,1801,1727,1807,1704,1676,1826,1797,1788,1841,1811,1717,1707,1406,1531,1522,1501,1518,1502,1504,1595,2050,1951,1930,2005,1997,1932,1998,1921,1914,1969,1986,2014,1946,1944,1982,1987,2042,1555,407,40,38,40,319,38,40,38,782,1854,1789,1831,1851,1832,1821,1770,1846,1740,1468,1459,1446,1465,1419,1430,1440,1629,1826,1830,1805,1752,1788,1779,1768,1809,1157,762,38,40,40,313,40,38,40,40,1131,1125,1770,1719,1730,1755,1753,1719,1708,1739,1770,1787,1092,1273,1446,1143,920,1598,1418,1201,1123,1825,1612,1649,413,40,38,40,319,38,40,38,598,1442,1385,1218,1174,1717,1649,1619,1705,1670,1673,1668,1611,1503,38,40,38,40,1150,236,121,1291,1867,2028,1716,1659,1605,1645,1681,1664,1706,1731,1685,1747,1746,1744,1724,1721,1712,1679,1760,1037,1122,282,1160,1815,1746,1725,1761,1735,1803,1661,1731,1859,1847,1845,1883,1772,1934,1785,1841,1896,1842,1669,1646,1728,1665,1822,1783,1717,1874,1791,1964,1772,1962,1784,1958,1872,1875,1921,1276,1158,1102,1022,1227,1409,1343,1340,1359,1390,1146,1156,1075,1162,1137,1252,1633,666,834,955,1004,1439,1688,1080,785,660,845,1483,1629,1743,1523,873,1335,1682,1317,1226,929,785,981,696,517,978,1225,1374,1198,1241,1346,1372,1410,1255,1471,1922,1900,1876,1932,1834,1863,1900,1894,1841,1893,1920,1946,1828,1885,1885,1949,1147,951,957,927,1616,1955,1698,1932,1853,1125,1211,1187,1252,2001,2024,2001,2036,1938,1919,1883,1902,1968,2028,2035,2042,2041,1748,1824,1785,1843,1810,1802,1717,1801,1859,1937,1942,1941,1975,1564,1252,1312,1660,1264,1177,1271,1273,1330,1187,1256,1248,1651,1367,1259,1189,1711,1573,763,805,1610,1686,873,746,1360,1333,1036,730,994,1532,1581,1373,1402,1624,1812,1760,1804,1779,1839,1765,1869,1827,1825,1654,1669,1661,1748,1767,1795,1819,1735,1606,1446,1408,1448,1569,1445,1421,1444,1595,1513,1443,1489,1577,1569,1480,1484,1554,1933,1983,1959,1917,2018,1982,1969,1970,2009,1757,1763,1748,1760,1775,1580,1545,1579,1899,1912,1791,1899,1921,1763,1840,1771,1850,1938,1863,1844,1901,1875,1820,1777,1849,1907,1402,1467,1547,1568,1211,1212,1558,1276,1181,1247,1216,1747,1128,1249,1310,1894,1772,1789,1774,1813,1811,1783,1788,1798,1880,1830,1807,1815,1431,873,807,803,1015,1158,1155,1171,1158,1266,1209,1174,1212,1317,1406,1407,1285,1641,1844,1871,1847,1893,1837,1811,1863,1831,1943,1901,1929,1908,1933,1910,1939,1943,1895,1857,1854,1825,1718,1868,1820,1703,1590,1654,1790,1844,1857,1880,1883,1795,1898,1875,1487,1458,1433,1531,1546,1623,1786,1573,1540,1652,1633,1710,1695,1751,1732,1796,1797,1905,2056,2055,1951,1973,1979,1984,1970,2007,1928,1952,1921,1922,1125,1352,1366,1070,1758,1793,1733,1761,1713,1513,1643,1534,1655,1770,1771,1783,1741,1860,1783,1807,1757,1783,1699,1705,1719,1623,1682,1823,1794,1630,1161,1034,1062,1158,1330,902,871,939,1299,949,1238,913,1289,528,660,430,674,892,754,770,703,786,1207,1182,1207,1055,1291,1404,1422,1435,1316,1417,1645,1623,1352,1459,1640,1477,1481,1728,1617,1643,1433,200,221,195,465,704,482,413,470,1834,2046,2045,2054,2024,2036,2048,2033,2023,1975,1931,1942,1930,1878,1912,1920,1909,1674,1415,1357,1476,1437,1115,1202,1131,1095,1420,1448,1398,1447,1767,1857,1826,1831,1884,1847,1781,1797,1900,1799,1743,1742,1779,1676,1762,1797,1697,1596,1416,1494,1437,1463,1432,1472,1560,1455,1848,1862,1868,1885,1541,1189,1249,1223,1638,1826,1774,1784,1839,1382,1426,1472,1437,1989,2026,2037,2009,2034,1996,2004,1974,1950,1535,1477,1484,1515,1721,1671,1662,1670,1985,1962,1988,1994,1988,1733,1703,1717,1847,2055,2049,2040,2048,1454,1306,1025,530,527,527,780,1252,1440,1467,1189,1215,1505,1397,1341,1300,1565,1477,1626,1461,1416,1676,1713,1837,1835,1594,1210,1337,1224,1327,962,1003,990,1154,854,880,965,1021,1082,1982,1967,1935,1947,2029,2007,1967,2005,1956,1545,1490,1625,1736,1635,1688,1685,1645,1808,1479,1538,1610,1834,1604,1718,1646,1683,1533,1702,1581,1479,1427,1613,1531,1442,1882,1903,1870,1843,1882,1885,1885,1860,1902,1617,1495,1433,1672,1977,1981,1985,1994,1984,1817,1782,1795,1845,1871,1926,1933,1834,1362,1467,1419,1357,1516,1486,1526,1485,1532,1567,1761,1685,1595,1484,1606,1518,1473,1772,1731,1631,1758,1653,1750,1663,1768,1660,1670,1527,1701,1708,1629,1651,1542,1698,1572,1574,1565,1471,1528,1771,1400,1738,1629,1511,1508,1513,1526,1522,1517,1649,1605,1329,1297,1392,1511,1621,1851,1421,1531,1679,1497,1749,1763,1684,1630,1563,1275,1212,1250,1260,1356,1215,1357,1751,1337,1457,1271,1367,1100,1168,1242,1177,1328,1416,1404,1355,1440,1576,1228,1296,1608,1724,1853,1638,1343,1128,1008,911,903,1091,1176,1265,1285,1425,1637,1571,1663,1857,1421,1188,995,990,947,705,923,1316,1153,1244,1253,1256,1291,1462,1692,1735,1879,1812,1781,1768,1714,1372,1241,1184,1338,1286,1331,1311,1272,1229,1269,1294,1272,1304,1771,1586,1701,1578,1531,1451,1678,1631,1652,1381,1223,1163,1295,1255,1250,1423,1444,1852,1434,1240,1383,1197,1239,1129,1276,1385,1629,1715,1639,1634,1436,1388,1462,1326,1815,1472,1413,1249,1239,1277,1175,1255,1345,1710,1705,1721,1665,1521,1647,1721,1493,1682,1549,923,257,1113,1568,963,267,1029,1558,938,259,1048,1560,964,257,1054,1537,992,257,1002,1541,979,257,887,1236,1285,1268,1430,1332,1240,1355,1286,1430,1306,1310,1264,1430,1324,1306,1322,1285,1493,1355,1271,1272,1235,1265,1276,1236,1243,1575,1166,1167,1239,1190,1229,1195,1169,1244,1466,1268,1239,1282,1260,1276,1246,1255,1653,1707,1751,1743,1646,1674,1704,1763,1828,1188,1337,1320,1380,1324,1422,1248,1388,1329,1366,1350,1345,1361,1394,1390,1393,1849,1670,1587,1586,1655,1594,1507,1479,1245,1371,1397,1446,1582,1524,1430,1514,1703,1921,1679,1605,1564,1637,1582,1540,1489,1266,1400,1362,1429,1585,1516,1456,1522,1661,1930,1661,1602,1596,1639,1581,1552,1531,1292,1405,1346,1385,1545,1504,1495,1539,1644,1879,1714,1593,1621,1603,1579,1573,1482,1318,1348,1363,1375,1530,1521,1513,1490,1590,1845,1460,1197,1127,938,885,937,1079,957,1128,1184,1273,1196,986,959,1034,1073,1181,1554,1195,1161,983,849,951,1063,973,1102,1129,1268,1202,1029,934,1027,1058,1078,2020,1916,1902,1938,1973,1991,1944,1929,1871,1829,1783,1805,1890,1920,1948,1939,1966,1460,1977,1911,1963,1998,1969,1940,1971,1981,1888,1762,1750,1779,1790,1757,1819,1778,1738,1774,1762,1802,1743,1683,1758,2011,1947,1878,1873,1908,1960,1505,729,929,1992,1993,2008,1983,1941,1989,1980,1957,2008,1959,1951,1978,1970,1989,1953,1961,1963,1757,1563,1570,1579,1565,1568,1552,1571,1691,1787,1635,1697,1572,1684,1838,1810,1839,1813,1638,1536,1549,1490,1711,1656,1734,1572,1758,1628,1700,1690,1766,1838,1829,1850,1882,1793,1660,1703,1585,1837,1823,1827,1827,1846,1531,1606,1590,1546,1674,1681,1728,1641,1755,1721,1795,1737,1816,1535,1588,1695,1748,1630,1570,1847,1600,1770,1694,1817,1637,1704,1573,1704,1715,1508,1516,1737,1640,1636,1293,1659,1946,1758,1032,1906,1926,1569,1693,1544,2033,2004,2015,1702,1418,1242,1240,1299,1207,1557,1607,1580,1507,1408,1490,1482,1496,1538,1414,1206,976,905,981,1373,1070,967,1185,1075,1822,1814,1872,1885,1806,1841,1780,1794,1954,1769,1532,1651,1658,1708,1760,1757,1689,1854,1822,1879,1869,1783,1874,1765,1800,1966,1782,1612,1659,1640,1759,1763,1796,1689,1846,1798,1901,1788,1933,1764,1957,1783,1928,1980,1858,1997,1959,1890,1954,2011,1939,1997,1845,1684,1775,1821,1783,1815,1840,1846,1663,1573,1289,1340,1662,1575,1645,1080,1241,1051,1066,357,350,1341,1268,1295,1312,1354,1370,1316,1335,1279,1421,1352,1257,1414,1276,1441,1358,1306,1356,1317,1456,1612,1056,1508,1375,1899,1915,1967,2045,2029,2010,1990,1960,1988,1611,1572,1522,1503,1726,1561,1756,1733,1575,1753,1786,1585,1782,1527,1595,1638,1642,1652,1809,1909,1897,1796,1607,1739,1853,1934,1957,1851,1641,1777,1849,1924,1817,1742,1688,1902,1908,1908,1872,1598,1805,1914,1962,1936,1904,1679,1727,1906,1877,1872,1745,1231,999,969,1010,1468,1509,1611,1582,1642,1630,1684,1638,1603,1629,1828,1689,1748,1731,1613,1702,1639,1651,1667,1716,1934,1723,1717,1745,1699,1782,1712,1602,1745,1651,1766,1633,1613,1700,1631,1523,1973,1899,1854,1917,1951,1926,1879,1683,1761,1634,1664,1808,1927,1869,1901,1900,1898,1989,1926,1946,1931,1916,1810,1785,1783,1813,1913,1950,1877,1878,1937,1894,1861,1864,1601,1363,1287,1452,1658,1608,1625,1646,1919,1869,1843,1848,1849,1832,1844,1869,1877,1882,1902,1894,715,529,638,1087,1034,1001,1341,1267,1286,1041,1788,1682,1641,1542,1782,1559,1664,1699,1533,1527,1623,1462,1293,1306,1583,1682,1652,1721,1713,1724,1680,1597,1691,1358,1398,1514,1441,1532,1449,1514,1452,1494,1388,1367,1329,1863,1801,1841,1883,1867,1841,1862,1805,1895,1817,1817,1841,1919,1900,1862,1855,1857,1984,2002,1963,1913,1899,1875,1964,1918,1928,1911,1930,1900,1857,1856,1883,1895,1877,1749,1472,1476,1651,1641,1597,1608,1622,1600,1634,1632,1599,1765,1653,1643,1663,1645,1641,1661,1654,1757,1637,1662,1620,1660,1622,1631,1637,1633,1924,1862,1871,1835,1865,1878,1851,1870,1872,1906,1867,1821,1836,1837,1854,1847,1837,1960,1879,1835,1856,1862,1848,1842,1864,1878,1530,1388,1426,1428,1287,1459,1420,1580,1356,1308,1537,1470,1429,1429,1894,1889,1830,1809,1793,1842,1851,1906,1956,1623,1748,1729,1682,1703,1634,1843,1564,1718,1603,1712,1759,1722,1727,1774,1704,1635,1643,1905,1834,1836,1845,1607,1840,1850,1867,1823,1890,1626,1750,1763,1755,1794,1720,1676,1785,1679,1702,1817,1590,1756,1739,1785,1728,1780,1678,1697,1697,1634,1696,1720,1310,1193,1284,1206,1256,1283,1168,1444,1664,1552,1481,1652,1674,1547,1527,1638,1535,1568,1547,1576,1876,1871,1931,1860,1887,1719,1562,1399,1670,1756,1802,1789,1722,1747,1478,1509,1749,1694,1785,1443,1358,1552,1833,1905,1463,1455,1595,1417,1547,1546,1441,1676,1488,1470,1504,1528,1493,1582,1472,1445,1560,1483,1600,1497,1492,1498,1663,1542,1460,1535,1347,1483,1443,1541,1891,1861,1843,1782,1822,1818,1758,1722,1690,1593,1810,1686,1779,1789,1609,1779,1778,1645,1893,1929,1851,1875,1893,1750,1925,1712,1750,1751,1638,1732,1753,1770,1595,1766,1746,1766,1672,1798,1662,1852,1678,1656,1673,1657,1709,1717,1834,1642,1692,1660,1793,1686,1735,1664,1707,1735,1753,1498,1451,1657,1763,1669,1748,1779,1567,1444,1603,1504,1491,1404,1512,1513,1551,1657,1791,1689,1773,1769,1661,1691,1742,1611,1618,1703,1612,1707,1606,1608,1642,1719,1649,1632,1593,1701,1621,1655,1655,1630,1727,1614,1658,1617,1680,1635,1630,1612,1711,1639,1625,1634,1691,1671,1626,1626,1602,1750,1621,1709,1724,1778,1630,1625,1630,1746,1586,1647,1704,1696,1798,1601,1632,1647,1710,1681,1877,1760,1671,1639,1795,1759,1648,1717,1825,1799,1701,1930,1854,1867,1953,2000,1949,1944,1969,1999,1706,1853,1954,1992,1990,2011,1993,1807,1954,1815,1807,1926,2008,2029,1999,2014,1973,1916,1935,1908,1896,1912,1905,1950,1947,1945,1814,1879,1899,1891,1844,1727,1603,1646,1960,1766,1800,1581,1610,1626,1628,1536,1804,1396,1410,1329,1390,1388,1512,1532,1303,1443,1541,1482,1396,1450,1476,1495,1473,1467,1684,1726,1818,1644,1726,1729,1762,1721,1677,1717,1693,1760,1655,1664,1678,1675,1676,1679,1687,1658,1648,1747,1696,1632,1627,1734,1620,1658,1654,1786,1910,1894,1914,1931,1891,1926,1884,1905,1912,1773,1774,1802,1957,2006,1976,2042,2052,2043,2037,2026,2016,2039,2034,2047,2045,2057,2048,2033,2048,2049,1838,1847,1871,1914,1921,1882,1870,1881,1705,1460,1502,1410,1678,1627,1613,1511,1587,1650,1538,1642,1509,1425,1579,1622,1549,1559,1667,1429,1405,1565,1445,1769,1873,1792,1749,1653,1629,1894,1825,1867,1828,1795,1791,1687,1815,1843,1774,1674,2000,1986,2004,1888,1897,1935,1606,1670,1758,1727,1729,1751,1808,1731,1645,1780,1683,1698,1692,1542,1544,1511,1512,1502,1531,1518,1522,1495,1559,1510,1504,1546,1497,1544,1527,1520,1483,1459,1333,1307,1273,1268,1948,1939,1926,1874,1960,1952,1943,1933,1802,1338,1329,1317,1321,1325,1321,1321,1467,1594,1458,1470,1614,1651,1489,1582,1549,1732,1678,1657,1698,1602,1693,1640,1651,1728,1572,1244,1266,1310,1273,1316,1250,1197,1471,1233,1049,1058,1101,1235,1170,1026,1360,1489,1265,1295,1229,1250,1217,1303,1385,1379,1491,1284,1291,1346,1344,1316,1297,1335,1787,1568,1647,1744,1703,1592,1517,1190,1950,1986,1417,1097,1245,1184,1356,1058,1669,1958,1934,1555,1770,1811,1811,1732,1590,1946,1026,469,592,501,547,474,529,513,926,440,1179,1313,1429,1321,1200,1119,402,919,633,1411,1452,1508,1511,1410,969,770,1331,1157,1427,1154,1470,1346,1204,1180,1839,1781,1718,1733,1832,142,131,1223,531,644,671,569,457,702,630,523,1294,887,1001,1433,1415,1383,1417,1423,1589,1572,1697,1588,1620,1565,1609,1835,1531,1063,1153,1211,1219,1335,1256,1322,1289,1445,1531,1606,1630,1684,1550,1358,1423,1329,763,25,30,25,585,595,1309,585,1532,1615,1674,1585,1631,1149,1670,1498,1586,1522,1731,1909,1940,1901,1959,1901,1637,859,1198,1512,1262,961,968,1262,1336,1435,1430,1490,1538,1545,1651,1723,1725,1549,1591,1523,1564,1609,1485,1557,1751,2055,2052,2041,2000,1885,1958,2024,1926,1744,1929,1879,1961,2000,2035,1992,2027,1997,2019,1992,2030,2049,2011,1725,1882,2000,2008,1996,1909,1678,1548,1246,1212,1179,1510,2012,1881,1719,1767,1893,1873,1733,1786,1774,1867,1936,1975,1960,1976,1967,1962,2009,1845,1533,1555,1549,1515,1502,1587,1508,1510,1379,1394,1333,1331,1288,1326,1345,1594,2028,1997,2028,1974,2011,1943,1945,1951,2015,1814,1727,1649,1665,1706,1661,1142,173,498,1262,1302,1267,942,1058,934,1081,1231,1661,1702,1565,1728,1741,1655,1525,1604,1563,1617,1556,1609,1491,1475,1192,1362,1070,1174,1244,1324,1241,1359,1407,1550,1590,1590,1455,1464,1419,1204,985,1145,1596,1493,667,1238,1278,1411,1532,1457,1513,1441,1133,1345,1429,1524,1708,1732,1861,1823,1782,1779,1560,1649,1600,1637,1586,1616,1493,1566,1509,1439,1231,1412,1527,1574,1356,1389,1376,1405,1366,1191,490,652,443,857,1441,1533,1544,1518,1414,1490,1548,1467,1389,1322,1139,1187,1321,1411,1516,1313,1076,793,264,1032,1750,1899,1793,1754,1556,1325,1045,1196,1543,1595,1573,1562,1556,1578,1525,1754,1737,1826,1706,1829,1757,1890,1743,1702,1397,1408,1375,1425,1420,1512,1675,1698,1547,1544,1517,1461,1547,1527,1440,1708,1905,1762,1560,1172,729,884,853,1210,1530,1610,1668,1722,1465,1621,1300,1303,1234,953,546,854,800,860,609,1067,1391,1120,530,579,490,1125,1773,1593,1087,1120,1002,1212,1389,1328,1094,1119,940,1122,1443,1473,1443,1439,1429,1585,1685,1774,1652,1819,1873,1795,1562,1344,1006,1215,1149,1157,981,1052,862,1130,986,1216,1244,1087,461,597,627,681,498,568,612,651,518,606,612,686,535,629,608,657,431,535,561,1192,1868,1617,1034,1142,1026,1137,1026,1100,1119,1398,1785,1621,1697,1725,1654,1675,1709,1518,1133,1391,1667,1660,1707,1764,1869,1283,246,382,267,359,185,305,225,355,52,272,25,193,146,284,280,303,191,781,1478,1518,1668,1416,1063,1101,1081,1187,1163,1361,1492,1535,1451,1705,1860,1868,1692,1700,1362,1633,1640,1603,1377,1441,1251,1275,1688,1545,1519,1252,1604,1449,1488,1481,1342,1277,1444,1454,1418,1526,1511,1512,1250,1150,1300,1347,1334,1227,1324,1061,1126,1026,1534,1505,1496,1488,1537,1533,1526,1511,965,759,569,565,760,708,754,674,627,544,558,691,704,656,700,712,720,686,769,813,754,647,623,483,1106,2028,1920,1758,1755,1690,1674,1697,1710,1713,1696,1695,1691,1915,1924,1804,1768,1688,1712,1762,1706,1746,955,1008,1376,1798,1432,1752,1837,1541,1448,1475,1476,1477,1469,1495,1471,1496,1192,600,524,588,661,598,449,565,620,573,592,574,616,571,507,300,401,586,378,249,479,616,337,351,409,414,429,1431,1925,1831,1668,1660,1682,1672,1673,1670,1660,1696,1683,1689,1684,1931,1824,1650,1688,1678,1766,1767,1673,1689,973,716,705,1441,1889,1644,1746,1548,1781,1801,1549,1525,1479,1516,1484,1487,1503,1503,1503,1489,1512,1496,1488,1488,1500,1486,1508,1499,1495,1465,1394,613,301,568,605,651,501,591,655,568,275,637,490,446,439,506,257,362,623,619,632,641,733,551,675,643,498,704,404,553,264,579,450,456,324,470,490,449,481,519,428,433,510,546,558,603,504,356,568,365,560,419,379,381,561,371,551,531,221,328,599,1992,1997,2046,1992,2008,2032,1707,1672,1697,1685,1700,1714,1716,1678,1696,1671,1686,1690,1678,1687,1688,1702,1689,1708,1734,1717,1698,1682,1697,1711,1687,1689,1672,1976,2048,2048,1804,1573,1702,1752,1673,1732,1749,1657,1691,1731,1708,1646,1676,1651,1736,1743,1689,1669,1673,1693,1584,941,941,904,822,693,1002,1097,1087,1026,1259,1147,1154,887,1136,887,1086,802,915,1231,931,1990,1962,1877,1752,1568,1451,1568,1483,1523,1536,1483,1460,1519,1499,1491,1378,504,501,375,447,435,418,474,350,661,667,514,559,594,482,535,262,216,136,401,509,664,480,504,532,416,440,503,358,224,283,1917,2048,1897,1709,1711,1669,1699,1704,1709,1683,1700,1683,1780,1713,1669,1730,2048,1839,1749,1636,1692,1765,1735,1665,1796,1802,1631,1523,998,1195,1358,1565,1917,1659,1472,1553,1480,1501,1499,1476,1492,1494,1482,1450,1447,249,253,226,229,522,437,217,255,363,450,297,402,334,312,110,230,115,397,282,466,491,269,296,408,509,543,289,342,1621,1998,2010,1671,1687,1726,1663,1701,1689,1654,1662,1691,1708,1706,1720,1901,2048,1786,1858,1723,1807,1723,1687,1771,1806,1822,1877,1301,572,530,887,1078,790,1414,1714,1709,1738,1466,1478,1508,1506,1480,1465,706,421,362,352,317,467,314,421,449,471,325,467,374,270,248,430,454,1371,1967,1732,1685,1704,1672,1678,1693,1683,1712,2019,1780,1747,1647,1711,1786,1824,1795,870,1286,1380,1588,1602,1551,1485,1498,1329,577,507,453,475,539,489,559,527,337,425,345,1107,1903,1658,1652,1649,1683,1671,1978,1702,1616,1717,1350,1442,1627,1586,1562,1448,1520,1489,1494,1501,1488,1494,1485,1514,1484,1518,1489,1486,1501,1489,1311,524,464,467,308,252,476,482,388,263,550,479,482,440,397,410,396,459,372,487,303,164,186,436,274,293,206,194,328,316,302,371,251,378,212,369,400,386,420,333,419,343,492,309,426,321,285,358,385,266,480,521,429,801,1984,1941,1956,1981,1894,1658,1668,1674,1689,1692,1682,1668,1674,1716,1726,1679,1675,1668,1681,1667,1677,1671,1683,1666,1680,1670,1682,1672,1945,2048,1998,1609,1613,1643,1652,1628,1721,1798,1688,1732,1682,1680,1593,1636,1671,1708,1685,1639,898,620,667,609,617,641,999,1368,1529,1152,1143,1002,1467,1485,1517,1242,1491,1370,1481,1888,1808,1833,1775,1596,1540,1473,1469,1482,1497,1472,1515,1505,1483,1496,1503,1134,547,494,658,665,527,514,452,463,381,176,486,267,470,470,622,439,299,455,594,569,684,617,592,336,528,249,402,553,688,726,655,397,368,376,538,306,163,1461,1981,2027,1971,1697,1721,1660,1709,1693,1695,1686,1710,1695,1698,1715,1752,1690,1720,1700,1722,2047,2048,1777,1741,1746,1760,1798,1775,1767,1761,1727,1808,1764,1782,1769,1484,957,871,1274,1374,1599,1504,1573,1947,1759,1588,1569,1702,1521,1488,1483,1504,1496,1492,1496,1491,1476,1489,1499,1507,1486,1489,1464,1486,1467,1478,1484,1505,1498,1253,589,663,683,538,621,564,524,655,619,540,520,350,431,549,571,454,417,511,575,454,659,437,586,609,371,376,588,465,526,600,334,554,381,411,481,503,358,303,361,505,477,540,523,352,273,489,406,299,484,337,224,316,350,418,514,490,423,232,596,452,284,322,368,484,419,297,315,597,506,400,426,446,336,633,590,709,2055,2052,2049,2048,2055,2053,2010,1738,1721,1753,1746,1782,1767,1748,1699,1747,1732,1730,1737,1686,1736,1753,1744,1769,1743,1761,1754,1744,1776,1707,1716,1729,1769,1759,1778,1744,1731,1765,1765,1728,1751,1841,2048,2048,2048,2048,1921,1688,1802,1824,1864,1894,1766,1816,1799,1818,1767,1694,1794,1843,1797,1824,1825,1808,1810,1854,1852,1800,1766,1834,1857,1867,1836,1841,1834,1843,1882,1857,1792,1358,871,797,864,690,929,1371,1309,1408,1113,1211,1507,1219,912,813,904,1225,1319,1557,1302,1987,1947,1850,1750,1629,1462,1640,1569,1602,1513,1484,1500,1508,1519,1518,1501,1437,1477,1494,1498,1460,1497,1482,1524,1501,1487,1506,1504,1484,1494,824,513,675,580,512,459,341,610,581,620,643,561,609,690,486,520,426,577,581,462,397,443,488,569,594,374,500,451,387,606,401,216,244,411,438,406,338,433,218,468,392,490,293,300,458,378,528,292,358,147,465,414,312,154,208,197,273,302,550,493,480,581,415,476,583,2038,1983,1946,1983,1982,1916,1636,1680,1687,1682,1663,1713,1708,1693,1684,1673,1649,1659,1691,1719,1691,1677,1707,1707,1691,1676,1679,1695,1661,1687,1658,1675,1662,1727,2048,2048,1983,1612,1701,1715,1735,1779,1757,1672,1631,1689,1785,1725,1796,1715,1742,1721,1722,1694,1714,1709,1756,1373,867,693,613,523,744,730,990,1071,892,711,734,645,751,717,654,764,701,727,387,351,768,639,929,706,539,519,787,1534,672,1606,1673,1791,1787,1773,1656,1665,1496,1630,1624,1530,1483,1482,1484,1481,1471,1480,1487,1477,1453,1484,1493,1458,1483,1467,1472,1466,1482,1479,1456,1473,1490,1489,1483,1475,1487,1499,1471,1472,1453,1479,1442,1474,1463,1464,1471,1482,1447,1459,1474,1462,1488,1488,1487,1464,1458,1470,1486,1438,1451,1425,1411,1432,1473,1495,1474,1425,1457,1482,1458,1481,1458,1489,1488,1457,1487,1429,1469,1471,1475,1492,1476,1468,1440,1324,573,479,446,632,456,467,291,501,499,249,309,605,574,484,623,421,493,638,596,514,670,435,619,545,386,532,603,598,555,429,453,448,509,534,502,448,500,557,519,536,612,540,690,508,315,262,529,492,470,594,583,648,519,549,579,444,590,370,414,535,448,482,420,539,507,356,437,470,414,582,361,545,397,592,618,589,644,612,603,530,574,529,504,618,532,282,437,314,520,438,492,487,341,300,515,388,315,461,510,503,311,421,530,596,497,497,590,370,239,474,350,211,206,396,578,524,528,343,376,487,315,332,292,355,334,575,415,472,508,452,573,621,498,544,522,567,502,404,454,469,582,571,544,509,457,511,528,306,253,483,474,432,571,524,495,544,463,328,358,552,515,519,430,466,459,417,475,637,577,466,470,497,466,458,611,611,525,398,337,526,483,385,506,613,346,323,407,315,306,284,355,401,348,313,221,561,528,626,519,517,313,346,614,521,514,478,521,508,491,489,506,443,514,317,357,390,355,642,557,525,424,426,542,489,386,604,576,448,488,462,483,487,496,418,488,491,137,196,518,516,530,587,453,607,540,487,520,373,792,1912,1941,2051,1915,1928,1950,2003,1945,1988,1967,1948,1993,1931,1955,1999,1967,1927,2015,2053,1860,1668,1627,1636,1672,1691,1715,1716,1724,1692,1667,1695,1670,1699,1679,1692,1670,1688,1682,1675,1676,1672,1691,1686,1694,1689,1697,1664,1684,1674,1676,1685,1688,1675,1677,1680,1685,1688,1670,1696,1690,1667,1657,1647,1673,1704,1650,1690,1669,1678,1635,1664,1681,1670,1651,1672,1711,1691,1682,1687,1690,1668,1672,1684,1668,1655,1721,1716,1683,1670,1663,1662,1671,1697,1644,1659,1675,1650,1640,1661,1673,1678,1654,1671,1678,1658,1695,1722,1666,1708,1694,1687,1727,1670,1657,1703,1718,1690,1689,1674,1693,1674,1682,1681,1701,1692,1668,1907,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1849,1617,1586,1702,1758,1785,1750,1710,1748,1757,1659,1659,1673,1690,1712,1655,1742,1749,1675,1719,1709,1752,1731,1719,1680,1584,1726,1710,1706,1644,1715,1611,1704,1660,1711,1681,1620,1728,1720,1738,1766,1773,1729,1651,1712,1697,1711,1760,1733,1686,1614,1723,1787,1669,1530,1460,1578,1623,1709,1749,1657,1781,1817,1697,1735,1702,1658,1804,1758,1670,1652,1749,1739,1768,1790,1701,1714,992,873,724,904,891,682,807,715,609,692,574,593,587,687,210,334,689,682,764,655,886,662,633,758,786,802,751,749,779,832,693,884,854,758,788,798,906,669,789,696,749,775,692,782,766,666,851,658,827,875,610,563,308,462,635,537,872,598,377,718,548,840,872,928,746,659,419,506,620,621,810,597,546,623,540,639,488,634,767,784,626,762,838,529,533,897,480,538,483,910,798,868,640,704,753,588,786,642,741,720,575,636,720,607,792,548,505,517,441,842,790,868,928,589,743,810,752,281,888,830,687,641,679,800,679,654,642,770,698,596,725,473,604,747,778,383,369,339,283,320,289,411,399,293,287,302,293,320,418,498,495,733,490,338,545,736,529,716,680,530,692,790,564,645,734,937,523,416,399,463,440,321,453,329,226,514,328,332,310,242,201,588,559,478,655,714,695,356,217,237,251,240,153,186,220,608,1327,1907,1308,1916,1892,1945,1917,1906,1927,1940,1950,1914,1980,1913,1905,1862,1812,1903,1828,1877,1515,1520,1472,1485,1477,1493,1486,1479,1500,1493,1336,470,482,465,534,444,459,525,446,467,279,520,451,517,434,467,591,238,394,428,295,456,330,286,378,385,319,487,243,275,394,419,783,1981,1953,1965,1696,1680,1713,1708,1692,1716,1672,1715,1706,1695,1684,1667,1676,1681,1811,2048,1855,1789,1709,1813,1748,1698,1778,1812,1772,1730,1676,1726,1197,763,801,1112,1578,1318,1347,1172,1601,1655,1754,1526,1446,1530,1499,1467,1444,1504,1495,1508,1496,1436,372,310,467,438,355,704,533,584,521,588,533,483,427,360,240,451,434,369,294,398,322,474,547,340,305,524,254,198,1303,2003,2048,1694,1686,1703,1713,1734,1706,1713,1679,1712,1702,1688,1703,1684,1896,2048,1653,1628,1800,1835,1846,1743,1735,1783,1846,1756,1784,1777,910,755,879,1111,1009,1371,1317,1576,1684,1719,1588,1587,1586,1498,1487,1486,1487,1488,1502,1487,1492,1470,1466,1466,1502,1465,1453,1481,1498,1484,1481,1484,1467,1449,1471,1469,1499,1474,1472,1490,1483,1487,1478,1486,1486,1503,1485,1456,1495,733,636,556,656,716,658,647,530,588,535,561,674,583,611,597,651,631,638,532,566,659,662,582,566,529,666,600,604,611,576,495,494,506,670,605,526,550,534,534,570,534,553,553,637,540,401,370,212,370,439,331,535,469,405,456,535,695,526,321,182,209,367,120,227,371,455,489,514,456,523,656,513,594,629,616,605,557,480,546,409,576,483,618,595,555,282,517,495,519,481,310,262,358,595,580,603,565,464,421,605,610,459,582,587,611,550,578,442,593,1632,2013,1983,1991,2047,1901,1974,1943,1987,1982,1711,1720,1705,1711,1711,1707,1685,1701,1719,1663,1719,1680,1694,1697,1712,1694,1693,1681,1701,1706,1634,1665,1660,1654,1677,1676,1669,1687,1704,1677,1678,1675,1697,1687,1698,1692,1651,1669,1672,1694,1673,1663,1653,1698,1663,1662,2025,2048,2048,2048,1988,1747,1777,1699,1659,1664,1705,1729,1784,1756,1745,1746,1654,1725,1719,1598,1741,1629,1712,1707,1744,1731,1705,1748,1754,1707,1601,1601,1695,1740,1710,1711,1697,1034,910,903,851,747,838,857,752,894,755,1031,1002,963,799,972,878,1350,1012,1162,1179,1044,1161,1291,1094,1156,1217,1434,1400,1386,946,1069,1279,747,800,731,515,773,508,417,756,969,933,1119,1128,1120,918,560,510,840,1294,974,957,1100,1478,1848,1872,1852,1870,1910,1933,1899,1945,1838,1563,1513,1487,1482,1492,1484,1495,1467,1467,1489,1495,1491,913,410,194,457,571,344,402,525,480,364,155,165,248,311,281,398,471,344,517,399,296,358,393,459,431,271,376,328,341,446,237,459,355,341,991,1984,1972,2017,1655,1703,1646,1711,1682,1672,1701,1701,1709,1684,1696,1708,1701,1692,1718,2048,1930,1682,1696,1783,1745,1734,1786,1800,1773,1729,1750,1706,1629,628,829,1388,1489,692,776,1085,1649,1829,1799,1536,1605,1490,1491,1500,1494,1506,1496,603,495,580,643,490,393,572,459,356,417,428,451,177,339,374,503,391,280,426,390,368,313,792,1927,1957,1701,1707,1713,1687,1711,1663,1667,1684,1701,1711,2055,1720,1788,1792,1781,1726,1725,1758,1855,1477,767,772,1643,1738,1501,1386,1579,1673,1470,1470,1361,1485,1493,1477,1506,1458,1477,1473,1476,1511,1513,1475,1492,1488,1226,567,409,564,598,440,570,419,499,525,503,468,675,581,548,295,402,356,329,462,448,559,385,510,318,229,212,602,621,645,570,611,530,506,575,340,486,538,433,655,559,398,462,513,269,644,1995,1970,2007,2024,1690,1732,1711,1701,1690,1681,1682,1657,1711,1721,1667,1676,1668,1728,1715,1712,1727,1734,1723,1705,2001,2048,1901,1720,1683,1740,1740,1695,1689,1688,1619,1676,1736,1779,1731,1787,1757,1761,1185,909,740,997,1664,1578,1333,1534,1429,1627,1414,1811,1834,1752,1616,1416,1446,1489,1481,1488,1462,1494,1482,1482,1472,1475,1483,1495,1476,1477,1388,521,518,599,520,498,384,545,543,561,360,429,503,358,388,239,439,482,526,570,416,530,582,391,433,196,248,207,476,446,331,217,62,211,360,259,229,346,529,383,444,412,245,300,336,253,1818,1955,1916,2031,1733,1697,1690,1684,1687,1680,1691,1716,1673,1646,1665,1674,1702,1679,1676,1674,1673,1675,1682,1677,1942,2048,1966,1710,1707,1674,1770,1716,1768,1712,1657,1691,1712,1606,1772,1648,1662,1815,1295,694,725,521,963,881,662,859,858,800,765,505,1251,1292,1778,1709,1612,1641,1666,1481,1489,1498,1496,1506,1495,1478,1447,1489,1492,1507,1483,1512,1482,1520,1482,1494,1424,1473,1507,1532,1523,607,575,593,322,389,496,539,588,550,399,430,470,556,448,128,585,569,536,450,414,414,316,188,170,516,573,527,525,570,487,476,443,351,378,523,517,528,468,306,318,506,344,351,180,111,191,563,483,471,507,387,332,474,439,377,361,308,161,346,398,434,365,439,498,387,343,452,446,452,391,1404,2009,2032,1987,1999,2053,1867,1715,1684,1642,1662,1695,1703,1643,1691,1719,1669,1710,1704,1687,1674,1692,1675,1685,1700,1703,1706,1686,1666,1662,1700,1717,1697,1676,1689,1704,1712,1715,2028,2048,2048,2037,1675,1710,1608,1663,1767,1520,1812,1765,1790,1745,1728,1705,1738,1706,1699,1752,1710,1693,1717,1761,1855,1617,1791,1789,1834,1014,622,542,637,535,725,708,732,636,400,221,523,709,685,381,505,451,247,546,440,329,247,385,1090,1213,530,1610,1716,1772,1776,1798,1744,1528,1423,1486,1493,1515,1506,1092,508,233,237,279,416,292,151,259,245,206,512,415,346,378,478,523,1658,1964,1666,1675,1703,1694,1677,1663,1679,1901,1822,1769,1745,1772,1693,1631,936,878,1167,1281,1672,1652,1612,1519,1511,1504,1495,1471,1495,1474,1498,1489,1474,1476,1491,1500,1487,1483,1488,1473,1509,693,602,602,530,547,544,515,524,548,534,538,571,406,611,607,456,623,372,465,606,567,554,510,580,623,293,480,593,506,389,295,516,450,557,545,392,397,438,546,459,441,632,372,604,571,600,630,410,358,653,490,437,525,584,384,621,552,620,595,609,1484,2050,2020,2038,2037,1829,1714,1711,1716,1698,1684,1708,1706,1708,1702,1673,1676,1700,1676,1714,1677,1735,1674,1712,1666,1666,1677,1664,1706,1711,1717,1826,2048,2048,1840,1738,1782,1743,1753,1643,1708,1679,1760,1828,1782,1839,1828,1677,1633,1762,1808,1796,1390,733,770,858,701,930,1715,1577,1256,1319,1726,1661,1522,1388,1102,1711,1841,1848,1736,1850,1586,1510,1541,1500,1487,1484,1482,1484,1488,1478,1471,1483,1494,1458,1491,1478,1488,1507,1517,1484,1498,1492,1503,1354,519,69,267,197,486,548,516,450,451,505,631,639,232,428,455,362,412,303,568,557,542,319,383,168,433,308,194,570,338,619,545,447,476,531,532,271,300,561,375,499,606,591,541,491,235,242,429,403,452,525,442,555,609,531,627,585,507,504,436,325,463,471,159,118,471,382,505,295,359,1640,2039,1995,2029,2044,1979,1662,1704,1692,1684,1649,1691,1675,1649,1651,1694,1685,1666,1694,1703,1712,1674,1710,1672,1677,1701,1694,1699,1699,1714,1714,1668,1691,1679,1658,1770,2048,2048,2048,1732,1739,1753,1731,1764,1695,1639,1741,1720,1682,1676,1822,1768,1791,1704,1753,1731,1649,1765,1722,1635,1560,1746,945,833,691,778,797,730,733,707,583,713,786,1031,994,1056,810,736,876,997,1174,936,932,1008,1005,876,823,942,828,551,636,671,72,661,1215,1468,1756,1857,1817,1844,1774,1557,1526,1551,1497,1489,1491,1499,1499,1506,1483,1497,1520,911,393,351,229,323,566,535,325,494,409,485,499,394,284,511,373,281,528,423,313,321,517,388,372,387,351,197,386,203,286,362,513,360,241,275,219,1745,1988,1959,1815,1699,1682,1686,1690,1635,1696,1670,1682,1657,1666,1691,1692,1711,1689,1685,2048,2043,1717,1741,1732,1766,1641,1759,1708,1633,1661,1776,1721,1762,1653,1081,602,673,818,1198,1165,914,1187,1713,1887,1887,1622,1515,1513,1494,1499,1491,1489,1495,1513,1494,1486,1496,1502,1488,1505,1532,1494,1484,1484,1492,1496,1512,1478,1496,1492,1488,1474,1525,1506,1512,1479,1521,1489,1480,1462,541,533,544,425,548,552,529,650,597,595,590,477,405,429,570,456,463,547,590,610,616,544,496,601,492,436,522,585,597,528,317,484,435,564,491,449,504,504,496,558,433,517,525,438,278,298,388,438,352,273,309,526,365,422,472,451,610,557,455,321,517,617,640,592,566,564,376,539,409,590,498,425,431,524,367,484,508,506,427,358,422,545,460,352,466,445,345,378,234,568,523,358,427,417,340,336,609,320,454,447,255,215,316,407,369,299,386,354,212,412,287,1438,1999,2044,1987,1977,2006,2027,1994,2048,2057,1720,1688,1688,1684,1691,1687,1673,1697,1728,1706,1705,1732,1722,1738,1717,1731,1721,1757,1735,1739,1707,1689,1696,1691,1692,1691,1671,1675,1703,1681,1714,1709,1653,1659,1692,1689,1697,1718,1712,1737,1743,1745,1725,1658,1689,1713,1699,1665,1655,1680,1921,2048,2048,2048,2048,1989,1690,1724,1677,1696,1625,1673,1757,1729,1786,1727,1772,1777,1747,1691,1710,1712,1712,1704,1732,1639,1651,1636,1619,1769,1748,1643,1736,1599,1674,1634,1734,1773,1758,1703,1807,1621,1573,1594,998,793,730,791,866,523,764,742,622,873,900,953,993,965,453,583,631,717,928,778,640,691,663,673,790,625,603,575,414,222,867,860,828,951,1029,1122,819,1027,942,803,680,550,1324,1400,1732,1862,1817,1872,1848,1802,1831,1894,1648,1675,1572,1490,1510,1483,1486,1505,1476,1486,1482,1483,1218,445,509,510,405,541,445,502,349,430,348,281,317,124,57,474,549,624,545,596,535,598,321,172,51,322,415,252,365,391,157,62,363,2014,2046,2049,1689,1673,1695,1698,1702,1729,1721,1718,1680,1662,1711,1715,1705,1736,2034,2048,1801,1842,1807,1801,1772,1731,1800,1765,1724,1812,1821,1864,864,783,713,891,950,552,1474,641,1378,1574,1654,1594,1511,1585,1534,1480,1504,1497,1511,1488,1490,1486,1491,1481,1495,1484,1495,1486,788,402,257,277,352,447,378,389,406,220,245,615,475,555,586,442,492,436,280,282,394,420,275,456,510,357,277,382,460,365,394,249,448,414,466,453,485,278,797,2032,2018,2021,1693,1660,1653,1702,1709,1684,1690,1698,1708,1700,1697,1682,1661,1653,1667,1647,1687,2048,2025,1604,1651,1811,1891,1887,1810,1816,1826,1836,1819,1695,1684,1609,932,670,609,748,573,301,330,447,357,376,423,484,500,1594,1161,455,726,1498,1534,1490,1494,1718,1660,1594,1656,1499,1518,1509,1531,1515,1531,1521,1530,1495,1518,1521,1509,1509,1513,1502,1514,1535,1500,1517,1500,1508,1519,1515,1508,1504,1539,1493,1508,1544,1537,1537,1542,1515,1522,1521,1512,1513,1509,1494,1500,1493,1493,1474,1482,1500,1491,1502,1476,490,537,479,466,516,513,562,440,520,683,685,644,725,686,700,712,682,638,655,751,732,732,605,538,592,345,609,536,601,683,718,604,656,640,687,586,664,604,613,627,477,606,655,559,586,586,576,536,502,575,587,606,610,520,544,651,593,527,570,543,630,510,425,517,558,521,570,628,543,613,618,552,637,510,599,548,662,588,534,509,560,530,464,560,491,606,575,453,408,573,606,539,713,548,735,779,697,658,675,655,688,714,591,551,633,669,625,633,541,538,524,617,591,638,604,622,556,605,578,603,566,556,549,551,282,580,563,544,516,554,509,506,535,496,518,603,610,518,375,366,621,498,509,541,382,433,491,563,581,515,500,349,1369,2057,2054,2047,2048,2038,2055,2039,2048,2056,2056,2019,2055,1964,1713,1729,1683,1700,1702,1733,1702,1678,1718,1696,1713,1698,1700,1703,1704,1700,1733,1734,1696,1724,1727,1732,1742,1738,1760,1765,1758,1752,1733,1713,1690,1716,1707,1687,1682,1670,1707,1735,1686,1686,1702,1713,1698,1713,1717,1752,1752,1762,1737,1744,1707,1718,1718,1741,1722,1740,1734,1760,1733,1726,1745,1759,1753,1742,1724,1757,2048,2048,2048,2048,2057,2048,2048,1963,1696,1631,1738,1740,1695,1684,1722,1771,1707,1769,1795,1761,1844,1775,1830,1818,1794,1788,1807,1745,1789,1791,1619,1595,1704,1724,1676,1630,1640,1805,1660,1725,1703,1691,1726,1851,1835,1819,1819,1803,1814,1681,1713,1589,1663,1785,1837,1819,1788,1845,1859,1814,1770,1032,966,901,937,961,925,752,779,911,881,1167,1309,1391,1234,1164,1224,1252,1275,1318,1290,1187,1095,1218,756,712,760,909,951,930,1049,1324,957,492,642,1626,1346,1793,1964,1690,1819,1874,1914,1799,1809,1826,1833,1886,1857,1528,1475,1552,1491,1501,1483,1499,1511,1493,1467,1413,156,120,282,113,104,265,267,430,260,316,325,281,165,376,246,154,137,193,483,399,271,206,538,420,372,423,277,161,1271,2021,2044,1732,1707,1691,1690,1725,1696,1674,1707,1715,1737,1705,1657,1687,1868,2048,1840,1792,1651,1639,1809,1716,1776,1825,1789,1873,1731,1687,701,870,1782,1422,1618,1590,1645,1515,1448,1178,1517,1484,448,423,495,538,557,491,434,1767,1730,1689,1697,1844,1800,1622,638,805,1454,1559,1492,1504,1483,1038,194,452,423,541,420,113,207,562,369,289,267,516,730,1945,1707,1667,1694,1681,1675,1658,1956,1613,1729,1768,1680,1213,877,1687,1787,1663,1461,1473,1492,1507,1492,979,485,435,373,407,463,235,277,511,495,463,336,517,463,438,565,1021,2022,1650,1668,1653,1689,1679,1678,1681,1952,1661,1709,1741,1766,1322,547,957,1245,931,1302,1620,1929,2054,2056,2046,2052,1837,1608,1578,1465,1090,793,800,755,821,920,1129,2018,2026,1945,1924,1850,489,1029,1107,1482,1125,1461,1386,1342,1146,768,636,1141,1101,1216,1072,1029,768,994,892,1087,1057,1040,1084,1103,1175,817,723,744,792,1027,708,900,768,801,1307,2048,1298,1087,1064,934,963,1014,1122,996,997,938,1210,1060,863,1069,989,960,997,763,796,729,840,1146,1414,1509,1394,1623,1991,2048,2057,1853,1460,2023,2056,2048,2048,1954,1834,2048,1634,1952,2048,2048,2048,2048,2048,2048,2048,2052,2035,2036,2024,2023,2045,2040,1948,1802,1680,1988,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1990,1935,1831,1768,1275,1849,1927,1893,1754,1942,2055,2053,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,1449,1112,2049,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2028,1554,2048,2048,2048,2052,1849,1548,1334,1164,992,676,513,2047,2048,2048,2048,2048,2055,2048,2048,2053,2056,1792,1432,852,2048,2057,2014,1925,1840,1685,1473,1142,866,530,249,459,1964,2048,2048,2048,2047,2048,2048,2048,2048,2055,2057,2051,2042,1963,1806,1598,1482,1392,2046,2048,2048,2048,2054,2048,2057,2057,2048,2056,2054,2044,2023,1880,1682,1433,1017,1265,1830,1896,2016,2048,2051,2048,1902,1664,1249,1057,2048,2045,2048,1802,2049,2057,2048,1734,424,98,186,33,960,2048,2048,2048,2057,2048,2056,2048,2043,1900,2057,2057,2048,2048,2010,2048,2048,2048,2048,2048,2048,2048,2048,2057,1897,1553,2001,1975,1629,1628,2056,1984,1550,1263,1608,1928,2038,2052,2057,2057,2053,2020,1848,1398,275,1246,2048,2048,2057,2054,2056,2048,2048,2056,2046,2045,1992,1834,1871,1950,1551,2039,2057,2056,2048,2048,2048,2048,2048,1972,1999,2048,2048,2048,2048,2056,2048,2048,1921,1733,1980,1975,1788,1159,2054,2056,2019,1844,1768,2048,2048,2048,2048,2051,2048,2048,2048,2048,1781,1299,1722,1931,1998,2018,2053,2053,2017,2027,2041,2043,2051,2057,2005,2015,1977,1974,1986,2050,2037,2048,2049,2036,2016,2043,2049,2037,2033,2052,2021,1910,1798,1594,1383,1282,1181,1109,1192,1021,1052,1115,998,1008,886,843,859,773,636,560,435,194,171,105,59,90,2056,2020,2057,2048,2032,1902,1736,1588,1179,960,2048,2048,2048,2048,1898,2048,2048,2048,1970,2048,2048,2048,2028,2053,2057,2057,2048,2054,2046,2048,2057,2042,2048,2052,2014,1957,1885,1838,1732,1758,1600,1946,2057,2057,2020,2052,2055,2051,1783,1997,2056,2048,2057,2055,2057,2048,2048,1935,2048,2048,1931,1487,1977,2048,2053,1485,1863,2048,2048,2048,2048,2048,2048,2056,2049,2007,1893,1730,1513,1385,1280,1171,1592,2048,2048,2057,2052,2037,1878,1660,1024,301,1050,1517,1733,1887,1962,1889,1935,2008,1944,1741,1536,1360,1055,579,438,1692,2048,2040,1399,815,1956,2048,2048,2048,2048,2048,2048,2048,2025,1975,2038,2039,1775,1470,950,1642,2048,1798,1422,1763,2048,2048,2051,2048,2048,2057,2056,2053,1934,1889,1694,2048,1423,1131,1422,2054,2048,2048,2048,2048,2048,2040,1844,1912,2048,2048,2048,2048,2048,2048,1879,1001,1492,1917,2028,2048,2048,2048,1288,1695,1811,2054,2048,2048,2057,2053,2006,1816,1273,975,741,502,330,247,156,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,1317,2048,2048,2048,2048,2048,2048,2048,2054,885,358,1393,1710,1985,2055,2048,2048,2048,2048,2048,2048,2048,2048,2041,1849,1606,1451,1330,1160,1055,1051,894,719,847,917,854,943,1706,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1816,1211,734,671,1660,2048,2048,2048,2054,1351,1892,1986,1754,1271,962,568,699,1259,2048,1838,1043,696,1809,1958,2008,2056,2045,2056,2048,2032,1925,1608,1773,1856,1909,1997,2053,2055,2048,2048,2048,2057,2048,2048,1977,1762,1415,684,783,1766,2056,2048,2048,2048,2048,2048,2048,2048,2056,1964,1705,1418,982,928,191,641,2048,2037,1957,1909,1793,1710,1819,2048,2012,1731,1554,1389,1710,1802,2049,2048,1929,2011,1069,2044,1689,1809,1960,2048,1650,1878,1351,1415,1128,1730,1961,2031,1998,1988,2021,1964,1909,2048,2049,2035,1613,913,1520,2048,2048,2048,2048,2048,942,1372,2048,2048,2048,2048,1317,407,1999,2048,2040,2048,2055,2048,2048,1925,2056,2016,1534,2048,2010,1848,2057,2020,1700,2032,2027,1343,1280,2025,1304,923,2056,2048,2048,2036,1034,109,234,1557,2056,2048,2048,2048,2056,2056,2028,1947,2048,2048,1892,2053,2025,2037,2048,2007,2048,2044,2055,1926,2026,1685,1914,1579,1758,1587,1286,1669,1712,1494,1316,1406,2055,1906,1815,2057,2048,2048,2048,1983,1346,1083,664,1664,1780,1410,1978,1821,2048,2048,2048,2048,2048,2048,2057,2056,2048,2032,1934,1771,1569,1373,1126,820,1559,2048,2048,2048,2048,2057,1236,948,2030,2048,2056,1962,1921,2029,2056,2048,2048,2048,2048,2056,2042,1929,1742,1340,596,1298,2048,2048,2048,2048,1093,185,1290,2047,2048,2048,2048,2048,2048,2048,2048,1848,1298,270,661,1487,1994,2048,2048,2048,2048,2048,2057,2048,2055,2048,2057,2010,1849,1796,1799,1712,1509,1390,1251,1254,1191,1020,721,508,547,508,441,489,384,415,455,456,476,574,445,186,427,1006,1162,1177,1235,1098,1016,952,872,657,450,261,96,243,1233,1640,1925,2052,2048,2057,2010,1984,1945,1859,1999,1793,2020,1995,1533,1693,2050,2057,2048,2006,2032,2045,2029,2043,2021,1943,2057,1981,1908,2020,2050,2048,2029,1673,1882,1987,1748,1914,2040,1631,1322,1725,2048,2048,1976,1912,1918,1852,1955,1876,2054,2048,2054,2019,1870,2048,1992,1546,1573,1563,1343,991,446,579,393,555,681,731,1188,1633,1374,1440,1305,1267,1483,1691,1786,1790,1796,1933,2021,2016,2046,2048,2050,2048,2057,2048,2048,2056,2040,1973,2006,1988,1973,1872,1717,1720,1738,1697,1651,1510,1451,1434,1434,1450,1306,1242,1212,1212,1167,1121,1010,990,943,966,1541,1407,1520,1560,1387,1475,1546,1547,1452,1611,1418,1577,1647,1701,1526,1694,1478,1494,1660,1634,1785,1733,1751,1781,1841,1871,1901,1888,1978,1943,1981,2048,2054,2056,2048,2057,2057,2053,2003,1890,1741,1525,1030,1474,1788,2027,2052,2048,2048,1147,153,1308,2057,2048,2012,1441,2052,1057,2054,2048,1482,1657,2056,2048,2048,2048,1530,2048,1952,1496,1405,2048,2048,2048,2056,2048,2056,1973,2052,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,2016,2048,2054,2048,2048,2048,1961,1948,2027,2056,2048,2041,2054,2055,2057,2048,2048,2048,2048,1640,1430,2055,2048,2057,2048,2048,2042,2055,1897,1926,1781,1565,1609,1433,1761,1804,1570,1447,1333,1101,860,269,1796,2048,2048,2048,2055,1983,1573,956,189,1142,2048,2057,1940,1682,1456,1784,1879,802,204,851,920,374,435,358,440,343,412,283,460,692,923,822,588,554,681,1087,834,595,1471,1419,1412,1224,1208,1335,640,610,807,392,266,548,414,348,998,907,382,323,367,649,797,499,549,594,390,425,651,808,821,811,513,1019,790,650,965,797,636,908,404,601,627,806,882,585,285,304,219,279,507,316,317,260,176,475,573,736,696,561,495,201,471,572,468,545,468,460,481,234,692,816,289,288,448,287,859,900,550,121,194,278,438,837,321,429,300,424,170,742,258,341,954,661,207,249,369,450,287,263,269,341,861,607,544,411,717,401,559,415,335,766,504,325,627,731,971,228,193,377,366,740,349,571,438,521,529,550,348,595,272,563,524,525,602,194,798,517,538,238,653,799,597,868,1208,1147,1133,1129,1108,1038,403,367,1162,1095,955,648,519,1429,285,441,336,189,324,234,174,139,245,315,432,133,135,137,313,439,606,312,687,563,415,893,520,606,174,344,594,277,348,316,698,413,592,467,307,293,278,288,498,189,360,194,248,336,160,480,280,299,182,299,188,233,538,355,408,319,696,1153,239,424,460,438,604,624,320,577,1083,871,818,561,559,367,373,409,337,370,457,269,272,281,136,193,790,860,862,798,603,563,586,268,479,290,458,721,186,378,369,618,752,865,721,494,405,524,287,352,241,272,226,605,417,544,364,618,569,558,755,544,62,335,470,548,784,433,424,412,350,359,340,326,1227,1288,1214,1318,1176,1366,1919,1767,496,122,159,434,573,161,194,123,485,190,416,580,524,1191,796,651,290,177,402,226,360,241,185,358,194,523,398,609,514,476,641,739,906,201,597,214,368,357,431,454,286,232,510,317,358,281,269,329,279,574,237,375,182,542,410,409,119,444,603,524,519,157,289,450,459,428,310,429,699,299,709,394,467,717,336,544,855,201,165,130,139,144,179,411,168,167,153,164,190,308,148,230,314,313,408,666,116,217,242,229,423,483,373,582,530,182,197,183,494,264,365,645,203,380,178,179,231,369,120,453,554,155,218,270,189,303,130,124,694,507,468,422,400,430,221,257,339,381,312,276,916,351,383,369,469,357,622,995,767,1044,752,751,1622,982,1152,1298,1379,1461,1493,1469,1536,1518,1561,1589,1471,1505,1497,1486,1599,1500,1573,1450,1541,1479,1459,1306,1315,1216,1252,1403,1345,1246,1179,1117,1087,1425,1326,1612,1936,1721,1764,1738,1675,1708,1729,1714,1722,1730,1700,1729,1757,1772,1771,1701,1648,1689,1686,1650,1690,1720,1703,1741,1683,1700,1651,1640,1674,1649,1586,1579,1639,1906,1530,1726,1680,1603,1659,1648,1729,1737,1822,1844,1816,1818,1811,1797,1705,1785,1664,1774,1819,1849,1747,1647,1763,1833,1705,1792,1768,1758,1720,1673,1650,1621,1653,1727,1644,1628,1583,1584,1661,1663,1651,1705,1698,1716,1662,1721,1687,1757,1735,1618,1746,1720,1703,1731,1669,1647,1689,1681,1617,1659,1593,1605,1533,1510,1521,1500,1663,1105,1070,853,651,921,1322,1441,1471,1285,1131,1171,1207,1135,1387,1358,1240,1295,1269,1276,1183,976,880,732,890,905,739,623,837,1051,1090,1062,1213,1594,1547,1403,1439,1381,1622,1435,1484,1543,1577,1354,1297,1269,1259,680,240,207,249,223,222,887,1386,1408,1189,1575,1648,1395,1281,1533,1117,738,1378,1305,794,1431,1560,1445,1640,1569,1619,1471,1355,1316,1637,1268,1447,1545,1721,1411,1408,1395,1574,1372,1632,1151,1561,1699,1563,1729,1489,1546,1701,1181,1723,1273,1667,1443,1134,1543,1513,1678,1507,1389,1465,1489,1370,1558,1639,1588,1434,1221,1587,1479,1536,1593,1353,1372,1482,1689,1260,1656,1197,1449,1502,1664,1235,1356,1505,1655,1580,1669,1115,1558,1334,1620,1040,1566,1415,1704,954,1491,1451,1470,1330,1481,1561,1620,1601,1616,1535,1342,1356,1712,1478,1735,1240,1762,1251,1817,1397,1531,1220,1786,1681,1581,1491,1456,1850,1471,1379,1761,1648,1270,1616,1655,1706,1863,1410,1679,1761,1761,1553,1703,1712,1312,1690,1362,1580,1614,1805,1336,1664,1691,1579,1615,1591,1535,1843,1506,1789,1573,1889,1858,1920,1949,2046,1997,2051,2022,2028,2018,2035,2024,2036,2019,2047,2048,2043,2033,1984,1982,1996,2028,2032,2034,2050,2048,2028,2040,2047,2012,2021,2032,2040,2049,2046,2040,2053,2039,2011,2024,1835,1995,2033,2037,2048,2031,2030,2028,2038,2010,1981,2002,1980,1982,2004,2000,2015,2041,2027,2042,2017,1999,1973,1991,1986,2014,1984,2032,2020,2026,2050,2030,1990,1957,1996,2016,1986,2000,2051,2047,2051,2038,1999,1986,1985,2027,2015,2039,2022,2051,2055,2048,2037,2024,2049,2030,2030,1995,2037,1990,2047,2006,1946,1986,1954,1981,1982,2006,1959,1940,1989,1993,1968,1942,2007,1981,1995,1939,1962,1963,1978,1983,1999,1925,1979,1995,1971,1964,2005,1974,1982,1969,1978,1995,1984,1967,1976,1979,1992,2024,1983,2005,1990,1976,2005,1961,2015,1943,2003,1966,1981,1993,1984,1971,1946,1979,1985,2002,1959,2008,1996,1992,2001,2018,1998,2002,2006,1967,1995,1964,1972,2004,2005,1945,1940,1987,2039,1959,1972,2048,2033,1985,1982,2044,2014,1953,2031,2000,2022,2040,2042,1997,2012,2044,2009,1998,1968,1983,2015,2017,1998,1985,1840,1982,2048,2053,2046,1911,1964,1922,1894,1747,1919,1884,1907,1751,1937,1847,1963,1997,1983,1833,1936,1950,1827,1875,1844,1978,1956,1956,1896,1935,1902,1941,1884,1831,2014,1969,1907,1949,1847,1969,1850,1881,1846,1883,1959,1992,1897,2030,1979,1892,1868,1829,1930,1857,1945,1978,1910,1960,2016,1960,1961,1778,1936,1739,1993,1936,1959,1920,1887,1966,1946,1951,1821,2019,1968,1971,1796,1717,1807,1750,1910,1869,1870,1814,1859,1850,1854,1961,1933,1919,1941,1908,1898,1930,1924,1890,1918,1902,1894,1959,1899,1992,1890,1957,1888,1870,1935,1849,1908,1809,1907,1924,1788,1959,1505,1763,1332,1759,1829,1718,1892,1972,1935,1971,1982,1975,1991,1927,1973,2008,1967,1958,1983,1749,1418,1409,1422,1426,1474,1547,1371,1627,1494,1413,1533,1677,1766,1612,1626,1904,2023,1969,1933,2009,1972,1807,1948,1946,2014,1979,1944,1988,1925,1957,1835,1850,1967,2016,2011,1892,2020,1907,1916,1901,1883,1990,1966,2016,1896,2043,1934,1908,1893,1857,2006,1928,2041,1896,1969,1857,1897,1903,1857,1971,1978,2006,1916,1950,1941,1863,1893,1874,1992,2017,1974,1937,2005,1920,1850,1919,1924,1964,1943,1917,1932,1958,1909,1959,1909,1883,1743,1752,1639,1665,1670,1714,1772,1702,1676,1664,1720,1724,1711,1734,1700,1651,1688,1671,1694,1735,1713,1727,1635,1637,1654,1724,1748,1736,1670,1609,1590,1675,1771,1703,1673,1622,1660,1637,1680,1760,1733,1714,1669,1647,1664,1774,1796,1760,1651,1603,1658,1768,1895,1842,1744,1737,1767,1809,1870,1828,1836,1802,1776,1859,1735,1773,1709,1696,1682,1692,1723,1631,1605,1750,1726,1717,1615,1848,1660,1628,1795,1702,1523,1733,1714,1730,1668,1757,1756,1754,1676,1787,1797,1810,1670,1765,1737,1737,1733,1767,1770,1954,1894,1998,1987,1988,1950,1919,1935,1911,2017,1977,1977,2004,1985,1976,2011,1964,1994,1975,1973,1965,1991,2009,1989,1989,1969,1990,1971,1952,1980,2019,1998,2001,1956,1988,1972,1972,1971,1970,1976,1965,1990,1963,1971,1965,1989,1965,1965,1951,1997,1945,1963,1965,1944,1967,1957,1991,1964,1962,1967,1966,1952,1967,1953,1965,1952,1971,1951,1972,1947,1973,1945,1972,1946,1976,1961,1899,1943,1896,1905,1905,1910,1890,1926,1887,1909,1923,1903,1907,1911,1908,1915,1941,1855,1925,1903,1833,1904,1919,1838,1890,1935,1837,1885,1949,1842,1869,1951,1843,1854,1955,1845,1831,1959,1847,1809,1964,1839,1814,1883,1787,1834,1895,1764,1844,1893,1741,1874,1898,1760,1885,1886,1770,1891,1853,1782,1898,1827,1819,1897,1797,1871,1911,1821,1882,1900,1803,1892,1845,1874,1912,1820,1871,1917,1805,1889,1857,1849,1909,1839,1850,1911,1848,1893,1881,1848,1895,1886,1845,1894,1888,1846,1891,1893,1846,1890,1892,1845,1885,1893,1843,1883,1894,1844,1872,1892,1839,1894,1906,1837,1905,1912,1830,1914,1901,1836,1919,1904,1844,1921,1879,1855,1933,1858,1860,1928,1864,1868,1922,1863,1871,1917,1917,1926,1923,1905,1915,1915,1924,1918,1912,1921,1938,1914,1909,1912,1902,1921,1928,1988,1967,1999,1985,1985,1983,2002,1988,1988,1974,1990,1910,1961,1883,1936,1899,1917,1892,1925,1818,1944,1920,1874,1924,1965,1968,1949,1981,1963,1937,1987,1926,1981,1933,1975,1934,1964,1948,2002,1894,1950,1836,1987,1831,1963,1859,1915,1901,1877,1927,1856,1960,1830,1978,1841,1949,1826,1875,1859,1849,1890,1810,1931,1802,1891,1861,1839,1866,1812,1916,1787,1929,1812,1877,1833,2050,2048,2033,2008,2020,2005,2030,2020,2018,2036,2028,2041,2036,2049,2020,1997,1832,1983,2010,2042,2054,2054,2017,2032,2029,2004,2010,2020,2043,2023,2034,2055,2036,2043,2033,2019,1965,1961,2025,2000,2031,2051,2031,2007,2018,1987,1985,1996,1977,1992,2041,2036,2022,2015,2014,2013,1988,1998,1997,1974,1989,2019,2043,2013,2021,2008,2012,1978,2003,1991,1967,1977,2012,2040,2011,2050,2054,2027,1998,2046,2011,2008,1967,2034,2033,2048,2042,2056,2042,2046,2017,2024,2024,2042,2055,2056,2009,2014,1972,1997,1971,2005,1999,1972,2015,1983,1967,2011,1975,1942,1950,1970,1982,2002,2001,2007,2002,1914,1947,1947,1932,1805,1924,2001,2011,1970,2008,1973,1983,1966,1999,1988,1964,1881,1888,1922,1986,1965,1902,1913,1962,1999,1947,1932,1847,1895,1978,1993,1910,1852,1937,1971,1948,1875,1883,1875,1851,1931,1964,1926,1940,1943,1847,1885,1864,1887,1975,1902,1975,1960,1879,1884,1896,1880,1966,1990,1932,1886,1812,1836,1894,1958,1974,1854,1877,1817,1661,1945,1915,1888,1915,1910,1847,1869,1947,1831,1895,1883,1856,1874,1854,1812,1866,1962,1966,1917,1909,1880,1841,1850,1884,1831,1849,1931,1970,1964,1919,1939,1829,1884,1950,1935,2040,2029,2007,1951,1961,2007,1969,2022,1956,1944,1941,2056,2011,1981,1786,1964,2008,2015,1992,1931,1984,2032,2008,1988,1955,1986,1995,2023,2015,1969,1838,1969,1983,1974,2021,1981,2004,2038,2008,1992,2012,1898,2016,2003,1982,1986,2021,2021,1993,1920,1759,1781,1888,2020,2008,1954,2020,2000,1973,1955,1972,1964,1952,1877,1956,1954,1976,1949,2005,1970,2027,1994,1997,1942,1969,1989,1977,1964,1868,1933,1946,1966,1872,1909,1939,1944,1871,1938,1998,1967,1978,1996,2016,2012,1993,2030,1903,1911,1977,1926,1720,1902,1955,1949,1963,1931,1933,2028,1983,2004,1990,1969,1967,2018,1981,1959,1991,1938,1945,1960,1940,1973,1949,1969,1974,2000,2007,2013,1993,1973,1974,2026,1959,1995,1972,1976,1937,2001,1940,1949,1995,1971,1994,1978,1934,1984,2022,1990,1944,1961,1934,2034,1949,1991,1995,1987,2018,1965,1973,2028,1987,1966,2020,1924,2045,1934,1954,1972,1947,1998,1997,1989,1954,1906,1952,1997,1933,1946,2000,1956,1918,1957,1975,2010,2004,1931,1952,1969,1923,1998,1906,1947,1949,1853,1884,1954,1953,1902,1895,1920,1905,1973,1946,1918,2000,1971,1946,2000,1976,1944,2031,1795,1987,1951,2016,2022,1991,2015,2050,2029,1867,2014,1959,2018,2023,2026,2041,2044,2022,1936,2009,1993,2031,2039,2036,2019,1992,2034,1979,2035,1994,2040,2041,2024,2055,2029,2044,1952,2019,1980,2034,2042,2029,2047,2052,2022,1987,2008,1969,2034,2040,2027,2048,2046,2044,1932,1953,1948,1890,1914,2003,1962,1986,2006,1994,2027,2028,1891,2006,1962,2017,1977,2014,1934,1825,1990,1959,1965,2006,1992,1951,1785,1965,1943,1661,1882,1780,1666,1626,1606,1561,1801,1357,1518,1539,1362,1586,1282,1505,1483,1155,1512,1156,1403,1294,1297,1351,1162,1412,1107,956,1587,1419,1151,1245,1357,1286,960,1275,1383,1107,1635,1111,1401,1157,1553,1197,1306,1413,1504,1170,1607,1484,1473,1588,1367,1562,1323,1499,1541,1175,1630,1160,1442,1142,1604,1182,1410,1360,1009,1254,1493,1437,1086,1286,1373,1283,960,1318,1422,1192,1534,1101,1342,1109,1658,1217,1469,1472,1368,1516,1455,1559,1457,1591,1528,1246,1449,1496,1382,1260,1559,1272,1339,1163,1604,1228,1427,1308,952,1395,1415,1387,1087,1306,1521,1062,1032,1274,1379,1213,1454,1152,1381,1125,1627,1241,1513,1479,1340,1540,1404,1523,1500,1465,1591,1222,1483,1493,1175,1436,1441,1337,1366,1165,1566,1170,1416,1336,838,1587,1319,1305,1210,1206,1606,847,1221,1383,1172,1507,1064,1334,1291,1365,1333,1238,1417,1509,1230,1632,1470,1466,1560,1297,1666,1302,1513,1529,1279,1649,1139,1388,1230,1428,1365,1325,1429,1092,1040,1558,1433,1151,1247,1384,1440,937,1275,1421,1168,1604,1056,1392,1056,1663,1251,1411,1459,1412,1392,1438,1571,1444,1575,1470,1353,1417,1471,1485,1198,1670,1198,1399,1171,1618,1140,1470,1277,908,1401,1382,1439,1077,1337,1534,986,1103,1351,1291,1248,1497,1192,1355,1179,1607,1245,1460,1494,1367,1444,1431,1592,1532,1569,1577,1256,1534,1557,1312,1053,1677,1226,1339,1121,1573,1223,1316,1350,952,1228,1471,1454,1081,1329,1537,952,1082,1369,1249,1114,1469,1161,1381,1142,1636,1114,1411,1524,1443,1451,1522,1569,1505,1549,1614,1275,1480,1549,1353,1091,1746,1172,1406,1127,1610,1175,1270,1394,1084,976,1572,1472,1144,1249,1381,1312,951,1311,1355,1137,1558,1074,1383,1275,1617,1204,1237,1510,1532,1360,1684,1427,1502,1580,1397,1709,1256,1527,1522,1184,1650,1213,1380,1323,1329,1470,1248,1470,1171,933,1647,1321,1239,1235,1212,1674,812,1252,1459,1237,1632,1091,1335,1198,1470,1438,1328,1413,1490,1235,1693,1499,1527,1595,1410,1686,1309,1569,1501,1184,1633,1274,1436,1320,1283,1492,1240,1499,1211,864,1662,1298,1237,1224,1190,1643,871,1209,1442,1430,1461,1273,1307,1375,1288,1642,1217,1515,1578,1273,1630,1568,1629,1572,1522,1655,1355,1221,1244,1334,1415,1625,1569,1468,1292,1232,1560,1519,1379,1786,1525,1317,1235,1459,1475,1409,1736,1513,1470,1360,1254,1508,1381,1374,1680,1564,1592,1431,1204,1402,1336,1225,1482,1687,1247,1135,1295,1297,1739,1385,1286,1461,1639,1204,1699,1679,1861,1936,1878,1874,1923,1783,1750,1838,1896,1753,1848,1566,1264,1737,1686,1784,1744,1707,1680,1456,697,1383,2000,1990,1804,1548,1111,1407,1817,1635,1775,1745,1891,1717,1705,1646,1892,1663,1803,1890,1895,1851,1678,1712,1933,1731,1989,1785,1938,1962,1963,1913,1876,1733,1542,1911,1819,1886,1904,1808,1649,1746,1551,1728,1745,1666,1586,1698,1571,1411,1694,1801,2017,2006,1970,1926,2002,2023,1994,1947,2017,2036,2006,1958,2002,2033,1970,1988,1925,1957,1933,2010,1945,1965,1976,2021,2006,1994,2009,2021,2031,2009,1985,1837,2001,2056,2040,2045,1989,1912,1884,1660,1935,1903,1932,1905,1919,1905,1910,1899,1899,1885,1938,1860,1924,1969,1909,1911,1919,1876,1893,1349,1741,1965,1717,1468,1502,1253,1590,1701,1611,1631,1846,1529,1576,1613,1573,1505,1543,1624,1667,1566,1270,1271,1671,1593,1275,1373,1963,1839,1760,1751,1793,1714,1818,1871,1714,1672,1679,1750,1609,1619,1862,1716,1314,1500,1711,1456,1430,1257,1382,1747,1503,1210,1185,1467,1620,1233,1595,1981,1994,1996,1984,1970,1909,1812,1533,1903,1873,1883,1581,1826,1986,1878,1871,1890,1767,1773,1815,1697,1895,1509,1417,1733,1445,1369,1588,1605,1408,1761,1394,1757,1412,1707,1593,1863,1495,1752,1497,1770,1472,1490,1601,1499,1883,1271,1247,1296,1817,1845,1797,1709,1377,1451,1699,1745,1564,1443,1653,1655,1621,1646,1577,1556,1697,1595,1356,1573,1424,1702,1628,1373,1607,1507,1622,1662,1480,1259,1577,1539,1199,1325,1369,1238,1331,1309,1556,1200,1244,1449,1354,1351,1358,1379,1318,1594,1602,1568,1912,1476,1466,1839,1851,1841,1903,1552,1986,1762,1585,1984,1654,1996,1217,1852,1902,1508,1713,1706,1697,1655,1580,1479,1623,1493,1555,1468,1589,1584,1545,1539,1445,1592,1559,1499,1415,1598,1480,1806,1869,1913,1866,1835,1725,1488,1486,1603,1525,1929,1935,1891,1855,1893,1874,1911,1957,946,532,652,481,699,634,576,560,692,1868,1976,1983,1965,1931,1960,1977,1959,1949,1651,1645,1615,1641,1773,1578,1712,1574,1723,1537,1557,1627,1495,1503,1498,1370,1474,1373,1628,1523,1234,1166,1438,1358,1590,1473,1412,1371,1566,1444,1607,1416,1378,1385,1406,1438,1402,1398,1487,1809,1762,1822,1869,1900,1881,1796,1756,1813,1663,1730,1777,1837,1818,1748,1718,1678,1090,792,803,868,1519,1708,1660,1639,1683,1621,1600,1616,1661,1760,1664,1695,1659,1657,1821,1802,1880,1309,1811,1529,1757,1553,1789,1456,1673,1915,1691,1817,1847,1844,1593,1855,1862,1735,1061,1042,982,1071,1074,1079,938,1093,1689,1537,1578,1519,1609,1547,1560,1532,1662,1437,1582,1575,1651,1230,1023,1039,1012,1371,1411,1613,1786,1588,1413,1099,1453,1556,1127,1282,1513,1523,1469,1621,1621,1525,1555,1634,1482,1345,857,813,1045,570,1009,742,1077,1384,1442,727,576,874,557,852,558,730,744,715,857,474,834,735,921,500,535,832,683,860,529,865,736,915,436,425,903,588,742,295,610,241,288,525,163,583,256,636,176,517,149,166,464,39,576,157,571,213,271,1516,1439,1410,1206,1246,1177,1370,983,991,1017,963,988,981,997,1015,1539,1400,1399,1442,1508,1445,1413,1347,1573,1428,1487,1546,1587,1591,1488,1511,1523,1571,1407,1439,1369,1435,1448,1418,1423,1438,1405,1390,1382,1365,1092,966,941,959,1103,917,961,929,1069,905,935,920,1036,1411,1410,1398,1396,1111,928,934,936,1499,1612,1568,1562,1519,1517,1521,1612,1606,1562,1348,1364,1323,1222,1328,1312,1317,1575,1552,1537,1337,1489,1343,1277,1207,1584,1642,1704,1572,1604,1530,1772,1702,1819,1609,1216,1178,1504,1415,1494,1215,1334,1360,1418,1658,1421,1594,1433,1470,1637,1694,1656,1660,1578,1661,1644,1637,1761,1624,1698,1663,1587,1609,1653,1627,1511,1711,1666,1609,1687,1481,1635,1610,1630,1673,1625,1701,1687,1648,1593,1674,1666,1540,1804,1632,1628,1624,1805,1705,1614,1636,1640,1857,1678,1672,1665,1782,1686,1649,1699,1648,1202,948,951,967,1389,1482,1544,1475,1604,1311,1328,1372,1300,1300,1154,1267,1248,1348,1129,961,953,1479,1211,1167,1091,1219,1163,872,1000,1003,1621,1518,1524,1543,1506,1511,1506,1533,1691,1405,1388,1383,1376,1375,1375,1341,1405,1728,1530,1546,1557,1560,1551,1539,1511,1664,1652,1606,1633,1642,1628,1601,1606,1660,1755,1470,1431,1397,1426,1461,1431,1406,1487,1856,1758,1715,1699,1748,1733,1701,1707,1896,1762,1703,1704,1705,1727,1669,1675,1702,1305,999,1207,1029,1110,1067,1265,1125,1155,1064,974,734,640,704,644,1665,1641,1737,1695,1725,1670,1727,1691,1798,1797,1730,1673,1621,1714,1673,1734,1709,1874,1741,1759,1747,1770,1767,1779,1768,1756,1834,1718,1668,1622,1688,1657,1716,1668,1686,1429,1507,1392,1626,1003,1009,1020,1045,1851,1818,1806,1835,1651,1848,1798,1825,1805,1398,1159,1224,1588,1443,1015,1048,1346,1743,1619,1594,1586,1552,1624,1620,1601,1763,1504,1442,1440,1471,1402,1458,1424,1457,1412,1785,1362,1773,1264,1488,1439,1476,1440,1677,1633,1623,1627,1552,1605,1594,1587,1660,1498,1486,1432,1357,1547,1459,1446,1394,1839,1801,1844,1834,1690,1824,1793,1831,1732,1684,1645,1592,1672,1642,1639,1621,1713,1592,1493,1461,1452,1398,1506,1442,1455,1599,1821,1809,1855,1905,1698,1835,1814,1873,1667,1604,1642,1619,1538,1661,1648,1595,1710,1584,1460,1422,1500,1422,1467,1418,1473,1580,1821,1833,1846,1697,1870,1793,1850,1797,1291,1100,1635,676,672,1161,694,1068,734,680,1526,1009,654,716,1202,1218,967,1228,1391,1293,601,1155,1233,1204,1293,1297,1748,1272,949,945,1683,1585,1599,1712,1652,1705,1562,1766,1488,1451,1275,934,1166,1575,1497,1025,993,1013,1054,1284,1093,1042,1096,1371,1920,2035,2021,2013,2028,2016,2017,1977,2018,2053,2028,2021,1980,2017,2006,1998,1976,2027,2042,2020,2006,2035,2003,2022,1953,2021,2030,2035,1997,2002,2010,2007,1993,1979,2047,1905,1905,1906,1876,1900,1909,1841,1865,1881,1926,1885,1889,1840,1875,1825,1887,1935,1663,1673,1657,1694,1667,1658,1659,1619,1792,1647,1662,1653,1626,1670,1646,1607,1687,1517,1435,1444,1413,1446,1436,1417,1392,1563,1501,1518,1520,1515,1319,1531,1551,1616,1371,1585,1466,1690,1411,1458,1523,1640,1361,1402,1454,1501,1956,1666,1526,1676,1572,1595,1536,1600,1701,1525,1584,1617,1700,1731,1628,1578,1535,1673,1547,1579,1559,1544,1524,1580,1525,1451,1559,1463,1738,1533,1661,1618,1644,1633,1672,1803,1706,1498,1723,1934,1837,1698,1751,1894,1940,1929,1942,1988,1942,1937,1915,1925,1818,1822,1877,1994,1852,1846,1850,1832,1797,1775,1782,1777,2017,1959,1970,1956,1943,1897,1911,1891,1982,1921,1881,1914,1866,1805,1839,1813,1796,2012,1991,1990,2016,1947,1945,1928,1908,1976,1905,1811,1813,1733,1759,1761,1762,1764,1921,1846,1835,1775,1815,1825,1815,1805,1769,1672,1405,1452,1447,1410,1446,1398,1421,1613,1970,1936,1968,1980,1941,1914,1904,1924,1911,1862,1922,1996,1944,1963,1903,1917,1892,1935,1886,1935,1680,1517,1518,1596,1576,1605,1571,1505,1853,1799,1833,1792,1765,1739,1742,1720,1745,1544,1323,1288,1280,1391,1286,1347,1351,1582,1492,1468,1504,1571,1579,1495,1481,1444,1668,1681,1476,1688,1663,1545,1586,1458,1381,1349,1309,1232,1272,1167,1314,1728,1890,1865,1878,1902,1876,1871,1871,1885,1968,1908,1890,1870,1878,1885,1883,1879,1891,1441,1431,1373,1386,1463,1460,1473,1469,1791,1664,1712,1745,1675,1608,1577,1564,1627,1525,1552,1586,1611,1725,1714,1706,1641,1689,1445,1465,1476,1439,1364,1417,1412,1569,1509,1505,1491,1544,1233,1526,1518,1454,1665,1478,1521,1489,1249,1488,1507,1515,1549,1972,1951,1918,1664,1428,1414,1408,825,1418,1402,1407,1600,1174,1147,1128,1131,1142,1071,1132,1178,1514,1435,1428,1930,1893,1902,1912,1904,1900,1894,1942,1690,1609,1496,1538,1439,1363,902,941,810,908,802,944,708,892,917,1026,754,966,868,1071,895,981,1337,1260,1355,1276,807,362,595,541,344,304,474,695,1357,876,886,868,1077,1285,796,1342,748,196,445,279,311,1406,1408,1495,1695,1837,1731,1810,1823,1816,1783,1752,1794,1758,1627,1650,1571,1620,1613,1647,1586,1660,1360,1299,1326,1324,1613,1680,1665,1666,1672,1655,1632,1679,1681,1665,1660,1676,966,1570,1827,1853,1773,1787,1799,1890,1828,1734,1655,1445,1475,1442,1648,1862,1852,1847,1860,1872,1864,1851,1879,1852,1069,1751,1192,1088,1252,1087,1189,2038,2011,1970,1921,1972,1949,1890,1894,1886,1973,1942,1947,1916,1913,1885,1931,2010,1752,1661,1759,1799,1808,1796,1688,1610,1889,2056,2048,2041,2048,2053,2041,2037,2056,2057,2055,2038,2034,2048,2049,2048,2040,2057,1883,1926,1850,1851,1824,1861,1832,1875,1954,1904,1880,1847,1861,1836,1852,1851,1944,1325,1413,808,808,752,669,712,565,791,869,754,403,726,807,894,601,432,775,844,928,454,534,768,852,905,638,475,1254,1039,1122,474,716,1165,1091,1045,381,930,1118,1032,874,397,1055,1161,1101,626,1414,1333,1577,1324,1779,1364,972,1139,1149,1129,1123,1092,1097,1115,1158,1107,1218,1205,1093,1052,1061,1276,1377,1104,1086,1202,1045,1041,1115,1040,981,1030,880,1037,1031,840,837,824,870,1316,422,562,504,559,548,479,566,541,462,512,467,493,505,530,575,510,1483,1470,1479,1497,1559,1497,1528,1531,1508,1092,977,1010,1490,1518,1365,1394,1322,1384,1486,1732,1651,1658,1652,1598,1612,1660,1644,1667,1647,1482,1481,1519,1456,1511,1515,1465,1530,1051,1123,1243,1368,1314,1307,1309,1097,1403,1441,1413,1439,1551,1521,1551,1567,1725,1293,979,1128,1175,1096,1154,1069,1097,1088,1155,1105,1186,1185,1085,1050,1081,1300,1304,1121,1086,1221,1051,1051,1104,998,1012,1000,888,1050,1053,839,817,845,946,1198,452,568,510,544,551,491,539,531,481,523,492,483,520,528,577,535,1805,1805,1794,1796,1798,1779,1734,1716,1403,1423,1400,1389,1670,1230,1202,1240,1551,1446,1313,1328,1518,1272,1040,1027,965,1480,1693,1447,1692,1648,1355,1186,1179,1245,1425,1411,1682,1674,1594,1690,1698,1580,1668,1634,1689,1153,1402,1436,1568,1920,1717,1956,1765,1679,1664,1718,1730,1628,1742,1790,1684,1580,1502,1552,1534,1546,1552,1573,1227,1779,1611,1608,1588,1576,1561,1602,1622,1764,1473,1751,1799,1493,1431,1763,1777,1565,1680,1045,1105,1152,1167,1168,1147,1096,1167,1142,1127,1122,1221,1158,1081,1021,1094,1256,1071,1221,1160,776,784,1136,1157,1084,968,994,1260,1097,919,649,1099,1232,1123,992,928,1246,1133,939,526,1163,1231,1194,967,824,1198,1101,997,432,1193,1185,1166,994,810,1145,1157,1074,423,1180,1127,1159,943,1297,1110,1095,1178,1046,1061,1108,999,979,1030,910,1054,1012,842,832,836,933,924,1168,1232,1205,391,1036,1262,1107,911,1261,1145,1249,1188,1249,1124,1108,1232,1181,1289,1141,1115,1219,1195,1320,1096,1177,1235,1163,1302,1173,970,1038,1117,1379,1119,1012,968,1191,1302,1072,978,1073,1295,1225,1074,941,1101,1529,615,519,535,1289,1567,1753,1862,1872,1810,1582,1387,478,511,525,526,545,995,1265,1038,1280,1506,1182,1133,1490,1327,1054,1262,1510,1194,1078,1445,1735,1850,1749,1734,1904,1669,1808,1891,1742,1779,1821,1828,1720,1856,1804,1738,1896,1720,1761,1889,1746,1762,1804,1750,1867,1830,1821,1673,1903,1743,1834,1789,1749,1883,1700,1835,1846,1792,1751,1818,1851,1714,1799,1875,1709,1905,1731,1765,1927,1733,1738,1816,1863,1734,1812,1824,1678,1904,1674,1834,1776,1764,1834,1779,1824,1784,1826,1759,1790,1889,1712,1739,2006,1703,1877,1777,1754,1339,1183,1197,1176,1300,1181,1222,1070,1000,608,804,841,741,398,737,834,868,563,459,779,813,944,435,531,790,833,878,701,1421,1004,1153,1157,1134,1155,1084,1071,1130,1159,1121,1177,1190,1103,1071,1042,1187,1448,1507,1552,1104,1081,1181,1070,1070,1100,1052,1021,1034,899,1028,1035,865,891,764,886,1471,1420,1522,1152,425,587,502,533,553,496,528,524,480,525,501,490,493,517,576,517,1702,1650,1685,1578,1720,1655,1627,1659,1722,1683,1776,1648,1635,1599,1690,1588,907,534,1047,522,428,314,844,1109,2037,2047,2030,2016,2018,1994,1991,1984,2026,2033,2026,2026,2017,2014,2011,1961,2022,1374,1370,1618,1537,1350,1401,1238,1120,1121,1123,1127,1122,1123,799,69,915,1992,2048,1859,1868,1908,1857,1848,1895,1905,1853,1948,1919,1933,1961,1851,1907,1920,1925,1878,1793,1997,1874,1888,1934,1908,1838,1762,1822,1765,1923,1902,1890,1872,1873,1883,1903,1907,1842,2002,1750,1880,1855,1922,1862,1631,1836,1460,1513,1623,1629,1601,1522,1453,1585,1601,1611,1649,1534,1504,1589,1577,1498,1883,1640,1614,1505,1608,1969,1815,1770,1767,1856,1860,1846,1869,1916,1424,1281,1300,1347,1309,1356,1340,1247,1600,1449,1457,1440,1464,1495,1463,1430,1470,1618,1455,1453,1468,1506,1470,1456,1437,1610,1455,1460,1449,1465,1491,1458,1451,1431,1640,1425,1416,1415,1503,1449,1443,1408,1599,1403,1435,1379,1428,1480,1455,1425,1400,1621,1405,1356,1428,1486,1452,1400,1394,1546,1463,1358,1397,1469,1470,1422,1431,1391,1633,1430,1368,1468,1498,1468,1448,1424,1496,1607,1471,1435,1459,1479,1513,1465,1401,1607,1333,1304,1352,1385,1343,1358,1307,1266,1562,1334,1302,1389,1352,1334,1307,1276,1553,1332,1298,1333,1373,1309,1367,1338,1253,1634,1448,1430,1460,1484,1507,1467,1408,1607,1423,1407,1455,1487,1473,1468,1441,1400,1610,1374,1356,1424,1453,1475,1426,1378,1514,1538,1365,1352,1466,1479,1447,1386,1408,1600,1406,1392,1434,1447,1468,1431,1413,1382,1643,1409,1398,1428,1502,1464,1428,1392,1688,1650,1832,1764,1762,1808,1647,1787,1832,1834,1804,1748,1581,1849,1736,1793,1685,1823,1803,1858,1863,1817,1940,1902,1827,1909,1931,1839,1814,1786,1838,1790,1786,1764,1885,1825,1793,1751,1748,1779,1722,1713,1749,1897,1824,1810,1721,1780,1750,1754,1734,1778,1991,1838,1821,1813,1797,1825,1829,1807,1905,1728,1753,1780,1722,1731,1720,1779,1755,1861,1893,1855,1833,1816,1815,1748,1782,1778,1866,1669,1741,1776,1510,1742,1747,1656,1748,1795,1766,1726,1790,1610,1671,1603,1806,1801,1749,1687,1606,1638,1697,1678,1683,1660,1770,1667,1638,1658,1674,1699,1681,1707,1668,1852,1804,1706,1790,1838,1797,1806,1795,1856,1755,1747,1725,1754,1799,1745,1810,1733,1845,1803,1897,1871,1872,1924,1959,1831,1854,1705,1675,1739,1726,1741,1767,1740,1736,1794,1679,1720,1834,1783,1789,1872,1728,1758,1556,1454,1517,1540,1498,1511,1530,1473,1818,2002,1936,1954,2003,1970,1943,1989,1894,1945,1992,2008,1992,1920,1976,1997,2007,1952,1289,38,40,38,118,209,38,40,38,1528,1782,1828,1842,1846,1840,1807,1799,1906,1484,1459,1431,1446,1413,1411,1448,1463,1822,1844,1813,1759,1787,1758,1805,1756,1815,743,427,38,40,40,317,40,38,40,400,1194,1295,1776,1716,1744,1766,1750,1714,1736,1747,1771,1303,1317,1391,1509,616,1375,1540,1328,1079,1530,1772,1601,1405,38,40,38,122,205,38,40,38,1063,1254,1210,1134,1273,1710,1613,1654,1699,1673,1652,1673,1639,908,38,40,38,720,938,70,471,1682,1845,2004,1646,1628,1630,1643,1640,1681,1734,1730,1703,1760,1713,1771,1714,1696,1667,1677,1698,862,1153,45,1848,1801,1705,1715,1763,1750,1733,1721,1822,1893,1830,1889,1890,1835,1859,1812,1804,1968,1789,1557,1707,1681,1744,1781,1795,1720,1866,1849,1926,1834,1920,1802,1961,1784,1982,1614,1205,1181,1054,1054,1363,1400,1340,1381,1394,1329,1142,1113,1095,1138,1169,1266,1361,710,878,995,1131,1586,1572,862,676,736,1012,1580,1728,1721,1221,1007,1354,1723,1240,1112,764,960,898,585,708,1054,1293,1282,1184,1310,1387,1394,1360,1254,1713,1918,1908,1909,1827,1854,1914,1853,1905,1867,1928,1922,1950,1841,1872,1922,1841,960,934,948,952,1966,1963,1597,1982,1548,1144,1230,1155,1609,1996,2003,2022,2015,1852,1936,1892,1855,2035,2042,2048,2032,1945,1797,1737,1875,1817,1820,1745,1799,1757,1972,1955,1944,1905,1996,1294,1295,1360,1758,1204,1242,1259,1385,1187,1225,1225,1293,1811,1153,1234,1383,1349,1096,742,962,1580,1484,750,872,1672,1726,824,740,1478,1487,1314,1400,1398,1964,1771,1764,1820,1816,1758,1823,1875,1776,1771,1665,1679,1656,1789,1759,1797,1807,1785,1463,1392,1450,1486,1516,1431,1413,1473,1618,1490,1444,1503,1637,1539,1466,1515,1671,1967,1986,1932,1921,2014,1984,1969,2004,1946,1765,1768,1740,1829,1663,1544,1571,1619,1952,1888,1792,1912,1879,1810,1798,1817,1945,1891,1850,1890,1941,1777,1823,1769,1833,1726,1527,1486,1534,1238,1246,1236,1731,1143,1237,1204,1308,1514,1114,1228,1577,1844,1785,1751,1768,1920,1782,1776,1764,1872,1810,1841,1824,1787,1031,860,821,713,1171,1167,1150,1179,1267,1179,1228,1184,1343,1258,1385,1359,1289,1826,1831,1868,1850,1893,1831,1848,1867,1915,1901,1927,1918,1887,1952,1905,1962,1955,1866,1844,1879,1791,1794,1836,1737,1651,1667,1581,1914,1800,1854,1915,1875,1845,1919,1751,1487,1400,1460,1548,1495,1697,1766,1520,1594,1694,1634,1698,1701,1784,1735,1769,1846,1977,2052,2043,1870,1999,1984,1966,1925,2026,1953,1935,1874,1630,1118,1419,1272,1295,1769,1792,1742,1738,1661,1497,1558,1601,1729,1796,1790,1787,1800,1808,1833,1793,1802,1693,1668,1722,1637,1622,1770,1828,1728,1509,1010,1119,917,1484,1026,907,867,1113,1221,1059,1098,950,1069,562,530,543,692,688,742,723,963,810,1219,1155,1079,1327,1334,1460,1335,1368,1438,1439,1715,1503,1275,1558,1650,1332,1649,1713,1605,1669,898,227,233,209,791,511,448,478,835,2040,2022,2052,2041,2029,2039,2036,2028,2047,1971,1921,1970,1894,1900,1934,1914,1888,1435,1384,1423,1455,1344,1134,1163,1118,1233,1447,1359,1544,1491,1849,1812,1831,1879,1867,1823,1783,1808,1888,1770,1749,1755,1801,1739,1696,1754,1673,1440,1461,1495,1440,1434,1446,1538,1487,1581,1894,1887,1855,1932,1200,1284,1215,1271,1850,1827,1781,1799,1687,1465,1384,1517,1564,2039,2026,2037,2015,2011,1989,1970,1999,1749,1513,1492,1477,1707,1703,1654,1686,1722,1995,1980,2019,1996,1860,1723,1721,1730,1976,2054,2053,2048,1952,1297,1235,738,532,539,539,941,1424,1429,1418,1123,1298,1586,1613,1249,1359,1560,1546,1485,1494,1539,1751,1631,1916,1846,1320,1225,1341,1249,1191,948,993,967,1340,868,974,935,837,1693,1971,1962,1962,1977,2040,1987,1967,2006,1819,1493,1516,1609,1809,1600,1707,1620,1762,1620,1474,1599,1683,1712,1685,1718,1608,1599,1643,1643,1498,1503,1529,1600,1496,1585,1884,1922,1850,1851,1911,1892,1856,1865,1876,1511,1475,1450,1907,1953,1967,2014,2003,1852,1792,1806,1791,1844,1907,1920,1904,1685,1384,1463,1388,1432,1456,1541,1492,1434,1559,1672,1714,1632,1550,1541,1579,1552,1626,1730,1637,1749,1756,1659,1762,1660,1736,1671,1665,1518,1717,1652,1670,1501,1666,1737,1429,1565,1552,1546,1458,1565,1619,1724,1497,1508,1558,1514,1477,1461,1562,1725,1474,1324,1229,1527,1501,1625,1726,1423,1671,1491,1553,1754,1741,1544,1656,1424,1231,1138,1284,1292,1361,1210,1379,1766,1330,1391,1370,1232,1157,1131,1298,1189,1392,1465,1386,1351,1587,1350,1198,1360,1870,1723,1758,1574,1256,1032,1021,869,945,1074,1185,1311,1244,1599,1609,1550,1724,1937,1054,1227,983,1008,826,632,1216,1146,1398,1198,1267,1254,1334,1567,1734,1805,1988,1686,1788,1800,1602,1303,1251,1212,1313,1285,1318,1347,1236,1203,1319,1299,1183,1652,1657,1681,1686,1510,1432,1570,1765,1543,1652,1220,1206,1261,1239,1298,1306,1480,1555,1647,1388,1299,1363,1230,1134,1216,1323,1468,1692,1731,1666,1582,1368,1465,1363,1479,1656,1597,1322,1273,1212,1250,1166,1253,1518,1750,1665,1764,1590,1555,1715,1655,1454,1685,1632,352,267,1588,1625,390,282,1498,1578,414,268,1516,1600,438,263,1533,1594,462,263,1446,1579,473,262,1233,1293,1263,1234,1458,1263,1301,1301,1392,1324,1234,1330,1295,1415,1284,1350,1301,1438,1527,1248,1226,1275,1203,1277,1244,1293,1245,1459,1192,1213,1176,1182,1201,1194,1186,1511,1265,1257,1298,1290,1316,1273,1307,1278,1882,1723,1781,1694,1670,1623,1829,1846,1455,1257,1363,1355,1343,1371,1352,1267,1403,1290,1440,1304,1374,1382,1399,1356,1491,1836,1639,1589,1590,1616,1616,1504,1384,1306,1372,1412,1491,1517,1557,1420,1579,1733,1888,1665,1591,1575,1616,1580,1477,1399,1309,1390,1393,1462,1541,1537,1414,1560,1707,1896,1680,1582,1593,1649,1597,1495,1464,1275,1366,1418,1454,1567,1536,1423,1504,1727,1915,1673,1588,1584,1656,1594,1504,1478,1246,1372,1399,1447,1586,1524,1426,1514,1702,1895,1185,1223,1072,885,882,1040,1023,998,1101,1300,1240,1193,897,981,1079,1012,1593,1176,1224,1104,917,882,1040,1015,946,1109,1276,1220,1223,938,987,1072,1034,1458,1969,1915,1919,1962,1969,1955,1952,1922,1864,1804,1777,1857,1874,1944,1922,1952,1691,1737,1970,1937,1977,2022,1986,1927,1970,2015,1773,1745,1772,1759,1790,1752,1856,1764,1735,1778,1781,1770,1831,1526,1922,1995,1939,1881,1879,1954,1864,1051,804,1517,1935,1984,1987,1998,1929,1989,1971,1942,2036,1953,1978,1978,1932,1993,1943,1973,2002,1575,1540,1565,1594,1570,1566,1595,1566,1777,1715,1619,1675,1550,1862,1811,1829,1770,1843,1503,1589,1511,1515,1712,1681,1701,1619,1773,1623,1712,1703,1868,1806,1866,1831,1890,1648,1685,1680,1585,1858,1797,1841,1820,1795,1531,1630,1534,1634,1627,1723,1679,1683,1749,1725,1768,1764,1733,1558,1717,1693,1783,1506,1703,1807,1618,1680,1810,1748,1622,1685,1581,1753,1614,1577,1568,1740,1636,1697,1040,1882,1905,1554,1570,1943,1871,1505,1547,1748,2002,2021,1964,1722,1314,984,1092,1314,1117,1753,1601,1544,1432,1406,1485,1483,1510,1722,1177,1103,820,1011,1323,1020,1015,1048,1109,1343,1826,1772,1878,1793,1881,1788,1871,1798,1840,1683,1626,1773,1608,1788,1727,1678,1855,1888,1786,1866,1812,1847,1838,1862,1780,1874,1755,1604,1774,1626,1763,1736,1716,1787,1794,1868,1843,1851,1879,1837,1909,1824,1966,1931,1916,1987,1885,1957,1953,2027,1943,1933,1781,1725,1796,1757,1837,1830,1828,1750,1686,1443,1266,1539,1543,1757,1436,1102,1232,1107,769,244,798,1321,1230,1388,1233,1433,1315,1258,1370,1322,1410,1290,1305,1346,1308,1471,1339,1316,1346,1357,1479,1644,900,1657,1456,1872,1926,2005,2044,2000,2012,1969,1917,1882,1631,1539,1506,1579,1641,1657,1714,1753,1803,1725,1730,1638,1713,1564,1612,1644,1334,1667,1827,1939,1864,1721,1672,1769,1938,1997,1907,1797,1667,1831,1902,1926,1786,1682,1665,1926,1906,1912,1747,1584,1931,1945,1962,1926,1871,1602,1819,1868,1875,1870,1663,954,996,993,955,1650,1487,1708,1567,1661,1618,1701,1642,1532,1847,1690,1686,1734,1693,1667,1669,1634,1683,1654,1758,1924,1740,1778,1689,1647,1811,1695,1622,1771,1640,1819,1612,1649,1656,1638,1750,1875,1899,1902,1888,1945,1918,1791,1677,1757,1644,1689,1911,1919,1878,1885,1917,1952,1978,1902,1957,1945,1884,1783,1776,1783,1798,1967,1912,1897,1886,1914,1854,1874,1916,1387,1278,1322,1595,1590,1656,1595,1729,1879,1852,1883,1831,1870,1819,1848,1915,1817,1896,1902,1708,641,489,599,1261,1051,1124,1337,1252,1139,1545,1711,1610,1624,1662,1768,1493,1676,1725,1307,1660,1535,1355,1235,1497,1623,1675,1716,1765,1662,1737,1661,1608,1587,1360,1500,1476,1515,1424,1451,1506,1434,1487,1403,1523,1440,1808,1804,1840,1899,1843,1842,1838,1842,1891,1838,1831,1875,1911,1874,1885,1850,1917,1965,1993,1928,1893,1898,1919,1921,1931,1899,1949,1938,1887,1866,1846,1897,1894,1881,1585,1391,1445,1778,1637,1582,1635,1601,1607,1665,1634,1692,1673,1660,1638,1673,1624,1638,1619,1626,1746,1666,1637,1669,1641,1623,1642,1661,1652,1937,1872,1866,1872,1887,1857,1859,1859,1930,1820,1843,1814,1851,1852,1841,1838,1848,1987,1852,1865,1865,1850,1846,1867,1860,1937,1332,1424,1437,1387,1354,1451,1603,1384,1351,1386,1515,1410,1459,1524,1912,1899,1807,1742,1803,1855,1848,1905,1856,1635,1753,1789,1659,1676,1712,1733,1624,1687,1697,1727,1671,1776,1713,1800,1608,1715,1710,1866,1808,1878,1710,1637,1900,1857,1947,1828,1855,1642,1784,1753,1779,1824,1611,1636,1731,1667,1755,1736,1580,1826,1729,1796,1725,1817,1606,1727,1627,1610,1759,1634,1125,1278,1246,1227,1296,1297,1058,1681,1606,1501,1565,1627,1563,1519,1599,1575,1578,1539,1568,1755,1817,1912,1920,1861,1537,1885,1438,1412,1773,1784,1847,1747,1714,1644,1470,1703,1706,1781,1671,1377,1291,1802,1826,1820,1480,1488,1452,1449,1682,1566,1418,1598,1530,1527,1495,1536,1479,1532,1390,1399,1538,1535,1591,1464,1476,1477,1705,1536,1530,1461,1364,1477,1489,1730,1798,1883,1810,1817,1857,1790,1751,1702,1622,1644,1793,1671,1799,1718,1744,1790,1737,1722,1869,1936,1821,1862,1808,1860,1836,1733,1673,1682,1700,1711,1771,1720,1676,1696,1814,1782,1611,1838,1702,1720,1696,1746,1609,1696,1671,1736,1806,1671,1704,1644,1768,1704,1747,1687,1594,1789,1760,1392,1489,1771,1769,1663,1691,1744,1410,1506,1542,1515,1482,1433,1589,1521,1495,1794,1762,1663,1740,1730,1661,1743,1748,1627,1654,1654,1665,1647,1600,1613,1638,1673,1663,1632,1610,1689,1614,1662,1640,1745,1642,1646,1627,1627,1709,1625,1668,1646,1709,1637,1652,1633,1701,1626,1640,1600,1713,1622,1635,1725,1769,1722,1655,1623,1642,1733,1626,1671,1631,1787,1666,1615,1627,1654,1710,1788,1849,1700,1654,1708,1812,1700,1706,1759,1834,1789,1737,1889,1885,1866,1993,1961,1957,1926,1979,1889,1821,1867,1956,2010,2016,2000,1910,1866,1921,1787,1837,1969,2019,2026,1995,2006,1946,1941,1913,1890,1918,1936,1937,1957,1967,1829,1802,1933,1915,1895,1827,1613,1623,1792,1863,1831,1661,1645,1604,1621,1630,1646,1572,1401,1363,1311,1462,1468,1523,1454,1404,1406,1508,1523,1329,1429,1546,1464,1405,1656,1707,1694,1749,1649,1685,1697,1772,1703,1678,1723,1825,1692,1686,1640,1694,1673,1714,1661,1684,1657,1732,1674,1730,1631,1641,1758,1626,1644,1662,1924,1879,1911,1921,1903,1913,1895,1893,1932,1786,1786,1797,1815,2014,2000,2011,2042,2039,2028,2025,2023,2038,2048,2027,2049,2048,2056,2054,2028,2043,1981,1852,1849,1921,1921,1937,1872,1851,1902,1447,1423,1487,1512,1731,1601,1559,1580,1592,1553,1606,1655,1446,1508,1581,1569,1531,1612,1586,1417,1558,1407,1591,1729,1934,1740,1698,1691,1680,1915,1878,1872,1819,1775,1783,1770,1819,1878,1531,1893,1979,2016,1971,1903,1895,1808,1655,1663,1762,1721,1766,1740,1800,1677,1688,1777,1658,1698,1695,1361,1481,1509,1528,1499,1589,1536,1524,1499,1563,1498,1495,1520,1563,1511,1506,1498,1514,1356,1317,1303,1260,1589,1926,1923,1903,1874,1961,1924,1926,1936,1574,1315,1258,1333,1344,1292,1305,1367,1589,1506,1474,1536,1658,1577,1526,1655,1516,1829,1626,1672,1735,1335,1666,1662,1661,1894,1206,1234,1255,1288,1269,1273,1244,1224,1485,1190,966,1178,1096,1304,1083,1126,1328,1316,1265,1259,1201,1278,1240,1372,1367,1619,1383,1283,1313,1353,1320,1315,1302,1379,1997,1460,1658,1753,1668,1559,1475,1443,1977,1910,1059,1228,1117,1251,1279,1134,1933,1985,1924,1461,1815,1830,1815,1469,1929,1947,446,625,476,485,588,522,564,400,877,599,1338,1417,1379,1239,1165,808,670,585,1044,1393,1521,1510,1423,1384,614,1256,945,1463,1431,1183,1341,1240,1292,1387,1935,1729,1718,1788,1231,69,509,1037,762,479,700,477,699,536,609,805,1229,763,1236,1432,1396,1423,1427,1415,1696,1619,1675,1604,1559,1524,1744,1762,1386,1099,1100,1219,1271,1393,1222,1258,1369,1450,1610,1556,1681,1690,1452,1303,1456,1242,298,25,30,25,907,672,1300,875,1644,1607,1658,1606,1595,1266,1652,1537,1536,1549,1865,1905,1938,1904,1938,1900,1114,854,1466,1490,1005,960,1120,1271,1422,1423,1492,1467,1567,1508,1721,1753,1559,1607,1520,1559,1567,1556,1506,1576,1969,2048,2055,2035,1938,1863,2031,2008,1820,1777,1940,1866,2043,1989,2037,1994,2033,1988,2030,1973,2056,2050,1835,1731,1972,2005,2012,1992,1758,1659,1362,1189,1239,1201,1837,2009,1764,1716,1858,1911,1825,1764,1758,1755,1946,1936,1981,1967,1953,2013,1986,1975,1660,1546,1578,1532,1560,1548,1562,1530,1465,1383,1347,1343,1308,1239,1385,1287,1889,2002,2000,1962,1999,1979,1954,1910,2010,1988,1714,1708,1657,1659,1678,1668,555,257,927,1355,1335,1219,1010,1060,908,1024,1457,1711,1619,1647,1750,1713,1588,1494,1613,1546,1605,1546,1573,1471,1443,1306,1144,1078,1332,1258,1266,1221,1441,1429,1571,1590,1512,1476,1381,1416,966,964,1428,1583,1193,797,1312,1254,1480,1477,1472,1519,1316,1159,1413,1487,1580,1688,1797,1855,1775,1832,1667,1547,1637,1611,1632,1555,1588,1491,1578,1503,1304,1307,1510,1537,1464,1365,1390,1385,1390,1370,830,502,562,450,1287,1460,1625,1525,1448,1423,1529,1509,1461,1343,1212,1121,1267,1325,1464,1495,1168,993,504,325,1554,1798,1869,1776,1639,1527,1079,1040,1429,1550,1571,1568,1570,1580,1564,1558,1836,1760,1830,1734,1877,1803,1856,1789,1347,1373,1403,1363,1437,1412,1618,1677,1633,1538,1517,1507,1513,1536,1488,1469,1858,1938,1624,1542,777,732,931,833,1192,1505,1687,1676,1610,1479,1558,1340,1227,1190,796,574,886,818,748,605,1193,1555,737,502,584,497,1592,1805,1294,1087,1092,1032,1344,1379,1214,1059,966,896,1358,1451,1461,1445,1415,1455,1676,1705,1734,1642,1890,1904,1656,1571,1115,1033,1230,1137,1043,977,958,835,1169,992,1246,1220,749,490,620,624,603,511,615,612,572,511,644,622,591,515,633,594,555,410,551,543,1662,1878,1271,1042,1116,1034,1117,1036,1160,1104,1720,1759,1644,1727,1670,1693,1691,1680,1279,1215,1567,1672,1682,1714,1867,1850,552,206,349,288,265,198,363,185,258,56,257,25,213,130,268,234,295,253,1214,1494,1562,1689,1194,1087,1073,1077,1126,1226,1504,1457,1489,1419,1824,1849,1770,1692,1606,1384,1639,1591,1495,1381,1394,1279,1321,1740,1601,1229,1522,1483,1475,1509,1493,1203,1396,1452,1432,1455,1540,1523,1492,1053,1224,1317,1450,1120,1283,1240,1131,1061,1241,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2040,1930,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2035,1875,2048,2048,1977,2048,2048,1981,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,1982,2048,2048,2048,2048,1975,2048,2048,2048,2048,2056,2048,1977,2048,2048,2048,2051,1913,2048,2048,2048,2016,1930,2048,1966,2048,1968,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2039,2002,1814,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2056,2048,2056,2056,1936,1903,2048,2048,2048,2056,2056,1956,1927,2048,2048,2048,2053,2046,1925,1961,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2051,2038,1955,1847,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2051,2048,1967,1728,2048,1979,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,1937,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2044,1880,2048,2048,2048,2048,1968,2048,2048,2048,2048,1955,2048,2048,2048,2048,2048,2048,1966,2048,2048,2048,2048,2048,2048,1966,2048,2056,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,1979,2048,1980,2048,1985,2048,2048,1975,1976,2048,1716,1959,2048,2048,2010,1877,1956,2041,2048,2024,1914,1908,2048,2048,2055,1954,1900,2015,2048,2052,1971,1909,1987,2054,2048,2004,1909,1949,2035,2048,2025,1915,1967,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,1973,2048,2048,2048,1985,2048,1977,2048,1979,1978,2048,1977,2048,2048,2048,2048,1978,2048,2048,2048,2048,1976,1976,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2014,2043,1980,2048,1975,1985,2048,2048,1977,2048,2048,1976,2048,1982,2048,1980,2048,1983,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,1978,2048,2048,2048,1975,2048,2048,2048,2048,1976,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,1985,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2019,1838,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2052,2042,2007,1993,1965,1799,1909,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1956,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1892,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,1892,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,2045,2010,2048,1990,2056,2048,1983,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,1977,2048,2048,1973,2048,1981,2048,2016,1976,2019,1933,2048,1977,2048,2048,1973,2048,1973,2048,1971,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,1985,2048,1979,2048,1975,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,1962,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2047,2031,1922,1764,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2022,1850,1947,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2057,2056,2056,2034,1857,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2054,2041,1889,1946,2048,2048,2048,2048,2048,1980,1985,2030,2026,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1918,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1943,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2056,2053,1814,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2030,1863,2048,1976,2048,1977,2038,2018,1979,2048,2048,2048,2048,2048,2037,1912,2048,2048,2048,2048,2048,2055,1937,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,1985,2048,1892,2048,1975,1998,1892,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,1979,2048,2055,2048,2048,1983,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,1894,2048,2048,2048,1947,2048,2048,2048,1951,1980,1980,2048,1975,1801,1973,1977,2048,1973,2048,2048,2048,2048,2056,2048,2048,2055,2014,1956,1718,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,1856,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,1974,2048,2048,2048,2048,1973,2048,2048,2048,2048,2053,1896,2048,2048,2048,2048,2056,2041,1838,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1896,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1952,1033,1094,1636,1385,1825,1307,969,1157,1376,1422,1459,1490,1763,1867,1883,1894,1946,1833,1888,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,1978,2048,1981,2048,1467,1345,1579,1525,1169,1371,1516,1364,883,794,863,840,893,807,2037,2048,130,25,25,1866,2054,1299,25,25,1024,1167,1376,897,2048,1944,2002,2048,2048,2048,2048,2048,2003,2048,2048,2009,2048,2048,1999,2048,2048,2048,2048,2048,2048,1889,2001,1950,1946,1944,1939,1952,1949,2008,2048,2048,2048,2048,2048,1893,1874,2048,2048,2048,2048,2007,2048,1866,2048,2048,2011,2048,2048,1999,2048,2056,2048,2048,2048,2048,2056,2001,2048,2048,2048,2048,2048,2048,1999,2048,2009,2048,1874,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,1968,2048,1874,2056,1896,2048,1884,1938,1922,2007,1921,1816,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,1979,2045,2007,2048,1968,1941,2005,1999,1938,1944,1926,1998,2048,2048,2007,2048,2048,2048,2003,2048,1991,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,1947,2048,2048,2048,2048,2048,2048,2048,1953,1944,2048,1874,2048,2048,2048,2048,2048,2048,2048,2048,1990,2048,2048,2005,2048,2048,2004,2005,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,1941,1915,2048,1918,1948,2048,1878,2006,1946,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2009,1870,1939,2003,2048,1999,1884,1826,2048,2048,2048,2048,2048,1999,1941,2006,1944,2048,2048,2048,2048,2048,2048,2048,2045,2038,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2003,2048,2048,1822,1925,1638,2048,2048,2048,2048,1922,2048,2048,2048,1979,2048,2048,1945,2048,1941,2048,1841,2048,2002,2048,2048,1746,2048,1872,2048,2048,2048,2048,2048,2048,1963,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,1952,2048,2048,2048,2048,1872,2048,2048,1967,2048,1903,1974,1925,2048,1943,2048,1939,2048,2048,2048,2048,2048,2048,2006,2048,1950,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,1999,2048,2048,2002,2048,1871,2048,2048,2048,2048,2006,2048,2048,1963,2048,2048,2048,1996,2048,1955,2048,1932,1942,1996,1930,2048,2007,2048,2048,2048,1814,1973,1942,1955,2048,2048,2048,2048,2048,1987,2048,1875,1955,1885,1939,2048,2048,2048,2048,2048,1953,2048,1971,2048,2000,1884,1727,2048,2048,2048,2048,2048,2048,2009,1893,2048,2048,2048,2003,2048,2048,2048,1961,2048,1930,2009,2048,2048,2048,2002,2048,2048,2009,2048,2048,2048,2004,2048,2048,2048,2048,2008,2048,2048,1942,2048,2048,2048,2048,1867,2048,2048,2048,2048,1944,2048,2048,2048,2018,2014,2048,2014,2048,1817,2048,1970,2048,2048,1756,2048,2048,2048,1999,2048,2048,2005,1985,2056,2048,2048,2048,2048,2048,2049,2048,2056,1937,2048,2048,2048,2048,2004,2048,2048,1942,2048,2048,2048,2048,2048,1869,2048,1874,1846,1998,2048,2048,2048,2048,2048,1183,1883,2048,2048,2048,1939,2048,2048,1979,2048,2048,1729,2048,1951,2048,1852,2048,1880,2048,1872,2048,2048,2048,1772,2048,2048,2048,2048,2048,1946,2048,2048,1919,2048,2048,1939,1923,2048,1961,2048,2048,2048,1952,2003,1919,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2022,1996,2048,2048,1975,2038,2048,2048,1197,2048,2048,2048,2048,2002,2048,2048,2048,2001,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2001,2048,2048,2048,1982,2048,2048,2048,2048,2004,2048,2048,2048,2000,2048,2007,2048,2048,2048,2048,2048,1685,1873,2048,1997,2003,1974,2056,2001,2048,2048,2048,2048,1876,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1876,2048,1880,2048,2048,2048,2048,1873,2048,2048,2048,2048,2048,2048,2048,1886,1766,1994,2048,1857,1552,2048,2000,2003,2048,2048,1939,2048,2003,2018,2018,2038,1912,1987,2048,1939,1948,2048,1943,1939,2048,1997,2048,2048,2048,1940,2048,2048,1942,2048,2048,2048,1997,2048,1984,1955,1956,2048,2048,2048,2048,1999,2048,2048,2048,2001,2048,2048,1987,2048,2048,1954,2048,1939,1953,2048,2048,1971,2048,1950,2048,2005,2048,1888,1941,2048,2048,2008,1941,1958,2048,2048,1875,2048,1958,1996,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,1998,2048,2048,2002,2016,2048,1882,2048,2048,2048,1943,2048,1936,1939,1942,1947,2048,1811,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2009,2048,2005,2003,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,1939,2003,2002,2001,2048,2048,2048,1870,1998,2048,1941,2048,2048,2048,2004,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,1940,2005,2048,2048,2009,2048,2048,2004,2048,2048,2007,2048,2048,2005,2048,2048,1879,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2004,2005,2009,2048,1941,2048,2048,1940,2048,2048,1601,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,1159,1579,2048,1943,2048,1768,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2038,1996,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2002,2048,2048,2048,2002,1999,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2055,2048,1999,2048,2048,2003,2048,2048,2048,2048,2048,2048,1872,2048,2048,2048,2048,2048,1855,2048,2048,2048,2048,2048,2048,2048,2048,1874,2048,2048,2048,1876,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1759,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2002,2048,2048,2048,2011,2048,1938,1999,2048,2048,1800,2048,2048,2048,2048,1940,1801,1598,2048,2048,2048,1872,2048,2048,2048,2048,2048,2048,2048,2002,1965,2048,1987,1896,1982,2048,2048,1869,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2001,2048,1872,2048,1999,2048,1870,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2006,1875,2048,1873,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,1999,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,1888,2048,1868,1877,2048,2048,1962,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2005,2048,2048,2048,2048,1939,2048,2048,2048,2048,1946,2048,2048,2048,1948,2048,2048,1943,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2006,2048,1957,2048,2048,2048,2002,2048,1876,2048,2048,2048,2054,2048,2048,2048,2048,2048,2048,2048,2048,2054,2048,2048,2048,2004,2048,2048,1991,2048,2048,1947,2051,2048,2048,2048,2048,2048,2048,2048,2048,1954,2048,2048,1619,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,1945,2048,2048,2048,2048,2056,1767,1707,2048,1968,1942,2048,2048,2048,2048,2048,1980,2002,2048,1927,1960,2048,2048,2048,1911,2048,2048,2011,1997,2048,2048,2048,2048,1989,2048,1998,2048,2056,1887,1630,2048,1997,2048,2048,2048,1982,2048,2048,2048,2048,1981,2048,2048,2048,1971,2048,2048,2048,2048,2048,1836,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,1985,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,1997,2048,2048,2048,1994,2048,1999,2048,2048,1995,2048,2048,2054,1837,2048,2048,1870,2048,2051,1702,1972,2048,2048,2056,2048,1993,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2055,2056,1990,2048,2048,2048,2048,1997,2048,1998,2048,2048,1997,1999,2048,2048,1962,2048,2048,2048,2048,2048,2048,2000,2048,1924,2048,1994,2048,2048,1999,2048,2048,1999,2048,2048,1989,2048,1999,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2040,1943,2048,2048,2048,2048,2048,2001,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2053,2022,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,1963,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,1985,2048,2048,2048,2048,2048,2048,2048,2048,1987,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,1961,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,1961,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2053,1915,1941,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,2048,2048,2048,1999,2048,2048,2003,2048,2048,1996,2048,2048,1988,2048,2048,2048,2037,2048,1992,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1523,1114,1107,1137,1175,1982,689,688,1347,2048,2048,837,34,34,34,34,34,158,522,343,501,554,624,677,624,517,613,558,616,522,685,699,573,647,625,774,768,768,762,777,684,1163,1004,907,906,951,923,931,968,981,973,998,962,755,1050,1329,1196,1362,1201,1374,1154,1175,1145,1183,1162,1145,1159,1151,1152,1083,941,1333,1454,1228,797,775,717,1018,1310,1210,1328,949,340,102,102,114,215,48,117,49,49,47,103,47,47,242,109,47,47,98,41,47,47,103,44,44,50,118,49,45,44,177,41,47,48,48,48,118,48,124,48,48,73,108,45,45,45,95,45,45,45,45,41,92,50,50,50,50,42,126,53,50,104,46,106,44,46,46,99,46,46,46,47,81,47,47,47,45,45,113,45,45,93,45,45,41,91,50,198,957,1203,161,50,795,1194,343,44,649,1180,481,465,1192,1240,762,829,927,352],\"successes\":[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,0,0,0,1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,0,1,0,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,1,0,1,0,1,0,1,1,0,1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,1,0,0,1,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,1,0,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,0,1,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,0,1,0,0,0,0,0,0,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,0,0,0,1,0,1,0,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,0,0,1,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,1,0,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,0,0,1,0,1,1,1,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,1,1,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,1,1,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,1,1,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,1,1,0,1,0,0,0,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,1,1,1,0,0,0,0,0,1,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,1,0,0,1,0,1,1,1,1,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,1,0,1,0,1,0,1,1,0,0,1,1,1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,1,0,0,0,1,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,1,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1,1,0,0,0,0,0,1,1,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0,1,0,1,0,1,1,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0,0,1,1,0,0,1,0,1,1,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n;\r\n            compressedData['data'] = byteArray;\r\n            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');\r\n            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, false);\r\n            Module['removeRunDependency']('datafile_C:/Dev/EDGE-pbdot/web/site/edge-classic.data');\r\n      };\r\n      Module['addRunDependency']('datafile_C:/Dev/EDGE-pbdot/web/site/edge-classic.data');\r\n\r\n      if (!Module.preloadResults) Module.preloadResults = {};\r\n\r\n        function preloadFallback(error) {\r\n          console.error(error);\r\n          console.error('falling back to default preload behavior');\r\n          fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, processPackageData, handleError);\r\n        };\r\n\r\n        openDatabase(\r\n          function(db) {\r\n            checkCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME,\r\n              function(useCached, metadata) {\r\n                Module.preloadResults[PACKAGE_NAME] = {fromCache: useCached};\r\n                if (useCached) {\r\n                  fetchCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME, metadata, processPackageData, preloadFallback);\r\n                } else {\r\n                  fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE,\r\n                    function(packageData) {\r\n                      cacheRemotePackage(db, PACKAGE_PATH + PACKAGE_NAME, packageData, {uuid:PACKAGE_UUID}, processPackageData,\r\n                        function(error) {\r\n                          console.error(error);\r\n                          processPackageData(packageData);\r\n                        });\r\n                    }\r\n                  , preloadFallback);\r\n                }\r\n              }\r\n            , preloadFallback);\r\n          }\r\n        , preloadFallback);\r\n\r\n        if (Module['setStatus']) Module['setStatus']('Downloading...');\r\n\r\n    }\r\n    if (Module['calledRun']) {\r\n      runWithFS();\r\n    } else {\r\n      if (!Module['preRun']) Module['preRun'] = [];\r\n      Module[\"preRun\"].push(runWithFS); // FS is not initialized yet, wait for it\r\n    }\r\n\r\n    }\r\n    loadPackage({\"files\": [{\"filename\": \"/.gitkeep\", \"start\": 0, \"end\": 0}, {\"filename\": \"/edge_base/blasphemer/graphics/AUTOPAGE.png\", \"start\": 0, \"end\": 42807}, {\"filename\": \"/edge_base/blasphemer/graphics/M_DOOM.lmp\", \"start\": 42807, \"end\": 49300}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSCNTR.lmp\", \"start\": 49300, \"end\": 49492}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSLEFT.lmp\", \"start\": 49492, \"end\": 49684}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSRGHT.lmp\", \"start\": 49684, \"end\": 49876}, {\"filename\": \"/edge_base/blasphemer/graphics/M_SKULL1.lmp\", \"start\": 49876, \"end\": 50448}, {\"filename\": \"/edge_base/blasphemer/graphics/M_SKULL2.lmp\", \"start\": 50448, \"end\": 51020}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERML.lmp\", \"start\": 51020, \"end\": 51154}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMM.lmp\", \"start\": 51154, \"end\": 51360}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMO.lmp\", \"start\": 51360, \"end\": 51468}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMR.lmp\", \"start\": 51468, \"end\": 51602}, {\"filename\": \"/edge_base/blasphemer/graphics/NULL.png\", \"start\": 51602, \"end\": 52762}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARL.lmp\", \"start\": 52762, \"end\": 55473}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARR.lmp\", \"start\": 55473, \"end\": 58184}, {\"filename\": \"/edge_base/blasphemer/graphics/_IN1.png\", \"start\": 58184, \"end\": 59371}, {\"filename\": \"/edge_base/blasphemer/scripts/anims.ddf\", \"start\": 59371, \"end\": 60849}, {\"filename\": \"/edge_base/blasphemer/scripts/attacks.ddf\", \"start\": 60849, \"end\": 102518}, {\"filename\": \"/edge_base/blasphemer/scripts/coal_hud.ec\", \"start\": 102518, \"end\": 118231}, {\"filename\": \"/edge_base/blasphemer/scripts/flats.ddf\", \"start\": 118231, \"end\": 118788}, {\"filename\": \"/edge_base/blasphemer/scripts/fonts.ddf\", \"start\": 118788, \"end\": 119836}, {\"filename\": \"/edge_base/blasphemer/scripts/games.ddf\", \"start\": 119836, \"end\": 122570}, {\"filename\": \"/edge_base/blasphemer/scripts/images.ddf\", \"start\": 122570, \"end\": 123996}, {\"filename\": \"/edge_base/blasphemer/scripts/language.ldf\", \"start\": 123996, \"end\": 132497}, {\"filename\": \"/edge_base/blasphemer/scripts/levels.ddf\", \"start\": 132497, \"end\": 145367}, {\"filename\": \"/edge_base/blasphemer/scripts/lines.ddf\", \"start\": 145367, \"end\": 150202}, {\"filename\": \"/edge_base/blasphemer/scripts/playlist.ddf\", \"start\": 150202, \"end\": 152358}, {\"filename\": \"/edge_base/blasphemer/scripts/rscript.rts\", \"start\": 152358, \"end\": 165402}, {\"filename\": \"/edge_base/blasphemer/scripts/sectors.ddf\", \"start\": 165402, \"end\": 166886}, {\"filename\": \"/edge_base/blasphemer/scripts/sounds.ddf\", \"start\": 166886, \"end\": 178082}, {\"filename\": \"/edge_base/blasphemer/scripts/styles.ddf\", \"start\": 178082, \"end\": 182556}, {\"filename\": \"/edge_base/blasphemer/scripts/switch.ddf\", \"start\": 182556, \"end\": 182969}, {\"filename\": \"/edge_base/blasphemer/scripts/things.ddf\", \"start\": 182969, \"end\": 266803}, {\"filename\": \"/edge_base/blasphemer/scripts/weapons.ddf\", \"start\": 266803, \"end\": 277121}, {\"filename\": \"/edge_base/doom/graphics/CREDIT.lmp\", \"start\": 277121, \"end\": 396409}, {\"filename\": \"/edge_base/doom/graphics/ENDPIC.lmp\", \"start\": 396409, \"end\": 515697}, {\"filename\": \"/edge_base/doom/graphics/HELP1.lmp\", \"start\": 515697, \"end\": 634985}, {\"filename\": \"/edge_base/doom/graphics/INTERPIC.lmp\", \"start\": 634985, \"end\": 754273}, {\"filename\": \"/edge_base/doom/graphics/PFUB1.lmp\", \"start\": 754273, \"end\": 873561}, {\"filename\": \"/edge_base/doom/graphics/PFUB2.lmp\", \"start\": 873561, \"end\": 992849}, {\"filename\": \"/edge_base/doom/graphics/TITLEPIC.lmp\", \"start\": 992849, \"end\": 1112137}, {\"filename\": \"/edge_base/doom/graphics/VICTORY2.lmp\", \"start\": 1112137, \"end\": 1231425}, {\"filename\": \"/edge_base/doom/graphics/WIA20000.lmp\", \"start\": 1231425, \"end\": 1260545}, {\"filename\": \"/edge_base/doom/graphics/WIA20001.lmp\", \"start\": 1260545, \"end\": 1289665}, {\"filename\": \"/edge_base/doom/graphics/WIA20002.lmp\", \"start\": 1289665, \"end\": 1318785}, {\"filename\": \"/edge_base/doom/graphics/WIA20400.lmp\", \"start\": 1318785, \"end\": 1324383}, {\"filename\": \"/edge_base/doom/graphics/WIA20401.lmp\", \"start\": 1324383, \"end\": 1329981}, {\"filename\": \"/edge_base/doom/graphics/WIA20402.lmp\", \"start\": 1329981, \"end\": 1335579}, {\"filename\": \"/edge_base/doom/graphics/WIA20500.lmp\", \"start\": 1335579, \"end\": 1348787}, {\"filename\": \"/edge_base/doom/graphics/WIA20501.lmp\", \"start\": 1348787, \"end\": 1361995}, {\"filename\": \"/edge_base/doom/graphics/WIA20502.lmp\", \"start\": 1361995, \"end\": 1375203}, {\"filename\": \"/edge_base/doom/graphics/WIMAP0.lmp\", \"start\": 1375203, \"end\": 1494491}, {\"filename\": \"/edge_base/doom/graphics/WIMAP1.lmp\", \"start\": 1494491, \"end\": 1613779}, {\"filename\": \"/edge_base/doom/graphics/WIMAP2.lmp\", \"start\": 1613779, \"end\": 1733067}, {\"filename\": \"/edge_base/doom/scripts/images.ddf\", \"start\": 1733067, \"end\": 1734905}, {\"filename\": \"/edge_base/doom/textures/SKY1_B.png\", \"start\": 1734905, \"end\": 1749548}, {\"filename\": \"/edge_base/doom/textures/SKY1_E.png\", \"start\": 1749548, \"end\": 1772727}, {\"filename\": \"/edge_base/doom/textures/SKY1_N.png\", \"start\": 1772727, \"end\": 1795614}, {\"filename\": \"/edge_base/doom/textures/SKY1_S.png\", \"start\": 1795614, \"end\": 1818239}, {\"filename\": \"/edge_base/doom/textures/SKY1_T.png\", \"start\": 1818239, \"end\": 1845431}, {\"filename\": \"/edge_base/doom/textures/SKY1_W.png\", \"start\": 1845431, \"end\": 1868274}, {\"filename\": \"/edge_base/doom/textures/SKY2_B.png\", \"start\": 1868274, \"end\": 1885141}, {\"filename\": \"/edge_base/doom/textures/SKY2_E.png\", \"start\": 1885141, \"end\": 1911710}, {\"filename\": \"/edge_base/doom/textures/SKY2_N.png\", \"start\": 1911710, \"end\": 1938566}, {\"filename\": \"/edge_base/doom/textures/SKY2_S.png\", \"start\": 1938566, \"end\": 1966066}, {\"filename\": \"/edge_base/doom/textures/SKY2_T.png\", \"start\": 1966066, \"end\": 1990420}, {\"filename\": \"/edge_base/doom/textures/SKY2_W.png\", \"start\": 1990420, \"end\": 2016607}, {\"filename\": \"/edge_base/doom/textures/SKY3_B.png\", \"start\": 2016607, \"end\": 2028590}, {\"filename\": \"/edge_base/doom/textures/SKY3_E.png\", \"start\": 2028590, \"end\": 2048156}, {\"filename\": \"/edge_base/doom/textures/SKY3_N.png\", \"start\": 2048156, \"end\": 2067857}, {\"filename\": \"/edge_base/doom/textures/SKY3_S.png\", \"start\": 2067857, \"end\": 2088191}, {\"filename\": \"/edge_base/doom/textures/SKY3_T.png\", \"start\": 2088191, \"end\": 2112634}, {\"filename\": \"/edge_base/doom/textures/SKY3_W.png\", \"start\": 2112634, \"end\": 2131679}, {\"filename\": \"/edge_base/doom/textures/SKY4_B.png\", \"start\": 2131679, \"end\": 2170015}, {\"filename\": \"/edge_base/doom/textures/SKY4_E.png\", \"start\": 2170015, \"end\": 2182624}, {\"filename\": \"/edge_base/doom/textures/SKY4_N.png\", \"start\": 2182624, \"end\": 2194340}, {\"filename\": \"/edge_base/doom/textures/SKY4_S.png\", \"start\": 2194340, \"end\": 2206056}, {\"filename\": \"/edge_base/doom/textures/SKY4_T.png\", \"start\": 2206056, \"end\": 2244392}, {\"filename\": \"/edge_base/doom/textures/SKY4_W.png\", \"start\": 2244392, \"end\": 2257001}, {\"filename\": \"/edge_base/doom1/graphics/CREDIT.lmp\", \"start\": 2257001, \"end\": 2376289}, {\"filename\": \"/edge_base/doom1/graphics/HELP1.lmp\", \"start\": 2376289, \"end\": 2495577}, {\"filename\": \"/edge_base/doom1/graphics/HELP2.lmp\", \"start\": 2495577, \"end\": 2614865}, {\"filename\": \"/edge_base/doom1/graphics/TITLEPIC.lmp\", \"start\": 2614865, \"end\": 2734153}, {\"filename\": \"/edge_base/doom1/graphics/WIMAP0.lmp\", \"start\": 2734153, \"end\": 2853441}, {\"filename\": \"/edge_base/doom1/scripts/images.ddf\", \"start\": 2853441, \"end\": 2855293}, {\"filename\": \"/edge_base/doom1/textures/SKY1_B.png\", \"start\": 2855293, \"end\": 2869936}, {\"filename\": \"/edge_base/doom1/textures/SKY1_E.png\", \"start\": 2869936, \"end\": 2893115}, {\"filename\": \"/edge_base/doom1/textures/SKY1_N.png\", \"start\": 2893115, \"end\": 2916002}, {\"filename\": \"/edge_base/doom1/textures/SKY1_S.png\", \"start\": 2916002, \"end\": 2938627}, {\"filename\": \"/edge_base/doom1/textures/SKY1_T.png\", \"start\": 2938627, \"end\": 2965819}, {\"filename\": \"/edge_base/doom1/textures/SKY1_W.png\", \"start\": 2965819, \"end\": 2988662}, {\"filename\": \"/edge_base/doom2/graphics/BOSSBACK.lmp\", \"start\": 2988662, \"end\": 3107950}, {\"filename\": \"/edge_base/doom2/graphics/CREDIT.lmp\", \"start\": 3107950, \"end\": 3227238}, {\"filename\": \"/edge_base/doom2/graphics/HELP.lmp\", \"start\": 3227238, \"end\": 3346526}, {\"filename\": \"/edge_base/doom2/graphics/INTERPIC.lmp\", \"start\": 3346526, \"end\": 3465814}, {\"filename\": \"/edge_base/doom2/graphics/TITLEPIC.lmp\", \"start\": 3465814, \"end\": 3585102}, {\"filename\": \"/edge_base/doom2/scripts/images.ddf\", \"start\": 3585102, \"end\": 3586533}, {\"filename\": \"/edge_base/doom2/textures/SKY1_B.png\", \"start\": 3586533, \"end\": 3607813}, {\"filename\": \"/edge_base/doom2/textures/SKY1_E.png\", \"start\": 3607813, \"end\": 3625493}, {\"filename\": \"/edge_base/doom2/textures/SKY1_N.png\", \"start\": 3625493, \"end\": 3643173}, {\"filename\": \"/edge_base/doom2/textures/SKY1_S.png\", \"start\": 3643173, \"end\": 3660853}, {\"filename\": \"/edge_base/doom2/textures/SKY1_T.png\", \"start\": 3660853, \"end\": 3682133}, {\"filename\": \"/edge_base/doom2/textures/SKY1_W.png\", \"start\": 3682133, \"end\": 3699813}, {\"filename\": \"/edge_base/doom2/textures/SKY2_B.png\", \"start\": 3699813, \"end\": 3713736}, {\"filename\": \"/edge_base/doom2/textures/SKY2_E.png\", \"start\": 3713736, \"end\": 3738955}, {\"filename\": \"/edge_base/doom2/textures/SKY2_N.png\", \"start\": 3738955, \"end\": 3764187}, {\"filename\": \"/edge_base/doom2/textures/SKY2_S.png\", \"start\": 3764187, \"end\": 3789390}, {\"filename\": \"/edge_base/doom2/textures/SKY2_T.png\", \"start\": 3789390, \"end\": 3814142}, {\"filename\": \"/edge_base/doom2/textures/SKY2_W.png\", \"start\": 3814142, \"end\": 3839346}, {\"filename\": \"/edge_base/doom2/textures/SKY3_B.png\", \"start\": 3839346, \"end\": 3922916}, {\"filename\": \"/edge_base/doom2/textures/SKY3_E.png\", \"start\": 3922916, \"end\": 4017725}, {\"filename\": \"/edge_base/doom2/textures/SKY3_N.png\", \"start\": 4017725, \"end\": 4116496}, {\"filename\": \"/edge_base/doom2/textures/SKY3_S.png\", \"start\": 4116496, \"end\": 4215267}, {\"filename\": \"/edge_base/doom2/textures/SKY3_T.png\", \"start\": 4215267, \"end\": 4401758}, {\"filename\": \"/edge_base/doom2/textures/SKY3_W.png\", \"start\": 4401758, \"end\": 4496567}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARL.lmp\", \"start\": 4496567, \"end\": 4499978}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARR.lmp\", \"start\": 4499978, \"end\": 4503389}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT033.png\", \"start\": 4503389, \"end\": 4503734}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT034.png\", \"start\": 4503734, \"end\": 4504081}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT035.png\", \"start\": 4504081, \"end\": 4504512}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT036.png\", \"start\": 4504512, \"end\": 4504921}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT037.png\", \"start\": 4504921, \"end\": 4505342}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT038.png\", \"start\": 4505342, \"end\": 4505789}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT039.png\", \"start\": 4505789, \"end\": 4506110}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT040.png\", \"start\": 4506110, \"end\": 4506500}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT041.png\", \"start\": 4506500, \"end\": 4506889}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT042.png\", \"start\": 4506889, \"end\": 4507340}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT043.png\", \"start\": 4507340, \"end\": 4507699}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT044.png\", \"start\": 4507699, \"end\": 4508023}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT045.png\", \"start\": 4508023, \"end\": 4508336}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT046.png\", \"start\": 4508336, \"end\": 4508632}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT047.png\", \"start\": 4508632, \"end\": 4509055}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT048.png\", \"start\": 4509055, \"end\": 4509460}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT049.png\", \"start\": 4509460, \"end\": 4509840}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT050.png\", \"start\": 4509840, \"end\": 4510248}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT051.png\", \"start\": 4510248, \"end\": 4510711}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT052.png\", \"start\": 4510711, \"end\": 4511130}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT053.png\", \"start\": 4511130, \"end\": 4511538}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT054.png\", \"start\": 4511538, \"end\": 4511946}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT055.png\", \"start\": 4511946, \"end\": 4512350}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT056.png\", \"start\": 4512350, \"end\": 4512822}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT057.png\", \"start\": 4512822, \"end\": 4513237}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT058.png\", \"start\": 4513237, \"end\": 4513585}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT059.png\", \"start\": 4513585, \"end\": 4513946}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT060.png\", \"start\": 4513946, \"end\": 4514315}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT061.png\", \"start\": 4514315, \"end\": 4514656}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT062.png\", \"start\": 4514656, \"end\": 4515077}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT063.png\", \"start\": 4515077, \"end\": 4515480}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT064.png\", \"start\": 4515480, \"end\": 4515898}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT065.png\", \"start\": 4515898, \"end\": 4516401}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT066.png\", \"start\": 4516401, \"end\": 4516826}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT067.png\", \"start\": 4516826, \"end\": 4517229}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT068.png\", \"start\": 4517229, \"end\": 4517662}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT069.png\", \"start\": 4517662, \"end\": 4518078}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT070.png\", \"start\": 4518078, \"end\": 4518483}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT071.png\", \"start\": 4518483, \"end\": 4518902}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT072.png\", \"start\": 4518902, \"end\": 4519327}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT073.png\", \"start\": 4519327, \"end\": 4519729}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT074.png\", \"start\": 4519729, \"end\": 4520198}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT075.png\", \"start\": 4520198, \"end\": 4520632}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT076.png\", \"start\": 4520632, \"end\": 4521021}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT077.png\", \"start\": 4521021, \"end\": 4521476}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT078.png\", \"start\": 4521476, \"end\": 4521986}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT079.png\", \"start\": 4521986, \"end\": 4522396}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT080.png\", \"start\": 4522396, \"end\": 4522803}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT081.png\", \"start\": 4522803, \"end\": 4523220}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT082.png\", \"start\": 4523220, \"end\": 4523639}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT083.png\", \"start\": 4523639, \"end\": 4524065}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT084.png\", \"start\": 4524065, \"end\": 4524450}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT085.png\", \"start\": 4524450, \"end\": 4524865}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT086.png\", \"start\": 4524865, \"end\": 4525289}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT087.png\", \"start\": 4525289, \"end\": 4525734}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT088.png\", \"start\": 4525734, \"end\": 4526160}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT089.png\", \"start\": 4526160, \"end\": 4526625}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT090.png\", \"start\": 4526625, \"end\": 4527043}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT091.png\", \"start\": 4527043, \"end\": 4527430}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT092.png\", \"start\": 4527430, \"end\": 4527864}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT093.png\", \"start\": 4527864, \"end\": 4528260}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT094.png\", \"start\": 4528260, \"end\": 4528611}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT095.png\", \"start\": 4528611, \"end\": 4528924}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT096.png\", \"start\": 4528924, \"end\": 4529244}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT097.png\", \"start\": 4529244, \"end\": 4529702}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT098.png\", \"start\": 4529702, \"end\": 4530102}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT099.png\", \"start\": 4530102, \"end\": 4530536}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT100.png\", \"start\": 4530536, \"end\": 4530943}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT101.png\", \"start\": 4530943, \"end\": 4531339}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT102.png\", \"start\": 4531339, \"end\": 4531730}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT103.png\", \"start\": 4531730, \"end\": 4532174}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT104.png\", \"start\": 4532174, \"end\": 4532576}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT105.png\", \"start\": 4532576, \"end\": 4532956}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT106.png\", \"start\": 4532956, \"end\": 4533400}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT107.png\", \"start\": 4533400, \"end\": 4533869}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT108.png\", \"start\": 4533869, \"end\": 4534243}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT109.png\", \"start\": 4534243, \"end\": 4534664}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT110.png\", \"start\": 4534664, \"end\": 4535080}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT111.png\", \"start\": 4535080, \"end\": 4535529}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT112.png\", \"start\": 4535529, \"end\": 4535919}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT113.png\", \"start\": 4535919, \"end\": 4536377}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT114.png\", \"start\": 4536377, \"end\": 4536774}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT115.png\", \"start\": 4536774, \"end\": 4537185}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT116.png\", \"start\": 4537185, \"end\": 4537619}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT117.png\", \"start\": 4537619, \"end\": 4538021}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT118.png\", \"start\": 4538021, \"end\": 4538482}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT119.png\", \"start\": 4538482, \"end\": 4538899}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT120.png\", \"start\": 4538899, \"end\": 4539343}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT121.png\", \"start\": 4539343, \"end\": 4539736}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT122.png\", \"start\": 4539736, \"end\": 4540171}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT123.png\", \"start\": 4540171, \"end\": 4540561}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT124.png\", \"start\": 4540561, \"end\": 4540922}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT125.png\", \"start\": 4540922, \"end\": 4541310}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT126.png\", \"start\": 4541310, \"end\": 4541700}, {\"filename\": \"/edge_base/freedoom1/scripts/attacks.ddf\", \"start\": 4541700, \"end\": 4562856}, {\"filename\": \"/edge_base/freedoom1/scripts/fonts.ddf\", \"start\": 4562856, \"end\": 4563512}, {\"filename\": \"/edge_base/freedoom1/scripts/images.ddf\", \"start\": 4563512, \"end\": 4571281}, {\"filename\": \"/edge_base/freedoom1/scripts/language.ldf\", \"start\": 4571281, \"end\": 4582883}, {\"filename\": \"/edge_base/freedoom1/scripts/styles.ddf\", \"start\": 4582883, \"end\": 4588092}, {\"filename\": \"/edge_base/freedoom1/scripts/things.ddf\", \"start\": 4588092, \"end\": 4596484}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARL.lmp\", \"start\": 4596484, \"end\": 4599895}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARR.lmp\", \"start\": 4599895, \"end\": 4603306}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT033.png\", \"start\": 4603306, \"end\": 4603651}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT034.png\", \"start\": 4603651, \"end\": 4603998}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT035.png\", \"start\": 4603998, \"end\": 4604429}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT036.png\", \"start\": 4604429, \"end\": 4604838}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT037.png\", \"start\": 4604838, \"end\": 4605259}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT038.png\", \"start\": 4605259, \"end\": 4605706}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT039.png\", \"start\": 4605706, \"end\": 4606027}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT040.png\", \"start\": 4606027, \"end\": 4606417}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT041.png\", \"start\": 4606417, \"end\": 4606806}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT042.png\", \"start\": 4606806, \"end\": 4607257}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT043.png\", \"start\": 4607257, \"end\": 4607616}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT044.png\", \"start\": 4607616, \"end\": 4607940}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT045.png\", \"start\": 4607940, \"end\": 4608253}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT046.png\", \"start\": 4608253, \"end\": 4608549}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT047.png\", \"start\": 4608549, \"end\": 4608972}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT048.png\", \"start\": 4608972, \"end\": 4609377}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT049.png\", \"start\": 4609377, \"end\": 4609757}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT050.png\", \"start\": 4609757, \"end\": 4610165}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT051.png\", \"start\": 4610165, \"end\": 4610628}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT052.png\", \"start\": 4610628, \"end\": 4611047}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT053.png\", \"start\": 4611047, \"end\": 4611455}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT054.png\", \"start\": 4611455, \"end\": 4611863}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT055.png\", \"start\": 4611863, \"end\": 4612267}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT056.png\", \"start\": 4612267, \"end\": 4612739}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT057.png\", \"start\": 4612739, \"end\": 4613154}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT058.png\", \"start\": 4613154, \"end\": 4613502}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT059.png\", \"start\": 4613502, \"end\": 4613863}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT060.png\", \"start\": 4613863, \"end\": 4614232}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT061.png\", \"start\": 4614232, \"end\": 4614573}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT062.png\", \"start\": 4614573, \"end\": 4614994}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT063.png\", \"start\": 4614994, \"end\": 4615397}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT064.png\", \"start\": 4615397, \"end\": 4615815}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT065.png\", \"start\": 4615815, \"end\": 4616318}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT066.png\", \"start\": 4616318, \"end\": 4616743}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT067.png\", \"start\": 4616743, \"end\": 4617146}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT068.png\", \"start\": 4617146, \"end\": 4617579}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT069.png\", \"start\": 4617579, \"end\": 4617995}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT070.png\", \"start\": 4617995, \"end\": 4618400}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT071.png\", \"start\": 4618400, \"end\": 4618819}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT072.png\", \"start\": 4618819, \"end\": 4619244}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT073.png\", \"start\": 4619244, \"end\": 4619646}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT074.png\", \"start\": 4619646, \"end\": 4620115}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT075.png\", \"start\": 4620115, \"end\": 4620549}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT076.png\", \"start\": 4620549, \"end\": 4620938}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT077.png\", \"start\": 4620938, \"end\": 4621393}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT078.png\", \"start\": 4621393, \"end\": 4621903}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT079.png\", \"start\": 4621903, \"end\": 4622313}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT080.png\", \"start\": 4622313, \"end\": 4622720}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT081.png\", \"start\": 4622720, \"end\": 4623137}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT082.png\", \"start\": 4623137, \"end\": 4623556}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT083.png\", \"start\": 4623556, \"end\": 4623982}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT084.png\", \"start\": 4623982, \"end\": 4624367}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT085.png\", \"start\": 4624367, \"end\": 4624782}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT086.png\", \"start\": 4624782, \"end\": 4625206}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT087.png\", \"start\": 4625206, \"end\": 4625651}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT088.png\", \"start\": 4625651, \"end\": 4626077}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT089.png\", \"start\": 4626077, \"end\": 4626542}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT090.png\", \"start\": 4626542, \"end\": 4626960}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT091.png\", \"start\": 4626960, \"end\": 4627347}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT092.png\", \"start\": 4627347, \"end\": 4627781}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT093.png\", \"start\": 4627781, \"end\": 4628177}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT094.png\", \"start\": 4628177, \"end\": 4628528}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT095.png\", \"start\": 4628528, \"end\": 4628841}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT096.png\", \"start\": 4628841, \"end\": 4629161}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT097.png\", \"start\": 4629161, \"end\": 4629619}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT098.png\", \"start\": 4629619, \"end\": 4630019}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT099.png\", \"start\": 4630019, \"end\": 4630453}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT100.png\", \"start\": 4630453, \"end\": 4630860}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT101.png\", \"start\": 4630860, \"end\": 4631256}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT102.png\", \"start\": 4631256, \"end\": 4631647}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT103.png\", \"start\": 4631647, \"end\": 4632091}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT104.png\", \"start\": 4632091, \"end\": 4632493}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT105.png\", \"start\": 4632493, \"end\": 4632873}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT106.png\", \"start\": 4632873, \"end\": 4633317}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT107.png\", \"start\": 4633317, \"end\": 4633786}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT108.png\", \"start\": 4633786, \"end\": 4634160}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT109.png\", \"start\": 4634160, \"end\": 4634581}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT110.png\", \"start\": 4634581, \"end\": 4634997}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT111.png\", \"start\": 4634997, \"end\": 4635446}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT112.png\", \"start\": 4635446, \"end\": 4635836}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT113.png\", \"start\": 4635836, \"end\": 4636294}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT114.png\", \"start\": 4636294, \"end\": 4636691}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT115.png\", \"start\": 4636691, \"end\": 4637102}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT116.png\", \"start\": 4637102, \"end\": 4637536}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT117.png\", \"start\": 4637536, \"end\": 4637938}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT118.png\", \"start\": 4637938, \"end\": 4638399}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT119.png\", \"start\": 4638399, \"end\": 4638816}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT120.png\", \"start\": 4638816, \"end\": 4639260}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT121.png\", \"start\": 4639260, \"end\": 4639653}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT122.png\", \"start\": 4639653, \"end\": 4640088}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT123.png\", \"start\": 4640088, \"end\": 4640478}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT124.png\", \"start\": 4640478, \"end\": 4640839}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT125.png\", \"start\": 4640839, \"end\": 4641227}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT126.png\", \"start\": 4641227, \"end\": 4641617}, {\"filename\": \"/edge_base/freedoom2/scripts/attacks.ddf\", \"start\": 4641617, \"end\": 4662773}, {\"filename\": \"/edge_base/freedoom2/scripts/fonts.ddf\", \"start\": 4662773, \"end\": 4663429}, {\"filename\": \"/edge_base/freedoom2/scripts/images.ddf\", \"start\": 4663429, \"end\": 4671198}, {\"filename\": \"/edge_base/freedoom2/scripts/language.ldf\", \"start\": 4671198, \"end\": 4682661}, {\"filename\": \"/edge_base/freedoom2/scripts/styles.ddf\", \"start\": 4682661, \"end\": 4687498}, {\"filename\": \"/edge_base/freedoom2/scripts/things.ddf\", \"start\": 4687498, \"end\": 4695887}, {\"filename\": \"/edge_base/hacx/graphics/CREDIT.lmp\", \"start\": 4695887, \"end\": 4815175}, {\"filename\": \"/edge_base/hacx/graphics/HELP.lmp\", \"start\": 4815175, \"end\": 4934463}, {\"filename\": \"/edge_base/hacx/graphics/INTERPIC.lmp\", \"start\": 4934463, \"end\": 5053751}, {\"filename\": \"/edge_base/hacx/graphics/M_CONTRL.png\", \"start\": 5053751, \"end\": 5054356}, {\"filename\": \"/edge_base/hacx/graphics/M_EPISOD.lmp\", \"start\": 5054356, \"end\": 5057846}, {\"filename\": \"/edge_base/hacx/graphics/M_GAMEPL.png\", \"start\": 5057846, \"end\": 5058718}, {\"filename\": \"/edge_base/hacx/graphics/M_JKILL.lmp\", \"start\": 5058718, \"end\": 5063308}, {\"filename\": \"/edge_base/hacx/graphics/M_LOADG.lmp\", \"start\": 5063308, \"end\": 5065712}, {\"filename\": \"/edge_base/hacx/graphics/M_MSETTL.png\", \"start\": 5065712, \"end\": 5066476}, {\"filename\": \"/edge_base/hacx/graphics/M_NGAME.lmp\", \"start\": 5066476, \"end\": 5068603}, {\"filename\": \"/edge_base/hacx/graphics/M_RDTHIS.lmp\", \"start\": 5068603, \"end\": 5071112}, {\"filename\": \"/edge_base/hacx/graphics/M_SFXOPT.png\", \"start\": 5071112, \"end\": 5071820}, {\"filename\": \"/edge_base/hacx/graphics/M_VIDEO.png\", \"start\": 5071820, \"end\": 5072559}, {\"filename\": \"/edge_base/hacx/graphics/STBARL.lmp\", \"start\": 5072559, \"end\": 5075970}, {\"filename\": \"/edge_base/hacx/graphics/STBARR.lmp\", \"start\": 5075970, \"end\": 5079381}, {\"filename\": \"/edge_base/hacx/graphics/TITLEPIC.lmp\", \"start\": 5079381, \"end\": 5198669}, {\"filename\": \"/edge_base/hacx/scripts/anims.ddf\", \"start\": 5198669, \"end\": 5201841}, {\"filename\": \"/edge_base/hacx/scripts/attacks.ddf\", \"start\": 5201841, \"end\": 5209339}, {\"filename\": \"/edge_base/hacx/scripts/colmap.ddf\", \"start\": 5209339, \"end\": 5209617}, {\"filename\": \"/edge_base/hacx/scripts/fonts.ddf\", \"start\": 5209617, \"end\": 5210263}, {\"filename\": \"/edge_base/hacx/scripts/language.ldf\", \"start\": 5210263, \"end\": 5216263}, {\"filename\": \"/edge_base/hacx/scripts/lines.ddf\", \"start\": 5216263, \"end\": 5217151}, {\"filename\": \"/edge_base/hacx/scripts/playlist.ddf\", \"start\": 5217151, \"end\": 5218632}, {\"filename\": \"/edge_base/hacx/scripts/styles.ddf\", \"start\": 5218632, \"end\": 5219682}, {\"filename\": \"/edge_base/hacx/scripts/switch.ddf\", \"start\": 5219682, \"end\": 5222891}, {\"filename\": \"/edge_base/hacx/scripts/things.ddf\", \"start\": 5222891, \"end\": 5310397}, {\"filename\": \"/edge_base/hacx/scripts/weapons.ddf\", \"start\": 5310397, \"end\": 5315688}, {\"filename\": \"/edge_base/hacx/sprites/CHGFA0.lmp\", \"start\": 5315688, \"end\": 5330492}, {\"filename\": \"/edge_base/hacx/sprites/CHGFB0.lmp\", \"start\": 5330492, \"end\": 5345518}, {\"filename\": \"/edge_base/hacx/sprites/CHGGA0.lmp\", \"start\": 5345518, \"end\": 5360092}, {\"filename\": \"/edge_base/hacx/sprites/CHGGB0.lmp\", \"start\": 5360092, \"end\": 5366449}, {\"filename\": \"/edge_base/hacx/sprites/MISFA0.lmp\", \"start\": 5366449, \"end\": 5406721}, {\"filename\": \"/edge_base/hacx/sprites/MISFB0.lmp\", \"start\": 5406721, \"end\": 5441887}, {\"filename\": \"/edge_base/hacx/sprites/MISFC0.lmp\", \"start\": 5441887, \"end\": 5475040}, {\"filename\": \"/edge_base/hacx/sprites/MISFD0.lmp\", \"start\": 5475040, \"end\": 5511423}, {\"filename\": \"/edge_base/hacx/sprites/MISGA0.lmp\", \"start\": 5511423, \"end\": 5542953}, {\"filename\": \"/edge_base/hacx/sprites/MISGB0.lmp\", \"start\": 5542953, \"end\": 5578059}, {\"filename\": \"/edge_base/hacx/sprites/PISGD0.lmp\", \"start\": 5578059, \"end\": 5602202}, {\"filename\": \"/edge_base/hacx/sprites/PISGE0.lmp\", \"start\": 5602202, \"end\": 5631868}, {\"filename\": \"/edge_base/hacx/sprites/PLSGA0.lmp\", \"start\": 5631868, \"end\": 5642732}, {\"filename\": \"/edge_base/hacx/sprites/PLSGB0.lmp\", \"start\": 5642732, \"end\": 5656126}, {\"filename\": \"/edge_base/hacx/sprites/SAWGA0.lmp\", \"start\": 5656126, \"end\": 5670575}, {\"filename\": \"/edge_base/hacx/sprites/SAWGB0.lmp\", \"start\": 5670575, \"end\": 5684683}, {\"filename\": \"/edge_base/hacx/sprites/SAWGC0.lmp\", \"start\": 5684683, \"end\": 5693768}, {\"filename\": \"/edge_base/hacx/sprites/SAWGD0.lmp\", \"start\": 5693768, \"end\": 5702853}, {\"filename\": \"/edge_base/hacx/sprites/SHT2A0.lmp\", \"start\": 5702853, \"end\": 5718364}, {\"filename\": \"/edge_base/hacx/sprites/SHT2B0.lmp\", \"start\": 5718364, \"end\": 5734105}, {\"filename\": \"/edge_base/hacx/sprites/SHT2C0.lmp\", \"start\": 5734105, \"end\": 5750138}, {\"filename\": \"/edge_base/hacx/sprites/SHT2D0.lmp\", \"start\": 5750138, \"end\": 5766265}, {\"filename\": \"/edge_base/hacx/sprites/SHT2E0.lmp\", \"start\": 5766265, \"end\": 5782551}, {\"filename\": \"/edge_base/hacx/sprites/SHT2F0.lmp\", \"start\": 5782551, \"end\": 5798705}, {\"filename\": \"/edge_base/hacx/sprites/SHT2G0.lmp\", \"start\": 5798705, \"end\": 5814521}, {\"filename\": \"/edge_base/hacx/sprites/SHT2H0.lmp\", \"start\": 5814521, \"end\": 5830032}, {\"filename\": \"/edge_base/hacx/sprites/SHT2I0.lmp\", \"start\": 5830032, \"end\": 5845715}, {\"filename\": \"/edge_base/hacx/sprites/SHT2J0.lmp\", \"start\": 5845715, \"end\": 5861920}, {\"filename\": \"/edge_base/hacx/sprites/SHTFA0.lmp\", \"start\": 5861920, \"end\": 5870982}, {\"filename\": \"/edge_base/hacx/sprites/SHTFB0.lmp\", \"start\": 5870982, \"end\": 5880473}, {\"filename\": \"/edge_base/hacx/sprites/SHTGA0.lmp\", \"start\": 5880473, \"end\": 5889132}, {\"filename\": \"/edge_base/hacx/sprites/SHTGB0.lmp\", \"start\": 5889132, \"end\": 5902214}, {\"filename\": \"/edge_base/hacx/sprites/SHTGC0.lmp\", \"start\": 5902214, \"end\": 5921453}, {\"filename\": \"/edge_base/hacx/sprites/SHTGD0.lmp\", \"start\": 5921453, \"end\": 5939700}, {\"filename\": \"/edge_base/harmony/ENDOOM.bin\", \"start\": 5939700, \"end\": 5943700}, {\"filename\": \"/edge_base/harmony/graphics/BOSSBACK.lmp\", \"start\": 5943700, \"end\": 6034446}, {\"filename\": \"/edge_base/harmony/graphics/CREDIT.lmp\", \"start\": 6034446, \"end\": 6125192}, {\"filename\": \"/edge_base/harmony/graphics/HELP.lmp\", \"start\": 6125192, \"end\": 6214234}, {\"filename\": \"/edge_base/harmony/graphics/INTERPIC.lmp\", \"start\": 6214234, \"end\": 6304980}, {\"filename\": \"/edge_base/harmony/graphics/M_CONTRL.png\", \"start\": 6304980, \"end\": 6305443}, {\"filename\": \"/edge_base/harmony/graphics/M_EPISOD.lmp\", \"start\": 6305443, \"end\": 6308640}, {\"filename\": \"/edge_base/harmony/graphics/M_GAMEPL.png\", \"start\": 6308640, \"end\": 6309284}, {\"filename\": \"/edge_base/harmony/graphics/M_JKILL.lmp\", \"start\": 6309284, \"end\": 6310702}, {\"filename\": \"/edge_base/harmony/graphics/M_MSETTL.png\", \"start\": 6310702, \"end\": 6311240}, {\"filename\": \"/edge_base/harmony/graphics/M_NEWG.lmp\", \"start\": 6311240, \"end\": 6313614}, {\"filename\": \"/edge_base/harmony/graphics/M_NGAME.lmp\", \"start\": 6313614, \"end\": 6314564}, {\"filename\": \"/edge_base/harmony/graphics/M_OPTTTL.png\", \"start\": 6314564, \"end\": 6315876}, {\"filename\": \"/edge_base/harmony/graphics/M_RDTHIS.lmp\", \"start\": 6315876, \"end\": 6317735}, {\"filename\": \"/edge_base/harmony/graphics/M_SAVEG.lmp\", \"start\": 6317735, \"end\": 6318748}, {\"filename\": \"/edge_base/harmony/graphics/M_SFXOPT.png\", \"start\": 6318748, \"end\": 6319238}, {\"filename\": \"/edge_base/harmony/graphics/M_SVOL.png\", \"start\": 6319238, \"end\": 6320695}, {\"filename\": \"/edge_base/harmony/graphics/M_THERML.png\", \"start\": 6320695, \"end\": 6321635}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMM.png\", \"start\": 6321635, \"end\": 6322564}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMO.png\", \"start\": 6322564, \"end\": 6323479}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMR.png\", \"start\": 6323479, \"end\": 6324417}, {\"filename\": \"/edge_base/harmony/graphics/M_VIDEO.png\", \"start\": 6324417, \"end\": 6324928}, {\"filename\": \"/edge_base/harmony/graphics/STBARL.lmp\", \"start\": 6324928, \"end\": 6328339}, {\"filename\": \"/edge_base/harmony/graphics/STBARR.lmp\", \"start\": 6328339, \"end\": 6331750}, {\"filename\": \"/edge_base/harmony/graphics/STDISK.png\", \"start\": 6331750, \"end\": 6332727}, {\"filename\": \"/edge_base/harmony/graphics/TITLEPIC.lmp\", \"start\": 6332727, \"end\": 6421769}, {\"filename\": \"/edge_base/harmony/graphics/WICOLON.lmp\", \"start\": 6421769, \"end\": 6421871}, {\"filename\": \"/edge_base/harmony/graphics/WIF.lmp\", \"start\": 6421871, \"end\": 6421919}, {\"filename\": \"/edge_base/harmony/graphics/WIFRGS.lmp\", \"start\": 6421919, \"end\": 6423050}, {\"filename\": \"/edge_base/harmony/graphics/WIKILRS.lmp\", \"start\": 6423050, \"end\": 6423523}, {\"filename\": \"/edge_base/harmony/graphics/WIMINUS.lmp\", \"start\": 6423523, \"end\": 6423643}, {\"filename\": \"/edge_base/harmony/graphics/WIMSTT.lmp\", \"start\": 6423643, \"end\": 6424743}, {\"filename\": \"/edge_base/harmony/graphics/WINUM0.lmp\", \"start\": 6424743, \"end\": 6424993}, {\"filename\": \"/edge_base/harmony/graphics/WINUM1.lmp\", \"start\": 6424993, \"end\": 6425139}, {\"filename\": \"/edge_base/harmony/graphics/WINUM2.lmp\", \"start\": 6425139, \"end\": 6425425}, {\"filename\": \"/edge_base/harmony/graphics/WINUM3.lmp\", \"start\": 6425425, \"end\": 6425678}, {\"filename\": \"/edge_base/harmony/graphics/WINUM4.lmp\", \"start\": 6425678, \"end\": 6425902}, {\"filename\": \"/edge_base/harmony/graphics/WINUM5.lmp\", \"start\": 6425902, \"end\": 6426157}, {\"filename\": \"/edge_base/harmony/graphics/WINUM6.lmp\", \"start\": 6426157, \"end\": 6426419}, {\"filename\": \"/edge_base/harmony/graphics/WINUM7.lmp\", \"start\": 6426419, \"end\": 6426636}, {\"filename\": \"/edge_base/harmony/graphics/WINUM8.lmp\", \"start\": 6426636, \"end\": 6426898}, {\"filename\": \"/edge_base/harmony/graphics/WINUM9.lmp\", \"start\": 6426898, \"end\": 6427157}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTF.lmp\", \"start\": 6427157, \"end\": 6427397}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTI.lmp\", \"start\": 6427397, \"end\": 6428845}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTK.lmp\", \"start\": 6428845, \"end\": 6430190}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTS.lmp\", \"start\": 6430190, \"end\": 6431359}, {\"filename\": \"/edge_base/harmony/graphics/WIPAR.lmp\", \"start\": 6431359, \"end\": 6432336}, {\"filename\": \"/edge_base/harmony/graphics/WIPCNT.lmp\", \"start\": 6432336, \"end\": 6432585}, {\"filename\": \"/edge_base/harmony/graphics/WISCRT2.lmp\", \"start\": 6432585, \"end\": 6434360}, {\"filename\": \"/edge_base/harmony/graphics/WISUCKS.lmp\", \"start\": 6434360, \"end\": 6436069}, {\"filename\": \"/edge_base/harmony/graphics/WITIME.lmp\", \"start\": 6436069, \"end\": 6436916}, {\"filename\": \"/edge_base/harmony/graphics/WIVCTMS.lmp\", \"start\": 6436916, \"end\": 6437716}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN033.png\", \"start\": 6437716, \"end\": 6438879}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN034.png\", \"start\": 6438879, \"end\": 6440035}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN035.png\", \"start\": 6440035, \"end\": 6441204}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN036.png\", \"start\": 6441204, \"end\": 6442377}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN037.png\", \"start\": 6442377, \"end\": 6443553}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN038.png\", \"start\": 6443553, \"end\": 6444728}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN039.png\", \"start\": 6444728, \"end\": 6445875}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN040.png\", \"start\": 6445875, \"end\": 6447043}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN041.png\", \"start\": 6447043, \"end\": 6448211}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN042.png\", \"start\": 6448211, \"end\": 6449385}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN043.png\", \"start\": 6449385, \"end\": 6450555}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN044.png\", \"start\": 6450555, \"end\": 6451722}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN045.png\", \"start\": 6451722, \"end\": 6452620}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN046.png\", \"start\": 6452620, \"end\": 6453787}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN047.png\", \"start\": 6453787, \"end\": 6454960}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN048.png\", \"start\": 6454960, \"end\": 6456135}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN049.png\", \"start\": 6456135, \"end\": 6457301}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN050.png\", \"start\": 6457301, \"end\": 6458471}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN051.png\", \"start\": 6458471, \"end\": 6459646}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN052.png\", \"start\": 6459646, \"end\": 6460818}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN053.png\", \"start\": 6460818, \"end\": 6461992}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN054.png\", \"start\": 6461992, \"end\": 6463164}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN055.png\", \"start\": 6463164, \"end\": 6464337}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN056.png\", \"start\": 6464337, \"end\": 6465510}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN057.png\", \"start\": 6465510, \"end\": 6466680}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN058.png\", \"start\": 6466680, \"end\": 6467843}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN059.png\", \"start\": 6467843, \"end\": 6469001}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN060.png\", \"start\": 6469001, \"end\": 6470166}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN061.png\", \"start\": 6470166, \"end\": 6471318}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN062.png\", \"start\": 6471318, \"end\": 6472483}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN063.png\", \"start\": 6472483, \"end\": 6473655}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN064.png\", \"start\": 6473655, \"end\": 6474830}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN065.png\", \"start\": 6474830, \"end\": 6476003}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN066.png\", \"start\": 6476003, \"end\": 6477176}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN067.png\", \"start\": 6477176, \"end\": 6478348}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN068.png\", \"start\": 6478348, \"end\": 6479521}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN069.png\", \"start\": 6479521, \"end\": 6480424}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN070.png\", \"start\": 6480424, \"end\": 6481592}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN071.png\", \"start\": 6481592, \"end\": 6482764}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN072.png\", \"start\": 6482764, \"end\": 6483931}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN073.png\", \"start\": 6483931, \"end\": 6485095}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN074.png\", \"start\": 6485095, \"end\": 6486263}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN075.png\", \"start\": 6486263, \"end\": 6487439}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN076.png\", \"start\": 6487439, \"end\": 6488608}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN077.png\", \"start\": 6488608, \"end\": 6489788}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN078.png\", \"start\": 6489788, \"end\": 6490966}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN079.png\", \"start\": 6490966, \"end\": 6492140}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN080.png\", \"start\": 6492140, \"end\": 6493312}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN081.png\", \"start\": 6493312, \"end\": 6494488}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN082.png\", \"start\": 6494488, \"end\": 6495663}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN083.png\", \"start\": 6495663, \"end\": 6496837}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN084.png\", \"start\": 6496837, \"end\": 6498009}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN085.png\", \"start\": 6498009, \"end\": 6499180}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN086.png\", \"start\": 6499180, \"end\": 6500352}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN087.png\", \"start\": 6500352, \"end\": 6501530}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN088.png\", \"start\": 6501530, \"end\": 6502703}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN089.png\", \"start\": 6502703, \"end\": 6503876}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN090.png\", \"start\": 6503876, \"end\": 6505050}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN091.png\", \"start\": 6505050, \"end\": 6506217}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN092.png\", \"start\": 6506217, \"end\": 6507389}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN093.png\", \"start\": 6507389, \"end\": 6508556}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN094.png\", \"start\": 6508556, \"end\": 6509722}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN095.png\", \"start\": 6509722, \"end\": 6510620}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN121.png\", \"start\": 6510620, \"end\": 6511510}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STTPRCNT.png\", \"start\": 6511510, \"end\": 6512712}, {\"filename\": \"/edge_base/harmony/scripts/attacks.ddf\", \"start\": 6512712, \"end\": 6520600}, {\"filename\": \"/edge_base/harmony/scripts/coal_hud.ec\", \"start\": 6520600, \"end\": 6524511}, {\"filename\": \"/edge_base/harmony/scripts/colmap.ddf\", \"start\": 6524511, \"end\": 6524827}, {\"filename\": \"/edge_base/harmony/scripts/flats.ddf\", \"start\": 6524827, \"end\": 6525174}, {\"filename\": \"/edge_base/harmony/scripts/language.ldf\", \"start\": 6525174, \"end\": 6528948}, {\"filename\": \"/edge_base/harmony/scripts/levels.ddf\", \"start\": 6528948, \"end\": 6545237}, {\"filename\": \"/edge_base/harmony/scripts/playlist.ddf\", \"start\": 6545237, \"end\": 6546710}, {\"filename\": \"/edge_base/harmony/scripts/styles.ddf\", \"start\": 6546710, \"end\": 6547965}, {\"filename\": \"/edge_base/harmony/scripts/things.ddf\", \"start\": 6547965, \"end\": 6617985}, {\"filename\": \"/edge_base/harmony/scripts/weapons.ddf\", \"start\": 6617985, \"end\": 6621765}, {\"filename\": \"/edge_base/harmony/sprites/CELLA0.png\", \"start\": 6621765, \"end\": 6623507}, {\"filename\": \"/edge_base/harmony/sprites/CLIPA0.png\", \"start\": 6623507, \"end\": 6626193}, {\"filename\": \"/edge_base/harmony/sprites/ROCKA0.png\", \"start\": 6626193, \"end\": 6627624}, {\"filename\": \"/edge_base/harmony/sprites/SHELA0.png\", \"start\": 6627624, \"end\": 6629808}, {\"filename\": \"/edge_base/heretic/graphics/AUTOPAGE.png\", \"start\": 6629808, \"end\": 6672615}, {\"filename\": \"/edge_base/heretic/graphics/BARBACK.lmp\", \"start\": 6672615, \"end\": 6693129}, {\"filename\": \"/edge_base/heretic/graphics/CREDIT.lmp\", \"start\": 6693129, \"end\": 6812417}, {\"filename\": \"/edge_base/heretic/graphics/E2END.png\", \"start\": 6812417, \"end\": 6868841}, {\"filename\": \"/edge_base/heretic/graphics/FINAL1.lmp\", \"start\": 6868841, \"end\": 6988129}, {\"filename\": \"/edge_base/heretic/graphics/FINAL2.lmp\", \"start\": 6988129, \"end\": 7107417}, {\"filename\": \"/edge_base/heretic/graphics/HELP1.lmp\", \"start\": 7107417, \"end\": 7226705}, {\"filename\": \"/edge_base/heretic/graphics/HELP2.lmp\", \"start\": 7226705, \"end\": 7345993}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI1.lmp\", \"start\": 7345993, \"end\": 7349403}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI2.lmp\", \"start\": 7349403, \"end\": 7351390}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI3.lmp\", \"start\": 7351390, \"end\": 7355096}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI4.lmp\", \"start\": 7355096, \"end\": 7357272}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI5.lmp\", \"start\": 7357272, \"end\": 7361429}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI6.png\", \"start\": 7361429, \"end\": 7362737}, {\"filename\": \"/edge_base/heretic/graphics/IN1.png\", \"start\": 7362737, \"end\": 7363924}, {\"filename\": \"/edge_base/heretic/graphics/LTFCTOP.lmp\", \"start\": 7363924, \"end\": 7364615}, {\"filename\": \"/edge_base/heretic/graphics/MAPE1.lmp\", \"start\": 7364615, \"end\": 7483903}, {\"filename\": \"/edge_base/heretic/graphics/MAPE2.lmp\", \"start\": 7483903, \"end\": 7603191}, {\"filename\": \"/edge_base/heretic/graphics/MAPE3.lmp\", \"start\": 7603191, \"end\": 7722479}, {\"filename\": \"/edge_base/heretic/graphics/M_DOOM.lmp\", \"start\": 7722479, \"end\": 7730224}, {\"filename\": \"/edge_base/heretic/graphics/M_EPISOD.lmp\", \"start\": 7730224, \"end\": 7733192}, {\"filename\": \"/edge_base/heretic/graphics/M_HURT.lmp\", \"start\": 7733192, \"end\": 7736224}, {\"filename\": \"/edge_base/heretic/graphics/M_JKILL.lmp\", \"start\": 7736224, \"end\": 7740563}, {\"filename\": \"/edge_base/heretic/graphics/M_LOADG.lmp\", \"start\": 7740563, \"end\": 7742531}, {\"filename\": \"/edge_base/heretic/graphics/M_LSCNTR.lmp\", \"start\": 7742531, \"end\": 7742723}, {\"filename\": \"/edge_base/heretic/graphics/M_LSLEFT.lmp\", \"start\": 7742723, \"end\": 7742915}, {\"filename\": \"/edge_base/heretic/graphics/M_LSRGHT.lmp\", \"start\": 7742915, \"end\": 7743107}, {\"filename\": \"/edge_base/heretic/graphics/M_NEWG.lmp\", \"start\": 7743107, \"end\": 7745024}, {\"filename\": \"/edge_base/heretic/graphics/M_NGAME.lmp\", \"start\": 7745024, \"end\": 7746941}, {\"filename\": \"/edge_base/heretic/graphics/M_NMARE.lmp\", \"start\": 7746941, \"end\": 7752267}, {\"filename\": \"/edge_base/heretic/graphics/M_OPTION.lmp\", \"start\": 7752267, \"end\": 7753771}, {\"filename\": \"/edge_base/heretic/graphics/M_OPTTTL.lmp\", \"start\": 7753771, \"end\": 7755275}, {\"filename\": \"/edge_base/heretic/graphics/M_QUITG.lmp\", \"start\": 7755275, \"end\": 7757095}, {\"filename\": \"/edge_base/heretic/graphics/M_RDTHIS.lmp\", \"start\": 7757095, \"end\": 7758703}, {\"filename\": \"/edge_base/heretic/graphics/M_ROUGH.lmp\", \"start\": 7758703, \"end\": 7762021}, {\"filename\": \"/edge_base/heretic/graphics/M_SAVEG.lmp\", \"start\": 7762021, \"end\": 7764043}, {\"filename\": \"/edge_base/heretic/graphics/M_SKILL.lmp\", \"start\": 7764043, \"end\": 7767270}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL00.png\", \"start\": 7767270, \"end\": 7768446}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL01.png\", \"start\": 7768446, \"end\": 7769655}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL02.png\", \"start\": 7769655, \"end\": 7770920}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL03.png\", \"start\": 7770920, \"end\": 7772232}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL04.png\", \"start\": 7772232, \"end\": 7773646}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL05.png\", \"start\": 7773646, \"end\": 7774960}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL06.png\", \"start\": 7774960, \"end\": 7776347}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL07.png\", \"start\": 7776347, \"end\": 7777621}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL08.png\", \"start\": 7777621, \"end\": 7778675}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL09.png\", \"start\": 7778675, \"end\": 7779673}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL10.png\", \"start\": 7779673, \"end\": 7780765}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL11.png\", \"start\": 7780765, \"end\": 7782022}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL12.png\", \"start\": 7782022, \"end\": 7783505}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL13.png\", \"start\": 7783505, \"end\": 7784855}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL14.png\", \"start\": 7784855, \"end\": 7786459}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL15.png\", \"start\": 7786459, \"end\": 7787960}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL16.png\", \"start\": 7787960, \"end\": 7789238}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL17.png\", \"start\": 7789238, \"end\": 7790470}, {\"filename\": \"/edge_base/heretic/graphics/M_THERML.lmp\", \"start\": 7790470, \"end\": 7790604}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMM.lmp\", \"start\": 7790604, \"end\": 7790810}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMO.lmp\", \"start\": 7790810, \"end\": 7790918}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMR.lmp\", \"start\": 7790918, \"end\": 7791052}, {\"filename\": \"/edge_base/heretic/graphics/M_ULTRA.lmp\", \"start\": 7791052, \"end\": 7795307}, {\"filename\": \"/edge_base/heretic/graphics/NULL.png\", \"start\": 7795307, \"end\": 7796467}, {\"filename\": \"/edge_base/heretic/graphics/RTFCTOP.lmp\", \"start\": 7796467, \"end\": 7797216}, {\"filename\": \"/edge_base/heretic/graphics/STBARL.lmp\", \"start\": 7797216, \"end\": 7801457}, {\"filename\": \"/edge_base/heretic/graphics/STBARR.lmp\", \"start\": 7801457, \"end\": 7805698}, {\"filename\": \"/edge_base/heretic/graphics/TITLE.png\", \"start\": 7805698, \"end\": 7856321}, {\"filename\": \"/edge_base/heretic/graphics/WIENTER.png\", \"start\": 7856321, \"end\": 7857220}, {\"filename\": \"/edge_base/heretic/graphics/WIF.png\", \"start\": 7857220, \"end\": 7857966}, {\"filename\": \"/edge_base/heretic/graphics/__SKULL1.lmp\", \"start\": 7857966, \"end\": 7858342}, {\"filename\": \"/edge_base/heretic/graphics/__SKULL2.lmp\", \"start\": 7858342, \"end\": 7858718}, {\"filename\": \"/edge_base/heretic/scripts/anims.ddf\", \"start\": 7858718, \"end\": 7860441}, {\"filename\": \"/edge_base/heretic/scripts/attacks.ddf\", \"start\": 7860441, \"end\": 7902100}, {\"filename\": \"/edge_base/heretic/scripts/coal_hud.ec\", \"start\": 7902100, \"end\": 7917671}, {\"filename\": \"/edge_base/heretic/scripts/flats.ddf\", \"start\": 7917671, \"end\": 7918228}, {\"filename\": \"/edge_base/heretic/scripts/fonts.ddf\", \"start\": 7918228, \"end\": 7919276}, {\"filename\": \"/edge_base/heretic/scripts/games.ddf\", \"start\": 7919276, \"end\": 7921914}, {\"filename\": \"/edge_base/heretic/scripts/images.ddf\", \"start\": 7921914, \"end\": 7924733}, {\"filename\": \"/edge_base/heretic/scripts/language.ldf\", \"start\": 7924733, \"end\": 7933462}, {\"filename\": \"/edge_base/heretic/scripts/levels.ddf\", \"start\": 7933462, \"end\": 7947052}, {\"filename\": \"/edge_base/heretic/scripts/lines.ddf\", \"start\": 7947052, \"end\": 7951887}, {\"filename\": \"/edge_base/heretic/scripts/playlist.ddf\", \"start\": 7951887, \"end\": 7954043}, {\"filename\": \"/edge_base/heretic/scripts/rscript.rts\", \"start\": 7954043, \"end\": 7967091}, {\"filename\": \"/edge_base/heretic/scripts/sectors.ddf\", \"start\": 7967091, \"end\": 7968575}, {\"filename\": \"/edge_base/heretic/scripts/sounds.ddf\", \"start\": 7968575, \"end\": 7979777}, {\"filename\": \"/edge_base/heretic/scripts/styles.ddf\", \"start\": 7979777, \"end\": 7984322}, {\"filename\": \"/edge_base/heretic/scripts/switch.ddf\", \"start\": 7984322, \"end\": 7984777}, {\"filename\": \"/edge_base/heretic/scripts/things.ddf\", \"start\": 7984777, \"end\": 8068636}, {\"filename\": \"/edge_base/heretic/scripts/weapons.ddf\", \"start\": 8068636, \"end\": 8078957}, {\"filename\": \"/edge_base/heretic/sprites/STFFC0.lmp\", \"start\": 8078957, \"end\": 8096087}, {\"filename\": \"/edge_base/heretic/sprites/STFFH0.lmp\", \"start\": 8096087, \"end\": 8114133}, {\"filename\": \"/edge_base/plutonia/graphics/BOSSBACK.lmp\", \"start\": 8114133, \"end\": 8233421}, {\"filename\": \"/edge_base/plutonia/graphics/CREDIT.lmp\", \"start\": 8233421, \"end\": 8352709}, {\"filename\": \"/edge_base/plutonia/graphics/INTERPIC.lmp\", \"start\": 8352709, \"end\": 8471997}, {\"filename\": \"/edge_base/plutonia/graphics/TITLEPIC.lmp\", \"start\": 8471997, \"end\": 8591285}, {\"filename\": \"/edge_base/plutonia/scripts/images.ddf\", \"start\": 8591285, \"end\": 8592711}, {\"filename\": \"/edge_base/plutonia/scripts/language.ldf\", \"start\": 8592711, \"end\": 8596196}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_B.png\", \"start\": 8596196, \"end\": 8611227}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_E.png\", \"start\": 8611227, \"end\": 8626223}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_N.png\", \"start\": 8626223, \"end\": 8639302}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_S.png\", \"start\": 8639302, \"end\": 8652381}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_T.png\", \"start\": 8652381, \"end\": 8667412}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_W.png\", \"start\": 8667412, \"end\": 8682408}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_B.png\", \"start\": 8682408, \"end\": 8710343}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_E.png\", \"start\": 8710343, \"end\": 8721983}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_N.png\", \"start\": 8721983, \"end\": 8733892}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_S.png\", \"start\": 8733892, \"end\": 8745801}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_T.png\", \"start\": 8745801, \"end\": 8773736}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_W.png\", \"start\": 8773736, \"end\": 8785376}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_B.png\", \"start\": 8785376, \"end\": 8984126}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_E.png\", \"start\": 8984126, \"end\": 9074719}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_N.png\", \"start\": 9074719, \"end\": 9158103}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_S.png\", \"start\": 9158103, \"end\": 9241487}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_T.png\", \"start\": 9241487, \"end\": 9440237}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_W.png\", \"start\": 9440237, \"end\": 9530830}, {\"filename\": \"/edge_base/rekkr/graphics/M_DOOM.lmp\", \"start\": 9530830, \"end\": 9556121}, {\"filename\": \"/edge_base/rekkr/graphics/M_EPISOD.lmp\", \"start\": 9556121, \"end\": 9573591}, {\"filename\": \"/edge_base/rekkr/graphics/M_HURT.lmp\", \"start\": 9573591, \"end\": 9575730}, {\"filename\": \"/edge_base/rekkr/graphics/M_JKILL.lmp\", \"start\": 9575730, \"end\": 9578489}, {\"filename\": \"/edge_base/rekkr/graphics/M_LGTTL.lmp\", \"start\": 9578489, \"end\": 9580676}, {\"filename\": \"/edge_base/rekkr/graphics/M_LOADG.lmp\", \"start\": 9580676, \"end\": 9582793}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSCNTR.lmp\", \"start\": 9582793, \"end\": 9582985}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSLEFT.lmp\", \"start\": 9582985, \"end\": 9583177}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSRGHT.lmp\", \"start\": 9583177, \"end\": 9583369}, {\"filename\": \"/edge_base/rekkr/graphics/M_NEWG.lmp\", \"start\": 9583369, \"end\": 9586644}, {\"filename\": \"/edge_base/rekkr/graphics/M_NGAME.lmp\", \"start\": 9586644, \"end\": 9588692}, {\"filename\": \"/edge_base/rekkr/graphics/M_NMARE.lmp\", \"start\": 9588692, \"end\": 9591126}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTION.lmp\", \"start\": 9591126, \"end\": 9592963}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTTTL.lmp\", \"start\": 9592963, \"end\": 9594685}, {\"filename\": \"/edge_base/rekkr/graphics/M_QUITG.lmp\", \"start\": 9594685, \"end\": 9596753}, {\"filename\": \"/edge_base/rekkr/graphics/M_RDTHIS.lmp\", \"start\": 9596753, \"end\": 9597998}, {\"filename\": \"/edge_base/rekkr/graphics/M_ROUGH.lmp\", \"start\": 9597998, \"end\": 9600567}, {\"filename\": \"/edge_base/rekkr/graphics/M_SAVEG.lmp\", \"start\": 9600567, \"end\": 9602787}, {\"filename\": \"/edge_base/rekkr/graphics/M_SGTTL.lmp\", \"start\": 9602787, \"end\": 9605007}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKILL.lmp\", \"start\": 9605007, \"end\": 9633099}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL1.png\", \"start\": 9633099, \"end\": 9633687}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL2.png\", \"start\": 9633687, \"end\": 9634269}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL3.png\", \"start\": 9634269, \"end\": 9634864}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL4.png\", \"start\": 9634864, \"end\": 9635452}, {\"filename\": \"/edge_base/rekkr/graphics/M_ULTRA.lmp\", \"start\": 9635452, \"end\": 9637826}, {\"filename\": \"/edge_base/rekkr/graphics/STBARL.lmp\", \"start\": 9637826, \"end\": 9641237}, {\"filename\": \"/edge_base/rekkr/graphics/STBARR.lmp\", \"start\": 9641237, \"end\": 9644648}, {\"filename\": \"/edge_base/rekkr/graphics/WIENTER.lmp\", \"start\": 9644648, \"end\": 9646573}, {\"filename\": \"/edge_base/rekkr/graphics/WIF.lmp\", \"start\": 9646573, \"end\": 9648354}, {\"filename\": \"/edge_base/rekkr/graphics/WILV00.lmp\", \"start\": 9648354, \"end\": 9649953}, {\"filename\": \"/edge_base/rekkr/graphics/WILV01.lmp\", \"start\": 9649953, \"end\": 9650969}, {\"filename\": \"/edge_base/rekkr/graphics/WILV02.lmp\", \"start\": 9650969, \"end\": 9652996}, {\"filename\": \"/edge_base/rekkr/graphics/WILV03.lmp\", \"start\": 9652996, \"end\": 9655563}, {\"filename\": \"/edge_base/rekkr/graphics/WILV04.lmp\", \"start\": 9655563, \"end\": 9657278}, {\"filename\": \"/edge_base/rekkr/graphics/WILV05.lmp\", \"start\": 9657278, \"end\": 9659006}, {\"filename\": \"/edge_base/rekkr/graphics/WILV06.lmp\", \"start\": 9659006, \"end\": 9662390}, {\"filename\": \"/edge_base/rekkr/graphics/WILV07.lmp\", \"start\": 9662390, \"end\": 9665894}, {\"filename\": \"/edge_base/rekkr/graphics/WILV08.lmp\", \"start\": 9665894, \"end\": 9668737}, {\"filename\": \"/edge_base/rekkr/graphics/WILV10.lmp\", \"start\": 9668737, \"end\": 9670116}, {\"filename\": \"/edge_base/rekkr/graphics/WILV11.lmp\", \"start\": 9670116, \"end\": 9671752}, {\"filename\": \"/edge_base/rekkr/graphics/WILV12.lmp\", \"start\": 9671752, \"end\": 9674072}, {\"filename\": \"/edge_base/rekkr/graphics/WILV13.lmp\", \"start\": 9674072, \"end\": 9675282}, {\"filename\": \"/edge_base/rekkr/graphics/WILV14.lmp\", \"start\": 9675282, \"end\": 9677979}, {\"filename\": \"/edge_base/rekkr/graphics/WILV15.lmp\", \"start\": 9677979, \"end\": 9681066}, {\"filename\": \"/edge_base/rekkr/graphics/WILV16.lmp\", \"start\": 9681066, \"end\": 9682707}, {\"filename\": \"/edge_base/rekkr/graphics/WILV17.lmp\", \"start\": 9682707, \"end\": 9684595}, {\"filename\": \"/edge_base/rekkr/graphics/WILV18.lmp\", \"start\": 9684595, \"end\": 9685782}, {\"filename\": \"/edge_base/rekkr/graphics/WILV20.lmp\", \"start\": 9685782, \"end\": 9687743}, {\"filename\": \"/edge_base/rekkr/graphics/WILV21.lmp\", \"start\": 9687743, \"end\": 9690859}, {\"filename\": \"/edge_base/rekkr/graphics/WILV22.lmp\", \"start\": 9690859, \"end\": 9692620}, {\"filename\": \"/edge_base/rekkr/graphics/WILV23.lmp\", \"start\": 9692620, \"end\": 9695479}, {\"filename\": \"/edge_base/rekkr/graphics/WILV24.lmp\", \"start\": 9695479, \"end\": 9697192}, {\"filename\": \"/edge_base/rekkr/graphics/WILV25.lmp\", \"start\": 9697192, \"end\": 9699456}, {\"filename\": \"/edge_base/rekkr/graphics/WILV26.lmp\", \"start\": 9699456, \"end\": 9700689}, {\"filename\": \"/edge_base/rekkr/graphics/WILV27.lmp\", \"start\": 9700689, \"end\": 9701432}, {\"filename\": \"/edge_base/rekkr/graphics/WILV28.lmp\", \"start\": 9701432, \"end\": 9705210}, {\"filename\": \"/edge_base/rekkr/graphics/WILV30.lmp\", \"start\": 9705210, \"end\": 9707062}, {\"filename\": \"/edge_base/rekkr/graphics/WILV31.lmp\", \"start\": 9707062, \"end\": 9708700}, {\"filename\": \"/edge_base/rekkr/graphics/WILV32.lmp\", \"start\": 9708700, \"end\": 9709822}, {\"filename\": \"/edge_base/rekkr/graphics/WILV33.lmp\", \"start\": 9709822, \"end\": 9712161}, {\"filename\": \"/edge_base/rekkr/graphics/WILV34.lmp\", \"start\": 9712161, \"end\": 9714164}, {\"filename\": \"/edge_base/rekkr/graphics/WILV35.lmp\", \"start\": 9714164, \"end\": 9716298}, {\"filename\": \"/edge_base/rekkr/graphics/WILV36.lmp\", \"start\": 9716298, \"end\": 9719364}, {\"filename\": \"/edge_base/rekkr/graphics/WILV37.lmp\", \"start\": 9719364, \"end\": 9721359}, {\"filename\": \"/edge_base/rekkr/graphics/WILV38.lmp\", \"start\": 9721359, \"end\": 9723219}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTF.lmp\", \"start\": 9723219, \"end\": 9723481}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTI.lmp\", \"start\": 9723481, \"end\": 9724687}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTK.lmp\", \"start\": 9724687, \"end\": 9725752}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTS.lmp\", \"start\": 9725752, \"end\": 9726782}, {\"filename\": \"/edge_base/rekkr/graphics/WIPAR.lmp\", \"start\": 9726782, \"end\": 9727544}, {\"filename\": \"/edge_base/rekkr/graphics/WISCRT2.lmp\", \"start\": 9727544, \"end\": 9729111}, {\"filename\": \"/edge_base/rekkr/graphics/WITIME.lmp\", \"start\": 9729111, \"end\": 9730025}, {\"filename\": \"/edge_base/rekkr/scripts/anims.ddf\", \"start\": 9730025, \"end\": 9730169}, {\"filename\": \"/edge_base/rekkr/scripts/attacks.ddf\", \"start\": 9730169, \"end\": 9730929}, {\"filename\": \"/edge_base/rekkr/scripts/images.ddf\", \"start\": 9730929, \"end\": 9738077}, {\"filename\": \"/edge_base/rekkr/scripts/language.ldf\", \"start\": 9738077, \"end\": 9738887}, {\"filename\": \"/edge_base/rekkr/scripts/styles.ddf\", \"start\": 9738887, \"end\": 9742781}, {\"filename\": \"/edge_base/rekkr/scripts/things.ddf\", \"start\": 9742781, \"end\": 9745021}, {\"filename\": \"/edge_base/rekkr/scripts/weapons.ddf\", \"start\": 9745021, \"end\": 9746956}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA1.lmp\", \"start\": 9746956, \"end\": 9747581}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA2A8.lmp\", \"start\": 9747581, \"end\": 9748556}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA3A7.lmp\", \"start\": 9748556, \"end\": 9749531}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA4A6.lmp\", \"start\": 9749531, \"end\": 9750506}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA5.lmp\", \"start\": 9750506, \"end\": 9751137}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB1.lmp\", \"start\": 9751137, \"end\": 9751720}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB2B8.lmp\", \"start\": 9751720, \"end\": 9752687}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB3B7.lmp\", \"start\": 9752687, \"end\": 9753654}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB4B6.lmp\", \"start\": 9753654, \"end\": 9754621}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB5.lmp\", \"start\": 9754621, \"end\": 9755203}, {\"filename\": \"/edge_base/tnt/graphics/BOSSBACK.lmp\", \"start\": 9755203, \"end\": 9874491}, {\"filename\": \"/edge_base/tnt/graphics/CREDIT.lmp\", \"start\": 9874491, \"end\": 9993779}, {\"filename\": \"/edge_base/tnt/graphics/INTERPIC.lmp\", \"start\": 9993779, \"end\": 10113067}, {\"filename\": \"/edge_base/tnt/graphics/TITLEPIC.lmp\", \"start\": 10113067, \"end\": 10232355}, {\"filename\": \"/edge_base/tnt/scripts/images.ddf\", \"start\": 10232355, \"end\": 10233785}, {\"filename\": \"/edge_base/tnt/scripts/language.ldf\", \"start\": 10233785, \"end\": 10237564}, {\"filename\": \"/edge_base/tnt/textures/SKY1_B.png\", \"start\": 10237564, \"end\": 10253557}, {\"filename\": \"/edge_base/tnt/textures/SKY1_E.png\", \"start\": 10253557, \"end\": 10273023}, {\"filename\": \"/edge_base/tnt/textures/SKY1_N.png\", \"start\": 10273023, \"end\": 10290449}, {\"filename\": \"/edge_base/tnt/textures/SKY1_S.png\", \"start\": 10290449, \"end\": 10306356}, {\"filename\": \"/edge_base/tnt/textures/SKY1_T.png\", \"start\": 10306356, \"end\": 10346474}, {\"filename\": \"/edge_base/tnt/textures/SKY1_W.png\", \"start\": 10346474, \"end\": 10365798}, {\"filename\": \"/edge_base/tnt/textures/SKY2_B.png\", \"start\": 10365798, \"end\": 10367109}, {\"filename\": \"/edge_base/tnt/textures/SKY2_E.png\", \"start\": 10367109, \"end\": 10371632}, {\"filename\": \"/edge_base/tnt/textures/SKY2_N.png\", \"start\": 10371632, \"end\": 10372861}, {\"filename\": \"/edge_base/tnt/textures/SKY2_S.png\", \"start\": 10372861, \"end\": 10379078}, {\"filename\": \"/edge_base/tnt/textures/SKY2_T.png\", \"start\": 10379078, \"end\": 10383205}, {\"filename\": \"/edge_base/tnt/textures/SKY2_W.png\", \"start\": 10383205, \"end\": 10384747}, {\"filename\": \"/edge_base/tnt/textures/SKY3_B.png\", \"start\": 10384747, \"end\": 10409218}, {\"filename\": \"/edge_base/tnt/textures/SKY3_E.png\", \"start\": 10409218, \"end\": 10416920}, {\"filename\": \"/edge_base/tnt/textures/SKY3_N.png\", \"start\": 10416920, \"end\": 10424799}, {\"filename\": \"/edge_base/tnt/textures/SKY3_S.png\", \"start\": 10424799, \"end\": 10432147}, {\"filename\": \"/edge_base/tnt/textures/SKY3_T.png\", \"start\": 10432147, \"end\": 10456618}, {\"filename\": \"/edge_base/tnt/textures/SKY3_W.png\", \"start\": 10456618, \"end\": 10463959}, {\"filename\": \"/edge_defs/colormaps/AUTOMAPS.dat\", \"start\": 10463959, \"end\": 10464471}, {\"filename\": \"/edge_defs/colormaps/LAVAMAP.cmp\", \"start\": 10464471, \"end\": 10473175}, {\"filename\": \"/edge_defs/colormaps/NITEVMAP.cmp\", \"start\": 10473175, \"end\": 10473431}, {\"filename\": \"/edge_defs/colormaps/PLYRMAPS.dat\", \"start\": 10473431, \"end\": 10477271}, {\"filename\": \"/edge_defs/colormaps/SARGMAPS.dat\", \"start\": 10477271, \"end\": 10478807}, {\"filename\": \"/edge_defs/colormaps/SHADEMAP.cmp\", \"start\": 10478807, \"end\": 10479063}, {\"filename\": \"/edge_defs/colormaps/SKINMAPS.dat\", \"start\": 10479063, \"end\": 10480343}, {\"filename\": \"/edge_defs/colormaps/SLIMEMAP.cmp\", \"start\": 10480343, \"end\": 10489047}, {\"filename\": \"/edge_defs/colormaps/TEXTMAPS.dat\", \"start\": 10489047, \"end\": 10490839}, {\"filename\": \"/edge_defs/colormaps/TXTBLUES.dat\", \"start\": 10490839, \"end\": 10492119}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS1.dat\", \"start\": 10492119, \"end\": 10493399}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS2.dat\", \"start\": 10493399, \"end\": 10494679}, {\"filename\": \"/edge_defs/colormaps/TXTGREYS.dat\", \"start\": 10494679, \"end\": 10495959}, {\"filename\": \"/edge_defs/colormaps/TXTGRNS.dat\", \"start\": 10495959, \"end\": 10497239}, {\"filename\": \"/edge_defs/colormaps/TXTORANS.dat\", \"start\": 10497239, \"end\": 10498519}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS1.dat\", \"start\": 10498519, \"end\": 10499799}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS2.dat\", \"start\": 10499799, \"end\": 10501079}, {\"filename\": \"/edge_defs/colormaps/TXTPURPS.dat\", \"start\": 10501079, \"end\": 10502359}, {\"filename\": \"/edge_defs/colormaps/TXTREDS.dat\", \"start\": 10502359, \"end\": 10503639}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS1.dat\", \"start\": 10503639, \"end\": 10504919}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS2.dat\", \"start\": 10504919, \"end\": 10506199}, {\"filename\": \"/edge_defs/colormaps/WATERMAP.cmp\", \"start\": 10506199, \"end\": 10514903}, {\"filename\": \"/edge_defs/graphics/CREDIT2.lmp\", \"start\": 10514903, \"end\": 10581791}, {\"filename\": \"/edge_defs/graphics/DLITEXPN.png\", \"start\": 10581791, \"end\": 10596134}, {\"filename\": \"/edge_defs/graphics/EDGECBG1.jpg\", \"start\": 10596134, \"end\": 10659501}, {\"filename\": \"/edge_defs/graphics/EDGECRED.png\", \"start\": 10659501, \"end\": 10827100}, {\"filename\": \"/edge_defs/graphics/EDGETTL.lmp\", \"start\": 10827100, \"end\": 10893988}, {\"filename\": \"/edge_defs/graphics/ENDFONT.png\", \"start\": 10893988, \"end\": 10901092}, {\"filename\": \"/edge_defs/graphics/FONTVERD.png\", \"start\": 10901092, \"end\": 10945723}, {\"filename\": \"/edge_defs/graphics/MOUSE.lmp\", \"start\": 10945723, \"end\": 10945906}, {\"filename\": \"/edge_defs/graphics/M_EPI5.lmp\", \"start\": 10945906, \"end\": 10947050}, {\"filename\": \"/edge_defs/graphics/M_EPI6.lmp\", \"start\": 10947050, \"end\": 10950080}, {\"filename\": \"/edge_defs/graphics/STBARL.lmp\", \"start\": 10950080, \"end\": 10953491}, {\"filename\": \"/edge_defs/graphics/STBARR.lmp\", \"start\": 10953491, \"end\": 10956902}, {\"filename\": \"/edge_defs/graphics/STCFN000.lmp\", \"start\": 10956902, \"end\": 10957046}, {\"filename\": \"/edge_defs/graphics/STCFN132.lmp\", \"start\": 10957046, \"end\": 10957188}, {\"filename\": \"/edge_defs/graphics/STCFN134.lmp\", \"start\": 10957188, \"end\": 10957315}, {\"filename\": \"/edge_defs/graphics/STCFN148.lmp\", \"start\": 10957315, \"end\": 10957450}, {\"filename\": \"/edge_defs/graphics/STDESYNC.lmp\", \"start\": 10957450, \"end\": 10960047}, {\"filename\": \"/edge_defs/graphics/STFB0.lmp\", \"start\": 10960047, \"end\": 10961455}, {\"filename\": \"/edge_defs/graphics/STFB1.lmp\", \"start\": 10961455, \"end\": 10962863}, {\"filename\": \"/edge_defs/graphics/STFB2.lmp\", \"start\": 10962863, \"end\": 10964271}, {\"filename\": \"/edge_defs/graphics/STFB3.lmp\", \"start\": 10964271, \"end\": 10965679}, {\"filename\": \"/edge_defs/graphics/STFB4.lmp\", \"start\": 10965679, \"end\": 10967087}, {\"filename\": \"/edge_defs/graphics/STFB5.lmp\", \"start\": 10967087, \"end\": 10968495}, {\"filename\": \"/edge_defs/graphics/STFB6.lmp\", \"start\": 10968495, \"end\": 10969903}, {\"filename\": \"/edge_defs/graphics/STFB7.lmp\", \"start\": 10969903, \"end\": 10971311}, {\"filename\": \"/edge_defs/graphics/STKEYS6.lmp\", \"start\": 10971311, \"end\": 10971431}, {\"filename\": \"/edge_defs/graphics/STKEYS7.lmp\", \"start\": 10971431, \"end\": 10971551}, {\"filename\": \"/edge_defs/graphics/STKEYS8.lmp\", \"start\": 10971551, \"end\": 10971671}, {\"filename\": \"/edge_defs/graphics/STPB0.lmp\", \"start\": 10971671, \"end\": 10973149}, {\"filename\": \"/edge_defs/graphics/STPB1.lmp\", \"start\": 10973149, \"end\": 10974627}, {\"filename\": \"/edge_defs/graphics/STPB2.lmp\", \"start\": 10974627, \"end\": 10976105}, {\"filename\": \"/edge_defs/graphics/STPB3.lmp\", \"start\": 10976105, \"end\": 10977583}, {\"filename\": \"/edge_defs/graphics/STPB4.lmp\", \"start\": 10977583, \"end\": 10979061}, {\"filename\": \"/edge_defs/graphics/STPB5.lmp\", \"start\": 10979061, \"end\": 10980539}, {\"filename\": \"/edge_defs/graphics/STPB6.lmp\", \"start\": 10980539, \"end\": 10982017}, {\"filename\": \"/edge_defs/graphics/STPB7.lmp\", \"start\": 10982017, \"end\": 10983495}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR1.png\", \"start\": 10983495, \"end\": 10983688}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR2.png\", \"start\": 10983688, \"end\": 10983873}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR3.png\", \"start\": 10983873, \"end\": 10984058}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR4.png\", \"start\": 10984058, \"end\": 10984245}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR5.png\", \"start\": 10984245, \"end\": 10984511}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR6.png\", \"start\": 10984511, \"end\": 10984852}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR7.png\", \"start\": 10984852, \"end\": 10985146}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR8.png\", \"start\": 10985146, \"end\": 10986530}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR9.png\", \"start\": 10986530, \"end\": 10986949}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN001.png\", \"start\": 10986949, \"end\": 10987306}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN002.png\", \"start\": 10987306, \"end\": 10987651}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN003.png\", \"start\": 10987651, \"end\": 10988007}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN004.png\", \"start\": 10988007, \"end\": 10988355}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN005.png\", \"start\": 10988355, \"end\": 10988694}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN006.png\", \"start\": 10988694, \"end\": 10989012}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN007.png\", \"start\": 10989012, \"end\": 10989362}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN008.png\", \"start\": 10989362, \"end\": 10989718}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN009.png\", \"start\": 10989718, \"end\": 10989997}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN010.png\", \"start\": 10989997, \"end\": 10990322}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN011.png\", \"start\": 10990322, \"end\": 10990691}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN012.png\", \"start\": 10990691, \"end\": 10991015}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN013.png\", \"start\": 10991015, \"end\": 10991381}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN014.png\", \"start\": 10991381, \"end\": 10991737}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN015.png\", \"start\": 10991737, \"end\": 10992110}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN016.png\", \"start\": 10992110, \"end\": 10992444}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN017.png\", \"start\": 10992444, \"end\": 10992819}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN018.png\", \"start\": 10992819, \"end\": 10993177}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN019.png\", \"start\": 10993177, \"end\": 10993528}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN020.png\", \"start\": 10993528, \"end\": 10993847}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN021.png\", \"start\": 10993847, \"end\": 10994193}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN022.png\", \"start\": 10994193, \"end\": 10994522}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN023.png\", \"start\": 10994522, \"end\": 10994877}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN024.png\", \"start\": 10994877, \"end\": 10995228}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN025.png\", \"start\": 10995228, \"end\": 10995577}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN026.png\", \"start\": 10995577, \"end\": 10995915}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN027.png\", \"start\": 10995915, \"end\": 10996204}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN028.png\", \"start\": 10996204, \"end\": 10996518}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN029.png\", \"start\": 10996518, \"end\": 10996761}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN030.png\", \"start\": 10996761, \"end\": 10997004}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN031.png\", \"start\": 10997004, \"end\": 10997270}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN032.png\", \"start\": 10997270, \"end\": 10997503}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN033.png\", \"start\": 10997503, \"end\": 10997841}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN034.png\", \"start\": 10997841, \"end\": 10998134}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN035.png\", \"start\": 10998134, \"end\": 10998472}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN036.png\", \"start\": 10998472, \"end\": 10998801}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN037.png\", \"start\": 10998801, \"end\": 10999130}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN038.png\", \"start\": 10999130, \"end\": 10999463}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN039.png\", \"start\": 10999463, \"end\": 10999799}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN040.png\", \"start\": 10999799, \"end\": 11000096}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN041.png\", \"start\": 11000096, \"end\": 11000436}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN042.png\", \"start\": 11000436, \"end\": 11000776}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN043.png\", \"start\": 11000776, \"end\": 11001011}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN044.png\", \"start\": 11001011, \"end\": 11001331}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN045.png\", \"start\": 11001331, \"end\": 11001615}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN046.png\", \"start\": 11001615, \"end\": 11001945}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN047.png\", \"start\": 11001945, \"end\": 11002283}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN048.png\", \"start\": 11002283, \"end\": 11002598}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN049.png\", \"start\": 11002598, \"end\": 11002927}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN050.png\", \"start\": 11002927, \"end\": 11003249}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN051.png\", \"start\": 11003249, \"end\": 11003566}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN052.png\", \"start\": 11003566, \"end\": 11003905}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN053.png\", \"start\": 11003905, \"end\": 11004225}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN054.png\", \"start\": 11004225, \"end\": 11004499}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN055.png\", \"start\": 11004499, \"end\": 11004806}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN056.png\", \"start\": 11004806, \"end\": 11005151}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN057.png\", \"start\": 11005151, \"end\": 11005449}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN058.png\", \"start\": 11005449, \"end\": 11005803}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN059.png\", \"start\": 11005803, \"end\": 11006142}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN060.png\", \"start\": 11006142, \"end\": 11006481}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN061.png\", \"start\": 11006481, \"end\": 11006805}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN062.png\", \"start\": 11006805, \"end\": 11007145}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN063.png\", \"start\": 11007145, \"end\": 11007470}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN064.png\", \"start\": 11007470, \"end\": 11007809}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN065.png\", \"start\": 11007809, \"end\": 11008115}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN066.png\", \"start\": 11008115, \"end\": 11008449}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN067.png\", \"start\": 11008449, \"end\": 11008781}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN068.png\", \"start\": 11008781, \"end\": 11009129}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN069.png\", \"start\": 11009129, \"end\": 11009470}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN070.png\", \"start\": 11009470, \"end\": 11009795}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN071.png\", \"start\": 11009795, \"end\": 11010127}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN072.png\", \"start\": 11010127, \"end\": 11010456}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN073.png\", \"start\": 11010456, \"end\": 11010690}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN074.png\", \"start\": 11010690, \"end\": 11010936}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN075.png\", \"start\": 11010936, \"end\": 11011262}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN076.png\", \"start\": 11011262, \"end\": 11011549}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN077.png\", \"start\": 11011549, \"end\": 11011867}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN078.png\", \"start\": 11011867, \"end\": 11012187}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN079.png\", \"start\": 11012187, \"end\": 11012498}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN080.png\", \"start\": 11012498, \"end\": 11012815}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN081.png\", \"start\": 11012815, \"end\": 11013130}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN082.png\", \"start\": 11013130, \"end\": 11013432}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN083.png\", \"start\": 11013432, \"end\": 11013760}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN084.png\", \"start\": 11013760, \"end\": 11014092}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN085.png\", \"start\": 11014092, \"end\": 11014340}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN086.png\", \"start\": 11014340, \"end\": 11014591}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_1x.png\", \"start\": 11014591, \"end\": 11021927}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_2x.png\", \"start\": 11021927, \"end\": 11029316}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_1x.png\", \"start\": 11029316, \"end\": 11029480}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_2x.png\", \"start\": 11029480, \"end\": 11029654}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_1x.png\", \"start\": 11029654, \"end\": 11036957}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_2x.png\", \"start\": 11036957, \"end\": 11044292}, {\"filename\": \"/edge_defs/scripts/anims.ddf\", \"start\": 11044292, \"end\": 11046482}, {\"filename\": \"/edge_defs/scripts/attacks.ddf\", \"start\": 11046482, \"end\": 11069545}, {\"filename\": \"/edge_defs/scripts/coal_api.ec\", \"start\": 11069545, \"end\": 11084617}, {\"filename\": \"/edge_defs/scripts/coal_hud.ec\", \"start\": 11084617, \"end\": 11103394}, {\"filename\": \"/edge_defs/scripts/colmap.ddf\", \"start\": 11103394, \"end\": 11107613}, {\"filename\": \"/edge_defs/scripts/flats.ddf\", \"start\": 11107613, \"end\": 11112799}, {\"filename\": \"/edge_defs/scripts/fonts.ddf\", \"start\": 11112799, \"end\": 11114516}, {\"filename\": \"/edge_defs/scripts/games.ddf\", \"start\": 11114516, \"end\": 11119058}, {\"filename\": \"/edge_defs/scripts/images.ddf\", \"start\": 11119058, \"end\": 11138429}, {\"filename\": \"/edge_defs/scripts/language.ldf\", \"start\": 11138429, \"end\": 11256981}, {\"filename\": \"/edge_defs/scripts/levels.ddf\", \"start\": 11256981, \"end\": 11275224}, {\"filename\": \"/edge_defs/scripts/lines.ddf\", \"start\": 11275224, \"end\": 11372929}, {\"filename\": \"/edge_defs/scripts/playlist.ddf\", \"start\": 11372929, \"end\": 11375847}, {\"filename\": \"/edge_defs/scripts/rscript.rts\", \"start\": 11375847, \"end\": 11377538}, {\"filename\": \"/edge_defs/scripts/sectors.ddf\", \"start\": 11377538, \"end\": 11391375}, {\"filename\": \"/edge_defs/scripts/sounds.ddf\", \"start\": 11391375, \"end\": 11402970}, {\"filename\": \"/edge_defs/scripts/styles.ddf\", \"start\": 11402970, \"end\": 11409116}, {\"filename\": \"/edge_defs/scripts/switch.ddf\", \"start\": 11409116, \"end\": 11413420}, {\"filename\": \"/edge_defs/scripts/things.ddf\", \"start\": 11413420, \"end\": 11562747}, {\"filename\": \"/edge_defs/scripts/wadfixes.ddf\", \"start\": 11562747, \"end\": 11563618}, {\"filename\": \"/edge_defs/scripts/weapons.ddf\", \"start\": 11563618, \"end\": 11569312}, {\"filename\": \"/edge_defs/sounds/DPBAREXP.lmp\", \"start\": 11569312, \"end\": 11569395}, {\"filename\": \"/edge_defs/sounds/DPBDCLS.lmp\", \"start\": 11569395, \"end\": 11569441}, {\"filename\": \"/edge_defs/sounds/DPBDOPN.lmp\", \"start\": 11569441, \"end\": 11569482}, {\"filename\": \"/edge_defs/sounds/DPBFG.lmp\", \"start\": 11569482, \"end\": 11569670}, {\"filename\": \"/edge_defs/sounds/DPBGACT.lmp\", \"start\": 11569670, \"end\": 11569769}, {\"filename\": \"/edge_defs/sounds/DPBGDTH1.lmp\", \"start\": 11569769, \"end\": 11569858}, {\"filename\": \"/edge_defs/sounds/DPBGDTH2.lmp\", \"start\": 11569858, \"end\": 11569947}, {\"filename\": \"/edge_defs/sounds/DPBGSIT1.lmp\", \"start\": 11569947, \"end\": 11570058}, {\"filename\": \"/edge_defs/sounds/DPBGSIT2.lmp\", \"start\": 11570058, \"end\": 11570169}, {\"filename\": \"/edge_defs/sounds/DPBOSCUB.lmp\", \"start\": 11570169, \"end\": 11570205}, {\"filename\": \"/edge_defs/sounds/DPBOSDTH.lmp\", \"start\": 11570205, \"end\": 11570484}, {\"filename\": \"/edge_defs/sounds/DPBOSPIT.lmp\", \"start\": 11570484, \"end\": 11570529}, {\"filename\": \"/edge_defs/sounds/DPBOSPN.lmp\", \"start\": 11570529, \"end\": 11570567}, {\"filename\": \"/edge_defs/sounds/DPBOSSIT.lmp\", \"start\": 11570567, \"end\": 11570701}, {\"filename\": \"/edge_defs/sounds/DPBRSDTH.lmp\", \"start\": 11570701, \"end\": 11570813}, {\"filename\": \"/edge_defs/sounds/DPBRSSIT.lmp\", \"start\": 11570813, \"end\": 11570921}, {\"filename\": \"/edge_defs/sounds/DPBSPACT.lmp\", \"start\": 11570921, \"end\": 11570977}, {\"filename\": \"/edge_defs/sounds/DPBSPDTH.lmp\", \"start\": 11570977, \"end\": 11571068}, {\"filename\": \"/edge_defs/sounds/DPBSPSIT.lmp\", \"start\": 11571068, \"end\": 11571207}, {\"filename\": \"/edge_defs/sounds/DPBSPWLK.lmp\", \"start\": 11571207, \"end\": 11571252}, {\"filename\": \"/edge_defs/sounds/DPCACDTH.lmp\", \"start\": 11571252, \"end\": 11571341}, {\"filename\": \"/edge_defs/sounds/DPCACSIT.lmp\", \"start\": 11571341, \"end\": 11571453}, {\"filename\": \"/edge_defs/sounds/DPCLAW.lmp\", \"start\": 11571453, \"end\": 11571499}, {\"filename\": \"/edge_defs/sounds/DPCYBDTH.lmp\", \"start\": 11571499, \"end\": 11571636}, {\"filename\": \"/edge_defs/sounds/DPCYBSIT.lmp\", \"start\": 11571636, \"end\": 11571785}, {\"filename\": \"/edge_defs/sounds/DPDBCLS.lmp\", \"start\": 11571785, \"end\": 11571796}, {\"filename\": \"/edge_defs/sounds/DPDBLOAD.lmp\", \"start\": 11571796, \"end\": 11571807}, {\"filename\": \"/edge_defs/sounds/DPDBOPN.lmp\", \"start\": 11571807, \"end\": 11571818}, {\"filename\": \"/edge_defs/sounds/DPDMACT.lmp\", \"start\": 11571818, \"end\": 11571845}, {\"filename\": \"/edge_defs/sounds/DPDMPAIN.lmp\", \"start\": 11571845, \"end\": 11571886}, {\"filename\": \"/edge_defs/sounds/DPDORCLS.lmp\", \"start\": 11571886, \"end\": 11571957}, {\"filename\": \"/edge_defs/sounds/DPDOROPN.lmp\", \"start\": 11571957, \"end\": 11572030}, {\"filename\": \"/edge_defs/sounds/DPDSHTGN.lmp\", \"start\": 11572030, \"end\": 11572073}, {\"filename\": \"/edge_defs/sounds/DPFIRSHT.lmp\", \"start\": 11572073, \"end\": 11572108}, {\"filename\": \"/edge_defs/sounds/DPFIRXPL.lmp\", \"start\": 11572108, \"end\": 11572125}, {\"filename\": \"/edge_defs/sounds/DPFLAME.lmp\", \"start\": 11572125, \"end\": 11572202}, {\"filename\": \"/edge_defs/sounds/DPFLAMST.lmp\", \"start\": 11572202, \"end\": 11572216}, {\"filename\": \"/edge_defs/sounds/DPGETPOW.lmp\", \"start\": 11572216, \"end\": 11572353}, {\"filename\": \"/edge_defs/sounds/DPHOOF.lmp\", \"start\": 11572353, \"end\": 11572433}, {\"filename\": \"/edge_defs/sounds/DPITEMUP.lmp\", \"start\": 11572433, \"end\": 11572520}, {\"filename\": \"/edge_defs/sounds/DPITMBK.lmp\", \"start\": 11572520, \"end\": 11572605}, {\"filename\": \"/edge_defs/sounds/DPKEENDT.lmp\", \"start\": 11572605, \"end\": 11572711}, {\"filename\": \"/edge_defs/sounds/DPKEENPN.lmp\", \"start\": 11572711, \"end\": 11572767}, {\"filename\": \"/edge_defs/sounds/DPKNTDTH.lmp\", \"start\": 11572767, \"end\": 11572890}, {\"filename\": \"/edge_defs/sounds/DPKNTSIT.lmp\", \"start\": 11572890, \"end\": 11572956}, {\"filename\": \"/edge_defs/sounds/DPMANATK.lmp\", \"start\": 11572956, \"end\": 11573022}, {\"filename\": \"/edge_defs/sounds/DPMANDTH.lmp\", \"start\": 11573022, \"end\": 11573100}, {\"filename\": \"/edge_defs/sounds/DPMANSIT.lmp\", \"start\": 11573100, \"end\": 11573197}, {\"filename\": \"/edge_defs/sounds/DPMETAL.lmp\", \"start\": 11573197, \"end\": 11573216}, {\"filename\": \"/edge_defs/sounds/DPMNPAIN.lmp\", \"start\": 11573216, \"end\": 11573276}, {\"filename\": \"/edge_defs/sounds/DPNOWAY.lmp\", \"start\": 11573276, \"end\": 11573317}, {\"filename\": \"/edge_defs/sounds/DPOOF.lmp\", \"start\": 11573317, \"end\": 11573336}, {\"filename\": \"/edge_defs/sounds/DPPDIEHI.lmp\", \"start\": 11573336, \"end\": 11573414}, {\"filename\": \"/edge_defs/sounds/DPPEDTH.lmp\", \"start\": 11573414, \"end\": 11573523}, {\"filename\": \"/edge_defs/sounds/DPPEPAIN.lmp\", \"start\": 11573523, \"end\": 11573573}, {\"filename\": \"/edge_defs/sounds/DPPESIT.lmp\", \"start\": 11573573, \"end\": 11573690}, {\"filename\": \"/edge_defs/sounds/DPPISTOL.lmp\", \"start\": 11573690, \"end\": 11573708}, {\"filename\": \"/edge_defs/sounds/DPPLASMA.lmp\", \"start\": 11573708, \"end\": 11573750}, {\"filename\": \"/edge_defs/sounds/DPPLDETH.lmp\", \"start\": 11573750, \"end\": 11573899}, {\"filename\": \"/edge_defs/sounds/DPPLPAIN.lmp\", \"start\": 11573899, \"end\": 11573929}, {\"filename\": \"/edge_defs/sounds/DPPODTH1.lmp\", \"start\": 11573929, \"end\": 11574018}, {\"filename\": \"/edge_defs/sounds/DPPODTH2.lmp\", \"start\": 11574018, \"end\": 11574107}, {\"filename\": \"/edge_defs/sounds/DPPODTH3.lmp\", \"start\": 11574107, \"end\": 11574196}, {\"filename\": \"/edge_defs/sounds/DPPOPAIN.lmp\", \"start\": 11574196, \"end\": 11574234}, {\"filename\": \"/edge_defs/sounds/DPPOSACT.lmp\", \"start\": 11574234, \"end\": 11574264}, {\"filename\": \"/edge_defs/sounds/DPPOSIT1.lmp\", \"start\": 11574264, \"end\": 11574375}, {\"filename\": \"/edge_defs/sounds/DPPOSIT2.lmp\", \"start\": 11574375, \"end\": 11574486}, {\"filename\": \"/edge_defs/sounds/DPPOSIT3.lmp\", \"start\": 11574486, \"end\": 11574597}, {\"filename\": \"/edge_defs/sounds/DPPSTART.lmp\", \"start\": 11574597, \"end\": 11574638}, {\"filename\": \"/edge_defs/sounds/DPPSTOP.lmp\", \"start\": 11574638, \"end\": 11574655}, {\"filename\": \"/edge_defs/sounds/DPPUNCH.lmp\", \"start\": 11574655, \"end\": 11574692}, {\"filename\": \"/edge_defs/sounds/DPRADIO.lmp\", \"start\": 11574692, \"end\": 11574744}, {\"filename\": \"/edge_defs/sounds/DPRLAUNC.lmp\", \"start\": 11574744, \"end\": 11574807}, {\"filename\": \"/edge_defs/sounds/DPRXPLOD.lmp\", \"start\": 11574807, \"end\": 11574979}, {\"filename\": \"/edge_defs/sounds/DPSAWFUL.lmp\", \"start\": 11574979, \"end\": 11575007}, {\"filename\": \"/edge_defs/sounds/DPSAWHIT.lmp\", \"start\": 11575007, \"end\": 11575035}, {\"filename\": \"/edge_defs/sounds/DPSAWIDL.lmp\", \"start\": 11575035, \"end\": 11575040}, {\"filename\": \"/edge_defs/sounds/DPSAWUP.lmp\", \"start\": 11575040, \"end\": 11575128}, {\"filename\": \"/edge_defs/sounds/DPSGCOCK.lmp\", \"start\": 11575128, \"end\": 11575191}, {\"filename\": \"/edge_defs/sounds/DPSGTATK.lmp\", \"start\": 11575191, \"end\": 11575265}, {\"filename\": \"/edge_defs/sounds/DPSGTDTH.lmp\", \"start\": 11575265, \"end\": 11575354}, {\"filename\": \"/edge_defs/sounds/DPSGTSIT.lmp\", \"start\": 11575354, \"end\": 11575465}, {\"filename\": \"/edge_defs/sounds/DPSHOTGN.lmp\", \"start\": 11575465, \"end\": 11575507}, {\"filename\": \"/edge_defs/sounds/DPSKEACT.lmp\", \"start\": 11575507, \"end\": 11575547}, {\"filename\": \"/edge_defs/sounds/DPSKEATK.lmp\", \"start\": 11575547, \"end\": 11575606}, {\"filename\": \"/edge_defs/sounds/DPSKEDTH.lmp\", \"start\": 11575606, \"end\": 11575686}, {\"filename\": \"/edge_defs/sounds/DPSKEPCH.lmp\", \"start\": 11575686, \"end\": 11575723}, {\"filename\": \"/edge_defs/sounds/DPSKESIT.lmp\", \"start\": 11575723, \"end\": 11575829}, {\"filename\": \"/edge_defs/sounds/DPSKESWG.lmp\", \"start\": 11575829, \"end\": 11575869}, {\"filename\": \"/edge_defs/sounds/DPSKLATK.lmp\", \"start\": 11575869, \"end\": 11575949}, {\"filename\": \"/edge_defs/sounds/DPSKLDTH.lmp\", \"start\": 11575949, \"end\": 11575966}, {\"filename\": \"/edge_defs/sounds/DPSLOP.lmp\", \"start\": 11575966, \"end\": 11576075}, {\"filename\": \"/edge_defs/sounds/DPSPIDTH.lmp\", \"start\": 11576075, \"end\": 11576188}, {\"filename\": \"/edge_defs/sounds/DPSPISIT.lmp\", \"start\": 11576188, \"end\": 11576336}, {\"filename\": \"/edge_defs/sounds/DPSSDTH.lmp\", \"start\": 11576336, \"end\": 11576425}, {\"filename\": \"/edge_defs/sounds/DPSSSIT.lmp\", \"start\": 11576425, \"end\": 11576536}, {\"filename\": \"/edge_defs/sounds/DPSTNMOV.lmp\", \"start\": 11576536, \"end\": 11576544}, {\"filename\": \"/edge_defs/sounds/DPSWTCHN.lmp\", \"start\": 11576544, \"end\": 11576572}, {\"filename\": \"/edge_defs/sounds/DPSWTCHX.lmp\", \"start\": 11576572, \"end\": 11576601}, {\"filename\": \"/edge_defs/sounds/DPTELEPT.lmp\", \"start\": 11576601, \"end\": 11576703}, {\"filename\": \"/edge_defs/sounds/DPTINK.lmp\", \"start\": 11576703, \"end\": 11576755}, {\"filename\": \"/edge_defs/sounds/DPVILACT.lmp\", \"start\": 11576755, \"end\": 11576810}, {\"filename\": \"/edge_defs/sounds/DPVILATK.lmp\", \"start\": 11576810, \"end\": 11576873}, {\"filename\": \"/edge_defs/sounds/DPVILDTH.lmp\", \"start\": 11576873, \"end\": 11577141}, {\"filename\": \"/edge_defs/sounds/DPVILSIT.lmp\", \"start\": 11577141, \"end\": 11577217}, {\"filename\": \"/edge_defs/sounds/DPVIPAIN.lmp\", \"start\": 11577217, \"end\": 11577328}, {\"filename\": \"/edge_defs/sounds/DPWPNUP.lmp\", \"start\": 11577328, \"end\": 11577372}, {\"filename\": \"/edge_defs/sounds/DSACIDFT.ogg\", \"start\": 11577372, \"end\": 11584922, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSCRUSH.lmp\", \"start\": 11584922, \"end\": 11591940}, {\"filename\": \"/edge_defs/sounds/DSDGACT.ogg\", \"start\": 11591940, \"end\": 11599601, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGATK.ogg\", \"start\": 11599601, \"end\": 11606407, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGDTH.ogg\", \"start\": 11606407, \"end\": 11617223, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGPAIN.ogg\", \"start\": 11617223, \"end\": 11623215, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGSIT.ogg\", \"start\": 11623215, \"end\": 11629378, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT1.wav\", \"start\": 11629378, \"end\": 11644722, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT2.wav\", \"start\": 11644722, \"end\": 11660194, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT3.wav\", \"start\": 11660194, \"end\": 11672434, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT4.wav\", \"start\": 11672434, \"end\": 11687800, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSGLSBRK.wav\", \"start\": 11687800, \"end\": 11720398, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSJPDOWN.lmp\", \"start\": 11720398, \"end\": 11736986}, {\"filename\": \"/edge_defs/sounds/DSJPFLOW.lmp\", \"start\": 11736986, \"end\": 11740908}, {\"filename\": \"/edge_defs/sounds/DSJPIDLE.lmp\", \"start\": 11740908, \"end\": 11743875}, {\"filename\": \"/edge_defs/sounds/DSJPMOVE.lmp\", \"start\": 11743875, \"end\": 11745292}, {\"filename\": \"/edge_defs/sounds/DSJPRISE.lmp\", \"start\": 11745292, \"end\": 11753112}, {\"filename\": \"/edge_defs/sounds/DSMUCKFT.ogg\", \"start\": 11753112, \"end\": 11759186, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSSECRET.ogg\", \"start\": 11759186, \"end\": 11772027, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWATRFT.ogg\", \"start\": 11772027, \"end\": 11779688, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWTDIVE.wav\", \"start\": 11779688, \"end\": 11802164, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/HEARTBT1.ogg\", \"start\": 11802164, \"end\": 11822519, \"audio\": 1}, {\"filename\": \"/edge_defs/sprites/BSPHA0.png\", \"start\": 11822519, \"end\": 11823735}, {\"filename\": \"/edge_defs/sprites/BSPHB0.png\", \"start\": 11823735, \"end\": 11824956}, {\"filename\": \"/edge_defs/sprites/BSPHC0.png\", \"start\": 11824956, \"end\": 11826166}, {\"filename\": \"/edge_defs/sprites/BSPHD0.png\", \"start\": 11826166, \"end\": 11827367}, {\"filename\": \"/edge_defs/sprites/BSPHE0.png\", \"start\": 11827367, \"end\": 11828648}, {\"filename\": \"/edge_defs/sprites/BSPHF0.png\", \"start\": 11828648, \"end\": 11829991}, {\"filename\": \"/edge_defs/sprites/BSPHG0.png\", \"start\": 11829991, \"end\": 11831395}, {\"filename\": \"/edge_defs/sprites/BSPHH0.png\", \"start\": 11831395, \"end\": 11832740}, {\"filename\": \"/edge_defs/sprites/BSPHI0.png\", \"start\": 11832740, \"end\": 11834047}, {\"filename\": \"/edge_defs/sprites/BSPHJ0.png\", \"start\": 11834047, \"end\": 11835314}, {\"filename\": \"/edge_defs/sprites/BSPHK0.png\", \"start\": 11835314, \"end\": 11836551}, {\"filename\": \"/edge_defs/sprites/GLS1A0.lmp\", \"start\": 11836551, \"end\": 11836645}, {\"filename\": \"/edge_defs/sprites/GLS2A0.lmp\", \"start\": 11836645, \"end\": 11836859}, {\"filename\": \"/edge_defs/sprites/GLS3A0.lmp\", \"start\": 11836859, \"end\": 11837163}, {\"filename\": \"/edge_defs/sprites/GLS4A0.lmp\", \"start\": 11837163, \"end\": 11837531}, {\"filename\": \"/edge_defs/sprites/GLS5A0.lmp\", \"start\": 11837531, \"end\": 11837926}, {\"filename\": \"/edge_defs/sprites/GLS6A0.lmp\", \"start\": 11837926, \"end\": 11838362}, {\"filename\": \"/edge_defs/sprites/GLS7A0.lmp\", \"start\": 11838362, \"end\": 11838832}, {\"filename\": \"/edge_defs/sprites/GLS8A0.lmp\", \"start\": 11838832, \"end\": 11839264}, {\"filename\": \"/edge_defs/sprites/GLS9A0.lmp\", \"start\": 11839264, \"end\": 11839627}, {\"filename\": \"/edge_defs/sprites/JPCKA0.lmp\", \"start\": 11839627, \"end\": 11840443}, {\"filename\": \"/edge_defs/sprites/JPCKB0.lmp\", \"start\": 11840443, \"end\": 11841261}, {\"filename\": \"/edge_defs/sprites/JPCKC0.lmp\", \"start\": 11841261, \"end\": 11842079}, {\"filename\": \"/edge_defs/sprites/LVASA0.png\", \"start\": 11842079, \"end\": 11843377}, {\"filename\": \"/edge_defs/sprites/LVASB0.png\", \"start\": 11843377, \"end\": 11844760}, {\"filename\": \"/edge_defs/sprites/LVASC0.png\", \"start\": 11844760, \"end\": 11846114}, {\"filename\": \"/edge_defs/sprites/LVASD0.png\", \"start\": 11846114, \"end\": 11847414}, {\"filename\": \"/edge_defs/sprites/LVASE0.png\", \"start\": 11847414, \"end\": 11848683}, {\"filename\": \"/edge_defs/sprites/LVASF0.png\", \"start\": 11848683, \"end\": 11849906}, {\"filename\": \"/edge_defs/sprites/MUDSA0.png\", \"start\": 11849906, \"end\": 11851116}, {\"filename\": \"/edge_defs/sprites/MUDSB0.png\", \"start\": 11851116, \"end\": 11852328}, {\"filename\": \"/edge_defs/sprites/MUDSC0.png\", \"start\": 11852328, \"end\": 11853519}, {\"filename\": \"/edge_defs/sprites/MUDSD0.png\", \"start\": 11853519, \"end\": 11854704}, {\"filename\": \"/edge_defs/sprites/MUDSE0.png\", \"start\": 11854704, \"end\": 11855955}, {\"filename\": \"/edge_defs/sprites/MUDSF0.png\", \"start\": 11855955, \"end\": 11857196}, {\"filename\": \"/edge_defs/sprites/MUDSG0.png\", \"start\": 11857196, \"end\": 11858445}, {\"filename\": \"/edge_defs/sprites/MUDSH0.png\", \"start\": 11858445, \"end\": 11859667}, {\"filename\": \"/edge_defs/sprites/NVSCA0.lmp\", \"start\": 11859667, \"end\": 11860271}, {\"filename\": \"/edge_defs/sprites/NVSCB0.lmp\", \"start\": 11860271, \"end\": 11860875}, {\"filename\": \"/edge_defs/sprites/PLAYX1.lmp\", \"start\": 11860875, \"end\": 11861798}, {\"filename\": \"/edge_defs/sprites/PLAYX2X8.lmp\", \"start\": 11861798, \"end\": 11863014}, {\"filename\": \"/edge_defs/sprites/PLAYX3X7.lmp\", \"start\": 11863014, \"end\": 11864409}, {\"filename\": \"/edge_defs/sprites/PLAYX4X6.lmp\", \"start\": 11864409, \"end\": 11865538}, {\"filename\": \"/edge_defs/sprites/PLAYX5.lmp\", \"start\": 11865538, \"end\": 11866340}, {\"filename\": \"/edge_defs/sprites/PLAYY1.lmp\", \"start\": 11866340, \"end\": 11867288}, {\"filename\": \"/edge_defs/sprites/PLAYY2Y8.lmp\", \"start\": 11867288, \"end\": 11868516}, {\"filename\": \"/edge_defs/sprites/PLAYY3Y7.lmp\", \"start\": 11868516, \"end\": 11869902}, {\"filename\": \"/edge_defs/sprites/PLAYY4Y6.lmp\", \"start\": 11869902, \"end\": 11871040}, {\"filename\": \"/edge_defs/sprites/PLAYY5.lmp\", \"start\": 11871040, \"end\": 11871837}, {\"filename\": \"/edge_defs/sprites/PRT1A0.png\", \"start\": 11871837, \"end\": 11872709}, {\"filename\": \"/edge_defs/sprites/PRT2A0.png\", \"start\": 11872709, \"end\": 11873581}, {\"filename\": \"/edge_defs/sprites/PRT3A0.png\", \"start\": 11873581, \"end\": 11873710}, {\"filename\": \"/edge_defs/sprites/SLDGA0.png\", \"start\": 11873710, \"end\": 11874926}, {\"filename\": \"/edge_defs/sprites/SLDGB0.png\", \"start\": 11874926, \"end\": 11876144}, {\"filename\": \"/edge_defs/sprites/SLDGC0.png\", \"start\": 11876144, \"end\": 11877340}, {\"filename\": \"/edge_defs/sprites/SLDGD0.png\", \"start\": 11877340, \"end\": 11878527}, {\"filename\": \"/edge_defs/sprites/SLDGE0.png\", \"start\": 11878527, \"end\": 11879778}, {\"filename\": \"/edge_defs/sprites/SLDGF0.png\", \"start\": 11879778, \"end\": 11881019}, {\"filename\": \"/edge_defs/sprites/SLDGG0.png\", \"start\": 11881019, \"end\": 11882268}, {\"filename\": \"/edge_defs/sprites/SLDGH0.png\", \"start\": 11882268, \"end\": 11883490}, {\"filename\": \"/edge_defs/sprites/SLIMA0.png\", \"start\": 11883490, \"end\": 11884691}, {\"filename\": \"/edge_defs/sprites/SLIMB0.png\", \"start\": 11884691, \"end\": 11885896}, {\"filename\": \"/edge_defs/sprites/SLIMC0.png\", \"start\": 11885896, \"end\": 11887083}, {\"filename\": \"/edge_defs/sprites/SLIMD0.png\", \"start\": 11887083, \"end\": 11888261}, {\"filename\": \"/edge_defs/sprites/SLIME0.png\", \"start\": 11888261, \"end\": 11889506}, {\"filename\": \"/edge_defs/sprites/SLIMF0.png\", \"start\": 11889506, \"end\": 11890742}, {\"filename\": \"/edge_defs/sprites/SLIMG0.png\", \"start\": 11890742, \"end\": 11891987}, {\"filename\": \"/edge_defs/sprites/SLIMH0.png\", \"start\": 11891987, \"end\": 11893203}, {\"filename\": \"/edge_defs/sprites/SPSHA0.png\", \"start\": 11893203, \"end\": 11894420}, {\"filename\": \"/edge_defs/sprites/SPSHB0.png\", \"start\": 11894420, \"end\": 11895640}, {\"filename\": \"/edge_defs/sprites/SPSHC0.png\", \"start\": 11895640, \"end\": 11896851}, {\"filename\": \"/edge_defs/sprites/SPSHD0.png\", \"start\": 11896851, \"end\": 11898052}, {\"filename\": \"/edge_defs/sprites/SPSHE0.png\", \"start\": 11898052, \"end\": 11899332}, {\"filename\": \"/edge_defs/sprites/SPSHF0.png\", \"start\": 11899332, \"end\": 11900683}, {\"filename\": \"/edge_defs/sprites/SPSHG0.png\", \"start\": 11900683, \"end\": 11902090}, {\"filename\": \"/edge_defs/sprites/SPSHH0.png\", \"start\": 11902090, \"end\": 11903442}, {\"filename\": \"/edge_defs/sprites/SPSHI0.png\", \"start\": 11903442, \"end\": 11904753}, {\"filename\": \"/edge_defs/sprites/SPSHJ0.png\", \"start\": 11904753, \"end\": 11906021}, {\"filename\": \"/edge_defs/sprites/SPSHK0.png\", \"start\": 11906021, \"end\": 11907258}, {\"filename\": \"/edge_defs/sprites/TSTPA0.png\", \"start\": 11907258, \"end\": 11908383}, {\"filename\": \"/edge_defs/sprites/TSTPB0.lmp\", \"start\": 11908383, \"end\": 11908725}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA1.png\", \"start\": 11908725, \"end\": 11910005}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA2.png\", \"start\": 11910005, \"end\": 11911558}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA3.png\", \"start\": 11911558, \"end\": 11913189}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA4.png\", \"start\": 11913189, \"end\": 11914722}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA5.png\", \"start\": 11914722, \"end\": 11915908}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA6.png\", \"start\": 11915908, \"end\": 11917424}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA7.png\", \"start\": 11917424, \"end\": 11919017}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA8.png\", \"start\": 11919017, \"end\": 11920535}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB1.png\", \"start\": 11920535, \"end\": 11921765}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB2.png\", \"start\": 11921765, \"end\": 11923285}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB3.png\", \"start\": 11923285, \"end\": 11924892}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB4.png\", \"start\": 11924892, \"end\": 11926425}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB5.png\", \"start\": 11926425, \"end\": 11927635}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB6.png\", \"start\": 11927635, \"end\": 11929133}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB7.png\", \"start\": 11929133, \"end\": 11930725}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB8.png\", \"start\": 11930725, \"end\": 11932239}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC1.png\", \"start\": 11932239, \"end\": 11933536}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC2.png\", \"start\": 11933536, \"end\": 11935042}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC3.png\", \"start\": 11935042, \"end\": 11936613}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC4.png\", \"start\": 11936613, \"end\": 11938144}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC5.png\", \"start\": 11938144, \"end\": 11939481}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC6.png\", \"start\": 11939481, \"end\": 11941001}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC7.png\", \"start\": 11941001, \"end\": 11942537}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC8.png\", \"start\": 11942537, \"end\": 11944026}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD1.png\", \"start\": 11944026, \"end\": 11945337}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD2.png\", \"start\": 11945337, \"end\": 11946855}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD3.png\", \"start\": 11946855, \"end\": 11948443}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD4.png\", \"start\": 11948443, \"end\": 11949968}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD5.png\", \"start\": 11949968, \"end\": 11951294}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD6.png\", \"start\": 11951294, \"end\": 11952836}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD7.png\", \"start\": 11952836, \"end\": 11954409}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD8.png\", \"start\": 11954409, \"end\": 11955912}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE1.png\", \"start\": 11955912, \"end\": 11957274}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE2.png\", \"start\": 11957274, \"end\": 11958791}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE3.png\", \"start\": 11958791, \"end\": 11960339}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE4.png\", \"start\": 11960339, \"end\": 11961937}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE5.png\", \"start\": 11961937, \"end\": 11963375}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE6.png\", \"start\": 11963375, \"end\": 11964925}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE7.png\", \"start\": 11964925, \"end\": 11966479}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE8.png\", \"start\": 11966479, \"end\": 11968038}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF1.png\", \"start\": 11968038, \"end\": 11969435}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF2.png\", \"start\": 11969435, \"end\": 11971006}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF3.png\", \"start\": 11971006, \"end\": 11972608}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF4.png\", \"start\": 11972608, \"end\": 11974174}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF5.png\", \"start\": 11974174, \"end\": 11975577}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF6.png\", \"start\": 11975577, \"end\": 11977094}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF7.png\", \"start\": 11977094, \"end\": 11978690}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF8.png\", \"start\": 11978690, \"end\": 11980298}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG1.png\", \"start\": 11980298, \"end\": 11981687}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG2.png\", \"start\": 11981687, \"end\": 11983275}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG3.png\", \"start\": 11983275, \"end\": 11984919}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG4.png\", \"start\": 11984919, \"end\": 11986439}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG5.png\", \"start\": 11986439, \"end\": 11987789}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG6.png\", \"start\": 11987789, \"end\": 11989310}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG7.png\", \"start\": 11989310, \"end\": 11990932}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG8.png\", \"start\": 11990932, \"end\": 11992502}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH1.png\", \"start\": 11992502, \"end\": 11993812}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH2.png\", \"start\": 11993812, \"end\": 11995343}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH3.png\", \"start\": 11995343, \"end\": 11996935}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH4.png\", \"start\": 11996935, \"end\": 11998418}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH5.png\", \"start\": 11998418, \"end\": 11999712}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH6.png\", \"start\": 11999712, \"end\": 12001179}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH7.png\", \"start\": 12001179, \"end\": 12002757}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH8.png\", \"start\": 12002757, \"end\": 12004326}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDI0.png\", \"start\": 12004326, \"end\": 12006016}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDJ0.png\", \"start\": 12006016, \"end\": 12007798}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDK0.png\", \"start\": 12007798, \"end\": 12009544}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDL0.png\", \"start\": 12009544, \"end\": 12011264}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDM0.png\", \"start\": 12011264, \"end\": 12012991}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDN0.png\", \"start\": 12012991, \"end\": 12014730}, {\"filename\": \"/edge_defs/textures/FUZZMAP8.png\", \"start\": 12014730, \"end\": 12029530}, {\"filename\": \"/edge_defs/textures/PORTAL7A.jpg\", \"start\": 12029530, \"end\": 12051648}, {\"filename\": \"/edge_defs/textures/PORTAL7B.jpg\", \"start\": 12051648, \"end\": 12070001}, {\"filename\": \"/edge_defs/textures/PORTAL7C.jpg\", \"start\": 12070001, \"end\": 12085492}, {\"filename\": \"/edge_defs/textures/PORTAL7D.jpg\", \"start\": 12085492, \"end\": 12100786}, {\"filename\": \"/edge_defs/textures/PORTAL7E.jpg\", \"start\": 12100786, \"end\": 12115653}, {\"filename\": \"/edge_defs/textures/PORTAL7F.jpg\", \"start\": 12115653, \"end\": 12132654}, {\"filename\": \"/edge_defs/textures/PORTAL7G.jpg\", \"start\": 12132654, \"end\": 12153362}, {\"filename\": \"/edge_defs/ttf/ECFONT01.ttf\", \"start\": 12153362, \"end\": 12217702}, {\"filename\": \"/edge_defs/version.txt\", \"start\": 12217702, \"end\": 12217706}, {\"filename\": \"/freedm.wad\", \"start\": 12217706, \"end\": 34042154}, {\"filename\": \"/freedoom2.wad\", \"start\": 34042154, \"end\": 62586286}, {\"filename\": \"/soundfont/16-Bit Game Station.sf2\", \"start\": 62586286, \"end\": 66269824}, {\"filename\": \"/soundfont/ProtoSquare!.sf2\", \"start\": 66269824, \"end\": 66634062}, {\"filename\": \"/soundfont/adplug.op2\", \"start\": 66634062, \"end\": 66645970}, {\"filename\": \"/soundfont/bonkers_for_bits.sf2\", \"start\": 66645970, \"end\": 66673974}, {\"filename\": \"/soundfont/default.sf2\", \"start\": 66673974, \"end\": 70820414}, {\"filename\": \"/soundfont/dmxopl.op2\", \"start\": 70820414, \"end\": 70832322}, {\"filename\": \"/soundfont/dmxopl3.wopl\", \"start\": 70832322, \"end\": 71044391}, {\"filename\": \"/soundfont/wadsmoosh.op2\", \"start\": 71044391, \"end\": 71056299}], \"remote_package_size\": 52773367, \"package_uuid\": \"sha256-3660f6592198d2db962c1a60de92eee81a33a242f17248d5858228595d810cbc\"});\r\n\r\n  })();\r\n\r\n\r\n// Sometimes an existing Module object exists with properties\r\n// meant to overwrite the default module functionality. Here\r\n// we collect those properties and reapply _after_ we configure\r\n// the current environment's defaults to avoid having to be so\r\n// defensive during initialization.\r\nvar moduleOverrides = Object.assign({}, Module);\r\n\r\nvar arguments_ = [];\r\nvar thisProgram = './this.program';\r\nvar quit_ = (status, toThrow) => {\r\n  throw toThrow;\r\n};\r\n\r\n// Determine the runtime environment we are in. You can customize this by\r\n// setting the ENVIRONMENT setting at compile time (see settings.js).\r\n\r\nvar ENVIRONMENT_IS_WEB = true;\r\nvar ENVIRONMENT_IS_WORKER = false;\r\nvar ENVIRONMENT_IS_NODE = false;\r\nvar ENVIRONMENT_IS_SHELL = false;\r\n\r\n// `/` should be present at the end if `scriptDirectory` is not empty\r\nvar scriptDirectory = '';\r\nfunction locateFile(path) {\r\n  if (Module['locateFile']) {\r\n    return Module['locateFile'](path, scriptDirectory);\r\n  }\r\n  return scriptDirectory + path;\r\n}\r\n\r\n// Hooks that are implemented differently in different runtime environments.\r\nvar read_,\r\n    readAsync,\r\n    readBinary,\r\n    setWindowTitle;\r\n\r\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\r\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\r\n// ENVIRONMENT_IS_NODE.\r\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\r\n    scriptDirectory = self.location.href;\r\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\r\n    scriptDirectory = document.currentScript.src;\r\n  }\r\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\r\n  // is gone, so we saved it, and we use it here instead of any other info.\r\n  if (_scriptDir) {\r\n    scriptDirectory = _scriptDir;\r\n  }\r\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\r\n  // otherwise, slice off the final part of the url to find the script directory.\r\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\r\n  // and scriptDirectory will correctly be replaced with an empty string.\r\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\r\n  // they are removed because they could contain a slash.\r\n  if (scriptDirectory.indexOf('blob:') !== 0) {\r\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\r\n  } else {\r\n    scriptDirectory = '';\r\n  }\r\n\r\n  // Differentiate the Web Worker from the Node Worker case, as reading must\r\n  // be done differently.\r\n  {\r\n// include: web_or_worker_shell_read.js\r\nread_ = (url) => {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, false);\r\n      xhr.send(null);\r\n      return xhr.responseText;\r\n  }\r\n\r\n  if (ENVIRONMENT_IS_WORKER) {\r\n    readBinary = (url) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, false);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.send(null);\r\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\r\n    };\r\n  }\r\n\r\n  readAsync = (url, onload, onerror) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url, true);\r\n    xhr.responseType = 'arraybuffer';\r\n    xhr.onload = () => {\r\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n        onload(xhr.response);\r\n        return;\r\n      }\r\n      onerror();\r\n    };\r\n    xhr.onerror = onerror;\r\n    xhr.send(null);\r\n  }\r\n\r\n// end include: web_or_worker_shell_read.js\r\n  }\r\n\r\n  setWindowTitle = (title) => document.title = title;\r\n} else\r\n{\r\n}\r\n\r\nvar out = Module['print'] || console.log.bind(console);\r\nvar err = Module['printErr'] || console.warn.bind(console);\r\n\r\n// Merge back in the overrides\r\nObject.assign(Module, moduleOverrides);\r\n// Free the object hierarchy contained in the overrides, this lets the GC\r\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\r\nmoduleOverrides = null;\r\n\r\n// Emit code to handle expected values on the Module object. This applies Module.x\r\n// to the proper local x. This has two benefits: first, we only emit it if it is\r\n// expected to arrive, and second, by using a local everywhere else that can be\r\n// minified.\r\n\r\nif (Module['arguments']) arguments_ = Module['arguments'];\r\n\r\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\r\n\r\nif (Module['quit']) quit_ = Module['quit'];\r\n\r\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\r\n\r\n\r\n// end include: shell.js\r\n// include: preamble.js\r\n// === Preamble library stuff ===\r\n\r\n// Documentation for the public APIs defined in this file must be updated in:\r\n//    site/source/docs/api_reference/preamble.js.rst\r\n// A prebuilt local version of the documentation is available at:\r\n//    site/build/text/docs/api_reference/preamble.js.txt\r\n// You can also build docs locally as HTML or other formats in site/\r\n// An online HTML version (which may be of a different version of Emscripten)\r\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\r\n\r\nvar wasmBinary;\r\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\r\nvar noExitRuntime = Module['noExitRuntime'] || true;\r\n\r\nif (typeof WebAssembly != 'object') {\r\n  abort('no native wasm support detected');\r\n}\r\n\r\n// Wasm globals\r\n\r\nvar wasmMemory;\r\n\r\n//========================================\r\n// Runtime essentials\r\n//========================================\r\n\r\n// whether we are quitting the application. no code should run after this.\r\n// set in exit() and abort()\r\nvar ABORT = false;\r\n\r\n// set by exit() and abort().  Passed to 'onExit' handler.\r\n// NOTE: This is also used as the process return code code in shell environments\r\n// but only when noExitRuntime is false.\r\nvar EXITSTATUS;\r\n\r\n/** @type {function(*, string=)} */\r\nfunction assert(condition, text) {\r\n  if (!condition) {\r\n    // This build was created without ASSERTIONS defined.  `assert()` should not\r\n    // ever be called in this configuration but in case there are callers in\r\n    // the wild leave this simple abort() implemenation here for now.\r\n    abort(text);\r\n  }\r\n}\r\n\r\n// Memory management\r\n\r\nvar HEAP,\r\n/** @type {!Int8Array} */\r\n  HEAP8,\r\n/** @type {!Uint8Array} */\r\n  HEAPU8,\r\n/** @type {!Int16Array} */\r\n  HEAP16,\r\n/** @type {!Uint16Array} */\r\n  HEAPU16,\r\n/** @type {!Int32Array} */\r\n  HEAP32,\r\n/** @type {!Uint32Array} */\r\n  HEAPU32,\r\n/** @type {!Float32Array} */\r\n  HEAPF32,\r\n/** @type {!Float64Array} */\r\n  HEAPF64;\r\n\r\nfunction updateMemoryViews() {\r\n  var b = wasmMemory.buffer;\r\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\r\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\r\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\r\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\r\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\r\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\r\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\r\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\r\n}\r\n\r\n// include: runtime_init_table.js\r\n// In regular non-RELOCATABLE mode the table is exported\r\n// from the wasm module and this will be assigned once\r\n// the exports are available.\r\nvar wasmTable;\r\n\r\n// end include: runtime_init_table.js\r\n// include: runtime_stack_check.js\r\n// end include: runtime_stack_check.js\r\n// include: runtime_assertions.js\r\n// end include: runtime_assertions.js\r\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\r\nvar __ATINIT__    = []; // functions called during startup\r\nvar __ATMAIN__    = []; // functions called when main() is to be run\r\nvar __ATEXIT__    = []; // functions called during shutdown\r\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\r\n\r\nvar runtimeInitialized = false;\r\n\r\nvar runtimeKeepaliveCounter = 0;\r\n\r\nfunction keepRuntimeAlive() {\r\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\r\n}\r\n\r\nfunction preRun() {\r\n  if (Module['preRun']) {\r\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\r\n    while (Module['preRun'].length) {\r\n      addOnPreRun(Module['preRun'].shift());\r\n    }\r\n  }\r\n  callRuntimeCallbacks(__ATPRERUN__);\r\n}\r\n\r\nfunction initRuntime() {\r\n  runtimeInitialized = true;\r\n\r\n  \r\nif (!Module[\"noFSInit\"] && !FS.init.initialized)\r\n  FS.init();\r\nFS.ignorePermissions = false;\r\n\r\nTTY.init();\r\n  callRuntimeCallbacks(__ATINIT__);\r\n}\r\n\r\nfunction preMain() {\r\n  \r\n  callRuntimeCallbacks(__ATMAIN__);\r\n}\r\n\r\nfunction postRun() {\r\n\r\n  if (Module['postRun']) {\r\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\r\n    while (Module['postRun'].length) {\r\n      addOnPostRun(Module['postRun'].shift());\r\n    }\r\n  }\r\n\r\n  callRuntimeCallbacks(__ATPOSTRUN__);\r\n}\r\n\r\nfunction addOnPreRun(cb) {\r\n  __ATPRERUN__.unshift(cb);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n  __ATINIT__.unshift(cb);\r\n}\r\n\r\nfunction addOnPreMain(cb) {\r\n  __ATMAIN__.unshift(cb);\r\n}\r\n\r\nfunction addOnExit(cb) {\r\n}\r\n\r\nfunction addOnPostRun(cb) {\r\n  __ATPOSTRUN__.unshift(cb);\r\n}\r\n\r\n// include: runtime_math.js\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\r\n\r\n// end include: runtime_math.js\r\n// A counter of dependencies for calling run(). If we need to\r\n// do asynchronous work before running, increment this and\r\n// decrement it. Incrementing must happen in a place like\r\n// Module.preRun (used by emcc to add file preloading).\r\n// Note that you can add dependencies in preRun, even though\r\n// it happens right before run - run will be postponed until\r\n// the dependencies are met.\r\nvar runDependencies = 0;\r\nvar runDependencyWatcher = null;\r\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\r\n\r\nfunction getUniqueRunDependency(id) {\r\n  return id;\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n  runDependencies++;\r\n\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n  runDependencies--;\r\n\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n\r\n  if (runDependencies == 0) {\r\n    if (runDependencyWatcher !== null) {\r\n      clearInterval(runDependencyWatcher);\r\n      runDependencyWatcher = null;\r\n    }\r\n    if (dependenciesFulfilled) {\r\n      var callback = dependenciesFulfilled;\r\n      dependenciesFulfilled = null;\r\n      callback(); // can add another dependenciesFulfilled\r\n    }\r\n  }\r\n}\r\n\r\n/** @param {string|number=} what */\r\nfunction abort(what) {\r\n  if (Module['onAbort']) {\r\n    Module['onAbort'](what);\r\n  }\r\n\r\n  what = 'Aborted(' + what + ')';\r\n  // TODO(sbc): Should we remove printing and leave it up to whoever\r\n  // catches the exception?\r\n  err(what);\r\n\r\n  ABORT = true;\r\n  EXITSTATUS = 1;\r\n\r\n  what += '. Build with -sASSERTIONS for more info.';\r\n\r\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\r\n  // exception, which means we'd run destructors on it. We need the error to\r\n  // simply make the program stop.\r\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\r\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\r\n  // a trap or not based on a hidden field within the object. So at the moment\r\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\r\n  // allows this in the wasm spec.\r\n\r\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\r\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\r\n  // though it can.\r\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\r\n  /** @suppress {checkTypes} */\r\n  var e = new WebAssembly.RuntimeError(what);\r\n\r\n  readyPromiseReject(e);\r\n  // Throw the error whether or not MODULARIZE is set because abort is used\r\n  // in code paths apart from instantiation where an exception is expected\r\n  // to be thrown when abort is called.\r\n  throw e;\r\n}\r\n\r\n// include: memoryprofiler.js\r\n// end include: memoryprofiler.js\r\n// include: URIUtils.js\r\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\r\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\r\n\r\n// Indicates whether filename is a base64 data URI.\r\nfunction isDataURI(filename) {\r\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\r\n  return filename.startsWith(dataURIPrefix);\r\n}\r\n\r\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\r\nfunction isFileURI(filename) {\r\n  return filename.startsWith('file://');\r\n}\r\n\r\n// end include: URIUtils.js\r\n// include: runtime_exceptions.js\r\n// end include: runtime_exceptions.js\r\nvar wasmBinaryFile;\r\n  wasmBinaryFile = 'edge-classic.wasm';\r\n  if (!isDataURI(wasmBinaryFile)) {\r\n    wasmBinaryFile = locateFile(wasmBinaryFile);\r\n  }\r\n\r\nfunction getBinary(file) {\r\n  try {\r\n    if (file == wasmBinaryFile && wasmBinary) {\r\n      return new Uint8Array(wasmBinary);\r\n    }\r\n    if (readBinary) {\r\n      return readBinary(file);\r\n    }\r\n    throw \"both async and sync fetching of the wasm failed\";\r\n  }\r\n  catch (err) {\r\n    abort(err);\r\n  }\r\n}\r\n\r\nfunction getBinaryPromise(binaryFile) {\r\n  // If we don't have the binary yet, try to load it asynchronously.\r\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\r\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\r\n  // Cordova or Electron apps are typically loaded from a file:// url.\r\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\r\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\r\n    if (typeof fetch == 'function'\r\n    ) {\r\n      return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n        if (!response['ok']) {\r\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\r\n        }\r\n        return response['arrayBuffer']();\r\n      }).catch(() => getBinary(binaryFile));\r\n    }\r\n  }\r\n\r\n  // Otherwise, getBinary should be able to get it synchronously\r\n  return Promise.resolve().then(() => getBinary(binaryFile));\r\n}\r\n\r\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\r\n  return getBinaryPromise(binaryFile).then((binary) => {\r\n    return WebAssembly.instantiate(binary, imports);\r\n  }).then((instance) => {\r\n    return instance;\r\n  }).then(receiver, (reason) => {\r\n    err('failed to asynchronously prepare wasm: ' + reason);\r\n\r\n    abort(reason);\r\n  });\r\n}\r\n\r\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\r\n  if (!binary &&\r\n      typeof WebAssembly.instantiateStreaming == 'function' &&\r\n      !isDataURI(binaryFile) &&\r\n      typeof fetch == 'function') {\r\n    return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n      // Suppress closure warning here since the upstream definition for\r\n      // instantiateStreaming only allows Promise<Repsponse> rather than\r\n      // an actual Response.\r\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\r\n      /** @suppress {checkTypes} */\r\n      var result = WebAssembly.instantiateStreaming(response, imports);\r\n\r\n      return result.then(\r\n        callback,\r\n        function(reason) {\r\n          // We expect the most common failure cause to be a bad MIME type for the binary,\r\n          // in which case falling back to ArrayBuffer instantiation should work.\r\n          err('wasm streaming compile failed: ' + reason);\r\n          err('falling back to ArrayBuffer instantiation');\r\n          return instantiateArrayBuffer(binaryFile, imports, callback);\r\n        });\r\n    });\r\n  } else {\r\n    return instantiateArrayBuffer(binaryFile, imports, callback);\r\n  }\r\n}\r\n\r\n// Create the wasm instance.\r\n// Receives the wasm imports, returns the exports.\r\nfunction createWasm() {\r\n  // prepare imports\r\n  var info = {\r\n    'env': wasmImports,\r\n    'wasi_snapshot_preview1': wasmImports,\r\n  };\r\n  // Load the wasm module and create an instance of using native support in the JS engine.\r\n  // handle a generated wasm instance, receiving its exports and\r\n  // performing other necessary setup\r\n  /** @param {WebAssembly.Module=} module*/\r\n  function receiveInstance(instance, module) {\r\n    var exports = instance.exports;\r\n\r\n    exports = Asyncify.instrumentWasmExports(exports);\r\n\r\n    Module['asm'] = exports;\r\n\r\n    wasmMemory = Module['asm']['memory'];\r\n    updateMemoryViews();\r\n\r\n    wasmTable = Module['asm']['__indirect_function_table'];\r\n\r\n    addOnInit(Module['asm']['__wasm_call_ctors']);\r\n\r\n    removeRunDependency('wasm-instantiate');\r\n\r\n    return exports;\r\n  }\r\n  // wait for the pthread pool (if any)\r\n  addRunDependency('wasm-instantiate');\r\n\r\n  // Prefer streaming instantiation if available.\r\n  function receiveInstantiationResult(result) {\r\n    // 'result' is a ResultObject object which has both the module and instance.\r\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\r\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\r\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\r\n    receiveInstance(result['instance']);\r\n  }\r\n\r\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\r\n  // to manually instantiate the Wasm module themselves. This allows pages to\r\n  // run the instantiation parallel to any other async startup actions they are\r\n  // performing.\r\n  // Also pthreads and wasm workers initialize the wasm instance through this\r\n  // path.\r\n  if (Module['instantiateWasm']) {\r\n\r\n    try {\r\n      return Module['instantiateWasm'](info, receiveInstance);\r\n    } catch(e) {\r\n      err('Module.instantiateWasm callback failed with error: ' + e);\r\n        // If instantiation fails, reject the module ready promise.\r\n        readyPromiseReject(e);\r\n    }\r\n  }\r\n\r\n  // If instantiation fails, reject the module ready promise.\r\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\r\n  return {}; // no exports yet; we'll fill them in later\r\n}\r\n\r\n// Globals used by JS i64 conversions (see makeSetValue)\r\nvar tempDouble;\r\nvar tempI64;\r\n\r\n// include: runtime_debug.js\r\n// end include: runtime_debug.js\r\n// === Body ===\r\n\r\nvar ASM_CONSTS = {\r\n  614388: () => { if (Module.edgePostInit) { Module.edgePostInit(); } },  \r\n 614444: ($0, $1) => { const args = []; for (let i = 0; i < $0; i++) { args.push(UTF8ToString(HEAP32[($1 >> 2) + i])); } console.log(`Edge command line: ${args}`); const homeIndex = args.indexOf(\"-home\"); if (homeIndex === -1 || homeIndex >= args.length || args[homeIndex + 1].startsWith(\"-\")) { throw \"No home command line option specified\" } const homeDir = args[homeIndex + 1]; if (!FS.analyzePath(homeDir).exists) { FS.mkdirTree(homeDir); } FS.mount(IDBFS, {}, homeDir); FS.syncfs(true, function (err) { if (err) { console.error(`Error mounting home dir ${err}`); return; } Module._I_WebMain($0, $1); }); },  \r\n 615034: () => { if (Module.onFullscreen) { Module.onFullscreen(); } },  \r\n 615090: ($0) => { if (Module.edgePreSyncFS) { Module.edgePreSyncFS(); } FS.syncfs($0, function (err) { if (Module.edgePostSyncFS) { Module.edgePostSyncFS(); } }); },  \r\n 615239: () => { if (typeof(AudioContext) !== 'undefined') { return true; } else if (typeof(webkitAudioContext) !== 'undefined') { return true; } return false; },  \r\n 615386: () => { if ((typeof(navigator.mediaDevices) !== 'undefined') && (typeof(navigator.mediaDevices.getUserMedia) !== 'undefined')) { return true; } else if (typeof(navigator.webkitGetUserMedia) !== 'undefined') { return true; } return false; },  \r\n 615620: ($0) => { if(typeof(Module['SDL2']) === 'undefined') { Module['SDL2'] = {}; } var SDL2 = Module['SDL2']; if (!$0) { SDL2.audio = {}; } else { SDL2.capture = {}; } if (!SDL2.audioContext) { if (typeof(AudioContext) !== 'undefined') { SDL2.audioContext = new AudioContext(); } else if (typeof(webkitAudioContext) !== 'undefined') { SDL2.audioContext = new webkitAudioContext(); } if (SDL2.audioContext) { autoResumeAudioContext(SDL2.audioContext); } } return SDL2.audioContext === undefined ? -1 : 0; },  \r\n 616113: () => { var SDL2 = Module['SDL2']; return SDL2.audioContext.sampleRate; },  \r\n 616181: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; var have_microphone = function(stream) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); SDL2.capture.silenceTimer = undefined; } SDL2.capture.mediaStreamNode = SDL2.audioContext.createMediaStreamSource(stream); SDL2.capture.scriptProcessorNode = SDL2.audioContext.createScriptProcessor($1, $0, 1); SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) { if ((SDL2 === undefined) || (SDL2.capture === undefined)) { return; } audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0); SDL2.capture.currentCaptureBuffer = audioProcessingEvent.inputBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode); SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination); SDL2.capture.stream = stream; }; var no_microphone = function(error) { }; SDL2.capture.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { SDL2.capture.currentCaptureBuffer = SDL2.capture.silenceBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.silenceTimer = setTimeout(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); if ((navigator.mediaDevices !== undefined) && (navigator.mediaDevices.getUserMedia !== undefined)) { navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(have_microphone).catch(no_microphone); } else if (navigator.webkitGetUserMedia !== undefined) { navigator.webkitGetUserMedia({ audio: true, video: false }, have_microphone, no_microphone); } },  \r\n 617833: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; SDL2.audio.scriptProcessorNode = SDL2.audioContext['createScriptProcessor']($1, 0, $0); SDL2.audio.scriptProcessorNode['onaudioprocess'] = function (e) { if ((SDL2 === undefined) || (SDL2.audio === undefined)) { return; } SDL2.audio.currentOutputBuffer = e['outputBuffer']; dynCall('vi', $2, [$3]); }; SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']); },  \r\n 618243: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.capture.currentCaptureBuffer.numberOfChannels; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.capture.currentCaptureBuffer.getChannelData(c); if (channelData.length != $1) { throw 'Web Audio capture buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } if (numChannels == 1) { for (var j = 0; j < $1; ++j) { setValue($0 + (j * 4), channelData[j], 'float'); } } else { for (var j = 0; j < $1; ++j) { setValue($0 + (((j * numChannels) + c) * 4), channelData[j], 'float'); } } } },  \r\n 618848: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.audio.currentOutputBuffer['numberOfChannels']; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.audio.currentOutputBuffer['getChannelData'](c); if (channelData.length != $1) { throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } for (var j = 0; j < $1; ++j) { channelData[j] = HEAPF32[$0 + ((j*numChannels + c) << 2) >> 2]; } } },  \r\n 619328: ($0) => { var SDL2 = Module['SDL2']; if ($0) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); } if (SDL2.capture.stream !== undefined) { var tracks = SDL2.capture.stream.getAudioTracks(); for (var i = 0; i < tracks.length; i++) { SDL2.capture.stream.removeTrack(tracks[i]); } SDL2.capture.stream = undefined; } if (SDL2.capture.scriptProcessorNode !== undefined) { SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) {}; SDL2.capture.scriptProcessorNode.disconnect(); SDL2.capture.scriptProcessorNode = undefined; } if (SDL2.capture.mediaStreamNode !== undefined) { SDL2.capture.mediaStreamNode.disconnect(); SDL2.capture.mediaStreamNode = undefined; } if (SDL2.capture.silenceBuffer !== undefined) { SDL2.capture.silenceBuffer = undefined } SDL2.capture = undefined; } else { if (SDL2.audio.scriptProcessorNode != undefined) { SDL2.audio.scriptProcessorNode.disconnect(); SDL2.audio.scriptProcessorNode = undefined; } SDL2.audio = undefined; } if ((SDL2.audioContext !== undefined) && (SDL2.audio === undefined) && (SDL2.capture === undefined)) { SDL2.audioContext.close(); SDL2.audioContext = undefined; } },  \r\n 620500: ($0, $1, $2) => { var w = $0; var h = $1; var pixels = $2; if (!Module['SDL2']) Module['SDL2'] = {}; var SDL2 = Module['SDL2']; if (SDL2.ctxCanvas !== Module['canvas']) { SDL2.ctx = Module['createContext'](Module['canvas'], false, true); SDL2.ctxCanvas = Module['canvas']; } if (SDL2.w !== w || SDL2.h !== h || SDL2.imageCtx !== SDL2.ctx) { SDL2.image = SDL2.ctx.createImageData(w, h); SDL2.w = w; SDL2.h = h; SDL2.imageCtx = SDL2.ctx; } var data = SDL2.image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = 0xff; src++; dst += 4; } } else { if (SDL2.data32Data !== data) { SDL2.data32 = new Int32Array(data.buffer); SDL2.data8 = new Uint8Array(data.buffer); SDL2.data32Data = data; } var data32 = SDL2.data32; num = data32.length; data32.set(HEAP32.subarray(src, src + num)); var data8 = SDL2.data8; var i = 3; var j = i + 4*num; if (num % 8 == 0) { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; } } else { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; } } } SDL2.ctx.putImageData(SDL2.image, 0, 0); },  \r\n 621969: ($0, $1, $2, $3, $4) => { var w = $0; var h = $1; var hot_x = $2; var hot_y = $3; var pixels = $4; var canvas = document.createElement(\"canvas\"); canvas.width = w; canvas.height = h; var ctx = canvas.getContext(\"2d\"); var image = ctx.createImageData(w, h); var data = image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = (val >> 24) & 0xff; src++; dst += 4; } } else { var data32 = new Int32Array(data.buffer); num = data32.length; data32.set(HEAP32.subarray(src, src + num)); } ctx.putImageData(image, 0, 0); var url = hot_x === 0 && hot_y === 0 ? \"url(\" + canvas.toDataURL() + \"), auto\" : \"url(\" + canvas.toDataURL() + \") \" + hot_x + \" \" + hot_y + \", auto\"; var urlBuf = _malloc(url.length + 1); stringToUTF8(url, urlBuf, url.length + 1); return urlBuf; },  \r\n 622958: ($0) => { if (Module['canvas']) { Module['canvas'].style['cursor'] = UTF8ToString($0); } },  \r\n 623041: () => { if (Module['canvas']) { Module['canvas'].style['cursor'] = 'none'; } },  \r\n 623110: () => { return window.innerWidth; },  \r\n 623140: () => { return window.innerHeight; },  \r\n 623171: ($0, $1) => { alert(UTF8ToString($0) + \"\\n\\n\" + UTF8ToString($1)); }\r\n};\r\n\r\n\r\n\r\n// end include: preamble.js\r\n\r\n  /** @constructor */\r\n  function ExitStatus(status) {\r\n      this.name = 'ExitStatus';\r\n      this.message = 'Program terminated with exit(' + status + ')';\r\n      this.status = status;\r\n    }\r\n\r\n  function listenOnce(object, event, func) {\r\n      object.addEventListener(event, func, { 'once': true });\r\n    }\r\n  /** @param {Object=} elements */\r\n  function autoResumeAudioContext(ctx, elements) {\r\n      if (!elements) {\r\n        elements = [document, document.getElementById('canvas')];\r\n      }\r\n      ['keydown', 'mousedown', 'touchstart'].forEach((event) => {\r\n        elements.forEach((element) => {\r\n          if (element) {\r\n            listenOnce(element, event, () => {\r\n              if (ctx.state === 'suspended') ctx.resume();\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n  function callRuntimeCallbacks(callbacks) {\r\n      while (callbacks.length > 0) {\r\n        // Pass the module as the first argument.\r\n        callbacks.shift()(Module);\r\n      }\r\n    }\r\n\r\n  function dynCallLegacy(sig, ptr, args) {\r\n      var f = Module['dynCall_' + sig];\r\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\r\n    }\r\n  \r\n  var wasmTableMirror = [];\r\n  \r\n  function getWasmTableEntry(funcPtr) {\r\n      var func = wasmTableMirror[funcPtr];\r\n      if (!func) {\r\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\r\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\r\n      }\r\n      return func;\r\n    }\r\n  /** @param {Object=} args */\r\n  function dynCall(sig, ptr, args) {\r\n      return dynCallLegacy(sig, ptr, args);\r\n    }\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {string} type\r\n     */\r\n  function getValue(ptr, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': return HEAP8[((ptr)>>0)];\r\n      case 'i8': return HEAP8[((ptr)>>0)];\r\n      case 'i16': return HEAP16[((ptr)>>1)];\r\n      case 'i32': return HEAP32[((ptr)>>2)];\r\n      case 'i64': return HEAP32[((ptr)>>2)];\r\n      case 'float': return HEAPF32[((ptr)>>2)];\r\n      case 'double': return HEAPF64[((ptr)>>3)];\r\n      case '*': return HEAPU32[((ptr)>>2)];\r\n      default: abort('invalid type for getValue: ' + type);\r\n    }\r\n  }\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {number} value\r\n     * @param {string} type\r\n     */\r\n  function setValue(ptr, value, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\r\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\r\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\r\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\r\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((ptr)>>2)] = tempI64[0],HEAP32[(((ptr)+(4))>>2)] = tempI64[1]); break;\r\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\r\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\r\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\r\n      default: abort('invalid type for setValue: ' + type);\r\n    }\r\n  }\r\n\r\n  /** @constructor */\r\n  function ExceptionInfo(excPtr) {\r\n      this.excPtr = excPtr;\r\n      this.ptr = excPtr - 24;\r\n  \r\n      this.set_type = function(type) {\r\n        HEAPU32[(((this.ptr)+(4))>>2)] = type;\r\n      };\r\n  \r\n      this.get_type = function() {\r\n        return HEAPU32[(((this.ptr)+(4))>>2)];\r\n      };\r\n  \r\n      this.set_destructor = function(destructor) {\r\n        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;\r\n      };\r\n  \r\n      this.get_destructor = function() {\r\n        return HEAPU32[(((this.ptr)+(8))>>2)];\r\n      };\r\n  \r\n      this.set_caught = function (caught) {\r\n        caught = caught ? 1 : 0;\r\n        HEAP8[(((this.ptr)+(12))>>0)] = caught;\r\n      };\r\n  \r\n      this.get_caught = function () {\r\n        return HEAP8[(((this.ptr)+(12))>>0)] != 0;\r\n      };\r\n  \r\n      this.set_rethrown = function (rethrown) {\r\n        rethrown = rethrown ? 1 : 0;\r\n        HEAP8[(((this.ptr)+(13))>>0)] = rethrown;\r\n      };\r\n  \r\n      this.get_rethrown = function () {\r\n        return HEAP8[(((this.ptr)+(13))>>0)] != 0;\r\n      };\r\n  \r\n      // Initialize native structure fields. Should be called once after allocated.\r\n      this.init = function(type, destructor) {\r\n        this.set_adjusted_ptr(0);\r\n        this.set_type(type);\r\n        this.set_destructor(destructor);\r\n      }\r\n  \r\n      this.set_adjusted_ptr = function(adjustedPtr) {\r\n        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;\r\n      };\r\n  \r\n      this.get_adjusted_ptr = function() {\r\n        return HEAPU32[(((this.ptr)+(16))>>2)];\r\n      };\r\n  \r\n      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\r\n      // when the pointer is casted to some of the exception object base classes (e.g. when virtual\r\n      // inheritance is used). When a pointer is thrown this method should return the thrown pointer\r\n      // itself.\r\n      this.get_exception_ptr = function() {\r\n        // Work around a fastcomp bug, this code is still included for some reason in a build without\r\n        // exceptions support.\r\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\r\n        if (isPointer) {\r\n          return HEAPU32[((this.excPtr)>>2)];\r\n        }\r\n        var adjusted = this.get_adjusted_ptr();\r\n        if (adjusted !== 0) return adjusted;\r\n        return this.excPtr;\r\n      };\r\n    }\r\n  \r\n  var exceptionLast = 0;\r\n  \r\n  var uncaughtExceptionCount = 0;\r\n  function ___cxa_throw(ptr, type, destructor) {\r\n      var info = new ExceptionInfo(ptr);\r\n      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\r\n      info.init(type, destructor);\r\n      exceptionLast = ptr;\r\n      uncaughtExceptionCount++;\r\n      throw exceptionLast;\r\n    }\r\n\r\n  var PATH = {isAbs:(path) => path.charAt(0) === '/',splitPath:(filename) => {\r\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n        return splitPathRe.exec(filename).slice(1);\r\n      },normalizeArray:(parts, allowAboveRoot) => {\r\n        // if the path tries to go above the root, `up` ends up > 0\r\n        var up = 0;\r\n        for (var i = parts.length - 1; i >= 0; i--) {\r\n          var last = parts[i];\r\n          if (last === '.') {\r\n            parts.splice(i, 1);\r\n          } else if (last === '..') {\r\n            parts.splice(i, 1);\r\n            up++;\r\n          } else if (up) {\r\n            parts.splice(i, 1);\r\n            up--;\r\n          }\r\n        }\r\n        // if the path is allowed to go above the root, restore leading ..s\r\n        if (allowAboveRoot) {\r\n          for (; up; up--) {\r\n            parts.unshift('..');\r\n          }\r\n        }\r\n        return parts;\r\n      },normalize:(path) => {\r\n        var isAbsolute = PATH.isAbs(path),\r\n            trailingSlash = path.substr(-1) === '/';\r\n        // Normalize the path\r\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\r\n        if (!path && !isAbsolute) {\r\n          path = '.';\r\n        }\r\n        if (path && trailingSlash) {\r\n          path += '/';\r\n        }\r\n        return (isAbsolute ? '/' : '') + path;\r\n      },dirname:(path) => {\r\n        var result = PATH.splitPath(path),\r\n            root = result[0],\r\n            dir = result[1];\r\n        if (!root && !dir) {\r\n          // No dirname whatsoever\r\n          return '.';\r\n        }\r\n        if (dir) {\r\n          // It has a dirname, strip trailing slash\r\n          dir = dir.substr(0, dir.length - 1);\r\n        }\r\n        return root + dir;\r\n      },basename:(path) => {\r\n        // EMSCRIPTEN return '/'' for '/', not an empty string\r\n        if (path === '/') return '/';\r\n        path = PATH.normalize(path);\r\n        path = path.replace(/\\/$/, \"\");\r\n        var lastSlash = path.lastIndexOf('/');\r\n        if (lastSlash === -1) return path;\r\n        return path.substr(lastSlash+1);\r\n      },join:function() {\r\n        var paths = Array.prototype.slice.call(arguments);\r\n        return PATH.normalize(paths.join('/'));\r\n      },join2:(l, r) => {\r\n        return PATH.normalize(l + '/' + r);\r\n      }};\r\n  \r\n  function initRandomFill() {\r\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\r\n        // for modern web browsers\r\n        return (view) => crypto.getRandomValues(view);\r\n      } else\r\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\r\n      abort(\"initRandomDevice\");\r\n    }\r\n  function randomFill(view) {\r\n      // Lazily init on the first invocation.\r\n      return (randomFill = initRandomFill())(view);\r\n    }\r\n  \r\n  \r\n  \r\n  var PATH_FS = {resolve:function() {\r\n        var resolvedPath = '',\r\n          resolvedAbsolute = false;\r\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\r\n          // Skip empty and invalid entries\r\n          if (typeof path != 'string') {\r\n            throw new TypeError('Arguments to path.resolve must be strings');\r\n          } else if (!path) {\r\n            return ''; // an invalid portion invalidates the whole thing\r\n          }\r\n          resolvedPath = path + '/' + resolvedPath;\r\n          resolvedAbsolute = PATH.isAbs(path);\r\n        }\r\n        // At this point the path should be resolved to a full absolute path, but\r\n        // handle relative paths to be safe (might happen when process.cwd() fails)\r\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\r\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n      },relative:(from, to) => {\r\n        from = PATH_FS.resolve(from).substr(1);\r\n        to = PATH_FS.resolve(to).substr(1);\r\n        function trim(arr) {\r\n          var start = 0;\r\n          for (; start < arr.length; start++) {\r\n            if (arr[start] !== '') break;\r\n          }\r\n          var end = arr.length - 1;\r\n          for (; end >= 0; end--) {\r\n            if (arr[end] !== '') break;\r\n          }\r\n          if (start > end) return [];\r\n          return arr.slice(start, end - start + 1);\r\n        }\r\n        var fromParts = trim(from.split('/'));\r\n        var toParts = trim(to.split('/'));\r\n        var length = Math.min(fromParts.length, toParts.length);\r\n        var samePartsLength = length;\r\n        for (var i = 0; i < length; i++) {\r\n          if (fromParts[i] !== toParts[i]) {\r\n            samePartsLength = i;\r\n            break;\r\n          }\r\n        }\r\n        var outputParts = [];\r\n        for (var i = samePartsLength; i < fromParts.length; i++) {\r\n          outputParts.push('..');\r\n        }\r\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n        return outputParts.join('/');\r\n      }};\r\n  \r\n  \r\n  function lengthBytesUTF8(str) {\r\n      var len = 0;\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        var c = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (c <= 0x7F) {\r\n          len++;\r\n        } else if (c <= 0x7FF) {\r\n          len += 2;\r\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\r\n          len += 4; ++i;\r\n        } else {\r\n          len += 3;\r\n        }\r\n      }\r\n      return len;\r\n    }\r\n  \r\n  function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\r\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\r\n      // undefined and false each don't write out any bytes.\r\n      if (!(maxBytesToWrite > 0))\r\n        return 0;\r\n  \r\n      var startIdx = outIdx;\r\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // and https://www.ietf.org/rfc/rfc2279.txt\r\n        // and https://tools.ietf.org/html/rfc3629\r\n        var u = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (u >= 0xD800 && u <= 0xDFFF) {\r\n          var u1 = str.charCodeAt(++i);\r\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\r\n        }\r\n        if (u <= 0x7F) {\r\n          if (outIdx >= endIdx) break;\r\n          heap[outIdx++] = u;\r\n        } else if (u <= 0x7FF) {\r\n          if (outIdx + 1 >= endIdx) break;\r\n          heap[outIdx++] = 0xC0 | (u >> 6);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else if (u <= 0xFFFF) {\r\n          if (outIdx + 2 >= endIdx) break;\r\n          heap[outIdx++] = 0xE0 | (u >> 12);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else {\r\n          if (outIdx + 3 >= endIdx) break;\r\n          heap[outIdx++] = 0xF0 | (u >> 18);\r\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        }\r\n      }\r\n      // Null-terminate the pointer to the buffer.\r\n      heap[outIdx] = 0;\r\n      return outIdx - startIdx;\r\n    }\r\n  /** @type {function(string, boolean=, number=)} */\r\n  function intArrayFromString(stringy, dontAddNull, length) {\r\n    var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\r\n    var u8array = new Array(len);\r\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n    if (dontAddNull) u8array.length = numBytesWritten;\r\n    return u8array;\r\n  }\r\n  var TTY = {ttys:[],init:function () {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\r\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\r\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\r\n        //   // with text files until FS.init can be refactored.\r\n        //   process.stdin.setEncoding('utf8');\r\n        // }\r\n      },shutdown:function() {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\r\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\r\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\r\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\r\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\r\n        //   process.stdin.pause();\r\n        // }\r\n      },register:function(dev, ops) {\r\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\r\n        FS.registerDevice(dev, TTY.stream_ops);\r\n      },stream_ops:{open:function(stream) {\r\n          var tty = TTY.ttys[stream.node.rdev];\r\n          if (!tty) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          stream.tty = tty;\r\n          stream.seekable = false;\r\n        },close:function(stream) {\r\n          // flush any pending line data\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },fsync:function(stream) {\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },read:function(stream, buffer, offset, length, pos /* ignored */) {\r\n          if (!stream.tty || !stream.tty.ops.get_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          var bytesRead = 0;\r\n          for (var i = 0; i < length; i++) {\r\n            var result;\r\n            try {\r\n              result = stream.tty.ops.get_char(stream.tty);\r\n            } catch (e) {\r\n              throw new FS.ErrnoError(29);\r\n            }\r\n            if (result === undefined && bytesRead === 0) {\r\n              throw new FS.ErrnoError(6);\r\n            }\r\n            if (result === null || result === undefined) break;\r\n            bytesRead++;\r\n            buffer[offset+i] = result;\r\n          }\r\n          if (bytesRead) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return bytesRead;\r\n        },write:function(stream, buffer, offset, length, pos) {\r\n          if (!stream.tty || !stream.tty.ops.put_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          try {\r\n            for (var i = 0; i < length; i++) {\r\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\r\n            }\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n          if (length) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return i;\r\n        }},default_tty_ops:{get_char:function(tty) {\r\n          if (!tty.input.length) {\r\n            var result = null;\r\n            if (typeof window != 'undefined' &&\r\n              typeof window.prompt == 'function') {\r\n              // Browser.\r\n              result = window.prompt('Input: ');  // returns null on cancel\r\n              if (result !== null) {\r\n                result += '\\n';\r\n              }\r\n            } else if (typeof readline == 'function') {\r\n              // Command line.\r\n              result = readline();\r\n              if (result !== null) {\r\n                result += '\\n';\r\n              }\r\n            }\r\n            if (!result) {\r\n              return null;\r\n            }\r\n            tty.input = intArrayFromString(result, true);\r\n          }\r\n          return tty.input.shift();\r\n        },put_char:function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\r\n          }\r\n        },fsync:function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        }},default_tty1_ops:{put_char:function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val);\r\n          }\r\n        },fsync:function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        }}};\r\n  \r\n  \r\n  function zeroMemory(address, size) {\r\n      HEAPU8.fill(0, address, address + size);\r\n      return address;\r\n    }\r\n  \r\n  function alignMemory(size, alignment) {\r\n      return Math.ceil(size / alignment) * alignment;\r\n    }\r\n  function mmapAlloc(size) {\r\n      abort();\r\n    }\r\n  var MEMFS = {ops_table:null,mount:function(mount) {\r\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\r\n      },createNode:function(parent, name, mode, dev) {\r\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n          // no supported\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (!MEMFS.ops_table) {\r\n          MEMFS.ops_table = {\r\n            dir: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr,\r\n                lookup: MEMFS.node_ops.lookup,\r\n                mknod: MEMFS.node_ops.mknod,\r\n                rename: MEMFS.node_ops.rename,\r\n                unlink: MEMFS.node_ops.unlink,\r\n                rmdir: MEMFS.node_ops.rmdir,\r\n                readdir: MEMFS.node_ops.readdir,\r\n                symlink: MEMFS.node_ops.symlink\r\n              },\r\n              stream: {\r\n                llseek: MEMFS.stream_ops.llseek\r\n              }\r\n            },\r\n            file: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr\r\n              },\r\n              stream: {\r\n                llseek: MEMFS.stream_ops.llseek,\r\n                read: MEMFS.stream_ops.read,\r\n                write: MEMFS.stream_ops.write,\r\n                allocate: MEMFS.stream_ops.allocate,\r\n                mmap: MEMFS.stream_ops.mmap,\r\n                msync: MEMFS.stream_ops.msync\r\n              }\r\n            },\r\n            link: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr,\r\n                readlink: MEMFS.node_ops.readlink\r\n              },\r\n              stream: {}\r\n            },\r\n            chrdev: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr\r\n              },\r\n              stream: FS.chrdev_stream_ops\r\n            }\r\n          };\r\n        }\r\n        var node = FS.createNode(parent, name, mode, dev);\r\n        if (FS.isDir(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.dir.node;\r\n          node.stream_ops = MEMFS.ops_table.dir.stream;\r\n          node.contents = {};\r\n        } else if (FS.isFile(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.file.node;\r\n          node.stream_ops = MEMFS.ops_table.file.stream;\r\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\r\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\r\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\r\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\r\n          node.contents = null; \r\n        } else if (FS.isLink(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.link.node;\r\n          node.stream_ops = MEMFS.ops_table.link.stream;\r\n        } else if (FS.isChrdev(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.chrdev.node;\r\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\r\n        }\r\n        node.timestamp = Date.now();\r\n        // add the new node to the parent\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n          parent.timestamp = node.timestamp;\r\n        }\r\n        return node;\r\n      },getFileDataAsTypedArray:function(node) {\r\n        if (!node.contents) return new Uint8Array(0);\r\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\r\n        return new Uint8Array(node.contents);\r\n      },expandFileStorage:function(node, newCapacity) {\r\n        var prevCapacity = node.contents ? node.contents.length : 0;\r\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\r\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\r\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\r\n        // avoid overshooting the allocation cap by a very large margin.\r\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\r\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\r\n        var oldContents = node.contents;\r\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\r\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\r\n      },resizeFileStorage:function(node, newSize) {\r\n        if (node.usedBytes == newSize) return;\r\n        if (newSize == 0) {\r\n          node.contents = null; // Fully decommit when requesting a resize to zero.\r\n          node.usedBytes = 0;\r\n        } else {\r\n          var oldContents = node.contents;\r\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\r\n          if (oldContents) {\r\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\r\n          }\r\n          node.usedBytes = newSize;\r\n        }\r\n      },node_ops:{getattr:function(node) {\r\n          var attr = {};\r\n          // device numbers reuse inode numbers.\r\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n          attr.ino = node.id;\r\n          attr.mode = node.mode;\r\n          attr.nlink = 1;\r\n          attr.uid = 0;\r\n          attr.gid = 0;\r\n          attr.rdev = node.rdev;\r\n          if (FS.isDir(node.mode)) {\r\n            attr.size = 4096;\r\n          } else if (FS.isFile(node.mode)) {\r\n            attr.size = node.usedBytes;\r\n          } else if (FS.isLink(node.mode)) {\r\n            attr.size = node.link.length;\r\n          } else {\r\n            attr.size = 0;\r\n          }\r\n          attr.atime = new Date(node.timestamp);\r\n          attr.mtime = new Date(node.timestamp);\r\n          attr.ctime = new Date(node.timestamp);\r\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\r\n          //       but this is not required by the standard.\r\n          attr.blksize = 4096;\r\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n          return attr;\r\n        },setattr:function(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n          if (attr.size !== undefined) {\r\n            MEMFS.resizeFileStorage(node, attr.size);\r\n          }\r\n        },lookup:function(parent, name) {\r\n          throw FS.genericErrors[44];\r\n        },mknod:function(parent, name, mode, dev) {\r\n          return MEMFS.createNode(parent, name, mode, dev);\r\n        },rename:function(old_node, new_dir, new_name) {\r\n          // if we're overwriting a directory at new_name, make sure it's empty.\r\n          if (FS.isDir(old_node.mode)) {\r\n            var new_node;\r\n            try {\r\n              new_node = FS.lookupNode(new_dir, new_name);\r\n            } catch (e) {\r\n            }\r\n            if (new_node) {\r\n              for (var i in new_node.contents) {\r\n                throw new FS.ErrnoError(55);\r\n              }\r\n            }\r\n          }\r\n          // do the internal rewiring\r\n          delete old_node.parent.contents[old_node.name];\r\n          old_node.parent.timestamp = Date.now()\r\n          old_node.name = new_name;\r\n          new_dir.contents[new_name] = old_node;\r\n          new_dir.timestamp = old_node.parent.timestamp;\r\n          old_node.parent = new_dir;\r\n        },unlink:function(parent, name) {\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },rmdir:function(parent, name) {\r\n          var node = FS.lookupNode(parent, name);\r\n          for (var i in node.contents) {\r\n            throw new FS.ErrnoError(55);\r\n          }\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },readdir:function(node) {\r\n          var entries = ['.', '..'];\r\n          for (var key in node.contents) {\r\n            if (!node.contents.hasOwnProperty(key)) {\r\n              continue;\r\n            }\r\n            entries.push(key);\r\n          }\r\n          return entries;\r\n        },symlink:function(parent, newname, oldpath) {\r\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\r\n          node.link = oldpath;\r\n          return node;\r\n        },readlink:function(node) {\r\n          if (!FS.isLink(node.mode)) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return node.link;\r\n        }},stream_ops:{read:function(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= stream.node.usedBytes) return 0;\r\n          var size = Math.min(stream.node.usedBytes - position, length);\r\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\r\n            buffer.set(contents.subarray(position, position + size), offset);\r\n          } else {\r\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\r\n          }\r\n          return size;\r\n        },write:function(stream, buffer, offset, length, position, canOwn) {\r\n          // If the buffer is located in main memory (HEAP), and if\r\n          // memory can grow, we can't hold on to references of the\r\n          // memory buffer, as they may get invalidated. That means we\r\n          // need to do copy its contents.\r\n          if (buffer.buffer === HEAP8.buffer) {\r\n            canOwn = false;\r\n          }\r\n  \r\n          if (!length) return 0;\r\n          var node = stream.node;\r\n          node.timestamp = Date.now();\r\n  \r\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\r\n            if (canOwn) {\r\n              node.contents = buffer.subarray(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\r\n              node.contents = buffer.slice(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\r\n              node.contents.set(buffer.subarray(offset, offset + length), position);\r\n              return length;\r\n            }\r\n          }\r\n  \r\n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\r\n          MEMFS.expandFileStorage(node, position+length);\r\n          if (node.contents.subarray && buffer.subarray) {\r\n            // Use typed array write which is available.\r\n            node.contents.set(buffer.subarray(offset, offset + length), position);\r\n          } else {\r\n            for (var i = 0; i < length; i++) {\r\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\r\n            }\r\n          }\r\n          node.usedBytes = Math.max(node.usedBytes, position + length);\r\n          return length;\r\n        },llseek:function(stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.usedBytes;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        },allocate:function(stream, offset, length) {\r\n          MEMFS.expandFileStorage(stream.node, offset + length);\r\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\r\n        },mmap:function(stream, length, position, prot, flags) {\r\n          if (!FS.isFile(stream.node.mode)) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          var ptr;\r\n          var allocated;\r\n          var contents = stream.node.contents;\r\n          // Only make a new copy when MAP_PRIVATE is specified.\r\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\r\n            // We can't emulate MAP_SHARED when the file is not backed by the\r\n            // buffer we're mapping to (e.g. the HEAP buffer).\r\n            allocated = false;\r\n            ptr = contents.byteOffset;\r\n          } else {\r\n            // Try to avoid unnecessary slices.\r\n            if (position > 0 || position + length < contents.length) {\r\n              if (contents.subarray) {\r\n                contents = contents.subarray(position, position + length);\r\n              } else {\r\n                contents = Array.prototype.slice.call(contents, position, position + length);\r\n              }\r\n            }\r\n            allocated = true;\r\n            ptr = mmapAlloc(length);\r\n            if (!ptr) {\r\n              throw new FS.ErrnoError(48);\r\n            }\r\n            HEAP8.set(contents, ptr);\r\n          }\r\n          return { ptr: ptr, allocated: allocated };\r\n        },msync:function(stream, buffer, offset, length, mmapFlags) {\r\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n          // should we check if bytesWritten and length are the same?\r\n          return 0;\r\n        }}};\r\n  \r\n  /** @param {boolean=} noRunDep */\r\n  function asyncLoad(url, onload, onerror, noRunDep) {\r\n      var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\r\n      readAsync(url, (arrayBuffer) => {\r\n        assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\r\n        onload(new Uint8Array(arrayBuffer));\r\n        if (dep) removeRunDependency(dep);\r\n      }, (event) => {\r\n        if (onerror) {\r\n          onerror();\r\n        } else {\r\n          throw 'Loading data file \"' + url + '\" failed.';\r\n        }\r\n      });\r\n      if (dep) addRunDependency(dep);\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  var IDBFS = {dbs:{},indexedDB:() => {\r\n        if (typeof indexedDB != 'undefined') return indexedDB;\r\n        var ret = null;\r\n        if (typeof window == 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        assert(ret, 'IDBFS used, but indexedDB not supported');\r\n        return ret;\r\n      },DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:function(mount) {\r\n        // reuse all of the core MEMFS functionality\r\n        return MEMFS.mount.apply(null, arguments);\r\n      },syncfs:(mount, populate, callback) => {\r\n        IDBFS.getLocalSet(mount, (err, local) => {\r\n          if (err) return callback(err);\r\n  \r\n          IDBFS.getRemoteSet(mount, (err, remote) => {\r\n            if (err) return callback(err);\r\n  \r\n            var src = populate ? remote : local;\r\n            var dst = populate ? local : remote;\r\n  \r\n            IDBFS.reconcile(src, dst, callback);\r\n          });\r\n        });\r\n      },quit:() => {\r\n        Object.values(IDBFS.dbs).forEach((value) => value.close());\r\n        IDBFS.dbs = {};\r\n      },getDB:(name, callback) => {\r\n        // check the cache first\r\n        var db = IDBFS.dbs[name];\r\n        if (db) {\r\n          return callback(null, db);\r\n        }\r\n  \r\n        var req;\r\n        try {\r\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n        if (!req) {\r\n          return callback(\"Unable to connect to IndexedDB\");\r\n        }\r\n        req.onupgradeneeded = (e) => {\r\n          var db = /** @type {IDBDatabase} */ (e.target.result);\r\n          var transaction = e.target.transaction;\r\n  \r\n          var fileStore;\r\n  \r\n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\r\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n          } else {\r\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\r\n          }\r\n  \r\n          if (!fileStore.indexNames.contains('timestamp')) {\r\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\r\n          }\r\n        };\r\n        req.onsuccess = () => {\r\n          db = /** @type {IDBDatabase} */ (req.result);\r\n  \r\n          // add to the cache\r\n          IDBFS.dbs[name] = db;\r\n          callback(null, db);\r\n        };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },getLocalSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        function isRealDir(p) {\r\n          return p !== '.' && p !== '..';\r\n        };\r\n        function toAbsolute(root) {\r\n          return (p) => {\r\n            return PATH.join2(root, p);\r\n          }\r\n        };\r\n  \r\n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\r\n  \r\n        while (check.length) {\r\n          var path = check.pop();\r\n          var stat;\r\n  \r\n          try {\r\n            stat = FS.stat(path);\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\r\n          }\r\n  \r\n          entries[path] = { 'timestamp': stat.mtime };\r\n        }\r\n  \r\n        return callback(null, { type: 'local', entries: entries });\r\n      },getRemoteSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        IDBFS.getDB(mount.mountpoint, (err, db) => {\r\n          if (err) return callback(err);\r\n  \r\n          try {\r\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\r\n            transaction.onerror = (e) => {\r\n              callback(this.error);\r\n              e.preventDefault();\r\n            };\r\n  \r\n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n            var index = store.index('timestamp');\r\n  \r\n            index.openKeyCursor().onsuccess = (event) => {\r\n              var cursor = event.target.result;\r\n  \r\n              if (!cursor) {\r\n                return callback(null, { type: 'remote', db: db, entries: entries });\r\n              }\r\n  \r\n              entries[cursor.primaryKey] = { 'timestamp': cursor.key };\r\n  \r\n              cursor.continue();\r\n            };\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n        });\r\n      },loadLocalEntry:(path, callback) => {\r\n        var stat, node;\r\n  \r\n        try {\r\n          var lookup = FS.lookupPath(path);\r\n          node = lookup.node;\r\n          stat = FS.stat(path);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        if (FS.isDir(stat.mode)) {\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode });\r\n        } else if (FS.isFile(stat.mode)) {\r\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\r\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\r\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode, 'contents': node.contents });\r\n        } else {\r\n          return callback(new Error('node type not supported'));\r\n        }\r\n      },storeLocalEntry:(path, entry, callback) => {\r\n        try {\r\n          if (FS.isDir(entry['mode'])) {\r\n            FS.mkdirTree(path, entry['mode']);\r\n          } else if (FS.isFile(entry['mode'])) {\r\n            FS.writeFile(path, entry['contents'], { canOwn: true });\r\n          } else {\r\n            return callback(new Error('node type not supported'));\r\n          }\r\n  \r\n          FS.chmod(path, entry['mode']);\r\n          FS.utime(path, entry['timestamp'], entry['timestamp']);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },removeLocalEntry:(path, callback) => {\r\n        try {\r\n          var stat = FS.stat(path);\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            FS.rmdir(path);\r\n          } else if (FS.isFile(stat.mode)) {\r\n            FS.unlink(path);\r\n          }\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },loadRemoteEntry:(store, path, callback) => {\r\n        var req = store.get(path);\r\n        req.onsuccess = (event) => { callback(null, event.target.result); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },storeRemoteEntry:(store, path, entry, callback) => {\r\n        try {\r\n          var req = store.put(entry, path);\r\n        } catch (e) {\r\n          callback(e);\r\n          return;\r\n        }\r\n        req.onsuccess = () => { callback(null); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },removeRemoteEntry:(store, path, callback) => {\r\n        var req = store.delete(path);\r\n        req.onsuccess = () => { callback(null); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },reconcile:(src, dst, callback) => {\r\n        var total = 0;\r\n  \r\n        var create = [];\r\n        Object.keys(src.entries).forEach(function (key) {\r\n          var e = src.entries[key];\r\n          var e2 = dst.entries[key];\r\n          if (!e2 || e['timestamp'].getTime() != e2['timestamp'].getTime()) {\r\n            create.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        var remove = [];\r\n        Object.keys(dst.entries).forEach(function (key) {\r\n          if (!src.entries[key]) {\r\n            remove.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        if (!total) {\r\n          return callback(null);\r\n        }\r\n  \r\n        var errored = false;\r\n        var db = src.type === 'remote' ? src.db : dst.db;\r\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\r\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n  \r\n        function done(err) {\r\n          if (err && !errored) {\r\n            errored = true;\r\n            return callback(err);\r\n          }\r\n        };\r\n  \r\n        transaction.onerror = (e) => {\r\n          done(this.error);\r\n          e.preventDefault();\r\n        };\r\n  \r\n        transaction.oncomplete = (e) => {\r\n          if (!errored) {\r\n            callback(null);\r\n          }\r\n        };\r\n  \r\n        // sort paths in ascending order so directory entries are created\r\n        // before the files inside them\r\n        create.sort().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.loadRemoteEntry(store, path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeLocalEntry(path, entry, done);\r\n            });\r\n          } else {\r\n            IDBFS.loadLocalEntry(path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeRemoteEntry(store, path, entry, done);\r\n            });\r\n          }\r\n        });\r\n  \r\n        // sort paths in descending order so files are deleted before their\r\n        // parent directories\r\n        remove.sort().reverse().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.removeLocalEntry(path, done);\r\n          } else {\r\n            IDBFS.removeRemoteEntry(store, path, done);\r\n          }\r\n        });\r\n      }};\r\n  \r\n  var LZ4 = {DIR_MODE:16895,FILE_MODE:33279,CHUNK_SIZE:-1,codec:null,init:function() {\r\n        if (LZ4.codec) return;\r\n        LZ4.codec = (function() {\r\n          /*\r\n  MiniLZ4: Minimal LZ4 block decoding and encoding.\r\n  \r\n  based off of node-lz4, https://github.com/pierrec/node-lz4\r\n  \r\n  ====\r\n  Copyright (c) 2012 Pierre Curto\r\n  \r\n  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  of this software and associated documentation files (the \"Software\"), to deal\r\n  in the Software without restriction, including without limitation the rights\r\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n  copies of the Software, and to permit persons to whom the Software is\r\n  furnished to do so, subject to the following conditions:\r\n  \r\n  The above copyright notice and this permission notice shall be included in\r\n  all copies or substantial portions of the Software.\r\n  \r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n  THE SOFTWARE.\r\n  ====\r\n  \r\n  changes have the same license\r\n  */\r\n  \r\n  var MiniLZ4 = (function() {\r\n  \r\n  var exports = {};\r\n  \r\n  /**\r\n   * Decode a block. Assumptions: input contains all sequences of a \r\n   * chunk, output is large enough to receive the decoded data.\r\n   * If the output buffer is too small, an error will be thrown.\r\n   * If the returned value is negative, an error occured at the returned offset.\r\n   *\r\n   * @param {ArrayBufferView} input input data\r\n   * @param {ArrayBufferView} output output data\r\n   * @param {number=} sIdx\r\n   * @param {number=} eIdx\r\n   * @return {number} number of decoded bytes\r\n   * @private\r\n   */\r\n  exports.uncompress = function (input, output, sIdx, eIdx) {\r\n  \tsIdx = sIdx || 0\r\n  \teIdx = eIdx || (input.length - sIdx)\r\n  \t// Process each sequence in the incoming data\r\n  \tfor (var i = sIdx, n = eIdx, j = 0; i < n;) {\r\n  \t\tvar token = input[i++]\r\n  \r\n  \t\t// Literals\r\n  \t\tvar literals_length = (token >> 4)\r\n  \t\tif (literals_length > 0) {\r\n  \t\t\t// length of literals\r\n  \t\t\tvar l = literals_length + 240\r\n  \t\t\twhile (l === 255) {\r\n  \t\t\t\tl = input[i++]\r\n  \t\t\t\tliterals_length += l\r\n  \t\t\t}\r\n  \r\n  \t\t\t// Copy the literals\r\n  \t\t\tvar end = i + literals_length\r\n  \t\t\twhile (i < end) output[j++] = input[i++]\r\n  \r\n  \t\t\t// End of buffer?\r\n  \t\t\tif (i === n) return j\r\n  \t\t}\r\n  \r\n  \t\t// Match copy\r\n  \t\t// 2 bytes offset (little endian)\r\n  \t\tvar offset = input[i++] | (input[i++] << 8)\r\n  \r\n  \t\t// XXX 0 is an invalid offset value\r\n  \t\tif (offset === 0) return j\r\n  \t\tif (offset > j) return -(i-2)\r\n  \r\n  \t\t// length of match copy\r\n  \t\tvar match_length = (token & 0xf)\r\n  \t\tvar l = match_length + 240\r\n  \t\twhile (l === 255) {\r\n  \t\t\tl = input[i++]\r\n  \t\t\tmatch_length += l\r\n  \t\t}\r\n  \r\n  \t\t// Copy the match\r\n  \t\tvar pos = j - offset // position of the match copy in the current output\r\n  \t\tvar end = j + match_length + 4 // minmatch = 4\r\n  \t\twhile (j < end) output[j++] = output[pos++]\r\n  \t}\r\n  \r\n  \treturn j\r\n  }\r\n  \r\n  var\r\n  \tmaxInputSize\t= 0x7E000000\r\n  ,\tminMatch\t\t= 4\r\n  // uint32() optimization\r\n  ,\thashLog\t\t\t= 16\r\n  ,\thashShift\t\t= (minMatch * 8) - hashLog\r\n  ,\thashSize\t\t= 1 << hashLog\r\n  \r\n  ,\tcopyLength\t\t= 8\r\n  ,\tlastLiterals\t= 5\r\n  ,\tmfLimit\t\t\t= copyLength + minMatch\r\n  ,\tskipStrength\t= 6\r\n  \r\n  ,\tmlBits  \t\t= 4\r\n  ,\tmlMask  \t\t= (1 << mlBits) - 1\r\n  ,\trunBits \t\t= 8 - mlBits\r\n  ,\trunMask \t\t= (1 << runBits) - 1\r\n  \r\n  ,\thasher \t\t\t= /* XXX uint32( */ 2654435761 /* ) */\r\n  \r\n  assert(hashShift === 16);\r\n  var hashTable = new Int16Array(1<<16);\r\n  var empty = new Int16Array(hashTable.length);\r\n  \r\n  // CompressBound returns the maximum length of a lz4 block, given it's uncompressed length\r\n  exports.compressBound = function (isize) {\r\n  \treturn isize > maxInputSize\r\n  \t\t? 0\r\n  \t\t: (isize + (isize/255) + 16) | 0\r\n  }\r\n  \r\n  /** @param {number=} sIdx\r\n  \t@param {number=} eIdx */\r\n  exports.compress = function (src, dst, sIdx, eIdx) {\r\n  \thashTable.set(empty);\r\n  \treturn compressBlock(src, dst, 0, sIdx || 0, eIdx || dst.length)\r\n  }\r\n  \r\n  function compressBlock (src, dst, pos, sIdx, eIdx) {\r\n  \t// XXX var Hash = uint32() // Reusable unsigned 32 bits integer\r\n  \tvar dpos = sIdx\r\n  \tvar dlen = eIdx - sIdx\r\n  \tvar anchor = 0\r\n  \r\n  \tif (src.length >= maxInputSize) throw new Error(\"input too large\")\r\n  \r\n  \t// Minimum of input bytes for compression (LZ4 specs)\r\n  \tif (src.length > mfLimit) {\r\n  \t\tvar n = exports.compressBound(src.length)\r\n  \t\tif ( dlen < n ) throw Error(\"output too small: \" + dlen + \" < \" + n)\r\n  \r\n  \t\tvar \r\n  \t\t\tstep  = 1\r\n  \t\t,\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \t\t// Keep last few bytes incompressible (LZ4 specs):\r\n  \t\t// last 5 bytes must be literals\r\n  \t\t,\tsrcLength = src.length - mfLimit\r\n  \r\n  \t\twhile (pos + minMatch < srcLength) {\r\n  \t\t\t// Find a match\r\n  \t\t\t// min match of 4 bytes aka sequence\r\n  \t\t\tvar sequenceLowBits = src[pos+1]<<8 | src[pos]\r\n  \t\t\tvar sequenceHighBits = src[pos+3]<<8 | src[pos+2]\r\n  \t\t\t// compute hash for the current sequence\r\n  \t\t\tvar hash = Math.imul(sequenceLowBits | (sequenceHighBits << 16), hasher) >>> hashShift;\r\n  \t\t\t/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)\r\n  \t\t\t\t\t\t\t.multiply(hasher)\r\n  \t\t\t\t\t\t\t.shiftr(hashShift)\r\n  \t\t\t\t\t\t\t.toNumber() */\r\n  \t\t\t// get the position of the sequence matching the hash\r\n  \t\t\t// NB. since 2 different sequences may have the same hash\r\n  \t\t\t// it is double-checked below\r\n  \t\t\t// do -1 to distinguish between initialized and uninitialized values\r\n  \t\t\tvar ref = hashTable[hash] - 1\r\n  \t\t\t// save position of current sequence in hash table\r\n  \t\t\thashTable[hash] = pos + 1\r\n  \r\n  \t\t\t// first reference or within 64k limit or current sequence !== hashed one: no match\r\n  \t\t\tif ( ref < 0 ||\r\n  \t\t\t\t((pos - ref) >>> 16) > 0 ||\r\n  \t\t\t\t(\r\n  \t\t\t\t\t((src[ref+3]<<8 | src[ref+2]) != sequenceHighBits) ||\r\n  \t\t\t\t\t((src[ref+1]<<8 | src[ref]) != sequenceLowBits )\r\n  \t\t\t\t)\r\n  \t\t\t) {\r\n  \t\t\t\t// increase step if nothing found within limit\r\n  \t\t\t\tstep = findMatchAttempts++ >> skipStrength\r\n  \t\t\t\tpos += step\r\n  \t\t\t\tcontinue\r\n  \t\t\t}\r\n  \r\n  \t\t\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \r\n  \t\t\t// got a match\r\n  \t\t\tvar literals_length = pos - anchor\r\n  \t\t\tvar offset = pos - ref\r\n  \r\n  \t\t\t// minMatch already verified\r\n  \t\t\tpos += minMatch\r\n  \t\t\tref += minMatch\r\n  \r\n  \t\t\t// move to the end of the match (>=minMatch)\r\n  \t\t\tvar match_length = pos\r\n  \t\t\twhile (pos < srcLength && src[pos] == src[ref]) {\r\n  \t\t\t\tpos++\r\n  \t\t\t\tref++\r\n  \t\t\t}\r\n  \r\n  \t\t\t// match length\r\n  \t\t\tmatch_length = pos - match_length\r\n  \r\n  \t\t\t// token\r\n  \t\t\tvar token = match_length < mlMask ? match_length : mlMask\r\n  \r\n  \t\t\t// encode literals length\r\n  \t\t\tif (literals_length >= runMask) {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (runMask << mlBits) + token\r\n  \t\t\t\tfor (var len = literals_length - runMask; len > 254; len -= 255) {\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \t\t\t\tdst[dpos++] = len\r\n  \t\t\t} else {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (literals_length << mlBits) + token\r\n  \t\t\t}\r\n  \r\n  \t\t\t// write literals\r\n  \t\t\tfor (var i = 0; i < literals_length; i++) {\r\n  \t\t\t\tdst[dpos++] = src[anchor+i]\r\n  \t\t\t}\r\n  \r\n  \t\t\t// encode offset\r\n  \t\t\tdst[dpos++] = offset\r\n  \t\t\tdst[dpos++] = (offset >> 8)\r\n  \r\n  \t\t\t// encode match length\r\n  \t\t\tif (match_length >= mlMask) {\r\n  \t\t\t\tmatch_length -= mlMask\r\n  \t\t\t\twhile (match_length >= 255) {\r\n  \t\t\t\t\tmatch_length -= 255\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \r\n  \t\t\t\tdst[dpos++] = match_length\r\n  \t\t\t}\r\n  \r\n  \t\t\tanchor = pos\r\n  \t\t}\r\n  \t}\r\n  \r\n  \t// cannot compress input\r\n  \tif (anchor == 0) return 0\r\n  \r\n  \t// Write last literals\r\n  \t// encode literals length\r\n  \tliterals_length = src.length - anchor\r\n  \tif (literals_length >= runMask) {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (runMask << mlBits)\r\n  \t\tfor (var ln = literals_length - runMask; ln > 254; ln -= 255) {\r\n  \t\t\tdst[dpos++] = 255\r\n  \t\t}\r\n  \t\tdst[dpos++] = ln\r\n  \t} else {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (literals_length << mlBits)\r\n  \t}\r\n  \r\n  \t// write literals\r\n  \tpos = anchor\r\n  \twhile (pos < src.length) {\r\n  \t\tdst[dpos++] = src[pos++]\r\n  \t}\r\n  \r\n  \treturn dpos\r\n  }\r\n  \r\n  exports.CHUNK_SIZE = 2048; // musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea\r\n  \r\n  exports.compressPackage = function(data, verify) {\r\n    if (verify) {\r\n      var temp = new Uint8Array(exports.CHUNK_SIZE);\r\n    }\r\n    // compress the data in chunks\r\n    assert(data instanceof ArrayBuffer);\r\n    data = new Uint8Array(data);\r\n    console.log('compressing package of size ' + data.length);\r\n    var compressedChunks = [];\r\n    var successes = [];\r\n    var offset = 0;\r\n    var total = 0;\r\n    while (offset < data.length) {\r\n      var chunk = data.subarray(offset, offset + exports.CHUNK_SIZE);\r\n      //console.log('compress a chunk ' + [offset, total, data.length]);\r\n      offset += exports.CHUNK_SIZE;\r\n      var bound = exports.compressBound(chunk.length);\r\n      var compressed = new Uint8Array(bound);\r\n      var compressedSize = exports.compress(chunk, compressed);\r\n      if (compressedSize > 0) {\r\n        assert(compressedSize <= bound);\r\n        compressed = compressed.subarray(0, compressedSize);\r\n        compressedChunks.push(compressed);\r\n        total += compressedSize;\r\n        successes.push(1);\r\n        if (verify) {\r\n          var back = exports.uncompress(compressed, temp);\r\n          assert(back === chunk.length, [back, chunk.length]);\r\n          for (var i = 0; i < chunk.length; i++) {\r\n            assert(chunk[i] === temp[i]);\r\n          }\r\n        }\r\n      } else {\r\n        assert(compressedSize === 0);\r\n        // failure to compress :(\r\n        compressedChunks.push(chunk);\r\n        total += chunk.length; // last chunk may not be the full exports.CHUNK_SIZE size\r\n        successes.push(0);\r\n      }\r\n    }\r\n    data = null; // XXX null out pack['data'] too?\r\n    var compressedData = {\r\n      'data': new Uint8Array(total + exports.CHUNK_SIZE*2), // store all the compressed data, plus room for two cached decompressed chunk, in one fast array\r\n      'cachedOffset': total,\r\n      'cachedIndexes': [-1, -1], // cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing\r\n      'cachedChunks': [null, null],\r\n      'offsets': [], // chunk# => start in compressed data\r\n      'sizes': [],\r\n      'successes': successes, // 1 if chunk is compressed\r\n    };\r\n    offset = 0;\r\n    for (var i = 0; i < compressedChunks.length; i++) {\r\n      compressedData['data'].set(compressedChunks[i], offset);\r\n      compressedData['offsets'][i] = offset;\r\n      compressedData['sizes'][i] = compressedChunks[i].length\r\n      offset += compressedChunks[i].length;\r\n    }\r\n    console.log('compressed package into ' + [compressedData['data'].length]);\r\n    assert(offset === total);\r\n    return compressedData;\r\n  };\r\n  \r\n  assert(exports.CHUNK_SIZE < (1 << 15)); // we use 16-bit ints as the type of the hash table, chunk size must be smaller\r\n  \r\n  return exports;\r\n  \r\n  })();\r\n  \r\n  ;\r\n          return MiniLZ4;\r\n        })();\r\n        LZ4.CHUNK_SIZE = LZ4.codec.CHUNK_SIZE;\r\n      },loadPackage:function (pack, preloadPlugin) {\r\n        LZ4.init();\r\n        var compressedData = pack['compressedData'];\r\n        if (!compressedData) compressedData = LZ4.codec.compressPackage(pack['data']);\r\n        assert(compressedData['cachedIndexes'].length === compressedData['cachedChunks'].length);\r\n        for (var i = 0; i < compressedData['cachedIndexes'].length; i++) {\r\n          compressedData['cachedIndexes'][i] = -1;\r\n          compressedData['cachedChunks'][i] = compressedData['data'].subarray(compressedData['cachedOffset'] + i*LZ4.CHUNK_SIZE,\r\n                                                                        compressedData['cachedOffset'] + (i+1)*LZ4.CHUNK_SIZE);\r\n          assert(compressedData['cachedChunks'][i].length === LZ4.CHUNK_SIZE);\r\n        }\r\n        pack['metadata'].files.forEach(function(file) {\r\n          var dir = PATH.dirname(file.filename);\r\n          var name = PATH.basename(file.filename);\r\n          FS.createPath('', dir, true, true);\r\n          var parent = FS.analyzePath(dir).object;\r\n          LZ4.createNode(parent, name, LZ4.FILE_MODE, 0, {\r\n            compressedData: compressedData,\r\n            start: file.start,\r\n            end: file.end,\r\n          });\r\n        });\r\n        // Preload files if necessary. This code is largely similar to\r\n        // createPreloadedFile in library_fs.js. However, a main difference here\r\n        // is that we only decompress the file if it can be preloaded.\r\n        // Abstracting out the common parts seems to be more effort than it is\r\n        // worth.\r\n        if (preloadPlugin) {\r\n          Browser.init();\r\n          pack['metadata'].files.forEach(function(file) {\r\n            var handled = false;\r\n            var fullname = file.filename;\r\n            Module['preloadPlugins'].forEach(function(plugin) {\r\n              if (handled) return;\r\n              if (plugin['canHandle'](fullname)) {\r\n                var dep = getUniqueRunDependency('fp ' + fullname);\r\n                addRunDependency(dep);\r\n                var finish = () => removeRunDependency(dep);\r\n                var byteArray = FS.readFile(fullname);\r\n                plugin['handle'](byteArray, fullname, finish, finish);\r\n                handled = true;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      },createNode:function (parent, name, mode, dev, contents, mtime) {\r\n        var node = FS.createNode(parent, name, mode);\r\n        node.mode = mode;\r\n        node.node_ops = LZ4.node_ops;\r\n        node.stream_ops = LZ4.stream_ops;\r\n        node.timestamp = (mtime || new Date).getTime();\r\n        assert(LZ4.FILE_MODE !== LZ4.DIR_MODE);\r\n        if (mode === LZ4.FILE_MODE) {\r\n          node.size = contents.end - contents.start;\r\n          node.contents = contents;\r\n        } else {\r\n          node.size = 4096;\r\n          node.contents = {};\r\n        }\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n        }\r\n        return node;\r\n      },node_ops:{getattr:function(node) {\r\n          return {\r\n            dev: 1,\r\n            ino: node.id,\r\n            mode: node.mode,\r\n            nlink: 1,\r\n            uid: 0,\r\n            gid: 0,\r\n            rdev: undefined,\r\n            size: node.size,\r\n            atime: new Date(node.timestamp),\r\n            mtime: new Date(node.timestamp),\r\n            ctime: new Date(node.timestamp),\r\n            blksize: 4096,\r\n            blocks: Math.ceil(node.size / 4096),\r\n          };\r\n        },setattr:function(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n        },lookup:function(parent, name) {\r\n          throw new FS.ErrnoError(44);\r\n        },mknod:function (parent, name, mode, dev) {\r\n          throw new FS.ErrnoError(63);\r\n        },rename:function (oldNode, newDir, newName) {\r\n          throw new FS.ErrnoError(63);\r\n        },unlink:function(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },rmdir:function(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },readdir:function(node) {\r\n          throw new FS.ErrnoError(63);\r\n        },symlink:function(parent, newName, oldPath) {\r\n          throw new FS.ErrnoError(63);\r\n        }},stream_ops:{read:function (stream, buffer, offset, length, position) {\r\n          //out('LZ4 read ' + [offset, length, position]);\r\n          length = Math.min(length, stream.node.size - position);\r\n          if (length <= 0) return 0;\r\n          var contents = stream.node.contents;\r\n          var compressedData = contents.compressedData;\r\n          var written = 0;\r\n          while (written < length) {\r\n            var start = contents.start + position + written; // start index in uncompressed data\r\n            var desired = length - written;\r\n            //out('current read: ' + ['start', start, 'desired', desired]);\r\n            var chunkIndex = Math.floor(start / LZ4.CHUNK_SIZE);\r\n            var compressedStart = compressedData['offsets'][chunkIndex];\r\n            var compressedSize = compressedData['sizes'][chunkIndex];\r\n            var currChunk;\r\n            if (compressedData['successes'][chunkIndex]) {\r\n              var found = compressedData['cachedIndexes'].indexOf(chunkIndex);\r\n              if (found >= 0) {\r\n                currChunk = compressedData['cachedChunks'][found];\r\n              } else {\r\n                // decompress the chunk\r\n                compressedData['cachedIndexes'].pop();\r\n                compressedData['cachedIndexes'].unshift(chunkIndex);\r\n                currChunk = compressedData['cachedChunks'].pop();\r\n                compressedData['cachedChunks'].unshift(currChunk);\r\n                if (compressedData['debug']) {\r\n                  out('decompressing chunk ' + chunkIndex);\r\n                  Module['decompressedChunks'] = (Module['decompressedChunks'] || 0) + 1;\r\n                }\r\n                var compressed = compressedData['data'].subarray(compressedStart, compressedStart + compressedSize);\r\n                //var t = Date.now();\r\n                var originalSize = LZ4.codec.uncompress(compressed, currChunk);\r\n                //out('decompress time: ' + (Date.now() - t));\r\n                if (chunkIndex < compressedData['successes'].length-1) assert(originalSize === LZ4.CHUNK_SIZE); // all but the last chunk must be full-size\r\n              }\r\n            } else {\r\n              // uncompressed\r\n              currChunk = compressedData['data'].subarray(compressedStart, compressedStart + LZ4.CHUNK_SIZE);\r\n            }\r\n            var startInChunk = start % LZ4.CHUNK_SIZE;\r\n            var endInChunk = Math.min(startInChunk + desired, LZ4.CHUNK_SIZE);\r\n            buffer.set(currChunk.subarray(startInChunk, endInChunk), offset + written);\r\n            var currWritten = endInChunk - startInChunk;\r\n            written += currWritten;\r\n          }\r\n          return written;\r\n        },write:function (stream, buffer, offset, length, position) {\r\n          throw new FS.ErrnoError(29);\r\n        },llseek:function (stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.size;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        }}};\r\n  var FS = {root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path, opts = {}) => {\r\n        path = PATH_FS.resolve(path);\r\n  \r\n        if (!path) return { path: '', node: null };\r\n  \r\n        var defaults = {\r\n          follow_mount: true,\r\n          recurse_count: 0\r\n        };\r\n        opts = Object.assign(defaults, opts)\r\n  \r\n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\r\n          throw new FS.ErrnoError(32);\r\n        }\r\n  \r\n        // split the absolute path\r\n        var parts = path.split('/').filter((p) => !!p);\r\n  \r\n        // start at the root\r\n        var current = FS.root;\r\n        var current_path = '/';\r\n  \r\n        for (var i = 0; i < parts.length; i++) {\r\n          var islast = (i === parts.length-1);\r\n          if (islast && opts.parent) {\r\n            // stop resolving\r\n            break;\r\n          }\r\n  \r\n          current = FS.lookupNode(current, parts[i]);\r\n          current_path = PATH.join2(current_path, parts[i]);\r\n  \r\n          // jump to the mount's root node if this is a mountpoint\r\n          if (FS.isMountpoint(current)) {\r\n            if (!islast || (islast && opts.follow_mount)) {\r\n              current = current.mounted.root;\r\n            }\r\n          }\r\n  \r\n          // by default, lookupPath will not follow a symlink if it is the final path component.\r\n          // setting opts.follow = true will override this behavior.\r\n          if (!islast || opts.follow) {\r\n            var count = 0;\r\n            while (FS.isLink(current.mode)) {\r\n              var link = FS.readlink(current_path);\r\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\r\n  \r\n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\r\n              current = lookup.node;\r\n  \r\n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\r\n                throw new FS.ErrnoError(32);\r\n              }\r\n            }\r\n          }\r\n        }\r\n  \r\n        return { path: current_path, node: current };\r\n      },getPath:(node) => {\r\n        var path;\r\n        while (true) {\r\n          if (FS.isRoot(node)) {\r\n            var mount = node.mount.mountpoint;\r\n            if (!path) return mount;\r\n            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;\r\n          }\r\n          path = path ? node.name + '/' + path : node.name;\r\n          node = node.parent;\r\n        }\r\n      },hashName:(parentid, name) => {\r\n        var hash = 0;\r\n  \r\n        for (var i = 0; i < name.length; i++) {\r\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\r\n        }\r\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\r\n      },hashAddNode:(node) => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        node.name_next = FS.nameTable[hash];\r\n        FS.nameTable[hash] = node;\r\n      },hashRemoveNode:(node) => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        if (FS.nameTable[hash] === node) {\r\n          FS.nameTable[hash] = node.name_next;\r\n        } else {\r\n          var current = FS.nameTable[hash];\r\n          while (current) {\r\n            if (current.name_next === node) {\r\n              current.name_next = node.name_next;\r\n              break;\r\n            }\r\n            current = current.name_next;\r\n          }\r\n        }\r\n      },lookupNode:(parent, name) => {\r\n        var errCode = FS.mayLookup(parent);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode, parent);\r\n        }\r\n        var hash = FS.hashName(parent.id, name);\r\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n          var nodeName = node.name;\r\n          if (node.parent.id === parent.id && nodeName === name) {\r\n            return node;\r\n          }\r\n        }\r\n        // if we failed to find it in the cache, call into the VFS\r\n        return FS.lookup(parent, name);\r\n      },createNode:(parent, name, mode, rdev) => {\r\n        var node = new FS.FSNode(parent, name, mode, rdev);\r\n  \r\n        FS.hashAddNode(node);\r\n  \r\n        return node;\r\n      },destroyNode:(node) => {\r\n        FS.hashRemoveNode(node);\r\n      },isRoot:(node) => {\r\n        return node === node.parent;\r\n      },isMountpoint:(node) => {\r\n        return !!node.mounted;\r\n      },isFile:(mode) => {\r\n        return (mode & 61440) === 32768;\r\n      },isDir:(mode) => {\r\n        return (mode & 61440) === 16384;\r\n      },isLink:(mode) => {\r\n        return (mode & 61440) === 40960;\r\n      },isChrdev:(mode) => {\r\n        return (mode & 61440) === 8192;\r\n      },isBlkdev:(mode) => {\r\n        return (mode & 61440) === 24576;\r\n      },isFIFO:(mode) => {\r\n        return (mode & 61440) === 4096;\r\n      },isSocket:(mode) => {\r\n        return (mode & 49152) === 49152;\r\n      },flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:(str) => {\r\n        var flags = FS.flagModes[str];\r\n        if (typeof flags == 'undefined') {\r\n          throw new Error('Unknown file open mode: ' + str);\r\n        }\r\n        return flags;\r\n      },flagsToPermissionString:(flag) => {\r\n        var perms = ['r', 'w', 'rw'][flag & 3];\r\n        if ((flag & 512)) {\r\n          perms += 'w';\r\n        }\r\n        return perms;\r\n      },nodePermissions:(node, perms) => {\r\n        if (FS.ignorePermissions) {\r\n          return 0;\r\n        }\r\n        // return 0 if any user, group or owner bits are set.\r\n        if (perms.includes('r') && !(node.mode & 292)) {\r\n          return 2;\r\n        } else if (perms.includes('w') && !(node.mode & 146)) {\r\n          return 2;\r\n        } else if (perms.includes('x') && !(node.mode & 73)) {\r\n          return 2;\r\n        }\r\n        return 0;\r\n      },mayLookup:(dir) => {\r\n        var errCode = FS.nodePermissions(dir, 'x');\r\n        if (errCode) return errCode;\r\n        if (!dir.node_ops.lookup) return 2;\r\n        return 0;\r\n      },mayCreate:(dir, name) => {\r\n        try {\r\n          var node = FS.lookupNode(dir, name);\r\n          return 20;\r\n        } catch (e) {\r\n        }\r\n        return FS.nodePermissions(dir, 'wx');\r\n      },mayDelete:(dir, name, isdir) => {\r\n        var node;\r\n        try {\r\n          node = FS.lookupNode(dir, name);\r\n        } catch (e) {\r\n          return e.errno;\r\n        }\r\n        var errCode = FS.nodePermissions(dir, 'wx');\r\n        if (errCode) {\r\n          return errCode;\r\n        }\r\n        if (isdir) {\r\n          if (!FS.isDir(node.mode)) {\r\n            return 54;\r\n          }\r\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n            return 10;\r\n          }\r\n        } else {\r\n          if (FS.isDir(node.mode)) {\r\n            return 31;\r\n          }\r\n        }\r\n        return 0;\r\n      },mayOpen:(node, flags) => {\r\n        if (!node) {\r\n          return 44;\r\n        }\r\n        if (FS.isLink(node.mode)) {\r\n          return 32;\r\n        } else if (FS.isDir(node.mode)) {\r\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\r\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\r\n            return 31;\r\n          }\r\n        }\r\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\r\n      },MAX_OPEN_FDS:4096,nextfd:(fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\r\n        for (var fd = fd_start; fd <= fd_end; fd++) {\r\n          if (!FS.streams[fd]) {\r\n            return fd;\r\n          }\r\n        }\r\n        throw new FS.ErrnoError(33);\r\n      },getStream:(fd) => FS.streams[fd],createStream:(stream, fd_start, fd_end) => {\r\n        if (!FS.FSStream) {\r\n          FS.FSStream = /** @constructor */ function() {\r\n            this.shared = { };\r\n          };\r\n          FS.FSStream.prototype = {};\r\n          Object.defineProperties(FS.FSStream.prototype, {\r\n            object: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.node; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.node = val; }\r\n            },\r\n            isRead: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 2097155) !== 1; }\r\n            },\r\n            isWrite: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 2097155) !== 0; }\r\n            },\r\n            isAppend: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 1024); }\r\n            },\r\n            flags: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.shared.flags; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.shared.flags = val; },\r\n            },\r\n            position : {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.shared.position; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.shared.position = val; },\r\n            },\r\n          });\r\n        }\r\n        // clone it, so we can return an instance of FSStream\r\n        stream = Object.assign(new FS.FSStream(), stream);\r\n        var fd = FS.nextfd(fd_start, fd_end);\r\n        stream.fd = fd;\r\n        FS.streams[fd] = stream;\r\n        return stream;\r\n      },closeStream:(fd) => {\r\n        FS.streams[fd] = null;\r\n      },chrdev_stream_ops:{open:(stream) => {\r\n          var device = FS.getDevice(stream.node.rdev);\r\n          // override node's stream ops with the device's\r\n          stream.stream_ops = device.stream_ops;\r\n          // forward the open call\r\n          if (stream.stream_ops.open) {\r\n            stream.stream_ops.open(stream);\r\n          }\r\n        },llseek:() => {\r\n          throw new FS.ErrnoError(70);\r\n        }},major:(dev) => ((dev) >> 8),minor:(dev) => ((dev) & 0xff),makedev:(ma, mi) => ((ma) << 8 | (mi)),registerDevice:(dev, ops) => {\r\n        FS.devices[dev] = { stream_ops: ops };\r\n      },getDevice:(dev) => FS.devices[dev],getMounts:(mount) => {\r\n        var mounts = [];\r\n        var check = [mount];\r\n  \r\n        while (check.length) {\r\n          var m = check.pop();\r\n  \r\n          mounts.push(m);\r\n  \r\n          check.push.apply(check, m.mounts);\r\n        }\r\n  \r\n        return mounts;\r\n      },syncfs:(populate, callback) => {\r\n        if (typeof populate == 'function') {\r\n          callback = populate;\r\n          populate = false;\r\n        }\r\n  \r\n        FS.syncFSRequests++;\r\n  \r\n        if (FS.syncFSRequests > 1) {\r\n          err('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');\r\n        }\r\n  \r\n        var mounts = FS.getMounts(FS.root.mount);\r\n        var completed = 0;\r\n  \r\n        function doCallback(errCode) {\r\n          FS.syncFSRequests--;\r\n          return callback(errCode);\r\n        }\r\n  \r\n        function done(errCode) {\r\n          if (errCode) {\r\n            if (!done.errored) {\r\n              done.errored = true;\r\n              return doCallback(errCode);\r\n            }\r\n            return;\r\n          }\r\n          if (++completed >= mounts.length) {\r\n            doCallback(null);\r\n          }\r\n        };\r\n  \r\n        // sync all mounts\r\n        mounts.forEach((mount) => {\r\n          if (!mount.type.syncfs) {\r\n            return done(null);\r\n          }\r\n          mount.type.syncfs(mount, populate, done);\r\n        });\r\n      },mount:(type, opts, mountpoint) => {\r\n        var root = mountpoint === '/';\r\n        var pseudo = !mountpoint;\r\n        var node;\r\n  \r\n        if (root && FS.root) {\r\n          throw new FS.ErrnoError(10);\r\n        } else if (!root && !pseudo) {\r\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n          mountpoint = lookup.path;  // use the absolute path\r\n          node = lookup.node;\r\n  \r\n          if (FS.isMountpoint(node)) {\r\n            throw new FS.ErrnoError(10);\r\n          }\r\n  \r\n          if (!FS.isDir(node.mode)) {\r\n            throw new FS.ErrnoError(54);\r\n          }\r\n        }\r\n  \r\n        var mount = {\r\n          type: type,\r\n          opts: opts,\r\n          mountpoint: mountpoint,\r\n          mounts: []\r\n        };\r\n  \r\n        // create a root node for the fs\r\n        var mountRoot = type.mount(mount);\r\n        mountRoot.mount = mount;\r\n        mount.root = mountRoot;\r\n  \r\n        if (root) {\r\n          FS.root = mountRoot;\r\n        } else if (node) {\r\n          // set as a mountpoint\r\n          node.mounted = mount;\r\n  \r\n          // add the new mount to the current mount's children\r\n          if (node.mount) {\r\n            node.mount.mounts.push(mount);\r\n          }\r\n        }\r\n  \r\n        return mountRoot;\r\n      },unmount:(mountpoint) => {\r\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n        if (!FS.isMountpoint(lookup.node)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n  \r\n        // destroy the nodes for this mount, and all its child mounts\r\n        var node = lookup.node;\r\n        var mount = node.mounted;\r\n        var mounts = FS.getMounts(mount);\r\n  \r\n        Object.keys(FS.nameTable).forEach((hash) => {\r\n          var current = FS.nameTable[hash];\r\n  \r\n          while (current) {\r\n            var next = current.name_next;\r\n  \r\n            if (mounts.includes(current.mount)) {\r\n              FS.destroyNode(current);\r\n            }\r\n  \r\n            current = next;\r\n          }\r\n        });\r\n  \r\n        // no longer a mountpoint\r\n        node.mounted = null;\r\n  \r\n        // remove this mount from the child mounts\r\n        var idx = node.mount.mounts.indexOf(mount);\r\n        node.mount.mounts.splice(idx, 1);\r\n      },lookup:(parent, name) => {\r\n        return parent.node_ops.lookup(parent, name);\r\n      },mknod:(path, mode, dev) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        if (!name || name === '.' || name === '..') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.mayCreate(parent, name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.mknod) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.mknod(parent, name, mode, dev);\r\n      },create:(path, mode) => {\r\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\r\n        mode &= 4095;\r\n        mode |= 32768;\r\n        return FS.mknod(path, mode, 0);\r\n      },mkdir:(path, mode) => {\r\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\r\n        mode &= 511 | 512;\r\n        mode |= 16384;\r\n        return FS.mknod(path, mode, 0);\r\n      },mkdirTree:(path, mode) => {\r\n        var dirs = path.split('/');\r\n        var d = '';\r\n        for (var i = 0; i < dirs.length; ++i) {\r\n          if (!dirs[i]) continue;\r\n          d += '/' + dirs[i];\r\n          try {\r\n            FS.mkdir(d, mode);\r\n          } catch(e) {\r\n            if (e.errno != 20) throw e;\r\n          }\r\n        }\r\n      },mkdev:(path, mode, dev) => {\r\n        if (typeof dev == 'undefined') {\r\n          dev = mode;\r\n          mode = 438 /* 0666 */;\r\n        }\r\n        mode |= 8192;\r\n        return FS.mknod(path, mode, dev);\r\n      },symlink:(oldpath, newpath) => {\r\n        if (!PATH_FS.resolve(oldpath)) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var lookup = FS.lookupPath(newpath, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var newname = PATH.basename(newpath);\r\n        var errCode = FS.mayCreate(parent, newname);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.symlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.symlink(parent, newname, oldpath);\r\n      },rename:(old_path, new_path) => {\r\n        var old_dirname = PATH.dirname(old_path);\r\n        var new_dirname = PATH.dirname(new_path);\r\n        var old_name = PATH.basename(old_path);\r\n        var new_name = PATH.basename(new_path);\r\n        // parents must exist\r\n        var lookup, old_dir, new_dir;\r\n  \r\n        // let the errors from non existant directories percolate up\r\n        lookup = FS.lookupPath(old_path, { parent: true });\r\n        old_dir = lookup.node;\r\n        lookup = FS.lookupPath(new_path, { parent: true });\r\n        new_dir = lookup.node;\r\n  \r\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\r\n        // need to be part of the same mount\r\n        if (old_dir.mount !== new_dir.mount) {\r\n          throw new FS.ErrnoError(75);\r\n        }\r\n        // source must exist\r\n        var old_node = FS.lookupNode(old_dir, old_name);\r\n        // old path should not be an ancestor of the new path\r\n        var relative = PATH_FS.relative(old_path, new_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        // new path should not be an ancestor of the old path\r\n        relative = PATH_FS.relative(new_path, old_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(55);\r\n        }\r\n        // see if the new path already exists\r\n        var new_node;\r\n        try {\r\n          new_node = FS.lookupNode(new_dir, new_name);\r\n        } catch (e) {\r\n          // not fatal\r\n        }\r\n        // early out if nothing needs to change\r\n        if (old_node === new_node) {\r\n          return;\r\n        }\r\n        // we'll need to delete the old entry\r\n        var isdir = FS.isDir(old_node.mode);\r\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        // need delete permissions if we'll be overwriting.\r\n        // need create permissions if new doesn't already exist.\r\n        errCode = new_node ?\r\n          FS.mayDelete(new_dir, new_name, isdir) :\r\n          FS.mayCreate(new_dir, new_name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!old_dir.node_ops.rename) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        // if we are going to change the parent, check write permissions\r\n        if (new_dir !== old_dir) {\r\n          errCode = FS.nodePermissions(old_dir, 'w');\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // remove the node from the lookup hash\r\n        FS.hashRemoveNode(old_node);\r\n        // do the underlying fs rename\r\n        try {\r\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          // add the node back to the hash (in case node_ops.rename\r\n          // changed its name)\r\n          FS.hashAddNode(old_node);\r\n        }\r\n      },rmdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, true);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.rmdir) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.rmdir(parent, name);\r\n        FS.destroyNode(node);\r\n      },readdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        if (!node.node_ops.readdir) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        return node.node_ops.readdir(node);\r\n      },unlink:(path) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, false);\r\n        if (errCode) {\r\n          // According to POSIX, we should map EISDIR to EPERM, but\r\n          // we instead do what Linux does (and we must, as we use\r\n          // the musl linux libc).\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.unlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.unlink(parent, name);\r\n        FS.destroyNode(node);\r\n      },readlink:(path) => {\r\n        var lookup = FS.lookupPath(path);\r\n        var link = lookup.node;\r\n        if (!link) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!link.node_ops.readlink) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\r\n      },stat:(path, dontFollow) => {\r\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n        var node = lookup.node;\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!node.node_ops.getattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return node.node_ops.getattr(node);\r\n      },lstat:(path) => {\r\n        return FS.stat(path, true);\r\n      },chmod:(path, mode, dontFollow) => {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          mode: (mode & 4095) | (node.mode & ~4095),\r\n          timestamp: Date.now()\r\n        });\r\n      },lchmod:(path, mode) => {\r\n        FS.chmod(path, mode, true);\r\n      },fchmod:(fd, mode) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        FS.chmod(stream.node, mode);\r\n      },chown:(path, uid, gid, dontFollow) => {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Date.now()\r\n          // we ignore the uid / gid for now\r\n        });\r\n      },lchown:(path, uid, gid) => {\r\n        FS.chown(path, uid, gid, true);\r\n      },fchown:(fd, uid, gid) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        FS.chown(stream.node, uid, gid);\r\n      },truncate:(path, len) => {\r\n        if (len < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: true });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!FS.isFile(node.mode)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.nodePermissions(node, 'w');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          size: len,\r\n          timestamp: Date.now()\r\n        });\r\n      },ftruncate:(fd, len) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        FS.truncate(stream.node, len);\r\n      },utime:(path, atime, mtime) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Math.max(atime, mtime)\r\n        });\r\n      },open:(path, flags, mode) => {\r\n        if (path === \"\") {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\r\n        mode = typeof mode == 'undefined' ? 438 /* 0666 */ : mode;\r\n        if ((flags & 64)) {\r\n          mode = (mode & 4095) | 32768;\r\n        } else {\r\n          mode = 0;\r\n        }\r\n        var node;\r\n        if (typeof path == 'object') {\r\n          node = path;\r\n        } else {\r\n          path = PATH.normalize(path);\r\n          try {\r\n            var lookup = FS.lookupPath(path, {\r\n              follow: !(flags & 131072)\r\n            });\r\n            node = lookup.node;\r\n          } catch (e) {\r\n            // ignore\r\n          }\r\n        }\r\n        // perhaps we need to create the node\r\n        var created = false;\r\n        if ((flags & 64)) {\r\n          if (node) {\r\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\r\n            if ((flags & 128)) {\r\n              throw new FS.ErrnoError(20);\r\n            }\r\n          } else {\r\n            // node doesn't exist, try to create it\r\n            node = FS.mknod(path, mode, 0);\r\n            created = true;\r\n          }\r\n        }\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        // can't truncate a device\r\n        if (FS.isChrdev(node.mode)) {\r\n          flags &= ~512;\r\n        }\r\n        // if asked only for a directory, then this must be one\r\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        // check permissions, if this is not a file we just created now (it is ok to\r\n        // create and write to a file with read-only permissions; it is read-only\r\n        // for later use)\r\n        if (!created) {\r\n          var errCode = FS.mayOpen(node, flags);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // do truncation if necessary\r\n        if ((flags & 512) && !created) {\r\n          FS.truncate(node, 0);\r\n        }\r\n        // we've already handled these, don't pass down to the underlying vfs\r\n        flags &= ~(128 | 512 | 131072);\r\n  \r\n        // register the stream with the filesystem\r\n        var stream = FS.createStream({\r\n          node: node,\r\n          path: FS.getPath(node),  // we want the absolute path to the node\r\n          flags: flags,\r\n          seekable: true,\r\n          position: 0,\r\n          stream_ops: node.stream_ops,\r\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\r\n          ungotten: [],\r\n          error: false\r\n        });\r\n        // call the new stream's open function\r\n        if (stream.stream_ops.open) {\r\n          stream.stream_ops.open(stream);\r\n        }\r\n        if (Module['logReadFiles'] && !(flags & 1)) {\r\n          if (!FS.readFiles) FS.readFiles = {};\r\n          if (!(path in FS.readFiles)) {\r\n            FS.readFiles[path] = 1;\r\n          }\r\n        }\r\n        return stream;\r\n      },close:(stream) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (stream.getdents) stream.getdents = null; // free readdir state\r\n        try {\r\n          if (stream.stream_ops.close) {\r\n            stream.stream_ops.close(stream);\r\n          }\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          FS.closeStream(stream.fd);\r\n        }\r\n        stream.fd = null;\r\n      },isClosed:(stream) => {\r\n        return stream.fd === null;\r\n      },llseek:(stream, offset, whence) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!stream.seekable || !stream.stream_ops.llseek) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        if (whence != 0 && whence != 1 && whence != 2) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n        stream.ungotten = [];\r\n        return stream.position;\r\n      },read:(stream, buffer, offset, length, position) => {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.read) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n        if (!seeking) stream.position += bytesRead;\r\n        return bytesRead;\r\n      },write:(stream, buffer, offset, length, position, canOwn) => {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.write) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (stream.seekable && stream.flags & 1024) {\r\n          // seek to the end before writing in append mode\r\n          FS.llseek(stream, 0, 2);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n        if (!seeking) stream.position += bytesWritten;\r\n        return bytesWritten;\r\n      },allocate:(stream, offset, length) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (offset < 0 || length <= 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (!stream.stream_ops.allocate) {\r\n          throw new FS.ErrnoError(138);\r\n        }\r\n        stream.stream_ops.allocate(stream, offset, length);\r\n      },mmap:(stream, length, position, prot, flags) => {\r\n        // User requests writing to file (prot & PROT_WRITE != 0).\r\n        // Checking if we have permissions to write to the file unless\r\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\r\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\r\n        // as all modifications will be visible only in the memory of\r\n        // the current process.\r\n        if ((prot & 2) !== 0\r\n            && (flags & 2) === 0\r\n            && (stream.flags & 2097155) !== 2) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if (!stream.stream_ops.mmap) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\r\n      },msync:(stream, buffer, offset, length, mmapFlags) => {\r\n        if (!stream.stream_ops.msync) {\r\n          return 0;\r\n        }\r\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\r\n      },munmap:(stream) => 0,ioctl:(stream, cmd, arg) => {\r\n        if (!stream.stream_ops.ioctl) {\r\n          throw new FS.ErrnoError(59);\r\n        }\r\n        return stream.stream_ops.ioctl(stream, cmd, arg);\r\n      },readFile:(path, opts = {}) => {\r\n        opts.flags = opts.flags || 0;\r\n        opts.encoding = opts.encoding || 'binary';\r\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\r\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\r\n        }\r\n        var ret;\r\n        var stream = FS.open(path, opts.flags);\r\n        var stat = FS.stat(path);\r\n        var length = stat.size;\r\n        var buf = new Uint8Array(length);\r\n        FS.read(stream, buf, 0, length, 0);\r\n        if (opts.encoding === 'utf8') {\r\n          ret = UTF8ArrayToString(buf, 0);\r\n        } else if (opts.encoding === 'binary') {\r\n          ret = buf;\r\n        }\r\n        FS.close(stream);\r\n        return ret;\r\n      },writeFile:(path, data, opts = {}) => {\r\n        opts.flags = opts.flags || 577;\r\n        var stream = FS.open(path, opts.flags, opts.mode);\r\n        if (typeof data == 'string') {\r\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\r\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\r\n        } else if (ArrayBuffer.isView(data)) {\r\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\r\n        } else {\r\n          throw new Error('Unsupported data type');\r\n        }\r\n        FS.close(stream);\r\n      },cwd:() => FS.currentPath,chdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        if (lookup.node === null) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!FS.isDir(lookup.node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        var errCode = FS.nodePermissions(lookup.node, 'x');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        FS.currentPath = lookup.path;\r\n      },createDefaultDirectories:() => {\r\n        FS.mkdir('/tmp');\r\n        FS.mkdir('/home');\r\n        FS.mkdir('/home/web_user');\r\n      },createDefaultDevices:() => {\r\n        // create /dev\r\n        FS.mkdir('/dev');\r\n        // setup /dev/null\r\n        FS.registerDevice(FS.makedev(1, 3), {\r\n          read: () => 0,\r\n          write: (stream, buffer, offset, length, pos) => length,\r\n        });\r\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\r\n        // setup /dev/tty and /dev/tty1\r\n        // stderr needs to print output using err() rather than out()\r\n        // so we register a second tty just for it.\r\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\r\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\r\n        // setup /dev/[u]random\r\n        // use a buffer to avoid overhead of individual crypto calls per byte\r\n        var randomBuffer = new Uint8Array(1024), randomLeft = 0;\r\n        var randomByte = () => {\r\n          if (randomLeft === 0) {\r\n            randomLeft = randomFill(randomBuffer).byteLength;\r\n          }\r\n          return randomBuffer[--randomLeft];\r\n        };\r\n        FS.createDevice('/dev', 'random', randomByte);\r\n        FS.createDevice('/dev', 'urandom', randomByte);\r\n        // we're not going to emulate the actual shm device,\r\n        // just create the tmp dirs that reside in it commonly\r\n        FS.mkdir('/dev/shm');\r\n        FS.mkdir('/dev/shm/tmp');\r\n      },createSpecialDirectories:() => {\r\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\r\n        // name of the stream for fd 6 (see test_unistd_ttyname)\r\n        FS.mkdir('/proc');\r\n        var proc_self = FS.mkdir('/proc/self');\r\n        FS.mkdir('/proc/self/fd');\r\n        FS.mount({\r\n          mount: () => {\r\n            var node = FS.createNode(proc_self, 'fd', 16384 | 511 /* 0777 */, 73);\r\n            node.node_ops = {\r\n              lookup: (parent, name) => {\r\n                var fd = +name;\r\n                var stream = FS.getStream(fd);\r\n                if (!stream) throw new FS.ErrnoError(8);\r\n                var ret = {\r\n                  parent: null,\r\n                  mount: { mountpoint: 'fake' },\r\n                  node_ops: { readlink: () => stream.path },\r\n                };\r\n                ret.parent = ret; // make it look like a simple root node\r\n                return ret;\r\n              }\r\n            };\r\n            return node;\r\n          }\r\n        }, {}, '/proc/self/fd');\r\n      },createStandardStreams:() => {\r\n        // TODO deprecate the old functionality of a single\r\n        // input / output callback and that utilizes FS.createDevice\r\n        // and instead require a unique set of stream ops\r\n  \r\n        // by default, we symlink the standard streams to the\r\n        // default tty devices. however, if the standard streams\r\n        // have been overwritten we create a unique device for\r\n        // them instead.\r\n        if (Module['stdin']) {\r\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdin');\r\n        }\r\n        if (Module['stdout']) {\r\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdout');\r\n        }\r\n        if (Module['stderr']) {\r\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\r\n        } else {\r\n          FS.symlink('/dev/tty1', '/dev/stderr');\r\n        }\r\n  \r\n        // open default streams for the stdin, stdout and stderr devices\r\n        var stdin = FS.open('/dev/stdin', 0);\r\n        var stdout = FS.open('/dev/stdout', 1);\r\n        var stderr = FS.open('/dev/stderr', 1);\r\n      },ensureErrnoError:() => {\r\n        if (FS.ErrnoError) return;\r\n        FS.ErrnoError = /** @this{Object} */ function ErrnoError(errno, node) {\r\n          // We set the `name` property to be able to identify `FS.ErrnoError`\r\n          // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\r\n          // - when using PROXYFS, an error can come from an underlying FS\r\n          // as different FS objects have their own FS.ErrnoError each,\r\n          // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\r\n          // we'll use the reliable test `err.name == \"ErrnoError\"` instead\r\n          this.name = 'ErrnoError';\r\n          this.node = node;\r\n          this.setErrno = /** @this{Object} */ function(errno) {\r\n            this.errno = errno;\r\n          };\r\n          this.setErrno(errno);\r\n          this.message = 'FS error';\r\n  \r\n        };\r\n        FS.ErrnoError.prototype = new Error();\r\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\r\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\r\n        [44].forEach((code) => {\r\n          FS.genericErrors[code] = new FS.ErrnoError(code);\r\n          FS.genericErrors[code].stack = '<generic error, no stack>';\r\n        });\r\n      },staticInit:() => {\r\n        FS.ensureErrnoError();\r\n  \r\n        FS.nameTable = new Array(4096);\r\n  \r\n        FS.mount(MEMFS, {}, '/');\r\n  \r\n        FS.createDefaultDirectories();\r\n        FS.createDefaultDevices();\r\n        FS.createSpecialDirectories();\r\n  \r\n        FS.filesystems = {\r\n          'MEMFS': MEMFS,\r\n          'IDBFS': IDBFS,\r\n        };\r\n      },init:(input, output, error) => {\r\n        FS.init.initialized = true;\r\n  \r\n        FS.ensureErrnoError();\r\n  \r\n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\r\n        Module['stdin'] = input || Module['stdin'];\r\n        Module['stdout'] = output || Module['stdout'];\r\n        Module['stderr'] = error || Module['stderr'];\r\n  \r\n        FS.createStandardStreams();\r\n      },quit:() => {\r\n        FS.init.initialized = false;\r\n        // force-flush all streams, so we get musl std streams printed out\r\n        // close all of our streams\r\n        for (var i = 0; i < FS.streams.length; i++) {\r\n          var stream = FS.streams[i];\r\n          if (!stream) {\r\n            continue;\r\n          }\r\n          FS.close(stream);\r\n        }\r\n      },getMode:(canRead, canWrite) => {\r\n        var mode = 0;\r\n        if (canRead) mode |= 292 | 73;\r\n        if (canWrite) mode |= 146;\r\n        return mode;\r\n      },findObject:(path, dontResolveLastLink) => {\r\n        var ret = FS.analyzePath(path, dontResolveLastLink);\r\n        if (!ret.exists) {\r\n          return null;\r\n        }\r\n        return ret.object;\r\n      },analyzePath:(path, dontResolveLastLink) => {\r\n        // operate from within the context of the symlink's target\r\n        try {\r\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          path = lookup.path;\r\n        } catch (e) {\r\n        }\r\n        var ret = {\r\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\r\n          parentExists: false, parentPath: null, parentObject: null\r\n        };\r\n        try {\r\n          var lookup = FS.lookupPath(path, { parent: true });\r\n          ret.parentExists = true;\r\n          ret.parentPath = lookup.path;\r\n          ret.parentObject = lookup.node;\r\n          ret.name = PATH.basename(path);\r\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          ret.exists = true;\r\n          ret.path = lookup.path;\r\n          ret.object = lookup.node;\r\n          ret.name = lookup.node.name;\r\n          ret.isRoot = lookup.path === '/';\r\n        } catch (e) {\r\n          ret.error = e.errno;\r\n        };\r\n        return ret;\r\n      },createPath:(parent, path, canRead, canWrite) => {\r\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n        var parts = path.split('/').reverse();\r\n        while (parts.length) {\r\n          var part = parts.pop();\r\n          if (!part) continue;\r\n          var current = PATH.join2(parent, part);\r\n          try {\r\n            FS.mkdir(current);\r\n          } catch (e) {\r\n            // ignore EEXIST\r\n          }\r\n          parent = current;\r\n        }\r\n        return current;\r\n      },createFile:(parent, name, properties, canRead, canWrite) => {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS.getMode(canRead, canWrite);\r\n        return FS.create(path, mode);\r\n      },createDataFile:(parent, name, data, canRead, canWrite, canOwn) => {\r\n        var path = name;\r\n        if (parent) {\r\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n          path = name ? PATH.join2(parent, name) : parent;\r\n        }\r\n        var mode = FS.getMode(canRead, canWrite);\r\n        var node = FS.create(path, mode);\r\n        if (data) {\r\n          if (typeof data == 'string') {\r\n            var arr = new Array(data.length);\r\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n            data = arr;\r\n          }\r\n          // make sure we can write to the file\r\n          FS.chmod(node, mode | 146);\r\n          var stream = FS.open(node, 577);\r\n          FS.write(stream, data, 0, data.length, 0, canOwn);\r\n          FS.close(stream);\r\n          FS.chmod(node, mode);\r\n        }\r\n        return node;\r\n      },createDevice:(parent, name, input, output) => {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS.getMode(!!input, !!output);\r\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\r\n        var dev = FS.makedev(FS.createDevice.major++, 0);\r\n        // Create a fake device that a set of stream ops to emulate\r\n        // the old behavior.\r\n        FS.registerDevice(dev, {\r\n          open: (stream) => {\r\n            stream.seekable = false;\r\n          },\r\n          close: (stream) => {\r\n            // flush any pending line data\r\n            if (output && output.buffer && output.buffer.length) {\r\n              output(10);\r\n            }\r\n          },\r\n          read: (stream, buffer, offset, length, pos /* ignored */) => {\r\n            var bytesRead = 0;\r\n            for (var i = 0; i < length; i++) {\r\n              var result;\r\n              try {\r\n                result = input();\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n              if (result === undefined && bytesRead === 0) {\r\n                throw new FS.ErrnoError(6);\r\n              }\r\n              if (result === null || result === undefined) break;\r\n              bytesRead++;\r\n              buffer[offset+i] = result;\r\n            }\r\n            if (bytesRead) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return bytesRead;\r\n          },\r\n          write: (stream, buffer, offset, length, pos) => {\r\n            for (var i = 0; i < length; i++) {\r\n              try {\r\n                output(buffer[offset+i]);\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n            }\r\n            if (length) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return i;\r\n          }\r\n        });\r\n        return FS.mkdev(path, mode, dev);\r\n      },forceLoadFile:(obj) => {\r\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\r\n        } else if (read_) {\r\n          // Command-line.\r\n          try {\r\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\r\n            //          read() will try to parse UTF8.\r\n            obj.contents = intArrayFromString(read_(obj.url), true);\r\n            obj.usedBytes = obj.contents.length;\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n        } else {\r\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\r\n        }\r\n      },createLazyFile:(parent, name, url, canRead, canWrite) => {\r\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\r\n        /** @constructor */\r\n        function LazyUint8Array() {\r\n          this.lengthKnown = false;\r\n          this.chunks = []; // Loaded chunks. Index is the chunk number\r\n        }\r\n        LazyUint8Array.prototype.get = /** @this{Object} */ function LazyUint8Array_get(idx) {\r\n          if (idx > this.length-1 || idx < 0) {\r\n            return undefined;\r\n          }\r\n          var chunkOffset = idx % this.chunkSize;\r\n          var chunkNum = (idx / this.chunkSize)|0;\r\n          return this.getter(chunkNum)[chunkOffset];\r\n        };\r\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\r\n          this.getter = getter;\r\n        };\r\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\r\n          // Find length\r\n          var xhr = new XMLHttpRequest();\r\n          xhr.open('HEAD', url, false);\r\n          xhr.send(null);\r\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n          var header;\r\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n  \r\n          var chunkSize = 1024*1024; // Chunk size in bytes\r\n  \r\n          if (!hasByteServing) chunkSize = datalength;\r\n  \r\n          // Function to get a range from the remote URL.\r\n          var doXHR = (from, to) => {\r\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n  \r\n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url, false);\r\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n  \r\n            // Some hints to the browser that we want binary data.\r\n            xhr.responseType = 'arraybuffer';\r\n            if (xhr.overrideMimeType) {\r\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\r\n            }\r\n  \r\n            xhr.send(null);\r\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n            if (xhr.response !== undefined) {\r\n              return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\r\n            }\r\n            return intArrayFromString(xhr.responseText || '', true);\r\n          };\r\n          var lazyArray = this;\r\n          lazyArray.setDataGetter((chunkNum) => {\r\n            var start = chunkNum * chunkSize;\r\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\r\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\r\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\r\n            }\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\r\n            return lazyArray.chunks[chunkNum];\r\n          });\r\n  \r\n          if (usesGzip || !datalength) {\r\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\r\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\r\n            datalength = this.getter(0).length;\r\n            chunkSize = datalength;\r\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\r\n          }\r\n  \r\n          this._length = datalength;\r\n          this._chunkSize = chunkSize;\r\n          this.lengthKnown = true;\r\n        };\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\r\n          var lazyArray = new LazyUint8Array();\r\n          Object.defineProperties(lazyArray, {\r\n            length: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._length;\r\n              }\r\n            },\r\n            chunkSize: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._chunkSize;\r\n              }\r\n            }\r\n          });\r\n  \r\n          var properties = { isDevice: false, contents: lazyArray };\r\n        } else {\r\n          var properties = { isDevice: false, url: url };\r\n        }\r\n  \r\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n        // This is a total hack, but I want to get this lazy file code out of the\r\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\r\n        // be its own thin LAZYFS proxying calls to MEMFS.\r\n        if (properties.contents) {\r\n          node.contents = properties.contents;\r\n        } else if (properties.url) {\r\n          node.contents = null;\r\n          node.url = properties.url;\r\n        }\r\n        // Add a function that defers querying the file size until it is asked the first time.\r\n        Object.defineProperties(node, {\r\n          usedBytes: {\r\n            get: /** @this {FSNode} */ function() { return this.contents.length; }\r\n          }\r\n        });\r\n        // override each stream op with one that tries to force load the lazy file first\r\n        var stream_ops = {};\r\n        var keys = Object.keys(node.stream_ops);\r\n        keys.forEach((key) => {\r\n          var fn = node.stream_ops[key];\r\n          stream_ops[key] = function forceLoadLazyFile() {\r\n            FS.forceLoadFile(node);\r\n            return fn.apply(null, arguments);\r\n          };\r\n        });\r\n        function writeChunks(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= contents.length)\r\n            return 0;\r\n          var size = Math.min(contents.length - position, length);\r\n          if (contents.slice) { // normal array\r\n            for (var i = 0; i < size; i++) {\r\n              buffer[offset + i] = contents[position + i];\r\n            }\r\n          } else {\r\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\r\n              buffer[offset + i] = contents.get(position + i);\r\n            }\r\n          }\r\n          return size;\r\n        }\r\n        // use a custom read function\r\n        stream_ops.read = (stream, buffer, offset, length, position) => {\r\n          FS.forceLoadFile(node);\r\n          return writeChunks(stream, buffer, offset, length, position)\r\n        };\r\n        // use a custom mmap function\r\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\r\n          FS.forceLoadFile(node);\r\n          var ptr = mmapAlloc(length);\r\n          if (!ptr) {\r\n            throw new FS.ErrnoError(48);\r\n          }\r\n          writeChunks(stream, HEAP8, ptr, length, position);\r\n          return { ptr: ptr, allocated: true };\r\n        };\r\n        node.stream_ops = stream_ops;\r\n        return node;\r\n      },createPreloadedFile:(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\r\n        // TODO we should allow people to just pass in a complete filename instead\r\n        // of parent and name being that we just join them anyways\r\n        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\r\n        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname\r\n        function processData(byteArray) {\r\n          function finish(byteArray) {\r\n            if (preFinish) preFinish();\r\n            if (!dontCreateFile) {\r\n              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\r\n            }\r\n            if (onload) onload();\r\n            removeRunDependency(dep);\r\n          }\r\n          if (Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\r\n            if (onerror) onerror();\r\n            removeRunDependency(dep);\r\n          })) {\r\n            return;\r\n          }\r\n          finish(byteArray);\r\n        }\r\n        addRunDependency(dep);\r\n        if (typeof url == 'string') {\r\n          asyncLoad(url, (byteArray) => processData(byteArray), onerror);\r\n        } else {\r\n          processData(url);\r\n        }\r\n      }};\r\n  \r\n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\r\n  \r\n    /**\r\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\r\n     * array that contains uint8 values, returns a copy of that string as a\r\n     * Javascript String object.\r\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\r\n     * @param {number} idx\r\n     * @param {number=} maxBytesToRead\r\n     * @return {string}\r\n     */\r\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\r\n      var endIdx = idx + maxBytesToRead;\r\n      var endPtr = idx;\r\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\r\n      // null terminator by itself.  Also, use the length info to avoid running tiny\r\n      // strings through TextDecoder, since .subarray() allocates garbage.\r\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\r\n      // so that undefined means Infinity)\r\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n  \r\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\r\n      }\r\n      var str = '';\r\n      // If building with TextDecoder, we have already computed the string length\r\n      // above, so test loop end condition against that\r\n      while (idx < endPtr) {\r\n        // For UTF8 byte structure, see:\r\n        // http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // https://www.ietf.org/rfc/rfc2279.txt\r\n        // https://tools.ietf.org/html/rfc3629\r\n        var u0 = heapOrArray[idx++];\r\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\r\n        var u1 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\r\n        var u2 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xF0) == 0xE0) {\r\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n        } else {\r\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\r\n        }\r\n  \r\n        if (u0 < 0x10000) {\r\n          str += String.fromCharCode(u0);\r\n        } else {\r\n          var ch = u0 - 0x10000;\r\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n        }\r\n      }\r\n      return str;\r\n    }\r\n  \r\n  \r\n    /**\r\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\r\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\r\n     *\r\n     * @param {number} ptr\r\n     * @param {number=} maxBytesToRead - An optional length that specifies the\r\n     *   maximum number of bytes to read. You can omit this parameter to scan the\r\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\r\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\r\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\r\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\r\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\r\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\r\n     * @return {string}\r\n     */\r\n  function UTF8ToString(ptr, maxBytesToRead) {\r\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\r\n    }\r\n  var SYSCALLS = {DEFAULT_POLLMASK:5,calculateAt:function(dirfd, path, allowEmpty) {\r\n        if (PATH.isAbs(path)) {\r\n          return path;\r\n        }\r\n        // relative path\r\n        var dir;\r\n        if (dirfd === -100) {\r\n          dir = FS.cwd();\r\n        } else {\r\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\r\n          dir = dirstream.path;\r\n        }\r\n        if (path.length == 0) {\r\n          if (!allowEmpty) {\r\n            throw new FS.ErrnoError(44);;\r\n          }\r\n          return dir;\r\n        }\r\n        return PATH.join2(dir, path);\r\n      },doStat:function(func, path, buf) {\r\n        try {\r\n          var stat = func(path);\r\n        } catch (e) {\r\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\r\n            // an error occurred while trying to look up the path; we should just report ENOTDIR\r\n            return -54;\r\n          }\r\n          throw e;\r\n        }\r\n        HEAP32[((buf)>>2)] = stat.dev;\r\n        HEAP32[(((buf)+(8))>>2)] = stat.ino;\r\n        HEAP32[(((buf)+(12))>>2)] = stat.mode;\r\n        HEAPU32[(((buf)+(16))>>2)] = stat.nlink;\r\n        HEAP32[(((buf)+(20))>>2)] = stat.uid;\r\n        HEAP32[(((buf)+(24))>>2)] = stat.gid;\r\n        HEAP32[(((buf)+(28))>>2)] = stat.rdev;\r\n        (tempI64 = [stat.size>>>0,(tempDouble=stat.size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(40))>>2)] = tempI64[0],HEAP32[(((buf)+(44))>>2)] = tempI64[1]);\r\n        HEAP32[(((buf)+(48))>>2)] = 4096;\r\n        HEAP32[(((buf)+(52))>>2)] = stat.blocks;\r\n        var atime = stat.atime.getTime();\r\n        var mtime = stat.mtime.getTime();\r\n        var ctime = stat.ctime.getTime();\r\n        (tempI64 = [Math.floor(atime / 1000)>>>0,(tempDouble=Math.floor(atime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(56))>>2)] = tempI64[0],HEAP32[(((buf)+(60))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(64))>>2)] = (atime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(mtime / 1000)>>>0,(tempDouble=Math.floor(mtime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(72))>>2)] = tempI64[0],HEAP32[(((buf)+(76))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(80))>>2)] = (mtime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(ctime / 1000)>>>0,(tempDouble=Math.floor(ctime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(88))>>2)] = tempI64[0],HEAP32[(((buf)+(92))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(96))>>2)] = (ctime % 1000) * 1000;\r\n        (tempI64 = [stat.ino>>>0,(tempDouble=stat.ino,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(104))>>2)] = tempI64[0],HEAP32[(((buf)+(108))>>2)] = tempI64[1]);\r\n        return 0;\r\n      },doMsync:function(addr, stream, len, flags, offset) {\r\n        if (!FS.isFile(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (flags & 2) {\r\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\r\n          return 0;\r\n        }\r\n        var buffer = HEAPU8.slice(addr, addr + len);\r\n        FS.msync(stream, buffer, offset, len, flags);\r\n      },varargs:undefined,get:function() {\r\n        SYSCALLS.varargs += 4;\r\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\r\n        return ret;\r\n      },getStr:function(ptr) {\r\n        var ret = UTF8ToString(ptr);\r\n        return ret;\r\n      },getStreamFromFD:function(fd) {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) throw new FS.ErrnoError(8);\r\n        return stream;\r\n      }};\r\n  function ___syscall_chmod(path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.chmod(path, mode);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fchmod(fd, mode) {\r\n  try {\r\n  \r\n      FS.fchmod(fd, mode);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function setErrNo(value) {\r\n      HEAP32[((___errno_location())>>2)] = value;\r\n      return value;\r\n    }\r\n  \r\n  function ___syscall_fcntl64(fd, cmd, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (cmd) {\r\n        case 0: {\r\n          var arg = SYSCALLS.get();\r\n          if (arg < 0) {\r\n            return -28;\r\n          }\r\n          var newStream;\r\n          newStream = FS.createStream(stream, arg);\r\n          return newStream.fd;\r\n        }\r\n        case 1:\r\n        case 2:\r\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\r\n        case 3:\r\n          return stream.flags;\r\n        case 4: {\r\n          var arg = SYSCALLS.get();\r\n          stream.flags |= arg;\r\n          return 0;\r\n        }\r\n        case 5:\r\n        /* case 5: Currently in musl F_GETLK64 has same value as F_GETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */ {\r\n          \r\n          var arg = SYSCALLS.get();\r\n          var offset = 0;\r\n          // We're always unlocked.\r\n          HEAP16[(((arg)+(offset))>>1)] = 2;\r\n          return 0;\r\n        }\r\n        case 6:\r\n        case 7:\r\n        /* case 6: Currently in musl F_SETLK64 has same value as F_SETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\r\n        /* case 7: Currently in musl F_SETLKW64 has same value as F_SETLKW, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\r\n          \r\n          \r\n          return 0; // Pretend that the locking is successful.\r\n        case 16:\r\n        case 8:\r\n          return -28; // These are for sockets. We don't have them fully implemented yet.\r\n        case 9:\r\n          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fcntl() returns that, and we set errno ourselves.\r\n          setErrNo(28);\r\n          return -1;\r\n        default: {\r\n          return -28;\r\n        }\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fstat64(fd, buf) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      return SYSCALLS.doStat(FS.stat, stream.path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function convertI32PairToI53Checked(lo, hi) {\r\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  function ___syscall_ftruncate64(fd, length_low, length_high) {\r\n  try {\r\n  \r\n      var length = convertI32PairToI53Checked(length_low, length_high); if (isNaN(length)) return -61;\r\n      FS.ftruncate(fd, length);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n      return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\r\n    }\r\n  \r\n  function ___syscall_getcwd(buf, size) {\r\n  try {\r\n  \r\n      if (size === 0) return -28;\r\n      var cwd = FS.cwd();\r\n      var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\r\n      if (size < cwdLengthInBytes) return -68;\r\n      stringToUTF8(cwd, buf, size);\r\n      return cwdLengthInBytes;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function ___syscall_getdents64(fd, dirp, count) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd)\r\n      if (!stream.getdents) {\r\n        stream.getdents = FS.readdir(stream.path);\r\n      }\r\n  \r\n      var struct_size = 280;\r\n      var pos = 0;\r\n      var off = FS.llseek(stream, 0, 1);\r\n  \r\n      var idx = Math.floor(off / struct_size);\r\n  \r\n      while (idx < stream.getdents.length && pos + struct_size <= count) {\r\n        var id;\r\n        var type;\r\n        var name = stream.getdents[idx];\r\n        if (name === '.') {\r\n          id = stream.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else if (name === '..') {\r\n          var lookup = FS.lookupPath(stream.path, { parent: true });\r\n          id = lookup.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else {\r\n          var child = FS.lookupNode(stream.node, name);\r\n          id = child.id;\r\n          type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.\r\n                 FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.\r\n                 FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.\r\n                 8;                             // DT_REG, regular file.\r\n        }\r\n        (tempI64 = [id>>>0,(tempDouble=id,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((dirp + pos)>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(4))>>2)] = tempI64[1]);\r\n        (tempI64 = [(idx + 1) * struct_size>>>0,(tempDouble=(idx + 1) * struct_size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((dirp + pos)+(8))>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(12))>>2)] = tempI64[1]);\r\n        HEAP16[(((dirp + pos)+(16))>>1)] = 280;\r\n        HEAP8[(((dirp + pos)+(18))>>0)] = type;\r\n        stringToUTF8(name, dirp + pos + 19, 256);\r\n        pos += struct_size;\r\n        idx += 1;\r\n      }\r\n      FS.llseek(stream, idx * struct_size, 0);\r\n      return pos;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_ioctl(fd, op, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (op) {\r\n        case 21509:\r\n        case 21505: {\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21510:\r\n        case 21511:\r\n        case 21512:\r\n        case 21506:\r\n        case 21507:\r\n        case 21508: {\r\n          if (!stream.tty) return -59;\r\n          return 0; // no-op, not actually adjusting terminal settings\r\n        }\r\n        case 21519: {\r\n          if (!stream.tty) return -59;\r\n          var argp = SYSCALLS.get();\r\n          HEAP32[((argp)>>2)] = 0;\r\n          return 0;\r\n        }\r\n        case 21520: {\r\n          if (!stream.tty) return -59;\r\n          return -28; // not supported\r\n        }\r\n        case 21531: {\r\n          var argp = SYSCALLS.get();\r\n          return FS.ioctl(stream, op, argp);\r\n        }\r\n        case 21523: {\r\n          // TODO: in theory we should write to the winsize struct that gets\r\n          // passed in, but for now musl doesn't read anything on it\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21524: {\r\n          // TODO: technically, this ioctl call should change the window size.\r\n          // but, since emscripten doesn't have any concept of a terminal window\r\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        default: return -28; // not supported\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_lstat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.lstat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_mkdirat(dirfd, path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      // remove a trailing slash, if one - /a/b/ has basename of '', but\r\n      // we want to create b in the context of this function\r\n      path = PATH.normalize(path);\r\n      if (path[path.length-1] === '/') path = path.substr(0, path.length-1);\r\n      FS.mkdir(path, mode, 0);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_newfstatat(dirfd, path, buf, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      var nofollow = flags & 256;\r\n      var allowEmpty = flags & 4096;\r\n      flags = flags & (~6400);\r\n      path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\r\n      return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_openat(dirfd, path, flags, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      var mode = varargs ? SYSCALLS.get() : 0;\r\n      return FS.open(path, flags, mode).fd;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_rmdir(path) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.rmdir(path);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_stat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_unlinkat(dirfd, path, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      if (flags === 0) {\r\n        FS.unlink(path);\r\n      } else if (flags === 512) {\r\n        FS.rmdir(path);\r\n      } else {\r\n        abort('Invalid flags passed to unlinkat');\r\n      }\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  var nowIsMonotonic = true;;\r\n  function __emscripten_get_now_is_monotonic() {\r\n      return nowIsMonotonic;\r\n    }\r\n\r\n  function readI53FromI64(ptr) {\r\n      return HEAPU32[ptr>>2] + HEAP32[ptr+4>>2] * 4294967296;\r\n    }\r\n  \r\n  function isLeapYear(year) {\r\n        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);\r\n    }\r\n  \r\n  var MONTH_DAYS_LEAP_CUMULATIVE = [0,31,60,91,121,152,182,213,244,274,305,335];\r\n  \r\n  var MONTH_DAYS_REGULAR_CUMULATIVE = [0,31,59,90,120,151,181,212,243,273,304,334];\r\n  function ydayFromDate(date) {\r\n      var leap = isLeapYear(date.getFullYear());\r\n      var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\r\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1; // -1 since it's days since Jan 1\r\n  \r\n      return yday;\r\n    }\r\n  function __localtime_js(time, tmPtr) {\r\n      var date = new Date(readI53FromI64(time)*1000);\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getFullYear()-1900;\r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n  \r\n      var yday = ydayFromDate(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      HEAP32[(((tmPtr)+(36))>>2)] = -(date.getTimezoneOffset() * 60);\r\n  \r\n      // Attention: DST is in December in South, and some regions don't have DST at all.\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\r\n      HEAP32[(((tmPtr)+(32))>>2)] = dst;\r\n    }\r\n\r\n  function __mktime_js(tmPtr) {\r\n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\r\n                          HEAP32[(((tmPtr)+(16))>>2)],\r\n                          HEAP32[(((tmPtr)+(12))>>2)],\r\n                          HEAP32[(((tmPtr)+(8))>>2)],\r\n                          HEAP32[(((tmPtr)+(4))>>2)],\r\n                          HEAP32[((tmPtr)>>2)],\r\n                          0);\r\n  \r\n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\r\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\r\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\r\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\r\n      var guessedOffset = date.getTimezoneOffset();\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\r\n      if (dst < 0) {\r\n        // Attention: some regions don't have DST at all.\r\n        HEAP32[(((tmPtr)+(32))>>2)] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\r\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\r\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\r\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\r\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\r\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\r\n      }\r\n  \r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n      var yday = ydayFromDate(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      // To match expected behavior, update fields from date\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getYear();\r\n  \r\n      return (date.getTime() / 1000)|0;\r\n    }\r\n\r\n  \r\n  \r\n  function stringToNewUTF8(str) {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = _malloc(size);\r\n      if (ret) stringToUTF8(str, ret, size);\r\n      return ret;\r\n    }\r\n  function __tzset_js(timezone, daylight, tzname) {\r\n      // TODO: Use (malleable) environment variables instead of system settings.\r\n      var currentYear = new Date().getFullYear();\r\n      var winter = new Date(currentYear, 0, 1);\r\n      var summer = new Date(currentYear, 6, 1);\r\n      var winterOffset = winter.getTimezoneOffset();\r\n      var summerOffset = summer.getTimezoneOffset();\r\n  \r\n      // Local standard timezone offset. Local standard time is not adjusted for daylight savings.\r\n      // This code uses the fact that getTimezoneOffset returns a greater value during Standard Time versus Daylight Saving Time (DST).\r\n      // Thus it determines the expected output during Standard Time, and it compares whether the output of the given date the same (Standard) or less (DST).\r\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\r\n  \r\n      // timezone is specified as seconds west of UTC (\"The external variable\r\n      // `timezone` shall be set to the difference, in seconds, between\r\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\r\n      // as returned by stdTimezoneOffset.\r\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\r\n      HEAPU32[((timezone)>>2)] = stdTimezoneOffset * 60;\r\n  \r\n      HEAP32[((daylight)>>2)] = Number(winterOffset != summerOffset);\r\n  \r\n      function extractZone(date) {\r\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\r\n        return match ? match[1] : \"GMT\";\r\n      };\r\n      var winterName = extractZone(winter);\r\n      var summerName = extractZone(summer);\r\n      var winterNamePtr = stringToNewUTF8(winterName);\r\n      var summerNamePtr = stringToNewUTF8(summerName);\r\n      if (summerOffset < winterOffset) {\r\n        // Northern hemisphere\r\n        HEAPU32[((tzname)>>2)] = winterNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = summerNamePtr;\r\n      } else {\r\n        HEAPU32[((tzname)>>2)] = summerNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = winterNamePtr;\r\n      }\r\n    }\r\n\r\n  function _abort() {\r\n      abort('');\r\n    }\r\n\r\n  function _emscripten_set_main_loop_timing(mode, value) {\r\n      Browser.mainLoop.timingMode = mode;\r\n      Browser.mainLoop.timingValue = value;\r\n  \r\n      if (!Browser.mainLoop.func) {\r\n        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.\r\n      }\r\n  \r\n      if (!Browser.mainLoop.running) {\r\n        \r\n        Browser.mainLoop.running = true;\r\n      }\r\n      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {\r\n          var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now())|0;\r\n          setTimeout(Browser.mainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop\r\n        };\r\n        Browser.mainLoop.method = 'timeout';\r\n      } else if (mode == 1 /*EM_TIMING_RAF*/) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {\r\n          Browser.requestAnimationFrame(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'rAF';\r\n      } else if (mode == 2 /*EM_TIMING_SETIMMEDIATE*/) {\r\n        if (typeof setImmediate == 'undefined') {\r\n          // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)\r\n          var setImmediates = [];\r\n          var emscriptenMainLoopMessageId = 'setimmediate';\r\n          /** @param {Event} event */\r\n          var Browser_setImmediate_messageHandler = (event) => {\r\n            // When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,\r\n            // so check for both cases.\r\n            if (event.data === emscriptenMainLoopMessageId || event.data.target === emscriptenMainLoopMessageId) {\r\n              event.stopPropagation();\r\n              setImmediates.shift()();\r\n            }\r\n          };\r\n          addEventListener(\"message\", Browser_setImmediate_messageHandler, true);\r\n          setImmediate = /** @type{function(function(): ?, ...?): number} */(function Browser_emulated_setImmediate(func) {\r\n            setImmediates.push(func);\r\n            if (ENVIRONMENT_IS_WORKER) {\r\n              if (Module['setImmediates'] === undefined) Module['setImmediates'] = [];\r\n              Module['setImmediates'].push(func);\r\n              postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js\r\n            } else postMessage(emscriptenMainLoopMessageId, \"*\"); // On the main thread, can just send the message to itself.\r\n          })\r\n        }\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {\r\n          setImmediate(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'immediate';\r\n      }\r\n      return 0;\r\n    }\r\n  \r\n  var _emscripten_get_now;_emscripten_get_now = () => performance.now();\r\n  ;\r\n  \r\n  \r\n    /**\r\n     * @param {number=} arg\r\n     * @param {boolean=} noSetTiming\r\n     */\r\n  function setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop, arg, noSetTiming) {\r\n      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');\r\n  \r\n      Browser.mainLoop.func = browserIterationFunc;\r\n      Browser.mainLoop.arg = arg;\r\n  \r\n      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;\r\n      function checkIsRunning() {\r\n        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) {\r\n          \r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n  \r\n      // We create the loop runner here but it is not actually running until\r\n      // _emscripten_set_main_loop_timing is called (which might happen a\r\n      // later time).  This member signifies that the current runner has not\r\n      // yet been started so that we can call runtimeKeepalivePush when it\r\n      // gets it timing set for the first time.\r\n      Browser.mainLoop.running = false;\r\n      Browser.mainLoop.runner = function Browser_mainLoop_runner() {\r\n        if (ABORT) return;\r\n        if (Browser.mainLoop.queue.length > 0) {\r\n          var start = Date.now();\r\n          var blocker = Browser.mainLoop.queue.shift();\r\n          blocker.func(blocker.arg);\r\n          if (Browser.mainLoop.remainingBlockers) {\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);\r\n            if (blocker.counted) {\r\n              Browser.mainLoop.remainingBlockers = next;\r\n            } else {\r\n              // not counted, but move the progress along a tiny bit\r\n              next = next + 0.5; // do not steal all the next one's progress\r\n              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;\r\n            }\r\n          }\r\n          out('main loop blocker \"' + blocker.name + '\" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);\r\n          Browser.mainLoop.updateStatus();\r\n  \r\n          // catches pause/resume main loop from blocker execution\r\n          if (!checkIsRunning()) return;\r\n  \r\n          setTimeout(Browser.mainLoop.runner, 0);\r\n          return;\r\n        }\r\n  \r\n        // catch pauses from non-main loop sources\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Implement very basic swap interval control\r\n        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;\r\n        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {\r\n          // Not the scheduled time to render this frame - skip.\r\n          Browser.mainLoop.scheduler();\r\n          return;\r\n        } else if (Browser.mainLoop.timingMode == 0/*EM_TIMING_SETTIMEOUT*/) {\r\n          Browser.mainLoop.tickStartTime = _emscripten_get_now();\r\n        }\r\n  \r\n        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize\r\n        // VBO double-buffering and reduce GPU stalls.\r\n        GL.newRenderingFrameStarted();\r\n  \r\n        Browser.mainLoop.runIter(browserIterationFunc);\r\n  \r\n        // catch pauses from the main loop itself\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able\r\n        // to queue the newest produced audio samples.\r\n        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()\r\n        //       do not need to be hardcoded into this function, but can be more generic.\r\n        if (typeof SDL == 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (!noSetTiming) {\r\n        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);\r\n        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (simulateInfiniteLoop) {\r\n        throw 'unwind';\r\n      }\r\n    }\r\n  \r\n  function handleException(e) {\r\n      // Certain exception types we do not treat as errors since they are used for\r\n      // internal control flow.\r\n      // 1. ExitStatus, which is thrown by exit()\r\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\r\n      //    that wish to return to JS event loop.\r\n      if (e instanceof ExitStatus || e == 'unwind') {\r\n        return EXITSTATUS;\r\n      }\r\n      quit_(1, e);\r\n    }\r\n  \r\n  \r\n  function _proc_exit(code) {\r\n      EXITSTATUS = code;\r\n      if (!keepRuntimeAlive()) {\r\n        if (Module['onExit']) Module['onExit'](code);\r\n        ABORT = true;\r\n      }\r\n      quit_(code, new ExitStatus(code));\r\n    }\r\n  /** @suppress {duplicate } */\r\n  /** @param {boolean|number=} implicit */\r\n  function exitJS(status, implicit) {\r\n      EXITSTATUS = status;\r\n  \r\n      _proc_exit(status);\r\n    }\r\n  var _exit = exitJS;\r\n  \r\n  function maybeExit() {\r\n      if (!keepRuntimeAlive()) {\r\n        try {\r\n          _exit(EXITSTATUS);\r\n        } catch (e) {\r\n          handleException(e);\r\n        }\r\n      }\r\n    }\r\n  function callUserCallback(func) {\r\n      if (ABORT) {\r\n        return;\r\n      }\r\n      try {\r\n        func();\r\n        maybeExit();\r\n      } catch (e) {\r\n        handleException(e);\r\n      }\r\n    }\r\n  \r\n  /** @param {number=} timeout */\r\n  function safeSetTimeout(func, timeout) {\r\n      \r\n      return setTimeout(() => {\r\n        \r\n        callUserCallback(func);\r\n      }, timeout);\r\n    }\r\n  \r\n  function warnOnce(text) {\r\n      if (!warnOnce.shown) warnOnce.shown = {};\r\n      if (!warnOnce.shown[text]) {\r\n        warnOnce.shown[text] = 1;\r\n        err(text);\r\n      }\r\n    }\r\n  \r\n  \r\n  var Browser = {mainLoop:{running:false,scheduler:null,method:\"\",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function() {\r\n          Browser.mainLoop.scheduler = null;\r\n          // Incrementing this signals the previous main loop that it's now become old, and it must return.\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n        },resume:function() {\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n          var timingMode = Browser.mainLoop.timingMode;\r\n          var timingValue = Browser.mainLoop.timingValue;\r\n          var func = Browser.mainLoop.func;\r\n          Browser.mainLoop.func = null;\r\n          // do not set timing and call scheduler, we will do it on the next lines\r\n          setMainLoop(func, 0, false, Browser.mainLoop.arg, true);\r\n          _emscripten_set_main_loop_timing(timingMode, timingValue);\r\n          Browser.mainLoop.scheduler();\r\n        },updateStatus:function() {\r\n          if (Module['setStatus']) {\r\n            var message = Module['statusMessage'] || 'Please wait...';\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var expected = Browser.mainLoop.expectedBlockers;\r\n            if (remaining) {\r\n              if (remaining < expected) {\r\n                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');\r\n              } else {\r\n                Module['setStatus'](message);\r\n              }\r\n            } else {\r\n              Module['setStatus']('');\r\n            }\r\n          }\r\n        },runIter:function(func) {\r\n          if (ABORT) return;\r\n          if (Module['preMainLoop']) {\r\n            var preRet = Module['preMainLoop']();\r\n            if (preRet === false) {\r\n              return; // |return false| skips a frame\r\n            }\r\n          }\r\n          callUserCallback(func);\r\n          if (Module['postMainLoop']) Module['postMainLoop']();\r\n        }},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function() {\r\n        if (!Module[\"preloadPlugins\"]) Module[\"preloadPlugins\"] = []; // needs to exist even in workers\r\n  \r\n        if (Browser.initted) return;\r\n        Browser.initted = true;\r\n  \r\n        try {\r\n          new Blob();\r\n          Browser.hasBlobConstructor = true;\r\n        } catch(e) {\r\n          Browser.hasBlobConstructor = false;\r\n          err(\"warning: no blob constructor, cannot create blobs with mimetypes\");\r\n        }\r\n        Browser.BlobBuilder = typeof MozBlobBuilder != \"undefined\" ? MozBlobBuilder : (typeof WebKitBlobBuilder != \"undefined\" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? err(\"warning: no BlobBuilder\") : null));\r\n        Browser.URLObject = typeof window != \"undefined\" ? (window.URL ? window.URL : window.webkitURL) : undefined;\r\n        if (!Module.noImageDecoding && typeof Browser.URLObject == 'undefined') {\r\n          err(\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\");\r\n          Module.noImageDecoding = true;\r\n        }\r\n  \r\n        // Support for plugins that can process preloaded files. You can add more of these to\r\n        // your app by creating and appending to Module.preloadPlugins.\r\n        //\r\n        // Each plugin is asked if it can handle a file based on the file's name. If it can,\r\n        // it is given the file's raw data. When it is done, it calls a callback with the file's\r\n        // (possibly modified) data. For example, a plugin might decompress a file, or it\r\n        // might create some side data structure for use later (like an Image element, etc.).\r\n  \r\n        var imagePlugin = {};\r\n        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {\r\n          return !Module.noImageDecoding && /\\.(jpg|jpeg|png|bmp)$/i.test(name);\r\n        };\r\n        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {\r\n          var b = null;\r\n          if (Browser.hasBlobConstructor) {\r\n            try {\r\n              b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n              if (b.size !== byteArray.length) { // Safari bug #118630\r\n                // Safari's Blob can only take an ArrayBuffer\r\n                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });\r\n              }\r\n            } catch(e) {\r\n              warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');\r\n            }\r\n          }\r\n          if (!b) {\r\n            var bb = new Browser.BlobBuilder();\r\n            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range\r\n            b = bb.getBlob();\r\n          }\r\n          var url = Browser.URLObject.createObjectURL(b);\r\n          var img = new Image();\r\n          img.onload = () => {\r\n            assert(img.complete, 'Image ' + name + ' could not be decoded');\r\n            var canvas = /** @type {!HTMLCanvasElement} */ (document.createElement('canvas'));\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            var ctx = canvas.getContext('2d');\r\n            ctx.drawImage(img, 0, 0);\r\n            preloadedImages[name] = canvas;\r\n            Browser.URLObject.revokeObjectURL(url);\r\n            if (onload) onload(byteArray);\r\n          };\r\n          img.onerror = (event) => {\r\n            out('Image ' + url + ' could not be decoded');\r\n            if (onerror) onerror();\r\n          };\r\n          img.src = url;\r\n        };\r\n        Module['preloadPlugins'].push(imagePlugin);\r\n  \r\n        var audioPlugin = {};\r\n        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {\r\n          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };\r\n        };\r\n        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {\r\n          var done = false;\r\n          function finish(audio) {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = audio;\r\n            if (onload) onload(byteArray);\r\n          }\r\n          function fail() {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = new Audio(); // empty shim\r\n            if (onerror) onerror();\r\n          }\r\n          if (Browser.hasBlobConstructor) {\r\n            try {\r\n              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n            } catch(e) {\r\n              return fail();\r\n            }\r\n            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!\r\n            var audio = new Audio();\r\n            audio.addEventListener('canplaythrough', () => finish(audio), false); // use addEventListener due to chromium bug 124926\r\n            audio.onerror = function audio_onerror(event) {\r\n              if (done) return;\r\n              err('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');\r\n              function encode64(data) {\r\n                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n                var PAD = '=';\r\n                var ret = '';\r\n                var leftchar = 0;\r\n                var leftbits = 0;\r\n                for (var i = 0; i < data.length; i++) {\r\n                  leftchar = (leftchar << 8) | data[i];\r\n                  leftbits += 8;\r\n                  while (leftbits >= 6) {\r\n                    var curr = (leftchar >> (leftbits-6)) & 0x3f;\r\n                    leftbits -= 6;\r\n                    ret += BASE[curr];\r\n                  }\r\n                }\r\n                if (leftbits == 2) {\r\n                  ret += BASE[(leftchar&3) << 4];\r\n                  ret += PAD + PAD;\r\n                } else if (leftbits == 4) {\r\n                  ret += BASE[(leftchar&0xf) << 2];\r\n                  ret += PAD;\r\n                }\r\n                return ret;\r\n              }\r\n              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);\r\n              finish(audio); // we don't wait for confirmation this worked - but it's worth trying\r\n            };\r\n            audio.src = url;\r\n            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror\r\n            safeSetTimeout(() => {\r\n              finish(audio); // try to use it even though it is not necessarily ready to play\r\n            }, 10000);\r\n          } else {\r\n            return fail();\r\n          }\r\n        };\r\n        Module['preloadPlugins'].push(audioPlugin);\r\n  \r\n        // Canvas event setup\r\n  \r\n        function pointerLockChange() {\r\n          Browser.pointerLock = document['pointerLockElement'] === Module['canvas'] ||\r\n                                document['mozPointerLockElement'] === Module['canvas'] ||\r\n                                document['webkitPointerLockElement'] === Module['canvas'] ||\r\n                                document['msPointerLockElement'] === Module['canvas'];\r\n        }\r\n        var canvas = Module['canvas'];\r\n        if (canvas) {\r\n          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module\r\n          // Module['forcedAspectRatio'] = 4 / 3;\r\n  \r\n          canvas.requestPointerLock = canvas['requestPointerLock'] ||\r\n                                      canvas['mozRequestPointerLock'] ||\r\n                                      canvas['webkitRequestPointerLock'] ||\r\n                                      canvas['msRequestPointerLock'] ||\r\n                                      (() => {});\r\n          canvas.exitPointerLock = document['exitPointerLock'] ||\r\n                                   document['mozExitPointerLock'] ||\r\n                                   document['webkitExitPointerLock'] ||\r\n                                   document['msExitPointerLock'] ||\r\n                                   (() => {}); // no-op if function does not exist\r\n          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\r\n  \r\n          document.addEventListener('pointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mozpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mspointerlockchange', pointerLockChange, false);\r\n  \r\n          if (Module['elementPointerLock']) {\r\n            canvas.addEventListener(\"click\", (ev) => {\r\n              if (!Browser.pointerLock && Module['canvas'].requestPointerLock) {\r\n                Module['canvas'].requestPointerLock();\r\n                ev.preventDefault();\r\n              }\r\n            }, false);\r\n          }\r\n        }\r\n      },handledByPreloadPlugin:function(byteArray, fullname, finish, onerror) {\r\n        // Ensure plugins are ready.\r\n        Browser.init();\r\n  \r\n        var handled = false;\r\n        Module['preloadPlugins'].forEach((plugin) => {\r\n          if (handled) return;\r\n          if (plugin['canHandle'](fullname)) {\r\n            plugin['handle'](byteArray, fullname, finish, onerror);\r\n            handled = true;\r\n          }\r\n        });\r\n        return handled;\r\n      },createContext:function(/** @type {HTMLCanvasElement} */ canvas, useWebGL, setInModule, webGLContextAttributes) {\r\n        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.\r\n  \r\n        var ctx;\r\n        var contextHandle;\r\n        if (useWebGL) {\r\n          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.\r\n          var contextAttributes = {\r\n            antialias: false,\r\n            alpha: false,\r\n            majorVersion: (typeof WebGL2RenderingContext != 'undefined') ? 2 : 1,\r\n          };\r\n  \r\n          if (webGLContextAttributes) {\r\n            for (var attribute in webGLContextAttributes) {\r\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\r\n            }\r\n          }\r\n  \r\n          // This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not\r\n          // actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function\r\n          // Browser.createContext() should not even be emitted.\r\n          if (typeof GL != 'undefined') {\r\n            contextHandle = GL.createContext(canvas, contextAttributes);\r\n            if (contextHandle) {\r\n              ctx = GL.getContext(contextHandle).GLctx;\r\n            }\r\n          }\r\n        } else {\r\n          ctx = canvas.getContext('2d');\r\n        }\r\n  \r\n        if (!ctx) return null;\r\n  \r\n        if (setInModule) {\r\n          if (!useWebGL) assert(typeof GLctx == 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');\r\n  \r\n          Module.ctx = ctx;\r\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\r\n          Module.useWebGL = useWebGL;\r\n          Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\r\n          Browser.init();\r\n        }\r\n        return ctx;\r\n      },destroyContext:function(canvas, useWebGL, setInModule) {},fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:function(lockPointer, resizeCanvas) {\r\n        Browser.lockPointer = lockPointer;\r\n        Browser.resizeCanvas = resizeCanvas;\r\n        if (typeof Browser.lockPointer == 'undefined') Browser.lockPointer = true;\r\n        if (typeof Browser.resizeCanvas == 'undefined') Browser.resizeCanvas = false;\r\n  \r\n        var canvas = Module['canvas'];\r\n        function fullscreenChange() {\r\n          Browser.isFullscreen = false;\r\n          var canvasContainer = canvas.parentNode;\r\n          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n               document['webkitCurrentFullScreenElement']) === canvasContainer) {\r\n            canvas.exitFullscreen = Browser.exitFullscreen;\r\n            if (Browser.lockPointer) canvas.requestPointerLock();\r\n            Browser.isFullscreen = true;\r\n            if (Browser.resizeCanvas) {\r\n              Browser.setFullscreenCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          } else {\r\n            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen\r\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\r\n            canvasContainer.parentNode.removeChild(canvasContainer);\r\n  \r\n            if (Browser.resizeCanvas) {\r\n              Browser.setWindowedCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          }\r\n          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullscreen);\r\n          if (Module['onFullscreen']) Module['onFullscreen'](Browser.isFullscreen);\r\n        }\r\n  \r\n        if (!Browser.fullscreenHandlersInstalled) {\r\n          Browser.fullscreenHandlersInstalled = true;\r\n          document.addEventListener('fullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('mozfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('MSFullscreenChange', fullscreenChange, false);\r\n        }\r\n  \r\n        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root\r\n        var canvasContainer = document.createElement(\"div\");\r\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\r\n        canvasContainer.appendChild(canvas);\r\n  \r\n        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)\r\n        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||\r\n                                            canvasContainer['mozRequestFullScreen'] ||\r\n                                            canvasContainer['msRequestFullscreen'] ||\r\n                                           (canvasContainer['webkitRequestFullscreen'] ? () => canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) : null) ||\r\n                                           (canvasContainer['webkitRequestFullScreen'] ? () => canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) : null);\r\n  \r\n        canvasContainer.requestFullscreen();\r\n      },exitFullscreen:function() {\r\n        // This is workaround for chrome. Trying to exit from fullscreen\r\n        // not in fullscreen state will cause \"TypeError: Document not active\"\r\n        // in chrome. See https://github.com/emscripten-core/emscripten/pull/8236\r\n        if (!Browser.isFullscreen) {\r\n          return false;\r\n        }\r\n  \r\n        var CFS = document['exitFullscreen'] ||\r\n                  document['cancelFullScreen'] ||\r\n                  document['mozCancelFullScreen'] ||\r\n                  document['msExitFullscreen'] ||\r\n                  document['webkitCancelFullScreen'] ||\r\n            (() => {});\r\n        CFS.apply(document, []);\r\n        return true;\r\n      },nextRAF:0,fakeRequestAnimationFrame:function(func) {\r\n        // try to keep 60fps between calls to here\r\n        var now = Date.now();\r\n        if (Browser.nextRAF === 0) {\r\n          Browser.nextRAF = now + 1000/60;\r\n        } else {\r\n          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0\r\n            Browser.nextRAF += 1000/60;\r\n          }\r\n        }\r\n        var delay = Math.max(Browser.nextRAF - now, 0);\r\n        setTimeout(func, delay);\r\n      },requestAnimationFrame:function(func) {\r\n        if (typeof requestAnimationFrame == 'function') {\r\n          requestAnimationFrame(func);\r\n          return;\r\n        }\r\n        var RAF = Browser.fakeRequestAnimationFrame;\r\n        RAF(func);\r\n      },safeSetTimeout:function(func, timeout) {\r\n        // Legacy function, this is used by the SDL2 port so we need to keep it\r\n        // around at least until that is updated.\r\n        // See https://github.com/libsdl-org/SDL/pull/6304\r\n        return safeSetTimeout(func, timeout);\r\n      },safeRequestAnimationFrame:function(func) {\r\n        \r\n        return Browser.requestAnimationFrame(() => {\r\n          \r\n          callUserCallback(func);\r\n        });\r\n      },getMimetype:function(name) {\r\n        return {\r\n          'jpg': 'image/jpeg',\r\n          'jpeg': 'image/jpeg',\r\n          'png': 'image/png',\r\n          'bmp': 'image/bmp',\r\n          'ogg': 'audio/ogg',\r\n          'wav': 'audio/wav',\r\n          'mp3': 'audio/mpeg'\r\n        }[name.substr(name.lastIndexOf('.')+1)];\r\n      },getUserMedia:function(func) {\r\n        if (!window.getUserMedia) {\r\n          window.getUserMedia = navigator['getUserMedia'] ||\r\n                                navigator['mozGetUserMedia'];\r\n        }\r\n        window.getUserMedia(func);\r\n      },getMovementX:function(event) {\r\n        return event['movementX'] ||\r\n               event['mozMovementX'] ||\r\n               event['webkitMovementX'] ||\r\n               0;\r\n      },getMovementY:function(event) {\r\n        return event['movementY'] ||\r\n               event['mozMovementY'] ||\r\n               event['webkitMovementY'] ||\r\n               0;\r\n      },getMouseWheelDelta:function(event) {\r\n        var delta = 0;\r\n        switch (event.type) {\r\n          case 'DOMMouseScroll':\r\n            // 3 lines make up a step\r\n            delta = event.detail / 3;\r\n            break;\r\n          case 'mousewheel':\r\n            // 120 units make up a step\r\n            delta = event.wheelDelta / 120;\r\n            break;\r\n          case 'wheel':\r\n            delta = event.deltaY\r\n            switch (event.deltaMode) {\r\n              case 0:\r\n                // DOM_DELTA_PIXEL: 100 pixels make up a step\r\n                delta /= 100;\r\n                break;\r\n              case 1:\r\n                // DOM_DELTA_LINE: 3 lines make up a step\r\n                delta /= 3;\r\n                break;\r\n              case 2:\r\n                // DOM_DELTA_PAGE: A page makes up 80 steps\r\n                delta *= 80;\r\n                break;\r\n              default:\r\n                throw 'unrecognized mouse wheel delta mode: ' + event.deltaMode;\r\n            }\r\n            break;\r\n          default:\r\n            throw 'unrecognized mouse wheel event: ' + event.type;\r\n        }\r\n        return delta;\r\n      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function(event) { // event should be mousemove, mousedown or mouseup\r\n        if (Browser.pointerLock) {\r\n          // When the pointer is locked, calculate the coordinates\r\n          // based on the movement of the mouse.\r\n          // Workaround for Firefox bug 764498\r\n          if (event.type != 'mousemove' &&\r\n              ('mozMovementX' in event)) {\r\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\r\n          } else {\r\n            Browser.mouseMovementX = Browser.getMovementX(event);\r\n            Browser.mouseMovementY = Browser.getMovementY(event);\r\n          }\r\n  \r\n          // check if SDL is available\r\n          if (typeof SDL != \"undefined\") {\r\n            Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;\r\n            Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;\r\n          } else {\r\n            // just add the mouse delta to the current absolut mouse position\r\n            // FIXME: ideally this should be clamped against the canvas size and zero\r\n            Browser.mouseX += Browser.mouseMovementX;\r\n            Browser.mouseY += Browser.mouseMovementY;\r\n          }\r\n        } else {\r\n          // Otherwise, calculate the movement based on the changes\r\n          // in the coordinates.\r\n          var rect = Module[\"canvas\"].getBoundingClientRect();\r\n          var cw = Module[\"canvas\"].width;\r\n          var ch = Module[\"canvas\"].height;\r\n  \r\n          // Neither .scrollX or .pageXOffset are defined in a spec, but\r\n          // we prefer .scrollX because it is currently in a spec draft.\r\n          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)\r\n          var scrollX = ((typeof window.scrollX != 'undefined') ? window.scrollX : window.pageXOffset);\r\n          var scrollY = ((typeof window.scrollY != 'undefined') ? window.scrollY : window.pageYOffset);\r\n  \r\n          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {\r\n            var touch = event.touch;\r\n            if (touch === undefined) {\r\n              return; // the \"touch\" property is only defined in SDL\r\n  \r\n            }\r\n            var adjustedX = touch.pageX - (scrollX + rect.left);\r\n            var adjustedY = touch.pageY - (scrollY + rect.top);\r\n  \r\n            adjustedX = adjustedX * (cw / rect.width);\r\n            adjustedY = adjustedY * (ch / rect.height);\r\n  \r\n            var coords = { x: adjustedX, y: adjustedY };\r\n  \r\n            if (event.type === 'touchstart') {\r\n              Browser.lastTouches[touch.identifier] = coords;\r\n              Browser.touches[touch.identifier] = coords;\r\n            } else if (event.type === 'touchend' || event.type === 'touchmove') {\r\n              var last = Browser.touches[touch.identifier];\r\n              if (!last) last = coords;\r\n              Browser.lastTouches[touch.identifier] = last;\r\n              Browser.touches[touch.identifier] = coords;\r\n            }\r\n            return;\r\n          }\r\n  \r\n          var x = event.pageX - (scrollX + rect.left);\r\n          var y = event.pageY - (scrollY + rect.top);\r\n  \r\n          // the canvas might be CSS-scaled compared to its backbuffer;\r\n          // SDL-using content will want mouse coordinates in terms\r\n          // of backbuffer units.\r\n          x = x * (cw / rect.width);\r\n          y = y * (ch / rect.height);\r\n  \r\n          Browser.mouseMovementX = x - Browser.mouseX;\r\n          Browser.mouseMovementY = y - Browser.mouseY;\r\n          Browser.mouseX = x;\r\n          Browser.mouseY = y;\r\n        }\r\n      },resizeListeners:[],updateResizeListeners:function() {\r\n        var canvas = Module['canvas'];\r\n        Browser.resizeListeners.forEach((listener) => listener(canvas.width, canvas.height));\r\n      },setCanvasSize:function(width, height, noUpdates) {\r\n        var canvas = Module['canvas'];\r\n        Browser.updateCanvasDimensions(canvas, width, height);\r\n        if (!noUpdates) Browser.updateResizeListeners();\r\n      },windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:function() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags | 0x00800000; // set SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },setWindowedCanvasSize:function() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },updateCanvasDimensions:function(canvas, wNative, hNative) {\r\n        if (wNative && hNative) {\r\n          canvas.widthNative = wNative;\r\n          canvas.heightNative = hNative;\r\n        } else {\r\n          wNative = canvas.widthNative;\r\n          hNative = canvas.heightNative;\r\n        }\r\n        var w = wNative;\r\n        var h = hNative;\r\n        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {\r\n          if (w/h < Module['forcedAspectRatio']) {\r\n            w = Math.round(h * Module['forcedAspectRatio']);\r\n          } else {\r\n            h = Math.round(w / Module['forcedAspectRatio']);\r\n          }\r\n        }\r\n        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {\r\n           var factor = Math.min(screen.width / w, screen.height / h);\r\n           w = Math.round(w * factor);\r\n           h = Math.round(h * factor);\r\n        }\r\n        if (Browser.resizeCanvas) {\r\n          if (canvas.width  != w) canvas.width  = w;\r\n          if (canvas.height != h) canvas.height = h;\r\n          if (typeof canvas.style != 'undefined') {\r\n            canvas.style.removeProperty( \"width\");\r\n            canvas.style.removeProperty(\"height\");\r\n          }\r\n        } else {\r\n          if (canvas.width  != wNative) canvas.width  = wNative;\r\n          if (canvas.height != hNative) canvas.height = hNative;\r\n          if (typeof canvas.style != 'undefined') {\r\n            if (w != wNative || h != hNative) {\r\n              canvas.style.setProperty( \"width\", w + \"px\", \"important\");\r\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\r\n            } else {\r\n              canvas.style.removeProperty( \"width\");\r\n              canvas.style.removeProperty(\"height\");\r\n            }\r\n          }\r\n        }\r\n      }};\r\n  \r\n  var EGL = {errorCode:12288,defaultDisplayInitialized:false,currentContext:0,currentReadSurface:0,currentDrawSurface:0,contextAttributes:{alpha:false,depth:false,stencil:false,antialias:false},stringCache:{},setErrorCode:function(code) {\r\n        EGL.errorCode = code;\r\n      },chooseConfig:function(display, attribList, config, config_size, numConfigs) {\r\n        if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n          EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n          return 0;\r\n        }\r\n  \r\n        if (attribList) {\r\n          // read attribList if it is non-null\r\n          for (;;) {\r\n            var param = HEAP32[((attribList)>>2)];\r\n            if (param == 0x3021 /*EGL_ALPHA_SIZE*/) {\r\n              var alphaSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.alpha = (alphaSize > 0);\r\n            } else if (param == 0x3025 /*EGL_DEPTH_SIZE*/) {\r\n              var depthSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.depth = (depthSize > 0);\r\n            } else if (param == 0x3026 /*EGL_STENCIL_SIZE*/) {\r\n              var stencilSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.stencil = (stencilSize > 0);\r\n            } else if (param == 0x3031 /*EGL_SAMPLES*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples > 0);\r\n            } else if (param == 0x3032 /*EGL_SAMPLE_BUFFERS*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples == 1);\r\n            } else if (param == 0x3100 /*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/) {\r\n              var requestedPriority = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.lowLatency = (requestedPriority != 0x3103 /*EGL_CONTEXT_PRIORITY_LOW_IMG*/);\r\n            } else if (param == 0x3038 /*EGL_NONE*/) {\r\n                break;\r\n            }\r\n            attribList += 8;\r\n          }\r\n        }\r\n  \r\n        if ((!config || !config_size) && !numConfigs) {\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n        }\r\n        if (numConfigs) {\r\n          HEAP32[((numConfigs)>>2)] = 1; // Total number of supported configs: 1.\r\n        }\r\n        if (config && config_size > 0) {\r\n          HEAP32[((config)>>2)] = 62002;\r\n        }\r\n  \r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }};\r\n  function _eglBindAPI(api) {\r\n      if (api == 0x30A0 /* EGL_OPENGL_ES_API */) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }\r\n      // if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {\r\n      EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n      return 0;\r\n    }\r\n\r\n  function _eglChooseConfig(display, attrib_list, configs, config_size, numConfigs) {\r\n      return EGL.chooseConfig(display, attrib_list, configs, config_size, numConfigs);\r\n    }\r\n\r\n  function webgl_enable_ANGLE_instanced_arrays(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 26 and Google Chrome 30 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('ANGLE_instanced_arrays');\r\n      if (ext) {\r\n        ctx['vertexAttribDivisor'] = function(index, divisor) { ext['vertexAttribDivisorANGLE'](index, divisor); };\r\n        ctx['drawArraysInstanced'] = function(mode, first, count, primcount) { ext['drawArraysInstancedANGLE'](mode, first, count, primcount); };\r\n        ctx['drawElementsInstanced'] = function(mode, count, type, indices, primcount) { ext['drawElementsInstancedANGLE'](mode, count, type, indices, primcount); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_OES_vertex_array_object(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 25 and WebKit 536.28/desktop Safari 6.0.3 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('OES_vertex_array_object');\r\n      if (ext) {\r\n        ctx['createVertexArray'] = function() { return ext['createVertexArrayOES'](); };\r\n        ctx['deleteVertexArray'] = function(vao) { ext['deleteVertexArrayOES'](vao); };\r\n        ctx['bindVertexArray'] = function(vao) { ext['bindVertexArrayOES'](vao); };\r\n        ctx['isVertexArray'] = function(vao) { return ext['isVertexArrayOES'](vao); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_draw_buffers(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 28 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('WEBGL_draw_buffers');\r\n      if (ext) {\r\n        ctx['drawBuffers'] = function(n, bufs) { ext['drawBuffersWEBGL'](n, bufs); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(ctx) {\r\n      // Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.dibvbi = ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance'));\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(ctx) {\r\n      // Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.mdibvbi = ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_multi_draw(ctx) {\r\n      // Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.\r\n      return !!(ctx.multiDrawWebgl = ctx.getExtension('WEBGL_multi_draw'));\r\n    }\r\n  \r\n  \r\n  var GL = {counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:[],offscreenCanvases:{},queries:[],samplers:[],transformFeedbacks:[],syncs:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],stringCache:{},stringiCache:{},unpackAlignment:4,recordError:function recordError(errorCode) {\r\n        if (!GL.lastError) {\r\n          GL.lastError = errorCode;\r\n        }\r\n      },getNewId:function(table) {\r\n        var ret = GL.counter++;\r\n        for (var i = table.length; i < ret; i++) {\r\n          table[i] = null;\r\n        }\r\n        return ret;\r\n      },MAX_TEMP_BUFFER_SIZE:16777216,numTempVertexBuffersPerSize:64,log2ceilLookup:function(i) {\r\n        return 32 - Math.clz32(i === 0 ? 0 : i - 1);\r\n      },generateTempBuffers:function(quads, context) {\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        context.tempVertexBufferCounters1 = [];\r\n        context.tempVertexBufferCounters2 = [];\r\n        context.tempVertexBufferCounters1.length = context.tempVertexBufferCounters2.length = largestIndex+1;\r\n        context.tempVertexBuffers1 = [];\r\n        context.tempVertexBuffers2 = [];\r\n        context.tempVertexBuffers1.length = context.tempVertexBuffers2.length = largestIndex+1;\r\n        context.tempIndexBuffers = [];\r\n        context.tempIndexBuffers.length = largestIndex+1;\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          context.tempIndexBuffers[i] = null; // Created on-demand\r\n          context.tempVertexBufferCounters1[i] = context.tempVertexBufferCounters2[i] = 0;\r\n          var ringbufferLength = GL.numTempVertexBuffersPerSize;\r\n          context.tempVertexBuffers1[i] = [];\r\n          context.tempVertexBuffers2[i] = [];\r\n          var ringbuffer1 = context.tempVertexBuffers1[i];\r\n          var ringbuffer2 = context.tempVertexBuffers2[i];\r\n          ringbuffer1.length = ringbuffer2.length = ringbufferLength;\r\n          for (var j = 0; j < ringbufferLength; ++j) {\r\n            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand\r\n          }\r\n        }\r\n  \r\n        if (quads) {\r\n          // GL_QUAD indexes can be precalculated\r\n          context.tempQuadIndexBuffer = GLctx.createBuffer();\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, context.tempQuadIndexBuffer);\r\n          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;\r\n          var quadIndexes = new Uint16Array(numIndexes);\r\n          var i = 0, v = 0;\r\n          while (1) {\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+1;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+3;\r\n            if (i >= numIndexes) break;\r\n            v += 4;\r\n          }\r\n          context.GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, quadIndexes, 0x88E4 /*GL_STATIC_DRAW*/);\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n        }\r\n      },getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ringbuffer = GL.currentContext.tempVertexBuffers1[idx];\r\n        var nextFreeBufferIndex = GL.currentContext.tempVertexBufferCounters1[idx];\r\n        GL.currentContext.tempVertexBufferCounters1[idx] = (GL.currentContext.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);\r\n        var vbo = ringbuffer[nextFreeBufferIndex];\r\n        if (vbo) {\r\n          return vbo;\r\n        }\r\n        var prevVBO = GLctx.getParameter(0x8894 /*GL_ARRAY_BUFFER_BINDING*/);\r\n        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, ringbuffer[nextFreeBufferIndex]);\r\n        GLctx.bufferData(0x8892 /*GL_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, prevVBO);\r\n        return ringbuffer[nextFreeBufferIndex];\r\n      },getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ibo = GL.currentContext.tempIndexBuffers[idx];\r\n        if (ibo) {\r\n          return ibo;\r\n        }\r\n        var prevIBO = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n        GL.currentContext.tempIndexBuffers[idx] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, GL.currentContext.tempIndexBuffers[idx]);\r\n        GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, prevIBO);\r\n        return GL.currentContext.tempIndexBuffers[idx];\r\n      },newRenderingFrameStarted:function newRenderingFrameStarted() {\r\n        if (!GL.currentContext) {\r\n          return;\r\n        }\r\n        var vb = GL.currentContext.tempVertexBuffers1;\r\n        GL.currentContext.tempVertexBuffers1 = GL.currentContext.tempVertexBuffers2;\r\n        GL.currentContext.tempVertexBuffers2 = vb;\r\n        vb = GL.currentContext.tempVertexBufferCounters1;\r\n        GL.currentContext.tempVertexBufferCounters1 = GL.currentContext.tempVertexBufferCounters2;\r\n        GL.currentContext.tempVertexBufferCounters2 = vb;\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          GL.currentContext.tempVertexBufferCounters1[i] = 0;\r\n        }\r\n      },getSource:function(shader, count, string, length) {\r\n        var source = '';\r\n        for (var i = 0; i < count; ++i) {\r\n          var len = length ? HEAP32[(((length)+(i*4))>>2)] : -1;\r\n          source += UTF8ToString(HEAP32[(((string)+(i*4))>>2)], len < 0 ? undefined : len);\r\n        }\r\n        return source;\r\n      },calcBufLength:function calcBufLength(size, type, stride, count) {\r\n        if (stride > 0) {\r\n          return count * stride;  // XXXvlad this is not exactly correct I don't think\r\n        }\r\n        var typeSize = GL.byteSizeByType[type - GL.byteSizeByTypeRoot];\r\n        return size * typeSize * count;\r\n      },usedTempBuffers:[],preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count) {\r\n        GL.resetBufferBinding = false;\r\n  \r\n        // TODO: initial pass to detect ranges we need to upload, might not need an upload per attrib\r\n        for (var i = 0; i < GL.currentContext.maxVertexAttribs; ++i) {\r\n          var cb = GL.currentContext.clientBuffers[i];\r\n          if (!cb.clientside || !cb.enabled) continue;\r\n  \r\n          GL.resetBufferBinding = true;\r\n  \r\n          var size = GL.calcBufLength(cb.size, cb.type, cb.stride, count);\r\n          var buf = GL.getTempVertexBuffer(size);\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, buf);\r\n          GLctx.bufferSubData(0x8892 /*GL_ARRAY_BUFFER*/,\r\n                                   0,\r\n                                   HEAPU8.subarray(cb.ptr, cb.ptr + size));\r\n          cb.vertexAttribPointerAdaptor.call(GLctx, i, cb.size, cb.type, cb.normalized, cb.stride, 0);\r\n        }\r\n      },postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings() {\r\n        if (GL.resetBufferBinding) {\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, GL.buffers[GLctx.currentArrayBufferBinding]);\r\n        }\r\n      },createContext:function(/** @type {HTMLCanvasElement} */ canvas, webGLContextAttributes) {\r\n  \r\n        // BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL context on a canvas,\r\n        // calling .getContext() will always return that context independent of which 'webgl' or 'webgl2'\r\n        // context version was passed. See https://bugs.webkit.org/show_bug.cgi?id=222758 and\r\n        // https://github.com/emscripten-core/emscripten/issues/13295.\r\n        // TODO: Once the bug is fixed and shipped in Safari, adjust the Safari version field in above check.\r\n        if (!canvas.getContextSafariWebGL2Fixed) {\r\n          canvas.getContextSafariWebGL2Fixed = canvas.getContext;\r\n          /** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */\r\n          function fixedGetContext(ver, attrs) {\r\n            var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\r\n            return ((ver == 'webgl') == (gl instanceof WebGLRenderingContext)) ? gl : null;\r\n          }\r\n          canvas.getContext = fixedGetContext;\r\n        }\r\n  \r\n        var ctx =\r\n          (webGLContextAttributes.majorVersion > 1)\r\n          ?\r\n            canvas.getContext(\"webgl2\", webGLContextAttributes)\r\n          :\r\n          (canvas.getContext(\"webgl\", webGLContextAttributes)\r\n            // https://caniuse.com/#feat=webgl\r\n            );\r\n  \r\n        if (!ctx) return 0;\r\n  \r\n        var handle = GL.registerContext(ctx, webGLContextAttributes);\r\n  \r\n        return handle;\r\n      },registerContext:function(ctx, webGLContextAttributes) {\r\n        // without pthreads a context is just an integer ID\r\n        var handle = GL.getNewId(GL.contexts);\r\n  \r\n        var context = {\r\n          handle: handle,\r\n          attributes: webGLContextAttributes,\r\n          version: webGLContextAttributes.majorVersion,\r\n          GLctx: ctx\r\n        };\r\n  \r\n        // Store the created context object so that we can access the context given a canvas without having to pass the parameters again.\r\n        if (ctx.canvas) ctx.canvas.GLctxObject = context;\r\n        GL.contexts[handle] = context;\r\n        if (typeof webGLContextAttributes.enableExtensionsByDefault == 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {\r\n          GL.initExtensions(context);\r\n        }\r\n  \r\n        context.maxVertexAttribs = context.GLctx.getParameter(0x8869 /*GL_MAX_VERTEX_ATTRIBS*/);\r\n        context.clientBuffers = [];\r\n        for (var i = 0; i < context.maxVertexAttribs; i++) {\r\n          context.clientBuffers[i] = { enabled: false, clientside: false, size: 0, type: 0, normalized: 0, stride: 0, ptr: 0, vertexAttribPointerAdaptor: null };\r\n        }\r\n  \r\n        GL.generateTempBuffers(false, context);\r\n  \r\n        return handle;\r\n      },makeContextCurrent:function(contextHandle) {\r\n  \r\n        GL.currentContext = GL.contexts[contextHandle]; // Active Emscripten GL layer context object.\r\n        Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx; // Active WebGL context object.\r\n        return !(contextHandle && !GLctx);\r\n      },getContext:function(contextHandle) {\r\n        return GL.contexts[contextHandle];\r\n      },deleteContext:function(contextHandle) {\r\n        if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = null;\r\n        if (typeof JSEvents == 'object') JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas); // Release all JS event handlers on the DOM element that the GL context is associated with since the context is now deleted.\r\n        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined; // Make sure the canvas object no longer refers to the context object so there are no GC surprises.\r\n        GL.contexts[contextHandle] = null;\r\n      },initExtensions:function(context) {\r\n        // If this function is called without a specific context object, init the extensions of the currently active context.\r\n        if (!context) context = GL.currentContext;\r\n  \r\n        if (context.initExtensionsDone) return;\r\n        context.initExtensionsDone = true;\r\n  \r\n        var GLctx = context.GLctx;\r\n  \r\n        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist.\r\n  \r\n        // Extensions that are only available in WebGL 1 (the calls will be no-ops if called on a WebGL 2 context active)\r\n        webgl_enable_ANGLE_instanced_arrays(GLctx);\r\n        webgl_enable_OES_vertex_array_object(GLctx);\r\n        webgl_enable_WEBGL_draw_buffers(GLctx);\r\n        // Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)\r\n        webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);\r\n        webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);\r\n  \r\n        // On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative\r\n        // that's based on core APIs, and exposes only the queryCounterEXT()\r\n        // entrypoint.\r\n        if (context.version >= 2) {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\");\r\n        }\r\n  \r\n        // However, Firefox exposes the WebGL 1 version on WebGL 2 as well and\r\n        // thus we look for the WebGL 1 version again if the WebGL 2 version\r\n        // isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882\r\n        if (context.version < 2 || !GLctx.disjointTimerQueryExt)\r\n        {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query\");\r\n        }\r\n  \r\n        webgl_enable_WEBGL_multi_draw(GLctx);\r\n  \r\n        // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n        var exts = GLctx.getSupportedExtensions() || [];\r\n        exts.forEach(function(ext) {\r\n          // WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders are not enabled by default.\r\n          if (!ext.includes('lose_context') && !ext.includes('debug')) {\r\n            // Call .getExtension() to enable that extension permanently.\r\n            GLctx.getExtension(ext);\r\n          }\r\n        });\r\n      }};\r\n  \r\n  function _eglCreateContext(display, config, hmm, contextAttribs) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n  \r\n      // EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.\r\n      // So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.\r\n      var glesContextVersion = 1;\r\n      for (;;) {\r\n        var param = HEAP32[((contextAttribs)>>2)];\r\n        if (param == 0x3098 /*EGL_CONTEXT_CLIENT_VERSION*/) {\r\n          glesContextVersion = HEAP32[(((contextAttribs)+(4))>>2)];\r\n        } else if (param == 0x3038 /*EGL_NONE*/) {\r\n          break;\r\n        } else {\r\n          /* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */\r\n          EGL.setErrorCode(0x3004 /*EGL_BAD_ATTRIBUTE*/);\r\n          return 0;\r\n        }\r\n        contextAttribs += 8;\r\n      }\r\n      if (glesContextVersion < 2 || glesContextVersion > 3) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n  \r\n      EGL.contextAttributes.majorVersion = glesContextVersion - 1; // WebGL 1 is GLES 2, WebGL2 is GLES3\r\n      EGL.contextAttributes.minorVersion = 0;\r\n  \r\n      EGL.context = GL.createContext(Module['canvas'], EGL.contextAttributes);\r\n  \r\n      if (EGL.context != 0) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n  \r\n        // Run callbacks so that GL emulation works\r\n        GL.makeContextCurrent(EGL.context);\r\n        Module.useWebGL = true;\r\n        Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });\r\n  \r\n        // Note: This function only creates a context, but it shall not make it active.\r\n        GL.makeContextCurrent(null);\r\n        return 62004; // Magic ID for Emscripten EGLContext\r\n      } else {\r\n        EGL.setErrorCode(0x3009 /* EGL_BAD_MATCH */); // By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n    }\r\n\r\n  function _eglCreateWindowSurface(display, config, win, attrib_list) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      // TODO: Examine attrib_list! Parameters that can be present there are:\r\n      // - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)\r\n      // - EGL_VG_COLORSPACE (can't be set)\r\n      // - EGL_VG_ALPHA_FORMAT (can't be set)\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 62006; /* Magic ID for Emscripten 'default surface' */\r\n    }\r\n\r\n  \r\n  function _eglDestroyContext(display, context) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (context != 62004 /* Magic ID for Emscripten EGLContext */) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.deleteContext(EGL.context);\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.currentContext == context) {\r\n        EGL.currentContext = 0;\r\n      }\r\n      return 1 /* EGL_TRUE */;\r\n    }\r\n\r\n  function _eglDestroySurface(display, surface) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (surface != 62006 /* Magic ID for the only EGLSurface supported by Emscripten */) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 1;\r\n      }\r\n      if (EGL.currentReadSurface == surface) {\r\n        EGL.currentReadSurface = 0;\r\n      }\r\n      if (EGL.currentDrawSurface == surface) {\r\n        EGL.currentDrawSurface = 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1; /* Magic ID for Emscripten 'default surface' */\r\n    }\r\n\r\n  function _eglGetConfigAttrib(display, config, attribute, value) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      if (!value) {\r\n        EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n        return 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      switch (attribute) {\r\n      case 0x3020: // EGL_BUFFER_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 32 : 24;\r\n        return 1;\r\n      case 0x3021: // EGL_ALPHA_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 8 : 0;\r\n        return 1;\r\n      case 0x3022: // EGL_BLUE_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3023: // EGL_GREEN_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3024: // EGL_RED_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3025: // EGL_DEPTH_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.depth ? 24 : 0;\r\n        return 1;\r\n      case 0x3026: // EGL_STENCIL_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.stencil ? 8 : 0;\r\n        return 1;\r\n      case 0x3027: // EGL_CONFIG_CAVEAT\r\n        // We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3028: // EGL_CONFIG_ID\r\n        HEAP32[((value)>>2)] = 62002;\r\n        return 1;\r\n      case 0x3029: // EGL_LEVEL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302A: // EGL_MAX_PBUFFER_HEIGHT\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302B: // EGL_MAX_PBUFFER_PIXELS\r\n        HEAP32[((value)>>2)] = 16777216;\r\n        return 1;\r\n      case 0x302C: // EGL_MAX_PBUFFER_WIDTH\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302D: // EGL_NATIVE_RENDERABLE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302E: // EGL_NATIVE_VISUAL_ID\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302F: // EGL_NATIVE_VISUAL_TYPE\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3031: // EGL_SAMPLES\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 4 : 0;\r\n        return 1;\r\n      case 0x3032: // EGL_SAMPLE_BUFFERS\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 1 : 0;\r\n        return 1;\r\n      case 0x3033: // EGL_SURFACE_TYPE\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3034: // EGL_TRANSPARENT_TYPE\r\n        // If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3035: // EGL_TRANSPARENT_BLUE_VALUE\r\n      case 0x3036: // EGL_TRANSPARENT_GREEN_VALUE\r\n      case 0x3037: // EGL_TRANSPARENT_RED_VALUE\r\n        // \"If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined.\"\r\n        HEAP32[((value)>>2)] = -1;\r\n        return 1;\r\n      case 0x3039: // EGL_BIND_TO_TEXTURE_RGB\r\n      case 0x303A: // EGL_BIND_TO_TEXTURE_RGBA\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303B: // EGL_MIN_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303C: // EGL_MAX_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 1;\r\n        return 1;\r\n      case 0x303D: // EGL_LUMINANCE_SIZE\r\n      case 0x303E: // EGL_ALPHA_MASK_SIZE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303F: // EGL_COLOR_BUFFER_TYPE\r\n        // EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.\r\n        HEAP32[((value)>>2)] = 0x308E;\r\n        return 1;\r\n      case 0x3040: // EGL_RENDERABLE_TYPE\r\n        // A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3042: // EGL_CONFORMANT\r\n        // \"EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API.\"\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      default:\r\n        EGL.setErrorCode(0x3004 /* EGL_BAD_ATTRIBUTE */);\r\n        return 0;\r\n      }\r\n    }\r\n\r\n  function _eglGetDisplay(nativeDisplayType) {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      // Note: As a 'conformant' implementation of EGL, we would prefer to init here only if the user\r\n      //       calls this function with EGL_DEFAULT_DISPLAY. Other display IDs would be preferred to be unsupported\r\n      //       and EGL_NO_DISPLAY returned. Uncomment the following code lines to do this.\r\n      // Instead, an alternative route has been preferred, namely that the Emscripten EGL implementation\r\n      // \"emulates\" X11, and eglGetDisplay is expected to accept/receive a pointer to an X11 Display object.\r\n      // Therefore, be lax and allow anything to be passed in, and return the magic handle to our default EGLDisplay object.\r\n  \r\n  //    if (nativeDisplayType == 0 /* EGL_DEFAULT_DISPLAY */) {\r\n          return 62000; // Magic ID for Emscripten 'default display'\r\n  //    }\r\n  //    else\r\n  //      return 0; // EGL_NO_DISPLAY\r\n    }\r\n\r\n  function _eglGetError() {\r\n      return EGL.errorCode;\r\n    }\r\n\r\n  function _eglInitialize(display, majorVersion, minorVersion) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (majorVersion) {\r\n        HEAP32[((majorVersion)>>2)] = 1; // Advertise EGL Major version: '1'\r\n      }\r\n      if (minorVersion) {\r\n        HEAP32[((minorVersion)>>2)] = 4; // Advertise EGL Minor version: '4'\r\n      }\r\n      EGL.defaultDisplayInitialized = true;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  \r\n  function _eglMakeCurrent(display, draw, read, context) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0 /* EGL_FALSE */;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      if (context != 0 && context != 62004 /* Magic ID for Emscripten EGLContext */) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n      if ((read != 0 && read != 62006) || (draw != 0 && draw != 62006 /* Magic ID for Emscripten 'default surface' */)) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.makeContextCurrent(context ? EGL.context : null);\r\n  \r\n      EGL.currentContext = context;\r\n      EGL.currentDrawSurface = draw;\r\n      EGL.currentReadSurface = read;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1 /* EGL_TRUE */;\r\n    }\r\n\r\n  \r\n  function _eglQueryString(display, name) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.stringCache[name]) return EGL.stringCache[name];\r\n      var ret;\r\n      switch (name) {\r\n        case 0x3053 /* EGL_VENDOR */: ret = stringToNewUTF8(\"Emscripten\"); break;\r\n        case 0x3054 /* EGL_VERSION */: ret = stringToNewUTF8(\"1.4 Emscripten EGL\"); break;\r\n        case 0x3055 /* EGL_EXTENSIONS */:  ret = stringToNewUTF8(\"\"); break; // Currently not supporting any EGL extensions.\r\n        case 0x308D /* EGL_CLIENT_APIS */: ret = stringToNewUTF8(\"OpenGL_ES\"); break;\r\n        default:\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n      }\r\n      EGL.stringCache[name] = ret;\r\n      return ret;\r\n    }\r\n\r\n  function _eglSwapBuffers() {\r\n  \r\n      if (!EGL.defaultDisplayInitialized) {\r\n        EGL.setErrorCode(0x3001 /* EGL_NOT_INITIALIZED */);\r\n      } else if (!Module.ctx) {\r\n        EGL.setErrorCode(0x3002 /* EGL_BAD_ACCESS */);\r\n      } else if (Module.ctx.isContextLost()) {\r\n        EGL.setErrorCode(0x300E /* EGL_CONTEXT_LOST */);\r\n      } else {\r\n        // According to documentation this does an implicit flush.\r\n        // Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871\r\n        // the flush was removed since this _may_ result in slowing code down.\r\n        //_glFlush();\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1 /* EGL_TRUE */;\r\n      }\r\n      return 0 /* EGL_FALSE */;\r\n    }\r\n\r\n  \r\n  function _eglSwapInterval(display, interval) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (interval == 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 0);\r\n      else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, interval);\r\n  \r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  function _eglTerminate(display) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      EGL.currentContext = 0;\r\n      EGL.currentReadSurface = 0;\r\n      EGL.currentDrawSurface = 0;\r\n      EGL.defaultDisplayInitialized = false;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _eglWaitClient() {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n  var _eglWaitGL = _eglWaitClient;\r\n\r\n  function _eglWaitNative(nativeEngineId) {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  var readEmAsmArgsArray = [];\r\n  function readEmAsmArgs(sigPtr, buf) {\r\n      readEmAsmArgsArray.length = 0;\r\n      var ch;\r\n      // Most arguments are i32s, so shift the buffer pointer so it is a plain\r\n      // index into HEAP32.\r\n      buf >>= 2;\r\n      while (ch = HEAPU8[sigPtr++]) {\r\n        // Floats are always passed as doubles, and doubles and int64s take up 8\r\n        // bytes (two 32-bit slots) in memory, align reads to these:\r\n        buf += (ch != 105/*i*/) & buf;\r\n        readEmAsmArgsArray.push(\r\n          ch == 105/*i*/ ? HEAP32[buf] :\r\n         HEAPF64[buf++ >> 1]\r\n        );\r\n        ++buf;\r\n      }\r\n      return readEmAsmArgsArray;\r\n    }\r\n  function runEmAsmFunction(code, sigPtr, argbuf) {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    }\r\n  function _emscripten_asm_const_int(code, sigPtr, argbuf) {\r\n      return runEmAsmFunction(code, sigPtr, argbuf);\r\n    }\r\n\r\n  function runMainThreadEmAsm(code, sigPtr, argbuf, sync) {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    }\r\n  function _emscripten_asm_const_int_sync_on_main_thread(code, sigPtr, argbuf) {\r\n      return runMainThreadEmAsm(code, sigPtr, argbuf, 1);\r\n    }\r\n\r\n  function _emscripten_date_now() {\r\n      return Date.now();\r\n    }\r\n\r\n  function withStackSave(f) {\r\n      var stack = stackSave();\r\n      var ret = f();\r\n      stackRestore(stack);\r\n      return ret;\r\n    }\r\n  var JSEvents = {inEventHandler:0,removeAllEventListeners:function() {\r\n        for (var i = JSEvents.eventHandlers.length-1; i >= 0; --i) {\r\n          JSEvents._removeHandler(i);\r\n        }\r\n        JSEvents.eventHandlers = [];\r\n        JSEvents.deferredCalls = [];\r\n      },registerRemoveEventListeners:function() {\r\n        if (!JSEvents.removeEventListenersRegistered) {\r\n          __ATEXIT__.push(JSEvents.removeAllEventListeners);\r\n          JSEvents.removeEventListenersRegistered = true;\r\n        }\r\n      },deferredCalls:[],deferCall:function(targetFunction, precedence, argsList) {\r\n        function arraysHaveEqualContent(arrA, arrB) {\r\n          if (arrA.length != arrB.length) return false;\r\n  \r\n          for (var i in arrA) {\r\n            if (arrA[i] != arrB[i]) return false;\r\n          }\r\n          return true;\r\n        }\r\n        // Test if the given call was already queued, and if so, don't add it again.\r\n        for (var i in JSEvents.deferredCalls) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\r\n            return;\r\n          }\r\n        }\r\n        JSEvents.deferredCalls.push({\r\n          targetFunction: targetFunction,\r\n          precedence: precedence,\r\n          argsList: argsList\r\n        });\r\n  \r\n        JSEvents.deferredCalls.sort(function(x,y) { return x.precedence < y.precedence; });\r\n      },removeDeferredCalls:function(targetFunction) {\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\r\n            JSEvents.deferredCalls.splice(i, 1);\r\n            --i;\r\n          }\r\n        }\r\n      },canPerformEventHandlerRequests:function() {\r\n        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\r\n      },runDeferredCalls:function() {\r\n        if (!JSEvents.canPerformEventHandlerRequests()) {\r\n          return;\r\n        }\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          JSEvents.deferredCalls.splice(i, 1);\r\n          --i;\r\n          call.targetFunction.apply(null, call.argsList);\r\n        }\r\n      },eventHandlers:[],removeAllHandlersOnTarget:function(target, eventTypeString) {\r\n        for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n          if (JSEvents.eventHandlers[i].target == target && \r\n            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\r\n             JSEvents._removeHandler(i--);\r\n           }\r\n        }\r\n      },_removeHandler:function(i) {\r\n        var h = JSEvents.eventHandlers[i];\r\n        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\r\n        JSEvents.eventHandlers.splice(i, 1);\r\n      },registerOrRemoveHandler:function(eventHandler) {\r\n        var jsEventHandler = function jsEventHandler(event) {\r\n          // Increment nesting count for the event handler.\r\n          ++JSEvents.inEventHandler;\r\n          JSEvents.currentEventHandler = eventHandler;\r\n          // Process any old deferred calls the user has placed.\r\n          JSEvents.runDeferredCalls();\r\n          // Process the actual event, calls back to user C code handler.\r\n          eventHandler.handlerFunc(event);\r\n          // Process any new deferred calls that were placed right now from this event handler.\r\n          JSEvents.runDeferredCalls();\r\n          // Out of event handler - restore nesting count.\r\n          --JSEvents.inEventHandler;\r\n        };\r\n        \r\n        if (eventHandler.callbackfunc) {\r\n          eventHandler.eventListenerFunc = jsEventHandler;\r\n          eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\r\n          JSEvents.eventHandlers.push(eventHandler);\r\n          JSEvents.registerRemoveEventListeners();\r\n        } else {\r\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n            if (JSEvents.eventHandlers[i].target == eventHandler.target\r\n             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\r\n               JSEvents._removeHandler(i--);\r\n             }\r\n          }\r\n        }\r\n      },getNodeNameForTarget:function(target) {\r\n        if (!target) return '';\r\n        if (target == window) return '#window';\r\n        if (target == screen) return '#screen';\r\n        return (target && target.nodeName) ? target.nodeName : '';\r\n      },fullscreenEnabled:function() {\r\n        return document.fullscreenEnabled\r\n        // Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.\r\n        // TODO: If Safari at some point ships with unprefixed version, update the version check above.\r\n        || document.webkitFullscreenEnabled\r\n         ;\r\n      }};\r\n  \r\n  function setLetterbox(element, topBottom, leftRight) {\r\n        // Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.\r\n        element.style.paddingLeft = element.style.paddingRight = leftRight + 'px';\r\n        element.style.paddingTop = element.style.paddingBottom = topBottom + 'px';\r\n    }\r\n  \r\n  function hideEverythingExceptGivenElement(onlyVisibleElement) {\r\n      var child = onlyVisibleElement;\r\n      var parent = child.parentNode;\r\n      var hiddenElements = [];\r\n      while (child != document.body) {\r\n        var children = parent.children;\r\n        for (var i = 0; i < children.length; ++i) {\r\n          if (children[i] != child) {\r\n            hiddenElements.push({ node: children[i], displayState: children[i].style.display });\r\n            children[i].style.display = 'none';\r\n          }\r\n        }\r\n        child = parent;\r\n        parent = parent.parentNode;\r\n      }\r\n      return hiddenElements;\r\n    }\r\n  \r\n  var restoreOldWindowedStyle = null;\r\n  \r\n  \r\n  \r\n  function maybeCStringToJsString(cString) {\r\n      // \"cString > 2\" checks if the input is a number, and isn't of the special\r\n      // values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).\r\n      // In other words, if cString > 2 then it's a pointer to a valid place in\r\n      // memory, and points to a C string.\r\n      return cString > 2 ? UTF8ToString(cString) : cString;\r\n    }\r\n  \r\n  var specialHTMLTargets = [0, document, window];\r\n  function findEventTarget(target) {\r\n      target = maybeCStringToJsString(target);\r\n      var domElement = specialHTMLTargets[target] || document.querySelector(target);\r\n      return domElement;\r\n    }\r\n  function findCanvasEventTarget(target) { return findEventTarget(target); }\r\n  function _emscripten_get_canvas_element_size(target, width, height) {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      HEAP32[((width)>>2)] = canvas.width;\r\n      HEAP32[((height)>>2)] = canvas.height;\r\n    }\r\n  \r\n  \r\n  \r\n  function stringToUTF8OnStack(str) {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = stackAlloc(size);\r\n      stringToUTF8(str, ret, size);\r\n      return ret;\r\n    }\r\n  function getCanvasElementSize(target) {\r\n      return withStackSave(function() {\r\n        var w = stackAlloc(8);\r\n        var h = w + 4;\r\n  \r\n        var targetInt = stringToUTF8OnStack(target.id);\r\n        var ret = _emscripten_get_canvas_element_size(targetInt, w, h);\r\n        var size = [HEAP32[((w)>>2)], HEAP32[((h)>>2)]];\r\n        return size;\r\n      });\r\n    }\r\n  \r\n  \r\n  function _emscripten_set_canvas_element_size(target, width, height) {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      return 0;\r\n    }\r\n  \r\n  \r\n  function setCanvasElementSize(target, width, height) {\r\n      if (!target.controlTransferredOffscreen) {\r\n        target.width = width;\r\n        target.height = height;\r\n      } else {\r\n        // This function is being called from high-level JavaScript code instead of asm.js/Wasm,\r\n        // and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.\r\n        withStackSave(function() {\r\n          var targetInt = stringToUTF8OnStack(target.id);\r\n          _emscripten_set_canvas_element_size(targetInt, width, height);\r\n        });\r\n      }\r\n    }\r\n  function registerRestoreOldStyle(canvas) {\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var oldWidth = canvasSize[0];\r\n      var oldHeight = canvasSize[1];\r\n      var oldCssWidth = canvas.style.width;\r\n      var oldCssHeight = canvas.style.height;\r\n      var oldBackgroundColor = canvas.style.backgroundColor; // Chrome reads color from here.\r\n      var oldDocumentBackgroundColor = document.body.style.backgroundColor; // IE11 reads color from here.\r\n      // Firefox always has black background color.\r\n      var oldPaddingLeft = canvas.style.paddingLeft; // Chrome, FF, Safari\r\n      var oldPaddingRight = canvas.style.paddingRight;\r\n      var oldPaddingTop = canvas.style.paddingTop;\r\n      var oldPaddingBottom = canvas.style.paddingBottom;\r\n      var oldMarginLeft = canvas.style.marginLeft; // IE11\r\n      var oldMarginRight = canvas.style.marginRight;\r\n      var oldMarginTop = canvas.style.marginTop;\r\n      var oldMarginBottom = canvas.style.marginBottom;\r\n      var oldDocumentBodyMargin = document.body.style.margin;\r\n      var oldDocumentOverflow = document.documentElement.style.overflow; // Chrome, Firefox\r\n      var oldDocumentScroll = document.body.scroll; // IE\r\n      var oldImageRendering = canvas.style.imageRendering;\r\n  \r\n      function restoreOldStyle() {\r\n        var fullscreenElement = document.fullscreenElement\r\n          || document.webkitFullscreenElement\r\n          ;\r\n        if (!fullscreenElement) {\r\n          document.removeEventListener('fullscreenchange', restoreOldStyle);\r\n  \r\n          // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n          // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n          document.removeEventListener('webkitfullscreenchange', restoreOldStyle);\r\n  \r\n          setCanvasElementSize(canvas, oldWidth, oldHeight);\r\n  \r\n          canvas.style.width = oldCssWidth;\r\n          canvas.style.height = oldCssHeight;\r\n          canvas.style.backgroundColor = oldBackgroundColor; // Chrome\r\n          // IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color\r\n          // before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user\r\n          // had explicitly set so subsequent fullscreen transitions would not set background color properly.\r\n          if (!oldDocumentBackgroundColor) document.body.style.backgroundColor = 'white';\r\n          document.body.style.backgroundColor = oldDocumentBackgroundColor; // IE11\r\n          canvas.style.paddingLeft = oldPaddingLeft; // Chrome, FF, Safari\r\n          canvas.style.paddingRight = oldPaddingRight;\r\n          canvas.style.paddingTop = oldPaddingTop;\r\n          canvas.style.paddingBottom = oldPaddingBottom;\r\n          canvas.style.marginLeft = oldMarginLeft; // IE11\r\n          canvas.style.marginRight = oldMarginRight;\r\n          canvas.style.marginTop = oldMarginTop;\r\n          canvas.style.marginBottom = oldMarginBottom;\r\n          document.body.style.margin = oldDocumentBodyMargin;\r\n          document.documentElement.style.overflow = oldDocumentOverflow; // Chrome, Firefox\r\n          document.body.scroll = oldDocumentScroll; // IE\r\n          canvas.style.imageRendering = oldImageRendering;\r\n          if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, oldWidth, oldHeight);\r\n  \r\n          if (currentFullscreenStrategy.canvasResizedCallback) {\r\n            ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n          }\r\n        }\r\n      }\r\n      document.addEventListener('fullscreenchange', restoreOldStyle);\r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      document.addEventListener('webkitfullscreenchange', restoreOldStyle);\r\n      return restoreOldStyle;\r\n    }\r\n  \r\n  function restoreHiddenElements(hiddenElements) {\r\n      for (var i = 0; i < hiddenElements.length; ++i) {\r\n        hiddenElements[i].node.style.display = hiddenElements[i].displayState;\r\n      }\r\n    }\r\n  \r\n  var currentFullscreenStrategy = {};\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  /** @suppress {checkTypes} */\r\n  function jstoi_q(str) {\r\n      return parseInt(str);\r\n    }\r\n  function softFullscreenResizeWebGLRenderTarget() {\r\n      var dpr = devicePixelRatio;\r\n      var inHiDPIFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode == 2;\r\n      var inAspectRatioFixedFullscreenMode = currentFullscreenStrategy.scaleMode == 2;\r\n      var inPixelPerfectFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode != 0;\r\n      var inCenteredWithoutScalingFullscreenMode = currentFullscreenStrategy.scaleMode == 3;\r\n      var screenWidth = inHiDPIFullscreenMode ? Math.round(innerWidth*dpr) : innerWidth;\r\n      var screenHeight = inHiDPIFullscreenMode ? Math.round(innerHeight*dpr) : innerHeight;\r\n      var w = screenWidth;\r\n      var h = screenHeight;\r\n      var canvas = currentFullscreenStrategy.target;\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var x = canvasSize[0];\r\n      var y = canvasSize[1];\r\n      var topMargin;\r\n  \r\n      if (inAspectRatioFixedFullscreenMode) {\r\n        if (w*y < x*h) h = (w * y / x) | 0;\r\n        else if (w*y > x*h) w = (h * x / y) | 0;\r\n        topMargin = ((screenHeight - h) / 2) | 0;\r\n      }\r\n  \r\n      if (inPixelPerfectFullscreenMode) {\r\n        setCanvasElementSize(canvas, w, h);\r\n        if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, w, h);\r\n      }\r\n  \r\n      // Back to CSS pixels.\r\n      if (inHiDPIFullscreenMode) {\r\n        topMargin /= dpr;\r\n        w /= dpr;\r\n        h /= dpr;\r\n        // Round to nearest 4 digits of precision.\r\n        w = Math.round(w*1e4)/1e4;\r\n        h = Math.round(h*1e4)/1e4;\r\n        topMargin = Math.round(topMargin*1e4)/1e4;\r\n      }\r\n  \r\n      if (inCenteredWithoutScalingFullscreenMode) {\r\n        var t = (innerHeight - jstoi_q(canvas.style.height)) / 2;\r\n        var b = (innerWidth - jstoi_q(canvas.style.width)) / 2;\r\n        setLetterbox(canvas, t, b);\r\n      } else {\r\n        canvas.style.width = w + 'px';\r\n        canvas.style.height = h + 'px';\r\n        var b = (innerWidth - w) / 2;\r\n        setLetterbox(canvas, topMargin, b);\r\n      }\r\n  \r\n      if (!inCenteredWithoutScalingFullscreenMode && currentFullscreenStrategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n      }\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  function getBoundingClientRect(e) {\r\n      return specialHTMLTargets.indexOf(e) < 0 ? e.getBoundingClientRect() : {'left':0,'top':0};\r\n    }\r\n  function JSEvents_resizeCanvasForFullscreen(target, strategy) {\r\n      var restoreOldStyle = registerRestoreOldStyle(target);\r\n      var cssWidth = strategy.softFullscreen ? innerWidth : screen.width;\r\n      var cssHeight = strategy.softFullscreen ? innerHeight : screen.height;\r\n      var rect = getBoundingClientRect(target);\r\n      var windowedCssWidth = rect.width;\r\n      var windowedCssHeight = rect.height;\r\n      var canvasSize = getCanvasElementSize(target);\r\n      var windowedRttWidth = canvasSize[0];\r\n      var windowedRttHeight = canvasSize[1];\r\n  \r\n      if (strategy.scaleMode == 3) {\r\n        setLetterbox(target, (cssHeight - windowedCssHeight) / 2, (cssWidth - windowedCssWidth) / 2);\r\n        cssWidth = windowedCssWidth;\r\n        cssHeight = windowedCssHeight;\r\n      } else if (strategy.scaleMode == 2) {\r\n        if (cssWidth*windowedRttHeight < windowedRttWidth*cssHeight) {\r\n          var desiredCssHeight = windowedRttHeight * cssWidth / windowedRttWidth;\r\n          setLetterbox(target, (cssHeight - desiredCssHeight) / 2, 0);\r\n          cssHeight = desiredCssHeight;\r\n        } else {\r\n          var desiredCssWidth = windowedRttWidth * cssHeight / windowedRttHeight;\r\n          setLetterbox(target, 0, (cssWidth - desiredCssWidth) / 2);\r\n          cssWidth = desiredCssWidth;\r\n        }\r\n      }\r\n  \r\n      // If we are adding padding, must choose a background color or otherwise Chrome will give the\r\n      // padding a default white color. Do it only if user has not customized their own background color.\r\n      if (!target.style.backgroundColor) target.style.backgroundColor = 'black';\r\n      // IE11 does the same, but requires the color to be set in the document body.\r\n      if (!document.body.style.backgroundColor) document.body.style.backgroundColor = 'black'; // IE11\r\n      // Firefox always shows black letterboxes independent of style color.\r\n  \r\n      target.style.width = cssWidth + 'px';\r\n      target.style.height = cssHeight + 'px';\r\n  \r\n      if (strategy.filteringMode == 1) {\r\n        target.style.imageRendering = 'optimizeSpeed';\r\n        target.style.imageRendering = '-moz-crisp-edges';\r\n        target.style.imageRendering = '-o-crisp-edges';\r\n        target.style.imageRendering = '-webkit-optimize-contrast';\r\n        target.style.imageRendering = 'optimize-contrast';\r\n        target.style.imageRendering = 'crisp-edges';\r\n        target.style.imageRendering = 'pixelated';\r\n      }\r\n  \r\n      var dpiScale = (strategy.canvasResolutionScaleMode == 2) ? devicePixelRatio : 1;\r\n      if (strategy.canvasResolutionScaleMode != 0) {\r\n        var newWidth = (cssWidth * dpiScale)|0;\r\n        var newHeight = (cssHeight * dpiScale)|0;\r\n        setCanvasElementSize(target, newWidth, newHeight);\r\n        if (target.GLctxObject) target.GLctxObject.GLctx.viewport(0, 0, newWidth, newHeight);\r\n      }\r\n      return restoreOldStyle;\r\n    }\r\n  \r\n  function _emscripten_enter_soft_fullscreen(target, fullscreenStrategy) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var strategy = {\r\n          scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n          canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n          filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n          canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n          canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)],\r\n          target: target,\r\n          softFullscreen: true\r\n      };\r\n  \r\n      var restoreOldStyle = JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n  \r\n      document.documentElement.style.overflow = 'hidden';  // Firefox, Chrome\r\n      document.body.scroll = \"no\"; // IE11\r\n      document.body.style.margin = '0px'; // Override default document margin area on all browsers.\r\n  \r\n      var hiddenElements = hideEverythingExceptGivenElement(target);\r\n  \r\n      function restoreWindowedState() {\r\n        restoreOldStyle();\r\n        restoreHiddenElements(hiddenElements);\r\n        removeEventListener('resize', softFullscreenResizeWebGLRenderTarget);\r\n        if (strategy.canvasResizedCallback) {\r\n          ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n        }\r\n        currentFullscreenStrategy = 0;\r\n      }\r\n      restoreOldWindowedStyle = restoreWindowedState;\r\n      currentFullscreenStrategy = strategy;\r\n      addEventListener('resize', softFullscreenResizeWebGLRenderTarget);\r\n  \r\n      // Inform the caller that the canvas size has changed.\r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function JSEvents_requestFullscreen(target, strategy) {\r\n      // EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.\r\n      if (strategy.scaleMode != 0 || strategy.canvasResolutionScaleMode != 0) {\r\n        JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n      }\r\n  \r\n      if (target.requestFullscreen) {\r\n        target.requestFullscreen();\r\n      } else if (target.webkitRequestFullscreen) {\r\n        target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n      } else {\r\n        return JSEvents.fullscreenEnabled() ? -3 : -1;\r\n      }\r\n  \r\n      currentFullscreenStrategy = strategy;\r\n  \r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n  \r\n  function _emscripten_exit_fullscreen() {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);\r\n  \r\n      var d = specialHTMLTargets[1];\r\n      if (d.exitFullscreen) {\r\n        d.fullscreenElement && d.exitFullscreen();\r\n      } else if (d.webkitExitFullscreen) {\r\n        d.webkitFullscreenElement && d.webkitExitFullscreen();\r\n      } else {\r\n        return -1;\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  function requestPointerLock(target) {\r\n      if (target.requestPointerLock) {\r\n        target.requestPointerLock();\r\n      } else {\r\n        // document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,\r\n        // or if the whole browser just doesn't support the feature.\r\n        if (document.body.requestPointerLock\r\n          ) {\r\n          return -3;\r\n        }\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n  function _emscripten_exit_pointerlock() {\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(requestPointerLock);\r\n  \r\n      if (document.exitPointerLock) {\r\n        document.exitPointerLock();\r\n      } else {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_exit_soft_fullscreen() {\r\n      if (restoreOldWindowedStyle) restoreOldWindowedStyle();\r\n      restoreOldWindowedStyle = null;\r\n  \r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_get_device_pixel_ratio() {\r\n      return devicePixelRatio;\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_get_element_css_size(target, width, height) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAPF64[((width)>>3)] = rect.width;\r\n      HEAPF64[((height)>>3)] = rect.height;\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  function fillGamepadEventData(eventStruct, e) {\r\n      HEAPF64[((eventStruct)>>3)] = e.timestamp;\r\n      for (var i = 0; i < e.axes.length; ++i) {\r\n        HEAPF64[(((eventStruct+i*8)+(16))>>3)] = e.axes[i];\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i].value;\r\n        } else {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i];\r\n        }\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i].pressed;\r\n        } else {\r\n          // Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:\r\n          /** @suppress {checkTypes} */\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i] == 1;\r\n        }\r\n      }\r\n      HEAP32[(((eventStruct)+(1296))>>2)] = e.connected;\r\n      HEAP32[(((eventStruct)+(1300))>>2)] = e.index;\r\n      HEAP32[(((eventStruct)+(8))>>2)] = e.axes.length;\r\n      HEAP32[(((eventStruct)+(12))>>2)] = e.buttons.length;\r\n      stringToUTF8(e.id, eventStruct + 1304, 64);\r\n      stringToUTF8(e.mapping, eventStruct + 1368, 64);\r\n    }\r\n  function _emscripten_get_gamepad_status(index, gamepadState) {\r\n  \r\n      // INVALID_PARAM is returned on a Gamepad index that never was there.\r\n      if (index < 0 || index >= JSEvents.lastGamepadState.length) return -5;\r\n  \r\n      // NO_DATA is returned on a Gamepad index that was removed.\r\n      // For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.\r\n      // This is because gamepads must keep their original position in the array.\r\n      // For example, removing the first of two gamepads produces [null/undefined/false, gamepad].\r\n      if (!JSEvents.lastGamepadState[index]) return -7;\r\n  \r\n      fillGamepadEventData(gamepadState, JSEvents.lastGamepadState[index]);\r\n      return 0;\r\n    }\r\n\r\n\r\n  function _emscripten_get_num_gamepads() {\r\n      // N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.\r\n      // Otherwise the following line will throw an exception.\r\n      return JSEvents.lastGamepadState.length;\r\n    }\r\n\r\n  function _emscripten_get_screen_size(width, height) {\r\n      HEAP32[((width)>>2)] = screen.width;\r\n      HEAP32[((height)>>2)] = screen.height;\r\n    }\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }\r\n  var _emscripten_glActiveTexture = _glActiveTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glAttachShader(program, shader) {\r\n      GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glAttachShader = _glAttachShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginQuery(target, id) {\r\n      GLctx.beginQuery(target, GL.queries[id]);\r\n    }\r\n  var _emscripten_glBeginQuery = _glBeginQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginQueryEXT(target, id) {\r\n      GLctx.disjointTimerQueryExt['beginQueryEXT'](target, GL.queries[id]);\r\n    }\r\n  var _emscripten_glBeginQueryEXT = _glBeginQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginTransformFeedback(x0) { GLctx.beginTransformFeedback(x0) }\r\n  var _emscripten_glBeginTransformFeedback = _glBeginTransformFeedback;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glBindAttribLocation(program, index, name) {\r\n      GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\r\n    }\r\n  var _emscripten_glBindAttribLocation = _glBindAttribLocation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBuffer(target, buffer) {\r\n      if (target == 0x8892 /*GL_ARRAY_BUFFER*/) {\r\n        GLctx.currentArrayBufferBinding = buffer;\r\n      } else if (target == 0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/) {\r\n        GLctx.currentElementArrayBufferBinding = buffer;\r\n      }\r\n  \r\n      if (target == 0x88EB /*GL_PIXEL_PACK_BUFFER*/) {\r\n        // In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that binding point is non-null to know what is\r\n        // the proper API function to call.\r\n        GLctx.currentPixelPackBufferBinding = buffer;\r\n      } else if (target == 0x88EC /*GL_PIXEL_UNPACK_BUFFER*/) {\r\n        // In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to\r\n        // use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that\r\n        // binding point is non-null to know what is the proper API function to\r\n        // call.\r\n        GLctx.currentPixelUnpackBufferBinding = buffer;\r\n      }\r\n      GLctx.bindBuffer(target, GL.buffers[buffer]);\r\n    }\r\n  var _emscripten_glBindBuffer = _glBindBuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBufferBase(target, index, buffer) {\r\n      GLctx.bindBufferBase(target, index, GL.buffers[buffer]);\r\n    }\r\n  var _emscripten_glBindBufferBase = _glBindBufferBase;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBufferRange(target, index, buffer, offset, ptrsize) {\r\n      GLctx.bindBufferRange(target, index, GL.buffers[buffer], offset, ptrsize);\r\n    }\r\n  var _emscripten_glBindBufferRange = _glBindBufferRange;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindFramebuffer(target, framebuffer) {\r\n  \r\n      GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\r\n  \r\n    }\r\n  var _emscripten_glBindFramebuffer = _glBindFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindRenderbuffer(target, renderbuffer) {\r\n      GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\r\n    }\r\n  var _emscripten_glBindRenderbuffer = _glBindRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindSampler(unit, sampler) {\r\n      GLctx.bindSampler(unit, GL.samplers[sampler]);\r\n    }\r\n  var _emscripten_glBindSampler = _glBindSampler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindTexture(target, texture) {\r\n      GLctx.bindTexture(target, GL.textures[texture]);\r\n    }\r\n  var _emscripten_glBindTexture = _glBindTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindTransformFeedback(target, id) {\r\n      GLctx.bindTransformFeedback(target, GL.transformFeedbacks[id]);\r\n    }\r\n  var _emscripten_glBindTransformFeedback = _glBindTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindVertexArray(vao) {\r\n      GLctx.bindVertexArray(GL.vaos[vao]);\r\n      var ibo = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n      GLctx.currentElementArrayBufferBinding = ibo ? (ibo.name | 0) : 0;\r\n    }\r\n  var _emscripten_glBindVertexArray = _glBindVertexArray;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glBindVertexArrayOES = _glBindVertexArray;\r\n  var _emscripten_glBindVertexArrayOES = _glBindVertexArrayOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendColor(x0, x1, x2, x3) { GLctx.blendColor(x0, x1, x2, x3) }\r\n  var _emscripten_glBlendColor = _glBlendColor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendEquation(x0) { GLctx.blendEquation(x0) }\r\n  var _emscripten_glBlendEquation = _glBlendEquation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendEquationSeparate(x0, x1) { GLctx.blendEquationSeparate(x0, x1) }\r\n  var _emscripten_glBlendEquationSeparate = _glBlendEquationSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }\r\n  var _emscripten_glBlendFunc = _glBlendFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendFuncSeparate(x0, x1, x2, x3) { GLctx.blendFuncSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glBlendFuncSeparate = _glBlendFuncSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) { GLctx.blitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) }\r\n  var _emscripten_glBlitFramebuffer = _glBlitFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBufferData(target, size, data, usage) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        // If size is zero, WebGL would interpret uploading the whole input arraybuffer (starting from given offset), which would\r\n        // not make sense in WebAssembly, so avoid uploading if size is zero. However we must still call bufferData to establish a\r\n        // backing storage of zero bytes.\r\n        if (data && size) {\r\n          GLctx.bufferData(target, HEAPU8, usage, data, size);\r\n        } else {\r\n          GLctx.bufferData(target, size, usage);\r\n        }\r\n      } else {\r\n        // N.b. here first form specifies a heap subarray, second form an integer size, so the ?: code here is polymorphic. It is advised to avoid\r\n        // randomly mixing both uses in calling code, to avoid any potential JS engine JIT issues.\r\n        GLctx.bufferData(target, data ? HEAPU8.subarray(data, data+size) : size, usage);\r\n      }\r\n    }\r\n  var _emscripten_glBufferData = _glBufferData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBufferSubData(target, offset, size, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        size && GLctx.bufferSubData(target, offset, HEAPU8, data, size);\r\n        return;\r\n      }\r\n      GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));\r\n    }\r\n  var _emscripten_glBufferSubData = _glBufferSubData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCheckFramebufferStatus(x0) { return GLctx.checkFramebufferStatus(x0) }\r\n  var _emscripten_glCheckFramebufferStatus = _glCheckFramebufferStatus;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClear(x0) { GLctx.clear(x0) }\r\n  var _emscripten_glClear = _glClear;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferfi(x0, x1, x2, x3) { GLctx.clearBufferfi(x0, x1, x2, x3) }\r\n  var _emscripten_glClearBufferfi = _glClearBufferfi;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferfv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferfv(buffer, drawbuffer, HEAPF32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferfv = _glClearBufferfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferiv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferiv(buffer, drawbuffer, HEAP32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferiv = _glClearBufferiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferuiv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferuiv(buffer, drawbuffer, HEAPU32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferuiv = _glClearBufferuiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }\r\n  var _emscripten_glClearColor = _glClearColor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearDepthf(x0) { GLctx.clearDepth(x0) }\r\n  var _emscripten_glClearDepthf = _glClearDepthf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearStencil(x0) { GLctx.clearStencil(x0) }\r\n  var _emscripten_glClearStencil = _glClearStencil;\r\n\r\n  function convertI32PairToI53(lo, hi) {\r\n      return (lo >>> 0) + hi * 4294967296;\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glClientWaitSync(sync, flags, timeout_low, timeout_high) {\r\n      // WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.\r\n      // In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.\r\n      // Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)\r\n      // See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      return GLctx.clientWaitSync(GL.syncs[sync], flags, timeout);\r\n    }\r\n  var _emscripten_glClientWaitSync = _glClientWaitSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glColorMask(red, green, blue, alpha) {\r\n      GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\r\n    }\r\n  var _emscripten_glColorMask = _glColorMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompileShader(shader) {\r\n      GLctx.compileShader(GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glCompileShader = _glCompileShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data);\r\n        } else {\r\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    }\r\n  var _emscripten_glCompressedTexImage2D = _glCompressedTexImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data);\r\n      } else {\r\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, HEAPU8, data, imageSize);\r\n      }\r\n    }\r\n  var _emscripten_glCompressedTexImage3D = _glCompressedTexImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\r\n        } else {\r\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    }\r\n  var _emscripten_glCompressedTexSubImage2D = _glCompressedTexSubImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\r\n      } else {\r\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, HEAPU8, data, imageSize);\r\n      }\r\n    }\r\n  var _emscripten_glCompressedTexSubImage3D = _glCompressedTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyBufferSubData(x0, x1, x2, x3, x4) { GLctx.copyBufferSubData(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glCopyBufferSubData = _glCopyBufferSubData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\r\n  var _emscripten_glCopyTexImage2D = _glCopyTexImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\r\n  var _emscripten_glCopyTexSubImage2D = _glCopyTexSubImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) { GLctx.copyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) }\r\n  var _emscripten_glCopyTexSubImage3D = _glCopyTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCreateProgram() {\r\n      var id = GL.getNewId(GL.programs);\r\n      var program = GLctx.createProgram();\r\n      // Store additional information needed for each shader program:\r\n      program.name = id;\r\n      // Lazy cache results of glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)\r\n      program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\r\n      program.uniformIdCounter = 1;\r\n      GL.programs[id] = program;\r\n      return id;\r\n    }\r\n  var _emscripten_glCreateProgram = _glCreateProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCreateShader(shaderType) {\r\n      var id = GL.getNewId(GL.shaders);\r\n      GL.shaders[id] = GLctx.createShader(shaderType);\r\n  \r\n      return id;\r\n    }\r\n  var _emscripten_glCreateShader = _glCreateShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCullFace(x0) { GLctx.cullFace(x0) }\r\n  var _emscripten_glCullFace = _glCullFace;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteBuffers(n, buffers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((buffers)+(i*4))>>2)];\r\n        var buffer = GL.buffers[id];\r\n  \r\n        // From spec: \"glDeleteBuffers silently ignores 0's and names that do not\r\n        // correspond to existing buffer objects.\"\r\n        if (!buffer) continue;\r\n  \r\n        GLctx.deleteBuffer(buffer);\r\n        buffer.name = 0;\r\n        GL.buffers[id] = null;\r\n  \r\n        if (id == GLctx.currentArrayBufferBinding) GLctx.currentArrayBufferBinding = 0;\r\n        if (id == GLctx.currentElementArrayBufferBinding) GLctx.currentElementArrayBufferBinding = 0;\r\n        if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\r\n        if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteBuffers = _glDeleteBuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteFramebuffers(n, framebuffers) {\r\n      for (var i = 0; i < n; ++i) {\r\n        var id = HEAP32[(((framebuffers)+(i*4))>>2)];\r\n        var framebuffer = GL.framebuffers[id];\r\n        if (!framebuffer) continue; // GL spec: \"glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects\".\r\n        GLctx.deleteFramebuffer(framebuffer);\r\n        framebuffer.name = 0;\r\n        GL.framebuffers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteFramebuffers = _glDeleteFramebuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteProgram(id) {\r\n      if (!id) return;\r\n      var program = GL.programs[id];\r\n      if (!program) { // glDeleteProgram actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteProgram(program);\r\n      program.name = 0;\r\n      GL.programs[id] = null;\r\n    }\r\n  var _emscripten_glDeleteProgram = _glDeleteProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteQueries(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.deleteQuery(query);\r\n        GL.queries[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteQueries = _glDeleteQueries;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteQueriesEXT(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);\r\n        GL.queries[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteQueriesEXT = _glDeleteQueriesEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteRenderbuffers(n, renderbuffers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];\r\n        var renderbuffer = GL.renderbuffers[id];\r\n        if (!renderbuffer) continue; // GL spec: \"glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects\".\r\n        GLctx.deleteRenderbuffer(renderbuffer);\r\n        renderbuffer.name = 0;\r\n        GL.renderbuffers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteRenderbuffers = _glDeleteRenderbuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteSamplers(n, samplers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((samplers)+(i*4))>>2)];\r\n        var sampler = GL.samplers[id];\r\n        if (!sampler) continue;\r\n        GLctx.deleteSampler(sampler);\r\n        sampler.name = 0;\r\n        GL.samplers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteSamplers = _glDeleteSamplers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteShader(id) {\r\n      if (!id) return;\r\n      var shader = GL.shaders[id];\r\n      if (!shader) { // glDeleteShader actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteShader(shader);\r\n      GL.shaders[id] = null;\r\n    }\r\n  var _emscripten_glDeleteShader = _glDeleteShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteSync(id) {\r\n      if (!id) return;\r\n      var sync = GL.syncs[id];\r\n      if (!sync) { // glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteSync(sync);\r\n      sync.name = 0;\r\n      GL.syncs[id] = null;\r\n    }\r\n  var _emscripten_glDeleteSync = _glDeleteSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteTextures(n, textures) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((textures)+(i*4))>>2)];\r\n        var texture = GL.textures[id];\r\n        if (!texture) continue; // GL spec: \"glDeleteTextures silently ignores 0s and names that do not correspond to existing textures\".\r\n        GLctx.deleteTexture(texture);\r\n        texture.name = 0;\r\n        GL.textures[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteTextures = _glDeleteTextures;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteTransformFeedbacks(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var transformFeedback = GL.transformFeedbacks[id];\r\n        if (!transformFeedback) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.deleteTransformFeedback(transformFeedback);\r\n        transformFeedback.name = 0;\r\n        GL.transformFeedbacks[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteTransformFeedbacks = _glDeleteTransformFeedbacks;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteVertexArrays(n, vaos) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\r\n        GLctx.deleteVertexArray(GL.vaos[id]);\r\n        GL.vaos[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteVertexArrays = _glDeleteVertexArrays;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDeleteVertexArraysOES = _glDeleteVertexArrays;\r\n  var _emscripten_glDeleteVertexArraysOES = _glDeleteVertexArraysOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthFunc(x0) { GLctx.depthFunc(x0) }\r\n  var _emscripten_glDepthFunc = _glDepthFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthMask(flag) {\r\n      GLctx.depthMask(!!flag);\r\n    }\r\n  var _emscripten_glDepthMask = _glDepthMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthRangef(x0, x1) { GLctx.depthRange(x0, x1) }\r\n  var _emscripten_glDepthRangef = _glDepthRangef;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDetachShader(program, shader) {\r\n      GLctx.detachShader(GL.programs[program], GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glDetachShader = _glDetachShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDisable(x0) { GLctx.disable(x0) }\r\n  var _emscripten_glDisable = _glDisable;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDisableVertexAttribArray(index) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = false;\r\n      GLctx.disableVertexAttribArray(index);\r\n    }\r\n  var _emscripten_glDisableVertexAttribArray = _glDisableVertexAttribArray;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawArrays(mode, first, count) {\r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(first + count);\r\n  \r\n      GLctx.drawArrays(mode, first, count);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings();\r\n    }\r\n  var _emscripten_glDrawArrays = _glDrawArrays;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawArraysInstanced(mode, first, count, primcount) {\r\n      GLctx.drawArraysInstanced(mode, first, count, primcount);\r\n    }\r\n  var _emscripten_glDrawArraysInstanced = _glDrawArraysInstanced;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedANGLE = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedANGLE = _glDrawArraysInstancedANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedARB = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedARB = _glDrawArraysInstancedARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedEXT = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedEXT = _glDrawArraysInstancedEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedNV = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedNV = _glDrawArraysInstancedNV;\r\n\r\n  var tempFixedLengthArray = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glDrawBuffers(n, bufs) {\r\n  \r\n      var bufArray = tempFixedLengthArray[n];\r\n      for (var i = 0; i < n; i++) {\r\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.drawBuffers(bufArray);\r\n    }\r\n  var _emscripten_glDrawBuffers = _glDrawBuffers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffersEXT = _glDrawBuffers;\r\n  var _emscripten_glDrawBuffersEXT = _glDrawBuffersEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffersWEBGL = _glDrawBuffers;\r\n  var _emscripten_glDrawBuffersWEBGL = _glDrawBuffersWEBGL;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawElements(mode, count, type, indices) {\r\n      var buf;\r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        var size = GL.calcBufLength(1, type, 0, count);\r\n        buf = GL.getTempIndexBuffer(size);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, buf);\r\n        GLctx.bufferSubData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/,\r\n                                 0,\r\n                                 HEAPU8.subarray(indices, indices + size));\r\n        // the index is now 0\r\n        indices = 0;\r\n      }\r\n  \r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      GLctx.drawElements(mode, count, type, indices);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n      }\r\n    }\r\n  var _emscripten_glDrawElements = _glDrawElements;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawElementsInstanced(mode, count, type, indices, primcount) {\r\n      GLctx.drawElementsInstanced(mode, count, type, indices, primcount);\r\n    }\r\n  var _emscripten_glDrawElementsInstanced = _glDrawElementsInstanced;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedANGLE = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedANGLE = _glDrawElementsInstancedANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedARB = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedARB = _glDrawElementsInstancedARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedEXT = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedEXT = _glDrawElementsInstancedEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedNV = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedNV = _glDrawElementsInstancedNV;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawRangeElements(mode, start, end, count, type, indices) {\r\n      // TODO: This should be a trivial pass-though function registered at the bottom of this page as\r\n      // glFuncs[6][1] += ' drawRangeElements';\r\n      // but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,\r\n      // we work around by ignoring the range.\r\n      _glDrawElements(mode, count, type, indices);\r\n    }\r\n  var _emscripten_glDrawRangeElements = _glDrawRangeElements;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEnable(x0) { GLctx.enable(x0) }\r\n  var _emscripten_glEnable = _glEnable;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEnableVertexAttribArray(index) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = true;\r\n      GLctx.enableVertexAttribArray(index);\r\n    }\r\n  var _emscripten_glEnableVertexAttribArray = _glEnableVertexAttribArray;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndQuery(x0) { GLctx.endQuery(x0) }\r\n  var _emscripten_glEndQuery = _glEndQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndQueryEXT(target) {\r\n      GLctx.disjointTimerQueryExt['endQueryEXT'](target);\r\n    }\r\n  var _emscripten_glEndQueryEXT = _glEndQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndTransformFeedback() { GLctx.endTransformFeedback() }\r\n  var _emscripten_glEndTransformFeedback = _glEndTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFenceSync(condition, flags) {\r\n      var sync = GLctx.fenceSync(condition, flags);\r\n      if (sync) {\r\n        var id = GL.getNewId(GL.syncs);\r\n        sync.name = id;\r\n        GL.syncs[id] = sync;\r\n        return id;\r\n      }\r\n      return 0; // Failed to create a sync object\r\n    }\r\n  var _emscripten_glFenceSync = _glFenceSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFinish() { GLctx.finish() }\r\n  var _emscripten_glFinish = _glFinish;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFlush() { GLctx.flush() }\r\n  var _emscripten_glFlush = _glFlush;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer) {\r\n      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,\r\n                                         GL.renderbuffers[renderbuffer]);\r\n    }\r\n  var _emscripten_glFramebufferRenderbuffer = _glFramebufferRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferTexture2D(target, attachment, textarget, texture, level) {\r\n      GLctx.framebufferTexture2D(target, attachment, textarget,\r\n                                      GL.textures[texture], level);\r\n    }\r\n  var _emscripten_glFramebufferTexture2D = _glFramebufferTexture2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferTextureLayer(target, attachment, texture, level, layer) {\r\n      GLctx.framebufferTextureLayer(target, attachment, GL.textures[texture], level, layer);\r\n    }\r\n  var _emscripten_glFramebufferTextureLayer = _glFramebufferTextureLayer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFrontFace(x0) { GLctx.frontFace(x0) }\r\n  var _emscripten_glFrontFace = _glFrontFace;\r\n\r\n  function __glGenObject(n, buffers, createFunction, objectTable\r\n      ) {\r\n      for (var i = 0; i < n; i++) {\r\n        var buffer = GLctx[createFunction]();\r\n        var id = buffer && GL.getNewId(objectTable);\r\n        if (buffer) {\r\n          buffer.name = id;\r\n          objectTable[id] = buffer;\r\n        } else {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n        }\r\n        HEAP32[(((buffers)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenBuffers(n, buffers) {\r\n      __glGenObject(n, buffers, 'createBuffer', GL.buffers\r\n        );\r\n    }\r\n  var _emscripten_glGenBuffers = _glGenBuffers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenFramebuffers(n, ids) {\r\n      __glGenObject(n, ids, 'createFramebuffer', GL.framebuffers\r\n        );\r\n    }\r\n  var _emscripten_glGenFramebuffers = _glGenFramebuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenQueries(n, ids) {\r\n      __glGenObject(n, ids, 'createQuery', GL.queries\r\n        );\r\n    }\r\n  var _emscripten_glGenQueries = _glGenQueries;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenQueriesEXT(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var query = GLctx.disjointTimerQueryExt['createQueryEXT']();\r\n        if (!query) {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n          while (i < n) HEAP32[(((ids)+(i++*4))>>2)] = 0;\r\n          return;\r\n        }\r\n        var id = GL.getNewId(GL.queries);\r\n        query.name = id;\r\n        GL.queries[id] = query;\r\n        HEAP32[(((ids)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  var _emscripten_glGenQueriesEXT = _glGenQueriesEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenRenderbuffers(n, renderbuffers) {\r\n      __glGenObject(n, renderbuffers, 'createRenderbuffer', GL.renderbuffers\r\n        );\r\n    }\r\n  var _emscripten_glGenRenderbuffers = _glGenRenderbuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenSamplers(n, samplers) {\r\n      __glGenObject(n, samplers, 'createSampler', GL.samplers\r\n        );\r\n    }\r\n  var _emscripten_glGenSamplers = _glGenSamplers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenTextures(n, textures) {\r\n      __glGenObject(n, textures, 'createTexture', GL.textures\r\n        );\r\n    }\r\n  var _emscripten_glGenTextures = _glGenTextures;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenTransformFeedbacks(n, ids) {\r\n      __glGenObject(n, ids, 'createTransformFeedback', GL.transformFeedbacks\r\n        );\r\n    }\r\n  var _emscripten_glGenTransformFeedbacks = _glGenTransformFeedbacks;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenVertexArrays(n, arrays) {\r\n      __glGenObject(n, arrays, 'createVertexArray', GL.vaos\r\n        );\r\n    }\r\n  var _emscripten_glGenVertexArrays = _glGenVertexArrays;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGenVertexArraysOES = _glGenVertexArrays;\r\n  var _emscripten_glGenVertexArraysOES = _glGenVertexArraysOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenerateMipmap(x0) { GLctx.generateMipmap(x0) }\r\n  var _emscripten_glGenerateMipmap = _glGenerateMipmap;\r\n\r\n  \r\n  function __glGetActiveAttribOrUniform(funcName, program, index, bufSize, length, size, type, name) {\r\n      program = GL.programs[program];\r\n      var info = GLctx[funcName](program, index);\r\n      if (info) { // If an error occurs, nothing will be written to length, size and type and name.\r\n        var numBytesWrittenExclNull = name && stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n        if (size) HEAP32[((size)>>2)] = info.size;\r\n        if (type) HEAP32[((type)>>2)] = info.type;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveAttrib(program, index, bufSize, length, size, type, name) {\r\n      __glGetActiveAttribOrUniform('getActiveAttrib', program, index, bufSize, length, size, type, name);\r\n    }\r\n  var _emscripten_glGetActiveAttrib = _glGetActiveAttrib;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniform(program, index, bufSize, length, size, type, name) {\r\n      __glGetActiveAttribOrUniform('getActiveUniform', program, index, bufSize, length, size, type, name);\r\n    }\r\n  var _emscripten_glGetActiveUniform = _glGetActiveUniform;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName) {\r\n      program = GL.programs[program];\r\n  \r\n      var result = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\r\n      if (!result) return; // If an error occurs, nothing will be written to uniformBlockName or length.\r\n      if (uniformBlockName && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(result, uniformBlockName, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformBlockName = _glGetActiveUniformBlockName;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8A41 /* GL_UNIFORM_BLOCK_NAME_LENGTH */) {\r\n        var name = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\r\n        HEAP32[((params)>>2)] = name.length+1;\r\n        return;\r\n      }\r\n  \r\n      var result = GLctx.getActiveUniformBlockParameter(program, uniformBlockIndex, pname);\r\n      if (result === null) return; // If an error occurs, nothing should be written to params.\r\n      if (pname == 0x8A43 /*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/) {\r\n        for (var i = 0; i < result.length; i++) {\r\n          HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n        }\r\n      } else {\r\n        HEAP32[((params)>>2)] = result;\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformBlockiv = _glGetActiveUniformBlockiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && uniformIndices == 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var ids = [];\r\n      for (var i = 0; i < uniformCount; i++) {\r\n        ids.push(HEAP32[(((uniformIndices)+(i*4))>>2)]);\r\n      }\r\n  \r\n      var result = GLctx.getActiveUniforms(program, ids, pname);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to params.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformsiv = _glGetActiveUniformsiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetAttachedShaders(program, maxCount, count, shaders) {\r\n      var result = GLctx.getAttachedShaders(GL.programs[program]);\r\n      var len = result.length;\r\n      if (len > maxCount) {\r\n        len = maxCount;\r\n      }\r\n      HEAP32[((count)>>2)] = len;\r\n      for (var i = 0; i < len; ++i) {\r\n        var id = GL.shaders.indexOf(result[i]);\r\n        HEAP32[(((shaders)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  var _emscripten_glGetAttachedShaders = _glGetAttachedShaders;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetAttribLocation(program, name) {\r\n      return GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\r\n    }\r\n  var _emscripten_glGetAttribLocation = _glGetAttribLocation;\r\n\r\n  function writeI53ToI64(ptr, num) {\r\n      HEAPU32[ptr>>2] = num;\r\n      HEAPU32[ptr+4>>2] = (num - HEAPU32[ptr>>2])/4294967296;\r\n    }\r\n  \r\n  function emscriptenWebGLGet(name_, p, type) {\r\n      // Guard against user passing a null pointer.\r\n      // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.\r\n      // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but\r\n      // better to report an error instead of doing anything random.\r\n      if (!p) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = undefined;\r\n      switch (name_) { // Handle a few trivial GLES values\r\n        case 0x8DFA: // GL_SHADER_COMPILER\r\n          ret = 1;\r\n          break;\r\n        case 0x8DF8: // GL_SHADER_BINARY_FORMATS\r\n          if (type != 0 && type != 1) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n          }\r\n          return; // Do not write anything to the out pointer, since no binary formats are supported.\r\n        case 0x87FE: // GL_NUM_PROGRAM_BINARY_FORMATS\r\n        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS\r\n          ret = 0;\r\n          break;\r\n        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS\r\n          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),\r\n          // so implement it ourselves to allow C++ GLES2 code get the length.\r\n          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);\r\n          ret = formats ? formats.length : 0;\r\n          break;\r\n  \r\n        case 0x821D: // GL_NUM_EXTENSIONS\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n            return;\r\n          }\r\n          // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          var exts = GLctx.getSupportedExtensions() || [];\r\n          ret = 2 * exts.length; // each extension is duplicated, first in unprefixed WebGL form, and then a second time with \"GL_\" prefix.\r\n          break;\r\n        case 0x821B: // GL_MAJOR_VERSION\r\n        case 0x821C: // GL_MINOR_VERSION\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          ret = name_ == 0x821B ? 3 : 0; // return version 3.0\r\n          break;\r\n      }\r\n  \r\n      if (ret === undefined) {\r\n        var result = GLctx.getParameter(name_);\r\n        switch (typeof result) {\r\n          case \"number\":\r\n            ret = result;\r\n            break;\r\n          case \"boolean\":\r\n            ret = result ? 1 : 0;\r\n            break;\r\n          case \"string\":\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          case \"object\":\r\n            if (result === null) {\r\n              // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise\r\n              // can mean an invalid name_, which we need to report as an error\r\n              switch (name_) {\r\n                case 0x8894: // ARRAY_BUFFER_BINDING\r\n                case 0x8B8D: // CURRENT_PROGRAM\r\n                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING\r\n                case 0x8CA6: // FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING\r\n                case 0x8CA7: // RENDERBUFFER_BINDING\r\n                case 0x8069: // TEXTURE_BINDING_2D\r\n                case 0x85B5: // WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES\r\n                case 0x8F36: // COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER\r\n                case 0x8F37: // COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER\r\n                case 0x88ED: // PIXEL_PACK_BUFFER_BINDING\r\n                case 0x88EF: // PIXEL_UNPACK_BUFFER_BINDING\r\n                case 0x8CAA: // READ_FRAMEBUFFER_BINDING\r\n                case 0x8919: // SAMPLER_BINDING\r\n                case 0x8C1D: // TEXTURE_BINDING_2D_ARRAY\r\n                case 0x806A: // TEXTURE_BINDING_3D\r\n                case 0x8E25: // TRANSFORM_FEEDBACK_BINDING\r\n                case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n                case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP\r\n                  ret = 0;\r\n                  break;\r\n                }\r\n                default: {\r\n                  GL.recordError(0x500); // GL_INVALID_ENUM\r\n                  return;\r\n                }\r\n              }\r\n            } else if (result instanceof Float32Array ||\r\n                       result instanceof Uint32Array ||\r\n                       result instanceof Int32Array ||\r\n                       result instanceof Array) {\r\n              for (var i = 0; i < result.length; ++i) {\r\n                switch (type) {\r\n                  case 0: HEAP32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 2: HEAPF32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 4: HEAP8[(((p)+(i))>>0)] = result[i] ? 1 : 0; break;\r\n                }\r\n              }\r\n              return;\r\n            } else {\r\n              try {\r\n                ret = result.name | 0;\r\n              } catch(e) {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                err('GL_INVALID_ENUM in glGet' + type + 'v: Unknown object returned from WebGL getParameter(' + name_ + ')! (error: ' + e + ')');\r\n                return;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            err('GL_INVALID_ENUM in glGet' + type + 'v: Native code calling glGet' + type + 'v(' + name_ + ') and it returns ' + result + ' of type ' + typeof(result) + '!');\r\n            return;\r\n        }\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(p, ret); break;\r\n        case 0: HEAP32[((p)>>2)] = ret; break;\r\n        case 2:   HEAPF32[((p)>>2)] = ret; break;\r\n        case 4: HEAP8[((p)>>0)] = ret ? 1 : 0; break;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetBooleanv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 4);\r\n    }\r\n  var _emscripten_glGetBooleanv = _glGetBooleanv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetBufferParameteri64v(target, value, data) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      writeI53ToI64(data, GLctx.getBufferParameter(target, value));\r\n    }\r\n  var _emscripten_glGetBufferParameteri64v = _glGetBufferParameteri64v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetBufferParameteriv(target, value, data) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((data)>>2)] = GLctx.getBufferParameter(target, value);\r\n    }\r\n  var _emscripten_glGetBufferParameteriv = _glGetBufferParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetError() {\r\n      var error = GLctx.getError() || GL.lastError;\r\n      GL.lastError = 0/*GL_NO_ERROR*/;\r\n      return error;\r\n    }\r\n  var _emscripten_glGetError = _glGetError;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetFloatv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 2);\r\n    }\r\n  var _emscripten_glGetFloatv = _glGetFloatv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetFragDataLocation(program, name) {\r\n      return GLctx.getFragDataLocation(GL.programs[program], UTF8ToString(name));\r\n    }\r\n  var _emscripten_glGetFragDataLocation = _glGetFragDataLocation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetFramebufferAttachmentParameteriv(target, attachment, pname, params) {\r\n      var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\r\n      if (result instanceof WebGLRenderbuffer ||\r\n          result instanceof WebGLTexture) {\r\n        result = result.name | 0;\r\n      }\r\n      HEAP32[((params)>>2)] = result;\r\n    }\r\n  var _emscripten_glGetFramebufferAttachmentParameteriv = _glGetFramebufferAttachmentParameteriv;\r\n\r\n  function emscriptenWebGLGetIndexed(target, index, data, type) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var result = GLctx.getIndexedParameter(target, index);\r\n      var ret;\r\n      switch (typeof result) {\r\n        case 'boolean':\r\n          ret = result ? 1 : 0;\r\n          break;\r\n        case 'number':\r\n          ret = result;\r\n          break;\r\n        case 'object':\r\n          if (result === null) {\r\n            switch (target) {\r\n              case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n              case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                ret = 0;\r\n                break;\r\n              default: {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                return;\r\n              }\r\n            }\r\n          } else if (result instanceof WebGLBuffer) {\r\n            ret = result.name | 0;\r\n          } else {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          GL.recordError(0x500); // GL_INVALID_ENUM\r\n          return;\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(data, ret); break;\r\n        case 0: HEAP32[((data)>>2)] = ret; break;\r\n        case 2: HEAPF32[((data)>>2)] = ret; break;\r\n        case 4: HEAP8[((data)>>0)] = ret ? 1 : 0; break;\r\n        default: throw 'internal emscriptenWebGLGetIndexed() error, bad type: ' + type;\r\n      }\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glGetInteger64i_v(target, index, data) {\r\n      emscriptenWebGLGetIndexed(target, index, data, 1);\r\n    }\r\n  var _emscripten_glGetInteger64i_v = _glGetInteger64i_v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetInteger64v(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 1);\r\n    }\r\n  var _emscripten_glGetInteger64v = _glGetInteger64v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetIntegeri_v(target, index, data) {\r\n      emscriptenWebGLGetIndexed(target, index, data, 0);\r\n    }\r\n  var _emscripten_glGetIntegeri_v = _glGetIntegeri_v;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetIntegerv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 0);\r\n    }\r\n  var _emscripten_glGetIntegerv = _glGetIntegerv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetInternalformativ(target, internalformat, pname, bufSize, params) {\r\n      if (bufSize < 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getInternalformatParameter(target, internalformat, pname);\r\n      if (ret === null) return;\r\n      for (var i = 0; i < ret.length && i < bufSize; ++i) {\r\n        HEAP32[(((params)+(i*4))>>2)] = ret[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetInternalformativ = _glGetInternalformativ;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramBinary(program, bufSize, length, binaryFormat, binary) {\r\n      GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n    }\r\n  var _emscripten_glGetProgramBinary = _glGetProgramBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramInfoLog(program, maxLength, length, infoLog) {\r\n      var log = GLctx.getProgramInfoLog(GL.programs[program]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetProgramInfoLog = _glGetProgramInfoLog;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramiv(program, pname, p) {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      if (program >= GL.counter) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getProgramInfoLog(program);\r\n        if (log === null) log = '(unknown error)';\r\n        HEAP32[((p)>>2)] = log.length + 1;\r\n      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\r\n        if (!program.maxUniformLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n            program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformLength;\r\n      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\r\n        if (!program.maxAttributeLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/); ++i) {\r\n            program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxAttributeLength;\r\n      } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\r\n        if (!program.maxUniformBlockNameLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/); ++i) {\r\n            program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformBlockNameLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getProgramParameter(program, pname);\r\n      }\r\n    }\r\n  var _emscripten_glGetProgramiv = _glGetProgramiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjecti64vEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param;\r\n      if (GL.currentContext.version < 2)\r\n      {\r\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      }\r\n      else {\r\n        param = GLctx.getQueryParameter(query, pname);\r\n      }\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      writeI53ToI64(params, ret);\r\n    }\r\n  var _emscripten_glGetQueryObjecti64vEXT = _glGetQueryObjecti64vEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjectivEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n  var _emscripten_glGetQueryObjectivEXT = _glGetQueryObjectivEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectui64vEXT = _glGetQueryObjecti64vEXT;\r\n  var _emscripten_glGetQueryObjectui64vEXT = _glGetQueryObjectui64vEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjectuiv(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.getQueryParameter(query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n  var _emscripten_glGetQueryObjectuiv = _glGetQueryObjectuiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectuivEXT = _glGetQueryObjectivEXT;\r\n  var _emscripten_glGetQueryObjectuivEXT = _glGetQueryObjectuivEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryiv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getQuery(target, pname);\r\n    }\r\n  var _emscripten_glGetQueryiv = _glGetQueryiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryivEXT(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.disjointTimerQueryExt['getQueryEXT'](target, pname);\r\n    }\r\n  var _emscripten_glGetQueryivEXT = _glGetQueryivEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetRenderbufferParameteriv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getRenderbufferParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetRenderbufferParameteriv = _glGetRenderbufferParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSamplerParameterfv(sampler, pname, params) {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\r\n    }\r\n  var _emscripten_glGetSamplerParameterfv = _glGetSamplerParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSamplerParameteriv(sampler, pname, params) {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\r\n    }\r\n  var _emscripten_glGetSamplerParameteriv = _glGetSamplerParameteriv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderInfoLog(shader, maxLength, length, infoLog) {\r\n      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetShaderInfoLog = _glGetShaderInfoLog;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderPrecisionFormat(shaderType, precisionType, range, precision) {\r\n      var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\r\n      HEAP32[((range)>>2)] = result.rangeMin;\r\n      HEAP32[(((range)+(4))>>2)] = result.rangeMax;\r\n      HEAP32[((precision)>>2)] = result.precision;\r\n    }\r\n  var _emscripten_glGetShaderPrecisionFormat = _glGetShaderPrecisionFormat;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderSource(shader, bufSize, length, source) {\r\n      var result = GLctx.getShaderSource(GL.shaders[shader]);\r\n      if (!result) return; // If an error occurs, nothing will be written to length or source.\r\n      var numBytesWrittenExclNull = (bufSize > 0 && source) ? stringToUTF8(result, source, bufSize) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetShaderSource = _glGetShaderSource;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderiv(shader, pname, p) {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n        if (log === null) log = '(unknown error)';\r\n        // The GLES2 specification says that if the shader has an empty info log,\r\n        // a value of 0 is returned. Otherwise the log has a null char appended.\r\n        // (An empty string is falsey, so we can just check that instead of\r\n        // looking at log.length.)\r\n        var logLength = log ? log.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = logLength;\r\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\r\n        var source = GLctx.getShaderSource(GL.shaders[shader]);\r\n        // source may be a null, or the empty string, both of which are falsey\r\n        // values that we report a 0 length for.\r\n        var sourceLength = source ? source.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = sourceLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getShaderParameter(GL.shaders[shader], pname);\r\n      }\r\n    }\r\n  var _emscripten_glGetShaderiv = _glGetShaderiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetString(name_) {\r\n      var ret = GL.stringCache[name_];\r\n      if (!ret) {\r\n        switch (name_) {\r\n          case 0x1F03 /* GL_EXTENSIONS */:\r\n            var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n            exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\r\n            ret = stringToNewUTF8(exts.join(' '));\r\n            break;\r\n          case 0x1F00 /* GL_VENDOR */:\r\n          case 0x1F01 /* GL_RENDERER */:\r\n          case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\r\n          case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\r\n            var s = GLctx.getParameter(name_);\r\n            if (!s) {\r\n              GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            }\r\n            ret = s && stringToNewUTF8(s);\r\n            break;\r\n  \r\n          case 0x1F02 /* GL_VERSION */:\r\n            var glVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\r\n            // return GLES version string corresponding to the version of the WebGL context\r\n            if (GL.currentContext.version >= 2) glVersion = 'OpenGL ES 3.0 (' + glVersion + ')';\r\n            else\r\n            {\r\n              glVersion = 'OpenGL ES 2.0 (' + glVersion + ')';\r\n            }\r\n            ret = stringToNewUTF8(glVersion);\r\n            break;\r\n          case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\r\n            var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\r\n            // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\r\n            var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\r\n            var ver_num = glslVersion.match(ver_re);\r\n            if (ver_num !== null) {\r\n              if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\r\n              glslVersion = 'OpenGL ES GLSL ES ' + ver_num[1] + ' (' + glslVersion + ')';\r\n            }\r\n            ret = stringToNewUTF8(glslVersion);\r\n            break;\r\n          default:\r\n            GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            // fall through\r\n        }\r\n        GL.stringCache[name_] = ret;\r\n      }\r\n      return ret;\r\n    }\r\n  var _emscripten_glGetString = _glGetString;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetStringi(name, index) {\r\n      if (GL.currentContext.version < 2) {\r\n        GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n        return 0;\r\n      }\r\n      var stringiCache = GL.stringiCache[name];\r\n      if (stringiCache) {\r\n        if (index < 0 || index >= stringiCache.length) {\r\n          GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n          return 0;\r\n        }\r\n        return stringiCache[index];\r\n      }\r\n      switch (name) {\r\n        case 0x1F03 /* GL_EXTENSIONS */:\r\n          var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\r\n          exts = exts.map(function(e) { return stringToNewUTF8(e); });\r\n  \r\n          stringiCache = GL.stringiCache[name] = exts;\r\n          if (index < 0 || index >= stringiCache.length) {\r\n            GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n            return 0;\r\n          }\r\n          return stringiCache[index];\r\n        default:\r\n          GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n          return 0;\r\n      }\r\n    }\r\n  var _emscripten_glGetStringi = _glGetStringi;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSynciv(sync, pname, bufSize, length, values) {\r\n      if (bufSize < 0) {\r\n        // GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,\r\n        // so raise GL_INVALID_VALUE here as well.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!values) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getSyncParameter(GL.syncs[sync], pname);\r\n      if (ret !== null) {\r\n        HEAP32[((values)>>2)] = ret;\r\n        if (length) HEAP32[((length)>>2)] = 1; // Report a single value outputted.\r\n      }\r\n    }\r\n  var _emscripten_glGetSynciv = _glGetSynciv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTexParameterfv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetTexParameterfv = _glGetTexParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTexParameteriv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetTexParameteriv = _glGetTexParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name) {\r\n      program = GL.programs[program];\r\n      var info = GLctx.getTransformFeedbackVarying(program, index);\r\n      if (!info) return; // If an error occurred, the return parameters length, size, type and name will be unmodified.\r\n  \r\n      if (name && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n  \r\n      if (size) HEAP32[((size)>>2)] = info.size;\r\n      if (type) HEAP32[((type)>>2)] = info.type;\r\n    }\r\n  var _emscripten_glGetTransformFeedbackVarying = _glGetTransformFeedbackVarying;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformBlockIndex(program, uniformBlockName) {\r\n      return GLctx.getUniformBlockIndex(GL.programs[program], UTF8ToString(uniformBlockName));\r\n    }\r\n  var _emscripten_glGetUniformBlockIndex = _glGetUniformBlockIndex;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformIndices(program, uniformCount, uniformNames, uniformIndices) {\r\n      if (!uniformIndices) {\r\n        // GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense\r\n        // if uniformIndices == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && (uniformNames == 0 || uniformIndices == 0)) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var names = [];\r\n      for (var i = 0; i < uniformCount; i++)\r\n        names.push(UTF8ToString(HEAP32[(((uniformNames)+(i*4))>>2)]));\r\n  \r\n      var result = GLctx.getUniformIndices(program, names);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to uniformIndices.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((uniformIndices)+(i*4))>>2)] = result[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetUniformIndices = _glGetUniformIndices;\r\n\r\n  \r\n  /** @noinline */\r\n  function webglGetLeftBracePos(name) {\r\n      return name.slice(-1) == ']' && name.lastIndexOf('[');\r\n    }\r\n  \r\n  function webglPrepareUniformLocationsBeforeFirstUse(program) {\r\n      var uniformLocsById = program.uniformLocsById, // Maps GLuint -> WebGLUniformLocation\r\n        uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, // Maps name -> [uniform array length, GLuint]\r\n        i, j;\r\n  \r\n      // On the first time invocation of glGetUniformLocation on this shader program:\r\n      // initialize cache data structures and discover which uniforms are arrays.\r\n      if (!uniformLocsById) {\r\n        // maps GLint integer locations to WebGLUniformLocations\r\n        program.uniformLocsById = uniformLocsById = {};\r\n        // maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations\r\n        program.uniformArrayNamesById = {};\r\n  \r\n        for (i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n          var u = GLctx.getActiveUniform(program, i);\r\n          var nm = u.name;\r\n          var sz = u.size;\r\n          var lb = webglGetLeftBracePos(nm);\r\n          var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\r\n  \r\n          // Assign a new location.\r\n          var id = program.uniformIdCounter;\r\n          program.uniformIdCounter += sz;\r\n          // Eagerly get the location of the uniformArray[0] base element.\r\n          // The remaining indices >0 will be left for lazy evaluation to\r\n          // improve performance. Those may never be needed to fetch, if the\r\n          // application fills arrays always in full starting from the first\r\n          // element of the array.\r\n          uniformSizeAndIdsByName[arrayName] = [sz, id];\r\n  \r\n          // Store placeholder integers in place that highlight that these\r\n          // >0 index locations are array indices pending population.\r\n          for(j = 0; j < sz; ++j) {\r\n            uniformLocsById[id] = j;\r\n            program.uniformArrayNamesById[id++] = arrayName;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformLocation(program, name) {\r\n  \r\n      name = UTF8ToString(name);\r\n  \r\n      if (program = GL.programs[program]) {\r\n        webglPrepareUniformLocationsBeforeFirstUse(program);\r\n        var uniformLocsById = program.uniformLocsById; // Maps GLuint -> WebGLUniformLocation\r\n        var arrayIndex = 0;\r\n        var uniformBaseName = name;\r\n  \r\n        // Invariant: when populating integer IDs for uniform locations, we must maintain the precondition that\r\n        // arrays reside in contiguous addresses, i.e. for a 'vec4 colors[10];', colors[4] must be at location colors[0]+4.\r\n        // However, user might call glGetUniformLocation(program, \"colors\") for an array, so we cannot discover based on the user\r\n        // input arguments whether the uniform we are dealing with is an array. The only way to discover which uniforms are arrays\r\n        // is to enumerate over all the active uniforms in the program.\r\n        var leftBrace = webglGetLeftBracePos(name);\r\n  \r\n        // If user passed an array accessor \"[index]\", parse the array index off the accessor.\r\n        if (leftBrace > 0) {\r\n          arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0; // \"index]\", coerce parseInt(']') with >>>0 to treat \"foo[]\" as \"foo[0]\" and foo[-1] as unsigned out-of-bounds.\r\n          uniformBaseName = name.slice(0, leftBrace);\r\n        }\r\n  \r\n        // Have we cached the location of this uniform before?\r\n        var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName]; // A pair [array length, GLint of the uniform location]\r\n  \r\n        // If an uniform with this name exists, and if its index is within the array limits (if it's even an array),\r\n        // query the WebGLlocation, or return an existing cached location.\r\n        if (sizeAndId && arrayIndex < sizeAndId[0]) {\r\n          arrayIndex += sizeAndId[1]; // Add the base location of the uniform to the array index offset.\r\n          if ((uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name))) {\r\n            return arrayIndex;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // N.b. we are currently unable to distinguish between GL program IDs that never existed vs GL program IDs that have been deleted,\r\n        // so report GL_INVALID_VALUE in both cases.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n      }\r\n      return -1;\r\n    }\r\n  var _emscripten_glGetUniformLocation = _glGetUniformLocation;\r\n\r\n  function webglGetUniformLocation(location) {\r\n      var p = GLctx.currentProgram;\r\n  \r\n      if (p) {\r\n        var webglLoc = p.uniformLocsById[location];\r\n        // p.uniformLocsById[location] stores either an integer, or a WebGLUniformLocation.\r\n  \r\n        // If an integer, we have not yet bound the location, so do it now. The integer value specifies the array index\r\n        // we should bind to.\r\n        if (typeof webglLoc == 'number') {\r\n          p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? '[' + webglLoc + ']' : ''));\r\n        }\r\n        // Else an already cached WebGLUniformLocation, return it.\r\n        return webglLoc;\r\n      } else {\r\n        GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n      }\r\n    }\r\n  \r\n  \r\n  /** @suppress{checkTypes} */\r\n  function emscriptenWebGLGetUniform(program, location, params, type) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      webglPrepareUniformLocationsBeforeFirstUse(program);\r\n      var data = GLctx.getUniform(program, webglGetUniformLocation(location));\r\n      if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformfv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 2);\r\n    }\r\n  var _emscripten_glGetUniformfv = _glGetUniformfv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformiv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    }\r\n  var _emscripten_glGetUniformiv = _glGetUniformiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformuiv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    }\r\n  var _emscripten_glGetUniformuiv = _glGetUniformuiv;\r\n\r\n  /** @suppress{checkTypes} */\r\n  function emscriptenWebGLGetVertexAttrib(index, pname, params, type) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttrib*v on client-side array: not supported, bad data returned\");\r\n      }\r\n      var data = GLctx.getVertexAttrib(index, pname);\r\n      if (pname == 0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/) {\r\n        HEAP32[((params)>>2)] = data && data[\"name\"];\r\n      } else if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n          case 5: HEAP32[((params)>>2)] = Math.fround(data); break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 5: HEAP32[(((params)+(i*4))>>2)] = Math.fround(data[i]); break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribIiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\r\n    }\r\n  var _emscripten_glGetVertexAttribIiv = _glGetVertexAttribIiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetVertexAttribIuiv = _glGetVertexAttribIiv;\r\n  var _emscripten_glGetVertexAttribIuiv = _glGetVertexAttribIuiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribPointerv(index, pname, pointer) {\r\n      if (!pointer) {\r\n        // GLES2 specification does not specify how to behave if pointer is a null pointer. Since calling this function does not make sense\r\n        // if pointer == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttribPointer on client-side array: not supported, bad data returned\");\r\n      }\r\n      HEAP32[((pointer)>>2)] = GLctx.getVertexAttribOffset(index, pname);\r\n    }\r\n  var _emscripten_glGetVertexAttribPointerv = _glGetVertexAttribPointerv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribfv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2);\r\n    }\r\n  var _emscripten_glGetVertexAttribfv = _glGetVertexAttribfv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5);\r\n    }\r\n  var _emscripten_glGetVertexAttribiv = _glGetVertexAttribiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glHint(x0, x1) { GLctx.hint(x0, x1) }\r\n  var _emscripten_glHint = _glHint;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glInvalidateFramebuffer(target, numAttachments, attachments) {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.invalidateFramebuffer(target, list);\r\n    }\r\n  var _emscripten_glInvalidateFramebuffer = _glInvalidateFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glInvalidateSubFramebuffer(target, numAttachments, attachments, x, y, width, height) {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.invalidateSubFramebuffer(target, list, x, y, width, height);\r\n    }\r\n  var _emscripten_glInvalidateSubFramebuffer = _glInvalidateSubFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsBuffer(buffer) {\r\n      var b = GL.buffers[buffer];\r\n      if (!b) return 0;\r\n      return GLctx.isBuffer(b);\r\n    }\r\n  var _emscripten_glIsBuffer = _glIsBuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsEnabled(x0) { return GLctx.isEnabled(x0) }\r\n  var _emscripten_glIsEnabled = _glIsEnabled;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsFramebuffer(framebuffer) {\r\n      var fb = GL.framebuffers[framebuffer];\r\n      if (!fb) return 0;\r\n      return GLctx.isFramebuffer(fb);\r\n    }\r\n  var _emscripten_glIsFramebuffer = _glIsFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsProgram(program) {\r\n      program = GL.programs[program];\r\n      if (!program) return 0;\r\n      return GLctx.isProgram(program);\r\n    }\r\n  var _emscripten_glIsProgram = _glIsProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsQuery(id) {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.isQuery(query);\r\n    }\r\n  var _emscripten_glIsQuery = _glIsQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsQueryEXT(id) {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.disjointTimerQueryExt['isQueryEXT'](query);\r\n    }\r\n  var _emscripten_glIsQueryEXT = _glIsQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsRenderbuffer(renderbuffer) {\r\n      var rb = GL.renderbuffers[renderbuffer];\r\n      if (!rb) return 0;\r\n      return GLctx.isRenderbuffer(rb);\r\n    }\r\n  var _emscripten_glIsRenderbuffer = _glIsRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsSampler(id) {\r\n      var sampler = GL.samplers[id];\r\n      if (!sampler) return 0;\r\n      return GLctx.isSampler(sampler);\r\n    }\r\n  var _emscripten_glIsSampler = _glIsSampler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsShader(shader) {\r\n      var s = GL.shaders[shader];\r\n      if (!s) return 0;\r\n      return GLctx.isShader(s);\r\n    }\r\n  var _emscripten_glIsShader = _glIsShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsSync(sync) {\r\n      return GLctx.isSync(GL.syncs[sync]);\r\n    }\r\n  var _emscripten_glIsSync = _glIsSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsTexture(id) {\r\n      var texture = GL.textures[id];\r\n      if (!texture) return 0;\r\n      return GLctx.isTexture(texture);\r\n    }\r\n  var _emscripten_glIsTexture = _glIsTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsTransformFeedback(id) {\r\n      return GLctx.isTransformFeedback(GL.transformFeedbacks[id]);\r\n    }\r\n  var _emscripten_glIsTransformFeedback = _glIsTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsVertexArray(array) {\r\n  \r\n      var vao = GL.vaos[array];\r\n      if (!vao) return 0;\r\n      return GLctx.isVertexArray(vao);\r\n    }\r\n  var _emscripten_glIsVertexArray = _glIsVertexArray;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glIsVertexArrayOES = _glIsVertexArray;\r\n  var _emscripten_glIsVertexArrayOES = _glIsVertexArrayOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glLineWidth(x0) { GLctx.lineWidth(x0) }\r\n  var _emscripten_glLineWidth = _glLineWidth;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glLinkProgram(program) {\r\n      program = GL.programs[program];\r\n      GLctx.linkProgram(program);\r\n      // Invalidate earlier computed uniform->ID mappings, those have now become stale\r\n      program.uniformLocsById = 0; // Mark as null-like so that glGetUniformLocation() knows to populate this again.\r\n      program.uniformSizeAndIdsByName = {};\r\n  \r\n    }\r\n  var _emscripten_glLinkProgram = _glLinkProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPauseTransformFeedback() { GLctx.pauseTransformFeedback() }\r\n  var _emscripten_glPauseTransformFeedback = _glPauseTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPixelStorei(pname, param) {\r\n      if (pname == 0xCF5 /* GL_UNPACK_ALIGNMENT */) {\r\n        GL.unpackAlignment = param;\r\n      }\r\n      GLctx.pixelStorei(pname, param);\r\n    }\r\n  var _emscripten_glPixelStorei = _glPixelStorei;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPolygonOffset(x0, x1) { GLctx.polygonOffset(x0, x1) }\r\n  var _emscripten_glPolygonOffset = _glPolygonOffset;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glProgramBinary(program, binaryFormat, binary, length) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glProgramBinary = _glProgramBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glProgramParameteri(program, pname, value) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glProgramParameteri = _glProgramParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glQueryCounterEXT(id, target) {\r\n      GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id], target);\r\n    }\r\n  var _emscripten_glQueryCounterEXT = _glQueryCounterEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glReadBuffer(x0) { GLctx.readBuffer(x0) }\r\n  var _emscripten_glReadBuffer = _glReadBuffer;\r\n\r\n  function computeUnpackAlignedImageSize(width, height, sizePerPixel, alignment) {\r\n      function roundedToNextMultipleOf(x, y) {\r\n        return (x + y - 1) & -y;\r\n      }\r\n      var plainRowSize = width * sizePerPixel;\r\n      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);\r\n      return height * alignedRowSize;\r\n    }\r\n  \r\n  function colorChannelsInGlTextureFormat(format) {\r\n      // Micro-optimizations for size: map format to size by subtracting smallest enum value (0x1902) from all values first.\r\n      // Also omit the most common size value (1) from the list, which is assumed by formats not on the list.\r\n      var colorChannels = {\r\n        // 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,\r\n        // 0x1906 /* GL_ALPHA */ - 0x1902: 1,\r\n        5: 3,\r\n        6: 4,\r\n        // 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,\r\n        8: 2,\r\n        29502: 3,\r\n        29504: 4,\r\n        // 0x1903 /* GL_RED */ - 0x1902: 1,\r\n        26917: 2,\r\n        26918: 2,\r\n        // 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,\r\n        29846: 3,\r\n        29847: 4\r\n      };\r\n      return colorChannels[format - 0x1902]||1;\r\n    }\r\n  \r\n  function heapObjectForWebGLType(type) {\r\n      // Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare\r\n      // smaller values for the heap, for shorter generated code size.\r\n      // Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.\r\n      // (since most types are HEAPU16)\r\n      type -= 0x1400;\r\n      if (type == 0) return HEAP8;\r\n  \r\n      if (type == 1) return HEAPU8;\r\n  \r\n      if (type == 2) return HEAP16;\r\n  \r\n      if (type == 4) return HEAP32;\r\n  \r\n      if (type == 6) return HEAPF32;\r\n  \r\n      if (type == 5\r\n        || type == 28922\r\n        || type == 28520\r\n        || type == 30779\r\n        || type == 30782\r\n        )\r\n        return HEAPU32;\r\n  \r\n      return HEAPU16;\r\n    }\r\n  \r\n  function heapAccessShiftForWebGLHeap(heap) {\r\n      return 31 - Math.clz32(heap.BYTES_PER_ELEMENT);\r\n    }\r\n  \r\n  function emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) {\r\n      var heap = heapObjectForWebGLType(type);\r\n      var shift = heapAccessShiftForWebGLHeap(heap);\r\n      var byteSize = 1<<shift;\r\n      var sizePerPixel = colorChannelsInGlTextureFormat(format) * byteSize;\r\n      var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel, GL.unpackAlignment);\r\n      return heap.subarray(pixels >> shift, pixels + bytes >> shift);\r\n    }\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glReadPixels(x, y, width, height, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelPackBufferBinding) {\r\n          GLctx.readPixels(x, y, width, height, format, type, pixels);\r\n        } else {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.readPixels(x, y, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);\r\n      if (!pixelData) {\r\n        GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n        return;\r\n      }\r\n      GLctx.readPixels(x, y, width, height, format, type, pixelData);\r\n    }\r\n  var _emscripten_glReadPixels = _glReadPixels;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glReleaseShaderCompiler() {\r\n      // NOP (as allowed by GLES 2.0 spec)\r\n    }\r\n  var _emscripten_glReleaseShaderCompiler = _glReleaseShaderCompiler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glRenderbufferStorage(x0, x1, x2, x3) { GLctx.renderbufferStorage(x0, x1, x2, x3) }\r\n  var _emscripten_glRenderbufferStorage = _glRenderbufferStorage;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glRenderbufferStorageMultisample(x0, x1, x2, x3, x4) { GLctx.renderbufferStorageMultisample(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glRenderbufferStorageMultisample = _glRenderbufferStorageMultisample;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glResumeTransformFeedback() { GLctx.resumeTransformFeedback() }\r\n  var _emscripten_glResumeTransformFeedback = _glResumeTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSampleCoverage(value, invert) {\r\n      GLctx.sampleCoverage(value, !!invert);\r\n    }\r\n  var _emscripten_glSampleCoverage = _glSampleCoverage;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameterf(sampler, pname, param) {\r\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameterf = _glSamplerParameterf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameterfv(sampler, pname, params) {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameterfv = _glSamplerParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameteri(sampler, pname, param) {\r\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameteri = _glSamplerParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameteriv(sampler, pname, params) {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameteriv = _glSamplerParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glScissor(x0, x1, x2, x3) { GLctx.scissor(x0, x1, x2, x3) }\r\n  var _emscripten_glScissor = _glScissor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glShaderBinary(count, shaders, binaryformat, binary, length) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glShaderBinary = _glShaderBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glShaderSource(shader, count, string, length) {\r\n      var source = GL.getSource(shader, count, string, length);\r\n  \r\n      GLctx.shaderSource(GL.shaders[shader], source);\r\n    }\r\n  var _emscripten_glShaderSource = _glShaderSource;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilFunc(x0, x1, x2) { GLctx.stencilFunc(x0, x1, x2) }\r\n  var _emscripten_glStencilFunc = _glStencilFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilFuncSeparate(x0, x1, x2, x3) { GLctx.stencilFuncSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glStencilFuncSeparate = _glStencilFuncSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilMask(x0) { GLctx.stencilMask(x0) }\r\n  var _emscripten_glStencilMask = _glStencilMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilMaskSeparate(x0, x1) { GLctx.stencilMaskSeparate(x0, x1) }\r\n  var _emscripten_glStencilMaskSeparate = _glStencilMaskSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilOp(x0, x1, x2) { GLctx.stencilOp(x0, x1, x2) }\r\n  var _emscripten_glStencilOp = _glStencilOp;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilOpSeparate(x0, x1, x2, x3) { GLctx.stencilOpSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glStencilOpSeparate = _glStencilOpSeparate;\r\n\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null);\r\n    }\r\n  var _emscripten_glTexImage2D = _glTexImage2D;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, null);\r\n      }\r\n    }\r\n  var _emscripten_glTexImage3D = _glTexImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameterf(x0, x1, x2) { GLctx.texParameterf(x0, x1, x2) }\r\n  var _emscripten_glTexParameterf = _glTexParameterf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameterfv(target, pname, params) {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.texParameterf(target, pname, param);\r\n    }\r\n  var _emscripten_glTexParameterfv = _glTexParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }\r\n  var _emscripten_glTexParameteri = _glTexParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameteriv(target, pname, params) {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.texParameteri(target, pname, param);\r\n    }\r\n  var _emscripten_glTexParameteriv = _glTexParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexStorage2D(x0, x1, x2, x3, x4) { GLctx.texStorage2D(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glTexStorage2D = _glTexStorage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexStorage3D(x0, x1, x2, x3, x4, x5) { GLctx.texStorage3D(x0, x1, x2, x3, x4, x5) }\r\n  var _emscripten_glTexStorage3D = _glTexStorage3D;\r\n\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = null;\r\n      if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0);\r\n      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\r\n    }\r\n  var _emscripten_glTexSubImage2D = _glTexSubImage2D;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, null);\r\n      }\r\n    }\r\n  var _emscripten_glTexSubImage3D = _glTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTransformFeedbackVaryings(program, count, varyings, bufferMode) {\r\n      program = GL.programs[program];\r\n      var vars = [];\r\n      for (var i = 0; i < count; i++)\r\n        vars.push(UTF8ToString(HEAP32[(((varyings)+(i*4))>>2)]));\r\n  \r\n      GLctx.transformFeedbackVaryings(program, vars, bufferMode);\r\n    }\r\n  var _emscripten_glTransformFeedbackVaryings = _glTransformFeedbackVaryings;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1f(location, v0) {\r\n      GLctx.uniform1f(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1f = _glUniform1f;\r\n\r\n  \r\n  var miniTempWebGLFloatBuffers = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform1fv = _glUniform1fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1i(location, v0) {\r\n      GLctx.uniform1i(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1i = _glUniform1i;\r\n\r\n  \r\n  var miniTempWebGLIntBuffers = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform1iv = _glUniform1iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform1ui(location, v0) {\r\n      GLctx.uniform1ui(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1ui = _glUniform1ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform1uiv(location, count, value) {\r\n      count && GLctx.uniform1uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count);\r\n    }\r\n  var _emscripten_glUniform1uiv = _glUniform1uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2f(location, v0, v1) {\r\n      GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2f = _glUniform2f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform2fv = _glUniform2fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2i(location, v0, v1) {\r\n      GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2i = _glUniform2i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform2iv = _glUniform2iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform2ui(location, v0, v1) {\r\n      GLctx.uniform2ui(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2ui = _glUniform2ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform2uiv(location, count, value) {\r\n      count && GLctx.uniform2uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*2);\r\n    }\r\n  var _emscripten_glUniform2uiv = _glUniform2uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3f(location, v0, v1, v2) {\r\n      GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3f = _glUniform3f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform3fv = _glUniform3fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3i(location, v0, v1, v2) {\r\n      GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3i = _glUniform3i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform3iv = _glUniform3iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform3ui(location, v0, v1, v2) {\r\n      GLctx.uniform3ui(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3ui = _glUniform3ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform3uiv(location, count, value) {\r\n      count && GLctx.uniform3uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*3);\r\n    }\r\n  var _emscripten_glUniform3uiv = _glUniform3uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4f(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4f = _glUniform4f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 4 * count; i += 4) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform4fv = _glUniform4fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4i(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4i = _glUniform4i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAP32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform4iv = _glUniform4iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform4ui(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4ui(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4ui = _glUniform4ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform4uiv(location, count, value) {\r\n      count && GLctx.uniform4uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*4);\r\n    }\r\n  var _emscripten_glUniform4uiv = _glUniform4uiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding) {\r\n      program = GL.programs[program];\r\n  \r\n      GLctx.uniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding);\r\n    }\r\n  var _emscripten_glUniformBlockBinding = _glUniformBlockBinding;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix2fv = _glUniformMatrix2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2x3fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    }\r\n  var _emscripten_glUniformMatrix2x3fv = _glUniformMatrix2x3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2x4fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    }\r\n  var _emscripten_glUniformMatrix2x4fv = _glUniformMatrix2x4fv;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*9);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 32) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[9*count-1];\r\n        for (var i = 0; i < 9*count; i += 9) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n          view[i+4] = HEAPF32[(((value)+(4*i+16))>>2)];\r\n          view[i+5] = HEAPF32[(((value)+(4*i+20))>>2)];\r\n          view[i+6] = HEAPF32[(((value)+(4*i+24))>>2)];\r\n          view[i+7] = HEAPF32[(((value)+(4*i+28))>>2)];\r\n          view[i+8] = HEAPF32[(((value)+(4*i+32))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*36)>>2);\r\n      }\r\n      GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix3fv = _glUniformMatrix3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3x2fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    }\r\n  var _emscripten_glUniformMatrix3x2fv = _glUniformMatrix3x2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3x4fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    }\r\n  var _emscripten_glUniformMatrix3x4fv = _glUniformMatrix3x4fv;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*16);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 18) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[16*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 16 * count; i += 16) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n          view[i + 4] = heap[dst + 4];\r\n          view[i + 5] = heap[dst + 5];\r\n          view[i + 6] = heap[dst + 6];\r\n          view[i + 7] = heap[dst + 7];\r\n          view[i + 8] = heap[dst + 8];\r\n          view[i + 9] = heap[dst + 9];\r\n          view[i + 10] = heap[dst + 10];\r\n          view[i + 11] = heap[dst + 11];\r\n          view[i + 12] = heap[dst + 12];\r\n          view[i + 13] = heap[dst + 13];\r\n          view[i + 14] = heap[dst + 14];\r\n          view[i + 15] = heap[dst + 15];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*64)>>2);\r\n      }\r\n      GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix4fv = _glUniformMatrix4fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4x2fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    }\r\n  var _emscripten_glUniformMatrix4x2fv = _glUniformMatrix4x2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4x3fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    }\r\n  var _emscripten_glUniformMatrix4x3fv = _glUniformMatrix4x3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUseProgram(program) {\r\n      program = GL.programs[program];\r\n      GLctx.useProgram(program);\r\n      // Record the currently active program so that we can access the uniform\r\n      // mapping table of that program.\r\n      GLctx.currentProgram = program;\r\n    }\r\n  var _emscripten_glUseProgram = _glUseProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glValidateProgram(program) {\r\n      GLctx.validateProgram(GL.programs[program]);\r\n    }\r\n  var _emscripten_glValidateProgram = _glValidateProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib1f(x0, x1) { GLctx.vertexAttrib1f(x0, x1) }\r\n  var _emscripten_glVertexAttrib1f = _glVertexAttrib1f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib1fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib1f(index, HEAPF32[v>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib1fv = _glVertexAttrib1fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib2f(x0, x1, x2) { GLctx.vertexAttrib2f(x0, x1, x2) }\r\n  var _emscripten_glVertexAttrib2f = _glVertexAttrib2f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib2fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib2f(index, HEAPF32[v>>2], HEAPF32[v+4>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib2fv = _glVertexAttrib2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib3f(x0, x1, x2, x3) { GLctx.vertexAttrib3f(x0, x1, x2, x3) }\r\n  var _emscripten_glVertexAttrib3f = _glVertexAttrib3f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib3fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib3f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib3fv = _glVertexAttrib3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib4f(x0, x1, x2, x3, x4) { GLctx.vertexAttrib4f(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttrib4f = _glVertexAttrib4f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib4fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib4f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2], HEAPF32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib4fv = _glVertexAttrib4fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribDivisor(index, divisor) {\r\n      GLctx.vertexAttribDivisor(index, divisor);\r\n    }\r\n  var _emscripten_glVertexAttribDivisor = _glVertexAttribDivisor;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorANGLE = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorANGLE = _glVertexAttribDivisorANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorARB = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorARB = _glVertexAttribDivisorARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorEXT = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorEXT = _glVertexAttribDivisorEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorNV = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorNV = _glVertexAttribDivisorNV;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4i(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4i(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttribI4i = _glVertexAttribI4i;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4iv(index, v) {\r\n      GLctx.vertexAttribI4i(index, HEAP32[v>>2], HEAP32[v+4>>2], HEAP32[v+8>>2], HEAP32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttribI4iv = _glVertexAttribI4iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4ui(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4ui(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttribI4ui = _glVertexAttribI4ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4uiv(index, v) {\r\n      GLctx.vertexAttribI4ui(index, HEAPU32[v>>2], HEAPU32[v+4>>2], HEAPU32[v+8>>2], HEAPU32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttribI4uiv = _glVertexAttribI4uiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribIPointer(index, size, type, stride, ptr) {\r\n      GLctx.vertexAttribIPointer(index, size, type, stride, ptr);\r\n    }\r\n  var _emscripten_glVertexAttribIPointer = _glVertexAttribIPointer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      if (!GLctx.currentArrayBufferBinding) {\r\n        cb.size = size;\r\n        cb.type = type;\r\n        cb.normalized = normalized;\r\n        cb.stride = stride;\r\n        cb.ptr = ptr;\r\n        cb.clientside = true;\r\n        cb.vertexAttribPointerAdaptor = function(index, size, type, normalized, stride, ptr) {\r\n          this.vertexAttribPointer(index, size, type, normalized, stride, ptr);\r\n        };\r\n        return;\r\n      }\r\n      cb.clientside = false;\r\n      GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\r\n    }\r\n  var _emscripten_glVertexAttribPointer = _glVertexAttribPointer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }\r\n  var _emscripten_glViewport = _glViewport;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glWaitSync(sync, flags, timeout_low, timeout_high) {\r\n      // See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      GLctx.waitSync(GL.syncs[sync], flags, timeout);\r\n    }\r\n  var _emscripten_glWaitSync = _glWaitSync;\r\n\r\n  function _emscripten_has_asyncify() {\r\n      return 1;\r\n    }\r\n\r\n  function _emscripten_memcpy_big(dest, src, num) {\r\n      HEAPU8.copyWithin(dest, src, src + num);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  function doRequestFullscreen(target, strategy) {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      if (!target.requestFullscreen\r\n        && !target.webkitRequestFullscreen\r\n        ) {\r\n        return -3;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (strategy.deferUntilInEventHandler) {\r\n          JSEvents.deferCall(JSEvents_requestFullscreen, 1 /* priority over pointer lock */, [target, strategy]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return JSEvents_requestFullscreen(target, strategy);\r\n    }\r\n  \r\n  \r\n  function _emscripten_request_fullscreen_strategy(target, deferUntilInEventHandler, fullscreenStrategy) {\r\n      var strategy = {\r\n        scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n        canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n        filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n        deferUntilInEventHandler: deferUntilInEventHandler,\r\n        canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n        canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)]\r\n      };\r\n  \r\n      return doRequestFullscreen(target, strategy);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_request_pointerlock(target, deferUntilInEventHandler) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      if (!target.requestPointerLock\r\n        ) {\r\n        return -1;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (deferUntilInEventHandler) {\r\n          JSEvents.deferCall(requestPointerLock, 2 /* priority below fullscreen */, [target]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return requestPointerLock(target);\r\n    }\r\n\r\n  function getHeapMax() {\r\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\r\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\r\n      // for any code that deals with heap sizes, which would require special\r\n      // casing all heap size related code to treat 0 specially.\r\n      return 2147483648;\r\n    }\r\n  \r\n  function emscripten_realloc_buffer(size) {\r\n      var b = wasmMemory.buffer;\r\n      try {\r\n        // round size grow request up to wasm page size (fixed 64KB per spec)\r\n        wasmMemory.grow((size - b.byteLength + 65535) >>> 16); // .grow() takes a delta compared to the previous size\r\n        updateMemoryViews();\r\n        return 1 /*success*/;\r\n      } catch(e) {\r\n      }\r\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\r\n      // anyhow)\r\n    }\r\n  function _emscripten_resize_heap(requestedSize) {\r\n      var oldSize = HEAPU8.length;\r\n      requestedSize = requestedSize >>> 0;\r\n      // With multithreaded builds, races can happen (another thread might increase the size\r\n      // in between), so return a failure, and let the caller retry.\r\n  \r\n      // Memory resize rules:\r\n      // 1.  Always increase heap size to at least the requested size, rounded up\r\n      //     to next page multiple.\r\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\r\n      //     geometrically: increase the heap size according to\r\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\r\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\r\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\r\n      //     linearly: increase the heap size by at least\r\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\r\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\r\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\r\n      // 4.  If we were unable to allocate as much memory, it may be due to\r\n      //     over-eager decision to excessively reserve due to (3) above.\r\n      //     Hence if an allocation fails, cut down on the amount of excess\r\n      //     growth, in an attempt to succeed to perform a smaller allocation.\r\n  \r\n      // A limit is set for how much we can grow. We should not exceed that\r\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\r\n      var maxHeapSize = getHeapMax();\r\n      if (requestedSize > maxHeapSize) {\r\n        return false;\r\n      }\r\n  \r\n      let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\r\n  \r\n      // Loop through potential heap size increases. If we attempt a too eager\r\n      // reservation that fails, cut down on the attempted size and reserve a\r\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\r\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\r\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\r\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\r\n  \r\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\r\n  \r\n        var replacement = emscripten_realloc_buffer(newSize);\r\n        if (replacement) {\r\n  \r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n  function _emscripten_sample_gamepad_data() {\r\n      return (JSEvents.lastGamepadState = (navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : null)))\r\n        ? 0 : -1;\r\n    }\r\n\r\n  \r\n  \r\n  function registerBeforeUnloadEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {\r\n      var beforeUnloadEventHandlerFunc = function(e = event) {\r\n        // Note: This is always called on the main browser thread, since it needs synchronously return a value!\r\n        var confirmationMessage = ((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, 0, userData);\r\n        \r\n        if (confirmationMessage) {\r\n          confirmationMessage = UTF8ToString(confirmationMessage);\r\n        }\r\n        if (confirmationMessage) {\r\n          e.preventDefault();\r\n          e.returnValue = confirmationMessage;\r\n          return confirmationMessage;\r\n        }\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: beforeUnloadEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_beforeunload_callback_on_thread(userData, callbackfunc, targetThread) {\r\n      if (typeof onbeforeunload == 'undefined') return -1;\r\n      // beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,\r\n      // and there is no time to start proxying it anywhere.\r\n      if (targetThread !== 1) return -5;\r\n      registerBeforeUnloadEventCallback(2, userData, true, callbackfunc, 28, \"beforeunload\");\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerFocusEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.focusEvent) JSEvents.focusEvent = _malloc( 256 );\r\n  \r\n      var focusEventHandlerFunc = function(e = event) {\r\n        var nodeName = JSEvents.getNodeNameForTarget(e.target);\r\n        var id = e.target.id ? e.target.id : '';\r\n  \r\n        var focusEvent = JSEvents.focusEvent;\r\n        stringToUTF8(nodeName, focusEvent + 0, 128);\r\n        stringToUTF8(id, focusEvent + 128, 128);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, focusEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: focusEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_blur_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 12, \"blur\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n\r\n  \r\n  function _emscripten_set_element_css_size(target, width, height) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      target.style.width = width + \"px\";\r\n      target.style.height = height + \"px\";\r\n  \r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_focus_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 13, \"focus\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillFullscreenChangeEventData(eventStruct) {\r\n      var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\r\n      var isFullscreen = !!fullscreenElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isFullscreen;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = JSEvents.fullscreenEnabled();\r\n      // If transitioning to fullscreen, report info about the element that is now fullscreen.\r\n      // If transitioning to windowed mode, report info about the element that just was fullscreen.\r\n      var reportedElement = isFullscreen ? fullscreenElement : JSEvents.previousFullscreenElement;\r\n      var nodeName = JSEvents.getNodeNameForTarget(reportedElement);\r\n      var id = (reportedElement && reportedElement.id) ? reportedElement.id : '';\r\n      stringToUTF8(nodeName, eventStruct + 8, 128);\r\n      stringToUTF8(id, eventStruct + 136, 128);\r\n      HEAP32[(((eventStruct)+(264))>>2)] = reportedElement ? reportedElement.clientWidth : 0;\r\n      HEAP32[(((eventStruct)+(268))>>2)] = reportedElement ? reportedElement.clientHeight : 0;\r\n      HEAP32[(((eventStruct)+(272))>>2)] = screen.width;\r\n      HEAP32[(((eventStruct)+(276))>>2)] = screen.height;\r\n      if (isFullscreen) {\r\n        JSEvents.previousFullscreenElement = fullscreenElement;\r\n      }\r\n    }\r\n  \r\n  \r\n  function registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.fullscreenChangeEvent) JSEvents.fullscreenChangeEvent = _malloc( 280 );\r\n  \r\n      var fullscreenChangeEventhandlerFunc = function(e = event) {\r\n        var fullscreenChangeEvent = JSEvents.fullscreenChangeEvent;\r\n  \r\n        fillFullscreenChangeEventData(fullscreenChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, fullscreenChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: fullscreenChangeEventhandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  \r\n  function _emscripten_set_fullscreenchange_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"fullscreenchange\", targetThread);\r\n  \r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"webkitfullscreenchange\", targetThread);\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerGamepadEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.gamepadEvent) JSEvents.gamepadEvent = _malloc( 1432 );\r\n  \r\n      var gamepadEventHandlerFunc = function(e = event) {\r\n        var gamepadEvent = JSEvents.gamepadEvent;\r\n        fillGamepadEventData(gamepadEvent, e[\"gamepad\"]);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, gamepadEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: gamepadEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_gamepadconnected_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\r\n      registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 26, \"gamepadconnected\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_gamepaddisconnected_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\r\n      registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 27, \"gamepaddisconnected\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerKeyEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.keyEvent) JSEvents.keyEvent = _malloc( 176 );\r\n  \r\n      var keyEventHandlerFunc = function(e) {\r\n  \r\n        var keyEventData = JSEvents.keyEvent;\r\n        HEAPF64[((keyEventData)>>3)] = e.timeStamp;\r\n  \r\n        var idx = keyEventData >> 2;\r\n  \r\n        HEAP32[idx + 2] = e.location;\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        HEAP32[idx + 7] = e.repeat;\r\n        HEAP32[idx + 8] = e.charCode;\r\n        HEAP32[idx + 9] = e.keyCode;\r\n        HEAP32[idx + 10] = e.which;\r\n        stringToUTF8(e.key || '', keyEventData + 44, 32);\r\n        stringToUTF8(e.code || '', keyEventData + 76, 32);\r\n        stringToUTF8(e.char || '', keyEventData + 108, 32);\r\n        stringToUTF8(e.locale || '', keyEventData + 140, 32);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, keyEventData, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: keyEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_keydown_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 2, \"keydown\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_keypress_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 1, \"keypress\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_keyup_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 3, \"keyup\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop) {\r\n      var browserIterationFunc = (() => dynCall_v.call(null, func));\r\n      setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillMouseEventData(eventStruct, e, target) {\r\n      HEAPF64[((eventStruct)>>3)] = e.timeStamp;\r\n      var idx = eventStruct >> 2;\r\n      HEAP32[idx + 2] = e.screenX;\r\n      HEAP32[idx + 3] = e.screenY;\r\n      HEAP32[idx + 4] = e.clientX;\r\n      HEAP32[idx + 5] = e.clientY;\r\n      HEAP32[idx + 6] = e.ctrlKey;\r\n      HEAP32[idx + 7] = e.shiftKey;\r\n      HEAP32[idx + 8] = e.altKey;\r\n      HEAP32[idx + 9] = e.metaKey;\r\n      HEAP16[idx*2 + 20] = e.button;\r\n      HEAP16[idx*2 + 21] = e.buttons;\r\n  \r\n      HEAP32[idx + 11] = e[\"movementX\"]\r\n        ;\r\n  \r\n      HEAP32[idx + 12] = e[\"movementY\"]\r\n        ;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAP32[idx + 13] = e.clientX - rect.left;\r\n      HEAP32[idx + 14] = e.clientY - rect.top;\r\n  \r\n    }\r\n  \r\n  \r\n  function registerMouseEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.mouseEvent) JSEvents.mouseEvent = _malloc( 72 );\r\n      target = findEventTarget(target);\r\n  \r\n      var mouseEventHandlerFunc = function(e = event) {\r\n        // TODO: Make this access thread safe, or this could update live while app is reading it.\r\n        fillMouseEventData(JSEvents.mouseEvent, e, target);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, JSEvents.mouseEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: eventTypeString != 'mousemove' && eventTypeString != 'mouseenter' && eventTypeString != 'mouseleave', // Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: mouseEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_mousedown_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 5, \"mousedown\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseenter_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 33, \"mouseenter\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseleave_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 34, \"mouseleave\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mousemove_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 8, \"mousemove\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseup_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 6, \"mouseup\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillPointerlockChangeEventData(eventStruct) {\r\n      var pointerLockElement = document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement || document.msPointerLockElement;\r\n      var isPointerlocked = !!pointerLockElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isPointerlocked;\r\n      var nodeName = JSEvents.getNodeNameForTarget(pointerLockElement);\r\n      var id = (pointerLockElement && pointerLockElement.id) ? pointerLockElement.id : '';\r\n      stringToUTF8(nodeName, eventStruct + 4, 128);\r\n      stringToUTF8(id, eventStruct + 132, 128);\r\n    }\r\n  \r\n  \r\n  function registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.pointerlockChangeEvent) JSEvents.pointerlockChangeEvent = _malloc( 260 );\r\n  \r\n      var pointerlockChangeEventHandlerFunc = function(e = event) {\r\n        var pointerlockChangeEvent = JSEvents.pointerlockChangeEvent;\r\n        fillPointerlockChangeEventData(pointerlockChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, pointerlockChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: pointerlockChangeEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  \r\n  /** @suppress {missingProperties} */\r\n  function _emscripten_set_pointerlockchange_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      // TODO: Currently not supported in pthreads or in --proxy-to-worker mode. (In pthreads mode, document object is not defined)\r\n      if (!document || !document.body || (!document.body.requestPointerLock && !document.body.mozRequestPointerLock && !document.body.webkitRequestPointerLock && !document.body.msRequestPointerLock)) {\r\n        return -1;\r\n      }\r\n  \r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"pointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mozpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"webkitpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mspointerlockchange\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  function registerUiEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.uiEvent) JSEvents.uiEvent = _malloc( 36 );\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var uiEventHandlerFunc = function(e = event) {\r\n        if (e.target != target) {\r\n          // Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that\r\n          // was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log\r\n          // message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,\r\n          // causing a new scroll, etc..\r\n          return;\r\n        }\r\n        var b = document.body; // Take document.body to a variable, Closure compiler does not outline access to it on its own.\r\n        if (!b) {\r\n          // During a page unload 'body' can be null, with \"Cannot read property 'clientWidth' of null\" being thrown\r\n          return;\r\n        }\r\n        var uiEvent = JSEvents.uiEvent;\r\n        HEAP32[((uiEvent)>>2)] = e.detail;\r\n        HEAP32[(((uiEvent)+(4))>>2)] = b.clientWidth;\r\n        HEAP32[(((uiEvent)+(8))>>2)] = b.clientHeight;\r\n        HEAP32[(((uiEvent)+(12))>>2)] = innerWidth;\r\n        HEAP32[(((uiEvent)+(16))>>2)] = innerHeight;\r\n        HEAP32[(((uiEvent)+(20))>>2)] = outerWidth;\r\n        HEAP32[(((uiEvent)+(24))>>2)] = outerHeight;\r\n        HEAP32[(((uiEvent)+(28))>>2)] = pageXOffset;\r\n        HEAP32[(((uiEvent)+(32))>>2)] = pageYOffset;\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, uiEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: uiEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_resize_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerUiEventCallback(target, userData, useCapture, callbackfunc, 10, \"resize\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerTouchEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.touchEvent) JSEvents.touchEvent = _malloc( 1696 );\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var touchEventHandlerFunc = function(e) {\r\n        var t, touches = {}, et = e.touches;\r\n        // To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches, \r\n        // only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in\r\n        // each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.\r\n  \r\n        for (var i = 0; i < et.length; ++i) {\r\n          t = et[i];\r\n          // Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any\r\n          // changed/target states we may have set from previous frame.\r\n          t.isChanged = t.onTarget = 0;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the changedTouches list.\r\n        for (var i = 0; i < e.changedTouches.length; ++i) {\r\n          t = e.changedTouches[i];\r\n          t.isChanged = 1;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the targetTouches list.\r\n        for (var i = 0; i < e.targetTouches.length; ++i) {\r\n          touches[e.targetTouches[i].identifier].onTarget = 1;\r\n        }\r\n  \r\n        var touchEvent = JSEvents.touchEvent;\r\n        HEAPF64[((touchEvent)>>3)] = e.timeStamp;\r\n        var idx = touchEvent>>2; // Pre-shift the ptr to index to HEAP32 to save code size\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        idx += 7; // Advance to the start of the touch array.\r\n        var targetRect = getBoundingClientRect(target);\r\n        var numTouches = 0;\r\n        for (var i in touches) {\r\n          t = touches[i];\r\n          HEAP32[idx + 0] = t.identifier;\r\n          HEAP32[idx + 1] = t.screenX;\r\n          HEAP32[idx + 2] = t.screenY;\r\n          HEAP32[idx + 3] = t.clientX;\r\n          HEAP32[idx + 4] = t.clientY;\r\n          HEAP32[idx + 5] = t.pageX;\r\n          HEAP32[idx + 6] = t.pageY;\r\n          HEAP32[idx + 7] = t.isChanged;\r\n          HEAP32[idx + 8] = t.onTarget;\r\n          HEAP32[idx + 9] = t.clientX - targetRect.left;\r\n          HEAP32[idx + 10] = t.clientY - targetRect.top;\r\n  \r\n          idx += 13;\r\n  \r\n          if (++numTouches > 31) {\r\n            break;\r\n          }\r\n        }\r\n        HEAP32[(((touchEvent)+(8))>>2)] = numTouches;\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, touchEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: eventTypeString == 'touchstart' || eventTypeString == 'touchend',\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: touchEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_touchcancel_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 25, \"touchcancel\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchend_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 23, \"touchend\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchmove_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 24, \"touchmove\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchstart_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 22, \"touchstart\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function fillVisibilityChangeEventData(eventStruct) {\r\n      var visibilityStates = [ \"hidden\", \"visible\", \"prerender\", \"unloaded\" ];\r\n      var visibilityState = visibilityStates.indexOf(document.visibilityState);\r\n  \r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = document.hidden;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = visibilityState;\r\n    }\r\n  \r\n  \r\n  function registerVisibilityChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.visibilityChangeEvent) JSEvents.visibilityChangeEvent = _malloc( 8 );\r\n  \r\n      var visibilityChangeEventHandlerFunc = function(e = event) {\r\n        var visibilityChangeEvent = JSEvents.visibilityChangeEvent;\r\n  \r\n        fillVisibilityChangeEventData(visibilityChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, visibilityChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: visibilityChangeEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  function _emscripten_set_visibilitychange_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      registerVisibilityChangeEventCallback(specialHTMLTargets[1], userData, useCapture, callbackfunc, 21, \"visibilitychange\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  function registerWheelEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.wheelEvent) JSEvents.wheelEvent = _malloc( 104 );\r\n  \r\n      // The DOM Level 3 events spec event 'wheel'\r\n      var wheelHandlerFunc = function(e = event) {\r\n        var wheelEvent = JSEvents.wheelEvent;\r\n        fillMouseEventData(wheelEvent, e, target);\r\n        HEAPF64[(((wheelEvent)+(72))>>3)] = e[\"deltaX\"];\r\n        HEAPF64[(((wheelEvent)+(80))>>3)] = e[\"deltaY\"];\r\n        HEAPF64[(((wheelEvent)+(88))>>3)] = e[\"deltaZ\"];\r\n        HEAP32[(((wheelEvent)+(96))>>2)] = e[\"deltaMode\"];\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, wheelEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: wheelHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  function _emscripten_set_wheel_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      target = findEventTarget(target);\r\n      if (typeof target.onwheel != 'undefined') {\r\n        registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, \"wheel\", targetThread);\r\n        return 0;\r\n      } else {\r\n        return -1;\r\n      }\r\n    }\r\n\r\n  \r\n  function _emscripten_set_window_title(title) {\r\n      setWindowTitle(UTF8ToString(title));\r\n    }\r\n\r\n  function _emscripten_sleep(ms) {\r\n      // emscripten_sleep() does not return a value, but we still need a |return|\r\n      // here for stack switching support (ASYNCIFY=2). In that mode this function\r\n      // returns a Promise instead of nothing, and that Promise is what tells the\r\n      // wasm VM to pause the stack.\r\n      return Asyncify.handleSleep((wakeUp) => safeSetTimeout(wakeUp, ms));\r\n    }\r\n  _emscripten_sleep.isAsync = true;\r\n\r\n  var ENV = {};\r\n  \r\n  function getExecutableName() {\r\n      return thisProgram || './this.program';\r\n    }\r\n  function getEnvStrings() {\r\n      if (!getEnvStrings.strings) {\r\n        // Default values.\r\n        // Browser language detection #8751\r\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\r\n        var env = {\r\n          'USER': 'web_user',\r\n          'LOGNAME': 'web_user',\r\n          'PATH': '/',\r\n          'PWD': '/',\r\n          'HOME': '/home/web_user',\r\n          'LANG': lang,\r\n          '_': getExecutableName()\r\n        };\r\n        // Apply the user-provided values, if any.\r\n        for (var x in ENV) {\r\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\r\n          // explicitly set to be so. We allow user code to do that to\r\n          // force variables with default values to remain unset.\r\n          if (ENV[x] === undefined) delete env[x];\r\n          else env[x] = ENV[x];\r\n        }\r\n        var strings = [];\r\n        for (var x in env) {\r\n          strings.push(x + '=' + env[x]);\r\n        }\r\n        getEnvStrings.strings = strings;\r\n      }\r\n      return getEnvStrings.strings;\r\n    }\r\n  \r\n  function stringToAscii(str, buffer) {\r\n      for (var i = 0; i < str.length; ++i) {\r\n        HEAP8[((buffer++)>>0)] = str.charCodeAt(i);\r\n      }\r\n      // Null-terminate the string\r\n      HEAP8[((buffer)>>0)] = 0;\r\n    }\r\n  \r\n  function _environ_get(__environ, environ_buf) {\r\n      var bufSize = 0;\r\n      getEnvStrings().forEach(function(string, i) {\r\n        var ptr = environ_buf + bufSize;\r\n        HEAPU32[(((__environ)+(i*4))>>2)] = ptr;\r\n        stringToAscii(string, ptr);\r\n        bufSize += string.length + 1;\r\n      });\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function _environ_sizes_get(penviron_count, penviron_buf_size) {\r\n      var strings = getEnvStrings();\r\n      HEAPU32[((penviron_count)>>2)] = strings.length;\r\n      var bufSize = 0;\r\n      strings.forEach(function(string) {\r\n        bufSize += string.length + 1;\r\n      });\r\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\r\n      return 0;\r\n    }\r\n\r\n\r\n  function _fd_close(fd) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.close(stream);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  function _fd_fdstat_get(fd, pbuf) {\r\n  try {\r\n  \r\n      var rightsBase = 0;\r\n      var rightsInheriting = 0;\r\n      var flags = 0;\r\n      {\r\n        var stream = SYSCALLS.getStreamFromFD(fd);\r\n        // All character devices are terminals (other things a Linux system would\r\n        // assume is a character device, like the mouse, we have special APIs for).\r\n        var type = stream.tty ? 2 :\r\n                   FS.isDir(stream.mode) ? 3 :\r\n                   FS.isLink(stream.mode) ? 7 :\r\n                   4;\r\n      }\r\n      HEAP8[((pbuf)>>0)] = type;\r\n      HEAP16[(((pbuf)+(2))>>1)] = flags;\r\n      (tempI64 = [rightsBase>>>0,(tempDouble=rightsBase,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(8))>>2)] = tempI64[0],HEAP32[(((pbuf)+(12))>>2)] = tempI64[1]);\r\n      (tempI64 = [rightsInheriting>>>0,(tempDouble=rightsInheriting,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(16))>>2)] = tempI64[0],HEAP32[(((pbuf)+(20))>>2)] = tempI64[1]);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  function doReadv(stream, iov, iovcnt, offset) {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.read(stream, HEAP8,ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (curr < len) break; // nothing more to read\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n  \r\n  function _fd_read(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doReadv(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\r\n  try {\r\n  \r\n      var offset = convertI32PairToI53Checked(offset_low, offset_high); if (isNaN(offset)) return 61;\r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.llseek(stream, offset, whence);\r\n      (tempI64 = [stream.position>>>0,(tempDouble=stream.position,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((newOffset)>>2)] = tempI64[0],HEAP32[(((newOffset)+(4))>>2)] = tempI64[1]);\r\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  function doWritev(stream, iov, iovcnt, offset) {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.write(stream, HEAP8,ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n  \r\n  function _fd_write(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doWritev(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n\r\n  \r\n  function arraySum(array, index) {\r\n      var sum = 0;\r\n      for (var i = 0; i <= index; sum += array[i++]) {\r\n        // no-op\r\n      }\r\n      return sum;\r\n    }\r\n  \r\n  \r\n  var MONTH_DAYS_LEAP = [31,29,31,30,31,30,31,31,30,31,30,31];\r\n  \r\n  var MONTH_DAYS_REGULAR = [31,28,31,30,31,30,31,31,30,31,30,31];\r\n  function addDays(date, days) {\r\n      var newDate = new Date(date.getTime());\r\n      while (days > 0) {\r\n        var leap = isLeapYear(newDate.getFullYear());\r\n        var currentMonth = newDate.getMonth();\r\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\r\n  \r\n        if (days > daysInCurrentMonth-newDate.getDate()) {\r\n          // we spill over to next month\r\n          days -= (daysInCurrentMonth-newDate.getDate()+1);\r\n          newDate.setDate(1);\r\n          if (currentMonth < 11) {\r\n            newDate.setMonth(currentMonth+1)\r\n          } else {\r\n            newDate.setMonth(0);\r\n            newDate.setFullYear(newDate.getFullYear()+1);\r\n          }\r\n        } else {\r\n          // we stay in current month\r\n          newDate.setDate(newDate.getDate()+days);\r\n          return newDate;\r\n        }\r\n      }\r\n  \r\n      return newDate;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  function writeArrayToMemory(array, buffer) {\r\n      HEAP8.set(array, buffer);\r\n    }\r\n  \r\n  function _strftime(s, maxsize, format, tm) {\r\n      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);\r\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html\r\n  \r\n      var tm_zone = HEAP32[(((tm)+(40))>>2)];\r\n  \r\n      var date = {\r\n        tm_sec: HEAP32[((tm)>>2)],\r\n        tm_min: HEAP32[(((tm)+(4))>>2)],\r\n        tm_hour: HEAP32[(((tm)+(8))>>2)],\r\n        tm_mday: HEAP32[(((tm)+(12))>>2)],\r\n        tm_mon: HEAP32[(((tm)+(16))>>2)],\r\n        tm_year: HEAP32[(((tm)+(20))>>2)],\r\n        tm_wday: HEAP32[(((tm)+(24))>>2)],\r\n        tm_yday: HEAP32[(((tm)+(28))>>2)],\r\n        tm_isdst: HEAP32[(((tm)+(32))>>2)],\r\n        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],\r\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''\r\n      };\r\n  \r\n      var pattern = UTF8ToString(format);\r\n  \r\n      // expand format\r\n      var EXPANSION_RULES_1 = {\r\n        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013\r\n        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y\r\n        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d\r\n        '%h': '%b',                       // Equivalent to %b\r\n        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation\r\n        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation\r\n        '%T': '%H:%M:%S',                 // Replaced by the time\r\n        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation\r\n        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation\r\n        // Modified Conversion Specifiers\r\n        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.\r\n        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.\r\n        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.\r\n        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.\r\n        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.\r\n        '%EY': '%Y',                      // Replaced by the full alternative year representation.\r\n        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.\r\n        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.\r\n        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.\r\n        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.\r\n        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.\r\n        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.\r\n        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.\r\n        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).\r\n        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.\r\n        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.\r\n        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.\r\n        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.\r\n        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.\r\n      };\r\n      for (var rule in EXPANSION_RULES_1) {\r\n        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\r\n      }\r\n  \r\n      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  \r\n      function leadingSomething(value, digits, character) {\r\n        var str = typeof value == 'number' ? value.toString() : (value || '');\r\n        while (str.length < digits) {\r\n          str = character[0]+str;\r\n        }\r\n        return str;\r\n      }\r\n  \r\n      function leadingNulls(value, digits) {\r\n        return leadingSomething(value, digits, '0');\r\n      }\r\n  \r\n      function compareByDay(date1, date2) {\r\n        function sgn(value) {\r\n          return value < 0 ? -1 : (value > 0 ? 1 : 0);\r\n        }\r\n  \r\n        var compare;\r\n        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {\r\n          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {\r\n            compare = sgn(date1.getDate()-date2.getDate());\r\n          }\r\n        }\r\n        return compare;\r\n      }\r\n  \r\n      function getFirstWeekStartDate(janFourth) {\r\n          switch (janFourth.getDay()) {\r\n            case 0: // Sunday\r\n              return new Date(janFourth.getFullYear()-1, 11, 29);\r\n            case 1: // Monday\r\n              return janFourth;\r\n            case 2: // Tuesday\r\n              return new Date(janFourth.getFullYear(), 0, 3);\r\n            case 3: // Wednesday\r\n              return new Date(janFourth.getFullYear(), 0, 2);\r\n            case 4: // Thursday\r\n              return new Date(janFourth.getFullYear(), 0, 1);\r\n            case 5: // Friday\r\n              return new Date(janFourth.getFullYear()-1, 11, 31);\r\n            case 6: // Saturday\r\n              return new Date(janFourth.getFullYear()-1, 11, 30);\r\n          }\r\n      }\r\n  \r\n      function getWeekBasedYear(date) {\r\n          var thisDate = addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);\r\n  \r\n          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\r\n          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);\r\n  \r\n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\r\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\r\n  \r\n          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\r\n            // this date is after the start of the first week of this year\r\n            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\r\n              return thisDate.getFullYear()+1;\r\n            }\r\n            return thisDate.getFullYear();\r\n          }\r\n          return thisDate.getFullYear()-1;\r\n      }\r\n  \r\n      var EXPANSION_RULES_2 = {\r\n        '%a': function(date) {\r\n          return WEEKDAYS[date.tm_wday].substring(0,3);\r\n        },\r\n        '%A': function(date) {\r\n          return WEEKDAYS[date.tm_wday];\r\n        },\r\n        '%b': function(date) {\r\n          return MONTHS[date.tm_mon].substring(0,3);\r\n        },\r\n        '%B': function(date) {\r\n          return MONTHS[date.tm_mon];\r\n        },\r\n        '%C': function(date) {\r\n          var year = date.tm_year+1900;\r\n          return leadingNulls((year/100)|0,2);\r\n        },\r\n        '%d': function(date) {\r\n          return leadingNulls(date.tm_mday, 2);\r\n        },\r\n        '%e': function(date) {\r\n          return leadingSomething(date.tm_mday, 2, ' ');\r\n        },\r\n        '%g': function(date) {\r\n          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.\r\n          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes\r\n          // January 4th, which is also the week that includes the first Thursday of the year, and\r\n          // is also the first week that contains at least four days in the year.\r\n          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of\r\n          // the last week of the preceding year; thus, for Saturday 2nd January 1999,\r\n          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,\r\n          // or 31st is a Monday, it and any following days are part of week 1 of the following year.\r\n          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.\r\n  \r\n          return getWeekBasedYear(date).toString().substring(2);\r\n        },\r\n        '%G': function(date) {\r\n          return getWeekBasedYear(date);\r\n        },\r\n        '%H': function(date) {\r\n          return leadingNulls(date.tm_hour, 2);\r\n        },\r\n        '%I': function(date) {\r\n          var twelveHour = date.tm_hour;\r\n          if (twelveHour == 0) twelveHour = 12;\r\n          else if (twelveHour > 12) twelveHour -= 12;\r\n          return leadingNulls(twelveHour, 2);\r\n        },\r\n        '%j': function(date) {\r\n          // Day of the year (001-366)\r\n          return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year+1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon-1), 3);\r\n        },\r\n        '%m': function(date) {\r\n          return leadingNulls(date.tm_mon+1, 2);\r\n        },\r\n        '%M': function(date) {\r\n          return leadingNulls(date.tm_min, 2);\r\n        },\r\n        '%n': function() {\r\n          return '\\n';\r\n        },\r\n        '%p': function(date) {\r\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\r\n            return 'AM';\r\n          }\r\n          return 'PM';\r\n        },\r\n        '%S': function(date) {\r\n          return leadingNulls(date.tm_sec, 2);\r\n        },\r\n        '%t': function() {\r\n          return '\\t';\r\n        },\r\n        '%u': function(date) {\r\n          return date.tm_wday || 7;\r\n        },\r\n        '%U': function(date) {\r\n          var days = date.tm_yday + 7 - date.tm_wday;\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%V': function(date) {\r\n          // Replaced by the week number of the year (Monday as the first day of the week)\r\n          // as a decimal number [01,53]. If the week containing 1 January has four\r\n          // or more days in the new year, then it is considered week 1.\r\n          // Otherwise, it is the last week of the previous year, and the next week is week 1.\r\n          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]\r\n          var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7 ) / 7);\r\n          // If 1 Jan is just 1-3 days past Monday, the previous week\r\n          // is also in this year.\r\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\r\n            val++;\r\n          }\r\n          if (!val) {\r\n            val = 52;\r\n            // If 31 December of prev year a Thursday, or Friday of a\r\n            // leap year, then the prev year has 53 weeks.\r\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\r\n            if (dec31 == 4 || (dec31 == 5 && isLeapYear(date.tm_year%400-1))) {\r\n              val++;\r\n            }\r\n          } else if (val == 53) {\r\n            // If 1 January is not a Thursday, and not a Wednesday of a\r\n            // leap year, then this year has only 52 weeks.\r\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\r\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year)))\r\n              val = 1;\r\n          }\r\n          return leadingNulls(val, 2);\r\n        },\r\n        '%w': function(date) {\r\n          return date.tm_wday;\r\n        },\r\n        '%W': function(date) {\r\n          var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%y': function(date) {\r\n          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]\r\n          return (date.tm_year+1900).toString().substring(2);\r\n        },\r\n        '%Y': function(date) {\r\n          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]\r\n          return date.tm_year+1900;\r\n        },\r\n        '%z': function(date) {\r\n          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).\r\n          // For example, \"-0430\" means 4 hours 30 minutes behind UTC (west of Greenwich).\r\n          var off = date.tm_gmtoff;\r\n          var ahead = off >= 0;\r\n          off = Math.abs(off) / 60;\r\n          // convert from minutes into hhmm format (which means 60 minutes = 100 units)\r\n          off = (off / 60)*100 + (off % 60);\r\n          return (ahead ? '+' : '-') + String(\"0000\" + off).slice(-4);\r\n        },\r\n        '%Z': function(date) {\r\n          return date.tm_zone;\r\n        },\r\n        '%%': function() {\r\n          return '%';\r\n        }\r\n      };\r\n  \r\n      // Replace %% with a pair of NULLs (which cannot occur in a C string), then\r\n      // re-inject them after processing.\r\n      pattern = pattern.replace(/%%/g, '\\0\\0')\r\n      for (var rule in EXPANSION_RULES_2) {\r\n        if (pattern.includes(rule)) {\r\n          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\r\n        }\r\n      }\r\n      pattern = pattern.replace(/\\0\\0/g, '%')\r\n  \r\n      var bytes = intArrayFromString(pattern, false);\r\n      if (bytes.length > maxsize) {\r\n        return 0;\r\n      }\r\n  \r\n      writeArrayToMemory(bytes, s);\r\n      return bytes.length-1;\r\n    }\r\n\r\n  function _strftime_l(s, maxsize, format, tm, loc) {\r\n      return _strftime(s, maxsize, format, tm); // no locale support yet\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  function runAndAbortIfError(func) {\r\n      try {\r\n        return func();\r\n      } catch (e) {\r\n        abort(e);\r\n      }\r\n    }\r\n  \r\n  \r\n  function sigToWasmTypes(sig) {\r\n      var typeNames = {\r\n        'i': 'i32',\r\n        // i64 values will be split into two i32s.\r\n        'j': 'i32',\r\n        'f': 'f32',\r\n        'd': 'f64',\r\n        'p': 'i32',\r\n      };\r\n      var type = {\r\n        parameters: [],\r\n        results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\r\n      };\r\n      for (var i = 1; i < sig.length; ++i) {\r\n        type.parameters.push(typeNames[sig[i]]);\r\n        if (sig[i] === 'j') {\r\n          type.parameters.push('i32');\r\n        }\r\n      }\r\n      return type;\r\n    }\r\n  \r\n  function runtimeKeepalivePush() {\r\n      runtimeKeepaliveCounter += 1;\r\n    }\r\n  \r\n  function runtimeKeepalivePop() {\r\n      runtimeKeepaliveCounter -= 1;\r\n    }\r\n  \r\n  \r\n  var Asyncify = {instrumentWasmImports:function(imports) {\r\n        var ASYNCIFY_IMPORTS = [\"invoke_*\",\"fd_sync\",\"__wasi_fd_sync\",\"__asyncjs__*\",\"emscripten_idb_load\",\"emscripten_idb_store\",\"emscripten_idb_delete\",\"emscripten_idb_exists\",\"emscripten_idb_load_blob\",\"emscripten_idb_store_blob\",\"emscripten_sleep\",\"emscripten_wget\",\"emscripten_wget_data\",\"emscripten_scan_registers\",\"emscripten_lazy_load_code\",\"_load_secondary_module\",\"emscripten_fiber_swap\"];\r\n        for (var x in imports) {\r\n          (function(x) {\r\n            var original = imports[x];\r\n            var sig = original.sig;\r\n            if (typeof original == 'function') {\r\n              var isAsyncifyImport = original.isAsync ||\r\n                                     ASYNCIFY_IMPORTS.indexOf(x) >= 0 ||\r\n                                     x.startsWith('__asyncjs__');\r\n            }\r\n          })(x);\r\n        }\r\n      },instrumentWasmExports:function(exports) {\r\n        var ret = {};\r\n        for (var x in exports) {\r\n          (function(x) {\r\n            var original = exports[x];\r\n            if (typeof original == 'function') {\r\n              ret[x] = function() {\r\n                Asyncify.exportCallStack.push(x);\r\n                try {\r\n                  return original.apply(null, arguments);\r\n                } finally {\r\n                  if (!ABORT) {\r\n                    var y = Asyncify.exportCallStack.pop();\r\n                    assert(y === x);\r\n                    Asyncify.maybeStopUnwind();\r\n                  }\r\n                }\r\n              };\r\n            } else {\r\n              ret[x] = original;\r\n            }\r\n          })(x);\r\n        }\r\n        return ret;\r\n      },State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId:function(funcName) {\r\n        var id = Asyncify.callStackNameToId[funcName];\r\n        if (id === undefined) {\r\n          id = Asyncify.callStackId++;\r\n          Asyncify.callStackNameToId[funcName] = id;\r\n          Asyncify.callStackIdToName[id] = funcName;\r\n        }\r\n        return id;\r\n      },maybeStopUnwind:function() {\r\n        if (Asyncify.currData &&\r\n            Asyncify.state === Asyncify.State.Unwinding &&\r\n            Asyncify.exportCallStack.length === 0) {\r\n          // We just finished unwinding.\r\n          // Be sure to set the state before calling any other functions to avoid\r\n          // possible infinite recursion here (For example in debug pthread builds\r\n          // the dbg() function itself can call back into WebAssembly to get the\r\n          // current pthread_self() pointer).\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          \r\n          // Keep the runtime alive so that a re-wind can be done later.\r\n          runAndAbortIfError(_asyncify_stop_unwind);\r\n          if (typeof Fibers != 'undefined') {\r\n            Fibers.trampoline();\r\n          }\r\n        }\r\n      },whenDone:function() {\r\n        return new Promise((resolve, reject) => {\r\n          Asyncify.asyncPromiseHandlers = {\r\n            resolve: resolve,\r\n            reject: reject\r\n          };\r\n        });\r\n      },allocateData:function() {\r\n        // An asyncify data structure has three fields:\r\n        //  0  current stack pos\r\n        //  4  max stack pos\r\n        //  8  id of function at bottom of the call stack (callStackIdToName[id] == name of js function)\r\n        //\r\n        // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\r\n        // We also embed a stack in the same memory region here, right next to the structure.\r\n        // This struct is also defined as asyncify_data_t in emscripten/fiber.h\r\n        var ptr = _malloc(12 + Asyncify.StackSize);\r\n        Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\r\n        Asyncify.setDataRewindFunc(ptr);\r\n        return ptr;\r\n      },setDataHeader:function(ptr, stack, stackSize) {\r\n        HEAP32[((ptr)>>2)] = stack;\r\n        HEAP32[(((ptr)+(4))>>2)] = stack + stackSize;\r\n      },setDataRewindFunc:function(ptr) {\r\n        var bottomOfCallStack = Asyncify.exportCallStack[0];\r\n        var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\r\n        HEAP32[(((ptr)+(8))>>2)] = rewindId;\r\n      },getDataRewindFunc:function(ptr) {\r\n        var id = HEAP32[(((ptr)+(8))>>2)];\r\n        var name = Asyncify.callStackIdToName[id];\r\n        var func = Module['asm'][name];\r\n        return func;\r\n      },doRewind:function(ptr) {\r\n        var start = Asyncify.getDataRewindFunc(ptr);\r\n        // Once we have rewound and the stack we no longer need to artificially\r\n        // keep the runtime alive.\r\n        \r\n        return start();\r\n      },handleSleep:function(startAsync) {\r\n        if (ABORT) return;\r\n        if (Asyncify.state === Asyncify.State.Normal) {\r\n          // Prepare to sleep. Call startAsync, and see what happens:\r\n          // if the code decided to call our callback synchronously,\r\n          // then no async operation was in fact begun, and we don't\r\n          // need to do anything.\r\n          var reachedCallback = false;\r\n          var reachedAfterCallback = false;\r\n          startAsync((handleSleepReturnValue = 0) => {\r\n            if (ABORT) return;\r\n            Asyncify.handleSleepReturnValue = handleSleepReturnValue;\r\n            reachedCallback = true;\r\n            if (!reachedAfterCallback) {\r\n              // We are happening synchronously, so no need for async.\r\n              return;\r\n            }\r\n            Asyncify.state = Asyncify.State.Rewinding;\r\n            runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.resume();\r\n            }\r\n            var asyncWasmReturnValue, isError = false;\r\n            try {\r\n              asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\r\n            } catch (err) {\r\n              asyncWasmReturnValue = err;\r\n              isError = true;\r\n            }\r\n            // Track whether the return value was handled by any promise handlers.\r\n            var handled = false;\r\n            if (!Asyncify.currData) {\r\n              // All asynchronous execution has finished.\r\n              // `asyncWasmReturnValue` now contains the final\r\n              // return value of the exported async WASM function.\r\n              //\r\n              // Note: `asyncWasmReturnValue` is distinct from\r\n              // `Asyncify.handleSleepReturnValue`.\r\n              // `Asyncify.handleSleepReturnValue` contains the return\r\n              // value of the last C function to have executed\r\n              // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\r\n              // contains the return value of the exported WASM function\r\n              // that may have called C functions that\r\n              // call `Asyncify.handleSleep()`.\r\n              var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\r\n              if (asyncPromiseHandlers) {\r\n                Asyncify.asyncPromiseHandlers = null;\r\n                (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\r\n                handled = true;\r\n              }\r\n            }\r\n            if (isError && !handled) {\r\n              // If there was an error and it was not handled by now, we have no choice but to\r\n              // rethrow that error into the global scope where it can be caught only by\r\n              // `onerror` or `onunhandledpromiserejection`.\r\n              throw asyncWasmReturnValue;\r\n            }\r\n          });\r\n          reachedAfterCallback = true;\r\n          if (!reachedCallback) {\r\n            // A true async operation was begun; start a sleep.\r\n            Asyncify.state = Asyncify.State.Unwinding;\r\n            // TODO: reuse, don't alloc/free every sleep\r\n            Asyncify.currData = Asyncify.allocateData();\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.pause();\r\n            }\r\n            runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\r\n          }\r\n        } else if (Asyncify.state === Asyncify.State.Rewinding) {\r\n          // Stop a resume.\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          runAndAbortIfError(_asyncify_stop_rewind);\r\n          _free(Asyncify.currData);\r\n          Asyncify.currData = null;\r\n          // Call all sleep callbacks now that the sleep-resume is all done.\r\n          Asyncify.sleepCallbacks.forEach((func) => callUserCallback(func));\r\n        } else {\r\n          abort('invalid state: ' + Asyncify.state);\r\n        }\r\n        return Asyncify.handleSleepReturnValue;\r\n      },handleAsync:function(startAsync) {\r\n        return Asyncify.handleSleep((wakeUp) => {\r\n          // TODO: add error handling as a second param when handleSleep implements it.\r\n          startAsync().then(wakeUp);\r\n        });\r\n      }};\r\n\r\n\r\n  var FSNode = /** @constructor */ function(parent, name, mode, rdev) {\r\n    if (!parent) {\r\n      parent = this;  // root node sets parent to itself\r\n    }\r\n    this.parent = parent;\r\n    this.mount = parent.mount;\r\n    this.mounted = null;\r\n    this.id = FS.nextInode++;\r\n    this.name = name;\r\n    this.mode = mode;\r\n    this.node_ops = {};\r\n    this.stream_ops = {};\r\n    this.rdev = rdev;\r\n  };\r\n  var readMode = 292/*292*/ | 73/*73*/;\r\n  var writeMode = 146/*146*/;\r\n  Object.defineProperties(FSNode.prototype, {\r\n   read: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & readMode) === readMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= readMode : this.mode &= ~readMode;\r\n    }\r\n   },\r\n   write: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & writeMode) === writeMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= writeMode : this.mode &= ~writeMode;\r\n    }\r\n   },\r\n   isFolder: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isDir(this.mode);\r\n    }\r\n   },\r\n   isDevice: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isChrdev(this.mode);\r\n    }\r\n   }\r\n  });\r\n  FS.FSNode = FSNode;\r\n  FS.staticInit();Module[\"FS_createPath\"] = FS.createPath;Module[\"FS_createDataFile\"] = FS.createDataFile;Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;Module[\"FS_unlink\"] = FS.unlink;Module[\"FS_createLazyFile\"] = FS.createLazyFile;Module[\"FS_createDevice\"] = FS.createDevice;;\r\n\r\n      // exports\r\n      Module[\"requestFullscreen\"] = function Module_requestFullscreen(lockPointer, resizeCanvas) { Browser.requestFullscreen(lockPointer, resizeCanvas) };\r\n      Module[\"requestAnimationFrame\"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };\r\n      Module[\"setCanvasSize\"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };\r\n      Module[\"pauseMainLoop\"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };\r\n      Module[\"resumeMainLoop\"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };\r\n      Module[\"getUserMedia\"] = function Module_getUserMedia() { Browser.getUserMedia() };\r\n      Module[\"createContext\"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) };\r\n      var preloadedImages = {};\r\n      var preloadedAudios = {};;\r\nvar GLctx;;\r\nfor (var i = 0; i < 32; ++i) tempFixedLengthArray.push(new Array(i));;\r\nvar miniTempWebGLFloatBuffersStorage = new Float32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n  miniTempWebGLFloatBuffers[i] = miniTempWebGLFloatBuffersStorage.subarray(0, i+1);\r\n  }\r\n  ;\r\nvar miniTempWebGLIntBuffersStorage = new Int32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n  miniTempWebGLIntBuffers[i] = miniTempWebGLIntBuffersStorage.subarray(0, i+1);\r\n  }\r\n  ;\r\n// include: base64Utils.js\r\n// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149\r\n\r\n// This code was written by Tyler Akins and has been placed in the\r\n// public domain.  It would be nice if you left this header intact.\r\n// Base64 code from Tyler Akins -- http://rumkin.com\r\n\r\n/**\r\n * Decodes a base64 string.\r\n * @param {string} input The string to decode.\r\n */\r\nvar decodeBase64 = typeof atob == 'function' ? atob : function (input) {\r\n  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\n  var output = '';\r\n  var chr1, chr2, chr3;\r\n  var enc1, enc2, enc3, enc4;\r\n  var i = 0;\r\n  // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\r\n  do {\r\n    enc1 = keyStr.indexOf(input.charAt(i++));\r\n    enc2 = keyStr.indexOf(input.charAt(i++));\r\n    enc3 = keyStr.indexOf(input.charAt(i++));\r\n    enc4 = keyStr.indexOf(input.charAt(i++));\r\n\r\n    chr1 = (enc1 << 2) | (enc2 >> 4);\r\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n    chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n    output = output + String.fromCharCode(chr1);\r\n\r\n    if (enc3 !== 64) {\r\n      output = output + String.fromCharCode(chr2);\r\n    }\r\n    if (enc4 !== 64) {\r\n      output = output + String.fromCharCode(chr3);\r\n    }\r\n  } while (i < input.length);\r\n  return output;\r\n};\r\n\r\n// Converts a string of base64 into a byte array.\r\n// Throws error on invalid input.\r\nfunction intArrayFromBase64(s) {\r\n\r\n  try {\r\n    var decoded = decodeBase64(s);\r\n    var bytes = new Uint8Array(decoded.length);\r\n    for (var i = 0 ; i < decoded.length ; ++i) {\r\n      bytes[i] = decoded.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n  } catch (_) {\r\n    throw new Error('Converting base64 string to bytes failed.');\r\n  }\r\n}\r\n\r\n// If filename is a base64 data URI, parses and returns data (Buffer on node,\r\n// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.\r\nfunction tryParseAsDataURI(filename) {\r\n  if (!isDataURI(filename)) {\r\n    return;\r\n  }\r\n\r\n  return intArrayFromBase64(filename.slice(dataURIPrefix.length));\r\n}\r\n\r\n\r\n// end include: base64Utils.js\r\nvar wasmImports = {\r\n  \"__cxa_throw\": ___cxa_throw,\r\n  \"__syscall_chmod\": ___syscall_chmod,\r\n  \"__syscall_fchmod\": ___syscall_fchmod,\r\n  \"__syscall_fcntl64\": ___syscall_fcntl64,\r\n  \"__syscall_fstat64\": ___syscall_fstat64,\r\n  \"__syscall_ftruncate64\": ___syscall_ftruncate64,\r\n  \"__syscall_getcwd\": ___syscall_getcwd,\r\n  \"__syscall_getdents64\": ___syscall_getdents64,\r\n  \"__syscall_ioctl\": ___syscall_ioctl,\r\n  \"__syscall_lstat64\": ___syscall_lstat64,\r\n  \"__syscall_mkdirat\": ___syscall_mkdirat,\r\n  \"__syscall_newfstatat\": ___syscall_newfstatat,\r\n  \"__syscall_openat\": ___syscall_openat,\r\n  \"__syscall_rmdir\": ___syscall_rmdir,\r\n  \"__syscall_stat64\": ___syscall_stat64,\r\n  \"__syscall_unlinkat\": ___syscall_unlinkat,\r\n  \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\r\n  \"_localtime_js\": __localtime_js,\r\n  \"_mktime_js\": __mktime_js,\r\n  \"_tzset_js\": __tzset_js,\r\n  \"abort\": _abort,\r\n  \"eglBindAPI\": _eglBindAPI,\r\n  \"eglChooseConfig\": _eglChooseConfig,\r\n  \"eglCreateContext\": _eglCreateContext,\r\n  \"eglCreateWindowSurface\": _eglCreateWindowSurface,\r\n  \"eglDestroyContext\": _eglDestroyContext,\r\n  \"eglDestroySurface\": _eglDestroySurface,\r\n  \"eglGetConfigAttrib\": _eglGetConfigAttrib,\r\n  \"eglGetDisplay\": _eglGetDisplay,\r\n  \"eglGetError\": _eglGetError,\r\n  \"eglInitialize\": _eglInitialize,\r\n  \"eglMakeCurrent\": _eglMakeCurrent,\r\n  \"eglQueryString\": _eglQueryString,\r\n  \"eglSwapBuffers\": _eglSwapBuffers,\r\n  \"eglSwapInterval\": _eglSwapInterval,\r\n  \"eglTerminate\": _eglTerminate,\r\n  \"eglWaitGL\": _eglWaitGL,\r\n  \"eglWaitNative\": _eglWaitNative,\r\n  \"emscripten_asm_const_int\": _emscripten_asm_const_int,\r\n  \"emscripten_asm_const_int_sync_on_main_thread\": _emscripten_asm_const_int_sync_on_main_thread,\r\n  \"emscripten_date_now\": _emscripten_date_now,\r\n  \"emscripten_enter_soft_fullscreen\": _emscripten_enter_soft_fullscreen,\r\n  \"emscripten_exit_fullscreen\": _emscripten_exit_fullscreen,\r\n  \"emscripten_exit_pointerlock\": _emscripten_exit_pointerlock,\r\n  \"emscripten_exit_soft_fullscreen\": _emscripten_exit_soft_fullscreen,\r\n  \"emscripten_get_device_pixel_ratio\": _emscripten_get_device_pixel_ratio,\r\n  \"emscripten_get_element_css_size\": _emscripten_get_element_css_size,\r\n  \"emscripten_get_gamepad_status\": _emscripten_get_gamepad_status,\r\n  \"emscripten_get_now\": _emscripten_get_now,\r\n  \"emscripten_get_num_gamepads\": _emscripten_get_num_gamepads,\r\n  \"emscripten_get_screen_size\": _emscripten_get_screen_size,\r\n  \"emscripten_glActiveTexture\": _emscripten_glActiveTexture,\r\n  \"emscripten_glAttachShader\": _emscripten_glAttachShader,\r\n  \"emscripten_glBeginQuery\": _emscripten_glBeginQuery,\r\n  \"emscripten_glBeginQueryEXT\": _emscripten_glBeginQueryEXT,\r\n  \"emscripten_glBeginTransformFeedback\": _emscripten_glBeginTransformFeedback,\r\n  \"emscripten_glBindAttribLocation\": _emscripten_glBindAttribLocation,\r\n  \"emscripten_glBindBuffer\": _emscripten_glBindBuffer,\r\n  \"emscripten_glBindBufferBase\": _emscripten_glBindBufferBase,\r\n  \"emscripten_glBindBufferRange\": _emscripten_glBindBufferRange,\r\n  \"emscripten_glBindFramebuffer\": _emscripten_glBindFramebuffer,\r\n  \"emscripten_glBindRenderbuffer\": _emscripten_glBindRenderbuffer,\r\n  \"emscripten_glBindSampler\": _emscripten_glBindSampler,\r\n  \"emscripten_glBindTexture\": _emscripten_glBindTexture,\r\n  \"emscripten_glBindTransformFeedback\": _emscripten_glBindTransformFeedback,\r\n  \"emscripten_glBindVertexArray\": _emscripten_glBindVertexArray,\r\n  \"emscripten_glBindVertexArrayOES\": _emscripten_glBindVertexArrayOES,\r\n  \"emscripten_glBlendColor\": _emscripten_glBlendColor,\r\n  \"emscripten_glBlendEquation\": _emscripten_glBlendEquation,\r\n  \"emscripten_glBlendEquationSeparate\": _emscripten_glBlendEquationSeparate,\r\n  \"emscripten_glBlendFunc\": _emscripten_glBlendFunc,\r\n  \"emscripten_glBlendFuncSeparate\": _emscripten_glBlendFuncSeparate,\r\n  \"emscripten_glBlitFramebuffer\": _emscripten_glBlitFramebuffer,\r\n  \"emscripten_glBufferData\": _emscripten_glBufferData,\r\n  \"emscripten_glBufferSubData\": _emscripten_glBufferSubData,\r\n  \"emscripten_glCheckFramebufferStatus\": _emscripten_glCheckFramebufferStatus,\r\n  \"emscripten_glClear\": _emscripten_glClear,\r\n  \"emscripten_glClearBufferfi\": _emscripten_glClearBufferfi,\r\n  \"emscripten_glClearBufferfv\": _emscripten_glClearBufferfv,\r\n  \"emscripten_glClearBufferiv\": _emscripten_glClearBufferiv,\r\n  \"emscripten_glClearBufferuiv\": _emscripten_glClearBufferuiv,\r\n  \"emscripten_glClearColor\": _emscripten_glClearColor,\r\n  \"emscripten_glClearDepthf\": _emscripten_glClearDepthf,\r\n  \"emscripten_glClearStencil\": _emscripten_glClearStencil,\r\n  \"emscripten_glClientWaitSync\": _emscripten_glClientWaitSync,\r\n  \"emscripten_glColorMask\": _emscripten_glColorMask,\r\n  \"emscripten_glCompileShader\": _emscripten_glCompileShader,\r\n  \"emscripten_glCompressedTexImage2D\": _emscripten_glCompressedTexImage2D,\r\n  \"emscripten_glCompressedTexImage3D\": _emscripten_glCompressedTexImage3D,\r\n  \"emscripten_glCompressedTexSubImage2D\": _emscripten_glCompressedTexSubImage2D,\r\n  \"emscripten_glCompressedTexSubImage3D\": _emscripten_glCompressedTexSubImage3D,\r\n  \"emscripten_glCopyBufferSubData\": _emscripten_glCopyBufferSubData,\r\n  \"emscripten_glCopyTexImage2D\": _emscripten_glCopyTexImage2D,\r\n  \"emscripten_glCopyTexSubImage2D\": _emscripten_glCopyTexSubImage2D,\r\n  \"emscripten_glCopyTexSubImage3D\": _emscripten_glCopyTexSubImage3D,\r\n  \"emscripten_glCreateProgram\": _emscripten_glCreateProgram,\r\n  \"emscripten_glCreateShader\": _emscripten_glCreateShader,\r\n  \"emscripten_glCullFace\": _emscripten_glCullFace,\r\n  \"emscripten_glDeleteBuffers\": _emscripten_glDeleteBuffers,\r\n  \"emscripten_glDeleteFramebuffers\": _emscripten_glDeleteFramebuffers,\r\n  \"emscripten_glDeleteProgram\": _emscripten_glDeleteProgram,\r\n  \"emscripten_glDeleteQueries\": _emscripten_glDeleteQueries,\r\n  \"emscripten_glDeleteQueriesEXT\": _emscripten_glDeleteQueriesEXT,\r\n  \"emscripten_glDeleteRenderbuffers\": _emscripten_glDeleteRenderbuffers,\r\n  \"emscripten_glDeleteSamplers\": _emscripten_glDeleteSamplers,\r\n  \"emscripten_glDeleteShader\": _emscripten_glDeleteShader,\r\n  \"emscripten_glDeleteSync\": _emscripten_glDeleteSync,\r\n  \"emscripten_glDeleteTextures\": _emscripten_glDeleteTextures,\r\n  \"emscripten_glDeleteTransformFeedbacks\": _emscripten_glDeleteTransformFeedbacks,\r\n  \"emscripten_glDeleteVertexArrays\": _emscripten_glDeleteVertexArrays,\r\n  \"emscripten_glDeleteVertexArraysOES\": _emscripten_glDeleteVertexArraysOES,\r\n  \"emscripten_glDepthFunc\": _emscripten_glDepthFunc,\r\n  \"emscripten_glDepthMask\": _emscripten_glDepthMask,\r\n  \"emscripten_glDepthRangef\": _emscripten_glDepthRangef,\r\n  \"emscripten_glDetachShader\": _emscripten_glDetachShader,\r\n  \"emscripten_glDisable\": _emscripten_glDisable,\r\n  \"emscripten_glDisableVertexAttribArray\": _emscripten_glDisableVertexAttribArray,\r\n  \"emscripten_glDrawArrays\": _emscripten_glDrawArrays,\r\n  \"emscripten_glDrawArraysInstanced\": _emscripten_glDrawArraysInstanced,\r\n  \"emscripten_glDrawArraysInstancedANGLE\": _emscripten_glDrawArraysInstancedANGLE,\r\n  \"emscripten_glDrawArraysInstancedARB\": _emscripten_glDrawArraysInstancedARB,\r\n  \"emscripten_glDrawArraysInstancedEXT\": _emscripten_glDrawArraysInstancedEXT,\r\n  \"emscripten_glDrawArraysInstancedNV\": _emscripten_glDrawArraysInstancedNV,\r\n  \"emscripten_glDrawBuffers\": _emscripten_glDrawBuffers,\r\n  \"emscripten_glDrawBuffersEXT\": _emscripten_glDrawBuffersEXT,\r\n  \"emscripten_glDrawBuffersWEBGL\": _emscripten_glDrawBuffersWEBGL,\r\n  \"emscripten_glDrawElements\": _emscripten_glDrawElements,\r\n  \"emscripten_glDrawElementsInstanced\": _emscripten_glDrawElementsInstanced,\r\n  \"emscripten_glDrawElementsInstancedANGLE\": _emscripten_glDrawElementsInstancedANGLE,\r\n  \"emscripten_glDrawElementsInstancedARB\": _emscripten_glDrawElementsInstancedARB,\r\n  \"emscripten_glDrawElementsInstancedEXT\": _emscripten_glDrawElementsInstancedEXT,\r\n  \"emscripten_glDrawElementsInstancedNV\": _emscripten_glDrawElementsInstancedNV,\r\n  \"emscripten_glDrawRangeElements\": _emscripten_glDrawRangeElements,\r\n  \"emscripten_glEnable\": _emscripten_glEnable,\r\n  \"emscripten_glEnableVertexAttribArray\": _emscripten_glEnableVertexAttribArray,\r\n  \"emscripten_glEndQuery\": _emscripten_glEndQuery,\r\n  \"emscripten_glEndQueryEXT\": _emscripten_glEndQueryEXT,\r\n  \"emscripten_glEndTransformFeedback\": _emscripten_glEndTransformFeedback,\r\n  \"emscripten_glFenceSync\": _emscripten_glFenceSync,\r\n  \"emscripten_glFinish\": _emscripten_glFinish,\r\n  \"emscripten_glFlush\": _emscripten_glFlush,\r\n  \"emscripten_glFramebufferRenderbuffer\": _emscripten_glFramebufferRenderbuffer,\r\n  \"emscripten_glFramebufferTexture2D\": _emscripten_glFramebufferTexture2D,\r\n  \"emscripten_glFramebufferTextureLayer\": _emscripten_glFramebufferTextureLayer,\r\n  \"emscripten_glFrontFace\": _emscripten_glFrontFace,\r\n  \"emscripten_glGenBuffers\": _emscripten_glGenBuffers,\r\n  \"emscripten_glGenFramebuffers\": _emscripten_glGenFramebuffers,\r\n  \"emscripten_glGenQueries\": _emscripten_glGenQueries,\r\n  \"emscripten_glGenQueriesEXT\": _emscripten_glGenQueriesEXT,\r\n  \"emscripten_glGenRenderbuffers\": _emscripten_glGenRenderbuffers,\r\n  \"emscripten_glGenSamplers\": _emscripten_glGenSamplers,\r\n  \"emscripten_glGenTextures\": _emscripten_glGenTextures,\r\n  \"emscripten_glGenTransformFeedbacks\": _emscripten_glGenTransformFeedbacks,\r\n  \"emscripten_glGenVertexArrays\": _emscripten_glGenVertexArrays,\r\n  \"emscripten_glGenVertexArraysOES\": _emscripten_glGenVertexArraysOES,\r\n  \"emscripten_glGenerateMipmap\": _emscripten_glGenerateMipmap,\r\n  \"emscripten_glGetActiveAttrib\": _emscripten_glGetActiveAttrib,\r\n  \"emscripten_glGetActiveUniform\": _emscripten_glGetActiveUniform,\r\n  \"emscripten_glGetActiveUniformBlockName\": _emscripten_glGetActiveUniformBlockName,\r\n  \"emscripten_glGetActiveUniformBlockiv\": _emscripten_glGetActiveUniformBlockiv,\r\n  \"emscripten_glGetActiveUniformsiv\": _emscripten_glGetActiveUniformsiv,\r\n  \"emscripten_glGetAttachedShaders\": _emscripten_glGetAttachedShaders,\r\n  \"emscripten_glGetAttribLocation\": _emscripten_glGetAttribLocation,\r\n  \"emscripten_glGetBooleanv\": _emscripten_glGetBooleanv,\r\n  \"emscripten_glGetBufferParameteri64v\": _emscripten_glGetBufferParameteri64v,\r\n  \"emscripten_glGetBufferParameteriv\": _emscripten_glGetBufferParameteriv,\r\n  \"emscripten_glGetError\": _emscripten_glGetError,\r\n  \"emscripten_glGetFloatv\": _emscripten_glGetFloatv,\r\n  \"emscripten_glGetFragDataLocation\": _emscripten_glGetFragDataLocation,\r\n  \"emscripten_glGetFramebufferAttachmentParameteriv\": _emscripten_glGetFramebufferAttachmentParameteriv,\r\n  \"emscripten_glGetInteger64i_v\": _emscripten_glGetInteger64i_v,\r\n  \"emscripten_glGetInteger64v\": _emscripten_glGetInteger64v,\r\n  \"emscripten_glGetIntegeri_v\": _emscripten_glGetIntegeri_v,\r\n  \"emscripten_glGetIntegerv\": _emscripten_glGetIntegerv,\r\n  \"emscripten_glGetInternalformativ\": _emscripten_glGetInternalformativ,\r\n  \"emscripten_glGetProgramBinary\": _emscripten_glGetProgramBinary,\r\n  \"emscripten_glGetProgramInfoLog\": _emscripten_glGetProgramInfoLog,\r\n  \"emscripten_glGetProgramiv\": _emscripten_glGetProgramiv,\r\n  \"emscripten_glGetQueryObjecti64vEXT\": _emscripten_glGetQueryObjecti64vEXT,\r\n  \"emscripten_glGetQueryObjectivEXT\": _emscripten_glGetQueryObjectivEXT,\r\n  \"emscripten_glGetQueryObjectui64vEXT\": _emscripten_glGetQueryObjectui64vEXT,\r\n  \"emscripten_glGetQueryObjectuiv\": _emscripten_glGetQueryObjectuiv,\r\n  \"emscripten_glGetQueryObjectuivEXT\": _emscripten_glGetQueryObjectuivEXT,\r\n  \"emscripten_glGetQueryiv\": _emscripten_glGetQueryiv,\r\n  \"emscripten_glGetQueryivEXT\": _emscripten_glGetQueryivEXT,\r\n  \"emscripten_glGetRenderbufferParameteriv\": _emscripten_glGetRenderbufferParameteriv,\r\n  \"emscripten_glGetSamplerParameterfv\": _emscripten_glGetSamplerParameterfv,\r\n  \"emscripten_glGetSamplerParameteriv\": _emscripten_glGetSamplerParameteriv,\r\n  \"emscripten_glGetShaderInfoLog\": _emscripten_glGetShaderInfoLog,\r\n  \"emscripten_glGetShaderPrecisionFormat\": _emscripten_glGetShaderPrecisionFormat,\r\n  \"emscripten_glGetShaderSource\": _emscripten_glGetShaderSource,\r\n  \"emscripten_glGetShaderiv\": _emscripten_glGetShaderiv,\r\n  \"emscripten_glGetString\": _emscripten_glGetString,\r\n  \"emscripten_glGetStringi\": _emscripten_glGetStringi,\r\n  \"emscripten_glGetSynciv\": _emscripten_glGetSynciv,\r\n  \"emscripten_glGetTexParameterfv\": _emscripten_glGetTexParameterfv,\r\n  \"emscripten_glGetTexParameteriv\": _emscripten_glGetTexParameteriv,\r\n  \"emscripten_glGetTransformFeedbackVarying\": _emscripten_glGetTransformFeedbackVarying,\r\n  \"emscripten_glGetUniformBlockIndex\": _emscripten_glGetUniformBlockIndex,\r\n  \"emscripten_glGetUniformIndices\": _emscripten_glGetUniformIndices,\r\n  \"emscripten_glGetUniformLocation\": _emscripten_glGetUniformLocation,\r\n  \"emscripten_glGetUniformfv\": _emscripten_glGetUniformfv,\r\n  \"emscripten_glGetUniformiv\": _emscripten_glGetUniformiv,\r\n  \"emscripten_glGetUniformuiv\": _emscripten_glGetUniformuiv,\r\n  \"emscripten_glGetVertexAttribIiv\": _emscripten_glGetVertexAttribIiv,\r\n  \"emscripten_glGetVertexAttribIuiv\": _emscripten_glGetVertexAttribIuiv,\r\n  \"emscripten_glGetVertexAttribPointerv\": _emscripten_glGetVertexAttribPointerv,\r\n  \"emscripten_glGetVertexAttribfv\": _emscripten_glGetVertexAttribfv,\r\n  \"emscripten_glGetVertexAttribiv\": _emscripten_glGetVertexAttribiv,\r\n  \"emscripten_glHint\": _emscripten_glHint,\r\n  \"emscripten_glInvalidateFramebuffer\": _emscripten_glInvalidateFramebuffer,\r\n  \"emscripten_glInvalidateSubFramebuffer\": _emscripten_glInvalidateSubFramebuffer,\r\n  \"emscripten_glIsBuffer\": _emscripten_glIsBuffer,\r\n  \"emscripten_glIsEnabled\": _emscripten_glIsEnabled,\r\n  \"emscripten_glIsFramebuffer\": _emscripten_glIsFramebuffer,\r\n  \"emscripten_glIsProgram\": _emscripten_glIsProgram,\r\n  \"emscripten_glIsQuery\": _emscripten_glIsQuery,\r\n  \"emscripten_glIsQueryEXT\": _emscripten_glIsQueryEXT,\r\n  \"emscripten_glIsRenderbuffer\": _emscripten_glIsRenderbuffer,\r\n  \"emscripten_glIsSampler\": _emscripten_glIsSampler,\r\n  \"emscripten_glIsShader\": _emscripten_glIsShader,\r\n  \"emscripten_glIsSync\": _emscripten_glIsSync,\r\n  \"emscripten_glIsTexture\": _emscripten_glIsTexture,\r\n  \"emscripten_glIsTransformFeedback\": _emscripten_glIsTransformFeedback,\r\n  \"emscripten_glIsVertexArray\": _emscripten_glIsVertexArray,\r\n  \"emscripten_glIsVertexArrayOES\": _emscripten_glIsVertexArrayOES,\r\n  \"emscripten_glLineWidth\": _emscripten_glLineWidth,\r\n  \"emscripten_glLinkProgram\": _emscripten_glLinkProgram,\r\n  \"emscripten_glPauseTransformFeedback\": _emscripten_glPauseTransformFeedback,\r\n  \"emscripten_glPixelStorei\": _emscripten_glPixelStorei,\r\n  \"emscripten_glPolygonOffset\": _emscripten_glPolygonOffset,\r\n  \"emscripten_glProgramBinary\": _emscripten_glProgramBinary,\r\n  \"emscripten_glProgramParameteri\": _emscripten_glProgramParameteri,\r\n  \"emscripten_glQueryCounterEXT\": _emscripten_glQueryCounterEXT,\r\n  \"emscripten_glReadBuffer\": _emscripten_glReadBuffer,\r\n  \"emscripten_glReadPixels\": _emscripten_glReadPixels,\r\n  \"emscripten_glReleaseShaderCompiler\": _emscripten_glReleaseShaderCompiler,\r\n  \"emscripten_glRenderbufferStorage\": _emscripten_glRenderbufferStorage,\r\n  \"emscripten_glRenderbufferStorageMultisample\": _emscripten_glRenderbufferStorageMultisample,\r\n  \"emscripten_glResumeTransformFeedback\": _emscripten_glResumeTransformFeedback,\r\n  \"emscripten_glSampleCoverage\": _emscripten_glSampleCoverage,\r\n  \"emscripten_glSamplerParameterf\": _emscripten_glSamplerParameterf,\r\n  \"emscripten_glSamplerParameterfv\": _emscripten_glSamplerParameterfv,\r\n  \"emscripten_glSamplerParameteri\": _emscripten_glSamplerParameteri,\r\n  \"emscripten_glSamplerParameteriv\": _emscripten_glSamplerParameteriv,\r\n  \"emscripten_glScissor\": _emscripten_glScissor,\r\n  \"emscripten_glShaderBinary\": _emscripten_glShaderBinary,\r\n  \"emscripten_glShaderSource\": _emscripten_glShaderSource,\r\n  \"emscripten_glStencilFunc\": _emscripten_glStencilFunc,\r\n  \"emscripten_glStencilFuncSeparate\": _emscripten_glStencilFuncSeparate,\r\n  \"emscripten_glStencilMask\": _emscripten_glStencilMask,\r\n  \"emscripten_glStencilMaskSeparate\": _emscripten_glStencilMaskSeparate,\r\n  \"emscripten_glStencilOp\": _emscripten_glStencilOp,\r\n  \"emscripten_glStencilOpSeparate\": _emscripten_glStencilOpSeparate,\r\n  \"emscripten_glTexImage2D\": _emscripten_glTexImage2D,\r\n  \"emscripten_glTexImage3D\": _emscripten_glTexImage3D,\r\n  \"emscripten_glTexParameterf\": _emscripten_glTexParameterf,\r\n  \"emscripten_glTexParameterfv\": _emscripten_glTexParameterfv,\r\n  \"emscripten_glTexParameteri\": _emscripten_glTexParameteri,\r\n  \"emscripten_glTexParameteriv\": _emscripten_glTexParameteriv,\r\n  \"emscripten_glTexStorage2D\": _emscripten_glTexStorage2D,\r\n  \"emscripten_glTexStorage3D\": _emscripten_glTexStorage3D,\r\n  \"emscripten_glTexSubImage2D\": _emscripten_glTexSubImage2D,\r\n  \"emscripten_glTexSubImage3D\": _emscripten_glTexSubImage3D,\r\n  \"emscripten_glTransformFeedbackVaryings\": _emscripten_glTransformFeedbackVaryings,\r\n  \"emscripten_glUniform1f\": _emscripten_glUniform1f,\r\n  \"emscripten_glUniform1fv\": _emscripten_glUniform1fv,\r\n  \"emscripten_glUniform1i\": _emscripten_glUniform1i,\r\n  \"emscripten_glUniform1iv\": _emscripten_glUniform1iv,\r\n  \"emscripten_glUniform1ui\": _emscripten_glUniform1ui,\r\n  \"emscripten_glUniform1uiv\": _emscripten_glUniform1uiv,\r\n  \"emscripten_glUniform2f\": _emscripten_glUniform2f,\r\n  \"emscripten_glUniform2fv\": _emscripten_glUniform2fv,\r\n  \"emscripten_glUniform2i\": _emscripten_glUniform2i,\r\n  \"emscripten_glUniform2iv\": _emscripten_glUniform2iv,\r\n  \"emscripten_glUniform2ui\": _emscripten_glUniform2ui,\r\n  \"emscripten_glUniform2uiv\": _emscripten_glUniform2uiv,\r\n  \"emscripten_glUniform3f\": _emscripten_glUniform3f,\r\n  \"emscripten_glUniform3fv\": _emscripten_glUniform3fv,\r\n  \"emscripten_glUniform3i\": _emscripten_glUniform3i,\r\n  \"emscripten_glUniform3iv\": _emscripten_glUniform3iv,\r\n  \"emscripten_glUniform3ui\": _emscripten_glUniform3ui,\r\n  \"emscripten_glUniform3uiv\": _emscripten_glUniform3uiv,\r\n  \"emscripten_glUniform4f\": _emscripten_glUniform4f,\r\n  \"emscripten_glUniform4fv\": _emscripten_glUniform4fv,\r\n  \"emscripten_glUniform4i\": _emscripten_glUniform4i,\r\n  \"emscripten_glUniform4iv\": _emscripten_glUniform4iv,\r\n  \"emscripten_glUniform4ui\": _emscripten_glUniform4ui,\r\n  \"emscripten_glUniform4uiv\": _emscripten_glUniform4uiv,\r\n  \"emscripten_glUniformBlockBinding\": _emscripten_glUniformBlockBinding,\r\n  \"emscripten_glUniformMatrix2fv\": _emscripten_glUniformMatrix2fv,\r\n  \"emscripten_glUniformMatrix2x3fv\": _emscripten_glUniformMatrix2x3fv,\r\n  \"emscripten_glUniformMatrix2x4fv\": _emscripten_glUniformMatrix2x4fv,\r\n  \"emscripten_glUniformMatrix3fv\": _emscripten_glUniformMatrix3fv,\r\n  \"emscripten_glUniformMatrix3x2fv\": _emscripten_glUniformMatrix3x2fv,\r\n  \"emscripten_glUniformMatrix3x4fv\": _emscripten_glUniformMatrix3x4fv,\r\n  \"emscripten_glUniformMatrix4fv\": _emscripten_glUniformMatrix4fv,\r\n  \"emscripten_glUniformMatrix4x2fv\": _emscripten_glUniformMatrix4x2fv,\r\n  \"emscripten_glUniformMatrix4x3fv\": _emscripten_glUniformMatrix4x3fv,\r\n  \"emscripten_glUseProgram\": _emscripten_glUseProgram,\r\n  \"emscripten_glValidateProgram\": _emscripten_glValidateProgram,\r\n  \"emscripten_glVertexAttrib1f\": _emscripten_glVertexAttrib1f,\r\n  \"emscripten_glVertexAttrib1fv\": _emscripten_glVertexAttrib1fv,\r\n  \"emscripten_glVertexAttrib2f\": _emscripten_glVertexAttrib2f,\r\n  \"emscripten_glVertexAttrib2fv\": _emscripten_glVertexAttrib2fv,\r\n  \"emscripten_glVertexAttrib3f\": _emscripten_glVertexAttrib3f,\r\n  \"emscripten_glVertexAttrib3fv\": _emscripten_glVertexAttrib3fv,\r\n  \"emscripten_glVertexAttrib4f\": _emscripten_glVertexAttrib4f,\r\n  \"emscripten_glVertexAttrib4fv\": _emscripten_glVertexAttrib4fv,\r\n  \"emscripten_glVertexAttribDivisor\": _emscripten_glVertexAttribDivisor,\r\n  \"emscripten_glVertexAttribDivisorANGLE\": _emscripten_glVertexAttribDivisorANGLE,\r\n  \"emscripten_glVertexAttribDivisorARB\": _emscripten_glVertexAttribDivisorARB,\r\n  \"emscripten_glVertexAttribDivisorEXT\": _emscripten_glVertexAttribDivisorEXT,\r\n  \"emscripten_glVertexAttribDivisorNV\": _emscripten_glVertexAttribDivisorNV,\r\n  \"emscripten_glVertexAttribI4i\": _emscripten_glVertexAttribI4i,\r\n  \"emscripten_glVertexAttribI4iv\": _emscripten_glVertexAttribI4iv,\r\n  \"emscripten_glVertexAttribI4ui\": _emscripten_glVertexAttribI4ui,\r\n  \"emscripten_glVertexAttribI4uiv\": _emscripten_glVertexAttribI4uiv,\r\n  \"emscripten_glVertexAttribIPointer\": _emscripten_glVertexAttribIPointer,\r\n  \"emscripten_glVertexAttribPointer\": _emscripten_glVertexAttribPointer,\r\n  \"emscripten_glViewport\": _emscripten_glViewport,\r\n  \"emscripten_glWaitSync\": _emscripten_glWaitSync,\r\n  \"emscripten_has_asyncify\": _emscripten_has_asyncify,\r\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\r\n  \"emscripten_request_fullscreen_strategy\": _emscripten_request_fullscreen_strategy,\r\n  \"emscripten_request_pointerlock\": _emscripten_request_pointerlock,\r\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\r\n  \"emscripten_sample_gamepad_data\": _emscripten_sample_gamepad_data,\r\n  \"emscripten_set_beforeunload_callback_on_thread\": _emscripten_set_beforeunload_callback_on_thread,\r\n  \"emscripten_set_blur_callback_on_thread\": _emscripten_set_blur_callback_on_thread,\r\n  \"emscripten_set_canvas_element_size\": _emscripten_set_canvas_element_size,\r\n  \"emscripten_set_element_css_size\": _emscripten_set_element_css_size,\r\n  \"emscripten_set_focus_callback_on_thread\": _emscripten_set_focus_callback_on_thread,\r\n  \"emscripten_set_fullscreenchange_callback_on_thread\": _emscripten_set_fullscreenchange_callback_on_thread,\r\n  \"emscripten_set_gamepadconnected_callback_on_thread\": _emscripten_set_gamepadconnected_callback_on_thread,\r\n  \"emscripten_set_gamepaddisconnected_callback_on_thread\": _emscripten_set_gamepaddisconnected_callback_on_thread,\r\n  \"emscripten_set_keydown_callback_on_thread\": _emscripten_set_keydown_callback_on_thread,\r\n  \"emscripten_set_keypress_callback_on_thread\": _emscripten_set_keypress_callback_on_thread,\r\n  \"emscripten_set_keyup_callback_on_thread\": _emscripten_set_keyup_callback_on_thread,\r\n  \"emscripten_set_main_loop\": _emscripten_set_main_loop,\r\n  \"emscripten_set_mousedown_callback_on_thread\": _emscripten_set_mousedown_callback_on_thread,\r\n  \"emscripten_set_mouseenter_callback_on_thread\": _emscripten_set_mouseenter_callback_on_thread,\r\n  \"emscripten_set_mouseleave_callback_on_thread\": _emscripten_set_mouseleave_callback_on_thread,\r\n  \"emscripten_set_mousemove_callback_on_thread\": _emscripten_set_mousemove_callback_on_thread,\r\n  \"emscripten_set_mouseup_callback_on_thread\": _emscripten_set_mouseup_callback_on_thread,\r\n  \"emscripten_set_pointerlockchange_callback_on_thread\": _emscripten_set_pointerlockchange_callback_on_thread,\r\n  \"emscripten_set_resize_callback_on_thread\": _emscripten_set_resize_callback_on_thread,\r\n  \"emscripten_set_touchcancel_callback_on_thread\": _emscripten_set_touchcancel_callback_on_thread,\r\n  \"emscripten_set_touchend_callback_on_thread\": _emscripten_set_touchend_callback_on_thread,\r\n  \"emscripten_set_touchmove_callback_on_thread\": _emscripten_set_touchmove_callback_on_thread,\r\n  \"emscripten_set_touchstart_callback_on_thread\": _emscripten_set_touchstart_callback_on_thread,\r\n  \"emscripten_set_visibilitychange_callback_on_thread\": _emscripten_set_visibilitychange_callback_on_thread,\r\n  \"emscripten_set_wheel_callback_on_thread\": _emscripten_set_wheel_callback_on_thread,\r\n  \"emscripten_set_window_title\": _emscripten_set_window_title,\r\n  \"emscripten_sleep\": _emscripten_sleep,\r\n  \"environ_get\": _environ_get,\r\n  \"environ_sizes_get\": _environ_sizes_get,\r\n  \"exit\": _exit,\r\n  \"fd_close\": _fd_close,\r\n  \"fd_fdstat_get\": _fd_fdstat_get,\r\n  \"fd_read\": _fd_read,\r\n  \"fd_seek\": _fd_seek,\r\n  \"fd_write\": _fd_write,\r\n  \"glGetFloatv\": _glGetFloatv,\r\n  \"strftime\": _strftime,\r\n  \"strftime_l\": _strftime_l\r\n};\r\nvar asm = createWasm();\r\n/** @type {function(...*):?} */\r\nvar ___wasm_call_ctors = function() {\r\n  return (___wasm_call_ctors = Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _free = function() {\r\n  return (_free = Module[\"asm\"][\"free\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _malloc = function() {\r\n  return (_malloc = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___errno_location = function() {\r\n  return (___errno_location = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebSetFullscreen = Module[\"_I_WebSetFullscreen\"] = function() {\r\n  return (_I_WebSetFullscreen = Module[\"_I_WebSetFullscreen\"] = Module[\"asm\"][\"I_WebSetFullscreen\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebOpenGameMenu = Module[\"_I_WebOpenGameMenu\"] = function() {\r\n  return (_I_WebOpenGameMenu = Module[\"_I_WebOpenGameMenu\"] = Module[\"asm\"][\"I_WebOpenGameMenu\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebSyncScreenSize = Module[\"_I_WebSyncScreenSize\"] = function() {\r\n  return (_I_WebSyncScreenSize = Module[\"_I_WebSyncScreenSize\"] = Module[\"asm\"][\"I_WebSyncScreenSize\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebMain = Module[\"_I_WebMain\"] = function() {\r\n  return (_I_WebMain = Module[\"_I_WebMain\"] = Module[\"asm\"][\"I_WebMain\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _main = Module[\"_main\"] = function() {\r\n  return (_main = Module[\"_main\"] = Module[\"asm\"][\"__main_argc_argv\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_set_limits = function() {\r\n  return (_emscripten_stack_set_limits = Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_get_base = function() {\r\n  return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_get_end = function() {\r\n  return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackSave = function() {\r\n  return (stackSave = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackRestore = function() {\r\n  return (stackRestore = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackAlloc = function() {\r\n  return (stackAlloc = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___cxa_increment_exception_refcount = function() {\r\n  return (___cxa_increment_exception_refcount = Module[\"asm\"][\"__cxa_increment_exception_refcount\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___cxa_is_pointer_type = function() {\r\n  return (___cxa_is_pointer_type = Module[\"asm\"][\"__cxa_is_pointer_type\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vi = Module[\"dynCall_vi\"] = function() {\r\n  return (dynCall_vi = Module[\"dynCall_vi\"] = Module[\"asm\"][\"dynCall_vi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() {\r\n  return (dynCall_ii = Module[\"dynCall_ii\"] = Module[\"asm\"][\"dynCall_ii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iii = Module[\"dynCall_iii\"] = function() {\r\n  return (dynCall_iii = Module[\"dynCall_iii\"] = Module[\"asm\"][\"dynCall_iii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vif = Module[\"dynCall_vif\"] = function() {\r\n  return (dynCall_vif = Module[\"dynCall_vif\"] = Module[\"asm\"][\"dynCall_vif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vffff = Module[\"dynCall_vffff\"] = function() {\r\n  return (dynCall_vffff = Module[\"dynCall_vffff\"] = Module[\"asm\"][\"dynCall_vffff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vii = Module[\"dynCall_vii\"] = function() {\r\n  return (dynCall_vii = Module[\"dynCall_vii\"] = Module[\"asm\"][\"dynCall_vii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() {\r\n  return (dynCall_iiii = Module[\"dynCall_iiii\"] = Module[\"asm\"][\"dynCall_iiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viii = Module[\"dynCall_viii\"] = function() {\r\n  return (dynCall_viii = Module[\"dynCall_viii\"] = Module[\"asm\"][\"dynCall_viii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vfff = Module[\"dynCall_vfff\"] = function() {\r\n  return (dynCall_vfff = Module[\"dynCall_vfff\"] = Module[\"asm\"][\"dynCall_vfff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_v = Module[\"dynCall_v\"] = function() {\r\n  return (dynCall_v = Module[\"dynCall_v\"] = Module[\"asm\"][\"dynCall_v\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function() {\r\n  return (dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = Module[\"asm\"][\"dynCall_iiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = function() {\r\n  return (dynCall_viiii = Module[\"dynCall_viiii\"] = Module[\"asm\"][\"dynCall_viiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiid = Module[\"dynCall_iiid\"] = function() {\r\n  return (dynCall_iiid = Module[\"dynCall_iiid\"] = Module[\"asm\"][\"dynCall_iiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = function() {\r\n  return (dynCall_iiiii = Module[\"dynCall_iiiii\"] = Module[\"asm\"][\"dynCall_iiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iijii = Module[\"dynCall_iijii\"] = function() {\r\n  return (dynCall_iijii = Module[\"dynCall_iijii\"] = Module[\"asm\"][\"dynCall_iijii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vf = Module[\"dynCall_vf\"] = function() {\r\n  return (dynCall_vf = Module[\"dynCall_vf\"] = Module[\"asm\"][\"dynCall_vf\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viif = Module[\"dynCall_viif\"] = function() {\r\n  return (dynCall_viif = Module[\"dynCall_viif\"] = Module[\"asm\"][\"dynCall_viif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = function() {\r\n  return (dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vff = Module[\"dynCall_vff\"] = function() {\r\n  return (dynCall_vff = Module[\"dynCall_vff\"] = Module[\"asm\"][\"dynCall_vff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viffff = Module[\"dynCall_viffff\"] = function() {\r\n  return (dynCall_viffff = Module[\"dynCall_viffff\"] = Module[\"asm\"][\"dynCall_viffff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiji = Module[\"dynCall_iiji\"] = function() {\r\n  return (dynCall_iiji = Module[\"dynCall_iiji\"] = Module[\"asm\"][\"dynCall_iiji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iji = Module[\"dynCall_iji\"] = function() {\r\n  return (dynCall_iji = Module[\"dynCall_iji\"] = Module[\"asm\"][\"dynCall_iji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function() {\r\n  return (dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = Module[\"asm\"][\"dynCall_viiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = function() {\r\n  return (dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = Module[\"asm\"][\"dynCall_iidiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\r\n  return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"dynCall_jiji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\r\n  return (dynCall_ji = Module[\"dynCall_ji\"] = Module[\"asm\"][\"dynCall_ji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = function() {\r\n  return (dynCall_viiiii = Module[\"dynCall_viiiii\"] = Module[\"asm\"][\"dynCall_viiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_i = Module[\"dynCall_i\"] = function() {\r\n  return (dynCall_i = Module[\"dynCall_i\"] = Module[\"asm\"][\"dynCall_i\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vfi = Module[\"dynCall_vfi\"] = function() {\r\n  return (dynCall_vfi = Module[\"dynCall_vfi\"] = Module[\"asm\"][\"dynCall_vfi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viff = Module[\"dynCall_viff\"] = function() {\r\n  return (dynCall_viff = Module[\"dynCall_viff\"] = Module[\"asm\"][\"dynCall_viff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vifff = Module[\"dynCall_vifff\"] = function() {\r\n  return (dynCall_vifff = Module[\"dynCall_vifff\"] = Module[\"asm\"][\"dynCall_vifff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifi = Module[\"dynCall_viifi\"] = function() {\r\n  return (dynCall_viifi = Module[\"dynCall_viifi\"] = Module[\"asm\"][\"dynCall_viifi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifff = Module[\"dynCall_viifff\"] = function() {\r\n  return (dynCall_viifff = Module[\"dynCall_viifff\"] = Module[\"asm\"][\"dynCall_viifff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifffii = Module[\"dynCall_viifffii\"] = function() {\r\n  return (dynCall_viifffii = Module[\"dynCall_viifffii\"] = Module[\"asm\"][\"dynCall_viifffii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiifiiiii = Module[\"dynCall_viiiifiiiii\"] = function() {\r\n  return (dynCall_viiiifiiiii = Module[\"dynCall_viiiifiiiii\"] = Module[\"asm\"][\"dynCall_viiiifiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = function() {\r\n  return (dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_diii = Module[\"dynCall_diii\"] = function() {\r\n  return (dynCall_diii = Module[\"dynCall_diii\"] = Module[\"asm\"][\"dynCall_diii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiid = Module[\"dynCall_viiid\"] = function() {\r\n  return (dynCall_viiid = Module[\"dynCall_viiid\"] = Module[\"asm\"][\"dynCall_viiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiddd = Module[\"dynCall_viiiddd\"] = function() {\r\n  return (dynCall_viiiddd = Module[\"dynCall_viiiddd\"] = Module[\"asm\"][\"dynCall_viiiddd\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vid = Module[\"dynCall_vid\"] = function() {\r\n  return (dynCall_vid = Module[\"dynCall_vid\"] = Module[\"asm\"][\"dynCall_vid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiffi = Module[\"dynCall_viiffi\"] = function() {\r\n  return (dynCall_viiffi = Module[\"dynCall_viiffi\"] = Module[\"asm\"][\"dynCall_viiffi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiifii = Module[\"dynCall_iiiifii\"] = function() {\r\n  return (dynCall_iiiifii = Module[\"dynCall_iiiifii\"] = Module[\"asm\"][\"dynCall_iiiifii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiif = Module[\"dynCall_iiiiif\"] = function() {\r\n  return (dynCall_iiiiif = Module[\"dynCall_iiiiif\"] = Module[\"asm\"][\"dynCall_iiiiif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vijji = Module[\"dynCall_vijji\"] = function() {\r\n  return (dynCall_vijji = Module[\"dynCall_vijji\"] = Module[\"asm\"][\"dynCall_vijji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\r\n  return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"dynCall_viijii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = function() {\r\n  return (dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\r\n  return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"dynCall_iiiiij\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = function() {\r\n  return (dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = Module[\"asm\"][\"dynCall_iiiiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\r\n  return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiijj\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = function() {\r\n  return (dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\r\n  return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiiijj\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_start_unwind = function() {\r\n  return (_asyncify_start_unwind = Module[\"asm\"][\"asyncify_start_unwind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_stop_unwind = function() {\r\n  return (_asyncify_stop_unwind = Module[\"asm\"][\"asyncify_stop_unwind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_start_rewind = function() {\r\n  return (_asyncify_start_rewind = Module[\"asm\"][\"asyncify_start_rewind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_stop_rewind = function() {\r\n  return (_asyncify_stop_rewind = Module[\"asm\"][\"asyncify_stop_rewind\"]).apply(null, arguments);\r\n};\r\n\r\n\r\n\r\n// include: postamble.js\r\n// === Auto-generated postamble setup entry stuff ===\r\n\r\nModule[\"addRunDependency\"] = addRunDependency;\r\nModule[\"removeRunDependency\"] = removeRunDependency;\r\nModule[\"FS_createPath\"] = FS.createPath;\r\nModule[\"FS_createDataFile\"] = FS.createDataFile;\r\nModule[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\r\nModule[\"FS_createLazyFile\"] = FS.createLazyFile;\r\nModule[\"FS_createDevice\"] = FS.createDevice;\r\nModule[\"FS_unlink\"] = FS.unlink;\r\nModule[\"LZ4\"] = LZ4;\r\n\r\n\r\nvar calledRun;\r\n\r\ndependenciesFulfilled = function runCaller() {\r\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\r\n  if (!calledRun) run();\r\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\r\n};\r\n\r\nfunction callMain(args = []) {\r\n\r\n  var entryFunction = _main;\r\n\r\n  args.unshift(thisProgram);\r\n\r\n  var argc = args.length;\r\n  var argv = stackAlloc((argc + 1) * 4);\r\n  var argv_ptr = argv >> 2;\r\n  args.forEach((arg) => {\r\n    HEAP32[argv_ptr++] = stringToUTF8OnStack(arg);\r\n  });\r\n  HEAP32[argv_ptr] = 0;\r\n\r\n  try {\r\n\r\n    var ret = entryFunction(argc, argv);\r\n\r\n    // if we're not running an evented main loop, it's time to exit\r\n    exitJS(ret, /* implicit = */ true);\r\n    return ret;\r\n  }\r\n  catch (e) {\r\n    return handleException(e);\r\n  }\r\n}\r\n\r\nfunction run(args = arguments_) {\r\n\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  preRun();\r\n\r\n  // a preRun added a dependency, run will be called later\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  function doRun() {\r\n    // run may have just been called through dependencies being fulfilled just in this very frame,\r\n    // or while the async setStatus time below was happening\r\n    if (calledRun) return;\r\n    calledRun = true;\r\n    Module['calledRun'] = true;\r\n\r\n    if (ABORT) return;\r\n\r\n    initRuntime();\r\n\r\n    preMain();\r\n\r\n    readyPromiseResolve(Module);\r\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\r\n\r\n    if (shouldRunNow) callMain(args);\r\n\r\n    postRun();\r\n  }\r\n\r\n  if (Module['setStatus']) {\r\n    Module['setStatus']('Running...');\r\n    setTimeout(function() {\r\n      setTimeout(function() {\r\n        Module['setStatus']('');\r\n      }, 1);\r\n      doRun();\r\n    }, 1);\r\n  } else\r\n  {\r\n    doRun();\r\n  }\r\n}\r\n\r\nif (Module['preInit']) {\r\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\r\n  while (Module['preInit'].length > 0) {\r\n    Module['preInit'].pop()();\r\n  }\r\n}\r\n\r\n// shouldRunNow refers to calling main(), not run().\r\nvar shouldRunNow = true;\r\n\r\nif (Module['noInitialRun']) shouldRunNow = false;\r\n\r\nrun();\r\n\r\n\r\n// end include: postamble.js\r\n\r\n\r\n  return createEdgeModule.ready\r\n}\r\n\r\n);\r\n})();\r\nexport default createEdgeModule;","import { Signal, signal } from '@preact/signals';\r\nimport { h } from 'preact';\r\nimport style from './style.css';\r\nimport { useEffect, useRef, useState } from 'preact/hooks';\r\nimport createEdgeModule from '../../edge-classic';\r\n\r\nconst defaultIWad = \"freedoom2.wad\"\r\nconst deathmatchIWad = \"freedm.wad\";\r\n\r\ntype PlayerConfig = {\r\n\tindexDBName: string;\r\n}\r\n\r\ntype WadState = {\r\n\terror?: string;\r\n\twadName?: string;\r\n\tisIWAD?: boolean;\r\n}\r\n\r\nconst config: PlayerConfig = {\r\n\tindexDBName: '/edge-classic'\r\n}\r\n\r\nclass WadHandler {\r\n\r\n\tconstructor(config: PlayerConfig) {\r\n\t\tthis.config = config;\r\n\t}\r\n\r\n\tprivate error(message: string) {\r\n\t\talert(message);\r\n\t\tconsole.error(message);\r\n\t\tconsole.trace();\r\n\t}\r\n\r\n\tsetWad(wadName: string, isIWAD?: boolean) {\r\n\t\tthis.wadState.value = { wadName: wadName, isIWAD: isIWAD };\r\n\t}\r\n\r\n\tasync uploadWad(file: File) {\r\n\r\n\t\tlet database: IDBDatabase | undefined;\r\n\r\n\t\ttry {\r\n\t\t\tdatabase = await this.openDatabase();\r\n\t\t\tif (!database) {\r\n\t\t\t\tthis.error(\"Unable to open database\")\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis.error(e);\r\n\t\t\tdatabase?.close();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst upload = new Promise<{ wadName: string, iwad: boolean }>((resolve, reject) => {\r\n\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\r\n\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\tconst bits = e.target.result;\r\n\t\t\t\tconst contents = new Uint8Array(bits as ArrayBuffer);\r\n\r\n\t\t\t\tconst iwad = contents[0] === 73;\r\n\r\n\t\t\t\tconst trans = database.transaction(['FILE_DATA'], 'readwrite');\r\n\t\t\t\tconst path = `${this.config.indexDBName}/${file.name}`;\r\n\t\t\t\tconst addReq = trans.objectStore('FILE_DATA').put({ timestamp: new Date(), mode: 33206, contents: contents }, path);\r\n\r\n\t\t\t\taddReq.onerror = (e) => {\r\n\t\t\t\t\treject(\"Error storing wad data\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttrans.oncomplete = (e) => {\r\n\t\t\t\t\tresolve({ wadName: file.name, iwad: iwad });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treader.onerror = (e) => {\r\n\t\t\t\treject(\"Error reading wad\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst wad = await upload;\r\n\t\t\tdatabase?.close();\r\n\t\t\tdatabase = undefined;\r\n\t\t\tthis.setWad(wad.wadName, wad.iwad);\r\n\t\t} catch (e) {\r\n\t\t\tthis.error(e);\r\n\t\t} finally {\r\n\t\t\tdatabase?.close();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate async openDatabase() {\r\n\r\n\t\treturn new Promise<IDBDatabase | undefined>((resolve, reject) => {\r\n\r\n\t\t\t// build pre-render guard\r\n\t\t\tif (typeof window !== 'undefined') {\r\n\t\t\t\tconst dbrequest = window.indexedDB.open(this.config.indexDBName);\r\n\r\n\t\t\t\tdbrequest.onerror = (e) => {\r\n\t\t\t\t\treject(`unable to load database ${this.config.indexDBName}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdbrequest.onupgradeneeded = (e) => {\r\n\r\n\t\t\t\t\tconsole.log(\"upgrade needed\");\r\n\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tif (!db.objectStoreNames.contains(\"FILE_DATA\")) {\r\n\t\t\t\t\t\tconsole.log(\"Creating FILE_DATA object store\");\r\n\t\t\t\t\t\tconst store = db.createObjectStore(\"FILE_DATA\", {});\r\n\t\t\t\t\t\tstore.createIndex(\"timestamp\", \"timestamp\", { unique: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tdbrequest.onsuccess = (e) => {\r\n\t\t\t\t\tconsole.log(\"db open\");\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tresolve(db);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\twadState: Signal<WadState> = signal({});\r\n\r\n\tconfig: PlayerConfig;\r\n\r\n\tstatic get singleton(): WadHandler {\r\n\t\tif (!WadHandler.instance) {\r\n\t\t\tWadHandler.instance = new WadHandler(config);\r\n\t\t}\r\n\t\treturn WadHandler.instance;\r\n\t}\r\n\r\n\tprivate static instance?: WadHandler;\r\n}\r\n\r\ntype Project = {\r\n\tname: string;\r\n\timage: string;\r\n\tlink: string;\r\n}\r\n\r\nconst projects: Project[] = [\r\n\r\n\t{ name: \"Operation: Arctic Wolf Revisited\", image: \"./assets/images/articwolf.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/arctic-wolf-revisited\" },\r\n\t{ name: \"Astral Pathfinder\", image: \"./assets/images/astralpathfinder.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/astral-pathfinder1\" },\r\n\t{ name: \"Aliens: Stranded\", image: \"./assets/images/aliensstranded.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/aliens-stranded\" }\r\n]\r\n\r\nconst WadChooser = () => {\r\n\r\n\tconst pelements = projects.map(p => {\r\n\t\treturn <a href={p.link} target=\"_blank\" style=\"display:flex;flex:1;flex-direction:column;height:100%;align-items:flex-end\">\r\n\t\t\t<div style={{ display: \"flex\", flex: 0 }}>\r\n\t\t\t\t<div style={{ paddingTop: 12, paddingBottom: 4, fontSize: 14, whiteSpace: \"pre\", fontWeight: \"normal\" }}>{p.name}</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", position: \"relative\", flexGrow: 1, width: \"100%\" }} >\r\n\t\t\t\t<img style=\"width:100%;height:100%;object-fit:cover;position:absolute\" src={p.image} />\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t});\r\n\r\n\treturn <div style={{ display: \"flex\", width: \"100%\", maxWidth: \"1440px\", padding: 24, paddingLeft: 42 }}>\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1 }}>\r\n\t\t\t<div style={{ display: \"flex\", width: \"80%\" }}>\r\n\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"start\" }}>\r\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t\t<div style={{ fontSize: 18, fontWeight: \"normal\", paddingBottom: 24, width: 800 }}>Play EDGE-Classic in your browser by selecting an option below\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:24px;width:292px;height:64px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWad(defaultIWad, true)\r\n\t\t\t\t\t\t}}>Play Freedoom</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:24px;width:292px;height:64px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWad(deathmatchIWad, true)\r\n\t\t\t\t\t\t}}>Play Bot Death Match</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:24px;width:292px;height:64px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tdocument.getElementById('getWadFile').click()\r\n\t\t\t\t\t\t}}>Choose Wad</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<input id=\"getWadFile\" style=\"display:none\" type=\"file\" onChange={(e) => {\r\n\t\t\t\t\tconst files = (e.target as any).files as File[];\r\n\t\t\t\t\tif (files.length !== 1) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(\"Please select a single wad file\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst file = files[0];\r\n\t\t\t\t\tif (!file.name.toLowerCase().endsWith(\".wad\")) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(\"Please select a single wad file\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst wadHandler = WadHandler.singleton;\r\n\t\t\t\t\twadHandler.uploadWad(file);\r\n\r\n\t\t\t\t}} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1, width: \"50%\", flexDirection: \"column\" }}>\r\n\t\t\t<div style={{ display: \"flex\", flex: \"0 0 24px\", position: \"relative\" }}>\r\n\t\t\t\t<div style={{ position: \"absolute\", fontSize: 18, fontWeight: 400, whiteSpace: \"pre\" }}>Suggested Projects</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", flexShrink: 0, flexGrow: 1, flexDirection: \"column\" }}>\r\n\t\t\t\t{pelements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n}\r\n\r\nconst EdgeClassic = () => {\r\n\r\n\tconst canvasRef = useRef<HTMLCanvasElement>(null);\r\n\tconst canvasContainerRef = useRef<HTMLDivElement>(null);\r\n\tconst [state, setState] = useState<{ loading: boolean }>({ loading: true });\r\n\tconst wadState = WadHandler.singleton.wadState.value;\r\n\r\n\r\n\tconst pointerLockChange = () => {\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst lock = canvas === document.pointerLockElement;\r\n\r\n\t\tModule._I_WebSetFullscreen(lock ? 1 : 0);\r\n\r\n\t\t/*\r\n\t\t// It feels good to open the menu when releasing pointer lock\r\n\t\t// though, it makes the interaction tricky to close the menu\r\n\t\tif (!lock) {\r\n\t\t\tModule._I_WebOpenGameMenu(1);\r\n\t\t} \r\n\t\t*/\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst canvasContainer = canvasContainerRef?.current;\r\n\r\n\t\tconst wadName = wadState.wadName!;\r\n\r\n\t\tif (!canvasContainer) {\r\n\t\t\tthrow \"Unable to get canvas container\";\r\n\t\t}\r\n\r\n\t\tif (!canvas) {\r\n\t\t\tthrow \"Unable to get canvas\";\r\n\t\t}\r\n\r\n\t\tconst syncCanvasSize = () => {\r\n\t\t\tconst w = Math.floor(canvasContainer.offsetWidth);\r\n\t\t\tconst h = Math.floor(canvasContainer.offsetHeight);\r\n\t\t\tconsole.log(\"Setting canvas size\", w, h);\r\n\t\t\tcanvas.style.width = `${w}px`;\r\n\t\t\tcanvas.style.height = `${h}px`;\r\n\t\t\tcanvas.width = w;\r\n\t\t\tcanvas.height = h;\r\n\t\t}\r\n\r\n\t\t// initial update\t\t\r\n\t\tsyncCanvasSize();\r\n\r\n\t\tconst canvasSync = () => {\r\n\t\t\tsyncCanvasSize();\r\n\t\t\tModule._I_WebSyncScreenSize();\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"pointerlockchange\", pointerLockChange, false);\r\n\r\n\t\tlet doSyncTimeout;\r\n\t\twindow.addEventListener(\"resize\", (ev) => {\r\n\r\n\t\t\tclearTimeout(doSyncTimeout);\r\n\t\t\tdoSyncTimeout = setTimeout(canvasSync, 250);\r\n\r\n\t\t});\r\n\r\n\t\tcanvas.addEventListener(\"webglcontextlost\", function (e) { alert('FIXME: WebGL context lost, please reload the page'); e.preventDefault(); }, false);\r\n\r\n\r\n\t\tlet iwad = defaultIWad;\r\n\t\tif (wadState.wadName === deathmatchIWad) {\r\n\t\t\tiwad = deathmatchIWad;\r\n\t\t}\r\n\t\t\r\n\t\tif (wadState.wadName !== iwad && wadState.isIWAD) {\r\n\t\t\tiwad = `edge-classic/${wadName}`;\r\n\t\t}\r\n\r\n\t\tconst args = [\"-home\", \"edge-classic\", \"-windowed\", \"-width\", canvas.offsetWidth.toString(), \"-height\", canvas.offsetHeight.toString(), \"-iwad\", iwad];\r\n\r\n\t\tif (iwad === deathmatchIWad) {\r\n\t\t\targs.push(...[\"-deathmatch\", \"1\", \"-nomonsters\", \"-skill\", \"2\", \"-bots\", \"1\", \"-warp\", \"map03\"])\r\n\t\t}\r\n\r\n\t\tif (!wadState.isIWAD) {\r\n\t\t\targs.push(\"-file\")\r\n\t\t\targs.push(`edge-classic/${wadName}`);\r\n\t\t}\r\n\r\n\t\tcreateEdgeModule({\r\n\t\t\tedgePostInit: () => {\r\n\t\t\t\tconsole.log(\"Post-Init!\");\r\n\t\t\t\t// jump \r\n\t\t\t\tif (!args.find( a => a.startsWith(\"-warp\"))) {\r\n\t\t\t\t\tModule._I_WebOpenGameMenu(1);\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tsetState({ ...state, loading: false });\r\n\t\t\t},\r\n\t\t\tonFullscreen: () => {\r\n\t\t\t\t/*\r\n\t\t\t\tconsole.log(\"On fullscreen\");\r\n\t\t\t\tconst elements = document.querySelectorAll(\".playercontrols\");\r\n\t\t\t\telements?.forEach(e => {\r\n\t\t\t\t\t(e as any).style.display = \"flex\";\r\n\t\t\t\t});\r\n\t\t\t\t*/\r\n\t\t\t},\r\n\t\t\tpreEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\tpostEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\targuments: args,\r\n\t\t\tpreInit: () => {\r\n\t\t\t\tconsole.log(\"Pre-Init\");\r\n\t\t\t},\r\n\t\t\tpreRun: [],\r\n\t\t\tpostRun: [],\r\n\t\t\tprint: (function () {\r\n\t\t\t\treturn function (text) {\r\n\t\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\t\tconsole.log(text);\r\n\t\t\t\t};\r\n\t\t\t})(),\r\n\t\t\tprintErr: function (text) {\r\n\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\tconsole.error(text);\r\n\t\t\t},\r\n\t\t\tcanvas: canvas,\r\n\t\t\tsetStatus: function (text) { console.log(\"status\", text) },\r\n\t\t\tmonitorRunDependencies: function (left) { console.log(left) },\r\n\t\t}).then(module => {\r\n\t\t\tglobalThis.Module = module;\r\n\t\t\tmodule.canvas = canvas;\r\n\t\t});\r\n\r\n\r\n\t\treturn () => {\r\n\r\n\t\t};\r\n\r\n\t}, []);\r\n\r\n\r\n\treturn <div id=\"canvas-container\" ref={canvasContainerRef} style={{ display: \"flex\", width: \"100%\", height: \"100%\", position: \"relative\" }}>\r\n\t\t<canvas id=\"canvas\" ref={canvasRef} style={{ visibility: state.loading ? \"hidden\" : \"visible\" }}\r\n\t\t\tonClick={async (ev) => {\r\n\t\t\t\tconst lock = canvasRef.current === document.pointerLockElement;\r\n\t\t\t\tif (!lock) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait canvasRef.current?.requestPointerLock();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}} />\r\n\r\n\t\t{!!state.loading && <div style={{ position: \"absolute\", display: \"flex\", width: \"100%\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n\t\t\t<div class={style.loading}>\r\n\t\t\t\t<span style=\"--i:1\">L</span>\r\n\t\t\t\t<span style=\"--i:2\">O</span>\r\n\t\t\t\t<span style=\"--i:3\">A</span>\r\n\t\t\t\t<span style=\"--i:4\">D</span>\r\n\t\t\t\t<span style=\"--i:5\">I</span>\r\n\t\t\t\t<span style=\"--i:6\">N</span>\r\n\t\t\t\t<span style=\"--i:7\">G</span>\r\n\t\t\t\t<span style=\"--i:8\">.</span>\r\n\t\t\t\t<span style=\"--i:9\">.</span>\r\n\t\t\t\t<span style=\"--i:10\">.</span>\r\n\t\t\t</div>\r\n\t\t</div>}\r\n\r\n\t</div>\r\n}\r\n// floating player controls, not currently used\r\n// {!state.loading && <PlayerControls />} \r\n\r\nconst PlayerControls = () => {\r\n\tconst [fullscreen, setFullscreen] = useState(false);\r\n\treturn <div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\", padding: \"24px\", zIndex: 1, position: \"absolute\" }}>\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\" }} />\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", flexShrink: 1, paddingRight: \"48px\" }}>\r\n\t\t\t<button style={{ opacity: 1 }} className=\"playercontrols\" onClick={() => { Module._I_WebSetFullscreen(fullscreen ? 0 : 1, setFullscreen(!fullscreen)) }}>{fullscreen ? \"Minimize\" : \"Maximize\"}</button>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst Player = () => {\r\n\r\n\tconst wadHandler = WadHandler.singleton;\r\n\tconst wadState = wadHandler.wadState.value;\r\n\r\n\treturn (\r\n\t\t<div style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\r\n\t\t\t{!wadState.wadName && <WadChooser />}\r\n\t\t\t{!!wadState.wadName && <EdgeClassic />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Player;\r\n","import './style/index.css';\r\nimport App from './components/app';\r\n\r\nexport default App;\r\n","import { h } from 'preact';\r\n\r\nimport Player from './player';\r\n\r\nconst App = () => (\r\n\t<div id=\"app\">\r\n\t\t<main>\r\n\t\t\t<Player/>\r\n\t\t</main>\r\n\t</div>\r\n);\r\n\r\nexport default App;\r\n"],"sourceRoot":""}