{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/preact-cli/src/lib/entry.js","webpack:///../node_modules/preact/src/util.js","webpack:///../node_modules/preact/src/create-element.js","webpack:///../node_modules/preact/src/component.js","webpack:///../node_modules/preact/src/diff/children.js","webpack:///../node_modules/preact/src/diff/props.js","webpack:///../node_modules/preact/src/diff/index.js","webpack:///../node_modules/preact/src/render.js","webpack:///../node_modules/preact/src/options.js","webpack:///../node_modules/preact/src/constants.js","webpack:///../node_modules/preact/src/diff/catch-error.js","webpack:///../node_modules/preact/hooks/src/index.js","webpack:///../node_modules/@preact/signals-core/src/index.ts","webpack:///../node_modules/@preact/signals/src/index.ts","webpack:///./components/player/style.css","webpack:///./edge-classic.js","webpack:///./components/licenses/style.css","webpack:///./components/licenses/index.tsx","webpack:///./components/player/index.tsx","webpack:///./index.ts","webpack:///./components/app.tsx"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","h","Preact","render","hydrate","interopDefault","default","normalizeURL","url","length","navigator","serviceWorker","register","__webpack_public_path__","require","root","document","getElementById","body","firstElementChild","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","innerHTML","CLI_DATA","currentURL","location","pathname","init","u","v","parentNode","removeChild","y","f","arguments","children","defaultProps","type","props","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","_","k","this","context","b","indexOf","g","base","push","w","__r","debounceRendering","e","sort","shift","__P","L","__n","ownerSVGElement","M","x","a","Array","isArray","A","C","$","nextSibling","S","O","appendChild","insertBefore","I","setProperty","test","T","style","cssText","replace","toLowerCase","slice","addEventListener","z","j","removeEventListener","removeAttribute","setAttribute","event","P","H","contextType","__E","q","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","diffed","some","localName","nodeType","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","checked","current","unmount","componentWillUnmount","B","firstChild","D","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","resolve","setTimeout","__H","__V","__N","filter","every","F","clearTimeout","cancelAnimationFrame","requestAnimationFrame","Error","U","useSignal","__$f","__$u","peek","subscribe","valueOf","toString","set","displayName","defineProperties","configurable","__np","_scriptDir","createEdgeModule","currentScript","src","undefined","assert","condition","text","abort","updateMemoryViews","wasmMemory","buffer","Module","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","Uint8Array","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","keepRuntimeAlive","noExitRuntime","runtimeKeepaliveCounter","addRunDependency","runDependencies","removeRunDependency","runDependencyWatcher","clearInterval","dependenciesFulfilled","callback","what","err","ABORT","EXITSTATUS","WebAssembly","RuntimeError","readyPromiseReject","isDataURI","filename","startsWith","dataURIPrefix","getBinary","file","wasmBinaryFile","wasmBinary","readBinary","instantiateArrayBuffer","binaryFile","imports","receiver","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","fetch","credentials","response","catch","getBinaryPromise","binary","instantiate","instance","reason","ExitStatus","status","message","callRuntimeCallbacks","callbacks","dynCall","sig","ptr","args","apply","concat","dynCallLegacy","setValue","endsWith","tempI64","tempDouble","Math","abs","floor","ceil","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","set_adjusted_ptr","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","randomFill","view","crypto","_typeof","getRandomValues","initRandomFill","lengthBytesUTF8","str","len","charCodeAt","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","endIdx","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","mmapAlloc","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endPtr","UTF8Decoder","decode","subarray","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","convertI32PairToI53Checked","lo","hi","NaN","stringToUTF8","outPtr","isLeapYear","year","ydayFromDate","date","getFullYear","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","getMonth","getDate","stringToNewUTF8","size","ret","_malloc","_emscripten_set_main_loop_timing","Browser","mainLoop","timingMode","timingValue","func","running","scheduler","timeUntilNextTick","max","tickStartTime","_emscripten_get_now","runner","method","setImmediate","setImmediates","emscriptenMainLoopMessageId","target","stopPropagation","postMessage","setMainLoop","browserIterationFunc","fps","simulateInfiniteLoop","arg","noSetTiming","checkIsRunning","thisMainLoopId","currentlyRunningMainloop","queue","start","Date","now","blocker","remainingBlockers","remaining","next","counted","out","updateStatus","currentFrameNumber","GL","newRenderingFrameStarted","runIter","SDL","audio","queueNewAudioData","handleException","quit_","exitJS","code","callUserCallback","_exit","maybeExit","safeSetTimeout","timeout","warnOnce","shown","readEmAsmArgs","sigPtr","buf","readEmAsmArgsArray","withStackSave","stack","stackSave","stackRestore","setLetterbox","element","topBottom","leftRight","paddingLeft","paddingRight","paddingTop","paddingBottom","findEventTarget","cString","specialHTMLTargets","findCanvasEventTarget","stringToUTF8OnStack","stackAlloc","getCanvasElementSize","width","height","canvas","_emscripten_get_canvas_element_size","id","_emscripten_set_canvas_element_size","setCanvasElementSize","controlTransferredOffscreen","jstoi_q","parseInt","softFullscreenResizeWebGLRenderTarget","topMargin","dpr","devicePixelRatio","inHiDPIFullscreenMode","currentFullscreenStrategy","canvasResolutionScaleMode","inAspectRatioFixedFullscreenMode","scaleMode","inPixelPerfectFullscreenMode","inCenteredWithoutScalingFullscreenMode","screenWidth","round","innerWidth","screenHeight","innerHeight","canvasSize","GLctxObject","GLctx","viewport","canvasResizedCallback","dynCall_iiii","canvasResizedCallbackUserData","getBoundingClientRect","JSEvents_resizeCanvasForFullscreen","strategy","restoreOldStyle","fullscreenElement","webkitFullscreenElement","oldWidth","oldHeight","oldCssWidth","oldCssHeight","backgroundColor","oldBackgroundColor","oldDocumentBackgroundColor","oldPaddingLeft","oldPaddingRight","oldPaddingTop","oldPaddingBottom","marginLeft","oldMarginLeft","marginRight","oldMarginRight","marginTop","oldMarginTop","marginBottom","oldMarginBottom","margin","oldDocumentBodyMargin","documentElement","overflow","oldDocumentOverflow","scroll","oldDocumentScroll","imageRendering","oldImageRendering","registerRestoreOldStyle","cssWidth","softFullscreen","screen","cssHeight","rect","windowedCssWidth","windowedCssHeight","windowedRttWidth","windowedRttHeight","desiredCssHeight","desiredCssWidth","filteringMode","dpiScale","newWidth","newHeight","JSEvents_requestFullscreen","requestFullscreen","webkitRequestFullscreen","JSEvents","fullscreenEnabled","Element","ALLOW_KEYBOARD_INPUT","requestPointerLock","fillGamepadEventData","eventStruct","timestamp","axes","buttons","pressed","connected","index","mapping","_glBindVertexArray","vao","bindVertexArray","vaos","ibo","getParameter","currentElementArrayBufferBinding","convertI32PairToI53","_glDeleteVertexArrays","deleteVertexArray","_glDrawArraysInstanced","first","count","primcount","drawArraysInstanced","_glDrawBuffers","bufs","bufArray","tempFixedLengthArray","drawBuffers","_glDrawElements","indices","calcBufLength","getTempIndexBuffer","bindBuffer","bufferSubData","preDrawHandleClientVertexAttribBindings","drawElements","postDrawHandleClientVertexAttribBindings","_glDrawElementsInstanced","drawElementsInstanced","__glGenObject","buffers","createFunction","objectTable","getNewId","recordError","_glGenVertexArrays","arrays","__glGetActiveAttribOrUniform","funcName","program","bufSize","info","programs","numBytesWrittenExclNull","writeI53ToI64","num","emscriptenWebGLGet","name_","formats","currentContext","version","getSupportedExtensions","result","_glGetFloatv","emscriptenWebGLGetIndexed","getIndexedParameter","WebGLBuffer","_glGetQueryObjecti64vEXT","pname","params","param","query","queries","disjointTimerQueryExt","getQueryParameter","_glGetQueryObjectivEXT","webglGetLeftBracePos","lastIndexOf","webglPrepareUniformLocationsBeforeFirstUse","uniformLocsById","uniformSizeAndIdsByName","uniformArrayNamesById","getProgramParameter","getActiveUniform","nm","sz","lb","arrayName","uniformIdCounter","webglGetUniformLocation","currentProgram","webglLoc","getUniformLocation","emscriptenWebGLGetUniform","getUniform","emscriptenWebGLGetVertexAttrib","clientBuffers","enabled","getVertexAttrib","fround","_glGetVertexAttribIiv","_glIsVertexArray","array","isVertexArray","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","clz32","BYTES_PER_ELEMENT","emscriptenWebGLGetTexPixelData","format","pixels","byteSize","sizePerPixel","colorChannelsInGlTextureFormat","bytes","alignment","alignedRowSize","roundedToNextMultipleOf","computeUnpackAlignedImageSize","unpackAlignment","_glVertexAttribDivisor","divisor","vertexAttribDivisor","emscripten_realloc_buffer","grow","byteLength","registerFocusEventCallback","userData","useCapture","callbackfunc","eventTypeId","eventTypeString","focusEvent","eventHandler","handlerFunc","nodeName","getNodeNameForTarget","preventDefault","registerOrRemoveHandler","registerFullscreenChangeEventCallback","fullscreenChangeEvent","mozFullScreenElement","msFullscreenElement","isFullscreen","reportedElement","previousFullscreenElement","clientWidth","clientHeight","fillFullscreenChangeEventData","registerGamepadEventCallback","gamepadEvent","allowsDeferredCalls","registerKeyEventCallback","keyEvent","keyEventData","timeStamp","ctrlKey","shiftKey","altKey","metaKey","repeat","charCode","keyCode","which","char","locale","fillMouseEventData","screenX","screenY","clientX","clientY","button","left","top","registerMouseEventCallback","mouseEvent","registerPointerlockChangeEventCallback","pointerlockChangeEvent","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","msPointerLockElement","fillPointerlockChangeEventData","registerTouchEventCallback","touchEvent","touches","et","isChanged","onTarget","identifier","changedTouches","targetTouches","targetRect","numTouches","pageX","pageY","registerVisibilityChangeEventCallback","visibilityChangeEvent","visibilityState","hidden","_emscripten_sleep","ms","Asyncify","handleSleep","wakeUp","getEnvStrings","strings","env","languages","thisProgram","ENV","_strftime","maxsize","tm","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","getTime","leap","currentMonth","daysInCurrentMonth","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","setDate","setMonth","setFullYear","addDays","tm_year","tm_yday","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_wday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","EXPANSION_RULES_2","substring","twelveHour","sum","arraySum","val","jan1","dec31","off","ahead","includes","runAndAbortIfError","run","doRun","calledRun","FS","initialized","ignorePermissions","TTY","__ATINIT__","__ATMAIN__","readyPromiseResolve","shouldRunNow","entryFunction","_main","unshift","argc","argv","argv_ptr","callMain","cb","__ATPOSTRUN__","postRun","arguments_","__ATPRERUN__","preRun","_this","reject","expectedDataFileDownloads","metadata","fetchRemotePackage","packageName","packageSize","xhr","XMLHttpRequest","open","responseType","onprogress","total","loaded","addedTotal","dataFileDownloads","download","onerror","onload","statusText","responseURL","send","runWithFS","check","msg","processPackageData","arrayBuffer","ArrayBuffer","byteArray","compressedData","loadPackage","preloadFallback","error","console","REMOTE_PACKAGE_NAME","REMOTE_PACKAGE_SIZE","indexedDB","PACKAGE_UUID","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","self","IDB_RO","IDB_RW","DB_NAME","DB_VERSION","METADATA_STORE_NAME","PACKAGE_STORE_NAME","CHUNK_SIZE","preloadResults","errback","openRequest","onupgradeneeded","db","objectStoreNames","contains","deleteObjectStore","createObjectStore","onsuccess","openDatabase","getRequest","transaction","objectStore","checkCachedPackage","PACKAGE_PATH","PACKAGE_NAME","useCached","fromCache","packages","chunksDone","totalSize","chunkCount","chunks","chunkId","tempTyped","byteOffset","fetchCachedPackage","packageData","packageMeta","chunkSliceStart","nextChunkSliceStart","finishedChunks","putPackageRequest","put","putMetadataRequest","uuid","cacheRemotePackage","process","encodeURIComponent","REMOTE_PACKAGE_BASE","read_","readAsync","setWindowTitle","moduleOverrides","_extends","toThrow","scriptDirectory","href","substr","responseText","title","log","warn","path","__ATEXIT__","ASM_CONSTS","edgePostInit","$0","$1","homeIndex","homeDir","analyzePath","exists","mkdirTree","mount","IDBFS","syncfs","_I_WebMain","onFullscreen","edgePreSyncFS","edgePostSyncFS","AudioContext","webkitAudioContext","mediaDevices","getUserMedia","webkitGetUserMedia","ctx","elements","SDL2","capture","audioContext","listenOnce","resume","sampleRate","$2","$3","have_microphone","stream","silenceTimer","mediaStreamNode","createMediaStreamSource","scriptProcessorNode","createScriptProcessor","onaudioprocess","audioProcessingEvent","outputBuffer","getChannelData","fill","currentCaptureBuffer","inputBuffer","connect","destination","no_microphone","silenceBuffer","createBuffer","video","currentOutputBuffer","numChannels","numberOfChannels","channelData","tracks","getAudioTracks","removeTrack","disconnect","close","ctxCanvas","imageCtx","image","createImageData","dst","CanvasPixelArray","data32Data","data32","data8","putImageData","$4","hot_x","hot_y","getContext","toDataURL","urlBuf","alert","PATH","isAbs","charAt","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","normalize","isAbsolute","trailingSlash","split","join","dirname","dir","basename","lastSlash","paths","join2","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","end","fromParts","toParts","min","samePartsLength","outputParts","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","tty","node","rdev","ErrnoError","seekable","fsync","read","offset","get_char","bytesRead","write","put_char","default_tty_ops","prompt","readline","default_tty1_ops","MEMFS","ops_table","createNode","parent","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","prot","flags","allocated","dbs","_indexedDB","DB_STORE_NAME","populate","getLocalSet","local","getRemoteSet","remote","reconcile","quit","values","getDB","req","fileStore","indexNames","createIndex","unique","isRealDir","toAbsolute","mountpoint","map","stat","pop","openKeyCursor","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","removeRemoteEntry","delete","done","errored","keys","e2","remove","oncomplete","reverse","LZ4","DIR_MODE","FILE_MODE","codec","MiniLZ4","sIdx","eIdx","token","literals_length","match_length","pos","maxInputSize","minMatch","hashShift","mfLimit","skipStrength","mlBits","mlMask","runMask","hasher","hashTable","empty","compressBound","isize","compress","dpos","dlen","anchor","findMatchAttempts","srcLength","sequenceLowBits","sequenceHighBits","hash","imul","ln","compressBlock","compressPackage","verify","temp","compressedChunks","successes","chunk","bound","compressed","compressedSize","back","uncompress","pack","preloadPlugin","files","createPath","handled","fullname","plugin","finish","readFile","written","currChunk","desired","chunkIndex","compressedStart","found","originalSize","startInChunk","endInChunk","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","opts","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","hashName","parentid","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_end","fd","getStream","createStream","fd_start","FSStream","shared","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","completed","pseudo","mountRoot","mkdir","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","dontFollow","lstat","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","mmapFlags","munmap","ioctl","cmd","encoding","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","staticInit","getMode","canRead","canWrite","findObject","dontResolveLastLink","parentExists","parentPath","parentObject","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","writeChunks","chunkOffset","chunkSize","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","chunkNum","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","fn","createPreloadedFile","dontCreateFile","preFinish","processData","handledByPreloadPlugin","noRunDep","dep","asyncLoad","TextDecoder","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","doMsync","addr","varargs","getStr","nowIsMonotonic","performance","pause","expected","expectedBlockers","pointerLock","moduleContextCreatedCallbacks","workers","pointerLockChange","initted","Blob","hasBlobConstructor","BlobBuilder","MozBlobBuilder","WebKitBlobBuilder","URLObject","URL","webkitURL","noImageDecoding","imagePlugin","getMimetype","bb","append","getBlob","createObjectURL","img","Image","complete","drawImage","preloadedImages","revokeObjectURL","audioPlugin","noAudioDecoding","preloadedAudios","fail","Audio","BASE","leftchar","leftbits","curr","PAD","encode64","exitPointerLock","ev","createContext","useWebGL","setInModule","webGLContextAttributes","contextHandle","contextAttributes","antialias","alpha","majorVersion","WebGL2RenderingContext","attribute","makeContextCurrent","destroyContext","fullscreenHandlersInstalled","lockPointer","resizeCanvas","fullscreenChange","canvasContainer","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","setWindowedCanvasSize","nextRAF","fakeRequestAnimationFrame","delay","_requestAnimationFrame","_x","RAF","safeRequestAnimationFrame","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","deltaY","deltaMode","mouseX","mouseY","mouseMovementX","mouseMovementY","lastTouches","calculateMouseEvent","cw","scrollX","pageXOffset","scrollY","pageYOffset","touch","adjustedX","adjustedY","coords","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","wNative","hNative","widthNative","heightNative","factor","removeProperty","EGL","errorCode","defaultDisplayInitialized","currentReadSurface","currentDrawSurface","depth","stencil","stringCache","setErrorCode","chooseConfig","display","attribList","config","config_size","numConfigs","lowLatency","counter","framebuffers","renderbuffers","textures","shaders","contexts","offscreenCanvases","samplers","transformFeedbacks","syncs","byteSizeByTypeRoot","byteSizeByType","stringiCache","lastError","table","MAX_TEMP_BUFFER_SIZE","numTempVertexBuffersPerSize","log2ceilLookup","generateTempBuffers","quads","largestIndex","tempVertexBufferCounters1","tempVertexBufferCounters2","tempVertexBuffers1","tempVertexBuffers2","tempIndexBuffers","ringbufferLength","ringbuffer1","ringbuffer2","tempQuadIndexBuffer","numIndexes","quadIndexes","bufferData","getTempVertexBuffer","sizeBytes","ringbuffer","nextFreeBufferIndex","vbo","prevVBO","prevIBO","vb","getSource","shader","string","source","stride","usedTempBuffers","resetBufferBinding","maxVertexAttribs","clientside","vertexAttribPointerAdaptor","normalized","currentArrayBufferBinding","getContextSafariWebGL2Fixed","ver","attrs","gl","WebGLRenderingContext","registerContext","handle","enableExtensionsByDefault","initExtensions","deleteContext","removeAllHandlersOnTarget","initExtensionsDone","ext","getExtension","webgl_enable_ANGLE_instanced_arrays","webgl_enable_OES_vertex_array_object","webgl_enable_WEBGL_draw_buffers","dibvbi","mdibvbi","webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance","multiDrawWebgl","webgl_enable_WEBGL_multi_draw","_eglWaitGL","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","runDeferredCalls","eventListenerFunc","jsEventHandler","webkitFullscreenEnabled","restoreOldWindowedStyle","_emscripten_glActiveTexture","x0","activeTexture","_emscripten_glAttachShader","attachShader","_emscripten_glBeginQuery","beginQuery","_emscripten_glBeginQueryEXT","_emscripten_glBeginTransformFeedback","beginTransformFeedback","_emscripten_glBindAttribLocation","bindAttribLocation","_emscripten_glBindBuffer","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","_emscripten_glBindBufferBase","bindBufferBase","_emscripten_glBindBufferRange","ptrsize","bindBufferRange","_emscripten_glBindFramebuffer","framebuffer","bindFramebuffer","_emscripten_glBindRenderbuffer","renderbuffer","bindRenderbuffer","_emscripten_glBindSampler","unit","sampler","bindSampler","_emscripten_glBindTexture","texture","bindTexture","_emscripten_glBindTransformFeedback","bindTransformFeedback","_emscripten_glBindVertexArray","_glBindVertexArrayOES","_emscripten_glBindVertexArrayOES","_emscripten_glBlendColor","x1","x2","x3","blendColor","_emscripten_glBlendEquation","blendEquation","_emscripten_glBlendEquationSeparate","blendEquationSeparate","_emscripten_glBlendFunc","blendFunc","_emscripten_glBlendFuncSeparate","blendFuncSeparate","_emscripten_glBlitFramebuffer","x4","x5","x6","x7","x8","x9","blitFramebuffer","_emscripten_glBufferData","usage","_emscripten_glBufferSubData","_emscripten_glCheckFramebufferStatus","checkFramebufferStatus","_emscripten_glClear","clear","_emscripten_glClearBufferfi","clearBufferfi","_emscripten_glClearBufferfv","drawbuffer","clearBufferfv","_emscripten_glClearBufferiv","clearBufferiv","_emscripten_glClearBufferuiv","clearBufferuiv","_emscripten_glClearColor","clearColor","_emscripten_glClearDepthf","clearDepth","_emscripten_glClearStencil","clearStencil","_emscripten_glClientWaitSync","sync","timeout_low","timeout_high","clientWaitSync","_emscripten_glColorMask","red","green","blue","colorMask","_emscripten_glCompileShader","compileShader","_emscripten_glCompressedTexImage2D","level","internalFormat","border","imageSize","compressedTexImage2D","_emscripten_glCompressedTexImage3D","compressedTexImage3D","_emscripten_glCompressedTexSubImage2D","xoffset","yoffset","compressedTexSubImage2D","_emscripten_glCompressedTexSubImage3D","zoffset","compressedTexSubImage3D","_emscripten_glCopyBufferSubData","copyBufferSubData","_emscripten_glCopyTexImage2D","copyTexImage2D","_emscripten_glCopyTexSubImage2D","copyTexSubImage2D","_emscripten_glCopyTexSubImage3D","copyTexSubImage3D","_emscripten_glCreateProgram","createProgram","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","_emscripten_glCreateShader","shaderType","createShader","_emscripten_glCullFace","cullFace","_emscripten_glDeleteBuffers","deleteBuffer","_emscripten_glDeleteFramebuffers","deleteFramebuffer","_emscripten_glDeleteProgram","deleteProgram","_emscripten_glDeleteQueries","ids","deleteQuery","_emscripten_glDeleteQueriesEXT","_emscripten_glDeleteRenderbuffers","deleteRenderbuffer","_emscripten_glDeleteSamplers","deleteSampler","_emscripten_glDeleteShader","deleteShader","_emscripten_glDeleteSync","deleteSync","_emscripten_glDeleteTextures","deleteTexture","_emscripten_glDeleteTransformFeedbacks","transformFeedback","deleteTransformFeedback","_emscripten_glDeleteVertexArrays","_glDeleteVertexArraysOES","_emscripten_glDeleteVertexArraysOES","_emscripten_glDepthFunc","depthFunc","_emscripten_glDepthMask","depthMask","_emscripten_glDepthRangef","depthRange","_emscripten_glDetachShader","detachShader","_emscripten_glDisable","disable","_emscripten_glDisableVertexAttribArray","disableVertexAttribArray","_emscripten_glDrawArrays","drawArrays","_emscripten_glDrawArraysInstanced","_glDrawArraysInstancedANGLE","_emscripten_glDrawArraysInstancedANGLE","_glDrawArraysInstancedARB","_emscripten_glDrawArraysInstancedARB","_glDrawArraysInstancedEXT","_emscripten_glDrawArraysInstancedEXT","_glDrawArraysInstancedNV","_emscripten_glDrawArraysInstancedNV","_emscripten_glDrawBuffers","_glDrawBuffersEXT","_emscripten_glDrawBuffersEXT","_glDrawBuffersWEBGL","_emscripten_glDrawBuffersWEBGL","_emscripten_glDrawElements","_emscripten_glDrawElementsInstanced","_glDrawElementsInstancedANGLE","_emscripten_glDrawElementsInstancedANGLE","_glDrawElementsInstancedARB","_emscripten_glDrawElementsInstancedARB","_glDrawElementsInstancedEXT","_emscripten_glDrawElementsInstancedEXT","_glDrawElementsInstancedNV","_emscripten_glDrawElementsInstancedNV","_emscripten_glDrawRangeElements","_emscripten_glEnable","enable","_emscripten_glEnableVertexAttribArray","enableVertexAttribArray","_emscripten_glEndQuery","endQuery","_emscripten_glEndQueryEXT","_emscripten_glEndTransformFeedback","endTransformFeedback","_emscripten_glFenceSync","fenceSync","_emscripten_glFinish","_emscripten_glFlush","flush","_emscripten_glFramebufferRenderbuffer","attachment","renderbuffertarget","framebufferRenderbuffer","_emscripten_glFramebufferTexture2D","textarget","framebufferTexture2D","_emscripten_glFramebufferTextureLayer","layer","framebufferTextureLayer","_emscripten_glFrontFace","frontFace","_emscripten_glGenBuffers","_emscripten_glGenFramebuffers","_emscripten_glGenQueries","_emscripten_glGenQueriesEXT","_emscripten_glGenRenderbuffers","_emscripten_glGenSamplers","_emscripten_glGenTextures","_emscripten_glGenTransformFeedbacks","_emscripten_glGenVertexArrays","_emscripten_glGenVertexArraysOES","_emscripten_glGenerateMipmap","generateMipmap","_emscripten_glGetActiveAttrib","_emscripten_glGetActiveUniform","_emscripten_glGetActiveUniformBlockName","uniformBlockIndex","uniformBlockName","getActiveUniformBlockName","_emscripten_glGetActiveUniformBlockiv","getActiveUniformBlockParameter","_emscripten_glGetActiveUniformsiv","uniformCount","uniformIndices","getActiveUniforms","_emscripten_glGetAttachedShaders","maxCount","getAttachedShaders","_emscripten_glGetAttribLocation","getAttribLocation","_emscripten_glGetBooleanv","_emscripten_glGetBufferParameteri64v","getBufferParameter","_emscripten_glGetBufferParameteriv","_emscripten_glGetError","getError","_emscripten_glGetFloatv","_emscripten_glGetFragDataLocation","getFragDataLocation","_emscripten_glGetFramebufferAttachmentParameteriv","getFramebufferAttachmentParameter","WebGLRenderbuffer","WebGLTexture","_emscripten_glGetInteger64i_v","_emscripten_glGetInteger64v","_emscripten_glGetIntegeri_v","_emscripten_glGetIntegerv","_emscripten_glGetInternalformativ","internalformat","getInternalformatParameter","_emscripten_glGetProgramBinary","_emscripten_glGetProgramInfoLog","maxLength","infoLog","getProgramInfoLog","_emscripten_glGetProgramiv","getActiveAttrib","_emscripten_glGetQueryObjecti64vEXT","_emscripten_glGetQueryObjectivEXT","_emscripten_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectuiv","_emscripten_glGetQueryObjectuivEXT","_emscripten_glGetQueryiv","getQuery","_emscripten_glGetQueryivEXT","_emscripten_glGetRenderbufferParameteriv","getRenderbufferParameter","_emscripten_glGetSamplerParameterfv","getSamplerParameter","_emscripten_glGetSamplerParameteriv","_emscripten_glGetShaderInfoLog","getShaderInfoLog","_emscripten_glGetShaderPrecisionFormat","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","_emscripten_glGetShaderSource","getShaderSource","_emscripten_glGetShaderiv","getShaderParameter","_emscripten_glGetString","exts","glVersion","glslVersion","ver_num","match","_emscripten_glGetStringi","_emscripten_glGetSynciv","getSyncParameter","_emscripten_glGetTexParameterfv","getTexParameter","_emscripten_glGetTexParameteriv","_emscripten_glGetTransformFeedbackVarying","getTransformFeedbackVarying","_emscripten_glGetUniformBlockIndex","getUniformBlockIndex","_emscripten_glGetUniformIndices","uniformNames","names","getUniformIndices","_emscripten_glGetUniformLocation","arrayIndex","uniformBaseName","leftBrace","sizeAndId","_emscripten_glGetUniformfv","_emscripten_glGetUniformiv","_emscripten_glGetUniformuiv","_emscripten_glGetVertexAttribIiv","_emscripten_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribPointerv","pointer","getVertexAttribOffset","_emscripten_glGetVertexAttribfv","_emscripten_glGetVertexAttribiv","_emscripten_glHint","hint","_emscripten_glInvalidateFramebuffer","numAttachments","attachments","list","invalidateFramebuffer","_emscripten_glInvalidateSubFramebuffer","invalidateSubFramebuffer","_emscripten_glIsBuffer","isBuffer","_emscripten_glIsEnabled","isEnabled","_emscripten_glIsFramebuffer","fb","isFramebuffer","_emscripten_glIsProgram","isProgram","_emscripten_glIsQuery","isQuery","_emscripten_glIsQueryEXT","_emscripten_glIsRenderbuffer","rb","isRenderbuffer","_emscripten_glIsSampler","isSampler","_emscripten_glIsShader","isShader","_emscripten_glIsSync","isSync","_emscripten_glIsTexture","isTexture","_emscripten_glIsTransformFeedback","isTransformFeedback","_emscripten_glIsVertexArray","_emscripten_glIsVertexArrayOES","_emscripten_glLineWidth","lineWidth","_emscripten_glLinkProgram","linkProgram","_emscripten_glPauseTransformFeedback","pauseTransformFeedback","_emscripten_glPixelStorei","pixelStorei","_emscripten_glPolygonOffset","polygonOffset","_emscripten_glProgramBinary","_emscripten_glProgramParameteri","_emscripten_glQueryCounterEXT","_emscripten_glReadBuffer","readBuffer","_emscripten_glReadPixels","readPixels","pixelData","_emscripten_glReleaseShaderCompiler","_emscripten_glRenderbufferStorage","renderbufferStorage","_emscripten_glRenderbufferStorageMultisample","renderbufferStorageMultisample","_emscripten_glResumeTransformFeedback","resumeTransformFeedback","_emscripten_glSampleCoverage","invert","sampleCoverage","_emscripten_glSamplerParameterf","samplerParameterf","_emscripten_glSamplerParameterfv","_emscripten_glSamplerParameteri","samplerParameteri","_emscripten_glSamplerParameteriv","_emscripten_glScissor","scissor","_emscripten_glShaderBinary","_emscripten_glShaderSource","shaderSource","_emscripten_glStencilFunc","stencilFunc","_emscripten_glStencilFuncSeparate","stencilFuncSeparate","_emscripten_glStencilMask","stencilMask","_emscripten_glStencilMaskSeparate","stencilMaskSeparate","_emscripten_glStencilOp","stencilOp","_emscripten_glStencilOpSeparate","stencilOpSeparate","_emscripten_glTexImage2D","texImage2D","_emscripten_glTexImage3D","texImage3D","_emscripten_glTexParameterf","texParameterf","_emscripten_glTexParameterfv","_emscripten_glTexParameteri","texParameteri","_emscripten_glTexParameteriv","_emscripten_glTexStorage2D","texStorage2D","_emscripten_glTexStorage3D","texStorage3D","_emscripten_glTexSubImage2D","texSubImage2D","_emscripten_glTexSubImage3D","texSubImage3D","_emscripten_glTransformFeedbackVaryings","varyings","bufferMode","vars","transformFeedbackVaryings","_emscripten_glUniform1f","v0","uniform1f","miniTempWebGLFloatBuffers","_emscripten_glUniform1fv","uniform1fv","_emscripten_glUniform1i","uniform1i","miniTempWebGLIntBuffers","_emscripten_glUniform1iv","uniform1iv","_emscripten_glUniform1ui","uniform1ui","_emscripten_glUniform1uiv","uniform1uiv","_emscripten_glUniform2f","v1","uniform2f","_emscripten_glUniform2fv","uniform2fv","_emscripten_glUniform2i","uniform2i","_emscripten_glUniform2iv","uniform2iv","_emscripten_glUniform2ui","uniform2ui","_emscripten_glUniform2uiv","uniform2uiv","_emscripten_glUniform3f","v2","uniform3f","_emscripten_glUniform3fv","uniform3fv","_emscripten_glUniform3i","uniform3i","_emscripten_glUniform3iv","uniform3iv","_emscripten_glUniform3ui","uniform3ui","_emscripten_glUniform3uiv","uniform3uiv","_emscripten_glUniform4f","v3","uniform4f","_emscripten_glUniform4fv","uniform4fv","_emscripten_glUniform4i","uniform4i","_emscripten_glUniform4iv","uniform4iv","_emscripten_glUniform4ui","uniform4ui","_emscripten_glUniform4uiv","uniform4uiv","_emscripten_glUniformBlockBinding","uniformBlockBinding","_emscripten_glUniformMatrix2fv","transpose","uniformMatrix2fv","_emscripten_glUniformMatrix2x3fv","uniformMatrix2x3fv","_emscripten_glUniformMatrix2x4fv","uniformMatrix2x4fv","_emscripten_glUniformMatrix3fv","uniformMatrix3fv","_emscripten_glUniformMatrix3x2fv","uniformMatrix3x2fv","_emscripten_glUniformMatrix3x4fv","uniformMatrix3x4fv","_emscripten_glUniformMatrix4fv","uniformMatrix4fv","_emscripten_glUniformMatrix4x2fv","uniformMatrix4x2fv","_emscripten_glUniformMatrix4x3fv","uniformMatrix4x3fv","_emscripten_glUseProgram","useProgram","_emscripten_glValidateProgram","validateProgram","_emscripten_glVertexAttrib1f","vertexAttrib1f","_emscripten_glVertexAttrib1fv","_emscripten_glVertexAttrib2f","vertexAttrib2f","_emscripten_glVertexAttrib2fv","_emscripten_glVertexAttrib3f","vertexAttrib3f","_emscripten_glVertexAttrib3fv","_emscripten_glVertexAttrib4f","vertexAttrib4f","_emscripten_glVertexAttrib4fv","_emscripten_glVertexAttribDivisor","_emscripten_glVertexAttribDivisorANGLE","_emscripten_glVertexAttribDivisorARB","_emscripten_glVertexAttribDivisorEXT","_emscripten_glVertexAttribDivisorNV","_emscripten_glVertexAttribI4i","vertexAttribI4i","_emscripten_glVertexAttribI4iv","_emscripten_glVertexAttribI4ui","vertexAttribI4ui","_emscripten_glVertexAttribI4uiv","_emscripten_glVertexAttribIPointer","vertexAttribIPointer","_emscripten_glVertexAttribPointer","vertexAttribPointer","_emscripten_glViewport","_emscripten_glWaitSync","waitSync","isAsync","instrumentWasmImports","ASYNCIFY_IMPORTS","original","instrumentWasmExports","exportCallStack","maybeStopUnwind","State","Normal","Unwinding","Rewinding","Disabled","StackSize","currData","handleSleepReturnValue","callStackNameToId","callStackIdToName","callStackId","asyncPromiseHandlers","sleepCallbacks","getCallStackId","_asyncify_stop_unwind","Fibers","trampoline","whenDone","allocateData","setDataHeader","setDataRewindFunc","stackSize","rewindId","getDataRewindFunc","doRewind","startAsync","reachedCallback","reachedAfterCallback","_asyncify_start_rewind","asyncWasmReturnValue","isError","_asyncify_start_unwind","_asyncify_stop_rewind","_free","handleAsync","readMode","writeMode","miniTempWebGLFloatBuffersStorage","miniTempWebGLIntBuffersStorage","atob","wasmImports","___errno_location","length_low","length_high","isNaN","cwdLengthInBytes","dirp","struct_size","child","op","argp","nofollow","time","tmPtr","getSeconds","getMinutes","getHours","yday","getTimezoneOffset","summerOffset","winterOffset","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","timezone","daylight","tzname","extractZone","toTimeString","currentYear","winter","summer","stdTimezoneOffset","winterName","summerName","winterNamePtr","summerNamePtr","api","attrib_list","configs","hmm","contextAttribs","glesContextVersion","minorVersion","surface","draw","isContextLost","interval","argbuf","runEmAsmFunction","runMainThreadEmAsm","fullscreenStrategy","hiddenElements","onlyVisibleElement","displayState","hideEverythingExceptGivenElement","restoreHiddenElements","webkitExitFullscreen","gamepadState","lastGamepadState","dest","copyWithin","deferUntilInEventHandler","doRequestFullscreen","requestedSize","oldSize","maxHeapSize","alignUp","multiple","cutDown","overGrownHeapSize","getGamepads","webkitGetGamepads","targetThread","onbeforeunload","confirmationMessage","returnValue","registerBeforeUnloadEventCallback","dynCall_v","mozRequestPointerLock","webkitRequestPointerLock","msRequestPointerLock","uiEvent","outerWidth","outerHeight","registerUiEventCallback","onwheel","wheelEvent","registerWheelEventCallback","__environ","environ_buf","stringToAscii","penviron_count","penviron_buf_size","pbuf","rightsBase","rightsInheriting","iov","iovcnt","pnum","doReadv","offset_low","offset_high","newOffset","doWritev","receiveInstance","instantiateStreaming","createWasm","runCaller","ready","license","LicenseModal","_ref","onClose","class","onClick","overflowY","overflowX","fontFamily","whiteSpace","fontSize","defaultIWad","deathmatchIWad","indexDBName","WadHandler","_defineProperty","signal","_openDatabase","_uploadWad","trace","wadName","isIWAD","wadState","_asyncToGenerator","database","_database","upload","reader","FileReader","readAsArrayBuffer","iwad","trans","_database2","wad","setWad","_database3","_this2","dbrequest","projects","WadChooser","_useState2","_slicedToArray","useState","showLicense","setShowLicense","pelements","flex","fontWeight","flexGrow","maxWidth","padding","flexDirection","justifyContent","alignItems","singleton","click","onChange","uploadWad","flexShrink","EdgeClassic","canvasRef","useRef","canvasContainerRef","_useState4","loading","useEffect","syncCanvasSize","offsetWidth","offsetHeight","doSyncTimeout","canvasSync","_I_WebSyncScreenSize","find","_I_WebOpenGameMenu","_objectSpread","preEdgeSyncFS","postEdgeSyncFS","preInit","print","printErr","setStatus","monitorRunDependencies","globalThis","visibility","_canvasRef$current","_x2","Player","App"],"mappings":"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O,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,MAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,QAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,UAAU,MAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,GAAG,GAAG,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,GAAG,GAAG,KAAK,KAAK,KAAK,GAAG,GAAG,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,UAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAEvyhhBA,EAAqB,KAAID,EACzBlpB,EAAgC,WAAzB2G,EAAOpG,GAAY,KAAgB,oDAC1CA,GAAY,IAAE6oB,YAAY,CAAE,SAAY3B,EAAU,eAAkB0B,IAAkB,GACtF5oB,GAA4B,oBAAE,4EACpC,CAKE,SAAS8oB,EAAgBC,GACvBC,QAAQD,MAAMA,GACdC,QAAQD,MAAM,4CACd5B,EAAmB8B,EAAqBC,EAAqBV,EAC/D,CArPRxoB,GAAsB,cAAE,IAAK,aAAa,GAAM,GAChDA,GAAsB,cAAE,aAAc,cAAc,GAAM,GAC1DA,GAAsB,cAAE,wBAAyB,YAAY,GAAM,GACnEA,GAAsB,cAAE,wBAAyB,WAAW,GAAM,GAClEA,GAAsB,cAAE,aAAc,QAAQ,GAAM,GACpDA,GAAsB,cAAE,kBAAmB,YAAY,GAAM,GAC7DA,GAAsB,cAAE,kBAAmB,WAAW,GAAM,GAC5DA,GAAsB,cAAE,kBAAmB,YAAY,GAAM,GAC7DA,GAAsB,cAAE,aAAc,SAAS,GAAM,GACrDA,GAAsB,cAAE,mBAAoB,YAAY,GAAM,GAC9DA,GAAsB,cAAE,mBAAoB,WAAW,GAAM,GAC7DA,GAAsB,cAAE,mBAAoB,YAAY,GAAM,GAC9DA,GAAsB,cAAE,aAAc,SAAS,GAAM,GACrDA,GAAsB,cAAE,mBAAoB,YAAY,GAAM,GAC9DA,GAAsB,cAAE,mBAAoB,WAAW,GAAM,GAC7DA,GAAsB,cAAE,mBAAoB,YAAY,GAAM,GAC9DA,GAAsB,cAAE,aAAc,aAAa,GAAM,GACzDA,GAAsB,cAAE,uBAAwB,YAAY,GAAM,GAClEA,GAAsB,cAAE,gCAAiC,iBAAiB,GAAM,GAChFA,GAAsB,cAAE,uBAAwB,WAAW,GAAM,GACjEA,GAAsB,cAAE,aAAc,aAAa,GAAM,GACzDA,GAAsB,cAAE,uBAAwB,YAAY,GAAM,GAClEA,GAAsB,cAAE,gCAAiC,iBAAiB,GAAM,GAChFA,GAAsB,cAAE,uBAAwB,WAAW,GAAM,GACjEA,GAAsB,cAAE,aAAc,QAAQ,GAAM,GACpDA,GAAsB,cAAE,kBAAmB,YAAY,GAAM,GAC7DA,GAAsB,cAAE,kBAAmB,WAAW,GAAM,GAC5DA,GAAsB,cAAE,kBAAmB,WAAW,GAAM,GAC5DA,GAAsB,cAAE,aAAc,WAAW,GAAM,GACvDA,GAAsB,cAAE,qBAAsB,YAAY,GAAM,GAChEA,GAAsB,cAAE,8BAA+B,gBAAgB,GAAM,GAC7EA,GAAsB,cAAE,qBAAsB,WAAW,GAAM,GAC/DA,GAAsB,cAAE,qBAAsB,WAAW,GAAM,GAC/DA,GAAsB,cAAE,aAAc,WAAW,GAAM,GACvDA,GAAsB,cAAE,qBAAsB,YAAY,GAAM,GAChEA,GAAsB,cAAE,qBAAsB,WAAW,GAAM,GAC/DA,GAAsB,cAAE,qBAAsB,WAAW,GAAM,GAC/DA,GAAsB,cAAE,aAAc,YAAY,GAAM,GACxDA,GAAsB,cAAE,sBAAuB,YAAY,GAAM,GACjEA,GAAsB,cAAE,sBAAuB,WAAW,GAAM,GAChEA,GAAsB,cAAE,sBAAuB,YAAY,GAAM,GACjEA,GAAsB,cAAE,aAAc,SAAS,GAAM,GACrDA,GAAsB,cAAE,mBAAoB,YAAY,GAAM,GAC9DA,GAAsB,cAAE,mBAAoB,WAAW,GAAM,GAC7DA,GAAsB,cAAE,mBAAoB,WAAW,GAAM,GAC7DA,GAAsB,cAAE,aAAc,OAAO,GAAM,GACnDA,GAAsB,cAAE,iBAAkB,YAAY,GAAM,GAC5DA,GAAsB,cAAE,iBAAkB,WAAW,GAAM,GAC3DA,GAAsB,cAAE,iBAAkB,YAAY,GAAM,GAC5DA,GAAsB,cAAE,IAAK,aAAa,GAAM,GAChDA,GAAsB,cAAE,aAAc,aAAa,GAAM,GACzDA,GAAsB,cAAE,aAAc,YAAY,GAAM,GACxDA,GAAsB,cAAE,sBAAuB,cAAc,GAAM,GACnEA,GAAsB,cAAE,sBAAuB,cAAc,GAAM,GACnEA,GAAsB,cAAE,sBAAuB,YAAY,GAAM,GACjEA,GAAsB,cAAE,aAAc,WAAW,GAAM,GACvDA,GAAsB,cAAE,aAAc,UAAU,GAAM,GACtDA,GAAsB,cAAE,aAAc,WAAW,GAAM,GACvDA,GAAsB,cAAE,qBAAsB,WAAW,GAAM,GAC/DA,GAAsB,cAAE,aAAc,YAAY,GAAM,GACxDA,GAAsB,cAAE,aAAc,OAAO,GAAM,GACnDA,GAAsB,cAAE,IAAK,aAAa,GAAM,GAExC,IACImpB,EADAC,EAAelC,EAAuB,aAE1C,GAAsB,YAAL,oBAANmC,OAAM,YAAAjjB,EAANijB,SACTF,EAAYE,OAAOF,WAAaE,OAAOC,cAAgBD,OAAOE,iBAAmBF,OAAOG,gBACnF,IAAwB,oBAAbpzB,SAIhB,KAAM,kFAFN+yB,EAAYM,KAAKN,SAGnB,CACA,IAAIO,EAAS,WACTC,EAAS,YACTC,EAAU,mBACVC,EAAa,EACbC,EAAsB,WACtBC,EAAqB,WAiCrBC,EAAa,SA8HnBhqB,GAAyB,iBAAE,6EAEtBA,GAAOiqB,iBAAgBjqB,GAAOiqB,eAAiB,CAAC,GAhKnD,SAAsBvoB,EAAUwoB,GAC9B,IACE,IAAIC,EAAchB,EAAU3B,KAAKoC,EAASC,EAC5C,CAAE,MAAOpxB,GACP,OAAOyxB,EAAQzxB,EACjB,CACA0xB,EAAYC,gBAAkB,SAASxvB,GACrC,IAAIyvB,EAAiCzvB,EAAM8P,OAAO0N,OAE9CiS,EAAGC,iBAAiBC,SAASR,IAC/BM,EAAGG,kBAAkBT,GAERM,EAAGI,kBAAkBV,GAEhCM,EAAGC,iBAAiBC,SAAST,IAC/BO,EAAGG,kBAAkBV,GAERO,EAAGI,kBAAkBX,EACtC,EACAK,EAAYO,UAAY,SAAS9vB,GAE/B8G,EADqC9G,EAAM8P,OAAO0N,OAEpD,EACA+R,EAAYnC,QAAU,SAASe,GAC7BmB,EAAQnB,EACV,CACF,CA8IA4B,EACE,SAASN,IApFX,SAA4BA,EAAIjD,EAAa1lB,EAAUwoB,GACrD,IAEIU,EAFcP,EAAGQ,YAAY,CAACf,GAAsBJ,GAC7BoB,YAAYhB,GACb12B,IAAI,YAAcg0B,GAC5CwD,EAAWF,UAAY,SAAS9vB,GAC9B,IAAIwd,EAASxd,EAAM8P,OAAO0N,OAC1B,OAAKA,EAGI1W,EAAS0nB,IAAiBhR,EAAa,KAAGA,GAF1C1W,GAAS,EAAO,KAI3B,EACAkpB,EAAW5C,QAAU,SAASe,GAC5BmB,EAAQnB,EACV,CACF,CAsEIgC,CAAmBV,EAAIW,EAAeC,GACpC,SAASC,EAAWhE,GAClBlnB,GAAOiqB,eAAegB,GAAgB,CAACE,UAAWD,GAC9CA,EAvEZ,SAA4Bb,EAAIjD,EAAaF,EAAUxlB,EAAUwoB,GAS/D,IARA,IACIkB,EADcf,EAAGQ,YAAY,CAACd,GAAqBL,GAC5BoB,YAAYf,GAEnCsB,EAAa,EACbC,EAAY,EACZC,EAAarE,EAAqB,WAClCsE,EAAS,IAAIryB,MAAMoyB,GAEdE,EAAU,EAAGA,EAAUF,EAAYE,IAAW,CACrD,IAAIb,EAAaQ,EAASh4B,IAAI,WAAag0B,EAAc,IAAMqE,GAC/Db,EAAWF,UAAY,SAAS9vB,GAE9B,GAAkB,GAAd2wB,EACF7pB,EAAS9G,EAAM8P,OAAO0N,aAKtB,GAHAiT,IACAC,GAAa1wB,EAAM8P,OAAO0N,OAAO+D,WACjCqP,EAAOnzB,KAAKuC,EAAM8P,OAAO0N,QACrBiT,GAAcE,EAChB,GAAkB,GAAdF,EACF3pB,EAAS9G,EAAM8P,OAAO0N,YACjB,CACL,IAAIsT,EAAY,IAAIlrB,WAAW8qB,GAC3BK,EAAa,EACjB,IAAK,IAAIF,KAAWD,EAAQ,CAC1B,IAAIzrB,EAASyrB,EAAOC,GACpBC,EAAU3sB,IAAI,IAAIyB,WAAWT,GAAS4rB,GACtCA,GAAc5rB,EAAOoc,WACrBpc,OAASP,CACX,CACAgsB,OAAShsB,EACTkC,EAASgqB,EAAU3rB,QACnB2rB,OAAYlsB,CACd,CAGN,EACAorB,EAAW5C,QAAU,SAASe,GAC5BmB,EAAQnB,EACV,CACF,CACF,CA8BU6C,CAAmBvB,EAAIW,EAAeC,EAAc/D,EAAUsB,EAAoBM,GAElF3B,EAAmB8B,EAAqBC,GACtC,SAAS2C,IA/IrB,SACExB,EACAjD,EACAyE,EACAC,EACApqB,EACAwoB,GAQA,IANA,IACIkB,EADsBf,EAAGQ,YAAY,CAACd,GAAqBJ,GAC5BmB,YAAYf,GAC3CgC,EAAkB,EAClBC,EAAsB,EACtBT,EAAa7mB,KAAKG,KAAKgnB,EAAY1P,WAAa6N,GAChDiC,EAAiB,EACZR,EAAU,EAAGA,EAAUF,EAAYE,IAAW,CAErD,IAAIS,EAAoBd,EAASe,IAC/BN,EAAYxxB,MAAM0xB,EAFpBC,GAAuBhC,GAGrB,WAAa5C,EAAc,IAAMqE,GAEnCM,EAAkBC,EAClBE,EAAkBxB,UAAY,WAE5B,KADAuB,GACsBV,EAAY,CAChC,IAKIa,EALuB/B,EAAGQ,YAC5B,CAACf,GACDH,GAEkCmB,YAAYhB,GACdqC,IAChC,CACE,KAAQL,EAAYO,KACpB,WAAcd,GAEhB,YAAcnE,GAEhBgF,EAAmB1B,UAAY,WAC7BhpB,EAASmqB,EACX,EACAO,EAAmBpE,QAAU,SAASe,GACpCmB,EAAQnB,EACV,CACF,CACF,EACAmD,EAAkBlE,QAAU,SAASe,GACnCmB,EAAQnB,EACV,CACF,CACF,CAgGcuD,CAAmBjC,EAAIW,EAAeC,EAAcY,EAAa,CAACQ,KAAKjD,GAAeZ,GACpF,SAASO,GACPC,QAAQD,MAAMA,GACdP,EAAmBqD,EACrB,GACJ,GAGN,GACA/C,EACJ,GACAA,GAEE9oB,GAAkB,WAAGA,GAAkB,UAAE,iBAEjD,CA1VE,IAAIgrB,EAAe,GACG,YAAL,oBAAN3B,OAAM,YAAAjjB,EAANijB,SACT2B,EAAe3B,OAA2B,mBAAEA,OAAOjzB,SAASC,SAASyI,WAAW8lB,UAAU,EAAGyE,OAAOjzB,SAASC,SAASyI,WAAWqa,YAAY,MAAQ,KACzH,oBAAZoT,SAA+C,oBAAbn2B,WAElD40B,EAAewB,mBAAmBp2B,SAASC,SAASyI,WAAW8lB,UAAU,EAAGxuB,SAASC,SAASyI,WAAWqa,YAAY,MAAQ,MAE/H,IAAI8R,EAAe,mEACfwB,EAAsB,oBACiB,mBAAhCzsB,GAA0B,mBAAqBA,GAAmB,aAC3EA,GAAmB,WAAIA,GAA0B,kBACjD4B,GAAI,qIAEN,IAAIqnB,EAAsBjpB,GAAmB,WAAIA,GAAmB,WAAEysB,EAAqB,IAAMA,EACnGvD,EAAsBhC,EAA8B,oBA6UhDlnB,GAAkB,UACpBqoB,KAEKroB,GAAe,SAAGA,GAAe,OAAI,IAC1CA,GAAe,OAAE3H,KAAKgwB,GAGxB,CACAQ,CAAY,CAAC,MAAS,CAAC,CAAC,SAAY,YAAa,MAAS,EAAG,IAAO,GAAI,CAAC,SAAY,8CAA+C,MAAS,EAAG,IAAO,OAAQ,CAAC,SAAY,4CAA6C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,8CAA+C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,8CAA+C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,8CAA+C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,8CAA+C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,8CAA+C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,8CAA+C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,8CAA+C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,8CAA+C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,8CAA+C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,0CAA2C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,4CAA6C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,4CAA6C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,0CAA2C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,0CAA2C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,4CAA6C,MAAS,MAAO,IAAO,QAAS,CAAC,SAAY,4CAA6C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,0CAA2C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,0CAA2C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,0CAA2C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,2CAA4C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,6CAA8C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,2CAA4C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,0CAA2C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,6CAA8C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,4CAA6C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,4CAA6C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,2CAA4C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,2CAA4C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,2CAA4C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,2CAA4C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,4CAA6C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,sCAAuC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,sCAAuC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,qCAAsC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,wCAAyC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,qCAAsC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,qCAAsC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,wCAAyC,MAAS,OAAQ,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,4CAA6C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO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CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD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AAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,S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AAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,S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","file":"bundle.a9d4a.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Pq/i\");\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function(p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","function cycleDetected(): never {\n\tthrow new Error(\"Cycle detected\");\n}\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\nfunction batch<T>(callback: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn callback();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\tpeek(): T;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\tconst signal = this;\n\treturn effect(function (this: Effect) {\n\t\tconst value = signal.value;\n\t\tconst flag = this._flags & TRACKING;\n\t\tthis._flags &= ~TRACKING;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tthis._flags |= flag;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.peek = function () {\n\treturn this._value;\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget() {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tcycleDetected();\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\nfunction signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_compute: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(compute: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, compute: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._compute = compute;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._compute();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when the it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nComputed.prototype.peek = function () {\n\tif (!this._refresh()) {\n\t\tcycleDetected();\n\t}\n\tif (this._flags & HAS_ERROR) {\n\t\tthrow this._value;\n\t}\n\treturn this._value;\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget() {\n\t\tif (this._flags & RUNNING) {\n\t\t\tcycleDetected();\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\ninterface ReadonlySignal<T = any> extends Signal<T> {\n\treadonly value: T;\n}\n\nfunction computed<T>(compute: () => T): ReadonlySignal<T> {\n\treturn new Computed(compute);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._compute = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ndeclare class Effect {\n\t_compute?: () => unknown;\n\t_cleanup?: unknown;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(compute: () => void);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, compute: () => void) {\n\tthis._compute = compute;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (!(this._flags & DISPOSED) && this._compute !== undefined) {\n\t\t\tthis._cleanup = this._compute();\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tcycleDetected();\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nfunction effect(compute: () => unknown): () => void {\n\tconst effect = new Effect(compute);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { signal, computed, effect, batch, Signal, ReadonlySignal };\n","import { options, Component } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport { signal, computed, batch, effect, Signal, type ReadonlySignal };\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction Text(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst s = useMemo(() => {\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Replace this component's vdom updater with a direct text one:\n\t\tthis._updater!._callback = () => {\n\t\t\t(this.base as Text).data = s.peek();\n\t\t};\n\n\t\treturn computed(() => {\n\t\t\tlet data = currentSignal.value;\n\t\t\tlet s = data.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\t}, []);\n\n\treturn s.value;\n}\nText.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: Text },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(() => {\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// let reason;\n\t// if (!hasSignals && !hasComputeds.has(this)) {\n\t// \treason = \"no signals or computeds\";\n\t// } else if (hasPendingUpdate.has(this)) {\n\t// \treason = \"has pending update\";\n\t// } else if (hasHookState.has(this)) {\n\t// \treason = \"has hook state\";\n\t// }\n\t// if (reason) {\n\t// \tif (!this) reason += \" (`this` bug)\";\n\t// \tconsole.log(\"not optimizing\", this?.constructor?.name, \": \", reason, {\n\t// \t\tdetails: {\n\t// \t\t\thasSignals,\n\t// \t\t\thasComputeds: hasComputeds.has(this),\n\t// \t\t\thasPendingUpdate: hasPendingUpdate.has(this),\n\t// \t\t\thasHookState: hasHookState.has(this),\n\t// \t\t\tdeps: Array.from(updater._deps),\n\t// \t\t\tupdater,\n\t// \t\t},\n\t// \t});\n\t// }\n\n\t// if this component used no signals or computeds, update:\n\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t// if there is a pending re-render triggered from Signals,\n\t// or if there is hook or class state, update:\n\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T) {\n\treturn useMemo(() => signal<T>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(() => callback.current());\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"loading__O14bA\"};","\r\nvar createEdgeModule = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  \r\n  return (\r\nfunction(createEdgeModule = {})  {\r\n\r\n// include: shell.js\r\n// The Module object: Our interface to the outside world. We import\r\n// and export values on it. There are various ways Module can be used:\r\n// 1. Not defined. We create it here\r\n// 2. A function parameter, function(Module) { ..generated code.. }\r\n// 3. pre-run appended it, var Module = {}; ..generated code..\r\n// 4. External script tag defines var Module.\r\n// We need to check if Module already exists (e.g. case 3 above).\r\n// Substitution will be replaced with actual code on later stage of the build,\r\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\r\n// Note that if you want to run closure, and also to use Module\r\n// after the generated code, you will need to define   var Module = {};\r\n// before the code. Then that object will be used in the code, and you\r\n// can continue to use Module afterwards as well.\r\nvar Module = typeof createEdgeModule != 'undefined' ? createEdgeModule : {};\r\n\r\n// Set up the promise that indicates the Module is initialized\r\nvar readyPromiseResolve, readyPromiseReject;\r\nModule['ready'] = new Promise((resolve, reject) => {\r\n  readyPromiseResolve = resolve;\r\n  readyPromiseReject = reject;\r\n});\r\n\r\n// --pre-jses are emitted after the Module integration code, so that they can\r\n// refer to Module (if they choose; they can also define Module)\r\n\r\n  var Module = typeof Module !== 'undefined' ? Module : {};\r\n\r\n  if (!Module.expectedDataFileDownloads) {\r\n    Module.expectedDataFileDownloads = 0;\r\n  }\r\n\r\n  Module.expectedDataFileDownloads++;\r\n  (function() {\r\n    // Do not attempt to redownload the virtual filesystem data when in a pthread or a Wasm Worker context.\r\n    if (Module['ENVIRONMENT_IS_PTHREAD'] || Module['$ww']) return;\r\n    var loadPackage = function(metadata) {\r\n\r\n      var PACKAGE_PATH = '';\r\n      if (typeof window === 'object') {\r\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');\r\n      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {\r\n        // web worker\r\n        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');\r\n      }\r\n      var PACKAGE_NAME = 'C:/Dev/EDGE-classic-emscripten-builds/web/site/edge-classic.data';\r\n      var REMOTE_PACKAGE_BASE = 'edge-classic.data';\r\n      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {\r\n        Module['locateFile'] = Module['locateFilePackage'];\r\n        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');\r\n      }\r\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\r\nvar REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\r\n\r\n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\r\n        \r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', packageName, true);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.onprogress = function(event) {\r\n          var url = packageName;\r\n          var size = packageSize;\r\n          if (event.total) size = event.total;\r\n          if (event.loaded) {\r\n            if (!xhr.addedTotal) {\r\n              xhr.addedTotal = true;\r\n              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};\r\n              Module.dataFileDownloads[url] = {\r\n                loaded: event.loaded,\r\n                total: size\r\n              };\r\n            } else {\r\n              Module.dataFileDownloads[url].loaded = event.loaded;\r\n            }\r\n            var total = 0;\r\n            var loaded = 0;\r\n            var num = 0;\r\n            for (var download in Module.dataFileDownloads) {\r\n            var data = Module.dataFileDownloads[download];\r\n              total += data.total;\r\n              loaded += data.loaded;\r\n              num++;\r\n            }\r\n            total = Math.ceil(total * Module.expectedDataFileDownloads/num);\r\n            if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');\r\n          } else if (!Module.dataFileDownloads) {\r\n            if (Module['setStatus']) Module['setStatus']('Downloading data...');\r\n          }\r\n        };\r\n        xhr.onerror = function(event) {\r\n          throw new Error(\"NetworkError for: \" + packageName);\r\n        }\r\n        xhr.onload = function(event) {\r\n          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n            var packageData = xhr.response;\r\n            callback(packageData);\r\n          } else {\r\n            throw new Error(xhr.statusText + \" : \" + xhr.responseURL);\r\n          }\r\n        };\r\n        xhr.send(null);\r\n      };\r\n\r\n      function handleError(error) {\r\n        console.error('package error:', error);\r\n      };\r\n\r\n    function runWithFS() {\r\n\r\n      function assert(check, msg) {\r\n        if (!check) throw msg + new Error().stack;\r\n      }\r\nModule['FS_createPath'](\"/\", \"edge_base\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"blasphemer\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom1\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom2\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"freedoom1\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1/graphics\", \"freedoom_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"freedoom2\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2/graphics\", \"freedoom_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"hacx\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"harmony\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony/graphics\", \"harmony_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"heretic\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"plutonia\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"rekkr\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"tnt\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/\", \"edge_defs\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"colormaps\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"crosshairs\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"edge1_font\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"overlays\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"sounds\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/sprites\", \"mbf_dog\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"ttf\", true, true);\r\nModule['FS_createPath'](\"/\", \"soundfont\", true, true);\r\n\r\n        var PACKAGE_UUID = metadata['package_uuid'];\r\n        var indexedDB;\r\n        if (typeof window === 'object') {\r\n          indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        } else if (typeof location !== 'undefined') {\r\n          // worker\r\n          indexedDB = self.indexedDB;\r\n        } else {\r\n          throw 'using IndexedDB to cache data can only be done on a web page or in a web worker';\r\n        }\r\n        var IDB_RO = \"readonly\";\r\n        var IDB_RW = \"readwrite\";\r\n        var DB_NAME = \"EM_PRELOAD_CACHE\";\r\n        var DB_VERSION = 1;\r\n        var METADATA_STORE_NAME = 'METADATA';\r\n        var PACKAGE_STORE_NAME = 'PACKAGES';\r\n        function openDatabase(callback, errback) {\r\n          try {\r\n            var openRequest = indexedDB.open(DB_NAME, DB_VERSION);\r\n          } catch (e) {\r\n            return errback(e);\r\n          }\r\n          openRequest.onupgradeneeded = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n\r\n            if (db.objectStoreNames.contains(PACKAGE_STORE_NAME)) {\r\n              db.deleteObjectStore(PACKAGE_STORE_NAME);\r\n            }\r\n            var packages = db.createObjectStore(PACKAGE_STORE_NAME);\r\n\r\n            if (db.objectStoreNames.contains(METADATA_STORE_NAME)) {\r\n              db.deleteObjectStore(METADATA_STORE_NAME);\r\n            }\r\n            var metadata = db.createObjectStore(METADATA_STORE_NAME);\r\n          };\r\n          openRequest.onsuccess = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n            callback(db);\r\n          };\r\n          openRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        };\r\n\r\n        // This is needed as chromium has a limit on per-entry files in IndexedDB\r\n        // https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177\r\n        // https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60\r\n        // We set the chunk size to 64MB to stay well-below the limit\r\n        var CHUNK_SIZE = 64 * 1024 * 1024;\r\n\r\n        function cacheRemotePackage(\r\n          db,\r\n          packageName,\r\n          packageData,\r\n          packageMeta,\r\n          callback,\r\n          errback\r\n        ) {\r\n          var transactionPackages = db.transaction([PACKAGE_STORE_NAME], IDB_RW);\r\n          var packages = transactionPackages.objectStore(PACKAGE_STORE_NAME);\r\n          var chunkSliceStart = 0;\r\n          var nextChunkSliceStart = 0;\r\n          var chunkCount = Math.ceil(packageData.byteLength / CHUNK_SIZE);\r\n          var finishedChunks = 0;\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            nextChunkSliceStart += CHUNK_SIZE;\r\n            var putPackageRequest = packages.put(\r\n              packageData.slice(chunkSliceStart, nextChunkSliceStart),\r\n              'package/' + packageName + '/' + chunkId\r\n            );\r\n            chunkSliceStart = nextChunkSliceStart;\r\n            putPackageRequest.onsuccess = function(event) {\r\n              finishedChunks++;\r\n              if (finishedChunks == chunkCount) {\r\n                var transaction_metadata = db.transaction(\r\n                  [METADATA_STORE_NAME],\r\n                  IDB_RW\r\n                );\r\n                var metadata = transaction_metadata.objectStore(METADATA_STORE_NAME);\r\n                var putMetadataRequest = metadata.put(\r\n                  {\r\n                    'uuid': packageMeta.uuid,\r\n                    'chunkCount': chunkCount\r\n                  },\r\n                  'metadata/' + packageName\r\n                );\r\n                putMetadataRequest.onsuccess = function(event) {\r\n                  callback(packageData);\r\n                };\r\n                putMetadataRequest.onerror = function(error) {\r\n                  errback(error);\r\n                };\r\n              }\r\n            };\r\n            putPackageRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n        /* Check if there's a cached package, and if so whether it's the latest available */\r\n        function checkCachedPackage(db, packageName, callback, errback) {\r\n          var transaction = db.transaction([METADATA_STORE_NAME], IDB_RO);\r\n          var metadata = transaction.objectStore(METADATA_STORE_NAME);\r\n          var getRequest = metadata.get('metadata/' + packageName);\r\n          getRequest.onsuccess = function(event) {\r\n            var result = event.target.result;\r\n            if (!result) {\r\n              return callback(false, null);\r\n            } else {\r\n              return callback(PACKAGE_UUID === result['uuid'], result);\r\n            }\r\n          };\r\n          getRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        }\r\n\r\n        function fetchCachedPackage(db, packageName, metadata, callback, errback) {\r\n          var transaction = db.transaction([PACKAGE_STORE_NAME], IDB_RO);\r\n          var packages = transaction.objectStore(PACKAGE_STORE_NAME);\r\n\r\n          var chunksDone = 0;\r\n          var totalSize = 0;\r\n          var chunkCount = metadata['chunkCount'];\r\n          var chunks = new Array(chunkCount);\r\n\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            var getRequest = packages.get('package/' + packageName + '/' + chunkId);\r\n            getRequest.onsuccess = function(event) {\r\n              // If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now\r\n              if (chunkCount == 1) {\r\n                callback(event.target.result);\r\n              } else {\r\n                chunksDone++;\r\n                totalSize += event.target.result.byteLength;\r\n                chunks.push(event.target.result);\r\n                if (chunksDone == chunkCount) {\r\n                  if (chunksDone == 1) {\r\n                    callback(event.target.result);\r\n                  } else {\r\n                    var tempTyped = new Uint8Array(totalSize);\r\n                    var byteOffset = 0;\r\n                    for (var chunkId in chunks) {\r\n                      var buffer = chunks[chunkId];\r\n                      tempTyped.set(new Uint8Array(buffer), byteOffset);\r\n                      byteOffset += buffer.byteLength;\r\n                      buffer = undefined;\r\n                    }\r\n                    chunks = undefined;\r\n                    callback(tempTyped.buffer);\r\n                    tempTyped = undefined;\r\n                  }\r\n                }\r\n              }\r\n            };\r\n            getRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n      function processPackageData(arrayBuffer) {\r\n        assert(arrayBuffer, 'Loading data file failed.');\r\n        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');\r\n        var byteArray = new Uint8Array(arrayBuffer);\r\n        var curr;\r\n        var compressedData = {\"data\":null,\"cachedOffset\":52775421,\"cachedIndexes\":[-1,-1],\"cachedChunks\":[null,null],\"offsets\":[0,2048,4096,6153,8201,10249,12297,14345,16393,18441,20489,22537,24585,26633,28681,30729,32777,34825,36873,38921,40969,43017,44320,45575,46645,47624,49234,50342,51819,53416,54516,55518,56293,57235,58188,59129,60147,60899,61811,62792,63738,64694,65555,66506,67313,68206,69153,69989,70783,71676,72484,73745,74644,75619,76538,77671,78797,79820,81106,82179,83055,84097,85381,86680,87934,89342,89915,90424,91002,91632,92221,92818,93813,94737,95579,96413,96936,97499,98239,98920,99570,100734,101523,102178,102815,103572,104243,105091,105938,107013,108160,108726,109503,110030,110576,111122,111829,112553,113425,114179,114859,115511,116416,117656,118401,119293,120249,121172,122132,122628,123664,124323,125136,126079,127118,128027,128697,129671,129931,130554,131319,132300,132721,133270,134190,134905,135585,136142,136788,137509,138409,139241,140023,140667,141271,141851,143074,145026,146459,147926,149398,150920,152440,153963,155502,157002,158502,160087,161777,163595,165484,167461,169476,171477,173502,175496,177519,179520,181474,183332,185103,186975,188887,190781,192721,194725,196714,198577,200432,202293,204065,205755,207518,209299,211112,212983,214918,216867,218877,220890,222883,224818,226570,228168,229645,231147,232659,234177,235696,237188,238660,240112,241565,243010,244538,246585,247886,249177,250464,251737,253034,254328,255705,256987,258222,259501,260835,262014,263377,264713,266176,267571,269003,270457,271853,273321,274842,276363,277855,279382,280959,282539,284207,285788,287402,288970,290550,292092,293621,295104,296747,298461,300082,301776,303476,304902,306275,307637,309018,310247,311497,312714,313966,315245,316410,317586,318771,319923,321135,322342,323617,324907,326158,328186,329468,330541,331696,332807,333893,334880,335943,337072,338140,339306,340401,341599,342810,344167,345514,347005,348516,350108,351670,353213,354841,356364,357747,359241,360852,362374,363898,365419,366817,368282,369621,370958,372304,373637,374920,376341,377769,379308,380834,382303,383797,385137,386356,387502,388513,389530,390534,391731,392885,394048,394985,395925,396959,397913,398842,399833,400850,402602,404333,405892,407497,409024,410647,412264,413942,415596,417172,418749,420418,422116,423581,425054,426645,428247,429822,431548,433233,434783,436419,437945,439401,440853,442350,443972,445493,446951,448451,450006,451561,453104,454603,456168,457732,459359,461029,462707,464363,465882,467412,469086,470710,472230,473622,474815,476338,477888,479415,480848,482420,484050,485728,487453,489111,490609,492190,494006,495817,496823,497828,498811,499872,500941,502058,503160,504256,505251,506290,507483,508660,509791,510841,511922,513102,514211,515465,516659,517860,519152,520496,521818,522996,524114,525237,526307,527362,528339,529307,530391,531467,532400,533303,534208,535191,536169,537250,538279,539266,540341,541365,542366,543282,544259,545294,546359,547393,548411,549495,550651,551746,552899,553877,554786,555713,556792,558839,560159,561444,562742,564012,565308,566581,567952,569241,570481,571772,573091,574184,575455,576696,578090,579418,580739,582074,583388,584825,586384,588003,589620,591079,592420,593789,595301,596843,598556,600270,601941,603441,604770,606104,607486,608984,610430,611956,613430,614834,616208,617574,618955,620159,621406,622606,623855,625120,626279,627461,628628,629786,631003,632197,633470,634761,636007,638041,639703,641262,642870,644475,646082,647663,649222,650853,652445,653987,655566,657245,658995,660792,662569,664351,665832,667516,669107,670854,672710,674543,676281,678124,679993,681845,683683,685550,687260,689099,690782,692525,694276,695972,697641,699385,700991,702811,704739,706447,708074,709407,710762,712052,713390,714877,716374,717836,719367,720918,722433,723943,725507,726975,728430,729914,731409,733314,734641,735466,736204,737066,738015,738780,739434,740351,741302,742119,742958,743701,744660,745723,746926,748184,749409,750729,752007,753440,754955,756516,758028,759650,761266,762914,764466,766070,767674,769294,770899,772470,773907,775346,776834,778372,779923,781407,782853,784306,785701,787053,788359,789460,790732,791893,793093,794102,795106,796127,797178,798164,799163,800223,801216,802182,802942,804205,806194,808014,809837,811731,813560,815383,817196,819061,820910,822634,824273,825828,827274,828866,830891,832570,834406,836301,838180,840044,841938,843851,845756,847456,849178,850775,852240,853745,855800,857494,859346,861234,863139,865043,866850,868626,870215,871653,873136,874686,876324,877955,879908,881523,883499,885478,887144,889144,891034,892767,894788,896545,897808,899354,900957,902458,904050,906013,907424,908863,910524,912070,913547,915437,917123,918394,920008,921605,923179,924809,926866,928540,930215,931882,933632,935402,937153,938886,940674,942470,944292,946116,948022,949751,951482,953273,955057,956906,958743,960559,962378,964243,966047,967810,969576,971341,973106,974862,976549,978362,980119,981865,983616,985426,987228,988973,990741,992501,994218,995939,997648,999393,1001130,1002844,1004529,1006179,1008042,1009909,1011773,1013621,1015430,1017247,1019143,1020997,1022828,1024572,1026237,1027788,1029845,1031824,1033772,1035675,1037617,1039549,1041458,1043351,1045279,1047182,1049089,1050966,1052865,1054723,1056557,1058306,1060086,1061839,1063656,1065478,1067265,1069104,1070896,1072763,1074589,1076399,1078155,1079911,1081637,1083213,1084781,1086395,1088105,1089905,1091687,1093399,1095152,1096831,1098543,1100268,1101970,1103723,1105498,1107292,1109101,1110788,1112703,1114611,1116543,1118421,1120213,1122051,1123954,1125871,1127788,1129674,1131599,1133466,1135486,1137516,1139454,1141425,1143436,1145419,1147432,1149433,1151414,1153350,1155269,1157220,1159199,1161201,1163149,1165085,1166994,1168985,1170923,1172891,1174848,1176872,1178894,1180875,1182772,1184696,1186581,1188520,1190382,1192035,1193847,1195654,1197540,1199445,1201373,1203343,1205307,1207294,1209270,1211214,1213113,1215111,1217065,1218918,1220749,1222596,1224462,1226329,1228146,1229948,1231753,1233557,1235375,1237122,1238822,1240451,1242000,1243419,1244547,1245960,1248008,1250056,1252104,1254152,1256200,1258248,1260296,1262344,1264392,1266440,1268488,1270536,1272584,1274632,1276680,1278728,1280776,1282824,1284872,1286920,1288968,1291016,1293064,1295112,1297160,1299208,1301256,1303304,1305352,1307400,1309448,1311496,1313544,1315592,1317640,1319688,1321736,1323784,1325832,1327880,1329928,1331976,1334024,1336072,1338120,1340168,1342216,1344264,1346312,1348360,1350408,1352456,1354504,1356552,1358600,1360648,1362696,1364744,1366792,1368840,1370888,1372936,1374984,1377032,1379080,1381128,1383176,1385224,1387272,1389320,1391368,1393416,1395464,1397512,1399560,1401608,1403656,1405704,1407752,1409800,1411848,1413896,1415944,1417992,1420040,1422088,1424136,1426184,1428232,1430280,1432328,1434376,1436424,1438472,1440520,1442568,1444616,1446664,1448712,1450760,1452808,1454856,1456904,1458952,1461000,1463048,1465096,1467144,1469201,1471258,1473306,1475354,1477402,1479450,1481498,1483546,1485603,1487651,1489699,1491747,1493795,1495843,1497891,1499948,1501996,1504044,1506092,1508140,1510188,1512236,1514284,1516332,1518380,1520428,1522476,1524524,1526572,1528620,1530668,1532716,1534764,1536812,1538860,1540908,1542956,1545004,1547052,1549100,1551148,1553196,1555244,1557292,1559340,1561388,1563436,1565484,1567532,1569580,1571628,1573676,1575724,1577772,1579820,1581868,1583916,1585964,1588012,1590060,1592108,1594156,1596204,1598252,1600300,1602348,1604396,1606444,1608492,1610540,1612588,1614636,1616684,1618732,1620780,1622828,1624876,1626924,1628972,1631020,1633068,1635116,1637164,1639212,1641260,1643308,1645356,1647404,1649452,1651500,1653548,1655596,1657644,1659692,1661740,1663788,1665836,1667884,1669932,1671980,1674028,1676076,1678124,1680172,1682220,1684268,1686316,1688364,1690412,1692460,1694508,1696556,1698604,1700652,1702700,1704748,1706796,1708844,1710892,1712940,1714988,1717036,1719084,1721132,1723180,1725228,1727276,1729324,1731372,1733420,1735468,1737516,1739564,1741612,1743660,1745708,1747756,1749804,1751852,1753900,1755948,1757996,1760044,1762092,1764140,1766188,1768236,1769955,1771459,1772774,1774245,1775772,1777343,1778789,1780247,1781648,1782849,1784170,1785678,1787148,1788349,1789597,1791014,1792536,1793979,1795427,1796886,1798270,1799668,1801061,1802570,1804001,1805505,1806966,1808416,1809926,1811387,1812952,1814453,1816027,1817461,1818996,1820554,1822064,1823574,1825067,1826444,1828033,1829606,1831077,1832491,1833904,1835435,1837103,1838738,1840371,1841998,1843505,1845085,1846786,1848420,1849893,1851535,1853133,1854858,1856632,1857721,1858798,1859966,1861069,1862050,1863040,1864107,1865178,1866310,1867497,1868560,1869824,1871019,1872395,1873872,1875371,1876916,1878540,1880091,1881681,1883287,1884769,1886130,1887691,1889292,1890795,1892357,1893811,1895199,1896659,1897914,1899249,1900645,1901898,1903278,1904724,1906210,1907727,1909243,1910749,1912140,1913390,1914596,1915624,1916653,1917651,1918734,1919888,1921080,1922129,1922971,1923994,1925019,1925949,1926882,1927866,1929108,1931121,1932158,1933276,1934456,1935549,1936527,1937520,1938581,1939716,1940809,1941977,1943237,1944571,1945741,1947198,1948770,1950266,1951719,1953284,1954756,1956324,1957914,1959397,1960881,1962463,1964100,1965516,1967050,1968549,1970100,1971725,1973411,1975215,1977093,1978972,1980632,1982367,1984184,1985953,1987561,1989191,1990624,1992006,1993334,1994371,1995414,1996587,1997661,1998784,1999950,2001058,2001945,2002993,2004088,2004993,2005920,2006909,2007993,2009978,2011597,2013102,2014633,2016175,2017735,2019254,2020752,2022303,2023823,2025321,2026854,2028479,2030177,2031955,2033712,2035456,2036929,2038613,2040159,2041878,2043722,2045519,2047156,2048992,2050742,2052593,2054384,2056166,2057669,2059546,2061218,2062990,2064727,2066339,2067893,2069562,2071126,2072916,2074823,2076504,2078112,2079433,2080745,2081987,2083293,2084722,2086193,2087648,2089098,2090581,2092025,2093483,2094989,2096397,2097777,2099205,2100641,2102534,2104417,2106089,2107765,2109507,2111288,2113025,2114778,2116532,2118313,2120142,2121960,2123822,2125671,2127434,2129192,2130971,2132760,2134589,2136416,2138213,2140097,2141918,2143695,2145445,2147196,2148938,2150702,2152398,2154145,2155951,2157668,2159438,2161179,2163031,2164796,2166569,2168322,2170061,2171794,2173495,2175223,2176980,2178701,2180414,2182060,2183824,2185667,2187557,2189409,2191241,2193058,2194946,2196849,2198711,2200506,2202179,2203791,2205043,2206341,2208389,2210437,2212485,2214533,2216581,2218629,2220677,2222725,2224773,2226821,2228869,2230917,2232965,2235013,2237061,2239109,2241157,2243205,2245253,2247301,2249349,2251397,2253445,2255493,2257541,2259589,2261637,2263685,2265733,2267781,2269829,2271877,2273925,2275973,2278021,2280069,2282117,2284165,2286213,2288261,2290309,2292357,2294405,2296453,2298501,2300549,2302597,2304645,2306693,2308741,2310789,2312837,2314885,2316933,2318981,2321029,2323077,2325125,2327173,2329221,2331269,2333317,2335365,2337413,2339461,2341357,2342548,2343914,2345290,2346737,2348231,2349776,2351262,2352736,2354168,2355664,2357119,2358575,2360028,2361359,2362741,2363562,2364422,2365542,2366851,2368410,2370045,2371855,2373691,2375532,2377401,2379245,2380988,2382732,2384130,2385910,2387699,2389554,2391436,2393268,2395076,2396875,2398676,2400307,2401707,2402838,2403839,2404981,2406363,2407480,2408825,2410121,2411244,2412498,2413739,2415168,2416679,2418165,2419652,2421060,2422449,2423840,2425295,2427343,2428750,2430156,2431641,2433217,2434679,2436166,2437721,2439218,2440686,2442218,2443852,2445433,2446844,2448474,2450122,2451765,2453477,2455269,2456999,2458673,2460364,2461948,2463531,2465035,2466608,2468214,2469803,2471371,2472992,2474627,2476212,2477768,2479323,2480974,2482581,2484215,2485828,2487449,2489024,2490591,2492216,2493861,2495462,2497033,2498263,2499491,2500982,2502493,2503893,2505284,2506748,2508301,2509906,2511520,2512943,2514336,2515828,2517861,2519338,2520787,2522154,2523568,2524938,2526325,2527784,2529237,2530653,2532082,2533568,2535053,2536150,2537646,2539185,2540737,2542286,2543982,2545623,2547158,2548773,2550273,2551746,2553227,2554803,2556317,2557858,2559306,2560828,2562365,2563909,2565381,2566864,2568480,2569971,2571566,2573118,2574711,2576266,2577834,2579342,2580894,2582321,2583711,2584858,2585799,2587112,2588471,2589813,2591031,2592447,2593915,2595439,2596998,2598383,2599687,2601083,2602932,2604726,2606406,2608087,2609751,2611544,2613295,2615050,2616770,2618422,2620113,2621912,2623722,2625241,2626774,2628450,2630119,2631744,2633533,2635294,2636898,2638601,2640217,2641751,2643280,2644828,2646513,2648122,2649620,2651184,2652791,2654437,2656095,2657702,2659368,2661073,2662787,2664522,2666289,2667995,2669598,2671176,2672895,2674553,2676125,2677545,2678808,2680469,2682161,2683829,2685394,2687081,2688807,2690577,2692413,2694178,2695775,2697444,2699305,2700905,2701475,2702056,2702685,2703368,2704052,2704754,2705620,2706623,2707672,2708700,2709557,2710940,2712401,2714019,2715674,2717024,2718306,2719792,2721452,2723116,2724919,2726539,2728113,2729807,2731488,2733139,2734926,2736475,2738112,2739841,2741567,2743288,2745068,2746722,2748350,2750038,2751799,2753522,2755273,2756996,2758373,2759837,2761150,2762335,2763546,2765016,2766328,2767518,2768770,2770022,2771436,2772948,2774499,2776000,2777549,2779160,2780757,2781968,2784016,2786064,2788112,2790160,2792208,2794256,2796304,2798352,2800400,2802448,2804496,2806544,2808592,2810640,2812688,2814736,2816784,2818832,2820880,2822928,2824976,2827024,2829072,2831120,2833168,2835216,2837264,2839312,2841360,2843408,2845456,2847504,2849552,2851600,2853648,2855696,2857744,2859792,2861840,2863888,2865936,2867984,2870032,2872080,2874128,2876176,2878224,2880272,2882320,2884368,2886416,2888464,2890512,2892560,2894608,2896656,2898704,2900752,2902800,2904848,2906896,2908944,2910992,2913040,2915088,2917136,2919184,2921232,2923280,2925328,2927376,2929424,2931472,2933520,2935568,2937616,2939664,2941712,2943760,2945808,2947856,2949904,2951952,2954000,2956048,2958096,2960153,2962201,2964249,2966297,2968345,2970393,2972441,2974489,2976537,2978585,2980633,2982681,2984729,2986777,2988825,2990873,2992921,2994969,2997017,2999065,3001113,3003161,3005209,3007257,3009305,3011353,3013401,3015449,3017497,3019545,3021593,3023641,3025689,3027737,3029785,3031833,3033881,3035933,3037981,3040029,3042077,3044125,3046173,3048221,3050269,3052317,3054365,3056413,3058461,3060509,3062557,3064605,3066653,3068701,3070749,3072797,3074845,3076893,3078941,3080989,3083037,3085085,3087133,3089181,3091229,3093277,3095325,3097373,3099421,3101469,3103517,3105565,3107613,3109661,3111709,3113757,3115805,3117853,3119901,3121949,3123997,3126045,3128093,3130141,3132189,3134237,3136285,3138333,3140381,3142429,3144477,3146525,3148573,3150621,3152669,3154717,3156774,3158822,3160877,3162908,3164920,3166963,3169016,3171073,3173128,3175176,3177227,3179275,3181323,3183371,3185419,3187467,3189515,3191563,3193611,3195659,3197707,3199755,3201803,3203851,3205899,3207947,3209995,3212043,3214094,3216142,3218190,3220238,3222286,3224334,3226382,3228430,3230478,3232526,3234574,3236622,3238670,3240718,3242766,3244814,3246862,3248910,3250958,3253006,3255054,3257111,3259158,3261175,3263204,3265254,3267311,3269359,3271407,3273460,3275517,3277565,3279613,3281661,3283709,3285757,3287805,3289853,3291901,3293949,3295997,3298045,3300093,3302141,3304189,3306237,3308285,3310333,3312381,3314429,3316477,3318525,3320573,3322621,3324669,3326717,3328765,3330813,3332861,3334909,3336957,3339005,3341053,3343101,3345149,3347197,3349245,3351293,3353341,3355389,3357437,3359456,3361477,3363527,3365581,3367637,3369685,3371737,3373792,3375840,3377888,3379936,3381984,3384032,3386080,3388128,3390176,3392224,3394272,3396320,3398368,3400416,3402464,3404512,3406560,3408608,3410656,3412704,3414752,3416800,3418848,3420896,3422944,3424992,3427040,3429088,3431136,3433184,3435232,3437280,3439328,3441376,3443424,3445472,3447520,3449568,3451616,3453664,3455712,3457760,3459808,3461856,3463904,3465952,3468000,3470048,3472096,3474144,3476192,3478240,3480288,3482336,3484384,3486432,3488480,3490528,3492576,3494624,3496672,3498720,3500768,3502816,3504864,3506912,3508960,3511008,3513056,3515104,3517152,3519200,3521248,3523296,3525344,3527392,3529440,3531488,3533536,3535584,3537632,3539680,3541728,3543776,3545824,3547881,3549929,3551977,3554025,3556073,3558121,3560169,3562217,3564265,3566313,3568361,3570409,3572457,3574505,3576553,3578601,3580649,3582697,3584745,3586793,3588841,3590889,3592937,3594985,3597042,3599090,3601138,3603186,3605234,3607282,3609330,3611378,3613426,3615474,3617522,3619570,3621618,3623666,3625714,3627762,3629810,3631858,3633906,3635954,3638002,3640052,3642068,3644093,3646133,3648181,3650229,3652277,3654333,3656381,3658429,3660477,3662525,3664573,3666621,3668669,3670717,3672765,3674813,3676861,3678909,3680957,3683005,3685053,3687101,3689149,3691197,3692448,3693816,3695047,3696175,3697242,3698291,3699455,3700638,3701610,3702804,3703909,3705123,3706219,3707321,3708547,3709667,3710766,3711893,3713018,3714176,3715384,3716594,3717509,3718417,3719339,3720201,3721217,3722208,3722752,3723722,3724552,3725401,3726238,3726576,3726911,3727260,3728329,3729513,3730930,3732383,3733795,3735237,3736029,3737169,3738304,3739209,3740150,3740929,3742162,3743396,3744759,3745975,3747012,3748123,3749162,3750309,3751460,3752536,3753732,3754810,3756132,3757168,3758270,3759454,3760535,3761675,3762800,3763909,3765050,3766277,3767540,3768426,3769288,3770215,3771207,3772149,3773055,3773723,3774704,3775514,3776261,3776886,3777223,3777559,3777899,3779130,3780383,3781867,3783309,3784770,3786202,3787064,3788127,3789184,3790076,3790948,3791770,3793751,3794415,3794460,3794503,3794561,3794631,3794758,3794904,3795103,3795274,3795466,3795717,3795947,3796297,3797072,3798091,3799087,3800151,3801396,3802924,3804530,3806137,3807814,3809438,3811209,3812999,3814752,3816277,3817839,3819441,3821103,3822757,3824464,3826232,3827997,3829579,3831251,3832848,3834461,3836102,3837573,3838473,3839477,3840383,3841107,3841561,3841779,3841951,3842081,3842206,3842354,3842492,3842601,3842681,3842730,3842775,3842819,3842864,3844022,3845260,3845400,3845581,3845820,3846027,3846274,3846708,3847088,3847444,3847835,3848212,3848500,3848920,3849680,3850640,3851516,3852548,3853664,3855109,3856769,3858487,3860300,3862048,3863898,3865730,3867546,3869226,3870940,3872633,3874385,3876251,3878097,3879992,3881848,3883611,3885430,3887347,3889220,3891032,3892923,3893956,3894948,3895824,3896636,3897349,3897778,3898152,3898528,3898846,3899244,3899614,3899975,3900125,3900295,3900450,3900664,3900836,3901552,3903478,3904714,3906043,3907319,3908501,3909896,3911295,3912649,3914058,3915445,3916820,3918260,3919737,3921128,3922554,3923968,3925436,3926919,3928306,3929798,3931253,3932602,3933978,3935368,3936747,3937963,3939081,3940388,3941775,3943080,3944463,3945838,3947191,3948492,3949892,3951307,3952587,3953939,3955364,3956878,3958309,3959804,3961219,3962561,3963931,3965331,3966786,3968227,3969671,3971050,3972431,3973707,3975075,3976510,3977805,3978958,3980142,3981348,3983046,3984061,3986029,3987013,3988223,3989331,3990805,3992131,3993675,3995028,3996124,3996962,3998587,3999781,3999828,3999873,3999917,4000375,4001401,4002466,4003476,4004817,4006327,4007762,4009207,4011056,4012857,4014569,4016261,4017925,4019020,4020033,4021536,4023266,4025039,4026891,4028619,4030434,4032240,4034011,4035654,4037301,4038960,4040792,4042659,4044503,4046379,4048235,4049970,4051866,4053756,4055623,4057485,4059326,4060942,4062533,4064044,4065752,4067277,4068578,4069818,4071150,4072327,4073430,4074496,4075219,4075868,4075916,4075965,4076012,4076447,4077133,4078237,4079037,4079770,4080719,4082074,4083334,4084556,4085684,4086694,4087691,4088137,4088974,4089668,4090375,4091096,4091782,4092720,4093662,4094412,4095316,4096168,4097142,4097981,4098665,4099325,4100336,4101209,4102136,4103015,4103973,4104482,4105317,4105972,4106680,4107440,4108207,4108987,4109749,4110669,4111440,4112178,4112949,4113792,4114631,4115450,4116331,4117201,4118155,4119081,4119851,4120710,4121535,4122338,4123391,4124203,4125052,4126637,4128129,4129624,4131097,4132769,4134370,4135882,4137513,4139089,4140541,4142039,4143626,4145239,4146821,4148261,4150003,4151295,4152804,4154326,4155966,4157564,4158960,4160627,4162023,4163725,4165575,4167018,4168501,4169790,4170866,4172106,4173490,4174834,4175876,4177000,4178249,4179310,4180470,4181695,4182959,4184219,4185308,4186100,4186959,4187881,4189584,4191137,4192523,4193964,4195330,4196614,4198004,4199191,4200446,4201805,4203114,4204317,4205431,4206385,4207263,4207888,4208945,4210787,4212336,4213813,4215325,4216714,4218000,4219391,4220560,4221802,4223121,4224435,4225614,4226463,4227307,4227991,4228825,4230723,4232182,4233691,4235114,4236562,4237883,4239178,4240514,4241675,4242977,4244331,4245648,4246819,4247865,4248798,4249634,4250287,4251445,4253277,4254702,4256199,4257630,4259106,4260634,4262152,4263489,4264658,4265586,4266407,4267179,4268071,4268940,4269763,4271611,4273043,4274532,4275956,4277397,4278686,4279970,4281271,4282453,4283787,4285145,4286431,4287571,4288552,4289503,4290221,4290920,4292665,4294260,4295752,4297123,4298229,4299468,4300964,4302378,4303652,4304584,4305600,4307061,4308805,4310410,4311973,4313330,4314557,4315751,4317246,4318601,4319830,4320905,4322175,4323426,4324775,4325673,4326965,4328668,4330470,4332253,4334073,4335735,4337304,4338733,4340601,4342514,4344270,4346059,4347994,4349741,4350974,4352303,4353595,4354951,4356408,4357935,4359782,4361026,4362486,4363778,4365133,4366582,4368187,4369463,4370316,4371256,4372546,4374283,4375243,4376107,4377081,4378903,4380198,4381574,4383258,4384835,4386368,4388127,4389791,4391621,4392802,4394362,4396107,4397627,4399285,4401193,4403067,4404539,4405825,4407457,4409137,4410690,4412467,4414388,4416311,4417641,4419003,4420672,4422329,4423937,4425776,4427685,4429602,4430872,4432276,4433956,4435646,4437177,4438950,4440855,4442748,4444130,4445571,4447243,4448905,4450417,4452156,4454019,4455896,4457209,4458616,4460325,4461869,4463428,4465187,4466923,4468687,4469876,4471448,4473177,4474693,4476349,4478123,4479995,4481326,4482687,4484355,4485966,4487485,4489226,4491003,4492813,4494008,4495523,4497265,4498797,4500418,4502262,4504087,4505645,4507293,4508812,4510408,4511927,4513527,4515155,4516855,4518351,4519934,4521550,4523009,4524588,4526144,4527720,4529291,4530751,4532222,4533763,4535233,4536658,4538109,4539261,4540349,4541564,4542948,4544232,4545409,4546747,4548389,4549942,4551244,4552507,4553927,4555322,4556704,4557915,4559422,4560395,4561762,4563481,4563526,4563574,4563623,4563668,4563706,4563816,4564252,4564957,4565717,4566591,4567537,4568520,4569492,4570522,4571471,4572653,4573755,4575021,4576369,4577528,4578829,4580148,4581320,4582535,4583620,4584646,4585856,4586879,4588097,4589262,4590293,4591193,4592124,4592911,4593561,4594261,4594885,4595161,4595206,4595250,4595295,4595343,4595392,4596881,4597626,4598369,4599217,4600343,4601649,4602889,4603836,4604870,4605867,4606915,4607625,4608377,4609151,4610153,4611119,4612258,4613457,4614557,4615739,4617000,4618221,4619438,4620804,4622186,4623547,4624893,4626196,4627519,4628704,4629640,4630418,4630951,4631482,4632020,4632826,4633732,4634517,4635318,4636249,4637300,4638239,4639123,4640150,4641556,4643119,4644313,4645604,4646935,4648404,4649847,4651312,4652949,4654720,4656518,4658338,4660164,4661940,4663668,4665379,4666989,4668688,4670438,4672048,4673696,4675309,4676980,4678532,4680008,4681667,4683334,4684911,4686483,4688052,4689659,4691220,4692638,4693795,4694886,4696285,4697904,4699425,4700999,4702547,4704000,4705355,4706791,4708244,4710213,4710936,4711688,4712748,4713828,4714988,4716295,4717704,4719016,4720287,4721841,4723271,4724527,4725281,4726195,4727405,4728698,4730093,4731335,4732550,4733788,4734912,4736053,4737222,4738431,4739756,4740950,4742223,4743649,4744878,4746153,4747535,4748889,4750211,4751506,4752778,4754017,4755198,4756135,4757135,4758327,4759436,4760727,4761886,4763610,4764185,4765587,4767164,4768072,4769714,4770537,4772174,4773336,4775310,4776669,4777605,4778258,4779869,4781662,4782456,4783344,4784129,4785203,4786287,4787308,4788300,4789317,4790504,4791829,4793406,4795063,4796707,4798346,4799854,4801194,4802599,4804121,4805807,4807426,4809129,4810767,4812398,4814033,4815607,4817069,4818595,4820225,4822052,4823907,4825771,4827617,4829381,4831151,4832635,4834035,4835384,4836743,4838093,4839337,4840366,4840995,4841939,4843137,4844258,4845448,4846347,4847617,4848457,4849422,4850608,4851607,4852557,4853585,4854558,4855576,4856544,4857541,4858526,4859541,4860547,4861496,4862508,4863522,4864534,4865470,4866446,4867441,4868454,4869405,4870418,4871428,4872443,4873449,4874403,4875431,4876443,4877453,4878405,4879422,4880435,4881458,4882411,4883433,4884452,4885464,4886756,4887817,4888735,4889623,4890747,4891605,4892818,4894098,4895554,4896154,4896781,4897367,4898110,4898770,4899436,4900064,4900972,4902140,4903341,4904162,4905158,4905982,4906784,4907607,4908428,4909226,4910151,4911047,4911954,4912859,4913738,4914488,4915450,4916230,4917195,4918192,4919171,4920084,4921069,4921668,4922395,4923041,4923700,4924444,4925241,4926139,4927004,4927811,4928686,4929476,4930312,4931115,4932120,4932871,4934284,4935821,4937869,4939077,4941125,4943173,4945221,4947269,4949317,4951365,4953413,4955461,4957509,4959557,4961605,4963653,4965701,4967749,4969797,4971845,4973893,4975941,4977989,4980037,4982085,4984133,4986084,4987967,4989667,4991362,4993114,4994814,4996564,4998412,5000315,5002340,5003480,5003528,5003577,5003622,5003660,5003705,5003753,5003802,5003847,5003885,5003930,5003978,5004027,5004682,5005557,5006947,5008372,5009892,5011450,5012919,5014474,5015984,5017546,5019233,5020931,5022634,5024350,5026071,5027752,5029408,5031087,5032665,5034307,5035910,5037532,5039047,5040341,5041617,5042798,5043997,5044993,5045508,5045880,5046116,5046270,5046361,5046409,5046456,5046501,5046545,5046590,5046638,5046685,5046730,5046774,5046819,5046867,5047561,5049618,5051666,5053714,5055762,5057810,5059858,5061906,5063954,5066002,5068050,5070098,5072146,5074194,5076242,5078290,5080338,5082386,5084434,5086482,5088530,5090578,5092626,5094674,5096722,5098770,5100818,5102866,5104914,5106525,5107798,5108966,5110154,5111431,5112572,5113738,5114906,5116111,5117349,5118552,5119856,5121036,5122340,5123712,5125041,5126705,5128321,5129846,5131299,5132683,5134057,5135648,5137165,5138560,5140037,5141719,5143287,5144768,5146251,5147775,5149330,5150644,5152083,5153476,5154934,5156385,5157741,5158926,5160266,5161532,5162806,5164024,5165072,5165999,5167008,5168058,5169172,5170191,5170990,5171720,5172393,5173262,5173990,5174582,5175236,5175871,5177238,5179107,5180407,5181456,5182546,5183577,5184695,5186012,5187389,5188535,5189763,5190963,5192267,5193569,5194937,5196343,5197858,5199608,5201354,5203015,5204801,5206604,5208194,5209837,5211223,5212795,5214119,5215694,5217350,5218846,5220256,5221862,5223438,5225052,5226614,5228287,5229865,5231335,5232643,5233999,5235294,5236472,5237588,5238610,5239606,5240644,5241557,5242508,5243528,5244555,5245607,5246570,5247436,5248157,5248797,5249165,5249689,5250071,5250894,5252740,5253437,5254125,5254782,5255434,5256110,5256781,5257476,5258124,5258806,5259467,5260147,5260845,5261800,5263334,5264943,5266443,5268067,5269682,5271340,5272905,5274424,5275915,5277128,5278016,5279017,5280534,5281976,5283516,5285033,5286520,5288014,5289437,5290800,5292059,5293065,5294049,5295422,5296937,5298413,5299833,5301332,5302754,5304021,5305127,5305858,5306547,5307271,5307947,5308576,5309248,5309964,5310650,5311307,5311950,5312630,5313292,5314010,5316058,5316796,5317441,5318137,5318798,5319500,5320183,5320827,5321511,5322205,5322860,5323532,5324199,5324920,5326093,5327707,5329313,5330925,5332649,5334351,5335951,5337507,5338994,5340417,5341702,5343102,5344475,5345726,5346994,5348308,5349672,5351051,5352240,5353396,5354958,5356636,5358308,5359924,5361582,5363196,5364736,5366185,5367375,5368447,5369234,5370038,5370717,5371373,5372039,5372715,5373410,5374102,5374767,5375428,5376094,5376812,5377472,5378136,5379819,5381219,5382897,5384367,5386121,5387765,5389181,5390667,5392474,5394498,5395497,5395857,5396386,5397023,5397675,5398405,5399264,5400106,5401072,5402192,5403241,5404387,5405713,5407201,5408709,5410315,5411877,5413455,5414954,5416435,5417867,5419315,5420750,5422179,5423670,5425161,5426591,5428045,5429463,5430765,5432132,5433516,5434936,5436537,5438160,5439721,5441180,5442519,5443642,5444833,5446124,5447343,5448593,5449855,5451015,5452146,5453191,5454120,5455123,5456167,5457177,5458164,5459047,5459895,5460597,5461276,5461668,5462759,5464187,5464489,5464968,5465497,5466176,5466883,5467699,5468561,5469491,5470484,5471463,5472576,5473813,5475141,5476625,5478255,5479944,5481670,5483337,5484972,5486497,5487892,5489295,5490593,5491912,5493267,5494683,5496157,5497540,5498994,5500486,5501905,5503382,5504812,5506261,5507713,5509222,5510903,5512556,5514115,5515496,5516801,5518070,5519314,5520537,5521712,5522908,5524102,5525168,5526244,5527320,5528335,5529293,5530073,5530797,5531462,5531987,5532752,5534662,5534946,5535368,5535936,5536609,5537312,5538090,5538939,5539830,5540867,5541942,5542951,5544270,5545818,5547296,5548759,5550338,5551869,5553323,5554625,5555895,5557234,5558620,5559941,5561328,5562719,5564143,5565494,5566746,5568139,5569515,5570891,5572216,5573540,5574852,5576149,5577502,5579016,5580580,5582188,5583636,5585111,5586542,5587899,5589106,5590328,5591568,5592765,5593934,5595011,5596053,5597038,5597979,5598847,5599673,5600338,5600851,5601186,5602918,5604554,5606143,5607809,5609294,5611070,5612655,5614123,5615680,5617177,5618798,5620290,5622169,5623399,5624609,5625779,5627516,5629348,5630639,5632193,5633874,5635031,5637079,5639041,5641089,5643052,5645058,5647050,5649086,5651058,5653106,5655154,5657116,5658968,5660344,5662027,5663725,5665439,5666931,5668646,5670494,5672542,5674590,5676638,5678686,5680734,5682782,5684830,5686878,5688926,5690974,5693022,5695070,5697118,5699166,5701214,5703262,5705310,5707358,5709406,5711454,5713502,5715550,5717598,5719646,5721686,5723170,5724139,5725039,5725836,5726666,5727638,5728573,5729463,5730247,5731236,5731911,5732845,5733831,5734752,5735656,5736515,5737422,5738363,5739106,5740047,5740880,5741977,5743188,5744040,5744833,5745725,5746906,5748065,5749063,5750250,5751241,5751853,5752685,5754045,5755313,5756588,5757919,5758640,5759265,5759885,5760473,5761015,5761587,5762576,5763500,5764402,5765094,5765865,5766393,5767117,5767690,5768367,5769104,5770167,5771046,5771644,5772336,5773058,5773662,5774777,5775739,5776729,5777723,5778360,5779056,5779566,5780139,5780742,5781443,5782118,5783025,5783681,5784378,5785150,5786001,5787235,5788003,5788916,5789861,5790791,5791663,5792388,5793333,5794077,5794846,5795706,5796704,5797679,5798422,5799195,5799523,5800083,5800916,5801955,5802255,5802831,5803794,5804462,5805182,5805752,5806365,5807052,5807928,5808827,5809603,5810218,5810872,5811445,5813044,5814750,5816447,5817914,5819326,5820749,5822116,5823659,5825312,5827243,5828994,5830783,5832241,5833700,5835109,5836538,5838087,5839861,5841861,5843486,5845127,5846856,5848480,5850104,5851800,5853552,5855350,5857142,5858888,5860617,5862274,5863532,5864726,5865941,5867414,5869014,5870623,5872339,5874107,5875846,5877607,5879279,5881036,5882744,5884497,5886148,5887898,5889566,5891326,5893103,5894743,5896514,5898318,5900001,5901758,5903535,5905298,5906944,5908525,5910152,5911568,5912866,5914180,5915571,5917093,5918627,5920245,5921882,5923438,5925042,5926681,5928213,5929796,5931438,5933048,5934761,5936803,5938211,5939614,5941099,5942639,5944099,5945577,5947121,5948595,5950077,5951613,5953246,5954824,5956230,5957867,5959539,5961187,5962904,5964679,5966405,5968083,5969768,5971346,5972934,5974451,5976031,5977641,5979233,5980797,5982427,5984066,5985652,5987202,5988760,5990407,5992026,5993672,5995289,5996908,5998479,6000040,6001658,6003308,6004901,6006475,6007693,6008938,6010417,6011915,6013325,6014710,6016182,6017747,6019365,6020977,6022440,6023843,6025339,6027384,6028758,6029980,6031206,6032451,6033681,6034945,6036182,6037431,6038673,6039963,6041268,6042651,6044121,6045407,6046693,6047989,6049295,6050617,6051926,6053205,6054438,6055720,6057001,6058261,6059525,6060776,6062008,6063266,6064525,6065767,6067001,6068185,6069398,6070640,6071866,6073115,6074359,6075606,6076875,6078125,6079395,6080640,6081933,6083238,6084555,6086125,6087420,6088711,6090023,6091354,6092664,6093957,6095209,6096460,6097756,6099026,6100250,6102059,6104007,6105735,6107528,6109321,6111110,6112901,6114683,6116462,6118250,6120026,6121773,6123498,6125232,6126930,6128625,6130273,6131909,6133540,6135141,6136788,6138424,6140020,6141611,6143321,6145033,6146716,6148431,6150210,6151950,6153754,6155480,6157244,6158998,6160744,6162442,6164038,6165749,6167441,6169122,6170788,6172455,6174131,6175886,6177608,6179315,6181036,6182782,6184527,6186294,6188077,6189819,6191590,6193333,6195089,6196831,6198584,6200363,6201705,6202822,6204389,6206437,6208485,6210533,6212581,6214629,6216677,6218725,6220782,6222830,6224878,6226926,6228974,6231022,6233070,6235118,6237166,6239214,6241262,6243310,6245358,6247406,6249463,6251511,6253559,6255607,6257655,6259703,6261751,6263799,6265847,6267895,6269943,6271991,6274039,6276087,6278135,6280183,6282231,6284279,6286327,6288375,6290423,6292480,6294528,6296576,6298624,6300672,6302720,6304768,6306816,6308864,6310912,6312960,6315008,6317056,6319104,6321152,6323200,6325248,6327296,6329344,6331392,6333440,6335488,6337536,6339584,6341632,6343680,6345728,6347776,6349824,6351872,6353920,6355976,6358024,6360072,6362120,6364168,6366216,6368264,6370312,6372360,6374408,6376456,6378504,6380552,6382600,6384648,6386696,6388744,6390792,6392840,6394888,6396936,6398984,6401032,6403080,6405128,6407176,6409224,6411272,6413320,6415368,6417416,6419464,6421512,6423560,6425608,6427656,6429704,6431752,6433800,6435848,6437896,6439944,6441992,6444040,6446088,6448136,6450184,6452232,6454280,6456328,6458376,6460424,6462472,6464520,6466568,6468616,6470664,6472712,6474760,6476808,6478856,6480904,6482952,6485000,6487048,6489096,6491144,6493192,6495240,6497288,6499336,6501384,6503432,6505480,6507528,6509576,6511624,6513672,6515720,6517768,6519816,6521864,6523912,6525960,6528008,6530056,6532104,6534152,6536200,6538248,6540296,6542344,6544392,6546440,6548488,6550536,6552584,6554632,6556680,6558728,6560776,6562824,6564872,6566920,6568968,6571016,6573064,6575112,6577160,6579208,6581256,6583304,6585352,6587400,6589448,6591496,6593544,6595592,6597640,6599688,6601736,6603784,6605832,6607880,6609928,6611976,6614024,6616072,6618120,6620168,6622216,6624264,6626312,6628360,6630408,6632456,6634504,6636552,6638600,6640648,6642696,6644744,6646792,6648840,6650888,6652936,6654984,6657032,6659080,6661128,6663176,6665224,6667272,6669320,6671368,6673416,6675464,6677512,6679560,6681608,6683656,6685704,6687752,6689800,6691848,6693896,6695944,6697992,6700040,6702088,6704136,6706184,6708232,6710280,6712328,6714376,6716424,6718472,6720520,6722568,6724616,6726664,6728712,6730760,6732808,6734856,6736904,6738952,6741000,6743048,6745096,6747144,6749192,6751240,6753288,6755336,6757384,6759432,6761480,6763528,6765576,6767624,6769672,6771720,6773768,6775816,6777864,6779912,6781960,6784008,6786056,6788104,6790152,6792200,6794248,6796296,6798344,6800392,6802440,6804488,6806536,6808584,6810632,6812680,6814728,6816776,6818824,6820872,6822920,6824968,6827016,6829064,6831112,6833160,6835208,6837256,6839304,6841352,6843400,6845448,6847496,6849544,6851601,6853657,6855714,6857762,6859810,6861858,6863906,6865954,6868002,6870050,6872098,6874146,6876194,6878242,6880290,6882338,6884386,6886434,6888482,6890530,6892578,6894626,6896674,6898722,6900770,6902818,6904866,6906914,6908962,6911010,6913058,6915106,6917154,6919202,6921250,6923298,6925346,6927394,6929442,6931490,6933538,6935586,6937634,6939682,6941730,6943778,6945826,6947874,6949922,6951970,6954018,6956066,6958114,6960162,6962210,6964258,6966306,6968354,6970402,6972450,6974498,6976546,6978594,6980642,6982690,6984738,6986786,6988834,6990882,6992930,6994978,6997026,6999074,7001122,7003170,7005218,7007266,7009314,7011362,7013410,7015458,7017506,7019554,7021602,7023650,7025698,7027746,7029794,7031842,7033890,7035938,7037986,7040034,7042082,7044130,7046178,7048226,7050274,7052322,7054370,7056418,7058466,7060514,7062562,7064610,7066658,7068706,7070754,7072802,7074850,7076898,7078946,7080994,7083042,7085090,7087138,7089186,7091234,7093282,7095330,7097378,7099435,7101483,7103531,7105579,7107627,7109675,7111723,7113771,7115819,7117867,7119915,7121963,7124011,7126059,7128107,7130155,7132203,7134251,7136299,7138347,7140153,7140807,7141376,7141934,7142548,7143169,7143815,7144426,7145018,7145618,7146184,7146840,7148109,7148804,7149325,7149913,7150553,7151114,7151490,7151902,7152384,7154059,7155803,7157236,7158269,7158911,7160262,7161613,7162864,7164511,7165475,7166636,7167862,7169625,7170972,7172032,7173354,7173836,7174242,7174709,7175175,7175714,7176190,7176703,7177140,7177484,7177784,7178060,7178368,7178744,7180253,7182275,7183919,7185642,7187117,7188905,7189874,7190944,7191784,7192704,7193809,7194830,7195847,7196963,7198153,7198870,7199949,7200893,7201763,7202858,7204082,7204963,7206269,7207365,7208454,7209250,7210341,7211503,7212546,7213786,7214770,7215728,7216609,7217936,7218570,7219664,7220761,7222033,7223057,7224135,7225167,7226071,7227145,7228233,7229315,7230232,7231272,7232374,7232738,7233050,7233361,7234154,7235166,7236132,7236935,7237857,7239433,7240665,7242324,7243579,7245633,7247211,7248698,7250210,7251813,7253434,7255019,7256610,7258232,7259907,7261515,7263148,7264795,7266443,7268100,7269735,7271366,7272976,7274624,7276317,7278046,7279718,7281414,7283186,7284964,7286698,7288347,7290097,7291874,7293681,7295453,7297282,7299182,7301095,7302970,7304869,7306740,7308577,7310354,7312197,7313997,7315793,7317618,7319383,7321206,7322983,7324763,7326392,7327929,7329561,7331200,7332777,7334284,7335742,7337301,7338865,7340527,7342176,7344107,7345803,7347234,7348725,7350226,7351775,7353220,7354750,7356255,7357679,7359139,7360733,7362371,7363798,7365334,7367009,7368711,7370377,7372149,7373930,7375562,7377290,7378897,7380479,7382025,7383533,7385129,7386739,7388313,7389927,7391539,7393158,7394748,7396297,7397860,7399470,7401115,7402704,7404344,7405908,7407481,7409054,7410696,7412325,7413896,7415313,7416467,7417874,7419377,7420852,7422217,7423704,7425216,7426806,7428417,7429954,7431343,7432815,7434578,7436207,7436743,7437418,7437937,7438535,7439292,7440080,7440725,7441695,7442677,7443734,7444823,7445761,7446996,7448230,7449505,7450827,7452160,7453539,7454929,7456323,7457742,7459181,7460524,7461928,7463468,7464950,7466374,7467785,7469184,7470364,7471295,7472317,7473326,7474580,7475868,7477131,7478191,7479317,7480317,7481225,7482232,7483256,7484070,7485072,7485957,7486770,7487582,7488435,7489305,7489990,7490411,7491240,7491875,7492571,7493302,7493890,7494668,7496693,7497392,7498157,7498971,7499925,7500913,7501985,7503078,7504192,7505301,7506457,7507484,7508367,7509126,7509919,7511136,7512433,7513823,7515304,7516766,7518259,7519752,7521248,7522586,7524133,7525696,7527286,7528823,7530404,7532027,7533740,7535397,7536998,7538487,7540067,7541570,7543105,7544581,7546102,7547452,7548744,7550015,7551141,7552126,7553117,7554210,7555280,7556342,7557439,7558628,7559833,7561028,7562057,7562987,7563767,7564572,7565400,7566142,7566886,7568309,7570115,7572163,7574211,7576259,7578307,7580355,7582403,7584451,7586499,7588547,7590595,7592643,7594691,7596739,7598787,7600835,7602883,7604931,7606979,7609027,7611075,7613123,7615171,7617219,7619267,7621315,7623363,7625411,7627459,7629507,7631555,7633603,7635651,7637699,7639754,7641802,7643850,7645898,7647946,7649994,7652042,7654090,7656138,7658186,7660234,7662282,7664330,7666378,7668426,7670474,7672522,7674570,7676625,7678673,7680721,7682769,7684817,7686865,7688913,7690961,7693009,7695057,7697105,7699153,7701201,7703249,7705280,7707328,7709376,7711432,7713480,7715528,7717576,7719624,7721672,7723720,7725768,7727816,7729864,7731912,7733960,7736008,7738056,7740104,7742152,7744200,7746248,7748296,7750353,7752401,7754449,7756497,7758545,7760593,7762641,7764689,7766737,7768785,7770833,7772881,7774929,7776977,7779025,7781073,7783121,7785169,7787217,7789265,7791313,7793361,7795409,7796869,7798196,7799469,7800556,7801487,7801834,7802599,7803517,7804619,7805702,7806764,7807793,7808316,7809558,7811127,7812654,7813973,7815436,7816763,7818171,7819504,7820576,7821721,7822895,7823802,7825567,7826847,7828189,7829470,7830670,7831872,7833090,7834223,7835460,7836934,7838369,7839744,7841039,7842340,7843570,7844876,7846339,7847871,7849530,7851103,7852681,7854292,7855829,7857388,7858984,7860498,7862029,7863527,7864985,7866391,7867762,7869119,7870714,7872768,7874816,7876864,7878912,7880960,7883008,7884991,7887039,7889087,7891135,7893183,7895231,7897279,7899327,7901375,7903423,7905471,7907519,7909567,7911615,7913663,7915711,7917759,7919807,7921855,7923903,7925951,7927999,7930047,7932095,7934148,7936196,7938250,7940288,7942329,7944357,7946386,7948282,7950330,7952378,7954426,7956474,7958522,7960570,7962618,7964666,7966714,7968762,7970810,7972858,7974906,7976954,7979002,7981050,7983098,7985146,7987194,7989242,7991290,7993338,7995386,7997434,7999482,8001530,8003578,8005626,8007674,8009722,8011770,8013818,8015866,8017914,8019962,8022010,8024058,8026106,8028154,8030202,8032250,8034298,8036346,8038394,8040442,8042490,8044538,8046586,8048634,8050682,8052730,8054778,8056826,8058874,8060922,8062970,8065018,8067066,8069114,8071162,8073210,8075258,8077306,8079354,8081402,8083450,8085498,8087546,8089594,8091642,8093690,8095738,8097786,8099834,8101882,8103930,8105978,8108026,8110074,8112122,8114170,8116218,8117645,8119026,8120458,8121858,8123230,8124622,8126091,8127558,8129082,8130737,8132386,8133893,8135347,8136763,8138061,8139636,8141306,8143028,8144763,8146404,8148033,8149520,8150970,8152559,8154195,8155827,8157493,8159151,8160732,8162259,8163695,8165295,8167307,8169356,8171404,8173395,8175443,8177455,8179475,8181513,8183561,8185581,8187629,8189620,8191661,8193709,8195722,8197770,8199825,8201866,8203922,8205970,8207998,8209939,8211852,8213900,8215943,8217767,8219294,8220892,8222483,8224060,8225644,8227215,8227956,8228195,8228405,8228643,8228856,8229159,8229491,8229711,8229940,8230163,8230383,8230808,8232213,8233964,8235299,8236579,8237884,8239175,8240264,8241415,8242575,8243909,8245082,8246302,8247611,8248708,8249886,8251934,8253520,8254181,8255695,8257743,8258753,8259466,8261226,8263186,8264070,8265029,8267077,8268641,8269263,8270409,8271420,8272296,8273165,8274086,8275070,8276003,8276885,8277647,8278618,8279445,8280172,8281149,8282089,8283147,8284140,8285055,8285875,8286772,8287698,8288805,8289759,8290821,8291881,8292849,8293688,8294931,8295825,8296864,8298039,8298714,8299429,8299866,8300329,8301356,8302292,8303244,8304039,8304564,8304900,8305239,8305585,8305950,8306313,8306840,8307346,8308292,8309507,8310580,8311578,8312860,8314226,8315777,8317309,8318589,8319941,8320985,8322204,8323735,8325000,8326274,8327465,8328734,8330130,8331563,8333081,8334545,8335720,8336779,8337968,8339279,8340693,8342093,8343647,8345131,8346205,8347393,8348539,8349815,8351294,8352743,8354311,8355774,8356787,8357946,8359067,8360494,8361883,8363377,8364912,8366199,8367295,8368410,8369589,8371046,8372495,8374025,8375516,8376496,8377748,8378866,8380269,8381572,8382971,8383870,8384505,8385112,8385770,8386433,8387082,8387748,8388389,8389029,8390000,8390950,8391800,8392494,8393151,8394120,8395059,8395882,8396523,8397435,8398264,8399175,8399646,8400284,8401049,8401653,8402331,8403157,8403861,8404676,8405354,8406218,8406696,8407352,8408008,8408429,8409210,8409851,8410476,8411182,8411832,8412648,8413323,8413809,8414367,8415104,8415807,8416312,8416784,8417477,8417909,8418359,8418940,8419505,8420144,8421131,8421582,8422007,8422947,8423848,8424878,8426022,8426520,8426985,8427501,8428187,8428922,8429903,8430571,8431201,8431827,8432462,8433378,8434472,8435498,8436508,8437090,8437596,8438509,8439297,8439911,8440537,8441221,8442052,8442767,8443100,8443661,8444403,8445116,8446040,8446716,8447805,8448475,8449356,8450153,8450990,8451881,8452771,8453601,8454458,8455370,8456244,8457115,8457965,8458913,8459624,8460425,8461289,8462133,8463025,8463842,8464865,8465537,8466517,8467475,8468448,8469413,8470373,8471322,8472281,8473256,8474223,8475174,8476134,8477088,8478025,8478918,8479807,8480682,8481810,8482592,8483424,8484013,8484831,8485759,8486592,8487377,8488193,8489001,8489637,8490436,8491267,8492150,8492868,8493666,8494406,8495170,8495999,8496673,8497276,8498009,8499357,8500053,8500818,8502386,8504138,8505995,8507730,8509727,8511589,8513637,8515685,8517733,8519509,8520875,8522546,8524309,8526361,8528409,8530272,8532068,8534116,8535993,8537750,8539801,8541849,8543897,8545868,8547711,8549619,8551565,8553383,8555336,8557348,8559156,8561095,8562415,8563572,8564170,8564826,8565317,8567125,8569182,8571125,8572691,8574085,8575302,8576442,8577736,8579737,8581571,8582832,8584093,8585156,8586239,8587954,8589400,8590815,8591876,8592376,8592519,8592952,8594917,8596965,8599013,8601061,8603109,8605157,8607205,8609253,8611301,8613349,8615397,8617445,8619493,8621501,8623435,8624803,8626851,8628899,8630956,8633004,8635060,8637108,8639164,8641212,8641888,8641926,8643973,8645996,8648044,8650092,8652091,8653449,8655402,8657388,8659436,8661348,8663349,8665397,8667445,8669493,8671541,8673569,8675431,8677479,8679527,8681431,8683479,8685499,8687537,8689593,8691623,8693675,8695723,8697750,8699554,8700985,8702718,8704605,8706653,8708701,8710749,8712797,8714853,8716901,8718949,8720997,8722029,8723078,8724231,8725352,8726859,8727941,8729645,8731117,8732289,8733855,8735070,8736366,8737427,8738527,8739596,8740561,8741763,8742928,8744480,8746337,8748259,8750155,8752042,8753955,8755274,8756320,8757338,8758450,8759573,8761331,8762488,8763522,8764546,8765706,8767121,8768122,8769207,8770490,8771703,8773015,8774071,8775829,8777873,8779921,8781895,8783925,8785905,8787953,8789988,8791960,8794008,8795983,8798031,8800064,8802032,8804066,8806109,8808157,8810190,8812218,8814266,8816323,8818354,8820382,8822430,8824485,8826523,8828503,8830559,8832592,8834571,8836621,8838678,8840657,8842705,8844753,8846725,8848761,8850809,8852790,8854832,8856889,8858859,8860907,8862964,8864954,8867006,8868984,8871032,8873087,8875135,8877190,8879182,8881237,8883285,8885342,8887390,8889438,8891486,8893534,8895556,8897491,8899539,8901587,8903635,8905683,8907731,8909779,8911827,8913875,8915923,8917845,8919893,8921941,8923989,8926037,8928085,8930133,8932181,8934229,8936130,8938178,8940226,8942274,8944322,8946370,8948418,8950466,8952362,8954410,8956458,8958506,8960554,8962602,8964650,8966561,8968609,8970657,8972705,8974753,8976801,8978849,8980897,8982788,8984836,8986884,8988932,8990980,8993028,8995076,8997124,8999023,9001071,9003119,9005167,9007215,9009263,9011311,9013359,9015407,9017455,9019165,9020960,9022637,9024282,9026155,9027360,9028275,9030168,9032166,9034193,9036241,9038210,9040194,9042223,9044053,9046003,9048010,9050012,9051978,9053996,9056034,9057413,9058749,9060267,9061704,9063022,9064955,9066223,9067366,9068501,9069411,9070872,9072391,9073885,9075372,9076840,9077479,9078189,9078889,9079608,9080336,9081003,9081657,9082289,9082755,9083316,9083850,9085063,9086924,9088613,9090318,9092006,9093699,9095572,9097289,9099026,9100781,9102059,9102900,9104718,9106378,9107937,9109414,9110904,9111820,9112358,9112606,9113050,9113498,9113969,9114269,9114883,9116512,9118217,9119906,9121590,9123385,9125198,9127005,9128578,9129982,9131632,9133085,9134565,9136081,9136741,9137225,9137705,9138239,9138632,9139012,9139496,9140017,9140544,9141480,9143344,9145011,9146685,9148369,9150086,9151962,9153754,9155491,9156774,9158329,9160033,9161517,9162987,9164473,9165966,9166877,9167520,9168174,9168742,9169331,9169826,9170447,9170891,9171524,9171988,9172549,9173038,9173420,9174256,9176235,9177935,9179616,9181293,9182960,9184655,9186476,9188353,9190066,9191748,9193519,9194701,9196020,9197698,9199425,9200920,9202402,9203883,9205096,9205681,9206278,9206868,9207444,9208009,9208632,9209219,9209748,9210355,9210892,9211430,9212717,9214599,9216269,9217947,9219608,9221298,9223006,9224937,9226654,9228344,9230047,9231274,9232199,9233985,9235648,9237171,9238661,9240155,9241564,9242156,9242731,9243294,9243800,9244226,9244768,9245345,9245940,9246465,9246870,9247330,9248451,9250275,9251960,9253650,9255320,9256967,9258805,9260566,9262317,9264001,9265507,9266308,9268176,9269838,9271369,9272845,9274116,9274505,9275042,9275474,9275870,9276396,9276892,9277342,9277937,9279797,9281449,9283152,9284812,9286670,9288332,9290040,9291568,9292848,9294424,9295938,9297414,9298872,9300359,9301846,9303256,9303926,9304542,9305058,9305644,9306316,9306861,9307475,9308120,9308654,9309247,9309967,9310668,9311264,9312013,9312687,9313263,9313904,9314525,9315182,9315712,9316467,9318460,9320223,9321883,9323599,9325271,9326931,9328623,9330336,9332044,9333740,9335596,9337451,9339197,9340926,9342610,9344442,9346276,9348060,9349027,9349728,9350622,9352425,9354259,9355927,9357746,9359337,9360816,9362286,9363755,9365219,9366123,9366586,9367036,9367590,9368139,9368750,9369345,9369911,9370390,9370878,9371446,9371963,9372516,9373117,9373895,9375911,9377601,9379299,9380981,9382670,9384359,9386032,9387923,9389689,9391458,9393243,9395037,9396505,9397180,9398341,9400340,9402045,9403752,9405294,9406779,9408273,9409744,9411226,9411886,9412516,9413191,9413823,9414464,9415017,9415503,9416068,9416710,9417349,9417760,9418281,9418756,9419238,9419722,9421475,9423298,9424987,9426673,9428367,9430072,9431778,9433500,9435478,9437172,9438862,9440660,9442479,9444050,9444820,9446248,9448180,9449911,9451500,9452986,9454482,9455965,9457407,9458027,9458562,9459187,9459798,9460435,9460985,9461505,9461771,9462013,9462197,9462425,9462672,9462869,9464298,9466284,9468008,9469685,9471392,9473103,9474826,9476540,9478552,9480356,9482078,9483852,9485635,9487386,9488480,9490121,9491749,9493330,9494781,9495905,9496574,9497199,9497864,9498515,9500112,9501795,9503542,9505281,9506505,9508127,9509586,9511056,9512319,9512863,9513425,9513995,9514509,9514956,9515450,9515896,9516406,9517429,9519250,9520908,9522592,9524244,9526108,9527795,9529491,9530474,9532022,9533729,9535212,9536680,9538147,9539517,9540098,9540685,9541289,9541865,9542429,9543000,9543586,9543998,9544557,9545154,9545708,9547383,9549105,9550784,9552471,9554159,9555850,9557719,9559406,9561176,9562917,9563730,9565201,9567040,9568624,9570089,9571555,9572820,9573423,9574003,9574334,9574803,9575334,9575770,9576057,9576353,9576735,9577270,9579035,9580758,9582442,9584119,9585740,9587403,9589272,9590997,9592689,9594242,9595034,9596863,9598572,9600035,9601483,9602918,9603915,9604177,9604495,9604840,9605258,9605707,9606173,9606491,9606823,9607265,9607702,9608101,9609733,9611416,9613049,9614692,9616364,9618013,9619870,9621593,9623234,9624923,9625990,9627658,9629214,9630697,9632199,9632829,9633332,9633829,9634362,9634933,9635577,9636196,9636833,9637327,9638595,9640357,9642032,9643687,9645363,9647237,9648885,9650571,9652316,9653162,9655000,9656643,9658104,9659586,9661069,9662523,9663121,9663615,9664187,9664692,9665301,9665891,9666517,9666947,9667378,9667896,9668361,9668839,9669265,9671124,9672879,9674545,9676228,9677907,9679590,9681260,9683201,9684876,9686526,9688249,9689971,9690729,9692158,9693952,9695679,9697119,9698597,9700088,9701559,9703044,9704542,9706029,9707526,9709005,9709967,9710610,9711365,9712042,9712583,9713253,9713739,9714478,9715029,9715638,9716120,9716797,9717488,9718107,9718735,9719393,9720002,9720628,9720931,9721619,9722247,9722941,9723461,9723847,9724462,9725007,9725309,9725592,9726192,9728249,9730275,9732036,9733763,9735474,9737166,9738864,9740530,9742221,9743914,9745591,9747255,9748956,9750646,9752646,9754578,9756247,9757990,9759663,9761320,9763024,9764741,9766457,9768118,9769718,9770500,9771307,9772679,9774551,9776384,9777094,9777738,9778736,9778967,9780627,9782278,9783937,9785446,9786953,9788449,9789965,9791472,9792976,9794460,9795940,9797430,9798905,9799975,9800686,9801503,9802265,9802876,9803635,9804314,9805014,9805785,9806451,9807016,9807737,9808405,9809024,9809689,9810358,9811112,9811769,9812431,9813027,9813517,9814055,9814573,9814931,9815171,9815537,9816057,9816634,9817023,9817332,9817584,9817704,9818790,9820846,9822797,9824617,9826308,9828003,9829712,9831388,9833072,9834758,9836469,9838112,9839796,9841459,9843119,9844815,9846507,9848374,9850422,9852235,9853992,9855722,9857438,9859151,9860815,9862507,9864176,9865799,9867508,9869242,9870624,9871561,9872490,9874322,9876216,9877915,9879700,9881493,9883104,9884592,9886073,9887551,9889043,9889637,9890162,9890703,9891246,9891711,9892268,9892684,9893167,9893558,9894111,9894172,9894754,9895341,9896348,9898301,9899967,9901652,9903313,9904997,9906695,9908545,9910283,9912007,9913686,9915405,9916736,9917801,9919596,9921351,9922813,9924257,9925717,9927196,9928707,9930208,9931688,9933157,9934616,9935233,9935889,9936504,9937144,9937675,9938315,9939002,9939687,9940361,9940973,9941468,9942130,9942759,9943455,9944005,9944704,9945339,9945799,9946381,9947005,9947611,9948035,9948526,9949129,9950379,9952403,9954258,9955950,9957622,9959304,9960998,9962703,9964413,9966100,9967750,9969450,9971223,9973273,9974995,9976661,9978323,9980015,9981746,9983468,9985206,9986861,9987733,9988771,9990571,9992239,9993752,9995406,9997036,9998573,10000044,10001505,10002994,10004477,10005969,10006688,10007195,10007685,10008220,10008925,10009552,10010253,10010850,10011536,10012217,10012795,10013246,10013841,10014557,10015252,10015693,10016084,10017497,10019487,10021160,10022824,10024494,10026171,10027887,10029578,10031250,10033143,10034947,10036629,10038327,10040135,10041879,10043643,10044777,10046231,10047995,10049852,10051428,10052910,10054413,10055889,10057395,10058889,10060374,10061848,10063355,10064854,10066363,10067870,10069368,10070171,10070806,10071505,10072084,10072718,10073339,10073866,10074502,10075135,10075803,10076428,10076995,10077607,10078200,10078778,10079310,10079924,10080469,10080949,10081535,10082178,10082543,10083144,10083733,10084363,10084948,10085504,10085981,10086605,10087170,10087695,10088275,10088906,10089384,10089945,10090361,10090833,10091371,10091889,10092458,10093708,10095747,10097788,10099769,10101485,10103198,10104915,10106620,10108347,10110032,10111746,10113452,10115174,10116879,10118605,10120303,10122018,10123720,10125439,10127155,10128864,10130782,10132830,10134684,10136370,10138101,10139816,10141507,10143185,10144924,10146658,10148319,10150070,10151812,10153598,10155132,10156046,10156923,10157811,10158715,10160375,10162090,10163719,10165278,10166839,10168373,10169885,10170918,10171545,10173274,10175042,10176802,10178491,10179969,10181446,10182928,10184411,10185738,10186395,10187081,10187713,10188276,10188726,10189089,10189474,10189978,10190211,10190670,10191186,10191607,10192297,10194288,10196011,10197691,10199368,10201051,10202721,10204398,10206352,10208094,10209832,10211549,10213273,10214304,10215928,10217682,10219226,10220687,10222165,10223084,10223578,10224090,10224504,10224908,10225233,10225647,10226008,10226687,10228552,10230225,10231898,10233575,10235462,10237192,10238921,10240442,10241858,10243510,10244964,10246446,10247907,10249379,10250438,10251021,10251614,10252216,10252867,10253390,10253952,10254552,10255180,10255561,10256040,10256445,10256977,10257290,10258687,10260528,10262174,10263838,10265506,10267167,10268856,10270523,10272451,10274124,10275836,10277532,10278879,10279314,10280368,10281799,10283120,10284736,10286258,10287744,10289143,10289597,10289733,10290191,10290527,10290837,10291114,10291421,10291863,10293593,10295233,10296879,10298532,10300342,10301992,10303622,10304503,10306070,10307578,10309024,10310493,10311100,10311684,10312076,10312539,10313058,10313526,10314273,10316080,10317743,10319398,10321216,10322951,10324034,10325696,10327203,10328696,10330170,10331650,10333107,10334579,10336064,10336979,10337601,10338206,10338882,10339474,10339960,10340452,10340978,10341580,10341938,10342477,10342898,10343441,10343913,10344392,10344793,10345167,10345677,10345931,10346808,10348740,10350557,10352211,10353891,10355580,10357274,10358954,10360613,10362279,10363940,10365942,10367647,10369356,10371137,10372847,10374513,10376161,10377277,10378094,10379548,10381176,10382653,10384326,10385997,10387513,10388994,10390482,10391963,10392757,10393213,10393525,10394053,10394504,10394973,10395233,10395699,10396246,10396697,10397115,10397460,10397815,10398326,10400230,10401939,10403593,10405251,10406904,10408554,10410225,10412167,10413827,10415521,10417189,10418853,10419489,10420545,10422070,10423788,10425330,10426812,10428138,10428630,10429150,10429519,10429660,10430239,10430617,10431138,10432936,10434641,10436334,10438177,10439962,10441713,10442766,10444477,10446461,10448517,10450565,10452603,10454656,10456394,10457994,10459551,10460957,10461946,10462743,10463596,10464369,10465206,10466119,10467470,10469477,10471487,10473385,10475298,10476902,10478079,10479314,10480642,10482036,10483379,10484192,10485601,10486338,10487060,10488256,10489398,10490433,10491523,10492516,10493632,10494640,10495627,10496526,10497607,10498720,10499807,10500828,10501605,10502557,10503554,10504452,10505331,10506243,10507067,10508061,10508983,10509927,10510982,10511990,10512961,10514080,10515106,10516042,10516930,10517766,10518748,10519742,10520581,10521609,10522538,10523474,10524413,10525282,10526291,10527329,10528302,10529380,10530238,10531203,10532311,10533340,10534370,10535358,10536382,10537463,10538546,10539648,10540819,10541938,10543086,10544219,10545355,10546436,10547592,10548731,10549909,10550956,10552017,10553005,10553677,10554792,10555971,10557062,10558003,10559091,10560266,10561392,10562436,10563577,10564573,10565616,10566723,10567763,10569059,10570192,10571268,10572337,10573465,10574596,10575663,10576831,10577945,10579106,10580268,10581323,10582435,10583624,10584765,10585956,10587030,10588223,10589451,10590600,10591696,10592873,10594008,10595333,10597381,10598945,10599997,10601031,10601988,10602964,10603947,10605023,10606042,10607063,10607934,10609120,10610284,10611118,10612212,10613211,10614209,10615225,10615893,10616747,10617493,10618350,10619307,10620735,10622144,10623681,10625094,10627054,10629108,10631156,10633121,10634533,10636523,10638564,10640612,10642660,10644708,10646488,10648536,10650251,10652132,10654184,10656232,10658280,10660328,10662376,10664424,10666472,10668520,10670555,10672595,10674620,10676641,10678678,10680698,10682650,10684489,10686184,10688064,10690112,10692160,10694208,10696256,10698304,10700352,10702400,10704448,10706496,10708544,10710601,10712605,10714566,10716423,10718246,10719742,10721266,10723234,10725157,10726960,10728825,10730858,10732910,10734967,10737015,10739063,10741118,10743166,10745214,10747262,10749310,10751358,10753406,10755454,10757511,10759554,10761161,10762147,10764130,10766186,10768234,10770282,10772330,10774387,10776435,10778483,10780531,10782579,10784627,10786675,10788723,10790771,10792819,10794867,10796915,10798963,10801020,10803071,10804844,10806662,10808719,10810767,10812821,10814741,10816391,10817802,10819068,10820107,10820922,10821428,10823033,10825090,10827138,10829186,10831234,10833291,10835348,10837396,10839444,10841496,10843436,10844964,10845913,10847695,10849752,10851793,10853790,10855686,10857422,10858979,10860238,10861129,10861775,10862085,10862201,10863980,10866028,10868076,10870127,10872177,10874225,10876273,10878321,10880369,10882426,10884474,10886522,10888560,10890585,10892433,10894095,10895604,10896835,10898842,10900898,10902946,10904994,10907042,10909090,10911138,10913191,10915248,10917304,10919358,10921410,10923436,10925388,10927151,10928692,10929791,10930766,10932588,10934448,10936452,10938500,10940555,10942612,10944592,10946315,10947737,10948497,10950527,10952575,10954623,10956612,10958450,10960498,10962546,10964389,10965261,10965299,10965523,10965563,10965945,10967993,10970041,10972098,10974146,10976201,10978249,10980305,10982351,10984302,10986324,10988372,10990420,10992468,10994473,10996530,10998578,11000626,11002674,11004722,11006770,11008818,11010866,11012914,11014893,11016462,11018393,11020435,11021934,11023560,11025603,11027619,11029285,11030648,11032109,11033933,11035959,11038005,11040061,11042109,11044152,11046192,11048114,11049657,11050207,11050875,11052931,11054979,11057036,11059090,11061143,11063199,11065247,11067295,11069346,11071400,11073433,11075316,11077154,11079120,11080766,11082646,11084694,11086742,11088790,11090838,11092886,11094943,11096991,11099048,11100950,11102998,11105054,11107102,11109159,11111207,11113255,11115303,11117338,11118958,11120977,11122940,11124875,11125888,11127933,11129981,11132021,11133937,11135570,11137618,11139666,11141714,11143762,11145817,11147865,11149913,11151961,11154016,11155970,11157376,11158890,11160782,11162767,11164784,11166822,11168864,11170890,11172912,11174965,11177022,11179078,11181101,11183135,11185157,11187133,11189119,11191091,11193144,11195196,11197251,11199287,11201333,11203363,11205395,11207447,11209499,11211547,11213586,11215607,11217524,11219328,11220952,11222363,11223726,11224907,11226111,11227324,11228367,11229403,11230483,11231439,11232448,11233439,11234285,11235165,11235934,11236611,11237249,11237707,11237927,11238105,11238247,11238307,11238368,11239888,11241915,11243957,11246005,11248051,11250003,11251743,11253451,11254757,11255465,11257481,11259529,11261577,11263625,11265525,11267573,11269621,11271669,11273634,11275682,11277730,11279778,11281826,11283821,11285869,11287917,11289972,11292022,11294049,11296097,11298154,11300202,11302246,11304302,11306354,11308322,11310226,11312090,11313779,11315575,11317252,11319061,11321109,11323157,11325205,11327253,11329301,11331355,11333328,11335181,11337236,11339284,11341341,11343398,11345455,11347509,11349555,11351466,11353514,11355562,11357472,11359142,11360871,11362928,11364984,11366655,11368340,11370388,11372436,11374484,11376532,11378580,11380628,11382685,11384740,11386785,11388744,11390475,11391954,11393478,11394769,11396003,11397299,11399347,11401395,11403443,11405498,11407546,11409474,11411252,11412466,11412828,11413698,11415065,11416755,11418618,11420577,11422482,11424406,11426411,11428370,11430163,11431769,11433170,11434379,11435059,11435463,11436776,11438767,11440811,11442422,11443515,11444943,11446991,11449039,11451087,11453135,11455183,11457231,11459279,11461327,11463277,11465296,11467336,11469242,11470799,11471930,11473176,11475224,11477169,11478650,11480191,11482239,11484287,11486335,11488386,11490434,11492487,11494543,11496591,11498533,11500459,11502025,11504060,11505933,11507204,11508086,11510132,11512180,11514228,11516276,11518324,11520372,11522420,11524334,11526174,11528231,11530279,11532327,11534375,11536423,11538471,11540462,11541598,11542948,11544756,11546776,11548826,11550882,11552930,11554451,11555874,11557843,11559761,11561809,11563857,11565905,11567962,11569996,11571902,11573271,11574391,11575168,11575733,11576129,11576425,11576541,11578038,11580086,11582134,11584182,11586230,11588278,11590326,11592374,11594422,11596470,11598518,11600566,11602614,11604662,11606710,11608758,11610806,11612854,11614235,11616223,11618271,11620319,11622367,11624415,11626463,11628511,11630568,11631964,11632163,11633333,11635013,11636937,11638986,11641034,11643082,11645130,11647178,11649226,11651274,11653322,11655370,11657425,11659343,11661007,11662542,11663916,11665151,11666262,11667285,11668229,11668973,11669795,11670743,11671656,11672354,11673845,11675880,11677937,11679985,11682033,11684081,11686129,11688177,11690225,11692273,11694321,11696369,11698417,11700465,11702423,11703763,11704580,11705265,11706557,11708605,11710653,11712710,11714765,11716411,11717997,11720051,11721863,11723231,11724258,11724837,11725640,11726449,11728497,11730449,11731770,11732207,11733951,11735851,11737845,11739887,11741943,11743991,11746046,11748094,11750124,11751679,11753465,11755270,11757220,11759171,11761226,11763274,11765322,11767370,11769418,11771466,11773514,11775566,11777577,11779369,11780878,11781894,11782540,11784021,11786053,11788101,11790149,11792197,11794245,11796293,11798341,11800398,11802455,11804468,11806242,11807764,11808899,11809873,11810207,11810505,11812424,11814470,11816448,11818366,11820197,11821939,11823618,11825675,11827725,11829530,11831108,11832424,11834202,11835913,11837900,11839948,11841882,11843939,11844927,11846975,11848695,11850546,11852377,11854425,11856119,11858051,11859496,11860927,11862059,11863578,11865582,11867625,11869646,11871518,11873490,11875497,11877412,11879460,11881512,11883558,11885355,11886436,11887561,11889609,11891657,11893705,11895753,11897801,11899224,11900113,11902170,11904218,11906275,11908323,11909994,11910425,11912038,11914086,11916125,11918173,11920221,11922269,11924317,11926321,11928353,11930401,11931928,11933928,11935976,11937699,11939755,11941803,11943392,11945403,11947451,11948984,11950275,11952024,11953726,11954350,11956365,11958413,11960470,11962517,11964047,11964210,11964305,11965486,11967504,11969559,11971615,11973663,11975711,11977765,11979822,11981736,11983784,11985832,11987815,11989839,11991893,11993833,11995881,11997893,11999950,12001998,12004032,12006080,12007958,12009860,12011586,12013433,12014910,12016709,12017903,12019545,12021240,12022837,12024139,12025407,12027384,12029346,12031152,12033079,12035127,12037175,12039223,12041260,12042805,12043803,12044519,12045783,12047794,12049058,12050604,12052418,12054466,12056514,12058562,12060610,12062666,12064714,12066762,12068818,12070875,12072923,12074884,12076701,12078313,12079717,12080922,12081826,12083005,12085053,12087101,12089149,12091197,12093245,12094972,12095488,12097464,12099512,12101560,12103581,12105465,12107495,12109552,12111608,12113656,12115704,12117761,12119817,12121871,12123841,12125668,12127148,12128050,12128771,12130819,12132867,12134915,12136963,12138518,12138790,12139578,12141596,12143644,12145692,12147740,12149797,12151845,12153893,12155941,12157913,12159559,12159858,12160334,12161637,12163552,12165608,12167656,12169704,12171752,12173800,12175848,12177896,12179951,12181999,12184055,12186074,12188003,12189790,12191573,12193319,12194891,12196303,12197552,12198790,12200054,12201119,12201952,12202509,12203071,12203554,12204047,12204525,12204953,12205335,12205807,12206231,12206710,12207230,12207769,12208027,12208364,12209167,12210357,12211525,12212783,12213956,12214984,12215964,12216841,12217557,12218082,12218390,12218538,12218678,12219582,12221222,12223065,12225100,12227148,12229196,12231218,12233186,12235205,12237042,12239018,12240806,12242808,12244742,12246517,12247985,12250020,12252077,12254129,12256144,12258183,12260218,12262262,12264298,12266311,12268321,12270299,12272355,12274242,12276203,12278251,12280299,12282354,12284092,12285877,12287908,12289685,12291529,12293586,12295443,12296708,12298340,12300331,12302385,12304407,12306278,12308198,12310157,12312008,12313937,12315934,12317982,12320030,12322085,12323929,12325977,12328021,12329730,12331203,12332835,12334242,12335426,12335892,12336492,12336911,12337303,12338076,12338693,12339698,12341318,12342715,12344137,12345524,12346777,12348205,12349834,12351561,12353339,12355146,12357068,12359054,12361068,12363117,12365174,12367228,12369276,12371324,12373372,12375428,12377484,12379526,12381518,12383478,12385477,12387460,12389379,12391182,12392897,12394623,12396302,12397991,12399519,12400970,12402454,12403872,12405306,12406665,12407938,12409137,12410350,12411529,12412722,12413771,12414725,12415648,12416566,12417997,12419519,12421002,12422477,12423927,12425367,12426912,12428432,12429980,12431495,12433010,12434529,12436139,12437858,12439466,12441047,12442607,12444125,12445699,12447387,12449111,12450933,12452688,12454407,12456223,12458111,12460037,12461853,12463840,12465788,12467731,12469783,12471827,12473875,12475923,12477980,12480028,12482085,12484104,12486027,12487801,12489463,12490675,12491860,12493688,12495621,12497678,12499731,12501779,12503381,12503629,12504365,12506413,12508461,12510518,12511898,12513954,12515267,12517052,12519105,12520859,12522239,12524287,12526335,12528383,12530431,12531967,12534024,12536064,12537706,12538908,12540954,12543011,12545059,12547107,12549155,12551212,12553228,12555234,12557282,12559330,12561378,12563426,12565474,12567522,12569570,12571618,12573666,12575714,12577762,12579751,12581805,12583862,12585910,12587958,12590006,12592048,12594025,12596052,12598086,12600143,12602191,12604228,12606276,12608324,12610372,12612420,12614468,12616516,12618363,12619563,12621619,12623667,12625715,12627771,12629828,12631881,12633937,12635879,12637787,12639665,12641218,12642831,12644299,12645958,12647800,12649463,12650932,12652346,12653498,12654471,12654965,12656184,12658232,12660289,12662337,12664392,12666378,12668108,12669420,12669625,12670411,12672346,12674394,12676384,12678076,12679487,12681194,12683038,12684296,12684500,12685022,12685950,12686323,12686705,12687052,12687430,12687876,12688258,12688648,12688881,12689727,12690625,12691491,12692354,12692846,12693364,12693905,12694341,12695138,12695694,12696261,12697062,12697608,12698247,12698819,12699608,12700626,12700771,12701143,12701787,12702038,12702509,12703429,12704229,12704863,12705353,12705736,12706509,12707326,12708208,12708927,12709768,12710773,12711636,12712567,12713722,12715085,12716155,12716697,12717098,12717550,12717799,12718096,12718476,12718755,12719272,12719807,12720514,12720741,12720995,12721319,12721637,12721762,12721993,12722332,12722553,12722849,12723153,12723434,12723807,12724176,12724388,12724505,12724683,12724891,12725009,12725269,12726067,12726688,12727200,12727608,12728206,12729032,12729950,12730627,12731607,12732758,12733691,12734481,12735326,12735735,12736085,12736467,12736797,12737161,12737399,12737811,12738362,12738722,12739045,12739599,12740603,12741184,12742424,12743029,12743795,12744664,12745706,12746156,12746626,12747195,12747583,12748193,12749958,12751646,12752648,12753767,12755090,12756495,12757947,12758906,12759919,12760855,12761642,12762520,12763862,12764301,12765506,12766409,12767427,12768075,12769078,12769336,12769872,12770515,12770827,12771527,12771924,12772365,12773171,12773968,12774581,12775247,12775821,12776278,12776880,12777996,12779264,12780225,12781211,12782195,12783485,12784408,12785357,12786592,12788214,12789330,12790440,12791112,12792446,12793408,12794866,12795863,12797025,12797739,12799096,12799910,12800845,12801749,12802694,12803724,12804694,12805643,12806163,12806648,12806894,12807243,12807656,12807858,12808138,12808218,12808498,12808817,12809329,12809795,12810358,12810780,12811331,12811973,12812804,12813574,12814364,12815207,12815808,12816936,12818317,12819385,12820702,12822020,12823142,12823988,12825028,12825654,12826069,12826685,12827688,12828909,12829554,12830498,12830963,12831308,12831878,12832436,12832919,12833894,12835016,12836214,12836592,12837189,12837738,12838147,12838733,12839306,12839688,12840146,12840475,12841059,12841412,12841915,12842265,12842858,12843128,12843556,12844238,12844856,12845675,12845954,12847305,12847825,12848398,12848955,12849480,12849900,12850541,12850946,12851173,12851716,12851882,12852323,12852810,12853316,12854080,12854957,12856018,12857027,12857895,12858351,12858872,12859426,12859541,12859790,12860279,12860838,12861403,12861799,12862348,12862743,12863121,12863496,12864090,12864497,12864921,12865319,12866014,12866235,12866552,12866804,12867126,12867403,12867783,12867928,12868139,12868395,12868648,12868842,12868949,12869056,12869276,12869384,12869471,12869607,12869715,12869802,12870031,12870376,12870867,12871130,12871307,12872100,12872928,12873738,12874419,12875359,12876098,12876605,12877203,12877647,12878186,12878438,12879932,12881240,12882339,12883387,12884484,12885659,12887126,12888763,12890463,12891728,12892947,12893944,12894891,12895786,12897173,12898867,12900549,12901829,12903318,12904702,12905854,12906723,12907357,12907921,12908616,12908923,12909536,12910066,12910903,12911707,12912139,12912565,12912833,12913230,12913591,12913943,12914282,12914920,12915127,12915507,12915726,12916223,12916643,12916958,12917190,12917446,12917626,12917766,12917884,12918392,12919030,12920135,12921131,12921863,12922148,12922491,12922963,12923488,12924223,12924632,12925187,12925773,12925980,12926426,12927143,12928133,12929027,12929687,12930276,12930712,12931160,12931946,12932398,12932907,12933335,12934091,12934634,12935165,12935808,12936555,12937069,12937423,12937872,12938246,12938664,12939040,12939234,12939275,12939315,12939356,12939595,12939786,12940012,12940269,12940451,12940682,12940873,12941036,12941169,12941618,12941930,12942220,12942663,12942873,12942920,12943698,12944784,12946068,12947184,12948160,12949361,12950190,12951506,12952335,12952726,12953086,12954250,12955341,12956083,12956942,12958805,12960282,12961723,12963203,12964797,12966194,12967737,12969122,12970605,12972051,12973616,12975021,12976489,12977957,12979563,12981076,12982565,12983965,12985466,12986863,12988223,12989572,12991088,12992591,12994182,12995612,12997146,12998782,13000336,13002023,13003665,13005358,13007069,13008693,13009715,13010674,13011766,13012835,13014091,13015950,13017659,13019415,13021155,13022816,13024526,13026260,13027971,13029678,13031412,13033111,13034815,13036575,13038337,13040114,13041807,13043510,13045136,13046816,13048481,13050149,13051857,13053563,13055298,13056992,13058705,13060352,13061974,13063635,13065300,13066899,13068483,13070135,13071998,13073592,13075301,13076988,13078581,13080251,13081912,13083645,13085370,13087172,13089010,13090826,13092635,13094460,13096261,13097976,13099751,13101405,13103163,13104980,13106830,13108598,13110238,13111966,13113828,13115549,13117329,13119097,13120863,13122574,13124242,13125880,13127527,13129145,13130908,13132539,13134174,13135759,13137346,13139004,13140642,13142275,13143988,13145676,13147390,13149034,13150758,13152434,13154180,13155896,13157526,13159283,13161005,13162681,13164411,13166103,13167740,13169410,13171095,13172715,13174367,13175964,13177580,13179137,13180649,13182175,13183643,13185388,13186501,13187571,13188437,13189145,13189953,13191270,13192690,13194162,13195479,13196600,13197746,13198947,13200047,13201409,13202808,13204073,13205360,13206646,13207899,13209074,13210047,13210944,13211681,13212580,13213484,13214219,13214856,13215667,13216685,13217799,13218861,13220092,13221612,13223187,13224612,13226082,13227433,13229032,13230451,13231884,13233429,13234910,13236311,13237626,13238923,13240186,13240972,13241210,13241423,13241651,13241871,13242093,13242960,13244444,13245962,13247199,13248701,13250369,13251784,13252907,13254348,13255462,13256208,13257560,13258935,13259878,13261390,13263052,13264389,13266039,13267506,13269103,13270584,13271965,13273307,13274951,13276317,13277650,13279270,13280952,13282378,13283804,13285104,13286671,13288036,13289683,13290928,13292574,13294267,13295887,13297609,13299081,13300554,13302292,13303508,13305155,13306384,13308047,13309458,13310741,13312256,13313866,13315560,13317045,13318382,13319938,13321368,13322840,13324410,13325997,13327604,13329030,13330259,13331941,13333452,13335078,13336675,13338023,13339448,13341036,13342712,13343958,13345500,13346574,13348048,13349558,13351124,13352272,13353750,13355196,13356814,13358432,13360071,13361269,13362833,13364135,13365625,13366705,13368229,13369660,13371356,13372445,13374007,13375557,13376968,13378371,13379779,13381353,13382964,13384541,13386163,13387706,13389141,13390528,13392225,13393770,13395400,13397167,13398442,13399979,13401547,13403069,13404602,13405792,13407480,13409095,13410541,13412294,13413567,13415317,13416930,13418553,13420221,13421532,13423154,13424836,13426095,13427807,13429585,13430890,13432460,13434025,13435339,13436908,13438552,13440083,13441643,13443201,13444718,13446377,13447990,13449660,13451177,13452863,13454367,13455807,13457393,13459032,13460622,13462100,13463959,13465851,13467753,13469681,13471729,13473738,13475785,13477835,13479858,13481864,13483899,13485927,13487951,13489976,13492018,13494061,13496115,13498163,13500164,13502191,13504195,13506209,13508223,13510263,13512320,13514372,13516425,13518467,13520513,13522534,13524556,13526562,13528610,13530659,13532682,13534725,13536780,13538826,13540836,13542874,13544726,13546720,13548740,13550780,13552823,13554857,13556883,13558911,13560960,13562978,13564978,13566954,13568938,13570911,13572926,13574917,13576946,13578973,13580996,13583046,13585076,13587065,13589023,13591017,13593032,13595016,13597016,13599067,13601080,13603103,13605152,13607183,13609176,13611132,13613151,13615162,13617146,13619161,13621198,13623244,13625301,13627344,13629363,13631329,13633325,13635349,13637376,13639401,13641434,13643483,13645528,13647581,13649636,13651685,13653735,13655766,13657804,13659804,13661856,13663864,13665905,13667940,13669854,13671839,13673797,13675785,13677756,13679771,13681728,13683691,13685680,13687683,13689638,13691595,13693607,13695596,13697574,13699483,13701462,13703426,13705396,13707373,13709362,13711317,13713305,13715310,13717278,13719208,13721208,13723185,13725184,13727142,13729098,13731107,13733080,13735067,13737028,13739007,13741003,13743006,13745008,13747009,13749010,13750981,13752991,13754953,13756968,13758869,13760857,13762823,13764824,13766807,13768784,13770759,13772710,13774696,13776691,13778686,13780654,13782661,13784669,13786672,13788649,13790670,13792671,13794693,13796681,13798652,13800650,13802621,13804580,13806597,13808594,13810558,13812496,13814492,13816511,13818482,13820452,13822483,13824517,13826534,13828509,13830534,13832539,13834485,13836537,13838538,13840563,13842581,13844620,13846619,13848644,13850663,13852670,13854674,13856648,13858617,13860619,13862646,13864625,13866595,13868464,13870433,13872484,13874539,13876570,13878496,13880460,13882370,13884279,13886057,13887926,13889811,13891750,13893544,13895457,13897264,13899237,13901240,13903213,13905086,13906998,13908933,13910792,13912643,13914503,13916498,13918436,13920394,13922320,13924282,13926152,13928080,13929961,13931852,13933835,13935788,13937712,13939683,13941461,13943487,13945286,13947196,13949017,13950933,13952893,13954862,13956761,13958783,13960735,13962650,13964495,13966366,13968262,13970151,13972116,13974063,13975973,13977898,13979906,13981858,13983876,13985576,13987552,13989276,13991272,13993231,13995175,13997125,13998981,14000956,14002890,14004856,14006687,14008692,14010657,14012669,14014438,14016143,14017997,14019742,14021620,14023490,14025367,14027204,14029005,14030889,14032718,14034682,14036605,14038522,14040454,14042378,14044233,14046197,14048102,14050018,14051909,14053834,14055712,14057660,14059578,14061549,14063462,14065388,14067276,14069182,14071070,14072921,14074814,14076599,14078510,14080445,14082234,14084143,14085718,14087487,14088895,14090587,14092393,14094166,14096002,14097958,14099891,14101877,14103871,14105857,14107865,14109766,14111744,14113752,14115690,14117663,14119643,14121494,14122921,14124343,14125721,14127158,14128622,14130097,14131565,14133066,14134618,14136042,14137560,14139242,14141025,14142693,14144277,14146175,14148170,14150178,14152088,14154110,14156067,14157898,14159839,14161735,14163737,14165729,14167669,14169624,14171568,14173531,14175355,14177224,14179181,14181198,14183212,14185131,14187139,14189039,14191019,14192882,14194762,14196747,14198721,14200748,14202658,14204689,14206613,14208560,14210438,14212301,14214316,14216226,14218252,14220131,14222126,14223967,14225876,14227774,14229630,14231615,14233563,14235619,14237516,14239501,14241437,14243311,14245205,14247073,14249074,14251067,14253076,14255019,14257002,14258929,14260786,14262710,14264626,14266578,14268543,14270439,14272406,14274331,14276261,14278214,14280146,14282048,14283780,14285501,14287181,14288825,14290490,14292169,14293897,14295640,14297342,14299001,14300683,14302431,14304139,14305882,14307586,14309229,14310908,14312634,14314322,14316040,14317758,14319475,14321118,14322715,14324356,14326069,14327815,14329572,14331288,14332907,14334484,14336130,14337873,14339638,14341292,14342932,14344552,14346192,14347871,14349624,14351364,14353098,14354773,14356402,14358034,14359798,14361591,14363363,14364996,14366629,14368267,14370043,14371908,14373749,14375534,14377263,14379030,14380809,14382654,14384543,14386417,14388204,14389994,14391819,14393588,14395380,14397117,14398822,14400494,14402183,14403935,14405627,14407178,14408914,14410639,14412365,14413978,14415809,14417472,14419141,14420890,14422629,14424141,14425828,14427596,14429239,14430901,14432669,14434457,14436221,14437871,14439654,14441464,14443233,14444898,14446636,14448385,14450111,14451855,14453581,14455319,14457306,14459215,14461193,14463193,14465180,14467138,14469049,14470977,14472920,14474911,14476898,14478874,14480883,14482871,14484844,14486844,14488830,14490818,14492778,14494762,14496715,14498721,14500724,14502716,14504701,14506664,14508662,14510626,14512587,14514569,14516592,14518586,14520597,14522557,14524538,14526495,14528481,14530451,14532434,14534402,14536383,14538354,14540329,14542295,14544257,14546237,14548198,14550186,14552143,14554112,14556060,14558047,14559990,14561949,14563909,14565864,14567833,14569788,14571774,14573738,14575685,14577638,14579583,14581539,14583484,14585440,14587383,14589339,14591290,14593249,14595201,14597162,14599118,14601084,14603036,14605005,14606907,14608817,14610731,14612633,14614545,14616480,14618364,14620279,14622182,14624074,14626003,14627907,14629808,14631727,14633647,14635535,14637459,14639335,14641226,14643160,14644994,14646871,14648819,14650664,14652525,14654479,14656321,14658168,14660128,14661982,14663800,14665760,14667599,14669409,14671384,14673214,14675038,14677009,14678840,14680679,14682647,14684464,14686304,14688191,14690007,14691828,14693713,14695502,14697332,14699230,14701006,14702848,14704734,14706484,14708350,14710247,14712002,14713879,14715767,14717542,14719422,14721280,14723062,14724952,14726783,14728625,14730537,14732373,14734217,14736126,14737940,14739829,14741711,14743544,14745459,14747317,14749157,14751068,14752889,14754767,14756668,14758486,14760394,14762248,14764090,14766000,14767845,14769755,14771612,14773469,14775383,14777244,14779101,14781012,14782877,14784735,14786647,14788519,14790381,14792298,14794171,14796024,14797937,14799819,14801673,14803578,14805458,14807307,14809216,14811092,14812953,14814871,14816777,14818620,14820540,14822438,14824300,14826224,14828096,14829950,14831880,14833738,14835600,14837524,14839381,14841255,14843174,14845030,14846897,14848808,14850666,14852519,14854440,14856291,14858121,14860067,14861982,14863895,14865806,14867716,14869634,14871552,14873473,14875385,14877325,14879240,14881149,14883065,14884983,14886905,14888815,14890733,14892658,14894628,14896618,14898606,14900593,14902573,14904576,14906564,14908552,14910520,14912496,14914510,14916417,14918376,14920290,14922188,14924072,14926002,14927898,14929836,14931690,14933584,14935481,14937368,14939333,14941286,14943251,14945219,14947191,14949149,14951114,14953077,14955020,14957006,14958928,14960916,14962847,14964827,14966763,14968734,14970621,14972598,14974426,14976402,14978254,14980185,14982079,14983965,14985867,14987756,14989703,14991545,14993526,14995361,14997321,14999177,15001093,15002993,15004833,15006707,15008518,15010436,15012219,15014143,15015957,15017836,15019671,15021522,15023411,15025216,15027151,15028943,15030835,15032705,15034542,15036402,15038413,15040461,15042489,15044507,15046526,15048517,15050552,15052573,15054590,15056624,15058650,15060692,15062729,15064767,15066787,15068808,15070660,15072670,15074681,15076719,15078764,15080821,15082846,15084881,15086909,15088929,15090929,15092941,15094983,15097019,15099068,15101122,15103157,15105193,15107236,15109259,15111218,15113119,15115152,15117152,15119172,15121222,15123258,15125273,15127278,15129272,15131266,15133260,15135228,15137212,15139240,15141284,15143301,15145320,15147326,15149340,15151319,15153322,15155314,15157281,15159257,15161269,15163309,15165325,15167351,15169370,15171373,15173348,15175350,15177352,15179320,15181304,15183324,15185360,15187369,15189417,15191474,15193500,15195527,15197533,15199550,15201557,15203515,15205542,15207581,15209628,15211674,15213727,15215777,15217819,15219860,15221876,15223902,15225939,15227974,15230022,15232035,15234051,15236040,15238034,15240015,15242018,15244022,15245984,15247978,15249973,15251921,15253919,15255900,15257850,15259786,15261777,15263764,15265767,15267732,15269731,15271747,15273678,15275604,15277576,15279505,15281267,15283173,15285182,15287187,15289135,15291136,15293133,15295123,15297089,15299054,15301042,15303008,15304934,15306833,15308736,15310686,15312656,15314600,15316487,15318437,15320433,15322381,15324314,15326153,15328047,15330037,15332024,15333940,15335800,15337710,15339681,15341633,15343504,15345369,15347270,15349107,15351004,15352953,15354905,15356822,15358760,15360625,15362514,15364376,15366257,15368235,15370143,15372121,15374075,15375977,15377855,15379739,15381622,15383575,15385564,15387570,15389475,15391299,15393118,15394999,15396923,15398934,15400827,15402694,15404512,15406251,15408181,15410126,15412014,15413919,15415833,15417672,15419542,15421452,15423301,15425166,15427054,15428948,15430781,15432655,15434468,15436303,15438305,15440250,15442171,15444096,15446007,15447849,15449703,15451573,15453435,15455248,15457161,15459151,15461082,15462994,15464971,15466785,15468671,15470628,15472563,15474569,15476590,15478611,15480564,15482419,15484418,15486394,15488429,15490380,15492377,15494305,15496356,15498374,15500356,15502278,15504241,15506246,15508264,15510260,15512243,15514233,15516241,15518242,15520228,15522215,15524177,15526193,15528192,15530214,15532204,15534161,15536138,15538107,15540072,15542093,15544051,15546072,15548112,15550141,15552120,15554128,15556025,15558051,15560048,15562036,15564014,15566029,15568044,15570069,15571976,15573741,15575522,15577422,15579428,15581419,15583392,15585405,15587400,15589372,15591359,15593293,15595252,15597214,15599121,15601058,15603029,15605020,15606939,15608940,15610934,15612959,15614950,15616945,15618914,15620839,15622841,15624813,15626783,15628623,15630575,15632509,15634466,15636368,15638250,15640222,15642174,15644069,15645985,15647973,15649953,15651962,15653926,15655927,15657942,15659942,15661965,15663878,15665806,15667774,15669703,15671389,15673307,15675258,15677189,15679130,15681077,15683023,15685034,15687024,15689037,15691028,15692999,15694967,15696991,15698978,15700961,15702943,15704899,15706831,15708819,15710750,15712728,15714667,15716648,15718631,15720615,15722649,15724670,15726657,15728643,15730629,15732634,15734622,15736588,15738539,15740518,15742472,15744459,15746427,15748359,15750356,15752322,15754315,15756291,15758217,15760210,15762236,15764214,15766172,15768132,15770093,15772128,15774096,15776085,15778105,15780075,15782081,15784082,15786037,15788066,15790045,15792008,15794032,15795945,15797993,15799973,15801904,15803912,15805856,15807838,15809833,15811837,15813798,15815683,15817650,15819646,15821585,15823538,15825525,15827471,15829377,15831342,15833325,15835325,15837305,15839256,15841220,15843174,15845126,15847101,15849018,15850963,15852927,15854766,15856624,15858595,15860560,15862461,15864353,15866288,15868201,15870190,15872133,15874045,15876034,15878030,15879955,15881932,15883922,15885836,15887868,15889748,15891758,15893728,15895689,15897698,15899713,15901722,15903763,15905814,15907679,15909695,15911690,15913674,15915700,15917727,15919782,15921818,15923841,15925793,15927812,15929827,15931799,15933829,15935858,15937886,15939885,15941919,15943926,15945969,15947981,15949998,15952036,15954061,15956115,15958155,15960202,15962148,15964172,15966186,15968163,15970210,15972241,15974295,15976345,15978381,15980359,15982396,15984395,15986409,15988452,15990502,15992550,15994579,15996621,15998559,16000524,16002481,16004465,16006318,16008304,16010285,16012263,16014265,16016260,16018295,16020316,16022286,16024255,16026262,16028286,16030223,16032233,16034148,16036089,16038088,16040107,16042133,16044085,16046084,16048014,16049913,16051916,16053890,16055505,16057346,16059154,16060836,16062453,16064101,16065629,16067428,16068779,16070292,16071829,16073247,16074815,16076082,16077573,16079041,16080206,16081706,16082883,16084279,16085609,16086774,16088275,16089391,16090825,16092014,16092900,16094497,16095840,16097060,16098266,16099532,16101013,16101906,16103199,16104587,16105755,16107343,16108443,16109817,16110997,16112458,16113841,16115031,16116481,16117997,16119168,16120789,16122234,16123732,16125309,16126677,16128298,16129602,16131114,16132658,16133821,16135448,16136612,16138011,16139212,16140707,16142030,16143352,16144769,16145858,16146909,16148488,16149936,16151062,16152313,16153603,16155062,16155982,16157263,16158734,16159909,16161446,16162531,16163892,16164977,16166613,16167837,16169256,16170689,16172110,16173510,16175009,16176581,16178010,16179612,16181058,16182424,16183836,16185354,16186770,16187977,16189617,16190835,16192187,16193365,16194972,16196172,16197564,16198924,16199952,16201205,16202681,16204105,16205190,16206480,16207881,16209111,16210070,16211350,16212749,16213917,16215456,16216568,16217976,16219112,16220724,16221986,16223430,16224887,16226296,16227721,16229184,16230740,16232186,16233770,16235321,16236506,16238001,16239472,16240720,16242024,16243575,16244870,16246235,16247388,16248960,16250126,16251540,16252856,16253762,16255240,16256572,16257902,16259063,16260305,16261896,16262788,16263953,16265377,16266542,16268029,16269077,16270417,16271740,16272964,16274433,16275598,16277047,16278560,16279791,16281409,16282853,16284372,16285939,16287280,16288929,16290194,16291683,16293202,16294499,16296143,16297317,16298683,16299993,16301252,16302747,16304001,16305480,16306632,16307565,16309197,16310563,16311797,16313000,16314314,16315931,16316804,16318068,16319549,16320717,16322344,16323383,16324744,16325888,16327443,16328700,16330087,16331546,16333002,16334279,16335790,16337343,16338771,16340345,16341758,16343237,16344580,16346071,16347581,16348814,16350428,16351586,16353020,16354174,16355795,16356946,16358356,16359665,16360638,16361868,16363307,16364765,16365887,16367170,16368650,16369824,16370829,16372132,16373469,16374638,16376192,16377353,16378725,16379853,16381468,16382717,16384117,16385604,16387003,16388334,16389824,16391440,16392939,16394548,16396038,16397375,16398848,16400408,16401783,16402902,16404587,16405718,16407101,16408242,16409847,16410988,16412278,16413663,16414714,16415772,16417297,16418751,16419843,16421108,16422599,16423750,16424738,16426058,16427320,16428394,16429924,16431010,16432427,16433582,16435214,16436388,16437699,16439198,16440653,16442019,16443590,16445176,16446655,16448200,16449772,16451166,16452595,16454147,16455585,16456667,16458349,16459585,16460926,16462114,16463639,16464920,16466153,16467556,16468706,16469620,16471232,16472693,16473906,16475115,16476399,16477895,16478796,16480051,16481479,16482607,16484184,16485255,16486564,16487872,16489415,16490753,16491976,16493484,16495027,16496420,16498069,16499498,16501004,16502549,16503975,16505691,16506926,16508445,16509961,16511217,16512734,16514080,16515418,16516807,16517959,16519530,16520747,16522241,16523469,16524334,16526012,16527305,16528587,16529826,16531006,16532651,16533518,16534741,16536194,16537479,16539022,16540150,16541480,16542737,16544083,16545656,16546933,16548405,16549894,16551133,16552813,16554269,16555828,16557416,16558826,16560527,16561811,16563359,16564875,16566102,16567659,16568986,16570407,16571778,16572908,16574508,16575736,16577257,16578510,16579338,16581002,16582272,16583571,16584808,16586030,16587665,16588610,16589731,16591148,16592585,16593937,16595350,16596570,16597973,16599265,16600912,16602143,16603654,16605204,16606510,16608115,16609637,16611332,16612874,16614458,16615974,16617454,16618649,16619849,16621132,16622582,16624098,16625754,16627226,16628556,16629743,16631255,16632802,16634210,16635897,16637500,16638865,16640125,16641501,16642986,16644395,16646060,16647648,16649109,16650499,16651741,16653233,16654657,16655992,16657571,16659241,16660811,16662289,16663504,16664860,16666231,16667439,16668891,16670536,16671872,16672952,16674264,16675539,16677259,16678661,16679920,16681401,16683062,16684196,16685883,16687581,16689443,16691374,16693291,16695054,16696998,16698811,16700567,16702386,16704285,16706113,16707913,16709641,16710990,16712700,16714382,16716148,16717838,16719566,16721227,16722731,16723603,16724827,16726819,16728821,16730649,16732279,16733413,16734567,16736362,16737907,16739641,16741353,16743317,16745021,16746847,16748654,16750545,16752267,16754019,16755917,16757817,16759658,16761310,16763006,16764962,16766537,16768513,16770409,16772349,16774325,16776294,16778221,16780038,16781866,16783473,16785355,16787170,16789053,16790952,16792769,16794421,16796117,16797663,16799237,16801041,16802686,16804284,16805972,16807576,16809003,16810680,16812430,16814439,16816451,16818421,16820315,16822317,16824345,16826339,16828279,16830294,16832325,16834345,16836304,16838301,16840333,16842309,16844288,16846227,16848190,16850084,16852057,16854008,16855986,16857900,16859919,16861930,16863935,16865938,16867956,16869996,16871988,16873967,16875865,16877837,16879894,16881941,16883980,16885978,16887895,16889730,16891315,16893287,16895142,16897096,16899010,16900912,16902868,16904718,16906643,16908468,16910377,16912307,16914168,16916069,16918051,16919932,16921860,16923790,16925686,16927575,16928868,16930477,16932417,16934112,16935657,16937162,16938413,16939925,16941684,16943291,16944903,16946727,16948311,16949878,16951459,16953041,16954572,16956182,16957787,16959452,16961026,16962325,16963594,16965237,16966868,16968166,16969446,16971445,16973293,16975077,16976836,16978620,16980344,16982110,16983969,16985703,16987381,16989043,16990772,16992430,16994036,16995873,16997655,16998902,17000403,17002033,17003515,17005007,17006272,17007578,17009357,17010825,17012091,17013263,17014630,17016384,17017772,17019331,17021285,17023283,17025253,17027237,17029212,17031138,17032984,17034538,17036459,17038360,17040248,17041865,17043678,17045681,17047563,17049435,17051302,17053106,17054993,17056921,17058543,17060474,17062046,17063459,17065136,17066648,17068062,17069525,17071198,17072637,17074336,17075718,17077437,17078958,17080650,17082254,17084091,17085625,17087311,17088919,17090640,17092147,17093580,17095176,17096705,17098580,17099847,17101094,17102528,17104227,17106058,17107886,17109618,17111076,17112563,17114148,17115928,17117477,17118932,17120576,17122177,17123876,17125546,17127056,17128638,17130314,17131879,17133334,17134859,17136309,17137980,17139603,17141116,17142672,17144232,17145872,17147494,17149035,17150175,17151778,17153277,17154602,17155918,17157282,17158498,17159774,17161154,17162654,17163912,17165105,17166507,17167909,17169172,17170637,17171978,17173245,17174857,17176443,17177988,17179846,17181375,17182858,17184749,17186587,17188462,17190317,17191847,17193787,17195600,17197273,17199108,17200702,17202533,17203766,17205611,17207535,17208993,17210673,17212411,17214088,17215784,17217371,17218801,17220424,17221860,17223482,17225006,17226532,17228129,17229681,17231192,17232609,17234203,17235721,17237268,17238687,17240279,17241731,17243560,17245440,17247223,17249091,17250932,17252752,17254245,17255741,17257319,17258847,17260653,17262620,17264545,17266400,17268286,17270197,17272060,17274007,17275166,17275751,17276311,17276813,17277518,17278176,17278785,17279324,17280024,17281721,17283699,17285690,17287650,17289569,17291528,17293496,17295445,17297386,17299060,17300720,17302370,17304018,17305809,17307372,17309140,17310720,17312326,17313866,17315454,17317123,17318621,17320122,17321587,17322965,17324454,17325829,17327404,17328930,17330250,17331411,17332810,17334172,17335729,17337197,17338627,17339967,17341568,17343044,17344637,17346059,17347485,17348861,17350257,17351698,17353120,17354500,17355892,17357752,17359525,17361330,17363198,17365076,17366983,17368780,17370516,17372335,17374009,17375693,17377481,17379313,17381139,17382865,17384590,17386266,17387455,17388241,17389040,17389926,17391325,17393024,17394736,17396349,17397981,17399682,17401266,17402801,17404439,17406211,17407880,17409560,17411211,17412865,17414692,17416488,17418360,17419854,17421629,17423092,17424782,17426472,17428251,17429811,17431355,17433302,17434895,17436718,17438559,17440421,17441919,17443765,17445584,17447418,17448487,17449533,17450488,17451565,17452628,17453731,17454712,17455795,17457436,17458988,17460556,17462079,17463659,17465216,17466763,17468277,17469953,17471385,17472878,17474540,17476183,17477485,17478536,17479530,17480547,17481888,17483302,17484839,17486610,17488273,17489735,17490850,17492256,17493804,17494975,17496178,17497699,17499239,17500652,17502251,17503863,17505394,17506973,17508601,17510113,17511368,17512408,17513222,17514238,17514776,17515773,17516503,17517423,17518925,17520309,17521190,17521692,17522557,17523109,17523937,17524435,17524970,17525853,17526543,17527431,17527933,17528789,17529484,17530366,17530888,17531402,17532323,17532964,17533799,17534322,17535163,17535863,17536610,17537232,17537701,17538552,17539174,17539990,17540270,17540797,17541010,17541205,17541807,17542032,17542668,17542917,17543509,17543710,17544016,17544375,17544547,17545035,17545074,17545622,17545788,17546323,17546504,17546692,17548164,17549614,17551060,17552260,17553498,17554692,17556113,17557091,17558076,17559088,17560068,17561018,17561994,17562985,17563983,17565500,17566898,17568318,17569735,17571243,17572742,17574110,17575474,17577054,17578484,17579969,17581474,17583071,17584675,17586194,17587704,17589224,17590795,17592223,17593646,17595021,17596424,17597885,17599293,17600729,17602242,17603643,17605039,17606413,17607805,17608935,17609899,17610855,17611808,17612916,17613821,17614792,17615705,17616781,17617698,17618606,17619561,17620433,17621939,17623331,17624723,17626120,17627289,17628225,17629156,17630087,17631468,17633072,17634638,17636207,17637781,17639320,17640923,17642505,17644104,17645685,17647004,17648378,17649713,17651007,17652300,17653621,17654926,17656423,17657986,17659512,17660841,17662387,17663611,17664872,17666102,17667658,17669290,17671016,17672580,17674128,17675687,17677495,17679238,17681044,17682604,17683825,17685015,17686540,17687958,17689495,17690725,17691936,17693368,17694812,17696437,17697900,17699406,17700888,17702242,17703952,17705649,17707279,17708953,17710483,17712144,17713777,17715417,17717200,17718811,17720502,17722154,17723777,17725351,17727010,17728671,17730199,17731898,17733556,17735137,17736793,17738293,17739913,17741541,17743190,17744869,17746440,17748153,17749834,17751506,17753084,17754739,17756399,17757948,17759722,17761368,17762984,17764620,17766378,17768127,17769749,17771371,17772993,17774820,17776501,17778178,17779868,17781573,17783327,17784976,17786667,17788296,17789625,17790586,17791520,17792493,17793806,17795303,17796845,17798337,17799937,17801311,17802663,17803994,17805319,17806624,17807807,17809043,17810271,17811600,17812854,17813754,17814715,17816057,17817256,17818431,17819531,17820661,17821870,17822842,17823785,17824706,17826270,17827770,17829289,17830829,17832350,17833847,17835363,17836887,17838546,17839981,17841389,17842761,17844159,17845548,17846937,17848323,17849711,17851414,17852955,17854492,17856051,17857622,17859161,17860687,17862218,17863804,17865534,17867137,17868746,17870404,17872019,17873614,17875213,17876869,17878650,17880140,17881553,17882951,17884373,17885839,17887285,17888689,17890126,17892004,17893760,17895468,17897165,17898913,17900653,17902356,17904027,17905935,17907695,17909406,17911103,17912763,17914479,17916152,17917829,17919510,17920950,17921934,17923137,17924173,17925272,17926337,17927533,17928719,17929864,17930935,17931854,17932697,17933349,17934056,17934728,17936237,17937917,17939630,17941311,17943024,17944733,17946472,17948196,17949912,17951772,17953513,17955191,17956823,17958545,17960223,17961962,17963678,17965549,17967313,17969089,17970864,17972588,17974388,17976140,17977933,17979651,17981527,17983258,17984949,17986565,17988243,17989907,17991625,17993308,17995048,17996480,17997991,17999393,18000940,18002003,18002994,18004011,18005017,18006815,18008629,18010432,18012267,18013922,18015772,18017564,18019392,18021211,18022673,18023867,18025089,18026575,18028113,18029138,18030179,18031426,18033174,18034796,18036416,18038008,18039542,18041204,18042809,18044410,18046079,18047681,18049121,18050545,18052013,18053391,18054876,18056304,18057720,18059191,18060947,18062345,18064033,18065417,18066889,18068356,18069829,18071231,18072947,18074581,18076191,18077792,18079333,18080948,18082545,18084137,18085837,18087371,18088839,18090277,18091655,18093172,18094610,18096074,18097556,18099272,18101079,18102920,18104753,18106433,18108280,18110067,18111912,18113759,18115390,18117046,18118664,18120409,18121945,18123587,18125199,18126844,18128496,18129984,18131426,18132907,18134287,18135790,18137283,18138739,18140265,18142119,18143927,18145771,18147663,18149349,18151200,18153020,18154885,18156573,18158220,18159865,18161475,18163044,18164721,18166362,18167942,18169586,18171252,18172700,18174133,18175614,18176999,18178496,18179961,18181398,18182924,18184776,18186587,18188437,18190226,18192058,18193871,18195714,18197576,18198919,18199859,18201625,18202300,18202982,18204167,18204855,18205773,18206661,18207354,18208732,18209898,18210526,18211251,18212325,18213622,18214525,18215809,18217197,18218465,18219054,18220254,18221599,18222663,18224039,18225240,18226972,18227990,18229089,18230050,18231593,18233178,18234755,18236492,18238147,18239898,18241434,18243156,18244665,18246199,18247382,18248166,18249460,18251009,18252530,18253544,18254540,18255565,18256585,18257934,18259047,18260081,18261185,18262503,18264324,18266354,18268379,18270383,18272395,18274414,18276434,18278406,18280418,18282448,18284473,18286477,18288488,18290495,18292495,18294509,18296486,18298507,18300535,18302574,18304579,18306590,18308595,18310608,18312578,18314608,18316640,18318677,18320673,18322678,18324701,18326691,18328700,18330663,18332713,18334664,18336563,18338466,18340338,18342228,18344152,18345993,18347860,18349748,18351648,18353521,18355415,18357232,18359103,18360934,18362814,18364737,18366460,18368111,18369771,18371445,18373101,18374752,18376420,18378028,18379806,18381461,18383136,18384812,18386438,18388102,18389753,18391375,18392994,18394609,18396052,18397496,18398923,18400316,18401745,18403160,18404556,18406111,18407668,18409189,18410627,18412175,18413502,18415105,18416582,18418245,18419661,18421157,18422634,18424305,18425727,18427213,18428758,18430372,18431823,18433108,18434617,18436076,18438053,18439779,18441281,18442953,18444565,18446124,18447661,18449232,18450944,18452493,18454057,18455669,18457326,18459081,18460723,18462305,18463833,18465510,18467062,18468622,18470189,18471751,18473301,18474889,18476414,18477801,18479456,18480928,18482641,18484210,18485843,18487379,18489101,18490741,18492369,18494123,18495866,18497339,18499000,18500924,18502794,18504501,18506215,18508090,18510026,18511948,18513900,18515865,18517801,18519734,18521650,18523567,18525380,18527221,18529090,18531039,18532941,18534800,18536667,18538491,18540290,18542082,18543867,18545630,18547634,18549605,18551576,18553541,18555450,18557363,18559263,18561183,18563147,18565118,18567017,18568910,18570765,18572576,18574398,18576221,18578004,18579988,18581974,18583973,18585946,18587900,18589841,18591767,18593710,18595651,18597599,18599425,18601239,18602991,18604775,18606528,18608308,18610045,18611932,18613764,18615619,18617390,18619182,18621020,18622816,18624626,18626407,18628142,18629587,18631034,18632505,18633893,18635333,18636731,18638157,18639691,18641638,18643592,18645527,18647543,18649492,18651391,18653291,18655216,18657119,18658988,18660896,18662886,18664835,18666762,18668683,18670597,18672482,18674441,18676314,18678244,18680003,18681498,18683020,18684633,18686216,18687817,18689413,18690907,18692687,18694486,18696293,18698080,18699798,18701566,18703301,18705011,18706729,18708370,18709693,18710959,18712264,18713660,18714968,18716307,18717665,18719181,18720700,18722175,18723647,18725192,18726766,18728261,18729743,18731208,18732853,18734551,18736035,18737697,18739310,18740934,18742466,18744021,18745412,18746749,18748093,18749342,18750612,18751792,18753076,18754731,18756615,18758474,18760351,18762257,18764149,18766036,18767893,18769755,18771720,18773623,18775498,18777390,18779260,18781139,18783034,18784916,18786852,18788284,18789734,18791117,18792518,18793964,18795438,18796917,18798383,18800140,18801781,18803502,18805240,18806952,18808542,18810125,18811692,18813342,18814917,18816475,18818054,18819665,18821364,18823096,18824792,18826422,18828144,18829590,18831045,18832540,18834007,18835386,18836767,18838182,18839640,18841246,18842716,18844204,18845759,18846835,18848369,18849873,18851349,18853018,18854524,18856032,18857528,18858912,18860396,18861882,18863399,18864927,18866901,18868874,18870803,18872558,18873991,18875391,18876811,18877744,18879160,18880552,18881963,18883550,18884740,18885896,18887044,18888173,18889158,18890232,18891426,18892582,18894088,18895504,18896974,18898800,18900698,18902576,18904482,18906379,18908276,18910162,18912068,18913777,18915381,18916909,18918336,18919881,18921360,18922215,18923205,18923957,18924937,18925736,18926684,18927375,18928231,18929149,18930058,18930927,18931676,18932679,18933616,18934651,18935573,18936976,18938198,18939512,18940798,18941787,18942129,18942666,18943135,18943645,18943862,18944404,18944929,18946284,18947322,18948105,18948922,18949983,18951324,18952049,18953379,18954272,18954458,18954819,18955150,18955515,18956748,18958060,18959639,18961235,18963096,18964842,18966651,18968482,18970291,18972065,18973829,18975601,18977389,18979033,18980690,18982277,18983883,18985477,18987118,18988699,18990285,18991749,18993064,18994402,18995724,18997283,18998952,19000626,19002283,19003923,19005621,19007290,19008974,19010660,19012326,19013991,19015661,19016688,19018234,19020060,19021929,19023700,19025514,19027324,19029190,19031013,19032756,19034434,19035877,19037338,19038782,19040363,19042229,19044046,19045952,19047816,19049666,19051560,19053391,19055246,19057094,19058166,19059910,19061251,19062350,19063544,19064602,19065713,19067765,19069770,19071760,19073678,19075622,19077579,19079480,19081385,19083269,19085223,19087172,19089137,19091019,19092937,19094830,19096758,19098754,19100568,19102236,19103990,19105775,19107602,19109368,19111081,19112682,19114498,19116555,19118599,19120651,19122698,19124751,19126789,19128828,19130875,19132923,19134974,19137025,19139059,19141114,19143164,19145203,19147236,19149288,19151162,19153075,19154934,19156782,19158601,19160474,19162304,19164184,19166131,19168029,19169910,19171760,19173617,19175444,19177308,19179148,19181068,19182440,19183994,19184770,19185557,19186348,19187016,19187739,19188182,19188960,19189872,19190648,19191049,19191673,19192450,19193323,19194050,19194443,19195170,19195996,19196842,19197401,19197866,19198633,19199470,19200399,19200841,19201450,19202687,19203735,19204875,19205481,19206006,19207268,19208368,19209492,19209907,19210662,19211834,19212919,19213966,19214360,19215350,19216426,19217496,19218300,19219598,19220846,19222410,19223703,19225419,19226907,19227914,19229065,19230205,19231338,19232509,19233620,19234717,19235812,19236948,19238093,19239260,19240416,19241533,19242646,19243694,19244781,19246371,19247508,19248622,19249798,19250886,19251945,19253033,19254055,19255105,19256111,19257014,19258036,19259116,19259995,19260880,19261647,19262503,19263884,19264318,19264845,19265345,19265886,19266462,19266943,19267500,19268065,19268512,19269035,19269501,19270034,19270537,19271065,19271619,19272123,19273485,19274954,19276434,19277944,19279501,19280991,19282500,19284027,19285546,19286684,19287668,19288650,19290039,19291654,19293072,19294466,19295769,19297109,19298551,19300278,19301916,19303560,19305224,19306832,19308452,19310110,19311752,19313424,19315145,19316612,19318082,19319604,19321070,19322579,19324075,19325526,19327175,19328156,19329291,19330548,19331901,19333219,19334542,19335877,19337014,19338387,19339827,19341217,19342638,19344179,19345685,19347235,19348795,19350448,19351864,19352871,19354024,19355180,19356314,19357470,19358549,19359618,19360759,19361917,19363039,19364216,19365400,19366508,19367579,19368619,19369803,19371251,19372379,19373491,19374703,19375748,19376833,19377951,19378996,19380026,19381026,19381906,19382929,19383997,19384855,19385732,19386540,19387422,19388778,19389203,19389749,19390259,19390815,19391360,19391819,19392379,19392941,19393394,19393898,19394371,19394884,19395380,19395922,19396481,19396988,19398623,19400422,19402207,19404020,19405813,19407616,19409353,19411193,19412601,19414000,19415374,19416776,19418362,19419642,19420869,19422097,19423576,19425056,19426382,19427678,19429204,19430560,19431551,19432578,19433565,19434972,19436668,19438189,19439895,19441557,19442900,19444057,19445227,19446367,19447843,19449113,19450851,19452513,19454106,19455796,19457497,19459136,19460782,19462413,19464112,19465335,19466684,19468193,19469678,19471657,19473320,19475310,19477069,19478812,19480439,19482155,19483878,19485506,19487258,19489000,19490739,19492320,19493827,19495344,19496884,19498454,19499950,19501552,19502889,19504573,19506188,19507800,19509384,19510971,19512547,19514127,19515751,19517533,19518957,19520683,19522490,19524005,19525372,19527124,19528932,19530535,19532274,19533348,19534427,19535550,19536713,19537848,19538976,19540063,19541207,19542312,19543473,19544599,19545795,19546973,19548060,19549094,19550169,19551520,19552472,19553723,19554829,19555772,19556351,19557487,19558701,19559854,19560845,19561761,19563027,19564179,19565130,19565622,19566800,19568042,19569261,19570208,19571067,19572240,19573363,19574369,19574777,19575981,19577181,19578339,19579319,19580033,19581166,19582330,19583434,19583845,19584999,19586173,19587319,19588220,19589029,19590146,19591398,19592540,19592949,19594046,19595231,19596414,19597322,19598762,19599897,19601016,19602249,19603309,19604390,19605510,19606538,19607562,19608569,19609468,19610478,19611533,19612389,19613277,19614090,19614973,19616023,19617252,19618440,19619597,19620011,19620927,19622166,19623275,19624288,19625556,19626679,19627903,19629066,19630246,19631452,19632580,19633778,19634972,19636229,19637353,19638475,19639722,19640924,19642197,19643323,19644399,19645637,19646813,19648146,19649306,19650352,19651352,19652481,19653737,19654886,19655874,19656904,19657994,19659352,19660461,19661480,19662497,19663729,19665009,19666026,19667001,19668076,19669491,19670340,19670816,19671363,19672555,19674073,19675822,19677661,19679550,19681396,19683003,19684425,19685033,19685524,19686041,19686564,19687148,19687908,19689307,19690381,19691623,19693119,19694332,19695410,19696796,19698243,19699317,19700538,19702031,19703239,19704281,19705621,19707587,19709408,19711125,19712864,19714763,19716617,19718447,19720311,19721999,19723911,19725586,19727424,19729202,19731044,19732803,19734594,19736423,19738184,19740024,19741904,19743651,19745519,19747260,19749008,19751060,19752769,19754608,19756384,19758181,19759970,19761841,19763573,19765300,19767209,19768887,19770699,19772586,19774287,19776168,19777969,19779806,19781512,19783363,19785112,19786894,19788784,19790536,19792264,19794150,19795887,19797703,19799492,19801245,19803165,19804901,19806732,19808474,19810372,19812108,19813960,19815714,19817452,19819442,19821102,19822925,19824819,19826561,19828306,19830117,19831951,19833667,19835525,19837373,19839101,19841002,19842723,19844473,19845948,19847091,19848301,19849473,19850774,19851906,19853125,19854254,19855381,19855853,19856664,19857550,19858332,19858722,19859347,19860140,19861004,19861684,19862085,19862808,19863633,19864500,19865039,19865511,19866293,19867096,19868015,19868503,19870055,19871062,19872173,19873327,19874418,19875599,19876691,19877780,19878875,19880049,19881204,19882352,19883536,19884678,19885769,19886785,19887883,19889447,19890914,19892535,19893613,19894690,19895844,19896944,19897976,19899023,19900039,19901064,19902080,19902932,19903932,19904993,19905937,19906823,19907609,19908484,19909892,19911346,19912757,19914125,19914536,19915102,19915616,19916183,19916738,19917188,19917745,19918307,19918766,19919280,19919755,19920252,19920753,19921281,19921837,19922344,19923898,19925534,19927200,19928782,19930497,19932167,19933817,19935482,19937168,19938869,19940633,19942290,19943907,19945519,19947158,19948800,19949950,19950397,19951296,19952100,19952553,19952863,19953669,19954581,19956618,19958655,19960658,19962684,19964708,19966692,19968702,19970670,19972696,19974718,19976752,19978764,19980773,19982786,19984798,19986762,19988770,19990200,19991556,19993162,19994727,19996077,19997243,19998625,19999745,20000866,20001986,20003106,20004227,20005354,20006263,20006333,20006993,20008972,20011021,20012871,20014753,20016674,20018542,20020376,20022265,20024173,20026036,20027986,20029917,20031847,20033791,20035663,20037569,20039490,20041414,20043298,20045051,20047046,20048966,20050853,20052763,20054681,20056545,20058305,20060107,20061883,20063754,20065654,20067563,20069431,20071291,20073167,20075067,20076975,20078828,20080810,20082599,20084476,20086345,20088244,20090104,20091818,20093318,20093494,20094096,20094697,20095370,20096018,20096560,20097161,20097888,20098599,20099284,20100039,20100887,20101844,20102409,20103278,20103543,20104654,20104982,20105388,20106888,20107553,20108614,20108823,20109161,20109524,20110279,20111924,20113387,20114960,20116602,20118204,20119751,20121207,20122711,20124305,20125925,20127539,20129151,20130654,20132236,20133800,20135333,20137012,20138678,20140369,20141878,20143394,20145200,20147064,20148854,20150621,20152445,20154299,20156142,20157986,20159846,20161626,20162951,20164233,20165578,20166933,20168256,20169581,20170909,20172268,20173852,20175311,20176773,20178233,20179736,20181213,20182665,20184092,20185706,20187161,20188617,20190055,20191516,20193000,20194447,20195883,20197315,20198960,20200399,20201865,20203319,20204815,20206285,20207730,20209161,20210755,20212209,20213642,20215068,20216527,20218019,20219476,20220911,20222334,20223950,20225326,20226694,20228120,20229609,20231075,20232489,20233913,20235496,20236921,20238317,20239672,20241151,20242605,20244020,20245412,20246844,20248440,20249831,20251201,20252639,20254082,20255559,20256985,20258384,20259911,20261429,20262815,20264229,20265725,20267171,20268660,20270097,20271504,20273150,20274623,20276024,20277480,20278955,20280447,20281907,20283373,20284792,20286342,20287690,20289003,20290379,20291752,20293114,20294401,20295667,20297221,20298569,20299877,20301209,20302599,20303936,20305295,20306614,20307881,20309430,20310787,20312075,20313427,20314754,20316067,20317385,20318678,20320196,20321648,20323085,20324541,20326032,20327520,20328998,20330445,20331832,20333480,20334902,20336290,20337765,20339244,20340727,20342173,20343577,20345148,20346639,20347998,20349391,20350854,20352306,20353721,20355145,20356542,20358154,20359569,20360958,20362387,20363852,20365324,20366746,20368127,20369575,20371161,20372538,20373942,20375370,20376853,20378315,20379725,20381152,20382765,20384237,20385665,20387097,20388545,20390031,20391475,20392896,20394314,20396102,20397834,20399666,20401385,20403278,20404868,20406603,20408420,20410236,20412071,20413848,20415494,20417175,20418995,20420756,20422469,20424267,20426118,20427924,20429808,20431633,20433550,20435386,20437286,20439126,20441002,20442863,20444683,20446447,20448261,20450106,20451888,20453657,20455482,20457431,20459221,20461019,20462744,20464521,20466255,20468014,20469730,20471503,20473381,20475188,20476947,20478686,20480480,20482238,20483979,20485750,20487687,20489572,20491390,20493218,20495031,20496831,20498677,20500464,20502254,20504156,20505879,20507669,20509395,20511140,20512858,20514622,20516392,20518250,20520024,20521877,20523715,20525550,20527376,20529145,20530915,20532706,20534514,20536336,20538055,20539808,20541478,20543070,20544815,20546534,20548155,20549953,20551777,20553501,20555285,20556960,20558587,20560246,20561911,20563715,20565616,20567276,20568888,20570525,20572168,20573854,20575535,20577227,20578873,20580641,20582325,20583948,20585592,20587295,20588996,20590699,20592377,20594171,20595975,20597736,20599504,20601287,20603117,20604900,20606739,20608515,20610362,20612154,20613831,20615575,20617386,20619160,20620936,20622714,20624561,20626324,20628150,20630035,20631901,20633786,20635721,20637638,20639433,20641241,20642916,20644593,20646344,20648094,20649844,20651648,20653345,20655118,20656882,20658549,20660366,20662176,20663975,20665803,20667644,20669355,20671114,20672526,20674060,20675585,20677088,20678618,20680120,20681608,20683126,20685183,20687136,20689072,20691063,20693050,20694986,20696985,20698938,20700843,20702806,20704804,20706826,20708810,20710743,20712721,20714716,20716743,20718390,20718963,20719003,20719041,20719081,20719398,20719438,20719478,20719516,20720064,20721927,20723712,20725539,20727388,20729217,20731046,20732828,20734664,20736457,20737915,20739372,20740801,20742239,20743672,20745100,20746533,20748097,20749969,20751797,20753606,20755361,20757149,20758923,20760718,20762525,20763814,20764650,20764689,20764729,20764767,20764895,20765094,20765133,20765173,20765211,20766219,20767313,20769036,20770751,20772492,20774245,20776007,20777718,20779424,20781172,20782938,20784789,20785804,20787032,20788465,20789751,20790524,20792100,20793551,20794835,20795810,20797603,20799218,20800863,20801476,20801516,20801554,20801594,20801911,20801951,20801991,20802029,20802537,20803836,20805308,20806506,20807750,20809420,20811084,20812694,20814380,20816055,20817728,20819393,20821002,20822688,20822728,20822768,20822806,20822846,20823940,20824400,20824494,20825601,20827449,20829449,20831244,20832901,20834518,20836154,20837832,20839505,20841221,20842962,20844656,20846385,20848127,20849862,20851611,20853334,20855024,20856700,20858419,20859503,20860556,20861077,20862030,20863849,20865611,20867329,20869067,20870794,20872598,20874272,20875994,20877869,20879710,20881527,20883412,20885198,20887113,20888916,20890816,20892622,20894468,20896148,20897832,20899593,20901225,20903029,20904798,20906498,20908384,20910166,20912138,20913914,20915866,20917727,20919618,20921490,20923362,20925348,20926627,20927799,20928933,20929951,20931120,20932567,20933919,20935267,20936634,20938047,20939257,20940438,20941547,20942720,20943851,20945137,20946809,20947466,20948306,20949231,20950237,20951592,20953311,20954498,20955246,20955892,20956723,20958126,20959750,20961482,20963087,20963957,20965245,20966853,20968264,20969483,20970455,20971258,20972222,20972984,20973479,20974397,20975606,20976991,20978188,20979410,20980737,20982120,20983523,20984822,20986208,20988128,20990024,20991891,20993805,20995652,20997520,20999418,21001319,21003160,21005056,21006984,21008926,21010758,21012660,21014532,21016481,21017761,21018706,21019640,21020604,21022102,21024061,21025826,21027694,21029627,21030798,21031981,21033185,21034388,21036364,21038390,21040374,21042402,21044349,21046267,21048153,21050057,21051980,21054010,21056049,21058088,21060120,21061906,21063723,21065513,21067354,21069160,21070980,21072685,21074510,21076349,21078317,21080262,21082185,21084141,21085760,21087052,21088357,21090032,21091379,21092563,21093850,21095130,21096463,21097649,21098899,21100121,21101694,21103177,21104389,21105577,21107218,21108873,21109695,21110460,21111991,21113566,21114436,21115201,21116359,21117673,21118875,21119612,21120564,21122237,21123877,21125255,21126646,21128302,21130134,21131871,21133676,21135457,21137275,21139038,21140873,21142714,21144550,21146204,21147869,21149554,21151262,21153048,21154827,21156649,21158386,21160048,21161492,21162881,21164315,21165900,21167372,21168774,21170205,21171797,21173335,21174789,21176267,21177826,21179449,21180954,21182414,21183940,21185819,21187800,21189754,21191673,21193688,21195652,21197634,21199607,21201616,21203390,21205159,21206910,21208679,21210480,21212069,21213608,21215180,21217052,21218968,21220780,21222653,21224578,21226351,21228194,21229963,21231792,21233778,21235643,21237477,21239391,21241290,21243118,21244900,21246702,21248596,21250084,21251675,21253294,21254892,21256109,21257354,21258959,21260324,21261499,21262748,21263956,21265626,21266842,21268059,21269336,21271114,21272877,21274658,21276424,21278188,21280068,21281866,21283655,21285440,21287307,21289148,21290970,21292790,21294356,21295185,21295999,21296824,21297737,21298881,21300060,21301216,21302374,21303698,21304880,21306043,21307242,21308554,21309926,21311316,21312616,21314181,21316008,21317867,21319727,21321580,21323456,21325242,21327100,21328930,21330888,21332782,21334718,21336640,21338560,21340479,21342402,21344365,21346297,21348097,21349954,21351776,21353535,21355368,21357207,21358922,21360516,21362193,21363965,21365809,21367642,21369552,21371440,21373234,21375117,21376979,21378495,21379972,21381378,21382882,21384427,21386016,21387794,21389394,21390941,21392564,21394214,21395916,21397596,21399340,21401116,21402889,21404692,21406566,21408612,21410666,21412627,21414579,21416552,21418537,21420499,21422487,21424429,21426395,21428315,21430202,21431409,21432675,21434079,21435131,21436817,21438598,21440345,21442106,21443846,21445409,21447016,21448477,21450111,21451895,21453638,21455418,21457156,21459003,21460800,21462604,21464370,21466161,21467873,21469588,21471284,21472942,21474587,21476401,21478200,21479810,21481082,21482077,21483144,21484221,21485618,21486517,21487420,21488321,21489622,21490600,21491814,21492757,21494028,21494555,21495184,21495713,21496297,21497269,21498016,21498801,21499455,21500186,21501311,21502547,21503763,21504734,21506042,21507404,21508851,21510222,21511554,21513022,21514583,21516242,21517591,21519007,21520653,21522199,21523639,21525373,21526994,21528675,21530258,21530506,21530716,21530910,21531194,21532064,21532547,21532950,21533424,21535069,21537105,21539149,21541195,21543225,21545258,21547299,21549342,21551358,21553356,21555288,21557222,21559179,21561066,21562993,21564920,21566846,21568579,21570008,21571347,21572849,21574318,21575440,21576652,21577775,21578838,21580282,21581735,21583127,21584580,21586256,21588116,21589925,21591757,21593627,21595493,21597283,21599059,21600926,21602744,21604485,21606220,21607992,21609700,21611460,21613271,21614967,21616602,21617998,21619471,21620950,21622447,21623873,21625321,21626908,21628390,21630169,21632024,21633897,21635774,21637413,21638605,21639843,21641053,21642618,21644462,21646265,21648038,21649877,21651280,21652736,21654186,21655628,21657539,21659579,21661606,21663658,21665701,21667702,21669702,21671675,21673674,21675192,21676695,21678183,21679684,21681468,21683127,21684793,21686463,21688406,21690391,21692372,21694362,21696369,21698098,21699804,21701522,21703302,21705355,21707407,21709453,21711504,21713072,21714328,21715445,21715985,21716520,21717056,21717816,21719003,21720446,21721877,21723036,21724239,21725736,21727080,21728506,21729779,21731319,21732849,21734481,21735938,21737344,21739019,21740808,21742547,21744387,21746030,21747243,21748569,21749819,21751196,21752175,21753164,21754183,21755235,21756209,21757071,21758144,21759222,21760090,21762107,21764078,21766021,21767964,21769984,21771993,21773976,21775969,21777953,21779543,21781023,21782653,21784353,21786032,21787690,21789394,21791035,21792849,21794343,21795834,21797443,21799258,21800855,21802589,21804278,21805976,21807458,21809167,21810762,21812179,21813663,21815268,21816811,21818251,21820090,21821992,21823856,21825704,21827600,21829497,21831371,21833227,21835135,21836774,21838297,21839750,21841395,21843368,21845353,21847317,21849312,21851302,21853114,21854901,21856715,21858558,21860422,21862337,21864254,21866064,21867517,21868980,21870408,21871794,21873285,21874786,21876303,21877774,21879294,21880832,21882580,21884265,21885909,21887374,21888981,21890504,21891994,21893736,21895461,21897085,21898843,21900529,21902257,21903932,21905714,21907402,21909084,21910630,21912299,21913959,21915644,21917277,21918810,21920480,21922087,21923656,21925211,21926702,21928211,21930003,21931340,21933072,21934751,21936214,21937712,21939243,21940767,21942284,21943801,21945463,21947086,21948460,21949791,21951122,21952654,21954256,21956069,21957486,21959032,21960735,21962196,21963907,21965679,21967372,21968999,21970598,21971870,21973090,21974297,21975601,21976937,21978180,21979497,21981161,21982563,21984051,21985332,21986742,21987874,21989032,21990259,21991494,21992776,21994201,21995638,21997002,21998391,21999990,22001217,22002476,22003983,22005737,22007579,22009283,22010677,22011863,22012857,22013799,22014697,22015766,22016932,22018171,22019430,22020835,22022483,22024058,22025717,22027539,22029067,22030233,22031241,22032255,22033206,22033961,22034757,22036097,22037155,22038437,22039704,22040961,22042236,22043716,22045380,22047102,22048968,22050865,22052606,22054377,22056127,22057555,22058833,22060012,22061336,22062605,22063941,22065208,22066504,22067699,22068987,22070280,22071559,22072897,22074600,22076191,22077865,22079489,22081026,22082429,22084060,22085731,22087367,22088795,22090014,22091214,22092482,22093765,22094984,22096397,22097861,22099716,22101164,22102432,22103811,22105043,22106278,22107332,22108562,22109947,22111543,22113261,22114915,22116548,22118005,22119382,22120869,22122150,22123987,22125422,22126867,22128098,22129380,22130642,22131812,22133076,22134473,22136085,22137819,22139534,22141206,22142717,22144334,22146077,22147589,22149226,22150767,22151830,22152078,22153037,22154626,22155746,22155966,22156855,22158419,22159503,22159764,22160665,22162223,22163332,22163594,22164478,22166010,22167142,22167401,22168250,22169790,22170932,22171191,22171976,22173209,22174487,22175780,22177103,22178477,22179720,22181101,22182367,22183792,22185073,22186377,22187661,22189089,22190409,22191711,22193042,22194381,22195763,22197215,22198510,22199743,22200986,22202264,22203488,22204760,22206001,22207557,22208745,22209948,22211139,22212363,22213586,22214757,22215949,22217155,22218688,22219972,22221193,22222467,22223747,22225015,22226275,22227511,22229099,22230860,22232600,22234374,22236027,22237692,22239385,22241221,22243161,22244343,22245674,22246997,22248392,22249720,22251123,22252394,22253733,22255083,22256453,22257832,22259177,22260543,22261918,22263313,22264699,22266525,22268204,22269813,22271369,22273009,22274582,22276115,22277585,22278841,22280212,22281579,22283003,22284595,22286093,22287548,22289067,22290742,22292664,22294324,22295926,22297507,22299162,22300744,22302305,22303834,22305112,22306529,22307882,22309272,22310826,22312310,22313808,22315354,22317013,22318897,22320601,22322194,22323796,22325420,22327006,22328581,22330087,22331385,22332753,22334120,22335495,22337044,22338551,22340082,22341587,22343202,22345044,22346801,22348422,22350018,22351597,22353213,22354800,22356316,22357658,22358998,22360389,22361767,22363314,22364831,22366371,22367819,22369411,22371195,22372752,22373971,22375132,22376132,22376972,22377929,22379011,22380019,22381131,22382265,22383542,22384749,22385786,22386715,22387726,22388775,22389842,22391470,22392675,22393882,22394891,22395738,22396642,22397724,22398724,22399814,22400918,22402205,22403392,22404490,22405370,22406373,22407400,22408486,22410418,22412342,22414241,22416183,22418141,22420135,22422067,22424012,22425890,22427734,22429492,22431301,22433187,22435093,22437040,22438977,22440918,22442392,22444380,22446300,22448269,22450248,22452221,22454189,22456134,22458109,22460035,22461807,22463563,22465334,22467113,22468859,22470697,22472470,22474207,22475996,22477762,22479540,22481285,22483026,22484718,22486728,22488674,22490565,22492455,22494344,22496315,22497903,22498642,22499473,22501492,22503455,22505467,22507453,22509406,22511367,22513362,22515321,22517338,22519289,22521239,22523194,22525181,22527147,22529139,22531079,22533039,22534858,22536439,22537996,22539556,22541114,22542704,22544252,22545814,22547479,22549264,22550884,22552592,22554180,22555812,22557669,22559472,22561312,22563125,22564824,22566338,22567913,22569394,22571101,22572762,22574500,22576112,22577818,22579456,22581129,22582864,22584633,22586470,22588311,22590147,22592029,22593859,22595504,22597217,22598776,22600557,22602390,22604212,22606053,22607906,22609489,22611091,22612672,22614229,22615902,22617585,22619325,22620972,22622744,22624453,22626233,22627971,22629792,22631349,22632884,22634613,22636341,22638028,22639573,22641436,22643085,22644845,22646496,22648311,22649975,22651665,22653251,22654890,22656603,22658104,22659646,22661376,22663059,22664684,22666163,22667768,22669702,22671540,22672556,22674415,22676331,22678025,22679829,22681362,22683385,22685384,22687388,22689159,22690684,22692054,22693278,22694575,22695826,22697321,22698914,22700480,22701997,22703447,22704917,22706399,22707915,22709438,22710930,22712147,22713146,22714021,22715003,22716301,22717411,22718379,22719495,22720552,22722313,22724131,22726008,22727895,22729674,22731546,22733301,22735096,22737069,22738831,22740439,22742066,22743710,22745443,22747215,22748998,22750662,22752507,22754349,22756211,22758104,22759857,22761759,22763513,22765338,22767268,22769112,22770727,22772398,22774065,22775793,22777573,22779357,22781044,22782904,22784674,22786587,22788373,22790301,22792063,22794002,22795796,22797707,22799686,22801595,22803589,22805568,22807458,22809410,22811379,22813341,22815329,22817183,22818864,22820604,22822433,22824195,22826059,22827942,22829740,22831441,22833060,22834342,22835622,22837312,22838883,22840492,22841695,22842843,22843952,22844935,22845442,22845738,22846949,22848224,22849539,22850815,22852169,22853620,22854916,22856245,22857558,22858988,22860344,22861644,22862990,22864273,22865733,22867106,22868408,22869791,22871104,22872552,22874096,22875287,22876690,22878135,22879930,22881843,22883805,22885845,22887881,22889882,22891880,22893842,22895802,22897443,22899064,22900579,22902057,22903798,22905392,22907118,22908852,22910427,22912179,22913973,22915564,22917325,22918911,22920517,22922125,22923750,22925422,22927228,22929135,22931045,22932884,22934537,22936262,22938081,22940039,22941998,22943856,22945562,22947312,22949175,22951099,22952919,22954680,22956308,22958155,22960084,22961980,22963855,22965486,22967254,22969162,22971161,22973107,22975024,22976746,22978424,22980298,22982184,22984060,22985820,22987164,22988146,22989127,22990107,22991518,22993010,22994605,22996198,22997841,22999464,23001162,23002805,23004425,23005998,23007850,23009548,23011272,23012995,23014584,23016305,23017910,23019548,23021238,23022945,23024870,23026609,23028318,23030062,23031793,23033523,23035257,23036864,23038578,23040255,23041986,23043670,23045276,23046958,23048594,23050112,23052091,23053995,23055849,23057797,23059743,23061664,23063546,23065242,23067026,23068680,23070361,23072129,23074083,23075961,23077871,23079743,23081645,23083646,23085565,23087517,23089456,23091381,23093210,23095006,23096796,23098598,23100486,23102441,23104306,23106199,23108109,23110011,23111860,23113733,23115413,23116783,23117970,23119333,23121050,23122650,23124307,23125929,23127830,23129700,23131543,23133390,23135242,23137089,23138923,23140785,23142673,23144530,23146433,23148330,23149244,23149855,23150474,23151388,23152477,23153444,23154799,23156028,23157316,23158276,23160102,23161803,23163439,23164999,23166760,23168350,23169999,23171691,23173283,23174754,23176384,23177844,23179192,23180415,23182001,23183644,23185336,23187059,23188762,23190473,23192201,23193810,23195516,23196894,23198242,23199795,23201230,23202761,23204217,23205728,23207176,23208635,23210073,23211448,23212811,23214660,23216471,23218287,23220144,23222005,23223861,23225722,23227535,23229435,23231255,23233076,23234917,23236845,23238750,23240627,23242479,23244355,23246340,23248350,23250316,23252211,23254113,23255989,23257926,23259851,23261789,23263669,23265605,23267506,23269376,23271258,23273124,23275019,23276901,23278666,23280163,23281626,23283186,23284826,23286422,23288018,23289682,23291301,23292929,23294549,23296147,23297894,23299560,23301195,23302860,23304511,23306133,23307793,23309428,23311103,23312803,23314453,23316104,23317763,23319398,23321019,23322647,23324296,23326185,23328050,23329924,23331764,23333631,23335504,23337335,23339205,23341050,23343010,23344871,23346695,23348545,23350384,23352219,23354064,23355921,23357871,23359750,23361598,23363456,23365322,23367183,23369025,23370889,23372776,23374378,23375761,23377194,23378617,23379928,23381377,23382787,23384388,23385794,23387087,23388572,23390051,23391446,23392867,23394693,23396568,23398399,23400227,23402030,23403856,23405681,23407601,23409530,23411209,23412941,23414651,23416334,23418024,23419723,23421481,23423103,23424824,23426403,23428203,23429895,23431601,23433341,23435113,23436841,23438415,23440078,23441970,23443802,23445633,23447504,23449106,23450914,23452771,23454640,23456491,23458346,23460022,23461757,23463531,23465296,23467078,23468833,23470438,23472186,23473876,23475561,23477387,23479019,23480743,23482500,23484326,23486065,23487836,23489557,23491227,23492926,23494558,23496232,23497953,23499342,23500550,23501832,23503012,23504280,23505538,23506693,23508045,23509721,23511262,23512767,23514425,23516098,23517636,23519195,23520785,23522361,23523896,23525441,23526999,23528876,23530730,23532667,23534553,23536416,23537912,23539569,23540987,23542580,23544317,23546130,23547910,23549625,23551410,23552888,23554361,23556066,23557823,23559570,23561068,23562439,23563894,23565750,23567649,23569151,23570600,23572225,23573646,23575179,23576760,23578219,23579906,23581422,23582905,23584427,23585960,23587435,23589012,23590446,23591927,23593474,23594970,23596568,23598066,23599556,23601064,23602707,23604263,23605738,23607297,23608652,23610145,23611561,23613075,23614967,23616808,23618648,23620440,23622243,23624061,23625817,23627570,23629256,23630823,23632633,23634324,23636115,23637911,23639529,23641295,23643084,23644714,23646579,23648516,23650374,23652263,23654156,23655906,23657830,23659552,23661330,23663095,23664672,23666438,23668161,23669948,23671583,23673329,23675082,23676840,23678534,23680325,23682039,23683804,23685515,23687151,23688834,23690455,23692217,23693911,23695727,23697384,23699071,23700794,23702519,23704215,23705941,23707613,23709342,23711062,23712835,23714384,23715810,23717485,23719245,23720924,23722636,23724396,23726014,23727464,23729024,23730535,23732082,23733471,23734986,23736501,23738011,23739669,23741465,23743167,23744909,23746679,23748331,23750041,23751760,23753438,23755048,23756720,23758336,23760027,23761608,23763229,23764868,23766563,23768204,23769861,23771469,23773155,23774810,23776451,23778082,23779717,23781444,23783075,23784732,23786355,23788041,23789672,23791307,23792939,23794661,23796297,23797950,23799620,23801239,23802993,23804608,23806224,23807813,23809585,23811206,23812912,23814606,23816394,23818031,23819672,23821289,23822968,23824626,23826241,23827918,23829597,23831402,23833003,23834614,23836239,23837949,23839597,23841478,23843241,23844913,23846540,23848333,23850127,23851690,23853459,23855279,23857066,23858767,23860676,23862561,23864435,23866372,23868386,23870326,23872264,23874225,23876207,23877945,23879805,23881740,23883740,23885737,23887740,23889725,23891552,23893469,23895305,23897121,23899039,23901043,23903078,23905100,23907102,23909062,23911016,23912941,23914847,23916731,23918635,23920537,23922463,23924418,23926403,23928164,23930066,23931952,23933844,23935695,23937443,23939041,23940664,23942617,23944390,23946200,23947745,23949352,23950993,23952621,23954192,23955999,23957402,23958803,23960131,23961461,23962893,23964429,23965910,23967269,23968696,23970249,23971734,23973160,23974602,23976040,23977577,23979069,23980449,23982130,23983881,23985696,23987390,23989079,23990778,23992521,23994251,23995912,23997630,23999311,24001070,24002740,24004409,24006075,24007770,24009386,24011125,24012783,24014459,24016084,24017833,24019520,24021173,24022819,24024548,24026185,24027829,24029468,24031196,24033151,24035035,24036937,24038881,24040760,24042688,24044568,24046457,24048392,24050180,24051959,24053751,24055673,24057686,24059670,24061709,24063756,24065786,24067834,24069855,24071875,24073904,24075941,24077982,24080031,24082085,24084137,24086169,24088207,24090245,24092110,24093962,24095826,24097748,24099670,24101568,24103443,24105310,24107047,24108522,24110035,24111404,24113071,24114708,24116349,24117870,24119442,24121088,24122655,24124276,24125804,24127220,24128773,24130391,24131941,24133461,24135100,24136561,24137961,24139501,24140924,24142691,24144542,24146371,24148108,24149765,24151426,24153245,24155096,24156978,24158826,24160634,24162414,24164063,24165898,24167740,24169566,24171166,24173174,24175161,24177173,24179094,24180984,24182910,24184489,24186201,24187904,24189655,24191359,24193150,24194938,24196695,24198359,24200138,24201826,24203534,24205209,24206864,24208344,24209855,24211353,24212869,24214406,24215932,24217468,24218973,24220504,24222022,24223518,24225049,24226547,24228106,24229648,24231151,24232647,24234139,24235437,24236719,24238010,24239179,24241148,24243083,24245006,24246889,24248820,24250784,24252719,24254647,24256526,24257878,24259152,24260446,24261797,24263150,24264480,24265785,24267244,24268893,24270338,24271791,24273396,24275049,24276530,24278128,24279688,24281386,24283081,24284747,24286407,24288064,24289735,24291374,24293047,24294752,24296411,24297657,24298944,24300255,24301540,24302859,24304067,24305287,24306696,24307962,24309057,24310069,24311187,24312365,24313540,24314549,24315874,24317374,24318627,24319943,24321183,24322406,24323646,24324921,24326327,24327598,24329151,24330490,24331809,24333172,24334494,24335853,24337141,24338451,24340176,24341765,24343386,24345129,24346848,24348468,24349998,24351286,24353108,24355086,24356585,24357639,24358898,24360065,24361414,24362516,24364046,24366014,24367945,24369524,24371271,24373091,24374916,24376658,24378228,24380173,24381381,24381818,24382376,24382839,24383380,24383884,24384436,24384903,24385746,24386241,24387297,24388604,24390051,24391392,24392582,24393695,24394182,24395056,24395574,24396971,24398408,24399938,24401437,24402825,24403913,24404481,24406004,24407040,24408439,24409581,24411092,24412456,24413652,24414838,24416634,24418421,24420129,24421877,24423676,24424050,24424149,24425328,24425800,24426462,24427067,24427588,24428070,24428826,24429456,24429954,24431247,24432166,24433051,24434497,24435915,24437305,24438730,24440153,24441700,24443300,24445010,24446616,24448257,24449807,24451409,24453261,24454841,24455971,24457139,24458315,24459552,24460860,24462123,24463425,24464687,24466142,24467650,24469250,24470872,24472546,24474142,24475536,24476872,24478255,24479120,24479145,24479175,24479200,24479650,24480340,24481567,24482311,24483774,24485404,24487079,24488699,24490330,24491543,24493198,24494713,24496320,24497858,24499565,24501469,24503405,24505309,24507258,24509137,24510881,24511747,24512849,24514342,24515686,24516643,24517603,24518886,24520210,24521626,24523071,24524566,24526093,24527659,24529274,24531009,24532772,24534308,24535915,24537408,24538970,24540554,24542066,24543611,24545319,24547370,24549421,24551457,24553469,24555359,24557291,24559309,24561277,24563022,24564932,24566805,24568750,24570746,24572782,24574771,24576805,24578792,24580813,24582786,24584819,24586868,24588879,24590603,24592436,24594435,24596442,24598438,24600379,24602046,24603651,24604895,24606123,24607314,24608743,24610736,24612649,24614366,24616118,24618017,24619909,24621676,24623466,24625246,24627092,24629029,24630997,24632956,24634929,24636896,24638862,24640871,24642752,24644297,24645847,24647404,24648919,24650455,24652010,24653547,24655058,24656435,24657815,24659129,24660454,24661735,24663030,24664377,24665911,24667919,24669942,24671923,24673904,24675902,24677888,24679809,24681744,24683758,24685596,24687321,24688989,24690653,24692372,24694016,24695351,24695566,24696004,24697248,24698564,24699884,24700870,24701889,24702843,24703947,24705105,24706722,24708427,24709982,24711687,24713420,24715093,24716609,24718184,24719763,24721374,24722926,24724517,24726015,24727495,24728755,24730138,24731195,24732370,24733605,24734946,24736181,24737496,24738919,24740415,24741973,24743581,24745047,24746498,24747914,24749201,24750157,24751241,24752837,24754349,24755133,24756300,24757564,24758941,24760427,24761886,24763363,24764880,24766054,24767339,24768780,24770293,24771989,24773707,24775559,24777396,24779177,24780979,24782544,24784186,24785772,24787421,24788994,24790594,24792087,24793689,24795175,24796630,24797872,24799273,24800798,24802375,24803731,24805093,24806468,24807864,24809211,24810490,24811024,24811662,24812116,24812838,24814283,24815812,24817372,24818926,24820342,24821822,24823367,24824827,24826186,24827513,24828663,24829835,24831153,24832549,24834063,24835444,24836563,24837386,24837710,24838591,24840322,24842230,24844013,24845793,24847352,24848755,24849768,24850896,24852457,24854040,24855599,24857138,24858712,24860283,24861834,24863538,24865307,24867144,24868873,24870695,24872482,24874361,24876134,24877892,24879297,24880694,24882055,24883469,24884893,24886388,24888060,24889778,24891330,24892889,24894396,24895877,24897416,24898955,24900423,24902080,24903985,24905819,24907359,24908638,24909376,24910133,24910983,24912224,24913713,24915301,24916974,24918681,24920157,24921751,24923116,24924461,24925701,24926662,24927268,24928112,24928933,24929803,24930421,24931349,24932788,24934014,24934532,24935094,24935606,24936578,24938331,24940023,24941111,24942252,24943275,24944456,24945821,24947183,24948276,24949401,24950308,24951302,24952731,24954216,24955645,24957105,24958534,24960097,24961792,24963551,24965189,24966981,24968857,24970714,24972276,24973692,24974692,24975841,24976975,24978145,24979105,24980117,24980950,24982020,24983024,24984172,24985379,24986529,24987002,24987568,24988189,24988860,24989356,24989899,24990511,24991167,24991673,24992238,24992873,24993579,24994101,24994684,24995297,24995981,24996425,24996938,24997501,24998525,25000403,25002101,25003151,25004282,25005322,25006449,25007488,25008590,25009703,25011040,25012841,25014509,25016187,25017901,25019541,25021217,25022952,25024519,25025672,25026984,25028647,25030312,25032002,25033760,25035645,25037129,25037374,25037733,25038024,25038403,25038588,25038869,25039116,25039490,25039542,25039815,25039840,25040019,25040181,25040468,25040736,25041041,25041282,25041914,25043351,25044835,25046455,25047985,25049056,25050135,25051207,25052334,25053521,25054848,25056315,25057836,25059285,25060899,25062754,25064633,25066329,25068039,25069424,25071044,25072669,25074326,25075700,25077128,25078375,25079651,25081252,25082829,25084414,25085582,25087221,25088664,25090156,25091631,25093028,25094282,25095714,25097186,25098589,25100121,25101641,25103159,25104446,25105546,25106853,25108194,25109558,25110760,25112085,25113180,25114320,25115369,25116838,25118358,25119863,25121342,25122871,25124406,25125928,25127451,25128519,25129291,25129891,25130402,25131172,25131882,25132659,25133328,25133938,25134484,25134998,25135705,25136379,25137084,25137773,25138464,25139226,25139915,25140665,25141486,25142270,25142964,25143504,25143978,25144891,25146908,25148896,25150658,25152410,25154099,25155775,25157472,25159182,25160895,25162601,25164302,25165993,25167867,25169814,25171633,25173404,25175090,25176772,25178535,25180270,25182022,25183095,25184082,25185335,25187127,25188591,25190261,25192119,25193661,25195138,25196605,25198086,25199567,25201038,25202524,25203995,25205484,25206784,25207369,25207915,25208461,25209104,25209687,25210121,25210686,25211299,25211878,25212443,25213066,25213670,25214255,25214799,25215117,25215539,25216074,25216495,25216684,25217186,25217792,25218146,25218480,25218916,25219268,25219762,25220981,25222921,25224779,25226439,25228089,25229770,25231441,25233113,25234780,25236442,25238141,25239824,25241518,25243199,25245079,25246941,25248596,25250310,25251975,25253732,25255514,25257171,25258838,25259936,25260648,25261353,25262647,25264548,25266204,25267942,25269520,25271271,25273089,25274672,25276205,25277679,25279202,25280691,25282179,25283678,25285187,25286689,25288179,25289686,25291186,25292679,25294157,25295673,25297148,25298656,25300158,25301654,25303116,25304596,25305226,25305556,25306125,25306686,25307363,25307882,25308475,25309172,25309752,25310078,25310652,25311098,25311540,25312000,25312481,25312789,25313175,25313787,25314439,25315029,25315680,25316399,25316937,25317609,25318251,25318817,25319449,25319894,25320445,25320802,25321333,25321830,25322248,25322586,25323003,25323498,25323960,25324381,25324908,25325327,25325806,25326268,25326874,25327422,25327992,25328545,25328871,25329459,25329857,25330385,25330851,25331263,25331633,25332184,25332614,25333102,25333645,25333858,25334162,25334721,25336587,25338572,25340604,25342608,25344614,25346666,25348381,25350056,25351752,25353432,25355140,25356856,25358582,25360266,25361961,25363635,25365318,25367018,25368698,25370390,25372075,25373770,25375471,25377177,25378913,25380631,25382329,25384019,25385709,25387426,25389101,25390805,25392476,25394412,25396460,25398508,25400372,25401971,25403655,25405387,25407082,25408813,25410578,25412219,25413902,25415644,25417361,25419030,25420704,25422360,25424123,25425899,25427582,25429248,25430900,25432609,25434256,25435174,25436066,25437003,25437787,25438521,25439459,25440508,25441533,25442561,25443753,25444947,25446109,25447064,25448166,25449092,25450159,25451002,25451914,25453220,25453970,25455958,25457926,25459821,25461588,25463174,25464638,25466212,25467696,25469208,25470742,25472231,25473686,25475195,25476697,25478177,25479647,25480158,25480713,25481088,25481538,25481972,25482369,25482852,25483214,25483880,25484534,25485073,25485638,25486204,25486741,25487292,25487492,25487758,25487902,25488257,25488734,25489401,25489899,25490404,25490879,25491307,25491691,25492220,25492632,25492835,25493136,25494857,25496900,25498845,25500552,25502268,25503942,25505649,25507341,25509046,25510740,25512442,25514129,25515910,25517629,25519295,25520980,25523028,25524920,25526655,25528323,25530012,25531760,25533486,25535185,25536964,25538790,25540430,25542039,25543052,25544186,25545665,25547035,25548965,25550686,25552136,25553719,25555198,25556700,25558195,25559673,25561164,25562651,25564131,25565582,25567075,25567435,25567677,25567903,25568064,25568577,25569047,25569250,25569509,25569853,25570290,25570558,25570968,25571331,25571640,25571759,25571908,25572074,25572488,25572785,25573241,25573747,25574033,25574303,25574676,25575172,25575726,25576032,25576344,25577783,25579778,25581831,25583501,25585186,25586908,25588583,25590277,25591975,25593639,25595300,25596990,25598691,25600399,25602117,25603977,25606025,25607834,25609688,25611474,25613247,25614987,25616642,25618349,25620171,25621993,25623861,25625294,25625910,25626400,25627286,25628325,25629184,25630614,25632237,25633939,25635676,25637141,25638637,25640144,25641642,25643131,25644603,25645444,25645890,25646296,25646616,25646962,25647453,25647735,25648135,25648573,25649027,25649356,25649811,25650211,25650493,25650733,25651131,25651593,25652787,25654757,25656545,25658223,25659923,25661588,25663260,25664958,25666644,25668361,25670328,25672133,25673895,25675541,25677259,25679029,25680854,25682683,25683607,25684775,25686221,25687722,25689381,25690922,25692420,25693924,25695361,25695932,25696523,25696963,25697431,25697985,25698483,25699042,25699568,25699966,25700333,25700648,25701515,25703453,25705105,25706758,25708406,25710083,25711749,25713733,25715397,25717035,25718725,25720201,25721465,25723113,25724731,25726263,25727709,25729229,25730717,25732212,25733713,25735198,25736691,25738175,25739674,25741177,25742714,25744183,25745680,25747175,25748673,25750085,25750630,25751113,25751595,25751893,25752208,25752691,25753180,25753521,25753833,25754311,25754815,25755345,25755735,25756104,25756540,25756941,25757413,25757811,25758277,25758597,25758767,25758937,25759374,25759630,25759948,25760160,25760339,25760630,25760998,25761273,25761608,25761900,25762291,25762548,25762885,25763329,25763690,25764078,25764442,25764820,25765167,25765657,25765991,25766363,25766715,25766974,25767332,25767724,25767980,25768404,25768914,25769362,25769982,25771968,25773893,25775856,25777816,25779759,25781412,25783091,25784764,25786444,25788125,25789815,25791480,25793155,25794874,25796596,25798273,25799948,25801610,25803284,25804951,25806626,25808292,25809976,25811656,25813337,25815000,25816687,25818364,25820257,25822305,25824358,25825987,25827609,25829225,25830857,25832510,25834192,25836003,25837712,25839423,25841098,25842799,25844387,25845995,25847637,25849325,25851019,25852653,25853662,25854309,25854991,25855566,25856222,25856710,25857767,25859048,25860559,25861671,25862863,25863841,25865248,25866764,25868201,25869510,25871026,25872479,25873843,25875723,25877530,25879363,25881176,25882751,25884309,25885783,25887252,25888733,25890227,25891707,25893211,25894716,25896201,25897704,25899208,25900453,25900958,25901466,25902106,25902800,25903326,25903876,25904294,25904798,25905129,25905285,25905797,25906071,25906511,25906992,25907603,25908057,25908344,25908755,25909339,25909901,25910585,25911188,25911777,25912093,25912679,25912920,25913285,25913826,25914513,25915209,25915885,25916342,25916653,25917051,25917620,25917950,25918122,25919364,25921348,25923323,25925309,25927020,25928732,25930398,25932110,25933805,25935506,25937181,25938893,25940597,25942294,25943997,25945753,25947445,25949165,25950860,25952571,25954583,25956631,25958452,25960212,25961941,25963704,25965510,25967294,25969041,25970794,25972515,25974300,25976086,25977868,25979637,25981224,25982159,25983134,25984253,25985631,25987276,25988699,25990227,25992189,25993977,25995573,25997146,25998831,26000403,26001892,26003376,26004881,26006378,26007865,26009361,26010850,26012335,26013817,26015313,26016823,26018310,26019799,26021264,26022752,26024220,26025693,26027175,26028674,26030177,26031556,26032115,26032782,26033441,26034039,26034636,26035171,26035699,26036342,26036967,26037508,26038014,26038395,26038799,26039380,26039957,26040419,26040858,26041321,26041872,26042320,26043006,26043426,26043967,26044562,26044984,26045388,26045908,26046419,26046925,26047519,26047835,26048379,26048796,26049223,26049665,26050208,26050565,26050801,26051272,26051741,26052208,26052741,26053269,26053657,26053886,26054350,26054800,26055096,26055517,26055917,26056135,26056443,26056771,26057255,26057703,26058199,26058657,26058880,26059422,26059924,26060261,26060507,26060867,26061367,26061787,26062110,26062372,26062909,26063432,26063832,26064316,26064735,26065113,26065689,26066298,26066915,26068931,26070979,26073027,26075078,26077134,26079181,26081229,26082974,26084697,26086441,26088186,26089964,26091735,26093489,26095191,26096932,26098657,26100401,26102137,26103839,26105564,26107314,26109075,26110836,26112575,26114336,26116105,26117850,26119603,26121323,26123041,26124766,26126542,26128288,26130075,26131822,26133560,26135324,26137094,26138826,26140573,26142376,26144424,26146472,26148520,26150568,26152529,26154266,26156062,26157897,26159746,26161632,26163430,26165215,26167016,26168833,26170633,26172318,26174077,26175915,26177727,26179542,26181371,26183153,26184986,26186824,26188671,26190475,26192218,26194033,26195906,26197782,26199642,26201466,26203312,26205155,26207017,26208878,26210684,26212151,26213036,26213834,26214684,26215391,26216293,26217670,26218921,26220407,26221485,26222694,26224175,26225401,26226444,26227284,26228071,26229286,26230645,26232150,26233367,26235350,26237301,26239174,26240936,26242596,26244026,26245669,26247258,26248834,26250395,26251887,26253384,26254895,26256411,26257925,26259432,26260872,26262345,26263838,26265339,26266800,26268290,26269780,26271297,26272810,26274298,26275792,26277294,26278772,26280269,26281197,26281718,26282397,26283007,26283474,26283972,26284327,26284889,26285473,26286096,26286785,26287384,26288009,26288697,26289197,26289683,26290162,26290720,26291330,26291828,26292178,26292613,26293126,26293695,26294260,26294636,26295167,26295631,26296012,26296565,26297051,26297248,26297448,26297827,26298273,26298712,26299040,26299477,26299715,26300157,26300545,26301022,26301371,26301661,26302106,26302494,26303056,26303357,26303694,26303861,26304293,26304704,26305052,26305225,26305433,26305609,26305932,26306195,26306745,26307261,26307720,26308306,26308743,26309195,26309737,26311675,26313676,26315599,26317583,26319563,26321530,26323168,26324842,26326523,26328206,26329864,26331566,26333282,26334972,26336651,26338333,26339976,26341623,26343309,26345007,26346710,26348383,26350088,26351787,26353477,26355162,26356829,26358520,26360178,26361855,26363531,26365206,26366870,26368550,26370598,26372646,26374694,26376261,26377960,26379669,26381412,26383185,26384982,26386606,26388255,26389920,26391709,26393427,26395220,26396920,26398649,26400390,26402095,26403818,26405509,26407207,26408962,26410437,26411278,26412003,26412545,26413084,26413844,26414565,26415555,26416568,26417540,26418225,26418971,26419569,26420299,26420978,26421686,26422426,26423067,26423812,26424296,26424620,26425331,26426000,26426995,26427698,26428280,26428783,26429410,26431031,26431600,26433201,26434868,26436655,26438443,26440226,26441886,26443563,26445061,26446690,26448304,26449844,26451319,26452802,26454285,26455767,26457241,26458711,26460205,26461683,26463146,26464612,26466109,26467570,26469054,26470518,26471990,26473460,26474942,26476428,26477888,26479360,26480849,26482342,26483816,26485294,26486780,26488284,26489754,26491228,26492673,26494156,26495608,26497091,26498549,26500009,26501482,26502969,26504420,26505873,26507344,26508805,26510300,26511790,26513283,26514746,26516196,26517673,26519150,26520590,26522044,26523466,26524877,26526292,26527774,26529267,26530742,26532176,26533622,26535102,26536558,26538037,26539491,26540982,26542466,26543927,26545416,26546844,26548315,26549784,26551260,26552744,26554220,26555691,26557133,26558571,26559124,26559651,26560027,26560648,26561105,26561582,26561839,26562342,26562834,26563139,26563383,26564023,26564575,26565017,26565642,26566091,26566558,26567185,26567822,26568314,26568994,26569475,26570074,26570625,26571019,26571508,26572163,26572758,26573336,26573803,26574230,26574708,26575219,26575763,26576292,26576717,26577166,26577749,26578272,26578809,26579451,26580036,26580691,26581243,26581538,26581871,26582363,26582830,26583338,26583913,26584473,26585143,26585698,26586191,26586756,26587230,26587793,26588205,26588583,26589123,26589612,26590057,26590459,26591002,26591572,26591916,26592361,26592847,26593245,26593825,26594239,26594766,26595105,26595686,26596294,26596848,26597500,26598082,26598691,26599214,26599747,26600305,26600793,26601387,26601932,26602213,26602633,26602965,26603499,26603945,26604472,26604984,26605374,26605664,26606134,26606592,26606874,26607364,26607829,26608315,26608715,26609045,26609558,26610180,26610646,26611191,26611774,26612155,26612388,26612827,26613266,26613483,26613685,26614050,26614567,26615093,26615640,26616030,26616398,26616875,26617204,26617541,26617829,26618211,26618535,26619139,26619519,26619960,26620483,26620965,26621558,26622160,26622680,26623216,26623748,26624347,26624811,26625227,26625656,26626117,26626660,26627250,26627789,26628270,26628759,26629270,26629801,26630153,26630401,26630850,26631346,26631769,26632325,26632855,26633354,26633946,26634408,26634731,26635038,26635604,26636094,26636585,26637010,26637457,26637944,26638368,26638815,26639430,26640035,26640488,26640965,26641442,26641918,26642385,26642923,26643554,26644084,26644468,26644828,26645354,26645812,26646204,26646724,26647374,26647755,26648090,26648482,26648777,26649077,26649307,26649714,26650090,26650382,26650771,26650992,26651530,26652039,26652665,26653250,26653690,26653994,26654369,26654957,26655479,26656011,26656435,26656966,26657471,26657959,26658481,26658948,26659395,26659905,26660232,26660545,26660949,26661366,26661964,26662529,26663068,26663471,26663879,26664397,26664928,26665302,26665872,26666442,26666929,26667440,26667898,26668342,26668870,26669403,26669795,26670296,26670800,26670994,26671154,26671641,26672227,26672763,26673358,26673815,26674333,26674854,26675356,26675873,26676274,26676882,26678781,26680713,26682661,26684575,26686504,26688445,26690443,26692406,26694375,26696360,26698306,26700294,26702249,26704185,26706180,26708152,26710083,26712079,26714130,26716077,26717753,26719381,26721016,26722679,26724359,26726077,26727794,26729508,26731196,26732857,26734554,26736227,26737933,26739597,26741294,26742963,26744644,26746319,26747999,26749666,26751345,26753027,26754718,26756410,26758095,26759784,26761452,26763149,26764828,26766503,26768191,26769874,26771547,26773225,26774919,26776599,26778291,26779958,26781651,26783345,26785004,26786661,26788302,26789979,26791680,26793326,26795014,26796670,26798350,26799994,26801656,26803335,26805008,26806662,26808340,26810047,26811744,26813429,26815110,26816799,26818471,26820128,26821822,26823485,26825124,26826838,26828551,26830233,26831912,26833569,26835223,26836883,26838575,26840231,26841887,26843557,26845201,26846839,26848499,26850163,26851846,26853506,26855184,26856859,26858524,26860201,26861922,26863603,26865315,26867005,26868688,26870417,26872097,26873758,26875451,26877178,26878869,26880559,26882237,26883920,26885599,26887268,26888945,26890650,26892337,26894002,26895864,26897912,26899960,26902008,26904056,26906113,26908161,26910209,26912257,26914305,26916353,26918233,26919883,26921460,26923139,26924897,26926683,26928425,26930178,26931899,26933640,26935304,26936964,26938618,26940312,26942023,26943686,26945418,26947173,26948871,26950597,26952312,26954055,26955784,26957525,26959182,26960805,26962535,26964240,26965977,26967622,26969340,26970934,26972610,26974303,26976018,26977695,26979283,26981005,26982724,26984477,26986238,26988020,26989716,26991386,26993092,26994805,26996496,26998243,26999970,27001625,27003265,27004966,27006740,27008451,27009965,27011429,27012988,27014606,27016329,27018080,27019700,27021469,27023289,27025014,27026736,27028457,27030104,27031875,27033669,27035385,27037029,27038780,27040492,27042256,27044056,27045789,27047492,27048602,27049480,27050272,27051167,27051999,27052721,27053459,27054155,27054797,27055525,27056061,27056673,27057292,27057962,27058228,27058512,27059245,27059869,27060636,27061307,27062214,27062818,27063501,27064204,27064992,27065792,27066592,27067297,27068110,27068945,27069637,27070444,27071317,27072140,27072894,27073678,27074571,27075263,27076002,27076703,27077400,27078159,27078785,27079507,27080277,27080884,27081777,27082455,27083205,27083996,27084597,27085180,27085505,27085932,27086482,27087139,27087977,27088510,27089002,27089710,27090332,27091152,27092007,27092882,27093648,27094264,27094693,27095216,27095856,27096529,27097319,27097891,27098428,27099095,27099585,27100151,27100675,27101314,27102053,27102773,27103421,27104168,27105070,27105645,27106175,27107117,27107674,27108223,27108687,27109643,27110431,27111356,27112007,27112730,27113444,27114067,27114855,27115409,27116181,27116980,27117588,27118197,27118927,27119472,27120247,27120838,27121377,27121909,27122326,27123069,27123885,27124745,27125650,27126260,27126949,27127725,27128499,27128809,27129584,27130351,27131073,27131754,27132409,27133199,27133881,27134440,27135119,27135927,27136613,27137193,27137924,27138425,27139061,27139788,27140560,27141104,27141478,27141827,27142112,27142434,27142714,27143097,27143498,27143810,27144105,27144404,27144658,27144969,27145382,27145876,27146383,27147082,27147617,27147929,27148479,27149173,27149701,27150456,27151135,27151710,27152370,27153202,27153784,27154493,27155151,27156144,27156728,27157170,27157559,27158062,27158554,27158916,27159372,27159738,27159938,27160449,27160792,27161106,27161402,27161639,27161850,27162421,27163018,27163483,27164144,27164894,27165670,27166047,27166265,27166471,27166721,27166977,27167141,27167320,27167540,27168086,27169311,27171202,27172513,27174436,27176324,27178269,27180186,27182098,27184028,27185975,27187900,27189836,27191794,27193723,27195630,27197505,27199298,27201206,27203058,27204922,27206465,27208010,27209489,27210967,27212443,27213936,27215417,27216903,27218396,27219893,27221376,27221822,27222349,27222788,27223342,27223800,27224193,27224709,27225185,27225647,27225919,27226362,27226813,27227332,27227751,27228190,27228810,27229091,27229467,27229922,27230211,27230615,27230981,27231345,27231663,27232109,27232408,27232878,27233194,27233453,27233851,27234258,27234830,27236818,27238748,27240755,27242427,27244113,27245827,27247541,27249231,27250955,27252626,27254343,27256060,27257745,27259437,27261106,27262776,27264453,27266217,27268265,27270162,27271919,27273635,27275426,27277176,27278912,27280660,27282483,27284254,27285992,27287713,27289437,27290744,27291536,27292332,27293365,27294914,27296277,27297625,27298790,27300390,27302022,27303777,27305331,27306805,27308320,27309819,27311286,27312726,27314229,27315716,27317215,27318707,27320209,27320630,27320909,27321398,27321858,27322240,27322924,27323496,27324085,27324618,27325234,27325743,27326199,27326625,27326994,27327294,27327707,27328175,27328542,27328839,27329257,27329601,27330035,27330578,27330944,27331223,27331771,27332039,27332278,27333341,27335361,27337401,27339147,27340840,27342552,27344257,27345969,27347686,27349403,27351083,27352797,27354494,27356181,27357891,27359578,27361430,27363478,27365197,27366797,27368587,27370446,27372289,27374028,27375765,27377544,27379385,27381160,27382933,27384709,27385757,27386404,27387260,27388389,27389357,27390676,27392005,27393571,27395242,27396968,27398562,27400182,27401759,27403259,27404745,27406233,27407718,27409199,27410705,27412194,27413686,27415157,27416623,27418087,27419580,27421050,27422502,27423982,27425475,27426961,27428443,27429927,27431408,27432851,27434326,27435796,27437292,27438761,27440240,27441729,27443211,27444683,27446168,27447647,27449132,27450637,27452131,27453594,27455095,27455970,27456593,27457164,27457804,27458483,27459184,27459801,27460354,27460884,27461476,27462045,27462682,27463274,27463910,27464501,27465122,27465734,27466357,27466920,27467455,27468091,27468742,27469337,27469902,27470432,27471122,27471717,27472326,27472950,27473533,27474067,27474506,27475038,27475725,27476344,27476872,27477424,27477923,27478455,27478996,27479549,27480063,27480610,27481248,27481808,27482246,27482634,27482833,27483134,27483581,27483967,27484463,27484944,27485372,27485816,27486343,27487016,27487568,27487944,27488125,27488294,27488695,27488825,27489065,27489389,27489916,27490346,27490880,27491348,27491850,27492524,27493042,27493608,27494226,27494827,27495442,27496018,27496489,27497024,27497418,27497992,27498475,27499127,27499710,27500315,27500601,27501107,27501624,27502133,27502635,27502928,27503186,27503525,27504107,27504645,27505307,27505871,27506395,27506754,27507308,27507934,27508435,27509003,27509559,27510197,27510748,27511356,27511796,27512380,27513862,27515866,27517864,27519850,27521893,27523798,27525762,27527707,27529687,27531710,27533428,27535139,27536848,27538558,27540262,27541973,27543675,27545374,27547086,27548761,27550472,27552171,27553850,27555561,27557275,27558967,27560657,27562343,27564036,27565738,27567385,27569051,27570714,27572354,27574034,27575707,27577388,27579065,27580765,27582441,27584120,27585798,27587491,27589172,27590874,27592558,27594225,27595885,27597559,27599254,27600930,27602599,27604255,27605950,27607612,27609266,27611244,27613292,27615340,27617388,27619400,27621146,27622908,27624619,27626294,27627915,27629633,27631351,27633152,27634886,27636641,27638395,27640057,27641783,27643488,27645141,27646862,27648459,27650155,27651840,27653581,27655309,27657001,27658757,27660510,27662211,27663826,27665440,27667149,27668899,27670602,27672345,27674008,27675126,27676065,27676952,27677794,27678601,27679367,27680237,27680997,27681866,27682625,27683697,27684741,27685656,27686403,27687419,27688254,27689569,27690675,27691883,27693021,27694088,27695184,27696409,27697499,27698610,27699810,27701292,27702688,27704042,27704984,27706070,27707382,27708146,27709007,27709749,27710243,27711020,27711528,27711942,27712660,27713600,27714602,27715774,27716813,27718030,27718852,27719443,27719990,27720796,27722025,27723085,27723966,27725036,27726506,27728342,27730191,27732051,27733920,27735821,27737751,27739664,27741609,27743462,27745032,27746575,27748060,27749545,27751037,27752522,27754011,27755495,27756956,27758443,27759942,27761427,27762455,27762915,27763153,27763599,27764131,27764478,27764890,27765377,27765854,27766243,27766400,27766547,27766773,27767072,27767390,27767770,27768280,27768606,27769090,27769528,27769814,27770162,27770511,27770996,27771421,27771688,27772068,27772402,27772678,27773136,27773387,27773808,27774134,27774508,27775289,27777269,27779250,27781283,27782935,27784639,27786288,27787996,27789679,27791359,27793056,27794762,27796470,27798157,27799858,27801561,27803254,27804950,27806633,27808681,27810645,27812322,27814011,27815772,27817512,27819247,27821026,27822833,27824631,27826361,27828104,27829814,27831489,27832144,27832922,27834201,27835732,27836505,27837223,27838251,27839822,27841676,27843475,27845040,27846651,27848143,27849623,27851126,27852619,27854125,27855617,27856367,27856855,27857417,27858028,27858520,27858966,27859510,27859945,27860310,27860733,27861193,27861632,27861793,27862097,27862442,27862939,27863327,27863623,27864021,27864432,27864827,27865094,27865718,27867648,27869608,27871301,27873015,27874743,27876420,27878130,27879802,27881467,27883155,27884851,27886567,27888587,27890425,27892201,27894015,27895756,27897510,27899215,27900984,27902814,27904416,27905198,27905968,27907593,27909247,27910738,27912112,27913696,27915348,27916816,27918299,27919644,27921152,27922635,27924104,27925617,27927078,27928553,27930023,27931504,27933018,27934529,27936016,27937511,27938991,27940311,27940915,27941303,27941884,27942483,27942980,27943513,27943956,27944450,27944978,27945469,27945959,27946638,27947190,27947792,27948031,27948401,27948810,27949118,27949540,27949964,27950545,27950927,27951409,27951782,27952001,27952224,27952794,27953390,27954056,27954614,27955220,27955779,27956172,27956777,27957160,27957594,27958188,27958572,27959227,27959848,27960255,27960690,27961260,27961558,27962195,27964051,27966026,27968055,27970077,27971767,27973498,27975198,27976894,27978587,27980272,27981948,27983612,27985319,27987048,27988711,27990391,27992059,27993773,27995499,27997220,27998942,28000675,28002399,28004103,28006065,28008113,28010066,28011796,28013502,28015230,28016950,28018671,28020336,28022033,28023718,28025379,28027109,28028896,28030674,28032420,28034179,28035951,28037224,28038107,28038902,28039874,28041414,28043065,28044408,28045923,28047363,28048969,28050424,28052202,28054043,28055817,28057430,28058874,28060303,28061787,28063283,28064775,28066237,28067732,28069214,28070695,28072165,28073641,28075124,28076619,28078099,28079569,28081063,28081550,28082073,28082706,28083222,28083732,28084122,28084670,28085264,28085815,28086186,28086587,28087103,28087468,28087860,28088142,28088544,28089034,28089623,28090150,28090596,28091123,28091634,28092085,28092536,28092785,28092985,28093193,28093643,28094094,28094458,28094674,28094739,28094932,28095272,28095568,28095803,28096151,28096684,28097102,28097488,28097961,28098185,28098511,28098843,28099073,28100715,28102689,28104597,28106614,28108388,28110091,28111776,28113448,28115134,28116806,28118498,28120204,28121894,28123558,28125221,28126885,28128591,28130269,28131939,28133623,28135288,28136959,28138653,28140336,28142234,28144282,28146272,28147988,28149694,28151360,28153144,28154888,28156615,28158343,28160019,28161701,28163402,28165003,28166764,28168403,28170103,28171880,28173294,28173952,28174745,28175210,28176120,28176994,28177651,28178472,28179328,28180186,28181009,28181513,28182622,28183908,28185676,28187391,28189000,28190658,28192309,28193816,28195284,28196779,28198289,28199797,28201293,28202773,28204218,28205698,28207190,28208695,28210173,28211700,28213176,28214693,28216187,28217686,28219129,28220596,28222092,28223624,28225132,28225842,28226362,28226978,28227342,28227747,28228245,28228738,28229355,28229898,28230314,28230706,28231153,28231705,28232214,28232295,28232829,28233420,28233955,28234424,28234860,28235269,28235594,28235780,28235953,28236409,28236989,28237529,28238030,28238601,28239111,28239594,28240002,28240342,28240737,28241238,28241749,28242306,28242803,28243070,28243408,28243944,28244244,28244568,28244759,28244861,28245054,28245617,28246156,28246595,28247106,28247493,28247845,28248321,28248741,28249167,28249531,28249847,28250029,28250341,28250740,28251143,28251528,28251996,28252480,28252907,28253197,28253654,28254052,28254525,28254932,28256122,28258134,28260184,28262156,28264153,28266194,28268109,28269816,28271509,28273174,28274842,28276526,28278243,28279887,28281571,28283286,28284972,28286684,28288387,28290072,28291754,28293443,28295123,28296800,28298508,28300214,28301914,28303600,28305269,28306946,28308615,28310331,28312027,28313696,28315387,28317093,28318800,28320521,28322520,28324568,28326616,28328646,28330290,28332010,28333585,28335242,28337009,28338544,28340327,28342072,28343860,28345625,28347348,28349043,28350801,28352500,28354224,28355980,28357676,28359394,28361112,28362823,28364691,28366309,28368034,28369817,28371648,28372786,28373444,28373999,28374625,28375222,28375871,28376615,28377357,28378085,28378528,28378753,28379225,28379972,28380689,28381107,28381609,28382004,28382335,28382805,28383251,28383601,28383835,28384125,28385151,28386439,28386880,28388517,28390198,28391954,28393764,28395518,28397283,28398855,28400255,28401741,28403230,28404760,28406264,28407496,28407993,28408242,28408479,28408749,28409183,28409506,28409664,28409903,28410150,28410343,28410829,28411272,28411616,28411997,28412459,28412974,28414430,28416410,28418072,28419750,28421442,28423153,28424822,28426492,28428166,28430011,28431877,28433650,28435387,28437167,28438863,28440471,28441537,28442368,28443488,28444757,28446402,28448088,28449726,28451241,28452752,28454258,28455754,28457228,28458723,28460209,28461702,28463191,28464663,28466142,28467631,28469130,28470626,28472115,28473603,28475079,28476585,28477396,28477999,28478620,28479229,28479773,28480275,28480805,28481360,28481887,28482406,28482951,28483532,28483985,28484603,28485184,28485701,28486320,28486739,28487206,28487779,28488364,28488889,28489419,28490004,28490574,28490892,28491388,28491964,28492514,28492845,28493195,28493704,28494197,28494682,28495191,28495614,28496057,28496497,28497038,28497465,28497885,28498516,28498874,28499464,28500067,28500676,28501313,28501730,28502060,28502708,28503197,28503651,28504087,28504710,28505077,28505700,28506286,28506866,28507451,28508039,28509355,28511410,28513433,28515478,28517510,28519377,28521092,28522801,28524515,28526221,28527907,28529615,28531332,28533044,28534746,28536426,28538106,28539788,28541475,28543187,28544869,28546587,28548274,28549979,28551650,28553312,28554987,28556650,28558371,28560087,28561808,28563581,28565629,28567677,28569543,28571308,28573073,28574818,28576557,28578185,28579907,28581562,28583329,28585123,28586921,28588756,28590579,28592278,28593925,28595668,28597472,28599280,28600774,28601480,28602243,28603105,28603805,28604662,28606310,28607973,28609272,28610615,28612324,28614005,28615519,28616844,28617921,28619627,28621466,28623321,28625065,28626897,28628514,28630085,28631595,28633105,28634589,28636074,28637550,28639029,28640506,28641987,28643455,28644939,28646442,28647916,28649404,28650885,28652373,28653875,28655394,28656879,28658374,28659868,28661367,28662837,28663367,28663498,28663775,28663911,28664411,28664982,28665462,28665904,28666367,28666848,28667455,28668104,28668318,28668679,28669153,28669515,28669965,28670266,28670816,28671381,28671950,28672276,28672645,28672812,28673180,28673558,28673739,28674270,28674635,28675241,28675804,28676249,28676795,28677270,28677818,28678132,28678431,28678981,28679428,28679880,28680469,28681052,28681577,28682103,28682342,28682561,28683010,28683350,28683814,28684301,28684751,28685282,28685883,28686401,28687068,28687635,28688121,28688627,28689129,28689429,28689874,28690360,28690579,28690700,28691130,28691495,28691979,28692318,28692614,28694123,28696144,28698146,28700174,28702213,28704232,28705891,28707585,28709276,28710964,28712616,28714308,28715971,28717622,28719287,28720982,28722669,28724340,28726025,28727720,28729434,28731113,28732833,28734498,28736182,28737881,28739578,28741278,28742974,28744687,28746390,28748076,28749769,28751457,28753113,28754846,28756894,28758942,28760990,28762769,28764511,28766270,28768004,28769753,28771470,28773074,28774802,28776528,28778184,28779876,28781683,28783449,28785248,28786951,28788715,28790453,28792119,28793879,28795585,28797250,28798843,28800558,28801661,28802520,28803236,28803996,28804754,28805510,28806244,28806929,28807470,28808197,28808938,28809929,28810934,28811975,28812820,28813541,28814436,28815351,28816533,28817527,28818431,28819449,28820430,28821380,28822128,28823120,28823998,28824600,28825168,28825918,28825988,28826546,28827756,28829187,28830938,28832783,28834603,28836434,28838229,28839828,28841333,28842878,28844376,28845869,28847356,28848847,28850350,28851855,28853338,28854834,28856357,28857394,28857807,28858224,28858435,28858755,28859269,28859876,28860225,28860723,28861104,28861624,28862084,28862503,28862793,28863288,28863636,28863990,28864528,28864920,28865265,28865568,28866096,28866510,28866824,28867216,28867610,28867807,28868192,28868365,28868656,28869021,28869524,28869891,28870111,28870367,28870574,28872118,28874092,28876052,28877919,28879621,28881300,28882993,28884674,28886308,28888006,28889671,28891355,28893008,28894672,28896373,28898075,28899779,28901474,28903156,28905189,28907237,28908946,28910689,28912441,28914214,28915856,28917635,28919317,28920947,28922612,28924383,28926113,28927864,28929524,28930745,28931318,28931999,28932754,28933927,28935087,28936016,28937094,28938817,28940713,28942605,28944256,28945759,28947291,28948773,28950275,28951772,28953263,28954751,28956262,28957755,28959244,28960745,28962254,28963750,28965262,28966790,28968286,28969769,28971246,28972742,28974244,28975753,28977232,28978715,28980220,28981710,28983187,28984702,28986223,28987738,28989199,28990722,28992222,28993711,28995174,28995854,28996372,28996946,28997456,28997919,28998447,28998998,28999622,29000246,29000833,29001461,29001932,29002356,29002828,29003314,29003777,29004230,29004772,29005343,29005954,29006550,29007148,29007695,29008277,29008786,29009213,29009703,29010283,29010909,29011461,29011748,29012270,29012698,29013250,29013713,29014208,29014704,29015210,29015701,29016258,29016675,29017154,29017735,29018127,29018458,29018778,29019110,29019572,29019945,29020274,29020560,29021080,29021489,29021847,29022362,29022786,29023384,29023923,29024432,29024717,29025262,29025878,29026505,29027101,29027642,29028217,29028571,29029140,29029634,29030165,29030648,29031038,29031541,29032058,29032377,29032886,29033390,29033910,29034288,29034670,29035135,29035638,29036128,29036476,29036978,29037472,29037833,29038233,29038470,29038987,29039557,29039870,29040311,29040718,29041066,29041429,29042009,29042373,29042775,29043244,29043536,29043712,29044029,29044467,29044832,29045149,29045495,29045884,29046116,29046509,29046828,29048040,29050045,29052083,29054092,29056063,29058071,29060097,29062080,29064120,29066170,29067940,29069619,29071304,29072984,29074665,29076348,29078029,29079731,29081451,29083150,29084853,29086594,29088313,29090040,29091749,29093483,29095202,29096952,29098693,29100414,29102123,29103819,29105520,29107220,29108898,29110587,29112255,29113936,29115635,29117320,29119033,29120741,29122382,29124052,29125741,29127432,29129111,29130835,29132544,29134290,29136043,29137780,29139515,29141175,29142856,29144570,29146266,29147925,29149579,29151264,29153124,29155172,29157220,29159268,29161316,29163364,29165053,29166786,29168466,29170157,29171736,29173409,29175179,29176888,29178662,29180412,29182167,29183923,29185674,29187361,29189067,29190761,29192469,29194171,29195902,29197523,29199203,29200794,29202437,29204214,29205953,29207620,29209357,29210959,29212623,29214235,29215941,29217715,29219464,29221136,29222972,29224566,29226100,29227739,29228828,29229593,29230345,29231136,29231992,29232626,29233339,29234119,29234755,29235565,29236478,29237410,29238358,29239366,29239904,29240430,29241037,29241718,29242609,29243438,29244015,29244806,29245419,29246083,29246920,29247533,29248118,29248679,29249192,29249380,29250194,29251062,29251858,29252829,29253864,29254977,29255745,29256802,29257676,29258450,29259174,29259715,29260946,29262375,29264087,29265935,29267758,29269613,29271473,29273274,29275089,29276997,29278674,29280330,29281925,29283416,29284912,29286414,29287898,29289403,29290886,29292368,29293848,29295328,29296659,29297142,29297633,29298144,29298596,29299094,29299538,29300029,29300432,29300831,29301175,29301461,29301849,29301972,29302030,29302434,29303004,29303608,29304165,29304746,29305276,29305894,29306257,29306469,29306523,29306815,29307253,29307483,29307855,29308188,29308403,29308466,29308761,29310595,29312648,29314698,29316413,29318080,29319775,29321467,29323163,29324888,29326608,29328332,29330010,29331655,29333369,29335073,29336783,29338522,29340516,29342564,29344382,29346222,29348037,29349833,29351628,29353352,29355155,29356923,29358643,29360445,29362276,29364134,29365146,29365910,29366623,29367530,29368464,29369061,29370423,29371222,29372473,29374021,29375664,29377306,29378796,29380357,29381887,29383400,29384915,29386415,29387910,29389405,29390892,29392388,29393875,29395354,29396849,29398328,29399825,29401300,29402245,29402645,29402858,29403176,29403560,29403981,29404394,29404803,29405173,29405399,29405609,29406202,29406675,29407225,29407822,29408299,29408779,29409239,29409504,29409805,29410272,29410646,29410924,29411409,29411915,29412318,29412556,29412971,29413373,29413756,29414163,29414423,29414847,29415266,29415724,29416183,29416649,29416938,29417569,29419570,29421563,29423616,29425389,29427040,29428692,29430388,29432097,29433801,29435479,29437188,29438913,29440612,29442314,29444007,29445665,29447316,29448974,29450634,29452290,29454336,29456384,29457986,29459621,29461398,29463299,29465179,29466992,29468817,29470620,29472470,29474308,29476013,29477683,29479324,29480354,29481018,29481679,29482394,29483010,29483242,29483619,29484044,29484424,29484774,29485166,29485640,29486126,29487684,29488858,29489401,29490003,29491519,29493029,29494530,29496042,29497729,29499421,29501039,29502650,29504188,29505694,29507199,29508723,29510241,29511778,29513307,29514825,29516318,29517839,29519353,29520861,29522366,29523878,29525385,29526900,29528427,29529938,29531449,29532943,29534453,29535979,29537493,29539000,29540502,29542037,29543535,29545046,29546574,29548110,29549643,29551176,29552691,29554220,29555741,29557265,29558770,29560280,29561778,29563267,29564771,29566265,29567744,29569223,29570717,29572207,29573709,29575197,29575817,29576368,29576782,29577299,29577796,29578240,29578850,29579299,29579799,29580487,29581164,29581836,29582540,29583233,29583923,29584636,29585318,29585968,29586621,29587371,29588095,29588838,29589403,29589943,29590570,29590889,29591511,29592034,29592659,29593279,29594017,29594647,29595288,29595906,29596555,29597138,29597776,29598335,29598948,29599582,29600078,29600645,29601290,29601866,29602437,29603028,29603586,29604064,29604606,29605184,29605750,29606376,29607015,29607526,29608124,29608768,29609340,29609861,29610434,29610963,29611586,29612110,29612556,29613061,29613630,29614129,29614661,29615320,29615865,29616504,29617073,29617670,29618286,29618796,29619398,29619954,29620609,29621240,29621745,29622252,29622846,29623386,29623844,29624373,29624927,29625502,29626132,29626621,29627025,29627606,29628200,29628821,29629480,29630054,29630785,29631524,29632231,29632883,29633548,29634196,29634878,29635576,29636202,29636774,29637392,29638075,29638700,29639347,29639903,29640425,29640941,29641574,29642159,29642763,29643414,29644000,29644542,29645147,29645757,29646371,29646960,29647503,29648090,29648613,29648907,29649482,29650024,29650607,29651113,29651666,29652220,29652697,29653297,29653783,29654263,29654846,29655440,29655953,29656343,29656738,29657329,29657903,29658404,29658946,29659367,29659738,29660234,29660769,29661327,29661842,29662348,29662715,29663890,29665925,29667979,29670025,29672071,29674112,29676160,29678193,29680250,29682306,29684362,29686376,29688428,29690435,29692153,29693882,29695562,29697263,29698973,29700700,29702405,29704084,29705791,29707489,29709191,29710888,29712589,29714285,29715977,29717680,29719410,29721143,29722851,29724576,29726306,29728032,29729777,29731513,29733267,29735024,29736782,29738538,29740276,29741978,29743669,29745393,29747104,29748791,29750474,29752141,29753840,29755570,29757268,29758943,29760652,29762356,29764050,29765761,29767482,29769237,29770979,29772729,29774475,29776222,29777934,29779653,29781372,29783105,29784830,29786570,29788299,29790060,29791801,29793538,29795279,29797039,29798784,29800531,29802257,29804015,29806045,29808093,29810141,29812189,29814237,29816285,29818333,29820327,29822032,29823683,29825394,29827137,29828844,29830519,29832220,29833985,29835685,29837461,29839254,29841016,29842864,29844647,29846472,29848292,29850066,29851878,29853654,29855419,29857186,29858999,29860597,29862179,29863874,29865605,29867285,29868917,29870516,29872304,29874005,29875729,29877444,29879118,29880841,29882669,29884495,29886311,29888136,29889967,29891778,29893475,29895183,29896769,29898422,29900212,29902017,29903815,29905621,29907455,29909312,29911131,29912905,29914087,29914993,29915878,29916816,29917765,29918670,29919455,29920237,29921096,29922023,29923175,29924457,29925800,29927063,29928214,29929471,29930705,29931954,29933293,29934622,29935818,29936918,29938168,29938924,29939651,29940426,29941332,29942296,29943268,29944311,29945586,29946663,29947144,29947717,29949266,29950629,29952400,29954354,29956049,29957859,29959733,29961643,29963471,29965312,29967130,29968924,29970811,29972682,29974214,29975721,29977257,29978764,29980260,29981743,29983246,29984751,29986248,29987701,29989265,29989439,29989528,29989808,29989973,29990070,29990298,29990553,29991008,29991222,29991551,29991859,29992184,29992304,29992703,29992981,29993153,29993303,29993429,29993935,29994338,29994658,29994808,29995344,29995758,29996158,29996597,29996848,29996998,29998069,30000101,30002137,30003916,30005615,30007317,30009013,30010736,30012435,30014111,30015807,30017534,30019270,30020969,30022630,30024315,30026129,30028177,30030044,30031843,30033548,30035166,30036996,30038688,30040499,30042296,30044068,30045953,30047693,30049458,30050205,30050894,30052718,30054140,30055785,30057369,30059019,30060547,30062010,30063161,30064668,30066170,30066722,30067184,30067656,30068188,30068753,30069222,30069662,30071254,30072987,30074683,30076331,30078280,30080061,30081780,30082489,30083208,30084605,30086150,30087634,30089140,30090635,30091790,30092024,30092449,30092879,30093375,30093894,30093999,30094226,30094794,30095101,30095453,30095738,30096241,30096789,30098727,30100476,30102144,30103829,30105508,30107186,30108836,30110799,30112401,30114135,30115911,30117592,30118961,30119723,30121362,30123143,30124818,30126324,30127792,30129292,30130797,30132276,30133366,30133854,30134304,30134660,30135060,30135547,30135868,30136164,30136642,30137165,30137612,30137991,30138484,30138959,30139413,30139942,30140798,30142825,30144514,30146178,30147845,30149536,30151210,30152884,30154573,30156539,30158200,30159913,30161628,30163392,30164817,30165382,30166327,30167576,30168423,30169645,30171278,30173164,30175219,30177276,30179316,30181367,30183262,30184875,30186477,30187942,30189087,30189906,30190704,30191460,30192326,30193243,30194235,30196262,30198259,30200246,30202134,30204001,30204637,30205610,30206674,30208138,30209272,30210752,30212139,30213480,30214618,30215441,30216196,30217198,30218291,30219528,30220566,30221608,30222368,30223354,30224237,30225256,30226316,30227334,30228421,30229555,30230640,30231562,30232290,30233004,30233811,30234802,30235568,30236424,30237195,30237963,30239136,30241184,30242613,30243695,30244756,30245717,30246670,30247650,30248756,30249787,30250789,30251666,30252878,30254024,30254844,30255918,30256926,30257937,30258948,30259640,30260471,30261229,30262072,30263137,30264562,30266047,30267500,30269039,30271012,30273060,30275108,30277006,30278419,30280447,30282503,30284551,30286599,30288594,30290407,30292464,30294111,30296037,30298090,30300138,30302186,30304234,30306282,30308330,30310378,30312426,30314450,30316491,30318521,30320558,30322600,30324610,30326564,30328385,30330080,30332031,30334079,30336127,30338175,30340223,30342271,30344319,30346367,30348415,30350463,30352511,30354559,30356567,30358509,30360345,30362145,30363534,30365268,30367191,30369093,30370856,30372791,30374839,30376891,30378939,30380987,30383035,30385091,30387139,30389187,30391235,30393283,30395331,30397379,30399427,30401475,30403484,30405012,30406045,30408078,30410126,30412174,30414222,30416270,30418318,30420366,30422414,30424462,30426510,30428558,30430606,30432654,30434702,30436750,30438798,30440846,30442903,30444951,30446980,30448608,30450581,30452629,30454677,30456725,30458597,30460185,30461555,30462784,30463800,30464530,30465001,30466928,30468976,30471024,30473072,30475128,30477185,30479240,30481288,30483344,30485392,30487271,30488703,30489447,30491504,30493560,30495583,30497534,30499383,30501088,30502614,30503804,30504696,30505281,30505569,30505828,30507747,30509803,30511851,30513900,30515951,30517999,30520047,30522102,30524150,30526198,30528255,30530303,30532345,30534331,30536150,30537771,30539278,30540596,30542628,30544685,30546733,30548781,30550829,30552877,30554925,30556982,30559030,30561085,30563142,30565186,30567216,30569138,30570849,30572310,30573335,30574498,30576320,30578185,30580208,30582256,30584304,30586352,30588301,30589990,30591283,30592206,30594254,30596301,30598349,30600277,30602244,30604292,30606346,30608161,30608764,30608830,30609040,30609073,30609795,30611843,30613891,30615939,30617996,30620044,30622100,30624154,30626193,30628097,30630146,30632194,30634242,30636290,30638298,30640355,30642403,30644451,30646499,30648547,30650595,30652643,30654691,30656739,30658684,30660199,30662189,30664184,30665743,30667358,30669415,30671415,30673007,30674281,30675823,30677698,30679736,30681792,30683840,30685888,30687936,30689973,30691827,30693268,30693656,30694664,30696721,30698769,30700817,30702865,30704913,30706970,30709018,30711074,30713122,30715162,30717171,30719017,30720862,30722835,30724402,30726393,30728441,30730489,30732544,30734592,30736640,30738688,30740736,30742776,30744712,30746760,30748815,30750863,30752911,30754959,30757007,30759055,30761054,30762720,30764715,30766676,30768567,30769609,30771663,30773711,30775728,30777603,30779296,30781344,30783392,30785440,30787497,30789545,30791593,30793641,30795689,30797745,30799573,30800930,30802542,30804476,30806473,30808509,30810546,30812596,30814631,30816655,30818705,30820760,30822806,30824845,30826873,30828924,30830918,30832894,30834888,30836940,30838976,30841029,30843070,30845108,30847121,30849160,30851202,30853240,30855284,30857320,30859343,30861263,30863069,30864682,30866081,30867376,30868544,30869729,30870906,30871980,30872996,30874113,30875122,30876163,30876996,30877939,30878804,30879586,30880276,30880867,30881341,30881505,30881691,30881835,30881896,30881958,30883817,30885841,30887893,30889941,30891997,30893919,30895658,30897297,30898529,30899370,30901418,30903466,30905514,30907562,30909465,30911513,30913561,30915609,30917571,30919619,30921667,30923715,30925745,30927788,30929844,30931900,30933955,30936012,30938041,30940089,30942137,30944179,30946205,30948252,30950305,30952268,30954154,30956003,30957707,30959458,30961119,30962998,30965052,30967109,30969165,30971221,30973269,30975317,30977176,30979104,30981159,30983207,30985255,30987312,30989368,30991420,30993461,30995380,30997428,30999467,31001435,31003002,31004875,31006930,31008978,31010541,31012345,31014393,31016441,31018489,31020537,31022585,31024633,31026683,31028740,31030766,31032697,31034425,31035927,31037353,31038654,31039881,31041357,31043414,31045462,31047510,31049565,31051609,31053510,31055233,31056347,31056610,31057628,31059039,31060771,31062654,31064607,31066510,31068440,31070467,31072401,31074194,31075738,31077074,31078194,31078804,31079176,31080747,31082753,31084798,31086297,31087254,31088993,31091041,31093089,31095137,31097185,31099233,31101281,31103329,31105367,31107343,31109384,31111420,31113251,31114784,31115800,31117274,31119331,31121191,31122618,31124271,31126319,31128367,31130417,31132465,31134522,31136571,31138623,31140676,31142613,31144490,31146131,31148166,31149799,31150949,31152156,31154212,31156260,31158308,31160356,31162404,31164452,31166507,31168373,31170244,31172292,31174340,31176388,31178436,31180484,31182532,31184475,31185548,31186994,31188863,31190893,31192949,31195006,31197054,31198377,31199994,31201868,31203880,31205936,31207984,31210032,31212082,31214097,31215951,31217286,31218276,31219091,31219597,31219992,31220221,31220336,31222171,31224219,31226267,31228315,31230363,31232411,31234459,31236507,31238555,31240603,31242651,31244699,31246747,31248795,31250843,31252891,31254939,31256987,31258287,31260335,31262383,31264431,31266479,31268527,31270575,31272623,31274671,31275751,31276021,31277332,31279041,31280992,31283043,31285100,31287148,31289196,31291244,31293292,31295340,31297388,31299436,31301486,31303364,31304992,31306470,31307839,31309023,31310095,31311081,31311993,31312696,31313591,31314597,31315475,31316316,31317935,31319988,31322036,31324084,31326132,31328180,31330228,31332276,31334324,31336372,31338420,31340468,31342516,31344564,31346489,31347748,31348490,31349156,31350669,31352717,31354765,31356822,31358871,31360333,31362100,31364151,31365917,31367193,31368172,31368741,31369515,31370587,31372635,31374534,31375718,31376242,31378072,31379986,31381991,31384038,31386095,31388143,31390193,31392228,31394238,31395764,31397549,31399382,31401318,31403294,31405349,31407406,31409454,31411502,31413559,31415607,31417655,31419698,31421697,31423449,31424949,31425801,31426554,31428136,31430189,31432237,31434285,31436333,31438381,31440429,31442477,31444534,31446590,31448595,31450329,31451774,31452848,31453824,31454012,31454468,31456516,31458552,31460539,31462457,31464250,31465944,31467706,31469754,31471779,31473562,31475173,31476429,31478192,31479947,31481978,31484026,31485945,31487993,31489026,31491074,31492736,31494598,31496505,31498553,31500218,31502125,31503507,31504955,31506061,31507707,31509696,31511724,31513725,31515737,31517743,31519746,31521658,31523706,31525754,31527779,31529487,31530459,31531813,31533861,31535909,31537957,31540005,31542053,31543201,31544349,31546405,31548453,31550501,31552549,31553991,31554353,31556239,31558287,31560326,31562374,31564431,31566479,31568527,31570479,31572527,31574574,31576058,31578110,31580165,31581937,31583994,31586031,31587673,31589695,31591751,31593198,31594534,31596495,31597952,31598727,31600780,31602828,31604884,31606941,31608194,31608316,31608468,31609874,31611925,31613981,31616029,31618085,31620133,31622181,31624236,31626164,31628212,31630260,31632162,31634210,31636266,31638247,31640295,31642340,31644388,31646445,31648500,31650473,31652443,31654253,31656065,31657742,31659383,31661075,31662287,31663951,31665664,31667200,31668475,31669814,31671864,31673775,31675606,31677530,31679578,31681626,31683674,31685712,31687130,31688169,31688919,31690382,31692250,31693598,31695345,31697167,31699215,31701263,31703311,31705359,31707407,31709455,31711503,31713559,31715613,31717644,31719586,31721364,31722938,31724321,31725487,31726395,31727779,31729827,31731875,31733923,31735971,31738028,31739541,31740264,31742285,31744334,31746390,31748374,31750271,31752301,31754349,31756397,31758453,31760501,31762549,31764597,31766644,31768588,31770364,31771786,31772479,31773539,31775587,31777635,31779683,31781731,31783042,31783222,31784304,31786356,31788404,31790452,31792500,31794548,31796596,31798644,31800692,31802591,31804112,31804336,31804916,31806324,31808299,31810356,31812404,31814452,31816500,31818548,31820605,31822653,31824708,31826756,31828812,31830821,31832709,31834490,31836280,31837986,31839535,31840924,31842183,31843421,31844646,31845680,31846404,31846962,31847542,31848040,31848488,31848970,31849370,31849775,31850208,31850681,31851106,31851670,31852149,31852365,31852763,31853688,31854825,31856013,31857251,31858375,31859422,31860402,31861246,31861931,31862447,31862714,31862833,31863012,31864140,31865769,31867635,31869689,31871746,31873794,31875800,31877760,31879735,31881579,31883603,31885354,31887375,31889354,31890980,31892598,31894646,31896695,31898735,31900753,31902800,31904834,31906868,31908919,31910923,31912894,31914913,31916925,31918813,31920819,31922870,31924918,31926955,31928645,31930502,31932503,31934257,31936153,31938202,31939934,31941212,31942872,31944924,31946977,31948964,31950878,31952790,31954708,31956612,31958508,31960541,31962589,31964645,31966695,31968543,31970591,31972615,31974201,31975738,31977329,31978719,31979821,31980244,31980838,31981209,31981720,31982398,31983141,31984265,31985868,31987247,31988673,31990010,31991292,31992719,31994459,31996166,31997971,31999761,32001679,32003699,32005721,32007767,32009815,32011867,32013924,32015979,32018036,32020084,32022141,32024189,32026170,32028160,32030155,32032129,32034035,32035795,32037539,32039259,32040956,32042629,32044168,32045587,32047034,32048431,32049850,32051175,32052418,32053608,32054831,32056046,32057160,32058235,32059183,32060110,32061052,32062603,32064014,32065497,32067042,32068458,32069903,32071473,32073000,32074493,32076055,32077512,32079075,32080684,32082403,32083959,32085593,32087115,32088618,32090223,32091919,32093673,32095440,32097215,32098974,32100778,32102626,32104560,32106429,32108407,32110346,32112317,32114363,32116413,32118461,32120509,32122563,32124620,32126667,32128676,32130568,32132328,32133921,32135017,32136404,32138203,32140192,32142245,32144296,32146344,32147710,32147892,32148963,32151011,32153059,32155098,32156502,32158559,32159587,32161644,32163700,32165297,32166822,32168870,32170918,32172966,32175021,32176554,32178602,32180564,32182140,32183454,32185502,32187558,32189606,32191662,32193719,32195775,32197768,32199815,32201863,32203911,32205959,32208007,32210055,32212103,32214151,32216199,32218247,32220295,32222349,32224347,32226402,32228450,32230498,32232546,32234594,32236598,32238563,32240574,32242624,32244672,32246726,32248772,32250829,32252877,32254925,32256973,32259021,32261069,32262834,32264134,32266182,32268231,32270288,32272343,32274400,32276443,32278491,32280400,32282313,32284138,32285684,32287293,32288735,32290462,32292301,32293883,32295328,32296716,32297854,32298803,32299181,32300739,32302787,32304835,32306883,32308938,32310927,32312570,32313661,32313874,32314786,32316834,32318890,32320886,32322532,32323982,32325721,32327571,32328604,32328805,32329543,32330618,32331001,32331391,32331795,32332134,32332534,32332918,32333301,32333625,32334405,32335311,32336130,32336832,32337365,32337949,32339114,32339918,32340570,32342038,32343446,32344866,32346222,32347414,32348864,32349512,32350146,32350956,32351342,32351652,32352069,32352535,32352949,32353895,32354791,32355135,32355478,32355931,32356395,32357177,32357692,32358240,32358885,32359264,32359568,32360241,32360987,32361697,32362400,32362997,32364126,32364930,32365527,32366513,32367312,32367876,32368842,32369382,32369967,32370608,32371432,32372381,32372922,32373205,32373466,32373743,32374013,32374317,32374813,32375081,32375337,32375569,32375971,32376658,32377317,32378106,32378713,32379119,32379300,32379769,32380349,32380920,32381343,32381743,32382232,32382726,32382992,32383518,32384306,32384573,32384828,32385312,32385638,32386520,32387477,32388170,32388293,32388492,32388773,32389054,32389785,32390149,32390507,32390810,32391274,32391475,32392181,32392538,32392734,32393784,32394625,32394813,32395116,32395520,32395895,32396221,32396488,32396768,32397109,32397849,32398538,32399057,32399492,32400205,32400646,32401163,32401599,32401955,32402727,32403203,32403534,32404049,32404754,32405692,32405950,32406162,32406452,32406895,32407716,32408079,32408677,32409221,32409621,32410214,32410794,32411168,32411783,32412016,32412445,32412903,32413412,32413968,32414300,32415034,32415590,32416093,32416273,32416917,32417670,32418326,32419116,32420312,32421390,32422494,32423557,32424632,32425793,32426182,32426521,32427665,32428721,32429782,32430601,32431094,32432404,32432842,32433309,32433655,32433811,32434205,32434418,32434622,32434758,32434997,32435245,32435715,32435850,32435985,32436118,32436380,32436880,32437525,32437882,32438539,32439078,32439535,32440401,32440987,32441472,32441744,32442043,32442641,32442939,32443254,32443584,32444319,32444716,32445300,32445619,32446052,32446349,32446617,32446923,32447607,32447788,32448099,32448334,32448538,32448891,32449084,32449530,32449815,32450188,32450365,32450590,32450802,32451009,32451504,32451846,32452383,32452816,32453514,32454571,32454947,32455379,32455907,32456354,32456992,32457628,32457962,32458526,32459542,32460300,32461168,32461864,32462326,32462707,32463061,32463476,32463892,32464166,32464565,32464874,32465101,32465364,32465534,32465688,32466330,32467057,32467992,32468783,32469285,32469991,32470415,32470832,32471317,32471556,32472075,32472842,32473060,32473437,32473678,32474220,32475098,32475887,32476698,32477241,32477663,32478306,32478564,32478963,32479158,32479481,32479723,32480189,32480604,32481246,32481725,32482366,32482868,32483492,32484215,32484753,32484818,32485115,32485579,32486214,32487001,32487438,32487861,32488123,32488553,32488912,32489286,32489620,32490767,32492064,32493266,32494672,32495628,32496999,32498990,32500943,32501477,32501599,32501724,32502141,32502718,32502872,32503073,32503192,32503658,32503837,32504243,32504850,32505224,32506289,32507143,32507815,32508032,32508404,32508779,32508992,32509376,32509623,32509808,32510024,32510251,32510744,32511144,32511776,32512277,32512762,32513433,32514102,32515011,32515184,32515760,32515968,32516322,32516721,32517177,32517543,32517815,32518081,32518577,32518882,32519194,32519425,32519692,32519882,32520197,32520706,32520953,32521339,32521559,32521985,32522405,32522793,32522920,32523320,32523921,32524485,32525066,32525281,32525548,32526014,32526398,32526838,32527045,32527525,32528128,32528483,32529288,32529721,32530251,32530841,32531295,32531835,32532783,32532972,32533169,32533317,32533462,32533611,32533774,32534119,32534382,32534525,32534697,32534847,32535026,32535309,32535460,32535595,32535975,32536182,32536511,32537351,32537458,32537651,32537940,32538113,32538575,32538954,32539398,32539854,32540290,32540515,32540706,32540879,32541338,32541617,32542061,32542739,32542937,32543317,32543495,32543680,32543906,32544279,32544395,32544845,32545401,32545561,32545790,32546104,32546279,32546596,32546726,32546857,32547483,32547996,32548503,32548858,32549284,32549687,32549905,32550163,32550329,32550908,32551226,32551428,32552267,32552558,32552946,32553358,32553758,32554159,32554754,32555566,32556221,32557180,32558065,32558788,32560260,32561368,32562494,32563795,32565172,32566606,32568074,32569519,32571014,32572551,32574065,32575615,32577114,32578615,32580107,32581610,32583208,32584695,32586246,32587718,32589236,32590764,32592204,32593535,32594855,32596057,32597306,32598686,32600032,32601274,32602453,32603563,32604630,32605961,32607376,32609065,32610931,32612642,32614401,32616154,32617812,32619537,32621265,32622983,32624687,32626424,32628123,32629840,32631599,32633357,32635124,32636814,32638523,32640118,32641811,32643470,32645149,32646859,32648555,32650292,32651985,32653687,32655324,32656967,32658634,32660302,32661895,32663479,32665134,32666977,32668588,32670304,32671997,32673580,32675251,32676913,32678644,32680361,32682167,32684007,32685816,32687628,32689459,32691269,32692994,32694753,32696417,32698177,32700002,32701859,32703639,32705290,32707013,32708870,32710584,32712336,32714111,32715871,32717584,32719261,32720883,32722523,32724130,32725915,32727544,32729182,32730765,32732363,32734031,32735681,32737324,32739043,32740739,32742457,32744113,32745840,32747524,32749267,32750972,32752589,32754341,32756063,32757760,32759485,32761168,32762805,32764479,32766165,32767800,32769455,32771039,32772641,32774180,32775712,32777245,32778710,32780471,32781577,32782669,32783511,32784267,32785023,32786333,32787729,32789206,32790549,32791697,32792812,32794000,32795146,32796472,32797878,32799133,32800417,32801710,32802979,32804194,32805161,32806062,32806779,32807652,32808566,32809327,32809943,32810749,32811807,32812912,32813955,32815179,32816634,32818233,32819673,32821136,32822517,32824083,32825503,32826921,32828476,32829942,32831368,32832703,32834002,32835263,32836083,32836322,32836534,32836764,32836990,32837205,32838066,32839586,32841158,32842467,32843927,32845585,32847000,32848082,32849484,32850635,32851363,32852710,32854122,32855107,32856672,32858352,32859616,32861267,32862702,32864308,32865832,32867260,32868632,32870250,32871684,32873023,32874648,32876318,32877766,32879247,32880486,32882087,32883445,32885027,32886282,32887928,32889591,32891225,32892926,32894413,32895909,32897653,32898869,32900470,32901710,32903378,32904760,32906073,32907584,32909242,32910928,32912430,32913736,32915343,32916768,32918309,32919889,32921414,32923009,32924487,32925720,32927400,32928947,32930541,32932155,32933543,32934957,32936544,32938248,32939501,32940983,32942022,32943571,32945036,32946575,32947732,32949239,32950692,32952294,32953927,32955505,32956771,32958335,32959598,32961059,32962123,32963612,32964987,32966688,32967784,32969331,32970849,32972214,32973596,32974990,32976564,32978152,32979726,32981382,32982921,32984379,32985725,32987400,32988969,32990646,32992002,32993844,32995142,32996998,32998362,32999937,33001163,33002951,33004599,33005955,33007635,33008994,33010767,33012092,33013508,33015305,33017084,33018277,33019879,33021615,33023352,33025038,33026581,33028281,33029934,33031517,33033033,33034757,33036478,33037855,33039429,33040671,33042297,33043760,33045422,33046891,33048599,33050210,33051948,33053362,33055026,33056455,33058314,33059734,33061539,33063102,33064972,33066862,33068756,33070682,33072728,33074729,33076773,33078806,33080832,33082843,33084878,33086899,33088926,33090951,33093003,33095054,33097091,33099126,33101127,33103147,33105148,33107169,33109183,33111230,33113283,33115334,33117374,33119417,33121468,33123485,33125509,33127522,33129570,33131609,33133638,33135680,33137736,33139774,33141786,33143814,33145663,33147672,33149697,33151732,33153774,33155805,33157832,33159853,33161895,33163915,33165914,33167901,33169882,33171860,33173876,33175863,33177893,33179922,33181948,33183999,33186035,33188029,33189998,33191993,33194005,33195996,33197993,33200037,33202049,33204072,33206126,33208161,33210154,33212109,33214122,33216129,33218112,33220124,33222164,33224211,33226268,33228302,33230324,33232291,33234282,33236304,33238333,33240363,33242419,33244468,33246518,33248564,33250620,33252655,33254703,33256731,33258769,33260771,33262822,33264813,33266848,33268889,33270812,33272796,33274755,33276751,33278725,33280740,33282692,33284656,33286645,33288647,33290608,33292565,33294577,33296565,33298540,33300455,33302433,33304395,33306380,33308364,33310364,33312306,33314295,33316301,33318268,33320203,33322205,33324179,33326185,33328137,33330105,33332115,33334089,33336079,33338033,33340004,33342016,33344026,33346017,33348020,33350022,33351993,33354002,33355961,33357978,33359877,33361875,33363842,33365827,33367825,33369802,33371775,33373725,33375710,33377693,33379693,33381659,33383666,33385675,33387666,33389650,33391670,33393671,33395691,33397683,33399656,33401649,33403615,33405580,33407596,33409594,33411564,33413495,33415511,33417529,33419497,33421468,33423502,33425537,33427554,33429528,33431555,33433566,33435509,33437564,33439563,33441587,33443606,33445641,33447646,33449670,33451692,33453700,33455700,33457674,33459644,33461646,33463686,33465673,33467645,33469506,33471476,33473526,33475580,33477610,33479555,33481512,33483421,33485326,33487099,33488979,33490862,33492803,33494590,33496509,33498331,33500303,33502301,33504267,33506131,33508049,33509979,33511836,33513694,33515549,33517538,33519476,33521439,33523362,33525313,33527192,33529115,33530994,33532882,33534872,33536825,33538750,33540720,33542506,33544524,33546325,33548226,33550051,33551961,33553920,33555892,33557783,33559813,33561768,33563683,33565527,33567388,33569289,33571174,33573133,33575080,33576990,33578917,33580917,33582869,33584883,33586591,33588562,33590284,33592284,33594244,33596185,33598132,33599981,33601956,33603895,33605859,33607683,33609694,33611650,33613660,33615430,33617134,33618979,33620718,33622601,33624468,33626344,33628173,33629977,33631882,33633711,33635672,33637602,33639519,33641449,33643365,33645223,33647182,33649088,33651011,33652901,33654820,33656687,33658636,33660551,33662525,33664432,33666361,33668249,33670148,33672051,33673899,33675788,33677567,33679486,33681422,33683215,33685138,33686712,33688474,33689869,33691581,33693398,33695161,33697011,33698969,33700898,33702876,33704867,33706851,33708860,33710763,33712738,33714744,33716683,33718656,33720634,33722472,33723878,33725294,33726681,33728124,33729585,33731068,33732513,33734051,33735578,33737023,33738544,33740227,33742010,33743670,33745269,33747168,33749168,33751168,33753080,33755103,33757067,33758895,33760844,33762748,33764749,33766741,33768681,33770638,33772569,33774528,33776351,33778229,33780201,33782212,33784226,33786141,33788150,33790053,33792027,33793897,33795778,33797758,33799717,33801735,33803631,33805665,33807588,33809522,33811407,33813263,33815277,33817187,33819210,33821094,33823075,33824918,33826830,33828724,33830582,33832557,33834512,33836526,33838423,33840403,33842345,33844221,33846117,33847989,33849986,33851993,33854007,33855949,33857940,33859869,33861718,33863647,33865576,33867525,33869488,33871387,33873351,33875280,33877200,33879156,33881087,33882988,33884725,33886452,33888122,33889778,33891448,33893139,33894881,33896614,33898302,33899956,33901660,33903396,33905113,33906846,33908554,33910198,33911878,33913597,33915281,33916996,33918713,33920436,33922085,33923697,33925351,33927075,33928825,33930593,33932298,33933921,33935507,33937161,33938911,33940657,33942308,33943935,33945553,33947215,33948887,33950646,33952389,33954130,33955798,33957436,33959082,33960845,33962639,33964411,33966048,33967666,33969297,33971060,33972927,33974776,33976553,33978281,33980050,33981829,33983671,33985565,33987436,33989226,33991004,33992831,33994606,33996397,33998120,33999822,34001496,34003195,34004940,34006624,34008187,34009928,34011656,34013375,34014988,34016831,34018484,34020124,34021883,34023613,34025118,34026825,34028581,34030260,34031921,34033684,34035458,34037227,34038880,34040666,34042463,34044246,34045909,34047647,34049410,34051123,34052862,34054590,34056324,34058321,34060232,34062214,34064222,34066224,34068182,34070090,34072023,34073960,34075961,34077946,34079925,34081931,34083915,34085890,34087887,34089870,34091858,34093828,34095813,34097783,34099782,34101782,34103776,34105760,34107725,34109721,34111688,34113639,34115613,34117629,34119629,34121621,34123584,34125565,34127522,34129510,34131478,34133455,34135426,34137397,34139368,34141343,34143311,34145273,34147253,34149208,34151188,34153149,34155121,34157067,34159049,34160993,34162953,34164915,34166872,34168833,34170798,34172784,34174760,34176705,34178661,34180604,34182560,34184511,34186470,34188422,34190383,34192339,34194305,34196257,34198222,34200177,34202137,34204094,34206056,34207954,34209867,34211777,34213681,34215585,34217516,34219406,34221321,34223223,34225108,34227049,34228949,34230852,34232766,34234685,34236576,34238489,34240362,34242253,34244187,34246027,34247911,34249862,34251703,34253572,34255524,34257366,34259220,34261176,34263024,34264852,34266809,34268657,34270467,34272437,34274275,34276096,34278067,34279900,34281735,34283704,34285520,34287370,34289258,34291067,34292880,34294765,34296555,34298389,34300284,34302050,34303895,34305788,34307528,34309402,34311301,34313061,34314944,34316830,34318600,34320490,34322346,34324127,34326022,34327853,34329701,34331609,34333451,34335300,34337211,34339021,34340912,34342784,34344620,34346528,34348380,34350217,34352131,34353952,34355830,34357726,34359549,34361452,34363313,34365151,34367056,34368904,34370815,34372680,34374538,34376450,34378322,34380184,34382101,34383974,34385827,34387740,34389622,34391476,34393381,34395261,34397110,34399019,34400895,34402748,34404661,34406537,34408382,34410290,34412175,34414034,34415950,34417853,34419689,34421607,34423511,34425357,34427280,34429164,34431010,34432943,34434800,34436657,34438585,34440446,34442315,34444235,34446098,34447970,34449876,34451735,34453590,34455513,34457361,34459195,34461141,34463055,34464965,34466880,34468790,34470709,34472626,34474548,34476470,34478398,34480311,34482224,34484149,34486063,34487989,34489896,34491818,34493740,34495713,34497710,34499698,34501681,34503658,34505664,34507656,34509643,34511619,34513598,34515604,34517510,34519470,34521375,34523270,34525158,34527085,34528982,34530914,34532769,34534663,34536561,34538443,34540407,34542365,34544325,34546292,34548260,34550209,34552193,34554156,34556095,34558082,34560008,34561991,34563924,34565898,34567833,34569800,34571698,34573670,34575498,34577474,34579322,34581259,34583144,34585036,34586918,34588833,34590777,34592619,34594603,34596436,34598398,34600252,34602171,34604074,34605913,34607775,34609585,34611497,34613289,34615217,34617029,34618913,34620759,34622611,34624495,34626310,34628241,34630029,34631929,34633799,34635637,34637503,34639518,34641564,34643591,34645610,34647633,34649628,34651662,34653679,34655695,34657735,34659765,34661802,34663838,34665872,34667892,34669905,34671747,34673755,34675762,34677799,34679843,34681899,34683928,34685982,34688009,34690027,34692063,34694073,34696117,34698153,34700203,34702259,34704292,34706322,34708366,34710394,34712354,34714253,34716261,34718260,34720282,34722335,34724367,34726381,34728386,34730383,34732377,34734372,34736345,34738337,34740355,34742410,34744426,34746446,34748462,34750481,34752457,34754463,34756454,34758416,34760390,34762402,34764444,34766457,34768477,34770495,34772495,34774470,34776474,34778472,34780441,34782418,34784448,34786485,34788494,34790542,34792586,34794613,34796648,34798654,34800669,34802676,34804625,34806653,34808690,34810737,34812784,34814837,34816884,34818928,34820969,34822990,34825017,34827052,34829091,34831143,34833161,34835202,34837180,34839182,34841185,34843196,34845197,34847158,34849150,34851146,34853092,34855097,34857076,34859027,34860967,34862953,34864945,34866957,34868920,34870921,34872931,34874860,34876787,34878757,34880690,34882462,34884374,34886383,34888393,34890340,34892345,34894338,34896328,34898282,34900254,34902245,34904205,34906120,34908020,34909918,34911875,34913835,34915775,34917675,34919624,34921618,34923573,34925509,34927345,34929233,34931217,34933214,34935127,34936984,34938895,34940868,34942809,34944680,34946552,34948461,34950301,34952194,34954143,34956095,34958008,34959948,34961822,34963708,34965571,34967456,34969433,34971336,34973309,34975267,34977168,34979041,34980931,34982815,34984770,34986759,34988711,34990609,34992427,34994246,34996127,34998050,35000076,35001961,35003824,35005639,35007347,35009266,35011207,35013103,35015011,35016926,35018760,35020630,35022544,35024400,35026266,35028156,35030049,35031882,35033763,35035568,35037399,35039391,35041337,35043256,35045187,35047092,35048943,35050788,35052648,35054492,35056316,35058241,35060240,35062174,35064085,35066052,35067867,35069754,35071709,35073643,35075652,35077674,35079693,35081643,35083521,35085523,35087496,35089531,35091480,35093464,35095386,35097438,35099453,35101434,35103342,35105305,35107308,35109320,35111315,35113292,35115278,35117290,35119298,35121277,35123263,35125225,35127252,35129259,35131280,35133264,35135212,35137190,35139166,35141123,35143144,35145095,35147113,35149149,35151177,35153157,35155169,35157072,35159098,35161094,35163082,35165054,35167072,35169092,35171113,35173021,35174784,35176577,35178483,35180493,35182493,35184467,35186485,35188480,35190446,35192433,35194368,35196326,35198286,35200185,35202131,35204094,35206086,35208008,35210009,35211985,35214012,35216005,35217992,35219960,35221888,35223883,35225858,35227823,35229671,35231634,35233563,35235523,35237443,35239326,35241301,35243254,35245143,35247054,35249040,35251029,35253032,35255011,35257011,35259026,35261027,35263050,35264964,35266891,35268866,35270798,35272489,35274404,35276353,35278288,35280231,35282175,35284122,35286133,35288122,35290126,35292121,35294090,35296054,35298081,35300068,35302054,35304042,35305995,35307920,35309889,35311818,35313794,35315737,35317714,35319702,35321688,35323712,35325733,35327720,35329703,35331689,35333700,35335677,35337649,35339603,35341583,35343542,35345529,35347498,35349431,35351427,35353389,35355379,35357353,35359273,35361289,35363311,35365287,35367251,35369210,35371158,35373194,35375146,35377132,35379151,35381121,35383122,35385126,35387081,35389100,35391077,35393038,35395068,35396984,35399038,35401003,35402938,35404943,35406887,35408873,35410877,35412881,35414839,35416736,35418701,35420699,35422638,35424592,35426582,35428532,35430444,35432408,35434391,35436396,35438375,35440322,35442277,35444228,35446174,35448150,35450064,35452004,35453966,35455806,35457666,35459627,35461598,35463496,35465384,35467312,35469223,35471215,35473164,35475077,35477065,35479062,35480996,35482977,35484961,35486880,35488915,35490780,35492779,35494752,35496710,35498719,35500727,35502740,35504780,35506807,35508680,35510693,35512688,35514684,35516717,35518744,35520799,35522835,35524860,35526811,35528829,35530839,35532810,35534841,35536869,35538896,35540893,35542930,35544930,35546968,35548988,35551006,35553045,35555076,35557130,35559170,35561213,35563177,35565201,35567215,35569199,35571236,35573262,35575314,35577364,35579400,35581381,35583418,35585392,35587427,35589470,35591499,35593549,35595582,35597621,35599560,35601518,35603475,35605452,35607316,35609310,35611279,35613259,35615265,35617258,35619293,35621314,35623281,35625259,35627257,35629283,35631198,35633205,35635124,35637057,35639053,35641063,35643095,35645053,35647053,35648986,35650871,35652871,35654837,35656452,35658302,35660115,35661784,35663397,35665045,35666569,35668373,35669719,35671231,35672765,35674173,35675758,35677027,35678497,35679975,35681128,35682660,35683816,35685214,35686521,35687711,35689193,35690307,35691738,35692910,35693796,35695391,35696758,35697969,35699171,35700445,35701891,35702825,35704107,35705500,35706656,35708254,35709348,35710727,35711899,35713367,35714731,35715949,35717411,35718919,35720093,35721714,35723148,35724664,35726241,35727618,35729241,35730547,35732053,35733607,35734774,35736409,35737580,35738984,35740159,35741675,35742979,35744290,35745695,35746797,35747883,35749437,35750888,35751996,35753235,35754546,35755976,35756918,35758207,35759686,35760846,35762386,35763473,35764854,35765929,35767561,35768778,35770199,35771648,35773067,35774472,35775962,35777546,35778977,35780564,35782018,35783364,35784790,35786315,35787720,35788896,35790557,35791776,35793129,35794298,35795910,35797119,35798521,35799882,35800895,35802168,35803635,35805055,35806137,35807435,35808840,35810044,35811003,35812285,35813672,35814834,35816371,35817471,35818887,35820030,35821641,35822921,35824364,35825812,35827211,35828663,35830114,35831679,35833119,35834684,35836245,35837459,35838961,35840444,35841671,35843005,35844539,35845835,35847212,35848371,35849931,35851109,35852516,35853844,35854738,35856252,35857569,35858910,35860097,35861329,35862901,35863787,35864959,35866378,35867554,35869066,35870099,35871450,35872757,35874008,35875452,35876615,35878056,35879561,35880790,35882413,35883857,35885352,35886912,35888243,35889888,35891147,35892653,35894177,35895461,35897111,35898259,35899647,35900943,35902227,35903703,35904957,35906432,35907576,35908528,35910159,35911527,35912737,35913931,35915240,35916837,35917711,35918970,35920430,35921617,35923238,35924284,35925628,35926759,35928346,35929587,35930966,35932439,35933890,35935175,35936675,35938240,35939680,35941257,35942684,35944148,35945485,35946980,35948492,35949719,35951334,35952487,35953932,35955092,35956719,35957861,35959271,35960579,35961548,35962780,35964202,35965652,35966743,35968036,35969519,35970670,35971706,35973026,35974346,35975523,35977068,35978228,35979619,35980763,35982387,35983645,35985052,35986551,35987954,35989304,35990779,35992385,35993881,35995491,35996985,35998304,35999788,36001354,36002720,36003814,36005516,36006664,36008038,36009181,36010768,36011913,36013195,36014579,36015616,36016714,36018230,36019691,36020764,36022036,36023535,36024661,36025665,36026968,36028237,36029290,36030840,36031934,36033347,36034492,36036129,36037298,36038610,36040112,36041576,36042962,36044522,36046116,36047607,36049162,36050746,36052132,36053564,36055110,36056555,36057647,36059343,36060573,36061902,36063076,36064612,36065870,36067114,36068509,36069640,36070562,36072166,36073622,36074843,36076064,36077357,36078819,36079704,36080968,36082394,36083530,36085105,36086171,36087486,36088795,36090350,36091666,36092887,36094424,36095964,36097336,36098986,36100424,36101938,36103492,36104921,36106626,36107868,36109391,36110907,36112158,36113683,36115016,36116374,36117766,36118935,36120492,36121716,36123207,36124440,36125291,36126968,36128259,36129542,36130776,36131973,36133633,36134485,36135733,36137182,36138475,36140038,36141142,36142457,36143703,36145064,36146615,36147896,36149364,36150872,36152122,36153804,36155273,36156827,36158406,36159809,36161517,36162805,36164349,36165872,36167087,36168666,36169964,36171379,36172759,36173901,36175488,36176721,36178233,36179474,36180301,36181962,36183239,36184539,36185785,36186994,36188610,36189557,36190699,36192114,36193559,36194919,36196314,36197538,36198933,36200214,36201859,36203080,36204603,36206162,36207462,36209077,36210594,36212276,36213835,36215426,36216957,36218426,36219621,36220827,36222116,36223567,36225091,36226725,36228187,36229529,36230720,36232236,36233775,36235168,36236866,36238454,36239809,36241104,36242489,36243972,36245379,36247057,36248635,36250112,36251499,36252765,36254258,36255680,36257032,36258623,36260280,36261861,36263335,36264531,36265903,36267290,36268502,36269961,36271624,36272937,36274024,36275336,36276633,36278352,36279742,36281012,36282494,36284158,36285305,36286992,36288688,36290559,36292486,36294392,36296162,36298099,36299914,36301673,36303499,36305406,36307217,36309025,36310715,36312016,36313716,36315401,36317157,36318885,36320604,36322272,36323765,36324609,36325867,36327859,36329856,36331681,36333281,36334421,36335618,36337423,36338945,36340680,36342398,36344354,36346061,36347869,36349647,36351539,36353266,36355013,36356915,36358811,36360660,36362316,36364008,36365966,36367560,36369541,36371410,36373349,36375324,36377289,36379216,36381047,36382861,36384473,36386349,36388165,36390059,36391961,36393783,36395439,36397140,36398646,36400258,36402062,36403724,36405322,36407016,36408613,36410024,36411692,36413456,36415468,36417483,36419450,36421349,36423343,36425374,36427373,36429315,36431331,36433366,36435385,36437341,36439343,36441379,36443348,36445326,36447268,36449227,36451115,36453093,36455047,36457020,36458946,36460965,36462974,36464973,36466974,36468981,36471018,36473021,36475003,36476867,36478844,36480900,36482954,36484992,36486983,36488898,36490735,36492330,36494307,36496161,36498109,36500016,36501913,36503865,36505736,36507665,36509531,36511435,36513366,36515223,36517122,36519097,36520976,36522900,36524845,36526732,36528620,36529909,36531558,36533497,36535195,36536738,36538232,36539478,36540995,36542753,36544371,36545981,36547807,36549371,36550957,36552534,36554118,36555665,36557288,36558918,36560565,36562144,36563412,36564681,36566325,36567965,36569241,36570531,36572519,36574365,36576153,36577918,36579694,36581405,36583177,36585042,36586780,36588444,36590108,36591848,36593484,36595095,36596936,36598706,36599942,36601461,36603110,36604582,36606064,36607295,36608609,36610388,36611873,36613124,36614308,36615675,36617407,36618766,36620317,36622278,36624279,36626251,36628230,36630203,36632118,36633956,36635506,36637421,36639310,36641182,36642796,36644606,36646611,36648497,36650372,36652238,36654026,36655884,36657813,36659442,36661372,36662922,36664369,36666056,36667565,36668973,36670472,36672132,36673543,36675251,36676631,36678354,36679860,36681564,36683157,36684998,36686530,36688225,36689814,36691543,36693039,36694461,36696071,36697590,36699462,36700725,36701990,36703412,36705112,36706944,36708775,36710499,36711946,36713428,36715028,36716810,36718350,36719805,36721459,36723068,36724749,36726426,36727937,36729521,36731197,36732780,36734212,36735756,36737193,36738870,36740500,36741994,36743555,36745105,36746740,36748370,36749892,36751059,36752663,36754164,36755464,36756784,36758139,36759375,36760656,36762024,36763556,36764798,36766007,36767432,36768822,36770093,36771544,36772912,36774201,36775807,36777384,36778937,36780802,36782290,36783776,36785664,36787506,36789380,36791245,36792780,36794720,36796516,36798178,36800044,36801650,36803508,36804739,36806596,36808516,36809964,36811638,36813374,36815056,36816743,36818326,36819758,36821382,36822831,36824447,36825962,36827479,36829081,36830635,36832134,36833554,36835142,36836676,36838224,36839641,36841246,36842710,36844528,36846408,36848225,36850098,36851939,36853760,36855236,36856723,36858308,36859828,36861655,36863621,36865550,36867384,36869270,36871178,36873042,36875010,36876134,36876711,36877289,36877762,36878504,36879144,36879673,36880217,36880891,36882609,36884610,36886591,36888562,36890482,36892445,36894421,36896371,36898310,36899969,36901632,36903263,36904919,36906713,36908271,36910024,36911604,36913226,36914766,36916329,36917996,36919493,36920999,36922464,36923839,36925335,36926703,36928291,36929808,36931120,36932255,36933668,36935028,36936594,36938062,36939495,36940834,36942433,36943897,36945502,36946911,36948323,36949722,36951133,36952597,36954025,36955410,36956807,36958664,36960443,36962256,36964127,36966017,36967922,36969721,36971458,36973281,36974940,36976627,36978430,36980273,36982090,36983822,36985544,36987236,36988395,36989233,36990008,36990870,36992300,36993992,36995698,36997322,36998950,37000634,37002209,37003748,37005387,37007166,37008832,37010537,37012195,37013857,37015683,37017481,37019363,37020832,37022618,37024083,37025783,37027452,37029228,37030771,37032328,37034286,37035909,37037738,37039585,37041433,37042926,37044780,37046612,37048421,37049474,37050545,37051482,37052554,37053630,37054708,37055697,37056765,37058403,37059976,37061566,37063089,37064665,37066225,37067788,37069302,37070982,37072415,37073910,37075553,37077190,37078493,37079537,37080550,37081555,37082910,37084336,37085881,37087646,37089309,37090777,37091895,37093304,37094878,37096029,37097245,37098776,37100320,37101758,37103359,37104967,37106503,37108077,37109707,37111200,37112471,37113470,37114280,37115305,37115837,37116827,37117565,37118516,37120027,37121409,37122280,37122829,37123689,37124242,37125051,37125566,37126141,37126998,37127693,37128575,37129065,37129908,37130599,37131500,37132028,37132545,37133464,37134119,37134960,37135454,37136310,37137004,37137790,37138365,37138849,37139717,37140331,37141145,37141423,37141978,37142195,37142372,37142978,37143179,37143814,37144050,37144642,37144817,37145163,37145481,37145644,37146118,37146156,37146710,37146891,37147436,37147624,37147794,37149284,37150707,37152150,37153349,37154592,37155796,37157200,37158161,37159165,37160172,37161168,37162134,37163086,37164087,37165076,37166583,37167979,37169382,37170816,37172327,37173809,37175185,37176544,37178111,37179555,37181054,37182557,37184139,37185731,37187241,37188751,37190240,37191808,37193236,37194662,37196040,37197443,37198898,37200320,37201745,37203293,37204675,37206067,37207442,37208814,37209970,37210909,37211870,37212827,37213922,37214848,37215802,37216720,37217797,37218701,37219637,37220567,37221449,37222930,37224308,37225720,37227102,37228278,37229209,37230136,37231095,37232482,37234092,37235653,37237226,37238776,37240330,37241911,37243513,37245116,37246687,37248026,37249373,37250712,37251986,37253304,37254627,37255960,37257468,37259032,37260553,37261860,37263432,37264679,37265971,37267241,37268808,37270462,37272180,37273744,37275304,37276853,37278648,37280393,37282206,37283771,37284979,37286171,37287690,37289109,37290645,37291861,37293098,37294504,37295929,37297550,37299013,37300526,37302003,37303376,37305078,37306787,37308425,37310100,37311631,37313296,37314945,37316581,37318360,37319975,37321671,37323328,37324939,37326515,37328180,37329838,37331362,37333061,37334719,37336317,37337989,37339489,37341123,37342744,37344397,37346074,37347653,37349359,37351038,37352709,37354292,37355947,37357602,37359142,37360930,37362583,37364203,37365830,37367600,37369340,37370956,37372581,37374204,37376037,37377716,37379397,37381083,37382804,37384542,37386201,37387890,37389532,37390821,37391773,37392725,37393677,37394996,37396506,37398048,37399546,37401140,37402494,37403834,37405180,37406497,37407794,37408963,37410183,37411430,37412740,37413996,37414906,37415869,37417239,37418465,37419627,37420743,37421874,37423057,37424030,37424993,37425911,37427479,37428984,37430494,37432043,37433553,37435064,37436573,37438123,37439780,37441204,37442592,37443969,37445363,37446726,37448117,37449477,37450854,37452535,37454070,37455620,37457157,37458720,37460250,37461772,37463317,37464916,37466645,37468250,37469859,37471513,37473129,37474721,37476311,37477974,37479760,37481234,37482652,37484071,37485485,37486978,37488414,37489794,37491237,37493135,37494895,37496609,37498298,37500041,37501779,37503487,37505165,37507073,37508826,37510541,37512231,37513912,37515636,37517303,37518971,37520644,37522068,37523072,37524287,37525309,37526409,37527472,37528684,37529867,37530990,37532044,37532962,37533815,37534479,37535183,37535864,37537406,37539083,37540793,37542473,37544188,37545887,37547625,37549336,37551055,37552912,37554652,37556320,37557934,37559657,37561331,37563072,37564782,37566661,37568412,37570183,37571962,37573688,37575494,37577244,37579034,37580763,37582649,37584374,37586068,37587683,37589366,37591029,37592758,37594425,37596162,37597598,37599108,37600493,37602060,37603097,37604113,37605148,37606170,37607994,37609810,37611629,37613456,37615108,37616959,37618747,37620580,37622392,37623848,37625033,37626240,37627728,37629277,37630301,37631347,37632604,37634361,37635978,37637597,37639188,37640719,37642381,37643994,37645579,37647270,37648851,37650291,37651699,37653175,37654564,37656035,37657455,37658892,37660354,37662110,37663505,37665226,37666596,37668078,37669527,37670990,37672377,37674107,37675754,37677369,37678967,37680500,37682100,37683703,37685289,37686992,37688522,37690003,37691445,37692836,37694349,37695789,37697249,37698721,37700440,37702262,37704089,37705924,37707604,37709447,37711241,37713078,37714912,37716565,37718206,37719829,37721579,37723113,37724759,37726374,37728041,37729675,37731149,37732600,37734076,37735488,37736982,37738463,37739917,37741435,37743298,37745105,37746962,37748844,37750535,37752381,37754173,37756051,37757735,37759365,37761008,37762604,37764162,37765845,37767481,37769076,37770726,37772373,37773824,37775255,37776748,37778142,37779641,37781074,37782508,37784046,37785906,37787726,37789580,37791365,37793218,37795007,37796871,37798736,37800064,37801013,37802772,37803428,37804111,37805295,37805986,37806960,37807817,37808515,37809902,37811066,37811693,37812413,37813505,37814810,37815733,37816984,37818373,37819648,37820237,37821429,37822770,37823865,37825242,37826462,37828198,37829247,37830337,37831304,37832863,37834442,37836019,37837770,37839425,37841176,37842709,37844441,37845950,37847472,37848674,37849459,37850733,37852282,37853795,37854801,37855794,37856810,37857825,37859190,37860289,37861319,37862433,37863759,37865602,37867635,37869654,37871670,37873691,37875702,37877724,37879696,37881708,37883739,37885765,37887779,37889760,37891774,37893819,37895829,37897802,37899821,37901846,37903869,37905867,37907884,37909884,37911906,37913871,37915896,37917931,37919967,37921963,37923966,37925980,37927972,37929978,37931952,37933995,37935939,37937843,37939749,37941627,37943522,37945443,37947291,37949169,37951055,37952955,37954827,37956718,37958534,37960400,37962231,37964117,37966038,37967747,37969400,37971066,37972733,37974398,37976056,37977724,37979335,37981125,37982777,37984450,37986116,37987744,37989411,37991057,37992675,37994310,37995909,37997347,37998787,38000200,38001620,38003055,38004468,38005840,38007388,38008928,38010426,38011867,38013407,38014735,38016307,38017789,38019425,38020848,38022342,38023810,38025474,38026896,38028372,38029935,38031566,38032995,38034279,38035754,38037239,38039221,38040931,38042425,38044095,38045705,38047261,38048794,38050379,38052094,38053647,38055221,38056841,38058495,38060240,38061871,38063468,38065020,38066675,38068222,38069775,38071341,38072889,38074438,38076023,38077537,38078921,38080561,38082022,38083745,38085301,38086950,38088483,38090193,38091832,38093464,38095218,38096971,38098434,38100104,38102031,38103902,38105598,38107323,38109199,38111135,38113056,38115004,38116978,38118920,38120854,38122768,38124688,38126509,38128346,38130216,38132168,38134059,38135904,38137774,38139603,38141402,38143187,38144964,38146723,38148738,38150710,38152673,38154637,38156556,38158476,38160370,38162268,38164233,38166201,38168098,38169992,38171854,38173658,38175484,38177305,38179086,38181068,38183045,38185036,38187005,38188960,38190899,38192831,38194753,38196700,38198644,38200468,38202290,38204036,38205820,38207583,38209353,38211106,38212994,38214826,38216685,38218453,38220249,38222083,38223889,38225693,38227471,38229199,38230638,38232092,38233565,38234962,38236405,38237792,38239222,38240778,38242737,38244680,38246618,38248629,38250572,38252464,38254368,38256286,38258182,38260047,38261953,38263945,38265886,38267816,38269726,38271639,38273524,38275477,38277351,38279274,38281026,38282535,38284067,38285685,38287275,38288868,38290445,38291952,38293743,38295541,38297347,38299139,38300865,38302640,38304380,38306097,38307817,38309449,38310769,38312070,38313386,38314779,38316055,38317387,38318744,38320274,38321776,38323265,38324755,38326305,38327880,38329384,38330865,38332338,38333982,38335678,38337154,38338814,38340432,38342059,38343616,38345157,38346547,38347885,38349204,38350462,38351773,38352941,38354219,38355893,38357787,38359649,38361523,38363427,38365315,38367199,38369055,38370924,38372886,38374791,38376660,38378549,38380421,38382301,38384188,38386061,38388012,38389443,38390877,38392253,38393646,38395091,38396558,38398010,38399467,38401231,38402883,38404598,38406339,38408048,38409642,38411236,38412805,38414457,38416022,38417579,38419163,38420769,38422476,38424199,38425897,38427542,38429259,38430731,38432196,38433676,38435129,38436508,38437891,38439307,38440791,38442382,38443866,38445365,38446913,38448017,38449544,38451039,38452478,38454136,38455637,38457159,38458645,38460074,38461581,38463062,38464569,38466097,38468072,38470035,38471955,38473697,38475131,38476516,38477941,38478846,38480249,38481647,38483074,38484665,38485844,38487005,38488137,38489245,38490219,38491283,38492454,38493627,38495145,38496578,38498030,38499853,38501756,38503637,38505549,38507446,38509344,38511237,38513160,38514869,38516471,38518008,38519464,38520999,38522459,38523314,38524314,38525087,38526055,38526842,38527814,38528485,38529355,38530253,38531188,38532029,38532829,38533813,38534763,38535804,38536701,38538116,38539362,38540678,38541958,38542908,38543260,38543816,38544266,38544771,38544990,38545524,38546067,38547409,38548426,38549219,38550037,38551122,38552464,38553195,38554532,38555402,38555581,38555970,38556270,38556622,38557884,38559219,38560780,38562396,38564237,38565982,38567800,38569627,38571436,38573206,38574981,38576756,38578537,38580169,38581818,38583390,38585012,38586601,38588253,38589839,38591435,38592880,38594185,38595512,38596818,38598386,38600052,38601727,38603390,38605030,38606730,38608393,38610073,38611767,38613433,38615102,38616785,38617768,38619312,38621143,38623009,38624787,38626595,38628404,38630277,38632092,38633832,38635495,38636945,38638406,38639861,38641453,38643320,38645138,38647032,38648891,38650754,38652645,38654474,38656338,38658186,38659254,38660992,38662319,38663432,38664649,38665721,38666827,38668883,38670889,38672881,38674798,38676745,38678704,38680606,38682512,38684394,38686351,38688303,38690274,38692161,38694069,38695969,38697906,38699911,38701739,38703398,38705148,38706939,38708763,38710535,38712233,38713834,38715657,38717711,38719755,38721801,38723857,38725909,38727947,38729984,38732032,38734089,38736141,38738186,38740228,38742283,38744330,38746370,38748401,38750453,38752317,38754240,38756101,38757945,38759768,38761632,38763465,38765342,38767283,38769185,38771069,38772924,38774779,38776605,38778463,38780303,38782231,38783581,38785123,38785891,38786686,38787474,38788141,38788864,38789332,38790149,38791045,38791827,38792223,38792848,38793635,38794503,38795192,38795595,38796324,38797146,38798012,38798558,38799026,38799804,38800613,38801528,38802011,38802611,38803872,38804914,38806050,38806645,38807198,38808448,38809550,38810674,38811067,38811863,38813015,38814093,38815091,38815484,38816493,38817593,38818656,38819438,38820753,38822017,38823594,38824894,38826630,38828105,38829093,38830258,38831407,38832531,38833694,38834795,38835901,38837005,38838158,38839288,38840466,38841647,38842751,38843821,38844839,38845937,38847456,38848550,38849650,38850849,38851899,38852977,38854070,38855097,38856138,38857142,38858053,38859055,38860110,38860989,38861873,38862632,38863484,38864858,38865289,38865819,38866325,38866861,38867438,38867927,38868498,38869060,38869508,38870024,38870502,38871017,38871528,38872067,38872632,38873135,38874520,38875987,38877490,38878991,38880536,38882037,38883535,38885037,38886551,38887690,38888668,38889660,38891058,38892656,38894072,38895473,38896775,38898131,38899582,38901324,38902967,38904606,38906267,38907883,38909499,38911166,38912808,38914484,38916195,38917678,38919145,38920694,38922162,38923676,38925160,38926619,38928250,38929234,38930341,38931575,38932915,38934248,38935545,38936877,38938003,38939388,38940826,38942213,38943660,38945185,38946683,38948242,38949806,38951473,38952867,38953835,38955005,38956148,38957288,38958431,38959519,38960619,38961757,38962933,38964063,38965236,38966433,38967527,38968620,38969637,38970821,38972245,38973383,38974497,38975708,38976768,38977834,38978949,38980021,38980998,38982002,38982904,38983917,38984965,38985824,38986679,38987465,38988316,38989656,38990080,38990632,38991150,38991713,38992260,38992710,38993272,38993838,38994296,38994811,38995289,38995796,38996294,38996818,38997374,38997883,38999538,39001333,39003121,39004929,39006720,39008519,39010250,39012065,39013471,39014897,39016275,39017661,39019264,39020535,39021753,39022955,39024446,39025912,39027265,39028550,39030059,39031411,39032422,39033447,39034450,39035878,39037572,39039091,39040781,39042449,39043808,39044988,39046135,39047289,39048750,39050038,39051772,39053432,39055020,39056713,39058414,39060014,39061675,39063308,39065001,39066226,39067568,39069042,39070522,39072492,39074157,39076147,39077905,39079633,39081265,39082986,39084702,39086325,39088080,39089834,39091562,39093128,39094640,39096169,39097711,39099280,39100777,39102372,39103702,39105393,39107022,39108636,39110219,39111798,39113370,39114964,39116577,39118371,39119794,39121523,39123332,39124835,39126205,39127943,39129734,39131347,39133056,39134130,39135208,39136334,39137477,39138612,39139769,39140841,39141984,39143080,39144250,39145402,39146597,39147757,39148857,39149877,39150991,39152297,39153273,39154517,39155617,39156550,39157193,39158280,39159521,39160642,39161632,39162546,39163802,39164927,39165831,39166351,39167516,39168745,39169943,39170915,39171748,39172939,39174047,39175052,39175484,39176686,39177887,39179029,39180024,39180771,39181899,39183066,39184154,39184562,39185730,39186880,39188025,39188917,39189725,39190823,39192042,39193172,39193584,39194671,39195880,39197038,39197941,39199360,39200493,39201595,39202794,39203828,39204879,39205982,39207050,39208049,39209033,39209956,39210961,39211993,39212850,39213684,39214484,39215341,39216378,39217579,39218780,39219936,39220327,39221256,39222476,39223596,39224611,39225873,39226995,39228244,39229377,39230572,39231780,39232892,39234130,39235313,39236577,39237702,39238794,39240009,39241196,39242487,39243621,39244743,39245987,39247142,39248499,39249686,39250717,39251724,39252857,39254130,39255266,39256268,39257296,39258388,39259747,39260841,39261829,39262870,39264112,39265368,39266383,39267389,39268475,39269904,39270723,39271198,39271757,39272964,39274487,39276234,39278096,39279962,39281795,39283414,39284818,39285407,39285912,39286423,39286948,39287515,39288309,39289683,39290756,39292003,39293497,39294709,39295792,39297195,39298624,39299691,39300930,39302422,39303644,39304689,39306032,39307919,39309776,39311492,39313206,39315103,39316813,39318677,39320568,39322265,39324149,39325838,39327678,39329437,39331280,39333040,39334831,39336683,39338443,39340245,39342127,39343874,39345731,39347477,39349224,39351252,39352953,39354796,39356575,39358410,39360145,39362019,39363749,39365478,39367372,39369043,39370839,39372726,39374434,39376290,39378093,39379928,39381638,39383492,39385243,39387010,39388900,39390651,39392378,39394267,39396001,39397807,39399606,39401360,39403319,39405094,39406923,39408626,39410523,39412258,39414116,39415872,39417609,39419499,39421160,39422982,39424869,39426638,39428425,39430234,39432061,39433776,39435636,39437517,39439241,39441147,39442871,39444633,39446108,39447282,39448510,39449686,39450985,39452147,39453334,39454467,39455579,39456088,39456872,39457769,39458554,39458941,39459603,39460405,39461245,39461928,39462326,39463054,39463903,39464758,39465267,39465763,39466532,39467352,39468291,39468779,39470317,39471282,39472407,39473575,39474725,39475927,39477027,39478121,39479209,39480377,39481534,39482685,39483868,39485001,39486065,39487122,39488209,39489761,39491233,39492838,39493900,39494976,39496125,39497250,39498303,39499381,39500450,39501463,39502496,39503380,39504421,39505467,39506408,39507301,39508079,39508956,39510364,39511807,39513223,39514573,39514987,39515550,39516064,39516615,39517181,39517644,39518210,39518761,39519222,39519748,39520217,39520712,39521215,39521752,39522326,39522828,39524407,39526055,39527710,39529283,39530999,39532654,39534294,39535961,39537651,39539350,39541122,39542758,39544378,39545988,39547641,39549264,39550384,39550836,39551766,39552530,39552956,39553262,39554064,39555008,39557052,39559088,39561092,39563147,39565169,39567175,39569169,39571138,39573162,39575182,39577207,39579217,39581220,39583252,39585266,39587235,39589243,39590666,39592004,39593614,39595186,39596563,39597770,39599134,39600252,39601373,39602491,39603620,39604741,39605863,39606757,39606828,39607526,39609509,39611561,39613422,39615309,39617224,39619086,39620923,39622807,39624715,39626584,39628531,39630457,39632398,39634343,39636213,39638119,39640032,39641949,39643834,39645608,39647603,39649514,39651398,39653308,39655214,39657077,39658838,39660651,39662419,39664301,39666197,39668094,39669969,39671829,39673706,39675626,39677533,39679385,39681372,39683151,39685027,39686891,39688795,39690645,39692351,39694154,39695590,39697085,39698691,39700313,39701902,39703448,39704889,39706428,39708020,39709646,39711278,39712812,39714325,39715920,39717496,39719026,39720899,39722525,39724056,39725613,39727270,39729221,39731054,39732826,39734591,39736440,39738290,39740130,39741976,39743865,39745358,39746649,39747961,39749306,39750619,39752004,39753307,39754556,39756136,39757590,39759051,39760492,39761975,39763461,39764901,39766344,39767761,39769389,39770831,39772269,39773693,39775217,39776676,39778124,39779545,39781147,39782585,39784034,39785493,39786943,39788462,39789940,39791390,39792816,39794436,39795873,39797282,39798692,39800210,39801640,39803087,39804505,39806074,39807503,39808901,39810259,39811695,39813172,39814639,39816071,39817467,39819065,39820481,39821862,39823300,39824773,39826236,39827658,39829048,39830510,39832055,39833441,39834836,39836292,39837725,39839173,39840572,39841957,39843586,39844994,39846384,39847847,39849344,39850793,39852250,39853652,39855075,39856730,39858184,39859613,39861102,39862573,39864073,39865539,39866925,39868536,39869904,39871211,39872552,39873948,39875283,39876652,39877995,39879291,39880845,39882199,39883468,39884827,39886216,39887543,39888870,39890165,39891695,39893038,39894332,39895624,39897007,39898303,39899657,39900997,39902241,39903864,39905317,39906740,39908207,39909683,39911183,39912610,39914032,39915541,39917064,39918446,39919890,39921380,39922823,39924305,39925729,39927161,39928794,39930189,39931568,39932993,39934442,39935914,39937345,39938748,39940166,39941769,39943166,39944563,39946045,39947526,39948965,39950374,39951779,39953378,39954803,39956195,39957597,39959036,39960524,39961964,39963376,39964768,39966420,39967854,39969276,39970686,39972211,39973642,39975070,39976474,39978096,39979772,39981592,39983389,39985108,39987008,39988635,39990418,39992262,39994085,39995899,39997643,39999202,40001072,40002801,40004577,40006286,40008072,40009923,40011762,40013672,40015511,40017374,40019265,40021110,40023003,40024947,40026772,40028592,40030360,40032195,40033999,40035792,40037564,40039403,40041271,40043048,40044810,40046547,40048335,40050086,40051802,40053537,40055427,40057241,40059065,40060787,40062563,40064318,40066072,40067804,40069602,40071590,40073453,40075276,40077098,40078893,40080706,40082518,40084333,40086220,40087959,40089706,40091483,40093201,40094934,40096643,40098406,40100177,40102044,40103920,40105777,40107622,40109456,40111287,40113024,40114819,40116583,40118406,40120136,40121889,40123671,40125196,40126911,40128657,40130352,40132051,40133850,40135638,40137344,40139137,40140739,40142399,40144022,40145786,40147594,40149387,40151080,40152693,40154328,40156025,40157710,40159391,40161030,40162815,40164466,40166114,40167778,40169457,40171143,40172825,40174528,40176202,40178027,40179856,40181578,40183372,40185185,40186982,40188798,40190590,40192442,40194210,40195982,40197688,40199420,40201206,40202978,40204774,40206524,40208386,40210172,40212039,40213908,40215786,40217695,40219668,40221505,40223322,40225073,40226740,40228473,40230203,40231930,40233693,40235455,40237180,40238979,40240674,40242389,40244220,40246000,40247766,40249633,40251386,40253116,40254749,40256178,40257714,40259251,40260740,40262269,40263812,40265279,40267034,40269063,40271001,40272942,40274958,40276927,40278881,40280887,40282779,40284720,40286707,40288707,40290723,40292648,40294621,40296616,40298637,40300645,40302100,40302140,40302180,40302218,40302258,40302580,40302620,40302660,40302698,40304001,40305815,40307640,40309461,40311308,40313161,40314980,40316779,40318644,40320226,40321688,40323129,40324561,40325991,40327419,40328844,40330283,40332049,40333875,40335692,40337434,40339218,40340989,40342806,40344554,40346350,40347230,40347769,40347807,40347847,40347885,40348203,40348243,40348282,40348322,40348611,40349809,40350988,40352829,40354548,40356294,40358053,40359799,40361517,40363251,40364973,40366759,40368190,40369474,40370867,40372377,40373159,40374418,40375946,40377262,40378308,40379732,40381520,40383106,40384706,40384746,40384786,40384824,40384864,40385186,40385226,40385266,40385304,40386169,40387552,40388752,40389899,40391119,40392886,40394493,40396145,40397849,40399512,40401212,40402890,40404535,40405628,40405668,40405708,40405746,40406288,40407248,40407347,40407725,40409314,40411187,40413213,40414846,40416493,40418126,40419768,40421425,40423107,40424835,40426569,40428257,40430016,40431722,40433483,40435207,40436910,40438598,40440273,40442015,40442895,40444052,40444091,40445735,40447535,40449243,40450957,40452716,40454457,40456225,40457930,40459744,40461596,40463425,40465316,40467207,40469015,40470913,40472700,40474507,40476485,40478276,40479896,40481576,40483238,40485004,40486790,40488610,40490304,40492178,40494013,40495943,40497745,40499701,40501475,40503459,40505233,40507202,40508916,40510147,40511315,40512399,40513425,40514752,40516152,40517482,40518840,40520242,40521579,40522739,40523875,40524953,40526101,40527233,40528487,40529951,40530639,40531525,40532464,40533583,40535125,40536754,40537673,40538354,40539080,40539999,40541568,40543265,40545014,40546331,40547270,40548635,40550359,40551610,40552746,40553564,40554462,40555386,40555989,40556658,40557640,40558959,40560266,40561463,40562739,40564148,40565530,40566904,40568195,40569848,40571769,40573675,40575581,40577417,40579289,40581201,40583060,40585013,40586846,40588766,40590662,40592615,40594453,40596333,40598229,40600161,40601082,40602028,40602960,40603911,40605814,40607776,40609372,40611349,40612996,40614161,40615402,40616596,40618095,40620075,40622077,40624103,40626117,40627983,40629922,40631810,40633696,40635699,40637742,40639788,40641819,40643784,40645560,40647307,40649187,40650991,40652820,40654616,40656378,40658161,40660074,40662035,40663975,40665884,40667879,40669250,40670521,40671842,40673528,40674703,40675948,40677217,40678566,40679837,40681024,40682299,40683572,40685364,40686508,40687713,40688996,40690424,40691689,40692422,40693349,40695061,40696642,40697415,40698243,40699833,40701505,40702380,40703097,40704453,40705744,40707136,40708526,40709865,40711704,40713465,40715221,40717061,40718843,40720649,40722464,40724322,40726117,40727927,40729597,40731267,40732925,40734708,40736466,40738260,40740059,40741847,40743314,40744698,40746138,40747626,40749181,40750639,40752036,40753491,40755106,40756600,40758062,40759540,40761181,40762698,40764144,40765674,40767259,40769239,40771221,40773182,40775100,40777120,40779097,40781054,40783055,40785035,40786799,40788580,40790320,40792135,40793800,40795345,40796918,40798517,40800474,40802365,40804153,40806058,40807947,40809755,40811566,40813372,40815314,40817220,40819091,40820966,40822901,40824698,40826528,40828287,40830123,40831911,40833340,40834851,40836201,40837512,40838751,40839970,40841646,40842801,40844006,40845232,40846471,40848110,40849201,40850430,40851945,40853799,40855586,40857330,40859097,40861002,40862787,40864558,40866337,40868189,40869984,40871823,40873638,40875438,40876603,40877483,40878301,40879044,40880151,40881303,40882476,40883643,40884917,40886072,40887311,40888467,40889693,40891042,40892444,40893814,40895077,40896853,40898690,40900562,40902394,40904278,40906108,40907970,40909827,40911708,40913620,40915545,40917463,40919350,40921298,40923222,40925160,40927106,40928986,40930824,40932687,40934517,40936268,40938081,40939848,40941522,40943121,40944742,40946644,40948452,40950292,40952212,40954090,40955925,40957847,40959629,40961110,40962507,40963986,40965558,40967035,40968745,40970476,40972031,40973586,40975303,40976907,40978637,40980321,40982075,40983820,40985598,40987439,40989401,40991449,40993497,40995368,40997406,40999382,41001364,41003305,41005345,41007294,41009240,41011129,41012837,41013981,41015343,41016640,41017852,41019622,41021417,41023168,41024928,41026607,41028144,41029751,41031327,41033015,41034818,41036621,41038400,41040207,41042008,41043844,41045623,41047386,41049157,41050829,41052540,41054179,41055813,41057581,41059402,41061168,41062714,41063786,41064893,41065873,41067298,41068390,41069273,41070151,41071211,41072473,41073508,41074697,41075559,41076731,41077283,41077917,41078420,41079158,41079889,41080607,41081295,41082096,41083058,41084220,41085413,41086453,41087711,41089048,41090505,41091854,41093241,41094637,41096057,41097789,41099339,41100606,41102159,41103782,41105173,41106756,41108490,41110081,41111757,41112788,41112999,41113212,41113412,41114179,41114667,41115145,41115583,41116252,41118302,41120323,41122373,41124409,41126428,41128466,41130507,41132534,41134565,41136537,41138476,41140454,41142356,41144260,41146200,41148109,41150001,41151536,41152934,41154359,41155807,41157141,41158318,41159506,41160646,41161872,41163286,41164665,41166158,41167555,41169426,41171230,41173083,41174954,41176841,41178665,41180433,41182230,41184128,41185911,41187664,41189418,41191248,41192896,41194602,41196373,41198099,41199573,41200995,41202502,41203965,41205395,41206849,41208376,41209844,41211369,41213273,41215161,41217014,41218936,41220257,41221481,41222695,41223948,41225746,41227558,41229325,41231109,41232856,41234327,41235698,41237252,41238756,41240783,41242819,41244855,41246867,41248909,41250894,41252877,41254867,41256685,41258201,41259730,41261201,41262890,41264570,41266229,41267881,41269545,41271567,41273532,41275513,41277514,41279412,41281132,41282845,41284586,41286520,41288575,41290623,41292674,41294715,41295994,41297247,41298108,41298646,41299187,41299731,41300591,41302003,41303435,41304861,41306052,41307298,41308872,41310449,41311631,41313096,41314667,41316152,41317708,41319150,41320681,41322394,41324076,41325956,41327773,41329191,41330404,41331759,41333005,41334261,41335222,41336204,41337164,41338451,41339319,41340236,41341217,41342058,41343648,41345637,41347599,41349557,41351509,41353538,41355539,41357509,41359520,41361394,41362889,41364410,41366038,41367805,41369429,41371108,41372759,41374498,41376157,41377629,41379205,41380836,41382609,41384271,41386008,41387638,41389289,41390884,41392545,41394055,41395555,41397071,41398685,41400207,41401686,41403579,41405487,41407353,41409216,41411110,41413012,41414861,41416713,41418609,41420155,41421621,41423084,41424929,41426876,41428848,41430870,41432880,41434785,41436593,41438386,41440194,41442040,41443929,41445840,41447760,41449507,41450929,41452396,41453803,41455233,41456677,41458194,41459677,41461113,41462660,41464304,41466022,41467677,41469232,41470735,41472329,41473861,41475436,41477180,41478830,41480538,41482278,41483974,41485703,41487374,41489110,41490749,41492439,41493953,41495664,41497326,41498979,41500494,41502193,41503887,41505320,41506905,41508476,41510034,41511411,41513080,41514638,41516346,41517870,41519331,41520918,41522441,41523947,41525413,41526947,41528680,41530177,41531478,41532735,41534199,41535722,41537334,41539124,41540523,41542201,41543738,41545251,41547009,41548737,41550338,41551989,41553444,41554670,41555819,41557091,41558358,41559745,41560935,41562317,41564111,41565415,41566804,41568171,41569435,41570585,41571730,41573023,41574211,41575617,41577083,41578475,41579812,41581355,41582769,41583947,41585290,41587114,41588809,41590624,41592197,41593498,41594574,41595581,41596494,41597384,41598461,41599648,41600952,41602226,41603779,41605405,41606939,41608627,41610578,41611682,41612931,41613903,41614902,41615760,41616394,41617521,41618705,41620033,41621174,41622455,41623720,41624992,41626552,41628278,41630079,41632027,41633753,41635537,41637322,41638960,41640255,41641503,41642724,41644075,41645367,41646678,41648032,41649265,41650500,41651804,41653070,41654336,41655889,41657591,41659242,41660939,41662435,41663888,41665437,41667188,41668715,41670375,41671649,41672867,41674055,41675323,41676609,41677872,41679333,41680835,41682530,41683987,41685271,41686627,41687830,41689017,41690202,41691516,41692964,41694675,41696419,41698086,41699674,41701045,41702474,41703868,41705274,41706973,41708545,41709881,41711154,41712342,41713625,41714768,41716012,41717484,41719235,41720887,41722635,41724288,41725827,41727534,41729202,41730687,41732381,41733964,41734520,41734770,41736227,41737799,41738377,41738627,41740002,41741563,41742157,41742435,41743814,41745396,41745992,41746242,41747637,41749208,41749834,41750078,41751409,41752989,41753622,41753866,41755041,41756292,41757577,41758832,41760253,41761515,41762802,41764134,41765529,41766847,41768127,41769444,41770700,41772149,41773468,41774790,41776050,41777455,41779027,41780258,41781495,41782788,41783979,41785241,41786493,41787759,41789012,41790546,41791714,41792915,41794149,41795361,41796549,41797769,41798999,41800466,41801698,41802952,41804228,41805529,41806780,41808051,41809345,41810612,41812425,41814149,41815908,41817619,41819307,41820950,41822737,41824478,41826071,41827301,41828650,41829964,41831346,41832685,41834033,41835287,41836671,41837981,41839408,41840738,41842104,41843449,41844881,41846242,41847632,41849484,41851149,41852741,41854313,41855946,41857534,41859013,41860434,41861745,41863141,41864544,41865991,41867544,41869066,41870485,41872062,41873767,41875660,41877338,41878914,41880493,41882145,41883738,41885234,41886697,41887979,41889333,41890761,41892224,41893808,41895322,41896754,41898272,41899993,41901906,41903588,41905181,41906761,41908429,41910015,41911525,41913006,41914244,41915605,41917008,41918454,41920026,41921529,41922957,41924473,41926187,41928099,41929782,41931397,41932951,41934595,41936167,41937699,41939173,41940427,41941798,41943169,41944593,41946185,41947681,41949133,41950653,41952333,41954256,41955425,41956654,41957743,41958657,41959526,41960564,41961602,41962612,41963726,41964998,41966225,41967445,41968385,41969369,41970412,41971449,41972913,41974208,41975426,41976556,41977474,41978389,41979382,41980454,41981390,41982493,41983733,41984984,41986184,41987146,41988070,41989118,41990191,41991529,41993523,41995445,41997363,41999315,42001276,42003239,42005192,42007114,42008989,42010801,42012585,42014420,42016295,42018230,42020150,42022105,42024000,42025536,42027503,42029426,42031395,42033407,42035395,42037322,42039283,42041282,42043078,42044812,42046590,42048345,42050115,42051887,42053733,42055501,42057251,42059044,42060794,42062580,42064349,42065916,42067804,42069798,42071742,42073600,42075482,42077424,42079340,42080564,42081382,42082706,42084632,42086650,42088656,42090634,42092566,42094562,42096529,42098485,42100526,42102475,42104437,42106398,42108339,42110328,42112273,42114224,42116209,42117819,42119353,42120922,42122503,42124074,42125623,42127213,42128772,42130544,42132278,42133905,42135604,42137163,42138983,42140795,42142627,42144428,42146271,42147761,42149321,42150891,42152406,42154123,42155784,42157502,42159097,42160881,42162489,42164195,42165858,42167710,42169516,42171381,42173225,42175105,42176803,42178462,42180154,42181751,42183625,42185440,42187278,42189080,42190914,42192430,42194067,42195611,42197191,42198804,42200491,42202205,42203870,42205604,42207334,42209085,42210825,42212581,42214100,42215803,42217487,42219274,42220792,42222444,42224265,42225869,42227601,42229392,42231175,42232795,42234460,42236053,42237801,42239444,42241016,42242563,42244309,42245938,42247665,42248680,42250514,42252430,42254047,42255425,42257346,42259234,42260702,42262277,42263860,42265856,42267871,42269842,42271413,42272755,42273685,42274908,42276231,42277410,42279096,42280658,42282215,42283675,42285090,42286585,42288069,42289577,42291308,42292446,42293567,42294438,42295406,42296593,42297718,42298678,42299684,42300796,42301990,42303868,42305641,42307509,42309313,42311162,42312978,42314833,42316606,42318460,42320194,42321775,42323538,42325134,42326881,42328608,42330329,42332120,42334034,42335816,42337679,42339523,42341345,42343177,42345011,42346795,42348716,42350471,42352050,42353780,42355449,42357189,42358926,42360648,42362452,42364251,42366081,42367946,42369781,42371677,42373502,42375399,42377197,42379170,42381108,42382982,42384972,42386889,42388816,42390775,42392810,42394725,42396681,42398445,42400193,42402006,42403752,42405580,42407392,42409227,42411081,42412708,42414188,42415455,42416942,42418495,42420200,42421645,42422778,42424028,42425058,42425921,42426239,42426864,42428180,42429457,42430805,42432039,42433497,42434836,42436091,42437488,42438766,42440178,42441523,42442757,42444113,42445439,42446883,42448219,42449544,42450887,42452211,42453692,42455361,42456252,42457882,42459291,42461189,42463120,42465115,42467163,42469167,42471180,42473163,42475086,42477036,42478671,42480224,42481719,42483272,42484963,42486606,42488349,42490095,42491896,42493638,42495386,42497008,42498722,42500280,42501893,42503534,42505036,42506693,42508510,42510437,42512300,42514047,42515655,42517421,42519337,42521302,42523218,42525024,42526665,42528480,42530374,42532315,42534117,42535885,42537494,42539414,42541329,42543223,42545017,42546569,42548484,42550418,42552339,42554257,42556169,42557778,42559579,42561441,42563322,42565190,42566925,42567890,42568867,42569835,42570818,42572430,42573896,42575602,42577178,42578843,42580470,42582165,42583816,42585355,42587144,42588846,42590509,42592261,42593981,42595639,42597300,42598929,42600621,42602270,42604000,42605938,42607667,42609424,42611144,42612793,42614598,42616293,42617891,42619670,42621310,42623142,42624748,42626388,42628064,42629667,42631362,42633283,42635188,42637070,42638953,42640898,42642819,42644656,42646330,42648090,42649724,42651431,42653318,42655247,42657119,42659001,42660928,42662854,42664837,42666754,42668698,42670636,42672541,42674325,42676083,42677865,42679674,42681622,42683546,42685425,42687318,42689232,42691089,42692988,42694872,42696327,42697722,42699045,42700591,42702191,42703848,42705463,42707127,42709034,42710880,42712752,42714586,42716461,42718268,42720119,42722011,42723840,42725730,42727636,42729475,42730118,42730616,42731131,42732320,42733364,42734375,42735789,42737031,42738267,42739653,42741343,42742984,42744609,42746245,42748015,42749498,42751187,42752919,42754251,42755938,42757471,42758845,42760124,42761558,42763184,42764869,42766561,42768341,42769999,42771718,42773407,42775028,42776647,42778000,42779474,42780947,42782391,42783885,42785323,42786830,42788269,42789745,42791142,42792634,42794026,42795816,42797620,42799459,42801368,42803218,42805071,42806911,42808757,42810648,42812490,42814319,42816202,42818105,42819987,42821864,42823730,42825635,42827582,42829588,42831527,42833423,42835329,42837240,42839183,42841118,42843026,42844958,42846883,42848797,42850643,42852533,42854410,42856297,42858150,42859786,42861187,42862633,42864392,42866017,42867600,42869229,42870837,42872467,42874117,42875739,42877376,42879117,42880782,42882417,42884093,42885733,42887375,42889010,42890655,42892394,42894046,42895701,42897349,42898990,42900620,42902250,42903916,42905546,42907552,42909428,42911286,42913142,42915026,42916894,42918729,42920587,42922524,42924350,42926193,42928009,42929836,42931700,42933527,42935365,42937200,42939161,42941010,42942866,42944738,42946587,42948438,42950278,42952143,42954088,42955431,42956842,42958282,42959677,42961031,42962468,42964030,42965470,42966847,42968215,42969743,42971195,42972656,42974097,42976037,42977935,42979728,42981508,42983318,42985164,42987020,42988921,42990833,42992433,42994266,42995989,42997649,42999348,43001045,43002793,43004386,43006100,43007774,43009493,43011166,43012963,43014697,43016475,43018100,43019793,43021479,43023351,43025168,43027015,43028773,43030354,43032250,43034091,43035995,43037817,43039685,43041298,43043092,43044846,43046622,43048455,43050186,43051807,43053555,43055226,43056970,43058750,43060301,43062129,43063859,43065608,43067314,43069145,43070751,43072478,43074110,43075718,43077454,43079169,43080311,43081556,43082818,43084044,43085335,43086640,43087691,43089285,43090892,43092415,43093960,43095589,43097176,43098750,43100288,43101868,43103453,43104991,43106579,43108287,43110116,43112003,43113934,43115777,43117530,43119483,43120897,43122261,43124004,43125773,43127622,43129372,43131076,43132736,43134215,43135895,43137612,43139385,43141098,43142486,43143784,43145497,43147323,43149163,43150658,43152073,43153674,43155068,43156738,43158311,43159732,43161355,43162868,43164373,43165865,43167395,43168854,43170413,43171926,43173278,43174828,43176338,43177932,43179427,43180875,43182389,43184078,43185632,43187137,43188593,43189944,43191439,43192909,43194576,43196409,43198275,43200108,43201939,43203755,43205547,43207320,43209030,43210678,43212284,43214110,43215790,43217582,43219324,43221037,43222825,43224566,43226266,43228160,43230084,43231908,43233761,43235631,43237458,43239338,43241059,43242735,43244438,43246132,43247831,43249616,43251362,43252983,43254720,43256516,43258265,43259878,43261723,43263408,43265137,43266865,43268562,43270210,43271885,43273575,43275280,43277131,43278803,43280501,43282125,43283913,43285605,43287360,43289034,43290655,43292440,43294190,43295611,43296978,43298715,43300485,43302138,43303851,43305569,43307079,43308567,43310148,43311657,43313141,43314564,43316144,43317659,43319151,43320914,43322673,43324340,43326085,43327831,43329473,43331191,43332917,43334528,43336168,43337839,43339478,43341187,43342782,43344403,43346040,43347742,43349400,43351025,43352641,43354341,43355972,43357632,43359271,43360990,43362624,43364266,43365906,43367515,43369226,43370863,43372533,43374157,43375862,43377489,43379141,43380797,43382490,43384093,43385734,43387325,43388978,43390663,43392272,43393985,43395746,43397477,43399126,43400740,43402376,43404100,43405705,43407343,43408998,43410770,43412454,43414074,43415698,43417307,43419032,43420783,43422672,43424391,43426042,43427757,43429569,43431280,43432966,43434692,43436532,43438335,43440025,43441936,43443817,43445694,43447674,43449651,43451607,43453551,43455516,43457425,43459247,43461085,43463054,43465064,43467073,43469072,43471005,43472838,43474805,43476576,43478400,43480374,43482397,43484422,43486412,43488422,43490384,43492303,43494228,43496141,43498047,43499979,43501877,43503827,43505784,43507640,43509469,43511385,43513302,43515183,43517011,43518656,43520281,43522052,43523918,43525731,43527416,43529034,43530632,43532283,43533911,43535520,43537164,43538589,43539959,43541296,43542722,43544148,43545689,43547150,43548537,43549913,43551433,43552991,43554292,43555739,43557287,43558746,43560168,43561779,43563484,43565186,43566938,43568595,43570284,43572012,43573813,43575447,43577178,43578896,43580655,43582374,43584034,43585679,43587367,43589040,43590752,43592416,43594117,43595774,43597481,43599164,43600908,43602549,43604209,43605943,43607575,43609215,43610859,43612764,43614647,43616554,43618467,43620381,43622294,43624184,43626089,43627995,43629836,43631629,43633414,43635222,43637222,43639230,43641231,43643270,43645311,43647338,43649374,43651391,43653420,43655459,43657501,43659550,43661599,43663655,43665703,43667734,43669774,43671796,43673651,43675503,43677398,43679325,43681249,43683120,43684974,43686849,43688394,43689835,43691330,43692803,43694500,43696124,43697663,43699205,43700864,43702427,43703997,43705687,43707134,43708547,43710169,43711766,43713275,43714870,43716477,43717909,43719383,43720821,43722369,43724107,43726034,43727816,43729527,43731209,43732831,43734759,43736616,43738500,43740305,43742086,43743880,43745625,43747452,43749306,43750914,43752740,43754719,43756716,43758707,43760615,43762515,43764415,43766017,43767678,43769425,43771138,43772918,43774659,43776472,43778165,43779848,43781612,43783292,43785006,43786688,43788010,43789544,43791044,43792565,43794060,43795638,43797162,43798670,43800167,43801696,43803206,43804734,43806247,43807800,43809277,43810763,43812267,43813756,43815176,43816453,43817776,43819031,43820531,43822442,43824379,43826279,43828149,43830101,43832037,43833973,43835916,43837587,43838938,43840224,43841555,43842914,43844228,43845537,43846870,43848444,43849932,43851420,43852912,43854547,43856174,43857683,43859310,43860830,43862659,43864280,43865934,43867654,43869018,43870746,43872375,43874025,43875858,43877159,43878385,43879673,43880952,43882249,43883547,43884783,43885995,43887503,43888710,43889715,43890846,43891945,43893223,43894332,43895423,43896707,43898172,43899417,43900694,43901891,43903135,43904370,43905704,43907052,43908623,43910056,43911342,43912650,43914003,43915337,43916633,43917907,43919268,43921208,43922701,43924355,43926112,43927796,43929341,43930826,43932203,43934205,43936133,43937304,43938491,43939617,43940875,43942150,43943188,43945124,43947085,43949011,43950504,43952327,43954152,43955977,43957592,43959364,43961328,43961874,43962478,43962953,43963445,43964043,43964495,43965053,43965456,43966328,43966824,43968151,43969569,43970941,43972197,43973321,43974186,43974669,43975473,43976400,43977801,43979293,43980782,43982234,43983623,43984330,43985447,43986473,43987936,43989357,43990496,43991878,43993167,43994475,43995742,43997638,43999393,44001130,44002878,44004306,44004390,44004805,44005966,44006714,44007243,44007857,44008314,44008956,44009541,44010196,44010885,44012176,44012987,44014097,44015511,44016943,44018375,44019759,44021163,44022832,44024404,44026106,44027683,44029270,44030812,44032540,44034330,44035787,44036847,44037964,44039171,44040429,44041793,44043010,44044310,44045621,44047072,44048656,44050235,44051911,44053601,44055074,44056391,44057845,44059109,44059580,44059605,44059635,44059660,44060492,44061080,44062459,44063160,44064799,44066399,44068072,44069670,44071331,44072486,44074148,44075679,44077251,44078806,44080644,44082565,44084507,44086425,44088377,44090264,44091542,44092408,44093795,44095309,44096383,44097335,44098419,44099670,44101059,44102492,44103952,44105445,44107017,44108514,44110219,44111963,44113562,44115174,44116716,44118243,44119810,44121379,44122874,44124464,44126357,44128410,44130461,44132498,44134453,44136315,44138336,44140344,44142198,44143974,44145919,44147812,44149796,44151801,44153839,44155852,44157890,44159885,44161907,44163906,44165952,44167993,44169877,44171603,44173565,44175564,44177570,44179567,44181376,44183025,44184468,44185668,44186907,44188103,44189843,44191852,44193646,44195364,44197196,44199102,44200960,44202719,44204477,44206230,44208167,44210096,44212076,44214023,44215980,44217985,44219960,44221950,44223655,44225215,44226775,44228314,44229861,44231394,44232942,44234472,44235915,44237311,44238650,44239988,44241272,44242572,44243896,44245209,44246996,44249000,44250997,44252986,44254972,44256971,44258922,44260885,44262891,44264886,44266629,44268331,44269984,44271655,44273330,44275017,44275745,44275953,44276770,44278119,44279413,44280646,44281621,44282684,44283577,44284587,44286004,44287696,44289341,44290944,44292701,44294413,44296021,44297526,44299137,44300696,44302311,44303866,44305454,44306919,44308418,44309659,44310913,44311962,44313248,44314518,44315830,44317053,44318481,44319893,44321466,44323027,44324587,44326048,44327448,44328871,44329918,44330866,44332227,44333803,44335095,44335799,44337108,44338382,44339799,44341320,44342809,44344274,44345623,44346793,44348213,44349717,44351265,44352984,44354762,44356594,44358367,44360186,44361896,44363453,44365101,44366722,44368362,44369916,44371507,44373001,44374574,44376070,44377396,44378703,44380183,44381735,44383250,44384619,44386008,44387395,44388804,44390174,44391118,44391635,44392260,44392719,44393880,44395309,44396901,44398407,44399871,44401286,44402818,44404356,44405857,44407221,44408494,44409610,44410851,44412179,44413639,44415141,44416365,44417394,44417996,44418288,44419710,44421480,44423376,44425155,44426842,44428407,44429588,44430657,44432013,44433559,44435140,44436695,44438269,44439863,44441433,44443018,44444835,44446573,44448411,44450139,44452014,44453785,44455662,44457429,44458897,44460295,44461712,44463068,44464500,44465916,44467514,44469197,44470845,44472390,44473913,44475373,44476885,44478411,44479898,44481373,44483163,44485097,44486765,44488300,44489206,44489931,44490885,44491736,44492905,44494504,44496117,44497778,44499441,44500942,44502543,44503866,44505130,44506407,44507265,44507816,44508705,44509519,44510287,44510893,44511999,44513463,44514376,44514879,44515493,44516001,44517415,44519216,44520613,44521701,44522808,44523845,44525157,44526570,44527836,44528925,44529864,44530755,44532136,44533570,44535034,44536460,44537876,44539342,44540979,44542673,44544428,44546070,44547946,44549839,44551543,44553095,44554280,44555314,44556509,44557666,44558821,44559830,44560845,44561713,44562873,44563856,44565094,44566274,44567126,44567610,44568234,44568831,44569441,44569946,44570540,44571140,44571746,44572254,44572912,44573517,44574141,44574661,44575308,44575896,44576475,44576884,44577428,44577971,44579487,44581405,44582799,44583832,44584961,44585985,44587114,44588140,44589315,44590448,44592062,44593831,44595460,44597184,44598867,44600548,44602218,44603908,44605255,44606433,44607989,44609669,44611349,44613052,44614910,44616789,44617550,44617740,44618113,44618402,44618704,44618895,44619262,44619499,44619796,44619847,44620111,44620136,44620349,44620477,44620762,44621078,44621437,44621638,44622714,44624219,44625757,44627453,44628688,44629812,44630884,44632002,44633183,44634388,44635828,44637301,44638794,44640234,44642049,44643902,44645709,44647414,44649071,44650424,44652068,44653667,44655199,44656584,44658011,44659285,44660577,44662386,44663954,44665287,44666733,44668259,44669705,44671210,44672702,44673935,44675324,44676775,44678209,44679659,44681203,44682709,44684211,44685326,44686563,44687818,44689274,44690440,44691702,44692994,44694117,44695170,44696295,44698343,44700391,44702439,44704487,44706535,44708583,44710631,44712679,44714727,44716775,44718823,44720871,44722919,44724967,44727015,44729063,44731111,44733159,44735207,44737255,44739303,44741351,44743399,44745447,44747495,44749550,44751594,44753501,44755549,44757597,44759645,44761693,44763741,44765789,44767837,44769885,44771933,44773981,44776029,44778077,44780125,44782173,44784221,44786269,44788317,44790365,44792413,44794461,44796509,44798557,44800605,44802653,44804708,44806748,44808600,44810648,44812696,44814675,44816723,44818771,44820748,44822796,44824844,44826892,44828940,44830988,44833036,44835084,44837055,44839103,44841151,44843199,44845247,44847295,44849343,44851322,44853370,44855418,44857466,44859447,44861495,44863543,44865591,44867639,44869619,44871667,44873715,44875763,44877811,44879859,44881907,44883886,44885934,44887982,44890030,44892068,44893971,44896019,44898067,44900115,44902164,44904069,44906117,44908082,44910130,44912095,44914143,44916191,44918239,44920287,44922335,44924383,44926431,44928479,44930527,44932575,44934623,44936671,44938719,44940767,44942815,44944863,44946908,44948929,44950729,44952777,44954825,44956873,44958921,44960969,44963017,44965065,44967113,44969161,44971209,44973257,44975305,44977353,44979409,44981457,44983505,44985553,44987599,44989552,44991416,44993464,44995512,44997560,44999608,45001664,45003632,45005541,45007589,45009637,45011685,45013738,45015768,45017738,45019664,45021712,45023760,45025808,45027856,45029904,45031952,45034000,45036048,45038096,45040144,45042192,45044240,45046288,45048336,45050393,45052441,45054489,45056537,45058585,45060633,45062681,45064729,45066777,45068825,45070873,45072923,45074976,45076967,45078777,45080825,45082873,45084921,45086969,45089017,45091065,45093113,45095161,45097209,45099257,45101305,45103353,45105401,45107449,45109506,45111554,45113602,45115650,45117698,45119746,45121803,45123851,45125899,45127947,45129995,45132043,45134074,45136056,45137749,45139797,45141776,45143824,45145800,45147848,45149896,45151944,45153992,45156040,45158088,45160136,45162184,45164232,45166280,45168328,45170376,45172424,45174472,45176520,45178568,45180616,45182664,45184712,45186760,45188808,45190856,45192904,45194961,45197018,45199066,45201100,45203011,45205059,45207107,45209155,45211203,45213251,45215299,45217347,45219395,45221443,45223491,45225539,45227587,45229635,45231683,45233731,45235779,45237827,45239875,45241923,45243971,45246019,45248067,45250115,45252163,45254219,45256267,45258135,45260183,45262231,45264279,45266327,45268292,45270340,45272388,45274436,45276484,45278425,45280473,45282521,45284569,45286617,45288665,45290713,45292690,45294738,45296786,45298834,45300882,45302930,45304986,45306951,45308999,45311047,45313095,45315143,45317120,45319168,45321216,45323264,45325312,45327360,45329408,45331456,45333504,45335552,45337600,45339648,45341696,45343744,45345792,45347840,45349888,45351864,45353912,45355960,45358008,45360056,45362104,45364152,45366200,45368248,45370296,45372344,45374392,45376440,45378488,45380536,45382584,45384632,45386605,45388653,45390701,45392749,45394797,45396845,45398893,45400941,45402989,45405037,45407085,45409133,45411181,45413229,45415277,45417325,45419373,45421421,45423401,45425449,45427497,45429545,45431593,45433641,45435689,45437737,45439785,45441833,45443881,45445929,45447977,45450025,45452073,45454121,45456169,45458217,45460265,45462242,45464290,45466338,45468386,45470434,45472482,45474530,45476578,45478626,45480674,45482722,45484770,45486818,45488866,45490914,45492962,45495010,45497032,45499064,45501112,45503160,45505208,45507256,45509304,45511352,45513400,45515448,45517496,45519544,45521592,45523640,45525688,45527736,45529784,45531832,45533810,45535858,45537838,45539886,45541862,45543910,45545958,45547948,45549996,45551972,45553949,45555997,45557719,45559681,45561717,45563765,45565768,45567658,45569595,45571631,45573679,45575727,45577653,45579567,45581578,45583634,45585684,45587636,45589540,45591540,45593588,45595642,45597631,45599531,45601514,45603560,45605608,45607632,45609550,45611492,45613517,45615565,45617593,45619519,45621475,45623523,45625571,45627619,45629667,45631715,45633763,45635811,45637859,45639907,45641955,45644003,45646051,45648099,45650072,45652120,45654168,45656216,45658264,45660312,45662360,45664408,45666456,45668504,45670552,45672600,45674648,45676696,45678667,45680715,45682763,45684811,45686859,45688907,45690955,45693003,45695051,45697099,45699081,45701129,45703177,45705225,45707273,45709321,45711369,45713417,45715465,45717513,45719561,45721539,45723587,45725635,45727683,45729731,45731708,45733756,45735804,45737852,45739900,45741874,45743851,45745899,45747880,45749918,45751932,45753910,45755958,45758006,45760054,45762102,45764078,45766126,45768174,45770222,45772270,45774251,45776226,45778201,45780249,45782297,45784345,45786393,45788441,45790489,45792537,45794585,45796633,45798681,45800729,45802777,45804825,45806873,45808921,45810969,45813017,45814997,45817045,45819093,45821141,45823189,45825237,45827285,45829333,45831381,45833429,45835477,45837525,45839573,45841621,45843669,45845717,45847765,45849813,45851861,45853838,45855886,45857858,45859838,45861886,45863861,45865909,45867879,45869927,45871972,45873978,45876026,45878024,45880077,45882056,45884104,45886083,45888131,45890110,45892158,45894136,45896184,45898232,45900280,45902328,45904376,45906424,45908472,45910520,45912568,45914616,45916664,45918712,45920760,45922808,45924856,45926904,45928952,45930928,45932976,45935024,45937072,45939120,45941168,45943216,45945264,45947312,45949360,45951408,45953456,45955504,45957552,45959600,45961648,45963696,45965744,45967717,45969765,45971813,45973791,45975839,45977887,45979935,45981912,45983960,45986008,45988056,45990104,45992082,45994130,45996178,45998226,46000274,46002249,46004297,46006345,46008393,46010441,46012489,46014537,46016585,46018633,46020689,46022737,46024785,46026759,46028807,46030855,46032903,46034951,46036999,46039047,46041021,46043069,46045117,46047165,46049213,46051261,46053309,46055282,46057330,46059378,46061426,46063474,46065522,46067570,46069618,46071666,46073714,46075762,46077810,46079858,46081906,46083954,46086002,46088050,46090033,46092081,46094129,46096177,46098225,46100273,46102321,46104369,46106417,46108465,46110513,46112561,46114609,46116657,46118705,46120753,46122801,46124849,46126824,46128872,46130920,46132968,46135016,46137064,46139112,46141160,46143208,46145256,46147304,46149352,46151400,46153448,46155496,46157544,46159592,46161640,46163696,46165744,46167796,46169822,46171639,46173687,46175735,46177783,46179831,46181879,46183927,46185975,46188023,46190071,46192119,46194175,46196223,46198271,46200319,46202367,46204419,46206467,46208496,46210506,46212529,46214506,46216326,46218193,46220241,46222289,46224337,46226385,46228433,46230481,46232529,46234577,46236625,46238673,46240721,46242769,46244817,46246865,46248913,46250961,46253009,46255057,46257105,46259153,46261201,46263180,46265228,46267276,46269324,46271372,46273420,46275468,46277516,46279564,46281612,46283660,46285708,46287756,46289804,46291852,46293900,46295948,46297996,46300044,46302092,46304140,46306188,46308236,46310192,46312240,46314288,46316336,46318384,46320432,46322480,46324528,46326576,46328624,46330672,46332720,46334768,46336816,46338864,46340912,46342968,46345016,46347001,46349049,46351097,46353145,46355193,46357241,46359289,46361337,46363385,46365433,46367481,46369529,46371577,46373625,46375673,46377721,46379769,46381817,46383865,46385756,46387804,46389852,46391900,46393948,46395996,46398044,46400092,46402140,46404188,46406236,46408284,46410332,46412380,46414428,46416476,46418524,46420572,46422549,46424597,46426645,46428693,46430741,46432789,46434837,46436885,46438933,46440981,46443029,46445077,46447125,46449173,46451221,46453269,46455317,46457339,46459371,46461419,46463467,46465515,46467563,46469611,46471510,46473558,46475606,46477584,46479632,46481680,46483728,46485776,46487824,46489872,46491920,46493968,46496016,46497991,46500039,46502087,46504135,46506183,46508231,46510279,46512327,46514375,46516423,46518471,46520519,46522567,46524615,46526663,46528711,46530759,46532807,46534855,46536903,46538951,46540999,46543047,46545095,46547143,46549191,46551239,46553287,46555335,46557383,46559431,46561479,46563459,46565507,46567555,46569603,46571651,46573699,46575747,46577795,46579843,46581891,46583939,46585987,46588035,46590083,46592131,46594179,46596227,46598275,46600323,46602371,46604419,46606467,46608515,46610563,46612611,46614659,46616707,46618755,46620803,46622851,46624899,46626947,46628995,46630971,46633019,46635067,46637115,46639163,46641211,46643259,46645307,46647289,46649337,46651385,46653433,46655481,46657529,46659577,46661625,46663673,46665645,46667693,46669741,46671711,46673759,46675807,46677778,46679826,46681874,46683922,46685970,46688018,46690066,46692114,46694162,46696210,46698258,46700306,46702354,46704331,46706379,46708427,46710475,46712523,46714571,46716619,46718667,46720715,46722763,46724811,46726859,46728907,46730964,46732946,46734994,46737042,46739090,46741147,46743195,46745243,46747291,46749339,46751387,46753435,46755414,46757462,46759510,46761558,46763606,46765654,46767702,46769750,46771798,46773855,46775903,46777879,46779856,46781904,46783952,46785927,46787975,46790023,46791994,46794042,46796012,46798067,46799985,46802033,46804012,46806060,46808108,46810083,46812131,46814104,46816152,46818124,46820179,46822227,46824275,46826323,46828371,46830419,46832467,46834515,46836563,46838611,46840659,46842707,46844755,46846803,46848851,46850899,46852947,46854995,46857043,46859091,46861139,46863187,46865235,46867283,46869331,46871303,46873351,46875399,46877447,46879495,46881543,46883591,46885639,46887687,46889735,46891783,46893831,46895879,46897927,46899975,46902023,46904071,46906119,46908167,46910215,46912263,46914311,46916359,46918407,46920455,46922503,46924478,46926526,46928574,46930622,46932670,46934718,46936766,46938740,46940788,46942836,46944884,46946932,46948980,46951028,46952998,46954979,46957027,46959005,46961053,46963101,46965149,46967197,46969180,46971228,46973276,46975324,46977372,46979420,46981397,46983445,46985493,46987541,46989589,46991637,46993685,46995733,46997781,46999829,47001877,47003925,47005973,47008021,47010069,47012117,47014087,47016135,47018183,47020231,47022279,47024327,47026375,47028423,47030471,47032519,47034567,47036615,47038663,47040711,47042759,47044738,47046786,47048834,47050802,47052850,47054898,47056866,47058914,47060962,47063010,47065058,47067106,47069154,47071202,47073250,47075298,47077346,47079394,47081442,47083490,47085538,47087594,47089642,47091690,47093738,47095793,47097845,47099899,47101947,47103919,47105639,47107687,47109735,47111783,47113831,47115879,47117927,47119975,47122023,47124071,47126119,47128167,47130215,47132263,47134311,47136359,47138407,47140455,47142503,47144551,47146599,47148647,47150702,47152736,47154616,47156517,47158565,47160613,47162661,47164709,47166757,47168805,47170853,47172901,47174949,47176997,47179045,47181093,47183141,47185189,47187237,47189285,47191333,47193381,47195437,47197485,47199529,47201379,47203427,47205475,47207523,47209571,47211619,47213667,47215715,47217763,47219811,47221859,47223907,47225955,47228003,47230051,47232099,47234147,47236195,47238252,47240300,47242348,47244396,47246318,47248234,47250282,47252330,47254378,47256426,47258474,47260512,47262528,47264501,47266473,47268521,47270569,47272617,47274665,47276713,47278761,47280809,47282790,47284838,47286886,47288934,47290982,47293030,47295078,47297126,47299174,47301155,47303203,47305251,47307299,47309347,47311403,47313377,47315425,47317473,47319521,47321569,47323617,47325583,47327631,47329679,47331727,47333775,47335823,47337871,47339919,47341967,47344015,47346063,47348111,47350159,47352207,47354255,47356303,47358351,47360399,47362447,47364495,47366543,47368591,47370639,47372670,47374631,47376679,47378727,47380775,47382823,47384871,47386919,47388967,47391015,47393063,47395111,47397159,47399207,47401255,47403303,47405351,47407399,47409447,47411495,47413543,47415591,47417639,47419687,47421629,47423677,47425725,47427773,47429821,47431869,47433917,47435965,47438013,47440061,47442109,47444157,47446205,47448253,47450301,47452349,47454397,47456445,47458493,47460541,47462589,47464643,47466691,47468623,47470588,47472636,47474684,47476732,47478780,47480828,47482876,47484924,47486972,47489020,47491068,47493116,47495164,47497212,47499260,47501308,47503356,47505404,47507452,47509500,47511548,47513603,47515625,47517474,47519522,47521501,47523549,47525528,47527576,47529550,47531527,47533575,47535623,47537671,47539719,47541775,47543823,47545715,47547763,47549811,47551859,47553907,47555955,47558003,47559936,47561984,47564032,47566080,47568128,47570176,47572224,47574272,47576320,47578368,47580347,47582395,47584443,47586491,47588539,47590587,47592635,47594683,47596731,47598779,47600758,47602806,47604779,47606675,47608723,47610700,47612748,47614636,47616609,47618657,47620705,47622753,47624801,47626849,47628897,47630945,47632993,47635041,47637089,47639137,47641185,47643233,47645281,47647329,47649377,47651360,47653408,47655456,47657504,47659552,47661600,47663648,47665696,47667744,47669792,47671840,47673888,47675936,47677984,47680032,47682080,47684128,47686176,47688151,47690199,47692247,47694295,47696343,47698391,47700439,47702487,47704535,47706583,47708631,47710679,47712727,47714775,47716823,47718876,47720878,47722926,47724974,47727022,47729070,47731118,47733166,47735214,47737262,47739310,47741358,47743406,47745454,47747502,47749550,47751533,47753589,47755637,47757685,47759733,47761781,47763754,47765810,47767858,47769906,47771889,47773937,47775985,47778033,47780081,47782129,47784177,47786225,47788273,47790321,47792369,47794417,47796465,47798513,47800561,47802609,47804657,47806705,47808753,47810801,47812777,47814825,47816873,47818921,47820969,47823017,47825065,47827113,47829161,47831209,47833257,47835305,47837353,47839401,47841449,47843497,47845545,47847593,47849641,47851689,47853662,47855710,47857758,47859806,47861854,47863836,47865884,47867932,47869980,47872028,47874076,47876053,47878101,47880149,47882197,47884245,47886293,47888341,47890389,47892437,47894485,47896533,47898581,47900629,47902677,47904725,47906773,47908821,47910869,47912844,47914892,47916940,47918988,47921036,47923084,47925132,47927180,47929228,47931276,47933324,47935372,47937420,47939468,47941516,47943564,47945612,47947591,47949639,47951687,47953735,47955783,47957831,47959879,47961927,47963975,47965951,47967999,47970047,47972095,47974143,47976191,47978239,47980287,47982335,47984308,47986356,47988404,47990452,47992500,47994548,47996596,47998644,48000692,48002740,48004788,48006836,48008884,48010932,48012980,48015028,48017004,48019052,48021100,48023148,48025196,48027244,48029292,48031340,48033388,48035436,48037484,48039532,48041580,48043628,48045676,48047724,48049772,48051749,48053797,48055693,48057741,48059789,48061837,48063781,48065829,48067877,48069925,48071894,48073874,48075853,48077901,48079878,48081680,48083654,48085636,48087684,48089661,48091709,48093757,48095805,48097853,48099901,48101949,48104006,48106054,48108074,48110029,48111730,48113778,48115826,48117874,48119922,48121970,48124018,48126066,48128114,48130162,48132217,48134252,48136092,48138140,48140188,48142236,48144284,48146332,48148380,48150428,48152476,48154524,48156499,48158547,48160595,48162643,48164691,48166739,48168787,48170835,48172883,48174931,48176907,48178955,48181003,48183051,48185099,48187076,48189124,48191172,48193220,48195268,48197244,48199292,48201340,48203388,48205436,48207486,48209364,48211412,48213460,48215508,48217556,48219613,48221639,48223463,48225518,48227566,48229614,48231662,48233710,48235758,48237814,48239862,48241910,48243958,48246006,48248054,48250102,48252150,48254198,48256246,48258294,48260342,48262390,48264438,48266486,48268534,48270582,48272630,48274678,48276726,48278638,48280666,48282714,48284762,48286810,48288858,48290906,48292954,48295002,48297050,48299098,48301146,48303194,48305242,48307290,48309338,48311386,48313434,48315482,48317530,48319578,48321626,48323674,48325722,48327770,48329818,48331866,48333914,48334950,48335982,48337618,48339039,48340781,48342094,48343133,48344236,48345615,48347044,48348487,48349963,48351653,48353524,48355404,48357299,48359273,48361061,48362952,48365000,48367048,48369096,48371144,48373192,48375240,48377288,48379336,48381384,48383432,48385480,48387528,48389576,48391624,48393672,48395720,48397768,48399816,48401864,48403840,48405888,48407936,48409984,48412032,48414080,48416128,48418176,48420224,48422272,48424320,48426368,48428416,48430464,48432512,48434560,48436608,48438656,48440704,48442683,48444731,48446779,48448827,48450875,48452923,48454971,48457019,48459067,48461115,48463163,48465211,48467259,48469307,48471355,48473403,48475451,48477499,48479547,48481595,48483573,48485621,48487669,48489717,48491765,48493813,48495861,48497909,48499957,48502005,48504053,48506101,48508149,48510197,48512245,48514293,48516341,48518389,48520437,48522443,48524490,48526538,48528586,48530634,48532682,48534730,48536778,48538826,48540874,48542922,48544970,48547018,48549066,48551114,48553162,48555210,48557258,48559306,48561354,48563331,48565379,48567427,48569475,48571523,48573571,48575619,48577667,48579715,48581763,48583811,48585859,48587907,48589955,48592003,48594051,48596099,48598147,48600195,48602243,48604217,48606265,48608313,48610361,48612409,48614457,48616505,48618553,48620601,48622649,48624697,48626745,48628793,48630841,48632889,48634937,48636985,48639033,48641081,48643062,48645110,48647158,48649206,48651254,48653302,48655350,48657398,48659446,48661494,48663542,48665590,48667638,48669686,48671734,48673782,48675830,48677878,48679926,48681974,48683951,48685999,48688047,48690025,48692073,48694056,48696104,48697643,48698973,48700478,48702128,48703305,48704566,48706163,48707527,48708449,48709251,48710169,48710959,48711839,48712611,48714531,48716579,48716949,48716974,48716999,48718627,48720682,48722215,48722240,48722265,48723160,48724332,48725724,48726572,48728620,48730563,48732567,48734615,48736663,48738711,48740759,48742807,48744736,48746784,48748832,48750817,48752865,48754913,48756914,48758962,48761010,48763058,48765106,48767154,48769202,48771207,48773147,48775090,48777066,48779030,48781001,48783004,48785011,48787019,48789067,48791115,48793163,48795211,48797259,48799155,48801032,48803080,48805128,48807176,48809224,48811226,48813274,48815144,48817192,48819240,48821289,48823305,48825353,48827297,48829345,48831401,48833449,48835497,48837545,48839593,48841641,48843644,48845692,48847740,48849788,48851836,48853884,48855932,48857932,48859980,48861993,48864041,48865913,48867961,48870009,48872057,48874105,48876153,48878201,48880204,48882252,48884300,48886348,48888396,48890374,48892431,48894308,48896356,48898404,48900405,48902290,48904210,48906187,48908163,48910084,48912028,48913972,48916020,48918068,48920116,48922164,48924212,48926260,48928308,48930356,48932339,48934387,48936435,48938434,48940445,48942493,48944465,48946414,48948362,48950304,48952253,48954195,48956092,48958033,48960081,48962129,48964101,48966149,48968197,48970245,48972250,48974298,48976251,48978307,48980355,48982403,48984451,48986499,48988547,48990595,48992643,48994691,48996739,48998787,49000835,49002842,49004890,49006938,49008986,49011034,49013082,49015084,49017132,49019180,49021228,49023276,49025324,49027372,49029337,49031385,49033433,49035481,49037529,49039577,49041625,49043673,49045647,49047652,49049700,49051565,49053613,49055661,49057709,49059757,49061805,49063853,49065901,49067949,49069941,49071989,49074037,49076055,49078102,49080150,49082159,49084162,49086210,49088258,49090306,49092354,49094402,49096450,49098454,49100502,49102550,49104598,49106646,49108694,49110742,49112790,49114838,49116886,49118934,49120982,49123030,49125078,49127126,49129174,49131222,49133270,49135273,49137212,49139131,49141179,49143105,49145100,49147148,49149034,49151082,49152952,49155000,49157048,49159096,49161144,49163149,49165197,49167245,49169293,49171341,49173389,49175402,49177277,49179226,49181226,49183274,49185274,49187098,49188934,49190982,49193030,49195078,49197126,49199174,49201119,49203080,49205128,49206998,49209046,49211094,49213142,49215190,49217238,49219286,49221334,49223382,49225382,49227430,49229478,49231526,49233574,49235622,49237670,49239718,49241766,49243814,49245862,49247910,49249911,49251959,49254007,49256055,49258103,49260151,49262093,49264141,49266189,49268118,49269973,49271554,49273602,49275650,49277698,49279746,49281711,49283759,49285807,49287855,49289797,49291845,49293893,49295839,49297887,49299845,49301893,49303741,49305789,49307728,49309776,49311824,49313570,49315618,49317493,49319541,49321589,49323637,49325685,49327733,49329781,49331744,49333792,49335840,49337888,49339936,49341984,49344032,49346080,49348081,49350129,49352177,49354225,49356273,49358321,49360273,49362321,49364369,49366417,49368465,49370339,49372387,49374435,49376405,49378453,49380347,49382395,49384295,49386343,49388288,49390336,49392342,49394390,49396438,49398486,49400534,49402582,49404630,49406632,49408680,49410688,49412736,49414784,49416832,49418880,49420885,49422933,49424981,49427029,49429077,49431125,49433068,49435116,49437164,49439133,49441181,49443053,49445101,49447149,49449197,49451245,49453249,49455297,49457345,49459393,49461394,49463442,49465490,49467406,49469454,49471411,49473459,49475409,49477351,49479277,49481214,49483262,49485237,49487285,49489333,49491381,49493143,49495146,49497154,49499119,49501167,49503215,49505263,49507311,49509359,49511309,49513357,49515234,49517203,49519098,49521101,49523149,49525197,49527245,49529293,49531341,49533301,49535349,49537360,49539408,49541351,49543235,49545073,49547070,49549118,49551166,49553214,49555262,49557310,49559318,49561198,49563246,49565294,49567342,49569345,49571393,49573441,49575489,49577452,49579500,49581430,49583372,49585420,49587468,49589516,49591520,49593568,49595616,49597664,49599663,49601711,49603759,49605761,49607809,49609857,49611905,49613953,49615962,49618010,49620058,49622106,49624105,49626153,49628201,49630249,49632117,49634165,49636213,49638261,49640309,49642357,49644356,49646404,49648452,49650500,49652500,49654548,49656487,49658535,49660358,49662368,49664361,49666409,49668457,49670210,49672258,49674306,49676354,49678355,49680403,49682451,49684456,49686504,49688501,49690549,49692597,49694645,49696693,49698741,49700789,49702837,49704885,49706872,49708920,49710968,49713016,49715064,49717027,49719080,49721128,49723072,49725120,49727168,49729216,49731264,49733312,49735183,49737231,49739284,49741017,49742962,49745010,49747058,49749106,49751154,49753202,49754512,49756269,49758317,49760365,49762413,49764416,49766464,49768512,49770560,49772559,49774607,49776396,49778444,49780492,49782493,49784353,49786401,49788281,49790329,49792200,49794248,49796296,49798344,49800201,49802189,49804237,49806285,49808333,49810381,49812325,49814373,49816421,49818382,49820430,49822478,49824486,49826430,49828478,49830453,49832501,49834549,49836597,49838546,49840490,49842408,49844456,49846504,49848552,49850600,49852648,49854696,49856692,49858740,49860788,49862836,49864884,49866882,49868930,49870978,49873026,49875026,49877074,49879122,49880341,49882389,49884437,49886485,49888533,49890537,49892585,49894633,49896681,49898685,49900733,49902781,49904829,49906877,49908925,49910932,49912980,49915028,49917076,49919132,49921180,49923228,49925225,49927273,49929321,49931369,49933417,49935419,49937467,49939515,49941563,49943500,49945548,49947596,49949644,49951692,49953700,49955748,49957796,49959844,49961847,49963895,49965834,49967882,49969930,49971978,49974026,49976074,49977762,49979634,49981682,49983621,49985669,49987677,49989676,49991596,49993644,49995692,49997740,49999788,50001664,50003712,50005760,50007808,50009856,50011904,50013952,50016000,50018048,50020096,50022144,50024192,50026240,50028288,50030336,50032384,50034432,50036311,50038359,50040407,50042278,50044335,50046383,50048431,50050305,50052353,50054401,50056449,50058497,50060545,50062593,50064641,50066513,50068384,50070256,50072304,50074175,50075728,50077776,50079777,50081784,50083832,50085880,50087819,50089867,50091831,50093879,50095877,50097925,50099793,50101841,50103840,50105805,50107769,50109817,50111761,50113747,50115795,50117795,50119843,50121891,50123939,50125879,50127927,50129975,50131983,50134031,50136079,50138127,50140083,50142131,50144179,50146071,50148027,50150075,50152123,50154171,50156219,50158220,50160268,50162316,50164364,50166368,50168416,50170464,50172467,50174515,50176563,50178517,50180565,50182516,50184493,50186541,50188589,50190530,50192578,50194626,50196623,50198589,50200637,50202541,50204545,50206593,50208641,50210609,50212620,50214532,50216580,50218628,50220502,50222550,50224598,50226466,50228514,50230562,50232610,50234658,50236706,50238754,50240802,50242850,50244859,50246907,50248955,50251003,50253051,50255053,50257101,50259149,50261197,50263199,50265247,50267156,50269204,50271252,50273300,50275348,50277349,50279287,50281264,50283234,50285277,50287276,50289101,50291149,50293197,50295245,50297293,50299341,50301389,50303437,50305485,50307533,50309581,50311629,50313677,50315725,50317773,50319782,50321830,50323837,50325781,50327829,50329877,50331925,50333973,50336021,50338069,50340018,50342066,50344114,50346162,50348210,50350258,50352306,50354312,50356360,50358408,50360456,50362456,50364504,50366552,50368600,50370648,50372696,50374744,50376792,50378840,50380888,50382936,50384984,50387032,50389035,50391083,50393131,50395179,50397227,50399275,50401323,50403371,50405419,50407467,50409515,50411563,50413611,50415616,50417664,50419712,50421760,50423808,50425856,50427904,50429952,50432000,50434048,50436096,50438097,50440145,50442193,50444241,50446289,50448337,50450385,50452433,50454481,50456529,50458526,50460574,50462622,50464670,50466718,50468766,50470814,50472862,50474910,50476958,50478960,50481008,50483056,50485104,50487152,50489200,50491248,50493256,50495304,50497352,50499400,50501448,50503496,50505544,50507592,50509593,50511641,50513689,50515737,50517785,50519833,50521881,50523887,50525935,50527983,50530031,50532079,50534127,50536135,50538183,50540231,50542279,50544327,50546298,50548343,50550341,50552335,50554383,50556431,50558479,50560351,50562290,50564338,50566321,50568369,50570417,50572465,50574472,50576520,50578568,50580616,50582664,50584712,50586675,50588723,50590771,50592819,50594867,50596915,50598857,50600905,50602953,50605001,50607049,50609053,50611101,50613041,50615089,50617098,50619146,50621194,50623195,50625243,50627291,50629299,50631347,50633395,50635406,50637454,50639502,50641550,50643417,50645465,50647513,50649561,50651609,50653657,50655705,50657753,50659755,50661803,50663851,50665899,50667947,50669995,50672043,50674091,50676139,50678141,50680146,50682151,50684199,50686140,50688188,50690236,50692181,50694229,50696277,50697873,50699921,50701921,50703969,50706017,50708065,50710120,50712168,50714216,50716264,50718312,50720360,50722408,50724456,50726504,50728552,50730600,50732601,50734649,50736697,50738745,50740793,50742841,50744889,50746937,50748985,50751033,50753035,50755083,50757131,50759179,50761227,50763275,50765323,50767371,50769419,50771467,50772828,50774320,50776368,50778309,50780357,50782127,50784175,50786223,50788271,50790319,50792367,50794415,50796387,50798435,50800483,50802531,50804579,50806627,50808675,50810674,50812722,50814770,50816818,50818866,50820914,50822962,50825010,50827022,50829070,50831118,50833166,50835214,50837223,50839271,50841319,50843367,50845415,50847463,50849465,50851513,50853561,50855609,50857611,50859554,50861602,50863650,50865698,50867746,50869794,50871842,50873897,50875945,50877949,50879997,50882045,50884093,50886141,50888189,50890190,50892238,50894286,50896228,50898276,50900324,50902372,50904420,50906468,50908516,50910382,50912430,50914478,50916526,50918574,50920622,50922461,50924509,50926557,50928605,50930653,50932701,50934749,50936797,50938845,50940721,50942769,50944817,50946865,50948738,50950786,50952834,50954882,50956930,50958978,50961026,50963074,50965122,50967170,50969218,50971266,50973314,50975362,50977161,50979199,50981247,50983295,50985343,50987391,50989400,50991448,50993496,50995544,50997592,50999596,51001644,51003692,51005740,51007788,51009787,51011728,51013672,51015720,51017768,51019648,51021696,51023744,51025792,51027840,51029790,51031662,51033229,51035277,51037325,51039373,51041247,51043295,51045343,51047391,51049439,51051487,51053535,51055583,51057587,51059550,51061598,51063601,51065440,51067425,51069473,51071521,51073394,51075442,51077490,51079538,51081586,51083634,51085682,51087685,51089733,51091781,51093829,51095877,51097925,51099926,51101974,51103847,51105895,51107895,51109943,51111815,51113863,51115911,51117959,51120007,51122055,51124103,51126151,51128199,51130247,51132295,51134343,51136344,51138392,51140440,51142488,51144536,51146584,51148632,51150680,51152728,51154733,51156781,51158829,51160877,51162925,51164973,51167021,51169022,51170956,51172972,51174845,51176893,51178941,51180989,51183037,51185085,51187092,51189140,51191188,51193236,51195284,51197332,51199380,51201428,51203431,51205479,51207527,51209575,51211623,51213671,51215719,51217724,51219772,51221820,51223876,51225924,51227972,51230020,51232025,51234073,51236121,51238169,51240217,51242265,51244313,51246316,51248364,51250375,51252423,51254471,51256519,51258567,51260615,51262663,51264711,51266759,51268807,51270855,51272865,51274913,51276961,51279009,51281057,51283105,51285153,51287201,51289249,51291297,51293345,51295354,51297402,51299450,51301498,51303546,51305594,51307642,51309690,51311738,51313749,51315797,51317845,51319893,51321941,51323989,51326037,51328085,51330133,51332181,51334229,51336277,51338325,51340373,51342421,51344420,51346468,51348516,51350564,51352612,51354660,51356659,51358707,51360755,51362803,51364809,51366751,51368623,51370500,51372548,51374596,51376567,51378609,51380657,51382705,51384753,51386801,51388849,51390897,51392945,51394993,51396994,51399042,51401090,51403138,51405186,51407234,51409231,51411279,51413327,51415375,51417378,51419418,51421466,51423514,51425562,51427610,51429609,51431657,51433705,51435667,51437715,51439763,51441736,51443784,51445832,51447880,51449928,51451976,51454024,51456072,51458120,51460168,51462168,51464216,51466264,51468312,51470360,51472408,51474456,51476504,51478552,51480561,51482609,51484657,51486705,51488753,51490801,51492849,51494897,51496945,51498993,51501041,51503089,51505090,51507138,51509186,51511234,51513282,51515330,51517378,51519381,51521429,51523389,51525437,51527485,51529533,51531586,51533610,51535486,51537534,51539590,51541638,51543686,51545734,51547782,51549830,51551878,51553926,51555974,51558022,51560070,51562126,51564174,51566222,51568270,51570210,51572258,51574314,51576362,51578361,51580409,51582414,51584366,51586414,51588462,51590510,51592558,51594606,51596654,51598702,51600758,51602698,51604746,51606794,51608414,51610462,51612510,51614454,51616502,51618550,51620598,51622646,51624694,51626742,51628790,51630838,51632779,51634827,51636875,51638923,51640971,51643019,51644925,51646573,51648621,51650626,51652567,51654615,51656663,51658711,51660759,51662807,51664782,51666782,51668830,51670755,51672808,51674809,51676857,51678905,51680850,51682898,51684946,51686994,51688884,51690932,51692980,51695037,51697085,51699076,51701124,51703127,51705175,51707223,51709113,51710729,51712777,51714776,51716824,51718872,51720928,51722913,51724961,51727009,51729057,51731105,51733089,51735137,51737185,51739233,51741204,51743252,51745300,51747348,51749396,51751444,51753309,51755357,51757405,51759453,51761501,51763549,51765597,51767645,51769693,51771741,51773797,51775845,51777837,51779885,51781933,51783919,51785967,51787965,51790013,51792061,51794109,51796157,51798205,51800253,51802301,51804349,51806397,51808445,51810493,51812541,51814589,51816637,51818685,51820733,51822781,51824829,51826877,51828880,51830928,51832976,51835024,51837072,51839120,51841168,51843216,51845264,51847312,51849360,51851408,51853456,51855504,51857552,51859600,51861648,51863696,51865744,51867792,51869840,51871888,51873936,51875984,51878032,51880080,51882079,51884127,51886175,51888223,51890271,51892319,51894367,51896415,51898416,51900464,51902512,51904560,51906608,51908656,51910704,51912752,51914800,51916848,51918842,51920890,51922938,51924986,51927034,51929082,51931130,51933178,51935226,51937274,51939322,51941370,51943418,51945466,51947514,51949562,51951610,51953658,51955706,51957754,51959802,51961850,51963850,51965898,51967946,51969994,51971992,51974040,51976039,51978087,51980135,51982133,51984181,51986229,51988271,51990117,51992165,51994213,51996100,51998148,52000196,52001995,52003839,52005887,52007935,52009983,52012036,52014088,52016075,52018123,52020171,52022219,52024267,52026262,52028319,52030367,52032415,52034463,52036519,52038567,52040615,52042613,52044661,52046709,52048757,52050805,52052862,52054910,52056966,52059015,52061013,52063061,52065109,52067157,52069205,52071203,52073251,52075289,52077323,52079371,52081366,52083371,52085419,52087467,52089512,52091479,52093527,52095575,52097623,52099671,52101719,52103719,52105767,52107697,52109745,52111741,52113789,52115837,52117885,52119870,52121918,52123966,52125953,52128001,52129990,52132038,52134039,52136087,52138135,52140183,52142231,52144279,52146280,52148328,52150376,52152424,52154472,52156520,52158568,52160616,52162664,52164712,52166760,52168758,52170806,52172862,52174799,52176847,52178895,52180943,52182991,52185039,52187035,52189083,52191131,52193179,52195177,52197225,52199273,52201321,52203369,52205417,52207465,52209513,52211561,52213609,52215657,52217705,52219753,52221801,52223849,52225841,52227889,52229937,52231985,52233981,52236029,52238077,52240125,52242173,52244221,52246269,52248317,52250365,52252413,52254461,52256509,52258557,52260613,52262661,52264619,52266667,52268715,52270763,52272811,52274859,52276907,52278955,52281003,52283005,52285053,52287101,52289149,52291197,52293182,52295230,52297278,52299326,52301374,52303422,52305470,52307518,52309566,52311557,52313605,52315653,52317701,52319749,52321797,52323845,52325841,52327889,52329937,52331985,52333948,52335940,52337988,52340036,52342084,52344132,52346180,52348228,52350276,52352324,52354372,52356420,52358468,52360516,52362564,52364612,52366660,52368708,52370709,52372757,52374805,52376853,52378901,52380949,52382997,52385045,52387048,52389096,52391144,52393192,52395240,52397288,52399336,52401384,52403426,52405386,52407434,52409482,52411530,52413578,52415626,52417674,52419677,52421725,52423773,52425821,52427869,52429917,52431965,52434013,52436061,52438058,52440106,52442154,52444202,52446250,52448298,52450346,52452394,52454442,52456490,52458538,52460560,52462613,52464661,52466709,52468757,52470805,52472853,52474901,52476949,52478997,52481045,52483093,52485141,52487189,52489237,52491285,52493280,52495328,52497376,52499424,52501472,52503520,52505568,52507616,52509664,52511712,52513760,52515816,52517811,52519708,52521756,52523804,52525799,52527847,52529895,52531943,52533991,52536039,52538087,52540135,52542183,52544231,52546279,52548327,52550375,52552423,52554471,52556519,52558567,52560564,52562612,52564660,52566708,52568756,52570804,52572852,52574853,52576901,52578949,52580997,52583005,52585053,52587047,52589095,52591143,52593133,52595181,52597229,52599285,52601336,52603391,52605387,52607435,52609483,52611531,52613579,52615574,52617622,52619670,52621718,52623766,52625814,52627862,52629910,52631958,52634006,52636054,52638102,52640150,52642198,52644246,52646294,52648342,52650343,52652391,52654439,52656487,52658535,52660583,52662631,52664679,52666727,52668775,52670823,52672871,52674919,52676967,52679015,52681063,52682687,52683720,52684814,52685987,52687145,52689123,52689880,52690569,52691757,52693805,52695853,52696949,52696983,52697017,52697051,52697085,52697119,52697153,52697701,52698053,52698544,52699085,52699706,52700395,52701057,52701570,52702172,52702714,52703309,52703824,52704480,52705116,52705694,52706363,52707006,52707723,52708485,52709298,52710082,52710860,52711545,52712666,52713705,52714648,52715570,52716498,52717438,52718404,52719356,52720361,52721357,52722326,52723286,52724100,52725080,52726403,52727574,52728934,52730067,52731393,52732575,52733718,52734863,52736004,52737172,52738331,52739489,52740667,52741816,52742928,52743869,52745192,52746635,52747917,52748744,52749507,52750293,52751237,52752530,52753795,52755134,52756219,52756556,52756653,52756751,52756861,52757072,52757113,52757229,52757276,52757323,52757367,52757411,52757535,52757585,52757784,52757961,52758005,52758047,52758144,52758191,52758239,52758287,52758394,52758442,52758490,52758538,52758586,52758711,52758760,52758809,52758993,52759040,52759087,52759134,52759181,52759228,52759343,52759390,52759507,52759548,52759595,52759642,52759754,52759804,52759846,52759899,52760004,52760054,52760103,52760149,52760192,52760236,52760335,52760381,52760427,52760473,52760519,52760565,52760687,52760733,52760780,52760890,52760937,52761049,52761094,52761139,52761184,52761229,52761334,52761379,52761424,52761465,52761564,52761614,52761664,52761714,52761764,52761806,52761926,52761979,52762029,52762126,52762172,52762215,52762259,52762357,52762403,52762558,52763428,52764623,52764953,52765001,52765707,52766876,52767341,52767390,52767950,52769107,52769719,52770043,52771229,52772443,52773244,52774079,52774998],\"sizes\":[2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1303,1255,1070,979,1610,1108,1477,1597,1100,1002,775,942,953,941,1018,752,912,981,946,956,861,951,807,893,947,836,794,893,808,1261,899,975,919,1133,1126,1023,1286,1073,876,1042,1284,1299,1254,1408,573,509,578,630,589,597,995,924,842,834,523,563,740,681,650,1164,789,655,637,757,671,848,847,1075,1147,566,777,527,546,546,707,724,872,754,680,652,905,1240,745,892,956,923,960,496,1036,659,813,943,1039,909,670,974,260,623,765,981,421,549,920,715,680,557,646,721,900,832,782,644,604,580,1223,1952,1433,1467,1472,1522,1520,1523,1539,1500,1500,1585,1690,1818,1889,1977,2015,2001,2025,1994,2023,2001,1954,1858,1771,1872,1912,1894,1940,2004,1989,1863,1855,1861,1772,1690,1763,1781,1813,1871,1935,1949,2010,2013,1993,1935,1752,1598,1477,1502,1512,1518,1519,1492,1472,1452,1453,1445,1528,2047,1301,1291,1287,1273,1297,1294,1377,1282,1235,1279,1334,1179,1363,1336,1463,1395,1432,1454,1396,1468,1521,1521,1492,1527,1577,1580,1668,1581,1614,1568,1580,1542,1529,1483,1643,1714,1621,1694,1700,1426,1373,1362,1381,1229,1250,1217,1252,1279,1165,1176,1185,1152,1212,1207,1275,1290,1251,2028,1282,1073,1155,1111,1086,987,1063,1129,1068,1166,1095,1198,1211,1357,1347,1491,1511,1592,1562,1543,1628,1523,1383,1494,1611,1522,1524,1521,1398,1465,1339,1337,1346,1333,1283,1421,1428,1539,1526,1469,1494,1340,1219,1146,1011,1017,1004,1197,1154,1163,937,940,1034,954,929,991,1017,1752,1731,1559,1605,1527,1623,1617,1678,1654,1576,1577,1669,1698,1465,1473,1591,1602,1575,1726,1685,1550,1636,1526,1456,1452,1497,1622,1521,1458,1500,1555,1555,1543,1499,1565,1564,1627,1670,1678,1656,1519,1530,1674,1624,1520,1392,1193,1523,1550,1527,1433,1572,1630,1678,1725,1658,1498,1581,1816,1811,1006,1005,983,1061,1069,1117,1102,1096,995,1039,1193,1177,1131,1050,1081,1180,1109,1254,1194,1201,1292,1344,1322,1178,1118,1123,1070,1055,977,968,1084,1076,933,903,905,983,978,1081,1029,987,1075,1024,1001,916,977,1035,1065,1034,1018,1084,1156,1095,1153,978,909,927,1079,2047,1320,1285,1298,1270,1296,1273,1371,1289,1240,1291,1319,1093,1271,1241,1394,1328,1321,1335,1314,1437,1559,1619,1617,1459,1341,1369,1512,1542,1713,1714,1671,1500,1329,1334,1382,1498,1446,1526,1474,1404,1374,1366,1381,1204,1247,1200,1249,1265,1159,1182,1167,1158,1217,1194,1273,1291,1246,2034,1662,1559,1608,1605,1607,1581,1559,1631,1592,1542,1579,1679,1750,1797,1777,1782,1481,1684,1591,1747,1856,1833,1738,1843,1869,1852,1838,1867,1710,1839,1683,1743,1751,1696,1669,1744,1606,1820,1928,1708,1627,1333,1355,1290,1338,1487,1497,1462,1531,1551,1515,1510,1564,1468,1455,1484,1495,1905,1327,825,738,862,949,765,654,917,951,817,839,743,959,1063,1203,1258,1225,1320,1278,1433,1515,1561,1512,1622,1616,1648,1552,1604,1604,1620,1605,1571,1437,1439,1488,1538,1551,1484,1446,1453,1395,1352,1306,1101,1272,1161,1200,1009,1004,1021,1051,986,999,1060,993,966,760,1263,1989,1820,1823,1894,1829,1823,1813,1865,1849,1724,1639,1555,1446,1592,2025,1679,1836,1895,1879,1864,1894,1913,1905,1700,1722,1597,1465,1505,2055,1694,1852,1888,1905,1904,1807,1776,1589,1438,1483,1550,1638,1631,1953,1615,1976,1979,1666,2000,1890,1733,2021,1757,1263,1546,1603,1501,1592,1963,1411,1439,1661,1546,1477,1890,1686,1271,1614,1597,1574,1630,2057,1674,1675,1667,1750,1770,1751,1733,1788,1796,1822,1824,1906,1729,1731,1791,1784,1849,1837,1816,1819,1865,1804,1763,1766,1765,1765,1756,1687,1813,1757,1746,1751,1810,1802,1745,1768,1760,1717,1721,1709,1745,1737,1714,1685,1650,1863,1867,1864,1848,1809,1817,1896,1854,1831,1744,1665,1551,2057,1979,1948,1903,1942,1932,1909,1893,1928,1903,1907,1877,1899,1858,1834,1749,1780,1753,1817,1822,1787,1839,1792,1867,1826,1810,1756,1756,1726,1576,1568,1614,1710,1800,1782,1712,1753,1679,1712,1725,1702,1753,1775,1794,1809,1687,1915,1908,1932,1878,1792,1838,1903,1917,1917,1886,1925,1867,2020,2030,1938,1971,2011,1983,2013,2001,1981,1936,1919,1951,1979,2002,1948,1936,1909,1991,1938,1968,1957,2024,2022,1981,1897,1924,1885,1939,1862,1653,1812,1807,1886,1905,1928,1970,1964,1987,1976,1944,1899,1998,1954,1853,1831,1847,1866,1867,1817,1802,1805,1804,1818,1747,1700,1629,1549,1419,1128,1413,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2057,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1719,1504,1315,1471,1527,1571,1446,1458,1401,1201,1321,1508,1470,1201,1248,1417,1522,1443,1448,1459,1384,1398,1393,1509,1431,1504,1461,1450,1510,1461,1565,1501,1574,1434,1535,1558,1510,1510,1493,1377,1589,1573,1471,1414,1413,1531,1668,1635,1633,1627,1507,1580,1701,1634,1473,1642,1598,1725,1774,1089,1077,1168,1103,981,990,1067,1071,1132,1187,1063,1264,1195,1376,1477,1499,1545,1624,1551,1590,1606,1482,1361,1561,1601,1503,1562,1454,1388,1460,1255,1335,1396,1253,1380,1446,1486,1517,1516,1506,1391,1250,1206,1028,1029,998,1083,1154,1192,1049,842,1023,1025,930,933,984,1242,2013,1037,1118,1180,1093,978,993,1061,1135,1093,1168,1260,1334,1170,1457,1572,1496,1453,1565,1472,1568,1590,1483,1484,1582,1637,1416,1534,1499,1551,1625,1686,1804,1878,1879,1660,1735,1817,1769,1608,1630,1433,1382,1328,1037,1043,1173,1074,1123,1166,1108,887,1048,1095,905,927,989,1084,1985,1619,1505,1531,1542,1560,1519,1498,1551,1520,1498,1533,1625,1698,1778,1757,1744,1473,1684,1546,1719,1844,1797,1637,1836,1750,1851,1791,1782,1503,1877,1672,1772,1737,1612,1554,1669,1564,1790,1907,1681,1608,1321,1312,1242,1306,1429,1471,1455,1450,1483,1444,1458,1506,1408,1380,1428,1436,1893,1883,1672,1676,1742,1781,1737,1753,1754,1781,1829,1818,1862,1849,1763,1758,1779,1789,1829,1827,1797,1884,1821,1777,1750,1751,1742,1764,1696,1747,1806,1717,1770,1741,1852,1765,1773,1753,1739,1733,1701,1728,1757,1721,1713,1646,1764,1843,1890,1852,1832,1817,1888,1903,1862,1795,1673,1612,1252,1298,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1896,1191,1366,1376,1447,1494,1545,1486,1474,1432,1496,1455,1456,1453,1331,1382,821,860,1120,1309,1559,1635,1810,1836,1841,1869,1844,1743,1744,1398,1780,1789,1855,1882,1832,1808,1799,1801,1631,1400,1131,1001,1142,1382,1117,1345,1296,1123,1254,1241,1429,1511,1486,1487,1408,1389,1391,1455,2048,1407,1406,1485,1576,1462,1487,1555,1497,1468,1532,1634,1581,1411,1630,1648,1643,1712,1792,1730,1674,1691,1584,1583,1504,1573,1606,1589,1568,1621,1635,1585,1556,1555,1651,1607,1634,1613,1621,1575,1567,1625,1645,1601,1571,1230,1228,1491,1511,1400,1391,1464,1553,1605,1614,1423,1393,1492,2033,1477,1449,1367,1414,1370,1387,1459,1453,1416,1429,1486,1485,1097,1496,1539,1552,1549,1696,1641,1535,1615,1500,1473,1481,1576,1514,1541,1448,1522,1537,1544,1472,1483,1616,1491,1595,1552,1593,1555,1568,1508,1552,1427,1390,1147,941,1313,1359,1342,1218,1416,1468,1524,1559,1385,1304,1396,1849,1794,1680,1681,1664,1793,1751,1755,1720,1652,1691,1799,1810,1519,1533,1676,1669,1625,1789,1761,1604,1703,1616,1534,1529,1548,1685,1609,1498,1564,1607,1646,1658,1607,1666,1705,1714,1735,1767,1706,1603,1578,1719,1658,1572,1420,1263,1661,1692,1668,1565,1687,1726,1770,1836,1765,1597,1669,1861,1600,570,581,629,683,684,702,866,1003,1049,1028,857,1383,1461,1618,1655,1350,1282,1486,1660,1664,1803,1620,1574,1694,1681,1651,1787,1549,1637,1729,1726,1721,1780,1654,1628,1688,1761,1723,1751,1723,1377,1464,1313,1185,1211,1470,1312,1190,1252,1252,1414,1512,1551,1501,1549,1611,1597,1211,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2055,2031,2012,2043,2053,2057,2055,2048,2051,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2051,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2047,2017,2029,2050,2057,2048,2048,2053,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2019,2021,2050,2054,2056,2048,2052,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2050,2016,2025,2040,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1251,1368,1231,1128,1067,1049,1164,1183,972,1194,1105,1214,1096,1102,1226,1120,1099,1127,1125,1158,1208,1210,915,908,922,862,1016,991,544,970,830,849,837,338,335,349,1069,1184,1417,1453,1412,1442,792,1140,1135,905,941,779,1233,1234,1363,1216,1037,1111,1039,1147,1151,1076,1196,1078,1322,1036,1102,1184,1081,1140,1125,1109,1141,1227,1263,886,862,927,992,942,906,668,981,810,747,625,337,336,340,1231,1253,1484,1442,1461,1432,862,1063,1057,892,872,822,1981,664,45,43,58,70,127,146,199,171,192,251,230,350,775,1019,996,1064,1245,1528,1606,1607,1677,1624,1771,1790,1753,1525,1562,1602,1662,1654,1707,1768,1765,1582,1672,1597,1613,1641,1471,900,1004,906,724,454,218,172,130,125,148,138,109,80,49,45,44,45,1158,1238,140,181,239,207,247,434,380,356,391,377,288,420,760,960,876,1032,1116,1445,1660,1718,1813,1748,1850,1832,1816,1680,1714,1693,1752,1866,1846,1895,1856,1763,1819,1917,1873,1812,1891,1033,992,876,812,713,429,374,376,318,398,370,361,150,170,155,214,172,716,1926,1236,1329,1276,1182,1395,1399,1354,1409,1387,1375,1440,1477,1391,1426,1414,1468,1483,1387,1492,1455,1349,1376,1390,1379,1216,1118,1307,1387,1305,1383,1375,1353,1301,1400,1415,1280,1352,1425,1514,1431,1495,1415,1342,1370,1400,1455,1441,1444,1379,1381,1276,1368,1435,1295,1153,1184,1206,1698,1015,1968,984,1210,1108,1474,1326,1544,1353,1096,838,1625,1194,47,45,44,458,1026,1065,1010,1341,1510,1435,1445,1849,1801,1712,1692,1664,1095,1013,1503,1730,1773,1852,1728,1815,1806,1771,1643,1647,1659,1832,1867,1844,1876,1856,1735,1896,1890,1867,1862,1841,1616,1591,1511,1708,1525,1301,1240,1332,1177,1103,1066,723,649,48,49,47,435,686,1104,800,733,949,1355,1260,1222,1128,1010,997,446,837,694,707,721,686,938,942,750,904,852,974,839,684,660,1011,873,927,879,958,509,835,655,708,760,767,780,762,920,771,738,771,843,839,819,881,870,954,926,770,859,825,803,1053,812,849,1585,1492,1495,1473,1672,1601,1512,1631,1576,1452,1498,1587,1613,1582,1440,1742,1292,1509,1522,1640,1598,1396,1667,1396,1702,1850,1443,1483,1289,1076,1240,1384,1344,1042,1124,1249,1061,1160,1225,1264,1260,1089,792,859,922,1703,1553,1386,1441,1366,1284,1390,1187,1255,1359,1309,1203,1114,954,878,625,1057,1842,1549,1477,1512,1389,1286,1391,1169,1242,1319,1314,1179,849,844,684,834,1898,1459,1509,1423,1448,1321,1295,1336,1161,1302,1354,1317,1171,1046,933,836,653,1158,1832,1425,1497,1431,1476,1528,1518,1337,1169,928,821,772,892,869,823,1848,1432,1489,1424,1441,1289,1284,1301,1182,1334,1358,1286,1140,981,951,718,699,1745,1595,1492,1371,1106,1239,1496,1414,1274,932,1016,1461,1744,1605,1563,1357,1227,1194,1495,1355,1229,1075,1270,1251,1349,898,1292,1703,1802,1783,1820,1662,1569,1429,1868,1913,1756,1789,1935,1747,1233,1329,1292,1356,1457,1527,1847,1244,1460,1292,1355,1449,1605,1276,853,940,1290,1737,960,864,974,1822,1295,1376,1684,1577,1533,1759,1664,1830,1181,1560,1745,1520,1658,1908,1874,1472,1286,1632,1680,1553,1777,1921,1923,1330,1362,1669,1657,1608,1839,1909,1917,1270,1404,1680,1690,1531,1773,1905,1893,1382,1441,1672,1662,1512,1739,1863,1877,1313,1407,1709,1544,1559,1759,1736,1764,1189,1572,1729,1516,1656,1774,1872,1331,1361,1668,1611,1519,1741,1777,1810,1195,1515,1742,1532,1621,1844,1825,1558,1648,1519,1596,1519,1600,1628,1700,1496,1583,1616,1459,1579,1556,1576,1571,1460,1471,1541,1470,1425,1451,1152,1088,1215,1384,1284,1177,1338,1642,1553,1302,1263,1420,1395,1382,1211,1507,973,1367,1719,45,48,49,45,38,110,436,705,760,874,946,983,972,1030,949,1182,1102,1266,1348,1159,1301,1319,1172,1215,1085,1026,1210,1023,1218,1165,1031,900,931,787,650,700,624,276,45,44,45,48,49,1489,745,743,848,1126,1306,1240,947,1034,997,1048,710,752,774,1002,966,1139,1199,1100,1182,1261,1221,1217,1366,1382,1361,1346,1303,1323,1185,936,778,533,531,538,806,906,785,801,931,1051,939,884,1027,1406,1563,1194,1291,1331,1469,1443,1465,1637,1771,1798,1820,1826,1776,1728,1711,1610,1699,1750,1610,1648,1613,1671,1552,1476,1659,1667,1577,1572,1569,1607,1561,1418,1157,1091,1399,1619,1521,1574,1548,1453,1355,1436,1453,1969,723,752,1060,1080,1160,1307,1409,1312,1271,1554,1430,1256,754,914,1210,1293,1395,1242,1215,1238,1124,1141,1169,1209,1325,1194,1273,1426,1229,1275,1382,1354,1322,1295,1272,1239,1181,937,1000,1192,1109,1291,1159,1724,575,1402,1577,908,1642,823,1637,1162,1974,1359,936,653,1611,1793,794,888,785,1074,1084,1021,992,1017,1187,1325,1577,1657,1644,1639,1508,1340,1405,1522,1686,1619,1703,1638,1631,1635,1574,1462,1526,1630,1827,1855,1864,1846,1764,1770,1484,1400,1349,1359,1350,1244,1029,629,944,1198,1121,1190,899,1270,840,965,1186,999,950,1028,973,1018,968,997,985,1015,1006,949,1012,1014,1012,936,976,995,1013,951,1013,1010,1015,1006,954,1028,1012,1010,952,1017,1013,1023,953,1022,1019,1012,1292,1061,918,888,1124,858,1213,1280,1456,600,627,586,743,660,666,628,908,1168,1201,821,996,824,802,823,821,798,925,896,907,905,879,750,962,780,965,997,979,913,985,599,727,646,659,744,797,898,865,807,875,790,836,803,1005,751,1413,1537,2048,1208,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1951,1883,1700,1695,1752,1700,1750,1848,1903,2025,1140,48,49,45,38,45,48,49,45,38,45,48,49,655,875,1390,1425,1520,1558,1469,1555,1510,1562,1687,1698,1703,1716,1721,1681,1656,1679,1578,1642,1603,1622,1515,1294,1276,1181,1199,996,515,372,236,154,91,48,47,45,44,45,48,47,45,44,45,48,694,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1611,1273,1168,1188,1277,1141,1166,1168,1205,1238,1203,1304,1180,1304,1372,1329,1664,1616,1525,1453,1384,1374,1591,1517,1395,1477,1682,1568,1481,1483,1524,1555,1314,1439,1393,1458,1451,1356,1185,1340,1266,1274,1218,1048,927,1009,1050,1114,1019,799,730,673,869,728,592,654,635,1367,1869,1300,1049,1090,1031,1118,1317,1377,1146,1228,1200,1304,1302,1368,1406,1515,1750,1746,1661,1786,1803,1590,1643,1386,1572,1324,1575,1656,1496,1410,1606,1576,1614,1562,1673,1578,1470,1308,1356,1295,1178,1116,1022,996,1038,913,951,1020,1027,1052,963,866,721,640,368,524,382,823,1846,697,688,657,652,676,671,695,648,682,661,680,698,955,1534,1609,1500,1624,1615,1658,1565,1519,1491,1213,888,1001,1517,1442,1540,1517,1487,1494,1423,1363,1259,1006,984,1373,1515,1476,1420,1499,1422,1267,1106,731,689,724,676,629,672,716,686,657,643,680,662,718,2048,738,645,696,661,702,683,644,684,694,655,672,667,721,1173,1614,1606,1612,1724,1702,1600,1556,1487,1423,1285,1400,1373,1251,1268,1314,1364,1379,1189,1156,1562,1678,1672,1616,1658,1614,1540,1449,1190,1072,787,804,679,656,666,676,695,692,665,661,666,718,660,664,1683,1400,1678,1470,1754,1644,1416,1486,1807,2024,999,360,529,637,652,730,859,842,966,1120,1049,1146,1326,1488,1508,1606,1562,1578,1499,1481,1432,1448,1435,1429,1491,1491,1430,1454,1418,1302,1367,1384,1420,1601,1623,1561,1459,1339,1123,1191,1291,1219,1250,1262,1160,1131,1045,929,1003,1044,1010,987,883,848,702,679,392,1091,1428,302,479,529,679,707,816,862,930,993,979,1113,1237,1328,1484,1630,1689,1726,1667,1635,1525,1395,1403,1298,1319,1355,1416,1474,1383,1454,1492,1419,1477,1430,1449,1452,1509,1681,1653,1559,1381,1305,1269,1244,1223,1175,1196,1194,1066,1076,1076,1015,958,780,724,665,525,765,1910,284,422,568,673,703,778,849,891,1037,1075,1009,1319,1548,1478,1463,1579,1531,1454,1302,1270,1339,1386,1321,1387,1391,1424,1351,1252,1393,1376,1376,1325,1324,1312,1297,1353,1514,1564,1608,1448,1475,1431,1357,1207,1222,1240,1197,1169,1077,1042,985,941,868,826,665,513,335,1732,1636,1589,1666,1485,1776,1585,1468,1557,1497,1621,1492,1879,1230,1210,1170,1737,1832,1291,1554,1681,1157,2048,1962,2048,1963,2006,1992,2036,1972,2048,2048,1962,1852,1376,1683,1698,1714,1492,1715,1848,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2040,1484,969,900,797,830,972,935,890,784,989,675,934,986,921,904,859,907,941,743,941,833,1097,1211,852,793,892,1181,1159,998,1187,991,612,832,1360,1268,1275,1331,721,625,620,588,542,572,989,924,902,692,771,528,724,573,677,737,1063,879,598,692,722,604,1115,962,990,994,637,696,510,573,603,701,675,907,656,697,772,851,1234,768,913,945,930,872,725,945,744,769,860,998,975,743,773,328,560,833,1039,300,576,963,668,720,570,613,687,876,899,776,615,654,573,1599,1706,1697,1467,1412,1423,1367,1543,1653,1931,1751,1789,1458,1459,1409,1429,1549,1774,2000,1625,1641,1729,1624,1624,1696,1752,1798,1792,1746,1729,1657,1258,1194,1215,1473,1600,1609,1716,1768,1739,1761,1672,1757,1708,1753,1651,1750,1668,1760,1777,1640,1771,1804,1683,1757,1777,1763,1646,1581,1627,1416,1298,1314,1391,1522,1534,1618,1637,1556,1604,1639,1532,1583,1642,1610,1713,2042,1408,1403,1485,1540,1460,1478,1544,1474,1482,1536,1633,1578,1406,1637,1672,1648,1717,1775,1726,1678,1685,1578,1588,1517,1580,1610,1592,1564,1630,1639,1586,1550,1558,1647,1619,1646,1617,1619,1571,1561,1618,1650,1593,1574,1218,1245,1479,1498,1410,1385,1472,1565,1618,1612,1463,1403,1496,2045,1374,1222,1226,1245,1230,1264,1237,1249,1242,1290,1305,1383,1470,1286,1286,1296,1306,1322,1309,1279,1233,1282,1281,1260,1264,1251,1232,1258,1259,1242,1234,1184,1213,1242,1226,1249,1244,1247,1269,1250,1270,1245,1293,1305,1317,1570,1295,1291,1312,1331,1310,1293,1252,1251,1296,1270,1224,1809,1948,1728,1793,1793,1789,1791,1782,1779,1788,1776,1747,1725,1734,1698,1695,1648,1636,1631,1601,1647,1636,1596,1591,1710,1712,1683,1715,1779,1740,1804,1726,1764,1754,1746,1698,1596,1711,1692,1681,1666,1667,1676,1755,1722,1707,1721,1746,1745,1767,1783,1742,1771,1743,1756,1742,1753,1779,1342,1117,1567,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2056,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1806,654,569,558,614,621,646,611,592,600,566,656,1269,695,521,588,640,561,376,412,482,1675,1744,1433,1033,642,1351,1351,1251,1647,964,1161,1226,1763,1347,1060,1322,482,406,467,466,539,476,513,437,344,300,276,308,376,1509,2022,1644,1723,1475,1788,969,1070,840,920,1105,1021,1017,1116,1190,717,1079,944,870,1095,1224,881,1306,1096,1089,796,1091,1162,1043,1240,984,958,881,1327,634,1094,1097,1272,1024,1078,1032,904,1074,1088,1082,917,1040,1102,364,312,311,793,1012,966,803,922,1576,1232,1659,1255,2054,1578,1487,1512,1603,1621,1585,1591,1622,1675,1608,1633,1647,1648,1657,1635,1631,1610,1648,1693,1729,1672,1696,1772,1778,1734,1649,1750,1777,1807,1772,1829,1900,1913,1875,1899,1871,1837,1777,1843,1800,1796,1825,1765,1823,1777,1780,1629,1537,1632,1639,1577,1507,1458,1559,1564,1662,1649,1931,1696,1431,1491,1501,1549,1445,1530,1505,1424,1460,1594,1638,1427,1536,1675,1702,1666,1772,1781,1632,1728,1607,1582,1546,1508,1596,1610,1574,1614,1612,1619,1590,1549,1563,1610,1645,1589,1640,1564,1573,1573,1642,1629,1571,1417,1154,1407,1503,1475,1365,1487,1512,1590,1611,1537,1389,1472,1763,1629,536,675,519,598,757,788,645,970,982,1057,1089,938,1235,1234,1275,1322,1333,1379,1390,1394,1419,1439,1343,1404,1540,1482,1424,1411,1399,1180,931,1022,1009,1254,1288,1263,1060,1126,1000,908,1007,1024,814,1002,885,813,812,853,870,685,421,829,635,696,731,588,778,2025,699,765,814,954,988,1072,1093,1114,1109,1156,1027,883,759,793,1217,1297,1390,1481,1462,1493,1493,1496,1338,1547,1563,1590,1537,1581,1623,1713,1657,1601,1489,1580,1503,1535,1476,1521,1350,1292,1271,1126,985,991,1093,1070,1062,1097,1189,1205,1195,1029,930,780,805,828,742,744,1423,1806,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2031,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1460,1327,1273,1087,931,347,765,918,1102,1083,1062,1029,523,1242,1569,1527,1319,1463,1327,1408,1333,1072,1145,1174,907,1765,1280,1342,1281,1200,1202,1218,1133,1237,1474,1435,1375,1295,1301,1230,1306,1463,1532,1659,1573,1578,1611,1537,1559,1596,1514,1531,1498,1458,1406,1371,1357,1595,2054,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2048,2054,2038,2041,2028,2029,1896,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1427,1381,1432,1400,1372,1392,1469,1467,1524,1655,1649,1507,1454,1416,1298,1575,1670,1722,1735,1641,1629,1487,1450,1589,1636,1632,1666,1658,1581,1527,1436,1600,2012,2049,2048,1991,2048,2012,2020,2038,2048,2020,2048,1991,2041,2048,2013,2048,2055,2041,2056,2048,2028,1941,1913,2048,2043,1824,1527,1598,1591,1577,1584,1571,741,239,210,238,213,303,332,220,229,223,220,425,1405,1751,1335,1280,1305,1291,1089,1151,1160,1334,1173,1220,1309,1097,1178,2048,1586,661,1514,2048,1010,713,1760,1960,884,959,2048,1564,622,1146,1011,876,869,921,984,933,882,762,971,827,727,977,940,1058,993,915,820,897,926,1107,954,1062,1060,968,839,1243,894,1039,1175,675,715,437,463,1027,936,952,795,525,336,339,346,365,363,527,506,946,1215,1073,998,1282,1366,1551,1532,1280,1352,1044,1219,1531,1265,1274,1191,1269,1396,1433,1518,1464,1175,1059,1189,1311,1414,1400,1554,1484,1074,1188,1146,1276,1479,1449,1568,1463,1013,1159,1121,1427,1389,1494,1535,1287,1096,1115,1179,1457,1449,1530,1491,980,1252,1118,1403,1303,1399,899,635,607,658,663,649,666,641,640,971,950,850,694,657,969,939,823,641,912,829,911,471,638,765,604,678,826,704,815,678,864,478,656,656,421,781,641,625,706,650,816,675,486,558,737,703,505,472,693,432,450,581,565,639,987,451,425,940,901,1030,1144,498,465,516,686,735,981,668,630,626,635,916,1094,1026,1010,582,506,913,788,614,626,684,831,715,333,561,742,713,924,676,1089,670,881,797,837,891,890,830,857,912,874,871,850,948,711,801,864,844,892,817,1023,672,980,958,973,965,960,949,959,975,967,951,960,954,937,893,889,875,1128,782,832,589,818,928,833,785,816,808,636,799,831,883,718,798,740,764,829,674,603,733,1348,696,765,1568,1752,1857,1735,1997,1862,2048,2048,2048,1776,1366,1671,1763,2052,2048,1863,1796,2048,1877,1757,2051,2048,2048,1971,1843,1908,1946,1818,1953,2012,1808,1939,1320,1157,598,656,491,1808,2057,1943,1566,1394,1217,1140,1294,2001,1834,1261,1261,1063,1083,1715,1446,1415,1061,500,143,433,1965,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2008,1934,1368,2048,2048,2057,2048,2056,2048,2056,2048,676,38,2047,2023,2048,2048,1999,1358,1953,1986,2048,1912,2001,2048,2048,2048,2048,2028,1862,2048,2048,1904,2048,2020,2038,2056,2030,2052,2048,2027,1804,1431,1733,1887,2048,2048,2048,2048,2056,2048,2048,2048,1032,1049,1153,1121,1507,1082,1704,1472,1172,1566,1215,1296,1061,1100,1069,965,1202,1165,1552,1857,1922,1896,1887,1913,1319,1046,1018,1112,1123,1758,1157,1034,1024,1160,1415,1001,1085,1283,1213,1312,1056,1758,2044,2048,1974,2030,1980,2048,2035,1972,2048,1975,2048,2033,1968,2034,2043,2048,2033,2028,2048,2057,2031,2028,2048,2055,2038,1980,2056,2033,1979,2050,2057,1979,2048,2048,1972,2036,2048,1981,2042,2057,1970,2048,2057,1990,2052,1978,2048,2055,2048,2055,1992,2055,2048,2057,2048,2048,2048,2048,2022,1935,2048,2048,2048,2048,2048,2048,2048,2048,2048,1922,2048,2048,2048,2048,2048,2048,2048,2048,1901,2048,2048,2048,2048,2048,2048,2048,1896,2048,2048,2048,2048,2048,2048,1911,2048,2048,2048,2048,2048,2048,2048,1891,2048,2048,2048,2048,2048,2048,2048,1899,2048,2048,2048,2048,2048,2048,2048,2048,2048,1710,1795,1677,1645,1873,1205,915,1893,1998,2027,2048,1969,1984,2029,1830,1950,2007,2002,1966,2018,2038,1379,1336,1518,1437,1318,1933,1268,1143,1135,910,1461,1519,1494,1487,1468,639,710,700,719,728,667,654,632,466,561,534,1213,1861,1689,1705,1688,1693,1873,1717,1737,1755,1278,841,1818,1660,1559,1477,1490,916,538,248,444,448,471,300,614,1629,1705,1689,1684,1795,1813,1807,1573,1404,1650,1453,1480,1516,660,484,480,534,393,380,484,521,527,936,1864,1667,1674,1684,1717,1876,1792,1737,1283,1555,1704,1484,1470,1486,1493,911,643,654,568,589,495,621,444,633,464,561,489,382,836,1979,1700,1681,1677,1667,1695,1821,1877,1713,1682,1771,1182,1319,1678,1727,1495,1482,1481,1213,585,597,590,576,565,623,587,529,607,537,538,1287,1882,1670,1678,1661,1690,1708,1931,1717,1690,1703,1227,925,1786,1663,1523,1490,1494,1409,592,575,563,506,426,542,577,595,525,405,460,1121,1824,1685,1690,1670,1647,1838,1761,1751,1684,1506,801,1868,1662,1531,1476,1271,389,537,432,396,526,496,450,595,1860,1652,1703,1660,1858,1662,1708,1528,1280,1576,1514,1476,1458,1487,1487,1410,670,616,516,586,672,545,614,645,534,593,720,701,596,749,674,576,641,621,657,530,755,1993,1763,1660,1716,1672,1660,1692,1713,1708,1696,1856,1855,1746,1729,1684,1832,1834,1784,967,701,894,1803,1834,1668,1819,1591,1479,1470,1469,1464,904,463,450,554,549,611,595,566,479,488,568,517,553,601,778,2016,1690,1698,1682,1689,1689,1673,1891,1766,1769,1785,1794,1468,675,1161,1999,1705,1707,1542,1485,1494,1471,1482,660,630,675,632,641,553,486,565,642,639,411,521,475,482,484,1753,1823,1689,1686,1694,1705,1706,1722,1978,1694,1690,1798,1819,1571,770,1428,1932,1731,1589,1486,1496,1483,1442,620,535,625,611,637,550,520,266,242,184,228,247,197,1429,1986,1724,1677,1707,1711,1723,1714,2012,1804,1722,1774,1783,1751,1094,1641,1628,1581,1451,1124,669,625,665,651,1597,1683,1747,1739,1224,1622,1459,1470,1263,544,562,570,514,447,494,446,510,1023,1821,1658,1684,1652,1864,1687,1696,983,1548,1707,1483,1468,1467,1370,581,587,604,576,564,571,586,412,559,597,554,1675,1722,1679,1687,1688,1691,1869,1687,1770,1741,813,1471,1839,1584,1465,1466,1265,603,580,331,469,531,436,287,296,382,535,1765,1723,1684,1677,1621,1663,1869,1725,1692,1553,792,1829,1709,1463,1448,1435,997,262,318,345,418,449,466,318,332,442,437,399,1632,1683,1633,1643,1672,1649,1857,1723,1641,1689,1067,1668,1556,1483,1502,630,503,497,533,571,644,619,637,494,1268,1762,1675,1655,1676,1874,1648,1686,1745,846,1838,1643,1461,1482,1483,1454,598,494,572,505,609,590,626,430,431,518,465,478,426,1859,1755,1666,1683,1679,1683,1670,1941,1675,1650,1723,1722,758,1429,1794,1727,1440,1478,1491,1471,1485,1498,1487,1497,1479,962,643,755,677,541,670,486,739,551,609,482,677,691,619,628,658,609,626,303,688,628,694,520,386,615,545,302,283,600,2057,2026,1761,1727,1711,1692,1698,1666,1691,1693,1677,1664,1701,1690,2000,1932,1669,1743,1673,1657,1704,1717,1716,1661,1600,782,807,1372,1872,1833,710,644,998,231,1660,1651,1659,1509,1507,1496,1516,1507,1504,1484,1480,1490,1475,1070,711,817,762,611,759,679,700,771,666,565,721,668,619,665,669,754,657,662,596,490,538,518,358,240,366,520,577,389,309,252,120,1086,2056,1951,1820,1691,1695,1709,1676,1684,1686,1711,1643,1684,1663,1660,1696,1692,1867,2048,1813,1757,1730,1716,1713,1664,1692,1669,1623,1709,1734,1382,937,929,1832,1894,1699,1785,1793,1611,1488,1481,1478,1492,594,525,541,543,465,557,416,483,391,553,61,582,587,1007,1953,1666,1685,1661,1684,1698,1850,1738,1724,1679,1719,1331,1065,1795,1755,1462,1444,1460,1479,1511,1501,1480,1469,1459,617,656,615,640,531,640,687,685,674,612,495,662,629,696,550,699,635,460,582,624,606,424,491,603,1250,2024,1855,1692,1672,1682,1694,1705,1710,1687,1650,1700,1773,2050,1722,1666,1662,1692,1731,1722,1738,1655,872,1038,1800,1668,1513,1654,1630,1537,1471,1461,1489,1483,1492,719,507,490,535,705,627,701,597,686,681,578,451,595,716,695,441,391,1413,1990,1673,1664,1670,1677,1716,1691,1672,1893,1804,1682,1698,1808,1744,1764,1134,1454,1764,1857,1576,1482,1503,1476,1506,1494,1485,1474,1507,1499,1509,1507,1498,803,635,699,579,634,621,527,636,633,668,625,567,612,593,578,532,614,545,480,586,643,365,601,589,630,585,556,477,624,565,525,580,631,478,561,416,472,538,518,569,1250,2039,2041,1981,1716,1713,1717,1705,1727,1685,1714,1706,1722,1705,1726,1698,1715,1702,1719,1716,1709,1918,2048,1854,1686,1731,1715,1691,1678,1739,1734,1661,1751,1742,1786,1534,914,877,888,904,1660,1715,1629,1559,1561,1534,1512,1033,627,1729,1768,1760,1689,1478,1477,1482,1483,1327,657,686,632,563,450,363,385,504,233,459,516,421,690,1991,1723,1680,1677,1683,1670,1677,1954,1742,1738,1717,1724,1031,1624,1754,1544,1461,1478,919,494,512,414,404,325,414,361,679,1865,1673,1673,1677,1887,1730,1729,1521,1416,1652,1454,1482,1461,1472,1059,583,593,602,651,523,562,600,628,381,479,405,532,313,1397,1841,1646,1664,1668,1661,1689,1667,1928,1673,1712,1696,1347,435,1054,1431,1321,1616,1522,1486,1399,454,136,458,336,310,277,307,442,1730,1640,1646,1653,1810,1650,1630,881,1567,1508,1446,1469,607,584,392,463,519,468,747,1807,1663,1655,1818,1735,1083,1662,1507,1493,1474,1480,1457,1472,1485,915,622,605,676,592,486,492,526,602,358,539,421,543,472,479,401,374,510,254,877,1932,1817,1654,1680,1689,1694,1680,1659,1666,1661,2002,1705,1709,1781,1710,1666,1648,1116,817,1454,1628,1477,1673,1671,1516,1481,1488,1481,794,456,312,528,451,469,260,466,547,451,418,345,355,511,1904,1709,1654,1658,1653,1650,1671,1942,1660,1694,1668,1664,636,1056,1525,1718,1542,1482,1326,492,520,369,141,579,378,521,1798,1705,1693,1843,1785,1751,1053,1711,1984,2056,2048,2038,2053,1738,1600,1557,1406,989,797,853,773,837,913,1351,2007,2010,1898,1913,1604,1177,1235,1328,1394,1343,813,1409,737,722,1196,1142,1035,1090,993,1116,1008,987,899,1081,1113,1087,1021,777,952,997,898,879,912,824,994,922,944,1055,1008,971,1119,1026,936,888,836,982,994,839,1028,929,936,939,869,1009,1038,973,1078,858,965,1108,1029,1030,988,1024,1081,1083,1102,1171,1119,1148,1133,1136,1081,1156,1139,1178,1047,1061,988,672,1115,1179,1091,941,1088,1175,1126,1044,1141,996,1043,1107,1040,1296,1133,1076,1069,1128,1131,1067,1168,1114,1161,1162,1055,1112,1189,1141,1191,1074,1193,1228,1149,1096,1177,1135,1325,2048,1564,1052,1034,957,976,983,1076,1019,1021,871,1186,1164,834,1094,999,998,1016,668,854,746,857,957,1428,1409,1537,1413,1960,2054,2048,1965,1412,1990,2041,2048,2048,2048,1780,2048,1715,1881,2052,2048,2048,2048,2048,2048,2048,2048,2035,2040,2025,2021,2037,2020,1952,1839,1695,1880,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2004,1961,1857,1823,1496,1524,1968,1923,1803,1865,2033,2052,2057,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2057,2043,1607,986,1983,2056,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2051,1773,1818,2057,2048,2054,1920,1650,1411,1266,1039,815,506,1605,2057,2048,2048,2048,2057,2057,2048,2048,2052,1940,1528,949,1782,2057,2041,1997,1896,1736,1557,1259,891,646,310,116,1779,2048,2048,2051,2050,2048,2048,2048,2048,2057,2048,2048,2038,2025,1848,1662,1509,1231,2007,2056,2048,2048,2048,2048,2048,2053,2057,2056,2054,2052,2026,1952,1763,1541,1099,975,1822,1860,2004,2048,2055,2057,1980,1723,1422,760,2030,2048,2048,1989,1838,2048,2048,1843,872,38,224,40,382,2048,2048,2057,2048,2055,2048,2056,2046,1951,2022,2048,2048,2048,2005,2057,2048,2048,2048,2048,2048,2048,2048,2048,1979,1569,1931,2042,1499,1626,2043,2016,1666,1363,1461,1824,2026,2046,2056,2048,2043,2040,1922,1543,550,668,2056,2048,2057,2054,2053,2056,2048,2048,2051,2054,2033,1883,1838,1966,1646,1880,2048,2048,2048,2048,2048,2057,2048,2057,1902,2048,2056,2048,2057,2048,2048,2048,2035,1620,2019,1963,1935,1013,2045,2048,2040,1916,1633,2048,2048,2048,2048,2055,2048,2048,2048,2055,1954,1406,1514,1892,1985,2017,2038,2042,2026,2022,2053,2057,2056,2023,2034,2022,1976,1986,1972,2053,2052,2055,2036,2046,2030,2032,2052,2052,2048,2039,2021,1917,1804,1624,1411,1363,1181,1204,1213,1043,1036,1080,956,1009,991,846,880,769,677,638,458,220,178,142,60,61,1520,2027,2042,2048,2046,1952,1740,1708,1306,708,2016,2048,2048,2048,1900,2048,2048,2048,1965,2048,2048,2048,2048,1995,2048,2048,2055,2050,2027,2048,2057,2048,2044,2056,2052,1968,1904,1864,1689,1796,1677,1809,2048,2048,2048,2048,2048,2054,1973,1853,2055,2048,2057,2057,2057,2054,2046,1911,2048,2048,1910,1670,1729,2057,2056,1671,1685,2048,2048,2048,2048,2048,2048,2057,2055,2045,1959,1731,1479,1524,1291,1234,1296,2048,2048,2048,2055,2048,1928,1778,1214,362,870,1367,1690,1863,1959,1905,1924,2005,1959,1793,1606,1401,1209,680,404,1313,1991,2044,1611,1093,1428,2048,2048,2048,2048,2048,2048,2048,2048,1950,2019,2040,1906,1557,1131,1246,2048,1945,1481,1541,2048,2048,2048,2051,2048,2053,2056,2048,1942,1926,1566,2035,1873,1271,882,2046,2048,2048,2048,2048,2048,2048,1914,1840,2057,2048,2048,2048,2048,2048,1991,1136,1350,1808,2020,2050,2056,2048,1521,1423,1969,1918,2048,2048,2048,2057,2034,1906,1369,1120,777,565,396,296,116,1497,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1381,1988,2048,2048,2048,2048,2048,2048,2057,1396,199,1170,1680,1924,2049,2048,2048,2048,2048,2048,2048,2048,2048,2055,1918,1664,1535,1374,1235,1111,1023,944,744,822,948,913,698,1491,2035,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1958,1340,817,685,1292,2048,2048,2057,2055,1646,1586,2054,1812,1368,1027,579,803,809,2048,1952,1321,437,1744,1900,1994,2042,2056,2048,2055,2048,2030,1555,1786,1805,1950,1951,2055,2048,2048,2048,2048,2048,2048,2052,2011,1792,1509,1016,646,1481,2032,2048,2048,2048,2048,2048,2048,2057,2057,2013,1774,1522,1135,974,334,298,1919,2046,1978,1918,1831,1742,1679,2057,2050,1805,1578,1316,1778,1711,1987,2048,1934,2057,988,2048,1720,1851,1831,2048,1694,1932,1445,1431,1132,1519,2004,2043,2021,1872,1972,2007,1915,2048,2052,2046,1797,1081,1125,2048,2048,2048,2048,2048,1423,889,2057,2048,2057,2048,1671,431,1613,2048,2039,2048,2048,2048,2048,2004,2032,2048,1527,2000,2048,1723,2056,2048,1589,2011,2048,1533,1291,1749,1702,624,2015,2048,2057,2047,1530,163,95,1181,2018,2055,2056,2048,2048,2054,2057,1914,2048,2048,1983,2024,2054,1940,2048,2012,2057,2048,2034,2048,1878,1902,1726,1847,1477,1799,1194,1642,1695,1597,1302,1268,1977,1962,1806,1927,2048,2048,2048,2037,1545,998,716,1264,2011,1264,1546,1814,2048,2048,2048,2048,2056,2048,2048,2056,2057,2048,1961,1817,1612,1404,1205,904,1179,2048,2048,2048,2048,2048,1727,516,1976,2048,2048,2021,1884,2030,2057,2056,2048,2048,2057,2056,2054,1970,1827,1480,902,721,2048,2048,2048,2048,1555,272,788,2018,2048,2048,2048,2057,2048,2048,2048,1972,1646,299,476,1303,1915,2056,2048,2048,2048,2048,2048,2048,2055,2048,2056,2019,1929,1787,1783,1746,1572,1412,1249,1238,1264,1065,833,557,562,483,493,478,428,382,472,424,479,520,539,258,337,803,1190,1168,1258,1173,1028,980,877,716,525,308,148,140,904,1640,1843,2035,2048,2048,2022,1968,2019,1837,1976,1788,2002,1934,1775,1468,2035,2057,2052,2015,2039,2035,2044,2036,2013,2010,1978,2056,1887,1961,2048,2048,2055,1738,1785,2031,1777,1844,2057,1857,1265,1632,1991,2054,2022,1871,1920,1959,1851,1929,1997,2048,2048,2055,1844,2048,2044,1709,1473,1632,1407,1184,466,600,419,392,773,617,1005,1620,1397,1422,1387,1253,1428,1629,1727,1778,1807,1922,1986,2014,2049,2057,2054,2048,2048,2048,2056,2056,2042,1992,1960,1999,1983,1919,1803,1715,1726,1679,1689,1528,1451,1484,1418,1434,1359,1273,1199,1213,1179,1193,1049,954,923,918,1431,1522,1483,1475,1450,1440,1545,1520,1548,1515,1515,1519,1610,1719,1608,1581,1560,1518,1574,1688,1724,1822,1755,1719,1816,1888,1926,1816,1987,1948,1943,2052,2044,2048,2048,2057,2048,2057,2019,1923,1774,1662,1212,1185,1828,1933,2057,2053,2048,1602,248,736,2048,2048,2057,1380,2056,1313,1785,2053,1754,1380,2048,2048,2048,2048,1536,2057,2040,1642,1202,2046,2057,2048,2048,2048,2057,2016,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1989,2054,2057,2048,2048,2048,2042,1977,2027,2034,2057,2048,2037,2048,2048,2048,2048,2048,2048,1847,1200,2056,2048,2048,2056,2057,2053,2056,1942,1908,1878,1553,1613,1468,1659,1842,1663,1469,1414,1152,973,494,1219,2048,2057,2048,2055,1986,1730,1312,205,786,1935,2048,1990,1692,1411,1707,1844,1258,204,522,928,373,382,347,378,446,382,390,233,846,898,866,863,492,518,541,436,797,556,567,801,546,639,572,789,1018,145,372,644,251,471,920,800,634,490,383,773,817,882,719,841,1005,863,931,1155,1363,1070,542,401,452,249,297,380,279,517,535,707,227,254,324,318,125,231,339,221,296,304,281,373,369,212,117,178,208,118,260,798,621,512,408,598,826,918,677,980,1151,933,790,845,409,350,382,330,364,238,412,551,360,323,554,1004,581,1240,605,766,869,1042,450,470,569,388,610,1765,1688,1002,1119,1323,1405,1452,959,1013,936,787,878,1342,439,1205,903,1018,648,1003,258,536,643,312,700,397,441,806,797,613,666,574,457,602,1116,1268,961,986,984,1290,923,949,1235,1622,1116,1110,672,1334,962,1458,997,1162,714,1357,814,935,904,945,1030,970,949,520,485,246,349,413,202,280,80,280,319,512,466,563,422,551,642,831,770,790,843,601,1128,1381,1068,1317,1318,1122,846,1040,626,415,616,1003,1221,645,944,465,345,570,558,483,975,1122,1198,378,597,549,409,586,573,382,458,329,584,353,503,350,593,270,428,682,618,819,279,1351,520,573,557,525,420,641,405,227,543,166,441,487,506,764,877,1061,1009,868,456,521,554,115,249,489,559,565,396,549,395,378,375,594,407,424,398,695,221,317,252,322,277,380,145,211,256,253,194,107,107,220,108,87,136,108,87,229,345,491,263,177,793,828,810,681,940,739,507,598,444,539,252,1494,1308,1099,1048,1097,1175,1467,1637,1700,1265,1219,997,947,895,1387,1694,1682,1280,1489,1384,1152,869,634,564,695,307,613,530,837,804,432,426,268,397,361,352,339,638,207,380,219,497,420,315,232,256,180,140,118,508,638,1105,996,732,285,343,472,525,735,409,555,586,207,446,717,990,894,660,589,436,448,786,452,509,428,756,543,531,643,747,514,354,449,374,418,376,194,41,40,41,239,191,226,257,182,231,191,163,133,449,312,290,443,210,47,778,1086,1284,1116,976,1201,829,1316,829,391,360,1164,1091,742,859,1863,1477,1441,1480,1594,1397,1543,1385,1483,1446,1565,1405,1468,1468,1606,1513,1489,1400,1501,1397,1360,1349,1516,1503,1591,1430,1534,1636,1554,1687,1642,1693,1711,1624,1022,959,1092,1069,1256,1859,1709,1756,1740,1661,1710,1734,1711,1707,1734,1699,1704,1760,1762,1777,1693,1703,1626,1680,1665,1668,1708,1706,1735,1694,1713,1647,1622,1661,1665,1599,1584,1652,1863,1594,1709,1687,1593,1670,1661,1733,1725,1802,1838,1816,1809,1825,1801,1715,1775,1654,1758,1817,1850,1768,1640,1728,1862,1721,1780,1768,1766,1711,1668,1638,1647,1618,1763,1631,1635,1585,1587,1658,1638,1633,1713,1688,1714,1644,1724,1676,1746,1716,1630,1757,1722,1676,1730,1692,1637,1670,1685,1620,1652,1597,1616,1557,1512,1526,1468,1745,1113,1070,866,708,808,1317,1420,1472,1317,1121,1146,1201,1100,1362,1399,1265,1287,1286,1253,1175,973,897,737,899,904,735,637,811,1018,1114,1062,1231,1520,1575,1425,1470,1351,1599,1419,1433,1545,1481,1401,1315,1297,1263,786,238,213,228,220,222,867,1484,1518,1237,1502,1668,1415,1123,1441,1114,746,1352,1375,943,1512,1662,1337,1650,1467,1597,1481,1381,1342,1644,1366,1333,1620,1682,1426,1426,1300,1567,1365,1647,1245,1646,1693,1620,1722,1472,1473,1738,1216,1647,1229,1663,1411,1283,1515,1610,1694,1485,1337,1556,1430,1472,1570,1587,1607,1426,1229,1682,1511,1626,1597,1348,1425,1588,1676,1246,1542,1074,1474,1510,1566,1148,1478,1446,1618,1618,1639,1198,1564,1302,1490,1080,1524,1431,1696,1089,1562,1550,1411,1403,1408,1574,1611,1577,1622,1543,1435,1387,1697,1545,1630,1767,1275,1537,1568,1522,1533,1190,1688,1615,1446,1753,1273,1750,1613,1623,1668,1311,1622,1682,1259,1712,1778,1305,1570,1565,1314,1569,1644,1531,1560,1558,1517,1659,1613,1670,1517,1686,1504,1440,1586,1639,1590,1478,1859,1892,1902,1928,2048,2009,2047,2050,2023,2006,2035,2028,2024,2025,2042,2043,2054,2048,2001,2027,2004,2014,2014,2040,2057,2052,2053,2042,2046,2021,2022,2006,2048,2049,2023,2043,2055,2046,2010,2038,1852,1994,2020,2040,2043,2034,2026,2028,2049,2018,2000,1976,1984,1973,2015,1991,2029,2027,2023,2050,2030,1989,1958,1994,2015,1984,2000,2051,2013,2023,2049,2031,1993,1956,2019,2011,1984,2015,2037,2046,2057,2043,2019,1966,1996,2024,2027,2025,2033,2049,2045,2053,2055,2049,2050,2031,2038,2000,2052,2008,2041,2035,1914,1985,1958,1988,1971,2015,1957,1963,1989,2003,1955,1957,2012,1989,1978,1909,1979,1964,1970,1977,1989,1955,1988,2005,1968,1930,2000,1977,1999,1958,1956,2009,1973,1987,1961,1979,1996,2003,2002,2001,2001,1971,2010,1962,2015,1901,1988,1966,2001,1983,1977,1975,1951,1986,1995,1995,1968,2007,2008,2003,1977,2021,2001,2022,1988,1971,1998,1971,1959,2017,1997,1964,1938,1996,2019,1971,1970,2031,2034,2017,1975,2025,2005,1946,2052,2001,2025,2018,2039,1999,2025,2019,2007,2004,1974,1969,2002,2027,1979,1970,1869,1969,2051,2055,2031,1926,1964,1910,1909,1778,1869,1885,1939,1794,1913,1807,1973,2003,1973,1873,1912,1935,1859,1851,1860,1995,1938,1958,1926,1962,1870,1928,1881,1891,1983,1953,1924,1971,1778,2026,1799,1910,1821,1916,1960,1969,1899,2022,1952,1915,1845,1871,1896,1889,1965,1947,1910,1925,2008,1952,2018,1700,1976,1724,1996,1959,1944,1950,1856,1975,1934,1966,1831,2005,1965,2012,1769,1705,1854,1745,1878,1870,1877,1837,1801,1884,1829,1964,1923,1917,1932,1924,1855,1964,1905,1916,1891,1925,1878,1948,1918,1971,1913,1926,1888,1906,1888,1851,1893,1785,1911,1935,1789,1909,1575,1769,1408,1692,1806,1773,1836,1956,1933,1986,1994,1986,2008,1901,1978,2008,1938,1973,1980,1851,1427,1422,1378,1437,1464,1475,1468,1501,1552,1424,1518,1682,1783,1668,1584,1898,1995,2008,1910,2022,1957,1831,1941,1896,2002,1992,1940,1955,1944,1963,1824,1869,1957,2017,2014,1919,2008,1900,1980,1863,1880,1985,1974,2027,1910,2031,1924,1947,1878,1863,2015,1910,2026,1879,1995,1841,1909,1898,1856,1985,1948,2056,1897,1985,1936,1874,1894,1868,2001,1993,2009,1943,1983,1927,1857,1924,1916,1952,1965,1896,1967,1925,1930,1953,1932,1902,1732,1721,1680,1644,1665,1679,1728,1743,1702,1659,1682,1748,1708,1743,1704,1643,1679,1726,1688,1718,1718,1717,1643,1597,1641,1713,1746,1757,1716,1619,1577,1646,1743,1765,1654,1640,1620,1640,1679,1753,1740,1734,1675,1629,1632,1764,1793,1772,1633,1633,1638,1776,1865,1841,1785,1729,1767,1779,1845,1889,1874,1787,1790,1825,1769,1792,1737,1705,1672,1689,1752,1692,1551,1736,1725,1726,1613,1831,1663,1669,1749,1739,1512,1687,1768,1643,1662,1768,1788,1764,1650,1783,1810,1769,1665,1738,1749,1726,1744,1726,1738,1987,1909,1978,2000,1987,1958,1911,1928,1943,1991,1987,1976,2009,1988,1973,2000,1986,1988,1960,1984,1953,2006,2003,1992,1985,1963,1998,1964,1961,1982,2023,1994,2011,1960,1981,1957,1986,1970,1983,1968,1981,1971,1975,1966,1962,1980,1961,1988,1957,1969,1948,1987,1943,1959,1960,1955,1969,1955,1986,1964,1947,1953,1945,1956,1945,1956,1943,1956,1951,1959,1952,1961,1956,1966,1952,1969,1902,1910,1914,1902,1912,1935,1884,1915,1903,1892,1929,1904,1901,1919,1920,1888,1924,1876,1891,1934,1834,1877,1948,1845,1861,1954,1842,1847,1960,1854,1818,1960,1839,1810,1975,1830,1824,1971,1831,1839,1968,1817,1840,1887,1816,1821,1885,1789,1830,1898,1776,1842,1886,1750,1866,1897,1755,1877,1888,1775,1880,1858,1782,1890,1831,1842,1912,1836,1844,1909,1814,1889,1882,1833,1915,1858,1840,1911,1821,1878,1901,1818,1908,1854,1842,1910,1845,1910,1857,1857,1914,1861,1857,1911,1865,1858,1912,1872,1862,1917,1873,1853,1913,1882,1854,1905,1880,1849,1909,1876,1861,1918,1906,1843,1920,1898,1862,1924,1872,1854,1930,1858,1862,1924,1857,1874,1919,1856,1867,1911,1858,1853,1921,1851,1830,1946,1915,1913,1911,1910,1918,1918,1921,1912,1940,1915,1909,1916,1918,1922,1910,1918,1925,1970,1990,1988,1987,1980,2003,1988,1988,1968,1976,2014,1907,1959,1914,1898,1884,1930,1896,1938,1854,1894,1897,1887,1965,1953,1965,1968,1972,1958,1965,1963,1943,1986,1922,1988,1931,1980,1936,1971,1887,1977,1828,1976,1852,1931,1894,1886,1902,1889,1947,1842,1981,1835,1960,1856,1916,1900,1840,1874,1811,1918,1783,1924,1814,1879,1835,1851,1889,1805,1935,1792,1892,1870,1837,1860,2011,2048,2028,2018,2019,1991,2035,2021,2017,2034,2026,2042,2037,2038,2020,2021,1852,2010,2011,2038,2045,2057,2025,2035,2028,2020,2000,2012,2042,2036,2049,2054,2035,2036,2043,2023,1959,1901,2033,2000,2020,2050,2036,2015,2005,1994,1994,1994,1968,1984,2028,2044,2017,2019,2006,2014,1979,2003,1992,1967,1976,2012,2040,2016,2026,2019,2003,1975,2002,2002,1968,1984,2020,2036,2009,2048,2057,2026,2027,2006,2017,2007,1958,2027,2039,2047,2046,2053,2050,2042,2041,2016,2026,2037,2035,2048,2013,2016,1989,1994,1981,2003,2004,1962,1994,1995,1948,1998,1981,1950,1936,1991,1987,2003,1965,1999,2016,1931,1926,1972,1929,1762,1906,2009,2005,1948,2001,1997,1990,1966,1965,1988,1966,1926,1899,1903,1950,1970,1944,1887,1950,1996,1948,1933,1839,1894,1990,1987,1916,1860,1910,1971,1952,1871,1865,1901,1837,1897,1949,1952,1917,1938,1865,1889,1862,1881,1978,1908,1978,1954,1902,1878,1884,1883,1953,1989,2006,1905,1824,1819,1881,1924,2011,1893,1867,1818,1739,1930,1945,1888,1905,1914,1839,1870,1910,1849,1865,1888,1894,1833,1874,1813,1835,2002,1945,1921,1925,1911,1842,1854,1870,1862,1813,1913,1990,1931,1912,1977,1814,1886,1957,1935,2006,2021,2021,1953,1855,1999,1976,2035,1951,1997,1928,2051,2018,1982,1922,1963,2005,2018,1996,1983,1990,2008,2001,1986,1987,1962,2016,1999,2022,1990,1957,1977,1969,1965,2021,1958,2021,2040,2029,1979,2008,1897,2026,1997,1988,1978,2015,2015,2025,1907,1765,1781,1900,2006,1991,1973,2013,1995,1972,1987,1934,1959,1962,1907,1937,1971,1991,1919,2001,1994,2025,1991,1995,1969,1925,2002,1972,1970,1840,1952,1934,1957,1902,1882,1972,1952,1895,1916,1988,1980,2009,1964,2001,2015,2000,2023,1913,1928,1968,1929,1686,1918,1951,1931,1941,1947,1946,2011,1990,2013,1991,1971,1968,2024,1987,1983,1982,1956,1932,1988,1931,1978,1939,1981,1983,1984,2034,2021,1987,1986,1986,2005,1988,1966,1951,1979,1954,1987,1968,1932,1997,1966,1993,1976,1926,1993,2026,1978,1958,1960,1961,2035,1968,1989,2020,1970,2006,2001,1955,2029,1979,1963,2024,1913,2048,1980,1931,2008,1944,1982,1995,2004,1961,1885,1967,1996,1939,1953,1987,1946,1906,1965,1983,2000,1980,1951,1964,1954,1952,1975,1917,1945,1964,1839,1858,1971,1965,1901,1892,1935,1913,1989,1943,1912,1989,1996,1925,1977,1990,1914,2032,1880,2010,1970,1961,2009,2015,2009,2041,2051,1865,2016,1995,1984,2026,2027,2055,2036,2023,1952,2019,2015,1972,2030,2029,2028,1999,2034,2007,2043,2012,2017,2038,2025,2054,2040,2047,1946,2024,2014,1977,2047,2031,2054,2050,2036,1978,2037,1999,2014,2043,2050,2048,2029,2042,1938,1965,1957,1984,1853,1986,1981,1978,2002,1995,2035,2021,1970,1969,2007,2024,1937,2010,1915,1941,1999,2019,2026,1952,1999,1930,1899,2003,1974,1615,1841,1808,1682,1617,1648,1528,1799,1351,1513,1537,1418,1568,1267,1491,1468,1165,1500,1177,1396,1330,1165,1501,1116,1434,1189,886,1597,1343,1220,1206,1266,1481,893,1293,1388,1168,1588,1100,1374,1180,1461,1383,1190,1450,1516,1171,1621,1445,1498,1577,1368,1621,1304,1512,1544,1163,1627,1164,1399,1201,1495,1323,1322,1417,1089,1051,1579,1448,1126,1251,1290,1459,920,1281,1471,1175,1537,1085,1361,1085,1636,1224,1419,1433,1421,1400,1499,1572,1429,1602,1446,1366,1412,1518,1416,1207,1640,1218,1352,1178,1607,1200,1392,1360,1028,1253,1476,1424,1085,1290,1401,1230,959,1280,1399,1168,1539,1112,1408,1136,1612,1262,1444,1457,1409,1425,1463,1556,1446,1584,1551,1185,1495,1471,1248,1304,1551,1295,1365,1153,1572,1166,1414,1316,906,1478,1332,1330,1161,1242,1591,892,1165,1424,1165,1487,1048,1340,1323,1224,1469,1165,1449,1513,1231,1618,1444,1519,1567,1341,1649,1265,1489,1519,1297,1644,1174,1366,1310,1259,1495,1254,1479,1152,933,1632,1366,1234,1203,1314,1617,873,1264,1481,1168,1627,1039,1361,1144,1555,1257,1387,1459,1456,1277,1511,1553,1428,1574,1413,1479,1343,1491,1510,1233,1614,1158,1434,1154,1621,1151,1410,1309,973,1230,1439,1458,1122,1283,1480,1174,1005,1303,1337,1169,1554,1161,1372,1128,1615,1249,1400,1487,1399,1331,1490,1616,1499,1609,1490,1337,1473,1560,1375,1119,1685,1131,1383,1141,1605,1141,1290,1385,1051,1058,1525,1454,1092,1265,1491,1151,988,1320,1262,1074,1530,1086,1417,1155,1632,1174,1311,1499,1455,1366,1571,1586,1479,1545,1572,1394,1429,1552,1438,1082,1682,1236,1341,1188,1525,1281,1233,1403,1150,914,1612,1461,1213,1209,1284,1496,901,1255,1428,1128,1577,1071,1309,1308,1543,1338,1223,1508,1543,1393,1649,1429,1506,1545,1426,1716,1235,1519,1516,1256,1517,1346,1338,1389,1152,1571,1217,1494,1228,865,1678,1293,1282,1239,1180,1645,867,1223,1453,1285,1543,1128,1330,1257,1346,1573,1277,1472,1489,1239,1680,1456,1559,1588,1410,1701,1284,1548,1516,1227,1557,1327,1421,1371,1130,1600,1228,1521,1253,828,1664,1270,1299,1237,1222,1635,945,1121,1417,1437,1352,1413,1220,1403,1292,1647,1231,1511,1550,1306,1605,1522,1695,1542,1584,1516,1480,1195,1200,1283,1450,1516,1656,1472,1330,1187,1512,1547,1408,1687,1603,1365,1260,1376,1485,1409,1665,1588,1461,1390,1242,1492,1424,1335,1579,1670,1570,1478,1215,1356,1371,1208,1452,1645,1336,1080,1312,1275,1720,1402,1259,1481,1661,1134,1687,1698,1862,1931,1917,1763,1944,1813,1756,1819,1899,1828,1800,1728,1349,1710,1682,1766,1690,1728,1661,1504,872,1224,1992,2002,1828,1630,1134,1154,1795,1545,1734,1712,1964,1704,1826,1807,1891,1722,1752,1898,1900,1841,1652,1696,1956,1575,1976,1896,1940,1976,1969,1927,1817,1828,1607,1882,1815,1883,1899,1817,1652,1696,1546,1574,1804,1645,1598,1688,1604,1427,1677,1750,2009,2012,1970,1894,2002,2028,1994,1940,2015,2031,2020,1959,1997,2032,1976,1979,1939,1963,1894,1973,1951,1978,1914,2019,2011,2005,2003,2018,2040,1992,1979,1898,1972,2057,2047,2039,1998,1917,1835,1585,1972,1855,1954,1914,1902,1956,1850,1925,1825,1909,1930,1861,1901,1982,1881,1928,1930,1896,1889,1293,1609,1940,1695,1545,1505,1251,1512,1759,1607,1612,1824,1584,1567,1581,1582,1531,1610,1605,1665,1574,1299,1269,1643,1631,1298,1280,1999,1848,1784,1759,1784,1724,1766,1859,1734,1678,1662,1729,1658,1606,1837,1782,1247,1501,1630,1482,1492,1265,1306,1779,1468,1266,1172,1367,1754,1388,1559,1954,1998,1970,1984,1975,1926,1846,1554,1921,1901,1888,1617,1813,2003,1882,1872,1867,1804,1887,1928,1622,1931,1572,1413,1677,1512,1414,1463,1673,1439,1699,1382,1719,1521,1692,1604,1837,1534,1686,1608,1721,1507,1433,1596,1529,1875,1267,1247,1434,1699,1831,1828,1732,1458,1487,1585,1780,1549,1455,1644,1601,1699,1670,1510,1582,1676,1565,1455,1525,1450,1671,1623,1513,1556,1560,1640,1622,1541,1140,1603,1499,1325,1316,1364,1216,1276,1380,1500,1258,1193,1402,1402,1263,1465,1341,1267,1612,1586,1545,1858,1529,1483,1891,1838,1875,1855,1530,1940,1813,1673,1835,1594,1831,1233,1845,1924,1458,1680,1738,1677,1696,1587,1430,1623,1436,1622,1524,1526,1597,1552,1511,1417,1594,1518,1547,1419,1592,1452,1829,1880,1783,1868,1841,1820,1493,1496,1578,1528,1806,1967,1925,1855,1886,1911,1863,1947,1159,585,560,502,705,658,609,539,700,1697,1978,1991,1960,1919,1959,1968,1949,1941,1674,1660,1650,1648,1791,1563,1768,1580,1606,1540,1588,1669,1498,1501,1465,1378,1489,1375,1575,1526,1320,1161,1399,1362,1557,1468,1430,1340,1601,1476,1593,1422,1426,1376,1396,1441,1422,1380,1392,1860,1773,1805,1868,1878,1907,1797,1736,1819,1674,1684,1788,1832,1826,1726,1725,1676,1189,786,799,886,1399,1699,1712,1613,1632,1701,1584,1535,1638,1772,1669,1680,1651,1654,1827,1796,1872,1494,1775,1463,1690,1690,1779,1560,1544,1947,1593,1823,1841,1862,1498,1846,1819,1834,1069,1046,955,1077,1063,1103,981,1083,1641,1552,1568,1523,1580,1557,1547,1514,1676,1432,1493,1662,1643,1302,1051,994,1017,1341,1414,1537,1771,1663,1462,1115,1406,1548,1171,1203,1521,1540,1413,1599,1612,1531,1579,1628,1512,1255,1040,814,1016,538,997,730,920,1502,1384,881,502,865,552,828,498,535,883,690,888,502,856,695,882,522,514,921,641,835,523,841,700,747,622,469,851,622,816,280,527,213,195,602,225,636,249,592,201,306,359,172,488,39,548,166,535,181,188,1472,1450,1446,1200,1238,1194,1421,978,985,1012,980,950,976,991,998,1517,1398,1420,1417,1508,1499,1368,1364,1580,1430,1485,1505,1597,1604,1519,1510,1520,1571,1428,1423,1375,1403,1461,1408,1436,1513,1401,1396,1374,1392,1130,964,956,953,1108,905,971,913,1076,917,908,955,872,1506,1392,1392,1397,1169,936,931,931,1381,1604,1566,1569,1574,1539,1603,1582,1599,1581,1319,1374,1335,1294,1293,1321,1305,1497,1563,1526,1329,1546,1224,1261,1230,1556,1632,1726,1564,1548,1559,1808,1743,1806,1560,1221,1190,1525,1418,1537,1230,1211,1432,1444,1625,1463,1506,1482,1354,1710,1697,1630,1674,1530,1661,1633,1640,1783,1611,1691,1652,1623,1574,1659,1661,1528,1699,1658,1581,1656,1500,1620,1628,1649,1679,1571,1713,1681,1672,1578,1655,1660,1549,1774,1646,1616,1636,1758,1749,1622,1622,1622,1827,1681,1677,1690,1705,1754,1649,1691,1629,1329,961,934,973,1313,1497,1542,1492,1600,1374,1352,1331,1325,1305,1183,1236,1228,1329,1254,900,961,1342,1199,1175,1100,1130,1209,972,943,921,1564,1500,1519,1540,1521,1497,1516,1524,1659,1435,1408,1372,1398,1389,1389,1386,1388,1703,1541,1537,1559,1571,1539,1526,1531,1586,1730,1603,1609,1658,1615,1595,1599,1656,1781,1490,1413,1398,1422,1466,1446,1404,1437,1878,1756,1708,1697,1748,1740,1703,1671,1908,1760,1711,1697,1660,1716,1673,1677,1681,1440,984,1203,1036,1099,1065,1196,1186,1145,1071,919,843,652,707,672,1509,1680,1713,1681,1713,1709,1739,1724,1716,1860,1741,1678,1632,1722,1678,1739,1716,1871,1764,1776,1775,1724,1800,1752,1793,1718,1876,1731,1691,1616,1678,1664,1718,1683,1740,1432,1511,1402,1547,1063,991,1017,1006,1798,1814,1803,1835,1655,1850,1792,1828,1819,1462,1194,1222,1486,1538,1025,1041,1247,1748,1622,1620,1592,1534,1662,1605,1601,1669,1602,1440,1424,1468,1378,1485,1428,1416,1471,1756,1398,1688,1384,1472,1467,1473,1402,1716,1634,1610,1601,1541,1615,1597,1592,1700,1534,1468,1438,1378,1517,1438,1464,1482,1716,1807,1841,1833,1680,1847,1787,1845,1847,1631,1656,1618,1745,1536,1642,1612,1645,1652,1488,1442,1481,1380,1503,1493,1456,1526,1854,1808,1844,1892,1686,1851,1820,1865,1688,1647,1645,1610,1569,1677,1641,1580,1644,1666,1448,1433,1481,1385,1497,1465,1437,1526,1852,1811,1850,1789,1832,1813,1843,1862,1343,940,1766,675,682,1185,688,918,888,693,1378,1166,628,725,1074,1297,903,1284,1388,1268,589,1200,1345,1064,1376,1201,1732,1018,1099,961,1543,1585,1577,1737,1655,1751,1536,1722,1509,1534,1183,784,1294,1549,1521,1014,996,1025,1020,1349,1113,1034,1104,1318,1821,2030,2025,2004,2012,2019,2020,1972,2012,2030,2025,2004,2011,2007,2000,2014,1977,2021,2028,2039,2005,2011,2005,2013,1970,2030,2032,2037,1996,2005,2023,1990,2009,1963,2050,1951,1899,1903,1872,1890,1924,1841,1867,1888,1900,1873,1894,1817,1871,1831,1880,1923,1723,1651,1660,1674,1656,1651,1668,1608,1778,1655,1675,1676,1626,1664,1651,1622,1619,1615,1443,1444,1427,1393,1429,1415,1396,1555,1557,1521,1438,1548,1327,1603,1477,1663,1416,1496,1477,1671,1422,1486,1545,1614,1451,1285,1509,1459,1977,1726,1502,1672,1612,1559,1537,1571,1712,1549,1564,1612,1657,1755,1642,1582,1528,1677,1552,1560,1567,1562,1550,1588,1525,1387,1655,1472,1713,1569,1633,1536,1722,1640,1628,1754,1743,1473,1661,1924,1870,1707,1714,1875,1936,1922,1952,1965,1936,1933,1916,1917,1813,1841,1869,1949,1902,1859,1867,1824,1799,1792,1785,1763,2004,1971,1971,1965,1909,1913,1900,1920,1964,1971,1899,1893,1855,1811,1822,1823,1783,1984,1986,1999,1973,1954,1941,1926,1943,1941,1948,1826,1814,1752,1784,1753,1780,1737,1887,1832,1855,1771,1792,1838,1796,1810,1781,1735,1445,1447,1471,1388,1440,1398,1426,1534,1947,1954,1935,2016,1949,1899,1900,1925,1903,1869,1908,1990,1949,1927,1921,1914,1885,1959,1873,1930,1759,1495,1522,1613,1583,1601,1596,1494,1780,1799,1807,1787,1718,1768,1735,1710,1718,1641,1323,1266,1305,1396,1308,1339,1358,1516,1519,1475,1472,1545,1574,1495,1482,1465,1645,1698,1484,1662,1613,1624,1532,1555,1391,1337,1344,1249,1270,1180,1284,1655,1884,1859,1877,1906,1892,1887,1857,1862,1965,1903,1875,1892,1870,1879,1895,1882,1936,1432,1450,1383,1401,1446,1474,1479,1466,1757,1641,1721,1738,1712,1590,1583,1567,1650,1575,1558,1579,1611,1699,1732,1696,1630,1722,1446,1455,1495,1467,1379,1381,1415,1458,1606,1470,1488,1555,1076,1534,1504,1476,1669,1506,1508,1496,1384,1484,1486,1517,1528,1974,1973,1929,1755,1433,1400,1420,933,1416,1392,1411,1587,1190,1156,1148,1129,985,1074,1194,1156,1506,1416,1470,1826,1898,1878,1906,1897,1897,1886,1906,1709,1604,1528,1427,1545,1479,855,990,752,980,799,948,691,856,918,909,869,749,1003,937,1035,922,1403,1222,1314,1286,989,342,537,469,510,217,542,525,1355,1038,783,817,1061,1341,725,1330,893,186,361,331,365,1233,1312,1579,1596,1861,1746,1809,1831,1809,1774,1764,1772,1788,1644,1657,1587,1606,1594,1641,1581,1586,1464,1315,1338,1322,1559,1669,1674,1657,1640,1698,1669,1684,1686,1666,1665,1670,1027,1546,1826,1869,1771,1814,1810,1866,1823,1743,1678,1443,1461,1444,1581,1866,1817,1906,1864,1850,1894,1831,1855,1848,1072,1744,1341,1099,1194,1058,1111,2052,2005,1990,1918,1944,1957,1901,1905,1884,1954,1949,1965,1882,1918,1893,1928,1996,1814,1668,1754,1785,1827,1766,1713,1601,1816,2057,2044,2052,2047,2053,2038,2039,2047,2048,2051,2051,2034,2055,2050,2039,2033,2052,1874,1913,1859,1848,1819,1873,1830,1880,1947,1898,1881,1850,1857,1827,1864,1840,1920,1372,1554,776,787,791,668,723,443,778,912,776,401,624,777,873,727,393,727,826,846,559,465,767,837,929,442,609,1237,1048,1140,606,525,1262,1100,1124,415,755,1172,1085,1047,394,990,1076,1070,804,1298,1248,1564,1293,1716,1488,1007,1151,1140,1133,1171,1111,1097,1095,1136,1145,1167,1156,1117,1113,1048,1087,1590,1137,1114,1176,1088,1059,1088,1022,1050,1006,903,1022,1080,879,885,767,856,1381,434,527,500,541,576,481,557,565,447,523,466,533,503,528,554,504,1362,1469,1480,1510,1557,1490,1509,1527,1519,1138,984,982,1389,1615,1418,1394,1303,1340,1442,1727,1638,1644,1664,1608,1620,1658,1642,1672,1721,1467,1470,1522,1466,1509,1496,1451,1649,981,1135,1257,1353,1318,1323,1335,1137,1373,1440,1390,1421,1541,1506,1550,1560,1653,1416,1007,1153,1156,1134,1156,1079,1069,1141,1158,1122,1177,1184,1108,1071,1040,1184,1448,1128,1112,1212,1045,1085,1118,1045,1030,1000,880,1023,1068,858,877,808,882,1356,425,546,510,556,545,459,560,562,453,504,473,513,496,542,559,507,1635,1799,1785,1813,1793,1803,1737,1840,1408,1399,1374,1402,1586,1280,1227,1228,1479,1480,1326,1296,1526,1356,991,1027,987,1407,1696,1521,1706,1662,1343,1157,1170,1140,1476,1270,1738,1662,1593,1690,1701,1639,1646,1631,1699,1223,1349,1509,1485,1979,1663,1990,1759,1743,1627,1716,1723,1628,1752,1742,1739,1581,1507,1517,1540,1570,1496,1602,1337,1684,1615,1612,1584,1587,1576,1580,1624,1782,1424,1726,1807,1515,1367,1752,1808,1603,1739,1074,1079,1123,1163,1135,1128,1087,1144,1105,1161,1126,1196,1178,1087,1034,1075,1351,952,1251,1106,943,579,1136,1214,1153,991,916,1266,1152,951,492,1178,1242,1219,947,859,1173,1123,1006,408,1204,1200,1158,980,714,1133,1164,1104,411,1154,1174,1146,901,809,1117,1252,1142,409,1097,1185,1183,908,1440,1135,1119,1233,1060,1081,1120,1028,1024,1007,899,1010,1055,856,888,813,883,1050,1229,1188,1157,414,916,1239,1109,1013,1268,1123,1224,1163,1180,1206,1128,1198,1194,1257,1124,1122,1247,1202,1273,1126,1076,1238,1176,1333,1160,1046,1000,1129,1256,1149,988,1030,1090,1358,1109,1019,1017,1232,1280,1017,975,1075,1415,849,476,547,1192,1518,1749,1839,1889,1846,1607,1422,608,491,517,523,584,760,1399,1074,1242,1496,1213,1078,1386,1447,1074,1221,1493,1208,1042,1340,1966,1821,1717,1739,1899,1854,1830,1864,1688,1912,1675,1838,1778,1842,1759,1791,1829,1761,1840,1880,1747,1868,1741,1748,2052,1709,1839,1776,1797,1789,1871,1732,1727,1909,1678,1812,1887,1701,1881,1801,1837,1706,1851,1749,1782,1890,1752,1728,1886,1737,1816,1789,1753,1920,1736,1831,1742,1898,1736,1852,1754,1738,1990,1660,1823,1894,1742,1745,1811,1834,1716,1858,1848,1728,1901,1721,1750,1475,1143,1210,1172,1301,1132,1219,1129,1127,472,811,886,782,390,625,793,864,680,401,723,825,867,539,472,782,803,919,488,1552,1007,1111,1154,1091,1181,1092,1089,1095,1174,1155,1148,1184,1142,1091,1016,1098,1564,1467,1621,1078,1077,1154,1100,1032,1047,1016,1025,1016,852,1000,1061,944,886,786,875,1408,1454,1411,1368,411,566,514,567,555,450,557,562,459,514,475,497,501,528,556,507,1554,1636,1666,1582,1715,1670,1650,1665,1686,1701,1764,1657,1617,1612,1639,1642,1150,447,899,804,453,310,806,912,2037,2037,2003,2026,2024,1984,2010,1968,2026,2022,2034,2012,2009,2013,2012,1964,2008,1430,1356,1606,1565,1350,1166,1382,1120,1121,1120,1120,1121,1127,909,70,660,1979,2049,1850,1882,1921,1868,1834,1889,1908,1863,1950,1931,1930,1944,1872,1906,1921,1924,1884,1753,1995,1920,1887,1910,1918,1864,1760,1802,1776,1871,1900,1909,1868,1860,1876,1900,1908,1853,1982,1789,1877,1869,1899,1860,1714,1500,176,602,601,673,648,542,601,727,711,685,755,848,957,565,869,265,1111,328,406,1500,665,1061,209,338,363,755,1645,1463,1573,1642,1602,1547,1456,1504,1594,1620,1614,1612,1503,1582,1564,1533,1679,1666,1691,1509,1516,1806,1864,1790,1767,1824,1854,1843,1844,1860,1780,1325,1282,1345,1355,1323,1325,1328,1359,1584,1459,1462,1460,1503,1477,1452,1427,1614,1455,1456,1438,1461,1484,1447,1436,1432,1645,1439,1466,1454,1496,1470,1445,1431,1594,1454,1433,1426,1459,1492,1457,1435,1423,1616,1376,1368,1426,1489,1466,1414,1424,1583,1425,1396,1355,1479,1454,1415,1392,1432,1596,1391,1370,1438,1443,1477,1426,1399,1527,1518,1386,1414,1496,1446,1489,1437,1407,1646,1473,1401,1456,1475,1492,1460,1466,1419,1550,1348,1313,1376,1373,1362,1287,1266,1554,1348,1308,1332,1390,1337,1359,1319,1267,1549,1357,1288,1352,1327,1313,1318,1293,1518,1452,1437,1456,1491,1488,1478,1447,1387,1648,1422,1388,1475,1479,1483,1446,1404,1571,1491,1359,1393,1463,1452,1415,1424,1397,1612,1415,1389,1429,1465,1472,1422,1381,1448,1586,1377,1404,1428,1483,1462,1410,1427,1613,1472,1428,1432,1448,1486,1444,1421,1418,1788,1732,1832,1719,1893,1590,1735,1817,1816,1835,1777,1646,1681,1820,1761,1713,1798,1851,1806,1884,1825,1917,1836,1900,1840,1876,1861,1820,1764,1814,1845,1782,1769,1825,1949,1790,1798,1725,1777,1734,1759,1716,1773,1878,1807,1759,1739,1794,1758,1741,1771,1937,1885,1818,1828,1813,1800,1846,1787,1790,1902,1723,1790,1726,1745,1718,1764,1770,1858,1774,1853,1838,1835,1826,1769,1770,1791,1808,1822,1719,1753,1670,1592,1745,1719,1621,1798,1824,1724,1784,1675,1627,1659,1665,1804,1901,1660,1612,1637,1643,1686,1681,1692,1646,1768,1684,1623,1644,1703,1701,1703,1678,1794,1804,1761,1768,1783,1830,1783,1839,1776,1847,1792,1677,1744,1811,1774,1776,1778,1847,1763,1826,1885,1866,1885,1935,1917,1795,1808,1675,1677,1751,1750,1750,1804,1697,1773,1764,1667,1817,1810,1799,1828,1841,1711,1759,1412,1534,1525,1503,1530,1502,1488,1518,2057,1953,1936,1991,1987,1936,1999,1953,1905,1963,1998,2022,1984,1933,1978,1995,2027,1647,573,40,38,40,317,40,40,38,548,1863,1785,1827,1849,1829,1829,1782,1836,1793,1458,1457,1429,1438,1433,1428,1433,1564,1872,1828,1809,1755,1788,1774,1795,1807,1289,836,39,40,38,128,199,39,40,38,1008,1094,1723,1715,1741,1753,1762,1711,1706,1748,1766,1851,1015,1228,1433,1286,773,1576,1451,1284,975,1793,1615,1645,613,40,38,40,317,40,40,38,508,1299,1472,1198,1244,1670,1664,1610,1686,1675,1673,1665,1609,1686,40,40,38,40,1094,460,94,1107,1848,2000,1795,1657,1617,1636,1678,1673,1716,1741,1694,1729,1742,1735,1749,1723,1690,1676,1719,1084,1053,521,953,1819,1762,1718,1738,1727,1804,1674,1722,1875,1841,1817,1885,1786,1915,1803,1900,1806,1846,1680,1684,1761,1632,1804,1769,1700,1886,1782,1972,1776,1952,1861,1891,1872,1872,1986,1279,1172,1134,1018,1169,1447,1352,1348,1367,1413,1210,1181,1109,1173,1131,1286,1672,657,840,925,1006,1355,1719,1187,748,646,831,1403,1624,1732,1605,870,1288,1608,1411,1219,972,803,964,762,495,918,1209,1385,1197,1222,1327,1383,1403,1299,1386,1920,1896,1867,1914,1847,1868,1898,1901,1841,1896,1928,1942,1832,1902,1872,1949,1280,945,934,964,1498,1959,1765,1868,1933,1171,1183,1204,1203,1976,2026,1984,2028,1947,1918,1886,1904,1923,2030,2039,2039,2032,1786,1817,1790,1841,1806,1820,1705,1825,1839,1968,1945,1923,1956,1619,1292,1305,1675,1347,1184,1287,1280,1333,1186,1250,1222,1573,1483,1212,1188,1641,1655,822,765,1531,1575,870,765,1158,1314,1202,737,952,1673,1640,1378,1391,1656,1832,1737,1805,1781,1818,1763,1835,1841,1836,1654,1665,1685,1708,1786,1779,1822,1737,1662,1444,1389,1434,1585,1472,1402,1431,1592,1538,1454,1478,1559,1623,1505,1460,1526,1879,1981,1954,1919,2015,1964,1982,1973,2009,1774,1769,1751,1769,1801,1589,1539,1572,1872,1916,1812,1873,1925,1773,1843,1769,1829,1986,1865,1834,1914,1899,1828,1782,1802,1894,1488,1591,1619,1598,1217,1245,1605,1365,1175,1249,1208,1670,1216,1217,1277,1778,1763,1781,1766,1764,1880,1798,1789,1785,1867,1841,1822,1820,1566,829,814,825,913,1144,1179,1156,1158,1324,1182,1163,1199,1312,1372,1390,1300,1565,1827,1859,1860,1853,1876,1786,1858,1830,1958,1894,1936,1922,1920,1919,1923,1963,1932,1800,1857,1822,1759,1833,1839,1715,1594,1677,1772,1844,1833,1910,1888,1794,1883,1862,1516,1477,1406,1504,1545,1589,1778,1600,1547,1623,1650,1702,1680,1744,1776,1773,1803,1874,2046,2054,1961,1952,1973,1985,1962,1988,1942,1966,1920,1887,1207,1266,1404,1052,1686,1781,1747,1761,1740,1563,1607,1461,1634,1784,1743,1780,1738,1847,1797,1804,1766,1791,1712,1715,1696,1658,1645,1814,1799,1610,1272,995,1067,1077,1397,899,903,901,1301,978,1214,943,1271,527,629,529,584,972,747,785,654,731,1125,1236,1216,971,1308,1362,1447,1371,1332,1468,1561,1659,1349,1416,1646,1546,1440,1734,1621,1681,1583,248,210,194,284,870,483,403,474,1645,2036,2044,2046,2030,2033,2041,2043,2016,1998,1932,1934,1957,1887,1927,1927,1926,1733,1429,1339,1502,1469,1122,1212,1123,1063,1444,1453,1392,1453,1676,1860,1809,1832,1870,1866,1790,1776,1867,1818,1741,1735,1772,1708,1760,1811,1696,1635,1396,1473,1479,1497,1426,1448,1587,1482,1779,1855,1873,1877,1639,1192,1238,1210,1565,1844,1803,1773,1839,1403,1456,1450,1442,1911,2040,2027,2052,2043,2001,2000,1973,1999,1518,1503,1488,1501,1784,1659,1666,1670,1943,1985,1981,1990,2007,1729,1706,1718,1780,2053,2052,2046,2051,1568,1256,1117,540,535,536,760,1187,1443,1431,1159,1203,1497,1344,1426,1273,1540,1530,1632,1457,1406,1675,1789,1739,1840,1643,1213,1326,1250,1377,979,989,1019,1052,974,862,1073,1078,868,2017,1971,1943,1943,2020,2009,1983,1993,1984,1590,1480,1630,1700,1679,1658,1704,1641,1814,1494,1491,1609,1815,1597,1734,1689,1698,1482,1709,1595,1417,1484,1605,1543,1440,1839,1902,1864,1848,1896,1897,1874,1856,1908,1639,1523,1453,1645,1973,1985,1964,1995,1990,1812,1787,1814,1843,1864,1915,1917,1810,1453,1463,1428,1386,1491,1501,1517,1471,1520,1538,1748,1685,1644,1465,1607,1523,1490,1742,1725,1624,1758,1686,1728,1675,1782,1688,1682,1546,1669,1660,1685,1633,1533,1670,1607,1569,1555,1491,1509,1792,1337,1732,1679,1463,1498,1531,1524,1517,1517,1662,1623,1374,1331,1331,1532,1602,1813,1417,1546,1703,1461,1711,1772,1693,1627,1599,1272,1220,1207,1304,1336,1243,1317,1664,1402,1488,1281,1410,1132,1158,1227,1235,1282,1425,1437,1364,1389,1599,1227,1259,1507,1754,1842,1704,1394,1186,994,942,898,1069,1166,1239,1259,1405,1648,1575,1659,1822,1528,1166,1008,1014,951,755,796,1340,1058,1282,1267,1257,1275,1480,1664,1722,1866,1897,1741,1771,1750,1428,1278,1179,1324,1269,1336,1267,1296,1195,1288,1293,1279,1338,1703,1591,1674,1624,1537,1403,1631,1671,1636,1428,1219,1200,1268,1283,1219,1413,1464,1855,1448,1268,1379,1232,1235,1054,1230,1385,1596,1718,1654,1633,1457,1377,1487,1281,1837,1435,1445,1231,1282,1262,1170,1264,1397,1612,1734,1715,1672,1511,1617,1743,1512,1637,1541,1063,248,959,1589,1120,220,889,1564,1084,261,901,1558,1109,262,884,1532,1132,259,849,1540,1142,259,785,1233,1278,1293,1323,1374,1243,1381,1266,1425,1281,1304,1284,1428,1320,1302,1331,1339,1382,1452,1295,1233,1243,1278,1224,1272,1241,1556,1188,1203,1191,1224,1223,1171,1192,1206,1533,1284,1221,1274,1280,1268,1260,1236,1588,1761,1740,1774,1653,1665,1693,1836,1940,1182,1331,1323,1395,1328,1403,1271,1339,1350,1370,1379,1345,1366,1375,1395,1386,1826,1679,1609,1556,1640,1573,1533,1470,1256,1371,1367,1424,1592,1498,1455,1519,1675,1922,1660,1602,1581,1655,1582,1561,1529,1278,1417,1353,1390,1554,1484,1498,1546,1659,1884,1704,1593,1602,1624,1586,1575,1506,1298,1368,1367,1375,1549,1507,1531,1505,1615,1842,1757,1621,1596,1579,1616,1587,1516,1342,1340,1391,1378,1547,1517,1540,1448,1592,1784,1557,1219,1161,1000,840,957,1082,1008,1112,1134,1277,1207,1037,929,1011,1049,1067,1628,1205,1207,1009,847,904,1082,1000,1090,1104,1287,1187,1098,880,1003,1027,1086,1932,1924,1899,1942,1958,1994,1932,1945,1878,1844,1758,1809,1886,1906,1947,1937,1941,1474,1988,1920,1969,1979,1973,1968,1945,1975,1926,1772,1756,1771,1779,1746,1838,1773,1737,1789,1766,1778,1745,1741,1692,2010,1946,1891,1890,1889,1971,1588,739,831,2019,1963,2012,1986,1953,1961,1995,1959,2017,1951,1950,1955,1987,1966,1992,1940,1960,1819,1581,1557,1560,1558,1590,1548,1562,1665,1785,1620,1708,1588,1632,1857,1803,1840,1813,1699,1514,1575,1481,1707,1661,1738,1612,1706,1638,1673,1735,1769,1837,1841,1836,1882,1830,1645,1713,1559,1781,1833,1822,1841,1853,1583,1602,1581,1557,1673,1683,1740,1647,1772,1709,1780,1738,1821,1557,1535,1729,1728,1687,1545,1863,1649,1760,1651,1815,1664,1690,1586,1639,1713,1501,1542,1730,1683,1625,1479,1605,1934,1838,1016,1859,1916,1694,1804,1533,2023,1999,2004,1771,1525,1370,1224,1297,1251,1495,1593,1566,1517,1450,1470,1482,1516,1523,1492,1217,999,875,982,1298,1110,968,1116,1057,1761,1818,1877,1887,1779,1872,1755,1795,1973,1762,1608,1627,1644,1733,1772,1783,1664,1845,1842,1862,1893,1753,1902,1754,1825,1930,1844,1615,1671,1667,1728,1780,1784,1687,1860,1770,1913,1786,1928,1762,1939,1794,1911,1979,1909,1994,1979,1890,1952,1969,1962,1988,1854,1681,1740,1829,1762,1864,1883,1798,1701,1619,1282,1280,1690,1571,1609,1203,1148,1109,983,507,296,1211,1275,1315,1276,1354,1451,1296,1329,1313,1430,1356,1300,1346,1283,1460,1373,1302,1383,1313,1448,1544,1191,1403,1445,1795,1913,1962,2040,2036,2001,1998,1962,1960,1641,1621,1515,1478,1741,1594,1726,1734,1575,1752,1794,1591,1761,1586,1606,1608,1625,1672,1806,1907,1910,1839,1653,1725,1819,1958,1959,1858,1706,1750,1863,1924,1820,1761,1628,1847,1929,1896,1875,1631,1768,1908,1999,1946,1917,1722,1678,1874,1886,1876,1760,1344,982,981,980,1411,1492,1595,1593,1643,1623,1698,1643,1620,1573,1852,1698,1724,1723,1589,1721,1605,1638,1690,1707,1925,1739,1709,1744,1731,1730,1734,1607,1714,1677,1731,1684,1606,1682,1636,1518,1979,1904,1854,1948,1946,1921,1882,1696,1784,1654,1681,1768,1954,1878,1910,1872,1902,2001,1919,1952,1939,1925,1829,1796,1790,1802,1888,1955,1865,1893,1910,1902,1849,1873,1680,1370,1187,1363,1717,1600,1657,1622,1901,1870,1843,1847,1852,1847,1834,1862,1888,1857,1903,1897,914,611,619,914,1089,967,1355,1229,1288,960,1826,1701,1636,1560,1761,1590,1649,1692,1592,1471,1630,1460,1348,1223,1586,1643,1692,1723,1703,1711,1728,1609,1706,1378,1348,1553,1435,1531,1456,1511,1448,1459,1438,1375,1363,1849,1811,1816,1857,1861,1856,1861,1813,1900,1820,1821,1841,1928,1905,1877,1852,1876,1985,2010,1966,1895,1902,1876,1937,1925,1938,1880,1936,1901,1870,1882,1866,1895,1882,1765,1497,1463,1560,1640,1596,1596,1664,1619,1628,1620,1598,1747,1666,1635,1665,1651,1622,1660,1635,1675,1700,1650,1651,1659,1635,1621,1628,1649,1889,1865,1874,1840,1867,1873,1831,1870,1845,1960,1861,1824,1850,1839,1835,1845,1857,1950,1879,1848,1858,1866,1861,1842,1864,1887,1602,1383,1433,1423,1311,1449,1410,1601,1406,1293,1485,1479,1395,1421,1826,1875,1831,1828,1803,1826,1825,1920,1929,1679,1732,1710,1683,1690,1699,1758,1622,1721,1579,1800,1692,1706,1740,1772,1728,1574,1663,1892,1832,1831,1871,1602,1808,1857,1869,1851,1855,1676,1735,1774,1765,1782,1755,1605,1748,1690,1685,1826,1632,1724,1757,1826,1739,1771,1721,1670,1699,1632,1674,1721,1389,1208,1282,1180,1268,1258,1155,1352,1676,1541,1505,1658,1673,1538,1559,1590,1576,1535,1545,1558,1877,1854,1937,1886,1863,1496,1657,1418,1593,1737,1813,1780,1715,1785,1478,1473,1705,1757,1747,1498,1371,1455,1856,1899,1502,1449,1625,1421,1533,1581,1459,1687,1516,1483,1522,1533,1475,1577,1434,1481,1547,1496,1598,1498,1490,1508,1643,1556,1475,1559,1355,1493,1416,1514,1892,1841,1840,1792,1803,1818,1756,1753,1686,1567,1810,1691,1791,1796,1618,1766,1789,1630,1865,1937,1858,1889,1893,1750,1924,1722,1778,1765,1577,1766,1723,1787,1635,1746,1753,1758,1694,1791,1714,1765,1711,1636,1683,1621,1762,1694,1816,1657,1687,1723,1725,1696,1726,1672,1729,1720,1773,1549,1426,1675,1760,1679,1712,1760,1618,1450,1560,1511,1547,1389,1515,1515,1510,1658,1796,1702,1742,1770,1652,1710,1719,1678,1610,1672,1616,1691,1581,1621,1639,1695,1641,1657,1608,1686,1655,1641,1631,1635,1727,1631,1657,1623,1686,1631,1635,1632,1722,1636,1653,1670,1619,1754,1615,1616,1589,1772,1621,1706,1694,1788,1637,1641,1617,1679,1658,1615,1677,1679,1805,1601,1611,1625,1710,1648,1881,1763,1672,1627,1793,1794,1563,1769,1820,1787,1701,1909,1885,1874,1937,2014,1940,1938,1961,1982,1738,1860,1935,2000,1997,2003,1985,1827,1917,1836,1816,1918,2004,2035,2022,2002,1960,1954,1925,1906,1884,1904,1902,1926,1955,1985,1761,1902,1886,1892,1851,1748,1598,1623,1953,1773,1810,1545,1607,1641,1628,1571,1807,1403,1401,1328,1330,1432,1536,1481,1359,1427,1553,1485,1426,1442,1438,1537,1492,1380,1681,1751,1815,1694,1689,1699,1743,1730,1661,1718,1681,1759,1670,1669,1666,1695,1616,1739,1658,1676,1625,1749,1687,1653,1646,1729,1637,1644,1639,1728,1955,1884,1902,1944,1879,1928,1880,1889,1935,1788,1779,1792,1922,2013,1984,2039,2047,2030,2048,2021,2020,2029,2037,2041,2049,2054,2052,2032,2038,2038,1865,1852,1864,1922,1922,1898,1875,1867,1737,1475,1513,1369,1667,1637,1641,1521,1572,1646,1567,1621,1528,1416,1553,1618,1550,1520,1639,1461,1400,1540,1423,1767,1851,1829,1737,1657,1661,1819,1851,1882,1848,1808,1780,1649,1835,1842,1826,1600,2008,1987,2012,1921,1890,1926,1579,1712,1703,1751,1704,1791,1788,1757,1664,1779,1688,1708,1675,1655,1480,1511,1498,1516,1537,1526,1536,1505,1531,1518,1496,1531,1498,1559,1542,1503,1496,1492,1298,1282,1291,1169,1969,1935,1923,1883,1931,1964,1935,1928,1879,1352,1274,1294,1351,1353,1330,1305,1459,1649,1445,1453,1605,1653,1481,1598,1560,1698,1695,1666,1660,1657,1671,1639,1673,1705,1659,1246,1287,1311,1285,1319,1208,1220,1409,1266,1095,1012,1118,1178,1175,1009,1325,1500,1253,1316,1240,1223,1240,1275,1406,1271,1553,1339,1319,1363,1322,1359,1288,1310,1725,1589,1621,1743,1719,1620,1530,1288,1822,1978,1499,1054,1259,1167,1349,1102,1530,1968,1931,1579,1747,1820,1825,1742,1570,1945,1208,437,558,463,541,504,552,467,843,495,1056,1307,1447,1341,1190,1113,487,874,518,1397,1437,1530,1499,1388,1088,568,1523,1036,1399,1142,1511,1364,1196,1186,1796,1787,1708,1748,1799,374,99,1179,472,662,605,521,482,756,630,498,1293,919,885,1446,1418,1390,1425,1423,1547,1600,1710,1606,1641,1550,1602,1852,1580,1130,1168,1176,1237,1308,1263,1302,1262,1455,1508,1600,1622,1674,1596,1394,1336,1383,865,25,30,25,450,690,1227,744,1463,1630,1675,1620,1631,1213,1655,1515,1607,1538,1707,1904,1936,1904,1949,1879,1744,866,1102,1493,1344,957,960,1283,1324,1416,1445,1495,1527,1566,1615,1735,1763,1536,1607,1493,1562,1584,1512,1545,1708,2051,2051,2036,2012,1890,1932,2018,1968,1745,1910,1873,1945,1996,2036,1989,2034,1987,2021,1973,2033,2049,2011,1724,1833,1999,2007,1996,1941,1667,1605,1244,1228,1191,1429,1993,1913,1717,1752,1899,1892,1767,1790,1780,1846,1937,1968,1959,1973,1967,1966,2009,1881,1545,1550,1557,1515,1536,1555,1537,1511,1377,1380,1314,1325,1281,1295,1347,1534,2008,2023,1981,1981,1998,1986,1921,1935,2014,1838,1725,1668,1664,1719,1644,1335,215,438,1244,1316,1320,986,1019,954,1104,1158,1617,1705,1555,1705,1733,1673,1516,1575,1579,1611,1552,1591,1498,1480,1260,1383,1057,1175,1235,1341,1235,1315,1423,1496,1558,1608,1466,1451,1416,1287,956,1084,1596,1512,784,1167,1264,1377,1486,1459,1477,1517,1174,1285,1441,1513,1696,1718,1852,1837,1781,1802,1565,1642,1586,1649,1573,1600,1493,1602,1486,1455,1242,1401,1525,1577,1356,1362,1375,1396,1347,1279,534,638,454,722,1445,1529,1560,1554,1416,1480,1545,1460,1359,1327,1150,1172,1318,1396,1514,1381,1119,823,324,881,1731,1908,1783,1780,1559,1403,1013,1128,1561,1583,1559,1539,1574,1571,1551,1704,1769,1837,1729,1822,1787,1879,1773,1758,1405,1397,1361,1414,1424,1495,1672,1718,1552,1559,1507,1481,1539,1539,1468,1657,1905,1834,1540,1279,738,757,850,1241,1489,1588,1673,1707,1476,1594,1365,1345,1240,961,606,844,821,870,618,928,1439,1226,518,562,512,972,1753,1692,1088,1141,1023,1181,1365,1362,1093,1125,907,994,1429,1485,1429,1460,1429,1563,1695,1759,1638,1792,1876,1857,1562,1416,1000,1149,1134,1170,960,1012,833,1070,1004,1148,1207,1150,473,566,621,671,496,543,612,656,506,565,635,706,522,583,613,684,444,513,563,1024,1878,1698,1050,1131,1040,1127,1039,1102,1113,1337,1801,1668,1678,1714,1640,1676,1735,1567,1153,1312,1663,1665,1690,1758,1885,1484,245,359,291,379,185,281,247,374,52,273,25,179,162,287,268,305,241,632,1437,1484,1620,1530,1071,1079,1072,1127,1187,1327,1467,1521,1449,1614,1855,1879,1696,1710,1385,1620,1625,1657,1374,1428,1247,1276,1601,1577,1585,1168,1639,1443,1492,1475,1397,1254,1432,1472,1403,1532,1520,1518,1287,1100,1307,1341,1364,1202,1325,1095,1140,1049,1469,1520,1505,1479,1529,1535,1522,1523,1068,772,600,511,770,710,777,669,610,546,514,707,674,705,689,691,762,689,750,821,784,694,540,474,913,2017,1988,1762,1752,1689,1676,1697,1710,1713,1706,1701,1691,1874,1947,1819,1771,1686,1682,1763,1735,1752,1073,987,1253,1792,1464,1670,1858,1542,1477,1467,1481,1481,1471,1486,1471,1489,1300,585,546,546,643,583,434,565,613,579,565,623,604,585,544,318,422,535,421,189,502,606,354,334,436,352,494,1219,1940,1858,1660,1650,1681,1671,1672,1667,1662,1699,1683,1694,1681,1880,1862,1655,1714,1665,1757,1782,1657,1667,1098,712,705,1294,1901,1656,1738,1578,1751,1818,1583,1533,1474,1523,1489,1488,1499,1509,1502,1490,1507,1500,1493,1478,1516,1475,1508,1502,1496,1462,1480,630,330,569,561,677,519,593,697,580,326,574,446,442,460,481,308,386,612,652,590,651,719,538,672,642,566,632,445,551,357,531,497,418,338,417,495,462,421,527,419,479,462,606,548,570,553,326,588,398,528,466,412,370,551,430,488,543,213,304,559,1866,1985,2032,2004,2006,2052,1715,1675,1696,1680,1708,1716,1726,1684,1695,1674,1683,1700,1680,1692,1685,1695,1701,1706,1736,1718,1698,1690,1690,1717,1675,1704,1671,1936,2048,2048,1864,1599,1684,1732,1695,1731,1765,1641,1683,1742,1717,1669,1674,1656,1763,1776,1683,1666,1652,1709,1647,918,892,937,784,734,938,1049,1025,1028,1192,1194,1162,955,1102,926,1067,843,912,1306,750,1988,1968,1895,1767,1586,1464,1574,1484,1512,1534,1489,1455,1509,1502,1480,1470,511,555,375,450,434,397,483,362,666,654,539,565,566,537,551,200,266,144,355,477,667,498,505,475,428,384,529,412,203,301,1721,2043,1945,1707,1716,1674,1707,1692,1705,1694,1702,1687,1781,1719,1666,1685,2048,1892,1735,1668,1689,1748,1726,1699,1779,1826,1640,1609,1013,1134,1479,1370,1930,1721,1450,1583,1479,1502,1495,1478,1491,1487,1480,1451,1493,360,242,226,161,513,470,203,259,344,437,268,410,363,309,119,149,166,414,297,456,506,286,270,373,496,554,306,312,1439,1995,2053,1670,1685,1722,1675,1694,1698,1664,1661,1690,1701,1708,1718,1860,2048,1809,1854,1786,1773,1740,1655,1707,1822,1822,1868,1433,616,490,886,1039,859,1430,1623,1702,1737,1465,1496,1507,1498,1489,1472,841,446,406,320,346,491,282,400,438,454,329,455,400,282,240,398,462,1194,1970,1788,1678,1700,1665,1672,1698,1686,1717,1967,1805,1762,1646,1718,1770,1825,1829,924,1168,1446,1501,1659,1541,1498,1504,1437,571,591,440,468,554,498,559,526,398,367,315,867,1938,1652,1653,1648,1677,1666,1984,1664,1638,1690,1476,1264,1648,1618,1532,1446,1520,1488,1495,1501,1485,1493,1484,1499,1503,1537,1469,1497,1495,1498,1412,545,483,482,298,315,483,489,341,312,478,504,530,390,369,436,401,472,398,466,320,170,170,437,256,318,212,179,291,368,275,335,292,391,257,337,444,361,388,364,378,347,490,334,372,352,259,358,392,256,424,510,448,620,1986,1925,1963,1960,1943,1653,1679,1673,1680,1681,1690,1665,1675,1719,1722,1677,1675,1662,1674,1667,1675,1666,1684,1680,1681,1663,1687,1677,1893,2048,2053,1629,1622,1616,1632,1653,1682,1811,1709,1711,1675,1701,1588,1608,1642,1688,1694,1634,1009,647,682,575,656,488,1057,1281,1511,1112,1192,978,1407,1516,1437,1309,1516,1453,1364,1880,1807,1833,1813,1575,1558,1474,1469,1481,1494,1480,1504,1505,1485,1503,1504,1245,505,508,640,694,526,550,418,504,331,156,512,274,440,481,611,454,287,411,584,562,684,603,589,316,586,241,365,541,687,696,676,457,311,398,569,330,172,1242,1984,1975,1986,1711,1712,1666,1712,1695,1701,1675,1712,1704,1697,1703,1756,1692,1720,1695,1711,2012,2048,1821,1760,1729,1763,1806,1784,1747,1753,1721,1785,1786,1782,1769,1587,935,975,1119,1378,1645,1423,1528,1962,1788,1596,1573,1685,1572,1489,1484,1505,1497,1487,1496,1489,1485,1482,1496,1510,1487,1489,1465,1488,1468,1473,1482,1499,1503,1379,559,667,659,598,597,535,528,643,625,541,506,381,404,581,577,462,439,463,551,448,686,420,541,595,422,404,520,511,506,594,316,544,417,427,442,543,357,236,471,469,467,533,528,388,229,464,450,296,421,400,218,308,328,484,448,496,458,223,542,502,337,246,360,500,420,323,262,537,523,400,484,419,378,576,609,617,2016,2048,2048,2051,2056,2047,2048,1745,1723,1744,1745,1778,1771,1754,1702,1741,1725,1744,1736,1702,1725,1750,1761,1761,1739,1761,1769,1745,1753,1720,1718,1725,1776,1746,1787,1747,1738,1764,1770,1732,1747,1803,2048,2048,2048,2048,1961,1737,1796,1835,1849,1886,1798,1785,1801,1817,1800,1685,1759,1838,1812,1815,1829,1782,1833,1838,1847,1804,1743,1815,1873,1876,1860,1824,1846,1843,1862,1861,1806,1467,885,798,850,707,902,1377,1251,1486,1078,1209,1481,1226,1043,840,787,1215,1359,1505,1217,1983,1951,1873,1762,1660,1430,1643,1589,1576,1561,1492,1497,1511,1516,1514,1507,1440,1473,1493,1501,1461,1490,1490,1517,1513,1488,1494,1502,1478,1497,928,521,679,610,467,498,355,562,584,623,689,599,625,688,500,486,479,558,610,498,350,435,513,569,565,376,531,464,381,553,486,197,200,379,446,439,328,437,238,442,388,477,349,290,445,388,562,301,337,167,432,411,348,173,208,176,323,263,550,516,459,586,437,452,542,1938,2001,1923,1984,1980,1967,1638,1674,1681,1683,1658,1702,1716,1690,1679,1682,1643,1647,1686,1698,1703,1673,1705,1699,1690,1685,1667,1691,1658,1677,1676,1675,1664,1680,2048,2048,2048,1567,1699,1709,1743,1773,1797,1624,1649,1665,1789,1718,1793,1700,1729,1741,1705,1723,1691,1698,1755,1475,841,725,542,539,760,721,990,1013,972,685,746,598,730,679,708,740,641,745,484,324,711,669,995,703,582,503,627,1621,569,1601,1667,1787,1788,1783,1660,1677,1498,1629,1614,1540,1475,1483,1483,1482,1474,1470,1494,1478,1463,1466,1497,1461,1484,1464,1472,1470,1482,1486,1460,1472,1489,1493,1474,1478,1486,1504,1470,1474,1445,1483,1452,1483,1458,1460,1473,1487,1451,1453,1471,1461,1495,1490,1493,1463,1450,1477,1477,1440,1454,1422,1411,1415,1482,1493,1475,1434,1446,1480,1456,1479,1454,1491,1484,1461,1489,1428,1471,1469,1476,1484,1476,1471,1442,1438,553,527,376,621,457,477,257,503,492,305,244,640,552,442,625,449,467,627,637,492,680,481,599,551,394,489,655,595,578,467,427,478,511,544,529,425,449,583,523,537,642,585,655,552,295,333,492,467,508,575,560,670,555,493,565,474,563,412,378,540,489,445,402,543,570,344,445,486,398,580,414,527,339,581,608,554,652,582,609,523,533,558,488,594,545,281,420,332,534,446,527,512,390,290,470,458,282,490,465,486,400,330,513,622,466,545,583,381,233,439,439,217,202,365,517,526,547,390,368,477,329,337,288,382,324,604,380,441,523,482,593,602,520,536,532,599,464,416,429,461,543,590,539,481,489,511,531,352,248,449,496,423,556,530,499,592,462,323,307,566,490,491,425,447,487,424,447,615,605,453,477,477,476,467,538,631,530,384,360,526,458,392,520,650,381,335,392,295,300,230,407,376,292,389,221,538,509,626,585,440,304,375,588,522,532,424,531,505,488,522,467,447,510,327,313,404,417,598,565,539,403,408,518,531,374,570,570,487,511,458,444,528,533,392,501,504,194,160,487,586,536,595,457,518,521,502,517,401,608,1899,1932,1948,1914,1929,1941,1998,1963,1969,1985,1946,1988,1955,1936,1995,1972,1931,1996,2051,1947,1676,1628,1635,1663,1680,1718,1717,1714,1688,1661,1697,1673,1706,1664,1697,1669,1681,1675,1680,1667,1679,1682,1691,1692,1685,1689,1668,1697,1679,1675,1688,1683,1673,1678,1694,1680,1692,1667,1693,1694,1659,1657,1641,1677,1701,1646,1688,1656,1680,1644,1662,1679,1673,1654,1678,1707,1697,1685,1681,1689,1672,1657,1694,1663,1639,1714,1713,1682,1679,1657,1654,1660,1692,1656,1656,1670,1644,1638,1660,1664,1683,1660,1678,1675,1665,1677,1721,1681,1712,1690,1683,1729,1680,1661,1693,1727,1691,1690,1678,1683,1679,1669,1677,1705,1687,1665,1862,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,1880,1650,1577,1679,1758,1786,1742,1753,1721,1741,1664,1660,1654,1694,1711,1663,1732,1755,1698,1726,1715,1743,1729,1741,1657,1623,1730,1705,1737,1645,1718,1594,1676,1693,1715,1677,1588,1722,1719,1753,1761,1782,1696,1670,1706,1713,1691,1747,1727,1655,1640,1701,1774,1711,1514,1464,1559,1618,1723,1751,1620,1769,1820,1725,1722,1721,1647,1771,1794,1716,1644,1751,1712,1764,1800,1733,1703,1110,878,792,895,832,722,738,696,642,728,536,612,619,670,266,284,733,624,767,671,907,604,683,703,788,800,800,705,813,835,692,807,873,823,754,784,893,692,739,701,697,759,626,722,770,607,893,678,750,791,601,583,325,427,550,657,838,533,492,708,622,820,855,875,766,616,429,523,640,673,790,572,537,667,490,566,524,639,739,720,648,747,902,575,530,942,557,549,464,956,788,925,651,723,714,623,788,554,772,799,608,609,730,545,775,591,539,532,417,743,816,860,905,610,689,776,774,310,775,767,722,681,655,790,682,559,679,808,686,580,731,501,636,727,772,544,374,349,285,322,280,383,401,312,295,299,254,311,413,494,507,699,535,312,550,694,528,755,679,575,660,832,582,709,658,993,584,442,389,503,492,362,456,366,200,511,343,314,296,237,211,571,597,465,661,750,776,377,218,206,250,256,164,179,220,546,1225,1891,1311,1923,1888,1945,1917,1912,1930,1947,1925,1936,1958,1929,1907,1875,1793,1908,1852,1864,1543,1545,1479,1478,1476,1493,1481,1486,1493,1497,1483,446,527,439,554,458,393,516,476,462,272,443,451,519,419,439,620,281,376,455,289,404,366,364,318,446,299,470,316,259,398,407,572,1988,1930,2007,1672,1686,1714,1714,1690,1724,1671,1717,1717,1685,1692,1669,1670,1677,1764,2048,1897,1757,1716,1791,1750,1736,1748,1823,1771,1738,1721,1724,1307,792,796,1033,1549,1363,1348,1165,1600,1632,1755,1554,1474,1515,1499,1467,1440,1503,1487,1499,1492,1502,421,279,489,460,382,684,572,589,533,616,509,456,426,369,300,413,468,367,297,418,344,434,543,366,279,548,268,239,1063,2020,2040,1746,1693,1712,1705,1712,1717,1717,1680,1714,1697,1687,1710,1687,1852,2048,1719,1600,1790,1859,1843,1739,1737,1779,1841,1775,1773,1776,1048,647,856,1129,968,1319,1329,1566,1671,1726,1594,1620,1577,1500,1486,1488,1485,1481,1506,1489,1492,1471,1466,1464,1493,1470,1452,1480,1493,1486,1482,1484,1481,1443,1475,1470,1496,1469,1479,1489,1482,1472,1485,1479,1485,1505,1494,1463,1501,875,623,571,640,679,701,617,553,530,592,569,637,592,636,591,621,612,623,563,535,636,651,595,565,530,690,595,609,624,583,534,439,532,687,619,528,552,499,532,541,553,514,547,638,560,438,388,199,301,447,386,496,481,428,444,527,673,552,376,181,169,401,130,240,324,527,430,534,468,502,674,518,566,618,601,615,576,471,535,394,574,483,652,583,605,286,506,517,509,502,293,258,339,582,538,662,564,524,359,554,626,501,568,556,638,551,608,440,584,1482,2004,1998,1986,2043,1905,1964,1945,1980,2023,1718,1711,1709,1710,1704,1711,1702,1699,1712,1675,1711,1699,1679,1711,1714,1692,1690,1686,1693,1702,1647,1666,1663,1640,1680,1673,1681,1677,1700,1676,1679,1678,1693,1681,1702,1684,1667,1660,1674,1695,1676,1669,1656,1695,1662,1654,1978,2048,2048,2048,2012,1746,1762,1711,1675,1621,1718,1718,1801,1734,1755,1754,1662,1726,1705,1653,1721,1597,1696,1685,1741,1728,1692,1756,1753,1701,1615,1614,1709,1750,1703,1743,1663,1118,939,887,842,807,766,870,760,869,759,1072,1044,915,747,1016,835,1315,1106,1208,1138,1067,1096,1225,1090,1111,1200,1482,1396,1354,942,1086,1312,764,861,742,494,777,508,414,718,940,1002,1172,1039,1217,822,591,547,806,1229,1060,881,1070,1470,1836,1849,1860,1869,1901,1930,1913,1945,1853,1570,1543,1485,1485,1492,1485,1489,1484,1461,1487,1499,1485,1028,460,238,446,532,347,412,487,477,389,157,147,226,299,318,380,510,326,484,438,286,348,349,485,425,267,380,334,276,458,251,421,326,374,781,1980,1981,2033,1652,1704,1649,1708,1683,1680,1697,1706,1708,1687,1701,1703,1693,1696,1683,2048,1964,1677,1689,1761,1740,1735,1779,1807,1798,1730,1743,1710,1675,655,778,1279,1531,773,718,1028,1571,1854,1799,1565,1611,1492,1480,1503,1493,1506,1492,750,488,562,611,492,446,544,435,365,423,460,439,161,304,345,497,388,296,398,411,395,267,624,1930,1960,1693,1714,1728,1677,1710,1672,1665,1688,1696,1716,2020,1838,1776,1814,1741,1754,1705,1769,1830,1602,782,770,1625,1654,1491,1374,1584,1652,1468,1483,1345,1508,1483,1469,1513,1461,1475,1470,1481,1514,1511,1487,1495,1480,1320,604,388,581,599,497,533,443,494,528,491,490,679,552,602,239,370,409,308,422,424,581,382,482,373,219,223,570,596,666,558,606,559,393,605,383,434,594,384,655,621,407,435,570,298,637,1856,1975,2029,2022,1690,1731,1700,1696,1693,1685,1676,1664,1707,1729,1663,1680,1668,1714,1726,1721,1722,1733,1724,1704,1962,2048,1953,1730,1706,1728,1720,1721,1665,1697,1685,1661,1730,1787,1778,1746,1759,1772,1273,883,795,972,1540,1651,1343,1515,1440,1606,1455,1778,1841,1774,1613,1444,1429,1484,1496,1492,1462,1495,1482,1481,1470,1476,1483,1495,1480,1470,1494,487,523,633,516,510,390,548,594,551,371,401,516,365,392,282,402,490,589,527,446,527,511,451,451,249,200,208,450,451,364,216,65,193,340,296,235,348,533,418,386,473,224,326,332,230,1642,1974,1908,2017,1774,1703,1685,1672,1686,1672,1692,1706,1690,1664,1663,1664,1706,1678,1670,1684,1665,1671,1694,1683,1898,2048,1990,1716,1706,1666,1784,1744,1727,1728,1676,1682,1701,1601,1761,1639,1700,1777,1414,658,793,465,910,874,657,821,856,858,823,504,1109,1286,1768,1715,1609,1658,1651,1507,1468,1495,1510,1508,1496,1480,1445,1480,1492,1505,1478,1527,1476,1517,1494,1499,1443,1467,1496,1532,1508,710,520,616,364,405,498,493,617,543,416,392,447,552,509,81,534,591,535,469,436,409,325,186,173,456,580,540,501,571,510,483,408,340,395,501,511,557,497,267,338,536,300,324,191,102,193,563,539,439,511,387,352,476,420,426,364,316,182,312,399,403,385,468,484,427,290,457,398,473,407,1190,2012,2050,1972,1997,2041,1915,1707,1693,1665,1668,1684,1717,1644,1684,1715,1686,1712,1703,1685,1682,1689,1680,1677,1708,1706,1700,1686,1669,1677,1669,1716,1696,1669,1691,1706,1707,1721,1999,2048,2048,2030,1644,1720,1575,1657,1767,1535,1783,1745,1788,1765,1723,1695,1758,1699,1724,1756,1696,1718,1718,1711,1868,1618,1725,1783,1831,1138,658,555,626,597,649,744,742,728,443,225,472,747,717,418,502,395,331,470,446,350,234,290,1026,1288,441,1637,1681,1756,1810,1754,1765,1572,1400,1486,1489,1530,1504,1232,497,249,237,270,434,323,158,239,247,193,486,443,344,381,462,515,1456,1980,1662,1678,1692,1711,1669,1670,1674,1845,1866,1773,1737,1780,1696,1608,1066,831,1120,1269,1645,1686,1638,1515,1511,1506,1496,1474,1495,1486,1493,1489,1472,1479,1489,1499,1496,1489,1488,1476,1506,811,603,621,609,544,502,530,555,527,519,545,581,453,618,581,517,619,419,467,573,585,525,530,585,570,318,496,576,550,331,350,509,493,485,509,423,443,440,541,427,420,631,358,590,603,609,637,417,330,648,489,454,436,623,367,623,586,580,585,588,1316,2055,2023,2045,2032,1867,1715,1709,1714,1706,1686,1708,1717,1712,1702,1680,1680,1682,1687,1712,1682,1718,1687,1705,1671,1662,1675,1663,1721,1716,1721,1773,2048,2048,1866,1765,1765,1745,1739,1628,1722,1655,1767,1794,1798,1835,1823,1699,1647,1743,1804,1808,1494,706,763,862,700,857,1648,1663,1299,1343,1709,1681,1514,1325,1077,1706,1839,1855,1744,1832,1617,1571,1510,1510,1484,1485,1476,1479,1477,1481,1468,1484,1503,1474,1488,1481,1488,1502,1519,1485,1495,1494,1499,1470,530,131,277,136,500,571,480,442,463,481,607,649,214,361,474,362,450,301,550,565,569,326,369,167,368,378,181,531,365,606,563,445,546,475,548,314,299,550,447,452,589,583,525,526,239,219,449,340,464,487,450,531,601,518,667,567,486,506,502,300,445,486,219,121,430,365,484,339,296,1509,2021,2002,2028,2039,2019,1659,1694,1691,1688,1652,1692,1663,1651,1665,1695,1687,1671,1685,1695,1714,1679,1720,1665,1684,1699,1697,1700,1696,1713,1703,1686,1693,1688,1656,1733,2048,2048,2048,1779,1742,1759,1734,1749,1717,1604,1728,1726,1656,1692,1807,1766,1799,1703,1764,1738,1666,1760,1706,1665,1593,1715,1103,859,716,760,758,756,734,685,541,727,741,991,1005,1041,845,721,895,915,1182,994,904,1018,981,950,748,992,878,602,568,750,70,558,1210,1431,1751,1845,1820,1831,1795,1599,1505,1545,1498,1493,1487,1491,1503,1505,1483,1496,1523,1037,413,417,211,320,514,607,349,498,381,520,460,419,290,495,348,354,538,392,345,303,528,414,314,392,394,197,385,173,291,365,503,367,220,256,207,1544,1974,1960,1867,1702,1679,1693,1681,1634,1698,1665,1684,1653,1664,1701,1702,1704,1695,1682,2033,2048,1709,1743,1752,1773,1642,1779,1682,1630,1665,1771,1730,1751,1660,1221,573,681,755,1173,1160,929,1078,1723,1896,1892,1651,1503,1532,1482,1502,1497,1491,1488,1511,1493,1489,1501,1509,1496,1512,1528,1496,1483,1477,1496,1502,1509,1479,1483,1505,1490,1477,1515,1521,1515,1461,1523,1500,1489,1463,680,518,574,510,463,528,551,624,624,587,628,471,424,472,486,463,453,542,571,611,596,598,547,582,509,427,490,580,626,552,287,522,428,552,463,495,496,506,491,557,417,479,581,392,331,320,332,462,373,329,286,520,409,358,515,424,598,539,509,285,545,616,627,596,541,575,354,569,494,531,483,390,503,517,319,509,504,520,378,382,465,503,490,348,502,494,361,400,237,517,570,313,441,407,348,363,580,364,402,469,292,176,317,438,365,317,346,389,232,393,319,1212,2005,2038,2009,1971,2008,2026,1983,2040,2050,1770,1679,1685,1680,1681,1683,1681,1702,1720,1699,1703,1741,1719,1727,1709,1734,1719,1750,1741,1721,1709,1696,1701,1700,1678,1689,1668,1681,1699,1685,1713,1708,1641,1670,1689,1691,1679,1724,1709,1746,1753,1737,1735,1660,1681,1714,1696,1659,1654,1685,1860,2048,2048,2048,2048,2048,1689,1733,1680,1691,1579,1673,1770,1709,1774,1750,1755,1756,1751,1687,1706,1694,1708,1702,1731,1621,1680,1591,1643,1777,1739,1667,1737,1602,1664,1612,1706,1774,1749,1672,1836,1594,1534,1639,1089,765,752,791,856,634,713,780,636,810,913,932,948,1008,538,526,607,681,891,829,577,791,613,664,837,613,585,561,513,188,814,868,796,971,1035,1113,768,1057,874,774,724,541,1231,1429,1712,1848,1823,1855,1860,1801,1815,1908,1677,1656,1595,1491,1496,1502,1484,1505,1483,1482,1480,1480,1331,483,491,511,452,498,444,491,403,399,344,286,388,123,58,404,570,604,557,581,530,618,363,212,54,292,438,230,372,333,215,63,295,1834,2053,2050,1715,1667,1695,1692,1696,1725,1720,1724,1678,1645,1714,1704,1710,1739,1994,2048,1818,1840,1815,1796,1795,1724,1803,1768,1720,1802,1831,1858,1012,764,713,907,934,597,1362,799,1251,1548,1643,1642,1490,1561,1530,1513,1515,1500,1495,1495,1487,1496,1487,1479,1495,1479,1497,1475,945,400,213,318,384,421,413,409,370,226,210,593,473,550,597,477,480,460,265,301,467,374,278,485,506,403,238,415,402,383,407,260,424,419,458,459,466,289,631,2001,1993,2053,1773,1651,1652,1696,1709,1704,1678,1709,1725,1699,1702,1693,1658,1651,1658,1660,1656,2046,2048,1602,1635,1777,1901,1880,1813,1825,1803,1850,1838,1705,1670,1641,1030,664,661,715,616,232,377,425,380,350,392,474,486,1558,1174,543,602,1516,1510,1501,1512,1687,1692,1618,1611,1538,1506,1505,1524,1518,1537,1529,1518,1493,1521,1514,1508,1505,1512,1507,1515,1527,1511,1511,1494,1510,1526,1514,1507,1502,1535,1498,1511,1528,1536,1533,1533,1515,1529,1521,1524,1505,1510,1498,1489,1504,1494,1479,1479,1494,1490,1502,1488,620,551,414,517,497,444,610,449,500,688,677,672,704,693,690,713,682,650,653,750,724,743,565,540,627,319,622,523,625,620,738,630,641,618,649,583,638,559,613,634,496,567,645,576,571,591,558,478,542,578,566,626,639,511,598,644,572,521,573,529,623,524,446,505,569,499,532,659,545,639,569,597,616,510,602,556,655,631,505,507,594,540,458,529,554,575,630,489,404,581,594,621,659,574,731,739,707,652,665,648,682,698,626,572,618,683,625,647,556,522,516,633,585,604,651,586,542,605,610,614,589,543,587,523,294,575,542,583,506,553,554,477,600,486,480,583,594,513,390,395,591,574,501,542,421,371,496,535,558,515,506,367,1175,2035,2054,2046,2046,2041,2048,2033,2057,2056,2056,2014,2052,2007,1718,1729,1680,1701,1710,1727,1705,1679,1707,1698,1702,1697,1701,1696,1692,1703,1730,1733,1708,1725,1730,1726,1745,1736,1754,1757,1758,1756,1738,1702,1691,1724,1711,1687,1683,1667,1699,1730,1698,1675,1709,1704,1694,1711,1721,1755,1742,1750,1746,1747,1712,1719,1719,1733,1725,1740,1729,1761,1741,1737,1741,1760,1745,1747,1726,1758,2030,2048,2048,2048,2048,2048,2048,1994,1705,1651,1711,1743,1707,1675,1701,1765,1700,1776,1793,1762,1848,1783,1825,1820,1774,1812,1776,1765,1767,1813,1598,1582,1695,1731,1680,1632,1599,1788,1701,1724,1715,1674,1723,1828,1826,1816,1825,1831,1811,1697,1708,1586,1653,1790,1805,1798,1806,1834,1857,1819,1774,1182,906,885,938,949,905,785,782,859,927,1152,1282,1343,1263,1151,1257,1234,1249,1339,1329,1196,1100,1250,756,727,775,906,964,972,1043,1275,1077,481,573,1549,1363,1771,1954,1695,1810,1874,1910,1828,1841,1818,1794,1887,1871,1532,1507,1536,1507,1496,1483,1503,1505,1497,1453,1564,174,89,280,165,97,228,255,455,214,329,308,325,120,399,278,172,150,126,506,403,320,150,536,414,400,439,251,150,1071,2032,2036,1779,1699,1702,1696,1723,1699,1676,1696,1727,1736,1699,1661,1685,1814,2048,1867,1799,1705,1618,1830,1692,1811,1797,1772,1885,1740,1765,747,689,1824,1422,1645,1584,1650,1528,1463,1151,1507,1502,552,462,472,532,565,469,440,1592,1733,1696,1648,1949,1781,1719,709,719,1397,1545,1484,1506,1495,1155,234,425,430,496,519,105,227,568,307,352,285,503,548,1938,1749,1668,1685,1679,1678,1650,1963,1602,1734,1776,1681,1369,762,1639,1781,1675,1506,1468,1500,1505,1479,1090,488,450,356,400,487,321,296,478,523,447,379,493,475,454,529,856,2027,1689,1664,1667,1691,1674,1674,1689,1966,1661,1713,1715,1764,1425,565,945,1249,847,1222,1633,1886,2055,2057,2040,2051,1895,1613,1602,1465,1145,819,798,756,866,917,992,2027,1997,1987,1888,1867,636,973,1064,1464,1134,1480,1387,1341,1138,823,755,1002,1093,1237,1038,1042,760,986,883,1019,1060,1018,1087,1134,1085,922,728,714,807,991,766,856,771,768,1173,2048,1429,1082,1061,961,953,980,1106,1031,1002,877,1212,1146,820,1074,1008,1011,1011,692,831,758,843,1065,1425,1485,1453,1539,1973,2048,2048,1898,1413,2028,2056,2048,2048,1995,1813,2057,1647,1926,2053,2048,2048,2048,2048,2048,2048,2048,2024,2041,2030,2037,2042,2010,1954,1821,1695,1951,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2008,1942,1836,1800,1389,1734,1923,1902,1763,1935,2048,2052,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2009,1528,1033,2033,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2029,1628,1973,2048,2048,2048,1872,1588,1370,1229,1016,730,471,1927,2048,2048,2048,2056,2057,2055,2048,2056,2048,1879,1432,744,2057,2056,2023,1951,1849,1705,1526,1190,892,585,288,259,1919,2056,2048,2049,2051,2048,2048,2055,2048,2048,2057,2048,2042,1986,1819,1621,1507,1318,2032,2057,2048,2048,2048,2048,2048,2057,2048,2055,2057,2044,2030,1922,1711,1461,1025,1163,1822,1865,2023,2048,2048,2048,1949,1689,1293,923,2048,2047,2048,1928,1967,2048,2054,1815,603,66,210,33,722,2048,2048,2048,2057,2048,2056,2054,2039,1904,2049,2048,2048,2048,2008,2057,2048,2048,2048,2048,2048,2048,2048,2048,1945,1515,1990,1995,1559,1615,2057,2000,1592,1274,1542,1875,2038,2056,2048,2048,2048,2037,1854,1441,388,1008,2057,2048,2048,2048,2048,2057,2048,2056,2048,2040,2009,1846,1845,1973,1567,1991,2048,2048,2055,2048,2048,2048,2048,2040,1936,2048,2055,2048,2048,2048,2048,2048,1999,1666,1995,1961,1891,1042,2054,2048,2017,1875,1693,2048,2048,2048,2057,2048,2048,2048,2048,2056,1828,1357,1612,1934,1997,2036,2037,2050,2035,2024,2050,2055,2046,2039,2028,2051,1994,1976,1994,2052,2036,2053,2041,2038,2013,2039,2042,2038,2044,2036,2023,1920,1806,1613,1399,1295,1168,1185,1177,1074,1016,1117,1009,1041,833,943,865,782,690,591,474,164,186,144,61,62,1859,2024,2052,2048,2056,1922,1739,1639,1232,841,2048,2048,2048,2048,1903,2048,2048,2048,1962,2048,2048,2048,2030,2043,2056,2056,2055,2057,2029,2048,2048,2042,2026,2047,2053,1963,1886,1849,1704,1751,1661,1879,2054,2057,2056,2056,2048,2048,1859,1928,2055,2048,2048,2057,2056,2052,2041,1919,2048,2039,1968,1567,1873,2055,2048,1563,1804,2048,2048,2048,2048,2048,2048,2050,2057,2026,1931,1728,1502,1426,1301,1227,1476,2057,2048,2048,2055,2044,1901,1723,1114,263,1018,1411,1732,1883,1953,1903,1930,2027,1934,1793,1544,1336,1120,610,372,1571,2006,2045,1499,957,1739,2048,2048,2048,2048,2048,2048,2048,2038,1976,2041,2036,1831,1533,1016,1474,2057,1860,1427,1653,2048,2048,2050,2048,2057,2049,2052,2053,1937,1877,1641,2035,1633,1150,1207,2056,2048,2048,2048,2048,2048,2055,1866,1871,2048,2048,2048,2048,2048,2048,1943,1073,1446,1869,2030,2056,2057,2048,1323,1617,1874,2012,2056,2048,2048,2050,2015,1854,1335,990,815,506,395,229,115,1835,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1300,2048,2048,2048,2048,2048,2048,2048,2048,1080,270,1311,1709,1951,2051,2057,2048,2048,2048,2048,2048,2048,2048,2050,1878,1628,1478,1369,1184,1072,986,912,703,895,1006,878,841,1619,2053,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1925,1259,742,666,1513,2048,2048,2057,2049,1462,1767,2051,1766,1276,979,569,774,1072,2048,1899,1184,524,1830,1914,2005,2047,2057,2048,2050,2035,2010,1526,1785,1833,1936,1976,2055,2057,2048,2048,2057,2048,2048,2043,1999,1752,1500,852,753,1582,2053,2048,2048,2048,2048,2048,2048,2057,2056,2005,1734,1445,1074,976,188,456,2048,2036,1987,1918,1793,1694,1762,2048,2025,1783,1611,1256,1763,1755,2031,2048,1919,2048,1033,2048,1662,1862,1907,2048,1665,1907,1382,1448,1106,1646,1989,2028,2001,2012,2006,2003,1912,2048,2048,2025,1708,972,1354,2048,2048,2048,2048,2048,1148,1148,2056,2048,2048,2048,1442,362,1886,2048,2039,2048,2057,2048,2048,1952,2048,2047,1484,2052,2055,1772,2057,2037,1642,2022,2056,1447,1336,1961,1457,775,2053,2048,2056,2057,1253,122,152,1406,2051,2056,2048,2056,2048,2048,2055,1928,2048,2048,1902,2048,2056,1981,2048,2045,2048,2057,2055,1973,1970,1810,1812,1677,1641,1692,1212,1664,1713,1536,1275,1339,2050,1911,1831,1924,2048,2048,2048,2038,1418,1039,750,1463,1868,1348,1747,1822,2048,2048,2048,2048,2048,2048,2048,2056,2054,2031,1942,1778,1574,1383,1166,908,1384,2048,2048,2048,2048,2057,1513,723,2021,2049,2056,1984,1897,2030,2048,2048,2056,2048,2048,2048,2047,1944,1776,1422,693,1060,2048,2048,2048,2048,1311,180,1082,2052,2048,2048,2048,2048,2048,2048,2048,1899,1521,224,580,1408,1975,2057,2048,2048,2048,2048,2057,2048,2055,2048,2056,2009,1888,1781,1790,1706,1549,1389,1259,1238,1225,1034,724,558,580,498,448,482,400,405,433,473,425,564,479,216,398,925,1137,1188,1238,1124,1047,980,844,685,516,267,119,179,1128,1629,1866,2054,2057,2048,2006,1960,1975,1844,2024,1751,2021,1979,1626,1618,2048,2049,2040,2018,2047,2034,2034,2051,2004,1971,2019,2012,1888,2006,2051,2048,2037,1690,1857,2001,1754,1896,2049,1732,1278,1660,2052,2053,1987,1914,1912,1918,1904,1896,2033,2048,2056,2050,1848,2048,2024,1586,1537,1591,1390,1102,423,594,371,511,678,743,1124,1603,1379,1426,1337,1282,1427,1740,1707,1805,1790,1918,2020,2022,2046,2048,2052,2057,2055,2057,2048,2057,2048,1981,1990,1995,1974,1906,1760,1744,1720,1697,1673,1539,1419,1447,1397,1419,1325,1243,1190,1223,1215,1114,1075,948,927,942,1551,1411,1483,1545,1416,1445,1570,1527,1493,1562,1457,1563,1609,1719,1556,1634,1522,1503,1605,1696,1754,1767,1775,1759,1804,1848,1934,1869,1978,1939,1971,2046,2050,2048,2048,2054,2057,2047,2009,1892,1760,1593,1096,1387,1799,1989,2053,2051,2048,1366,182,1071,2048,2048,2039,1404,2057,1028,2057,2056,1597,1525,2048,2048,2048,2055,1533,2048,1962,1576,1314,2048,2056,2048,2056,2057,2056,1993,2047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,1998,2055,2048,2048,2048,2048,2004,1965,2011,2050,2048,2054,2046,2057,2048,2048,2048,2048,2048,1765,1300,2048,2049,2057,2055,2057,2043,2048,1909,1913,1825,1546,1609,1442,1727,1839,1582,1445,1388,1138,949,378,1558,2048,2048,2048,2055,1989,1643,1091,213,912,2048,2056,1996,1646,1450,1739,1850,1033,201,738,1075,383,390,404,339,400,384,383,324,780,906,819,702,533,584,1165,804,652,1468,1408,1420,1356,1192,1450,648,634,810,386,310,417,466,414,946,896,344,343,453,464,782,515,548,645,379,304,673,746,710,703,597,1129,804,597,986,799,564,966,540,585,641,824,949,541,283,261,277,270,304,496,268,256,232,402,687,659,789,607,406,181,469,580,571,423,400,489,494,266,526,788,267,255,484,326,882,957,693,123,199,281,281,731,364,358,303,464,201,706,357,196,1050,841,188,303,404,375,326,267,280,341,740,689,519,435,713,441,517,436,356,772,476,331,515,705,938,258,212,290,443,821,363,598,544,400,593,580,374,615,233,429,458,509,556,332,734,556,503,180,644,753,656,790,1196,1078,1104,1063,1075,1161,389,339,1144,1056,1061,819,493,1310,438,467,346,156,394,213,204,136,239,248,470,135,135,133,262,500,645,357,657,539,457,866,586,485,272,299,598,298,315,330,735,397,584,319,433,297,268,306,684,181,311,235,204,353,193,446,285,373,177,225,212,207,495,342,537,433,698,1057,376,432,528,447,638,636,334,564,1016,758,868,696,462,381,354,415,416,274,399,309,227,263,170,154,642,727,935,791,502,706,424,417,485,239,519,767,218,377,241,542,878,789,811,543,422,643,258,399,195,323,242,466,415,642,479,641,502,624,723,538,65,297,464,635,787,437,423,262,430,359,374,334,1147,1297,1202,1406,956,1371,1991,1953,534,122,125,417,577,154,201,119,466,179,406,607,374,1065,854,672,217,372,375,213,384,247,185,216,227,493,400,632,501,485,671,669,909,173,576,208,354,399,456,366,272,266,496,305,312,231,267,190,315,509,247,386,220,426,420,388,127,400,601,564,581,215,267,466,384,440,207,480,603,355,805,433,530,590,454,540,948,189,197,148,145,149,163,345,263,143,172,150,179,283,151,135,380,207,329,840,107,193,289,173,462,379,444,456,436,225,191,173,459,279,444,678,198,380,178,185,226,373,116,450,556,160,229,314,175,317,130,131,626,513,507,355,426,403,218,258,166,579,318,202,839,291,388,412,400,401,595,812,655,959,885,723,1472,1108,1126,1301,1377,1434,1468,1445,1495,1537,1514,1550,1499,1501,1492,1503,1598,1487,1551,1472,1518,1528,1440,1331,1320,1202,1249,1380,1346,1242,1179,1110,1067,1331,1415,1689,1866,1711,1759,1753,1658,1725,1728,1718,1704,1737,1699,1717,1759,1758,1767,1690,1709,1595,1693,1659,1679,1710,1696,1737,1693,1702,1637,1643,1667,1668,1593,1584,1655,1843,1611,1716,1693,1583,1671,1662,1731,1717,1806,1840,1809,1812,1831,1810,1725,1759,1664,1760,1825,1857,1780,1651,1723,1857,1714,1752,1775,1760,1713,1677,1622,1640,1607,1785,1629,1638,1583,1598,1668,1650,1643,1719,1696,1718,1656,1727,1684,1743,1705,1617,1752,1722,1697,1725,1683,1637,1674,1686,1635,1655,1584,1602,1539,1532,1533,1465,1761,1106,1092,842,756,756,1310,1396,1477,1343,1148,1115,1188,1146,1326,1406,1255,1284,1293,1269,1215,967,901,717,873,914,761,616,806,1058,1105,1043,1224,1455,1599,1440,1463,1381,1566,1420,1418,1555,1466,1426,1335,1299,1261,820,239,212,230,226,215,861,1520,1572,1309,1460,1658,1415,1082,1402,1151,728,1347,1412,985,1565,1680,1264,1651,1435,1606,1524,1428,1372,1618,1434,1339,1625,1670,1448,1481,1239,1601,1358,1582,1255,1646,1663,1634,1701,1487,1496,1744,1216,1601,1240,1668,1382,1313,1511,1658,1686,1502,1306,1607,1425,1541,1580,1525,1595,1478,1233,1680,1547,1594,1614,1388,1414,1587,1704,1253,1482,1039,1549,1465,1539,1157,1507,1453,1602,1633,1578,1266,1564,1263,1461,1064,1489,1375,1701,1096,1547,1518,1365,1382,1394,1574,1588,1574,1656,1539,1458,1346,1675,1569,1677,1356,1842,1298,1856,1364,1575,1226,1788,1648,1356,1680,1359,1773,1325,1416,1797,1779,1193,1602,1736,1737,1686,1543,1700,1653,1583,1516,1724,1721,1377,1574,1242,1626,1463,1662,1469,1708,1611,1738,1414,1664,1429,1859,1420,1805,1563,1870,1890,1894,1926,2046,2001,2044,2033,2026,2011,2035,2021,2027,2025,2052,2051,2037,2035,2001,2020,2001,2021,2014,2047,2053,2051,2040,2043,2051,2017,2024,2013,2048,2039,2029,2042,2056,2038,2012,2028,1849,2009,2025,2035,2042,2031,2027,2021,2042,2020,1999,1987,1981,1978,2016,1987,2030,2029,2026,2051,2036,1994,1969,1995,2012,1991,1997,2044,2012,2023,2054,2035,1993,1955,2013,2007,1983,2012,2040,2047,2057,2034,2022,1967,1991,2022,2029,2030,2056,2049,2050,2046,2056,2035,2048,2028,2038,2002,2051,1991,2035,2041,1923,1984,1959,1996,1974,2015,1952,1964,1989,2002,1961,1957,2012,1988,1975,1915,1978,1962,1985,1984,2000,1942,1989,2006,1967,1935,2002,1974,2006,1952,1968,2010,1974,1990,1954,1971,2012,2010,1991,2003,2002,1971,2009,1959,2017,1899,1998,1967,1985,1998,1977,1973,1950,1985,1983,2000,1966,2007,2009,1991,1984,2020,2001,2020,1992,1973,1993,1966,1965,2016,1998,1970,1931,2016,2018,1968,1971,2034,2035,2017,1974,2027,2011,1943,2055,1999,2024,2019,2035,2005,2024,2022,2008,2000,1974,1970,2002,2040,1987,1972,1861,1970,2050,2054,2030,1945,1957,1909,1905,1773,1880,1883,1941,1787,1919,1822,1972,1998,1966,1864,1918,1930,1857,1858,1855,1989,1938,1963,1923,1951,1879,1923,1879,1888,1990,1953,1925,1970,1786,2018,1801,1901,1825,1910,1959,1972,1891,2030,1955,1915,1844,1861,1901,1885,1959,1947,1910,1927,2000,1952,2014,1708,1971,1722,2000,1960,1941,1947,1849,1975,1939,1964,1824,2011,1956,2010,1770,1704,1845,1739,1883,1867,1876,1829,1804,1905,1829,1961,1930,1917,1930,1916,1858,1959,1906,1923,1890,1919,1867,1949,1915,1974,1907,1929,1888,1899,1903,1848,1889,1779,1919,1936,1793,1923,1574,1762,1395,1712,1817,1763,1850,1958,1929,1978,1991,1984,2009,1903,1975,2006,1939,1973,1978,1838,1406,1416,1387,1443,1461,1483,1445,1538,1527,1445,1521,1683,1783,1660,1599,1899,2000,2000,1912,2023,1964,1828,1949,1904,2001,1992,1940,1957,1931,1959,1823,1878,1972,2011,2014,1915,2009,1903,1974,1870,1881,1980,1959,2018,1896,2034,1923,1934,1885,1856,2014,1910,2023,1884,1981,1843,1912,1894,1858,1975,1955,2014,1897,1980,1942,1876,1896,1872,1997,2007,2014,1942,1991,1929,1849,1929,1929,1949,1963,1899,1964,1929,1920,1956,1931,1901,1737,1727,1670,1656,1670,1691,1742,1733,1688,1654,1704,1736,1717,1733,1708,1644,1680,1719,1684,1715,1717,1723,1649,1612,1654,1724,1750,1768,1705,1623,1586,1654,1750,1746,1651,1627,1618,1662,1672,1759,1743,1741,1668,1638,1646,1763,1794,1772,1637,1618,1631,1763,1867,1849,1777,1728,1769,1779,1842,1894,1871,1790,1778,1827,1775,1791,1723,1702,1674,1699,1745,1684,1563,1741,1728,1719,1613,1843,1653,1640,1759,1730,1505,1707,1756,1679,1661,1763,1774,1769,1653,1786,1797,1783,1663,1738,1763,1713,1739,1728,1734,1997,1911,1982,2008,2002,1958,1908,1933,1937,2001,1985,1979,2006,1984,1975,1997,1983,1988,1970,1985,1970,1999,2000,1994,1984,1965,1996,1967,1951,1974,2016,2000,1992,1963,1981,1957,1988,1968,1977,1971,1971,1971,1975,1968,1962,1980,1955,1980,1961,1972,1946,1982,1944,1960,1962,1957,1961,1965,1986,1976,1945,1956,1943,1956,1951,1959,1952,1961,1956,1966,1952,1965,1955,1960,1957,1962,1898,1913,1910,1904,1904,1931,1890,1915,1902,1885,1941,1900,1903,1914,1919,1891,1913,1873,1891,1934,1840,1884,1951,1841,1869,1952,1842,1854,1956,1848,1828,1957,1848,1810,1970,1838,1821,1971,1833,1835,1969,1816,1850,1888,1809,1813,1885,1790,1834,1895,1766,1845,1893,1740,1874,1899,1760,1883,1886,1770,1890,1856,1781,1895,1831,1848,1908,1842,1849,1911,1810,1891,1872,1836,1908,1852,1837,1914,1821,1878,1896,1823,1903,1861,1838,1905,1848,1911,1865,1858,1912,1872,1862,1917,1873,1853,1913,1882,1854,1905,1880,1849,1909,1876,1853,1913,1876,1845,1908,1885,1859,1916,1903,1836,1918,1904,1846,1923,1884,1846,1933,1857,1857,1928,1861,1869,1920,1863,1872,1906,1859,1855,1923,1848,1834,1946,1914,1910,1915,1910,1919,1917,1922,1922,1928,1913,1913,1925,1914,1926,1907,1922,1922,1973,1997,1988,1983,1977,2006,1992,1987,1976,1979,2006,1906,1960,1905,1895,1888,1927,1897,1932,1855,1894,1898,1882,1964,1958,1960,1967,1968,1949,1984,1963,1939,1987,1926,1983,1933,1974,1935,1967,1898,1972,1828,1976,1848,1937,1885,1892,1882,1915,1944,1842,1984,1833,1962,1854,1919,1903,1839,1862,1810,1912,1792,1928,1812,1884,1846,1852,1884,1815,1931,1788,1900,1870,1838,1866,2015,2046,2027,2019,2023,1995,2034,2017,2016,2040,2030,2037,2036,2034,2020,2013,1842,2008,2007,2037,2044,2056,2029,2054,2027,2018,2036,2010,2044,2036,2050,2056,2033,2030,2044,2028,1960,1899,2008,1999,2022,2053,2032,2014,2005,1997,1994,1995,1973,1992,2018,2055,2016,2020,2016,2019,1976,2006,1991,1962,1974,2012,2042,2013,2020,2018,2000,1975,2004,1998,1969,1977,2030,2037,2009,2048,2044,2027,2035,2006,2015,2007,1949,2028,2037,2047,2047,2053,2047,2044,2041,2021,2027,2035,2039,2052,2018,2041,1978,2002,2003,2011,2001,1961,1992,1996,1946,2005,1979,1951,1940,1986,1992,2012,1963,2001,2010,1929,1927,1970,1933,1772,1912,2009,2010,1947,2005,1993,1990,1954,1972,1991,1960,1915,1900,1898,1957,1960,1940,1900,1949,1994,1955,1936,1836,1888,1984,1997,1913,1857,1911,1973,1941,1871,1872,1909,1840,1893,1949,1952,1913,1940,1874,1886,1863,1885,1977,1903,1973,1958,1901,1873,1890,1884,1955,1989,1952,1898,1818,1819,1881,1923,2026,1885,1863,1815,1708,1919,1941,1896,1908,1915,1834,1870,1914,1856,1866,1890,1893,1833,1881,1805,1831,1992,1946,1919,1931,1905,1851,1845,1860,1844,1824,1925,1999,1934,1911,1967,1815,1887,1955,1934,2009,2022,2019,1950,1878,2002,1973,2035,1949,1984,1922,2052,2015,1981,1908,1963,2003,2012,1995,1977,1986,2012,2008,1979,1986,1962,2027,2007,2021,1984,1948,1978,1976,1957,2021,1951,2018,2036,2028,1980,2012,1903,2026,1996,1988,1972,2018,2020,2021,1908,1763,1793,1906,2010,2000,1974,2018,1995,1966,1987,1935,1958,1960,1899,1946,1963,1992,1922,2001,1976,2027,1993,1987,1968,1928,1995,1975,1965,1848,1963,1929,1960,1920,1883,1975,1953,1889,1911,1986,1989,2003,1979,2000,2015,2001,2023,1914,1927,1975,1932,1691,1915,1949,1935,1943,1944,1947,2011,1989,2004,1995,1969,1964,2027,1987,1986,1988,1953,1925,1969,1929,1976,1943,1977,1988,1986,2024,2021,1987,1983,1986,2011,1977,1972,1954,1980,1959,1987,1969,1933,1996,1962,1990,1974,1920,2016,2022,1976,1964,1959,1948,2036,1952,1986,2019,1970,2001,2004,1955,2019,1977,1961,2030,1916,2054,1965,1935,2005,1944,1986,2004,2004,1958,1897,1965,1998,1939,1954,1990,1950,1912,1964,1983,2005,1979,1947,1955,1951,1946,1976,1914,1940,1962,1840,1860,1961,1971,1898,1888,1928,1911,1992,1949,1913,1988,1997,1934,1981,1984,1919,2035,1865,1999,1973,1958,2009,2008,2013,2040,2027,1873,2013,1995,1996,2033,2027,2055,2036,2025,1951,2018,2010,1971,2031,2028,2027,1997,2037,2000,2038,2020,2018,2039,2031,2054,2040,2043,1964,2024,2014,1984,2037,2026,2052,2050,2036,1981,2037,1974,2035,2043,2029,2050,2033,2039,1939,1958,1957,1977,1864,1994,1969,1980,2006,1993,2035,2021,1967,1978,1998,2026,1915,2007,1919,1933,1996,2010,2032,1958,2000,1933,1885,2000,1966,1615,1850,1813,1669,1613,1648,1524,1804,1346,1512,1534,1408,1585,1269,1470,1478,1153,1532,1156,1398,1307,1190,1482,1114,1431,1172,886,1595,1367,1211,1202,1274,1446,934,1282,1393,1156,1598,1094,1379,1172,1468,1364,1218,1462,1508,1174,1621,1434,1516,1577,1377,1623,1306,1506,1554,1167,1635,1171,1404,1175,1516,1304,1311,1405,1102,1086,1554,1451,1108,1239,1311,1430,942,1289,1479,1160,1540,1087,1381,1075,1632,1217,1421,1449,1419,1405,1490,1584,1431,1587,1454,1346,1426,1525,1405,1176,1661,1219,1353,1169,1612,1209,1402,1361,1013,1273,1467,1420,1082,1298,1405,1204,959,1282,1387,1162,1537,1100,1416,1143,1611,1280,1443,1448,1399,1452,1451,1565,1440,1565,1561,1214,1502,1483,1227,1334,1534,1296,1377,1159,1560,1178,1407,1328,894,1514,1317,1341,1187,1232,1572,886,1172,1419,1176,1512,1033,1351,1307,1251,1444,1163,1441,1505,1229,1623,1444,1495,1560,1331,1645,1259,1506,1524,1284,1650,1148,1388,1296,1284,1476,1254,1475,1144,952,1631,1368,1210,1194,1309,1597,874,1259,1460,1187,1621,1046,1344,1131,1587,1241,1379,1473,1451,1285,1500,1565,1440,1577,1427,1464,1337,1495,1512,1227,1615,1153,1445,1160,1627,1142,1410,1308,969,1232,1422,1450,1091,1293,1483,1151,1036,1320,1320,1177,1545,1160,1391,1144,1624,1258,1407,1499,1403,1350,1475,1606,1496,1610,1494,1319,1484,1566,1366,1094,1702,1148,1374,1143,1587,1145,1282,1384,1037,1098,1516,1461,1073,1272,1499,1126,1004,1303,1269,1053,1550,1094,1413,1145,1637,1169,1312,1502,1464,1386,1560,1594,1491,1555,1584,1386,1432,1546,1445,1092,1696,1230,1329,1174,1536,1258,1244,1395,1131,922,1604,1456,1221,1221,1293,1462,885,1264,1426,1136,1575,1066,1315,1309,1555,1316,1221,1537,1540,1372,1650,1438,1514,1554,1429,1705,1242,1523,1516,1251,1525,1333,1358,1392,1169,1557,1224,1491,1233,851,1677,1291,1283,1234,1197,1660,852,1248,1449,1293,1563,1104,1315,1246,1361,1551,1281,1468,1508,1250,1682,1469,1554,1579,1403,1708,1288,1544,1523,1215,1579,1298,1415,1380,1142,1587,1233,1512,1241,827,1661,1277,1300,1246,1209,1616,947,1142,1415,1445,1360,1395,1224,1395,1281,1645,1221,1523,1559,1300,1615,1517,1682,1559,1591,1531,1469,1195,1206,1289,1451,1524,1634,1462,1342,1191,1516,1539,1393,1698,1588,1355,1295,1385,1483,1407,1678,1578,1477,1387,1266,1493,1422,1352,1591,1657,1581,1474,1196,1372,1387,1212,1459,1663,1313,1087,1312,1297,1719,1390,1270,1482,1664,1147,1687,1696,1871,1927,1906,1770,1937,1815,1759,1826,1907,1811,1808,1690,1301,1700,1685,1756,1728,1719,1668,1493,844,1258,1992,1997,1825,1600,1140,1197,1805,1522,1735,1718,1956,1707,1808,1778,1892,1727,1747,1902,1896,1849,1656,1692,1958,1594,1981,1869,1939,1975,1965,1927,1831,1814,1612,1876,1816,1894,1902,1822,1656,1701,1506,1612,1804,1662,1598,1694,1597,1411,1668,1764,2012,2015,1967,1899,1994,2031,1999,1942,2016,2035,2019,1956,2002,2036,1969,1978,1942,1959,1888,1978,1954,1973,1926,2019,2009,1999,2001,2007,2037,2003,1982,1864,1977,2056,2054,2038,1991,1915,1837,1595,1977,1854,1948,1907,1897,1952,1871,1929,1866,1904,1931,1857,1899,1975,1879,1924,1945,1887,1888,1289,1649,1939,1698,1543,1494,1246,1517,1758,1618,1610,1826,1564,1586,1577,1584,1547,1623,1630,1647,1579,1268,1269,1644,1640,1276,1290,1988,1846,1788,1765,1776,1711,1772,1865,1738,1664,1664,1740,1636,1611,1841,1770,1236,1519,1649,1472,1482,1231,1314,1779,1485,1251,1184,1367,1732,1359,1551,1961,2001,1972,1979,1973,1915,1838,1550,1915,1889,1872,1614,1810,2005,1886,1875,1866,1788,1858,1929,1629,1930,1550,1447,1687,1509,1408,1499,1660,1411,1708,1380,1723,1506,1704,1593,1841,1532,1695,1589,1729,1496,1422,1610,1519,1872,1263,1265,1422,1700,1832,1831,1724,1447,1482,1600,1782,1540,1455,1654,1609,1681,1677,1511,1584,1676,1583,1432,1544,1437,1677,1630,1494,1561,1550,1635,1630,1522,1167,1604,1501,1300,1320,1355,1236,1281,1368,1532,1242,1209,1425,1390,1271,1451,1368,1289,1606,1577,1553,1865,1488,1486,1888,1842,1874,1865,1535,1940,1796,1662,1866,1606,1858,1231,1857,1920,1448,1674,1736,1682,1687,1583,1432,1624,1449,1616,1515,1517,1602,1554,1499,1420,1588,1534,1548,1417,1605,1464,1818,1880,1817,1873,1841,1821,1476,1487,1585,1520,1827,1966,1929,1834,1886,1908,1864,1968,1124,577,578,473,742,640,529,544,674,1718,2001,1981,1971,1920,1963,1976,1950,1939,1659,1663,1631,1656,1794,1558,1753,1580,1622,1540,1563,1667,1497,1506,1465,1375,1496,1368,1588,1517,1312,1135,1413,1360,1566,1468,1433,1339,1599,1464,1605,1409,1412,1399,1411,1464,1428,1385,1397,1857,1779,1813,1871,1890,1905,1799,1737,1823,1659,1687,1803,1843,1817,1732,1722,1692,1159,838,775,862,1430,1692,1706,1624,1628,1684,1575,1539,1639,1779,1666,1705,1658,1662,1826,1798,1882,1469,1786,1465,1700,1669,1776,1543,1557,1958,1623,1829,1847,1848,1493,1854,1832,1809,1053,1071,937,1072,1076,1078,989,1068,1638,1573,1590,1523,1576,1560,1563,1514,1680,1433,1495,1643,1637,1303,1044,1013,1005,1355,1426,1545,1765,1663,1468,1118,1409,1574,1151,1216,1531,1544,1438,1601,1608,1536,1574,1630,1493,1271,999,810,1025,532,990,738,951,1511,1382,871,549,860,553,809,515,575,857,695,882,490,843,691,901,528,517,919,655,841,494,856,694,786,575,484,868,614,814,278,555,217,177,606,201,635,236,592,175,346,318,163,474,38,554,181,545,188,170,1490,1423,1443,1199,1243,1204,1404,961,1004,1007,996,966,952,1001,989,1507,1396,1403,1434,1511,1482,1376,1359,1567,1444,1499,1503,1582,1592,1510,1510,1489,1568,1428,1426,1378,1403,1455,1422,1425,1548,1382,1392,1375,1372,1156,939,961,957,1095,926,954,918,1077,904,936,930,882,1481,1378,1412,1382,1176,931,927,959,1387,1610,1561,1573,1550,1554,1581,1602,1603,1571,1339,1347,1339,1274,1318,1323,1333,1508,1564,1521,1307,1572,1247,1292,1270,1567,1654,1718,1564,1560,1549,1795,1745,1813,1565,1208,1192,1519,1419,1536,1216,1237,1406,1425,1621,1463,1513,1477,1373,1702,1709,1638,1675,1531,1665,1649,1636,1779,1615,1696,1657,1611,1576,1665,1658,1524,1699,1658,1598,1672,1500,1634,1621,1653,1677,1579,1706,1679,1671,1583,1655,1655,1540,1788,1653,1620,1627,1770,1740,1616,1625,1623,1833,1679,1681,1686,1721,1738,1659,1689,1642,1289,952,952,952,1319,1510,1542,1498,1594,1354,1340,1346,1317,1297,1169,1220,1247,1310,1256,910,963,1370,1226,1162,1116,1131,1183,973,963,918,1568,1505,1510,1549,1510,1511,1509,1550,1657,1424,1388,1377,1394,1363,1391,1360,1377,1681,1535,1550,1537,1563,1530,1522,1545,1599,1729,1605,1609,1654,1616,1592,1590,1663,1786,1474,1418,1419,1414,1493,1436,1380,1443,1898,1760,1714,1689,1743,1738,1708,1678,1908,1753,1715,1690,1681,1724,1667,1668,1673,1424,1004,1215,1022,1100,1063,1212,1183,1123,1054,918,853,664,704,681,1542,1677,1710,1680,1715,1699,1738,1711,1719,1857,1740,1668,1614,1723,1674,1741,1710,1879,1751,1771,1779,1726,1806,1750,1790,1729,1886,1725,1694,1615,1683,1663,1729,1667,1737,1436,1510,1385,1567,1037,1016,1035,1022,1824,1816,1819,1827,1652,1851,1788,1833,1812,1456,1185,1207,1488,1549,1024,1046,1257,1757,1617,1619,1591,1531,1662,1613,1585,1691,1581,1440,1408,1476,1389,1471,1420,1437,1462,1756,1395,1721,1370,1482,1449,1463,1387,1730,1647,1615,1598,1533,1600,1603,1586,1703,1530,1481,1442,1391,1513,1440,1460,1472,1719,1822,1827,1835,1680,1843,1794,1837,1834,1653,1641,1623,1750,1534,1646,1615,1667,1634,1474,1451,1476,1412,1494,1481,1454,1518,1863,1807,1857,1882,1691,1846,1792,1878,1684,1630,1643,1596,1558,1683,1636,1595,1650,1647,1451,1431,1493,1394,1499,1433,1434,1538,1860,1820,1854,1785,1853,1789,1864,1865,1328,949,1759,656,683,1184,691,974,857,698,1387,1164,627,720,1092,1305,923,1251,1389,1275,589,1192,1341,1095,1377,1220,1736,1049,1090,967,1559,1579,1577,1751,1655,1751,1533,1732,1509,1522,1202,785,1274,1549,1513,1006,993,1016,1015,1365,1099,1030,1114,1326,1843,2033,2019,2016,2021,2011,2022,1972,2012,2031,2026,2014,1981,2014,2045,2010,1973,2019,2025,2023,1998,2017,2000,2022,1965,2025,2035,2036,1996,2003,2014,1992,2006,1974,2043,1944,1904,1906,1878,1895,1921,1848,1878,1886,1900,1872,1891,1816,1866,1831,1886,1921,1709,1653,1666,1667,1665,1658,1668,1611,1790,1652,1673,1666,1628,1667,1646,1618,1635,1599,1438,1440,1413,1420,1435,1413,1372,1548,1540,1498,1441,1540,1328,1572,1482,1636,1423,1494,1468,1664,1422,1476,1563,1631,1429,1284,1475,1485,1982,1710,1494,1670,1610,1556,1533,1585,1715,1553,1574,1620,1654,1745,1631,1597,1552,1655,1547,1553,1566,1548,1549,1585,1514,1384,1640,1461,1723,1556,1649,1533,1710,1639,1632,1754,1753,1463,1670,1927,1871,1696,1725,1876,1936,1921,1948,1974,1942,1934,1914,1920,1821,1837,1870,1952,1891,1845,1870,1829,1799,1785,1777,1759,2015,1972,1963,1964,1919,1920,1894,1898,1965,1968,1897,1894,1862,1804,1826,1821,1781,1982,1977,1991,1969,1955,1939,1932,1922,1947,1944,1824,1822,1746,1784,1763,1770,1753,1888,1832,1859,1768,1796,1834,1806,1804,1778,1728,1439,1454,1473,1397,1443,1387,1430,1556,1959,1943,1938,2011,1943,1892,1904,1918,1896,1865,1906,1992,1941,1930,1910,1913,1885,1953,1874,1923,1752,1509,1532,1618,1590,1593,1577,1507,1791,1798,1806,1792,1726,1775,1740,1717,1720,1632,1320,1301,1316,1393,1276,1332,1357,1530,1502,1489,1490,1550,1575,1504,1481,1473,1644,1696,1476,1660,1618,1627,1557,1541,1390,1338,1319,1258,1311,1168,1278,1674,1894,1862,1874,1904,1888,1884,1856,1869,1962,1905,1869,1889,1872,1880,1887,1873,1951,1431,1434,1376,1393,1445,1467,1452,1457,1764,1652,1715,1741,1709,1594,1594,1569,1652,1565,1557,1584,1606,1707,1723,1698,1645,1717,1472,1465,1480,1453,1379,1383,1416,1484,1591,1484,1499,1548,1104,1527,1495,1439,1658,1501,1522,1486,1429,1507,1481,1507,1528,1975,1963,1920,1742,1434,1385,1425,905,1403,1398,1427,1591,1179,1161,1132,1108,974,1064,1171,1173,1518,1433,1452,1823,1903,1881,1912,1897,1898,1893,1923,1709,1602,1537,1456,1535,1460,855,1000,773,968,787,972,671,870,898,935,841,800,984,950,1041,897,1415,1246,1316,1280,950,352,556,450,505,219,534,543,1342,1017,793,818,1085,1342,731,1337,870,179,389,300,352,1262,1335,1561,1616,1841,1745,1818,1827,1809,1770,1775,1775,1781,1632,1649,1572,1622,1589,1652,1586,1596,1445,1305,1327,1306,1568,1666,1675,1663,1640,1700,1663,1680,1694,1666,1669,1683,983,1544,1831,1866,1778,1808,1809,1873,1815,1740,1663,1450,1461,1455,1592,1867,1818,1894,1859,1863,1891,1829,1864,1848,1068,1738,1327,1113,1217,1072,1106,2056,2006,1992,1917,1947,1959,1902,1906,1882,1957,1952,1971,1887,1908,1900,1937,2005,1828,1659,1750,1791,1824,1772,1698,1601,1823,2054,2044,2046,2056,2052,2038,2037,2048,2057,2052,2045,2042,2055,2047,2040,2031,2052,1864,1923,1861,1844,1823,1864,1833,1877,1941,1902,1884,1855,1855,1826,1858,1840,1928,1350,1542,768,795,788,667,723,468,817,896,782,396,625,787,868,689,403,729,822,866,546,468,778,809,915,483,600,1261,1042,1136,595,553,1250,1102,1124,393,796,1152,1078,998,393,1009,1100,1063,782,1315,1264,1577,1300,1736,1475,988,1165,1149,1124,1163,1101,1106,1104,1153,1130,1178,1181,1104,1070,1018,1098,1519,1094,1100,1199,1050,1078,1093,1027,1041,1004,911,1002,1055,879,884,759,852,1374,431,530,506,536,577,489,571,562,448,516,478,515,511,539,565,503,1385,1467,1503,1501,1545,1501,1498,1502,1514,1139,978,992,1398,1598,1416,1401,1302,1356,1451,1742,1643,1639,1661,1616,1616,1667,1642,1676,1711,1483,1467,1549,1468,1514,1484,1459,1631,984,1107,1234,1340,1333,1297,1332,1126,1385,1438,1387,1447,1525,1498,1559,1564,1667,1394,968,1170,1143,1140,1143,1088,1100,1138,1176,1130,1173,1197,1094,1093,1017,1184,1424,1138,1114,1211,1060,1066,1115,1072,977,1004,902,1013,1048,859,855,786,851,1340,424,552,518,563,547,450,562,566,458,515,478,507,498,524,556,509,1655,1795,1788,1808,1791,1799,1731,1815,1406,1426,1378,1386,1603,1271,1218,1202,1491,1466,1353,1285,1509,1352,1011,1025,1003,1428,1694,1519,1690,1668,1359,1180,1147,1154,1461,1288,1734,1660,1588,1693,1701,1600,1661,1633,1693,1225,1342,1474,1480,1970,1665,1990,1758,1728,1632,1721,1716,1623,1755,1754,1728,1566,1512,1529,1542,1569,1497,1595,1330,1691,1629,1614,1583,1579,1572,1594,1613,1794,1423,1729,1809,1503,1370,1738,1791,1613,1709,1074,1078,1126,1143,1135,1157,1072,1143,1096,1170,1152,1195,1160,1100,1020,1114,1306,976,1244,1100,933,643,1087,1241,1121,990,914,1256,1125,904,520,1165,1229,1198,972,833,1191,1108,1005,432,1202,1201,1142,995,747,1128,1167,1088,408,1168,1150,1145,892,808,1098,1219,1130,412,1087,1209,1158,903,1419,1133,1102,1199,1034,1051,1103,1068,999,984,923,1005,1032,857,834,800,857,1037,1201,1201,1156,391,929,1220,1120,1015,1262,1122,1249,1133,1195,1208,1112,1238,1183,1264,1125,1092,1215,1187,1291,1134,1122,1244,1155,1357,1187,1031,1007,1133,1273,1136,1002,1028,1092,1359,1094,988,1041,1242,1256,1015,1006,1086,1429,819,475,559,1207,1523,1747,1862,1866,1833,1619,1404,589,505,511,525,567,794,1374,1073,1247,1494,1212,1083,1403,1429,1067,1239,1492,1222,1045,1343,1887,1857,1716,1714,1897,1710,1864,1891,1697,1884,1689,1840,1759,1843,1760,1791,1852,1760,1802,1882,1747,1857,1746,1747,2028,1701,1843,1779,1835,1735,1874,1730,1729,1894,1671,1796,1887,1708,1856,1803,1835,1710,1854,1751,1767,1890,1751,1727,1889,1734,1806,1799,1754,1959,1775,1829,1703,1897,1735,1858,1756,1737,1890,1661,1822,1887,1769,1787,1809,1827,1715,1860,1881,1724,1906,1724,1762,1475,1174,1228,1176,1299,1162,1187,1133,1112,509,784,897,785,387,662,802,840,683,398,728,849,855,509,496,769,820,939,488,1538,965,1125,1168,1150,1202,1100,1094,1088,1168,1157,1151,1183,1133,1064,1057,1087,1552,1472,1605,1062,1076,1149,1125,1053,1078,1069,1013,1033,884,1041,1046,941,893,778,877,1408,1443,1416,1350,414,563,514,551,566,463,566,551,461,526,469,495,503,537,574,502,1579,1648,1655,1573,1716,1655,1640,1667,1690,1699,1772,1636,1620,1610,1653,1623,1120,452,930,764,426,306,802,944,2044,2036,2004,2055,2022,2006,1994,1969,2024,2020,2025,2010,2003,2032,2014,1969,2008,1423,1338,1610,1572,1377,1207,1364,1118,1121,1118,1129,1121,1122,894,71,698,1983,2052,1861,1887,1915,1862,1837,1884,1908,1869,1947,1926,1941,1945,1870,1906,1913,1917,1885,1774,1995,1911,1884,1910,1906,1863,1761,1813,1768,1882,1896,1897,1875,1860,1877,1920,1907,1852,1987,1779,1876,1864,1904,1850,1706,1803,1436,1495,1606,1622,1589,1546,1441,1539,1592,1626,1632,1534,1513,1595,1576,1530,1873,1626,1531,1557,1657,1951,1833,1772,1765,1849,1850,1840,1846,1889,1493,1291,1312,1345,1313,1385,1303,1249,1580,1454,1461,1441,1483,1486,1440,1443,1417,1628,1442,1438,1424,1524,1459,1448,1421,1602,1438,1449,1459,1450,1519,1478,1450,1426,1620,1437,1409,1410,1518,1430,1447,1418,1569,1429,1398,1358,1436,1477,1467,1432,1396,1598,1416,1381,1438,1473,1463,1422,1390,1462,1545,1386,1395,1456,1433,1448,1399,1385,1629,1408,1390,1463,1497,1449,1457,1402,1423,1655,1454,1429,1489,1471,1500,1466,1386,1611,1368,1307,1341,1396,1335,1369,1343,1296,1554,1354,1269,1359,1389,1327,1327,1295,1530,1343,1294,1292,1383,1296,1354,1340,1244,1623,1453,1423,1467,1476,1500,1427,1422,1509,1523,1382,1444,1490,1443,1482,1424,1432,1633,1395,1379,1425,1449,1472,1431,1403,1418,1603,1397,1397,1482,1481,1439,1409,1405,1599,1425,1392,1402,1439,1488,1440,1412,1392,1652,1434,1422,1410,1525,1431,1428,1404,1622,1676,1820,1797,1719,1900,1627,1783,1844,1823,1814,1744,1559,1870,1729,1776,1709,1786,1851,1839,1910,1839,1863,1891,1845,1893,1944,1825,1820,1768,1835,1804,1793,1772,1839,1868,1777,1762,1737,1788,1751,1716,1735,1890,1814,1824,1722,1776,1755,1754,1732,1798,1988,1863,1823,1822,1795,1813,1812,1815,1887,1739,1747,1777,1718,1733,1709,1763,1771,1867,1876,1857,1845,1834,1831,1737,1795,1764,1823,1730,1753,1782,1525,1715,1746,1695,1699,1799,1788,1706,1793,1602,1660,1623,1764,1808,1793,1693,1613,1635,1697,1685,1681,1639,1785,1651,1648,1664,1679,1686,1682,1703,1674,1825,1829,1722,1794,1813,1797,1816,1792,1852,1768,1772,1706,1732,1786,1772,1796,1750,1862,1786,1867,1869,1878,1909,1973,1837,1817,1751,1667,1733,1730,1727,1763,1762,1725,1799,1695,1715,1831,1780,1766,1867,1753,1730,1633,1429,1536,1537,1489,1529,1543,1467,1755,2029,1938,1941,2016,1969,1954,2006,1892,1941,1987,2000,2016,1925,1973,1995,2021,2008,1455,40,40,38,40,322,40,40,38,1303,1814,1825,1821,1847,1853,1819,1799,1865,1582,1462,1441,1432,1430,1428,1425,1439,1766,1826,1817,1742,1784,1771,1817,1748,1796,880,539,38,40,38,318,40,39,40,289,1198,1179,1841,1719,1746,1759,1746,1718,1734,1722,1786,1431,1284,1393,1510,782,1259,1528,1316,1046,1424,1788,1586,1600,40,40,38,40,322,40,40,38,865,1383,1200,1147,1220,1767,1607,1652,1704,1663,1700,1678,1645,1093,40,40,38,542,960,99,378,1589,1873,2026,1633,1647,1633,1642,1657,1682,1728,1734,1688,1759,1706,1761,1724,1703,1688,1675,1742,880,1157,39,1644,1800,1708,1714,1759,1741,1768,1705,1814,1852,1829,1891,1891,1808,1898,1787,1807,1978,1791,1620,1680,1662,1766,1786,1820,1694,1874,1835,1930,1802,1956,1774,1984,1774,1969,1714,1231,1168,1084,1026,1327,1400,1330,1358,1402,1337,1160,1136,1078,1148,1132,1254,1464,688,886,939,1119,1542,1629,919,681,726,919,1569,1697,1749,1317,939,1365,1724,1251,1136,818,898,924,603,669,982,1319,1307,1197,1276,1409,1382,1374,1291,1653,1921,1906,1906,1836,1872,1912,1859,1953,1833,1920,1896,1953,1838,1880,1896,1932,921,946,932,951,1903,1962,1596,1977,1647,1165,1241,1194,1499,1980,2002,2026,2014,1866,1939,1888,1886,2003,2043,2046,2031,1965,1776,1747,1880,1804,1829,1796,1762,1783,1913,1961,1940,1909,1995,1371,1271,1321,1686,1175,1245,1269,1349,1271,1187,1275,1273,1792,1144,1205,1283,1428,1265,733,927,1712,1581,773,828,1590,1672,875,717,1356,1291,1392,1390,1339,1839,1761,1756,1840,1782,1806,1815,1858,1795,1810,1670,1670,1658,1783,1758,1794,1799,1788,1467,1384,1440,1488,1555,1458,1397,1455,1615,1494,1462,1478,1641,1517,1446,1530,1585,1980,1982,1961,1918,2020,1977,1957,2001,1980,1764,1781,1740,1815,1665,1545,1573,1599,1957,1891,1788,1905,1889,1808,1811,1806,1942,1906,1871,1875,1935,1797,1830,1759,1836,1788,1429,1511,1350,1311,1239,1219,1676,1155,1205,1226,1239,1639,1091,1229,1515,1854,1787,1744,1767,1905,1785,1771,1779,1852,1795,1839,1815,1800,1165,880,818,743,1107,1152,1173,1167,1274,1155,1239,1156,1226,1349,1402,1370,1263,1776,1837,1872,1832,1884,1830,1862,1857,1881,1912,1925,1918,1887,1948,1924,1938,1946,1880,1838,1863,1830,1751,1813,1767,1674,1599,1621,1902,1808,1840,1920,1878,1835,1922,1782,1481,1397,1479,1572,1477,1710,1731,1555,1555,1717,1604,1730,1684,1754,1745,1778,1841,1962,2048,2048,1871,2038,1976,1982,1941,2040,1949,1946,1889,1708,1144,1362,1297,1212,1770,1795,1751,1760,1679,1537,1607,1576,1688,1803,1803,1779,1807,1801,1836,1779,1763,1771,1672,1711,1639,1634,1768,1821,1766,1546,1072,1107,980,1425,1092,883,878,1060,1262,1035,1189,862,1172,552,634,503,738,731,718,688,801,962,1162,1193,1040,1258,1337,1457,1349,1387,1396,1420,1732,1550,1267,1553,1623,1391,1583,1734,1591,1676,1031,211,213,200,767,488,478,438,669,2050,2021,2050,2036,2019,2038,2041,2027,2031,1972,1939,1978,1902,1904,1940,1909,1892,1535,1398,1425,1448,1334,1177,1188,1140,1226,1414,1379,1493,1397,1871,1804,1853,1871,1887,1824,1768,1797,1898,1783,1753,1754,1830,1648,1706,1771,1726,1474,1422,1507,1463,1430,1454,1527,1468,1525,1904,1888,1853,1922,1321,1224,1214,1253,1798,1812,1767,1784,1747,1471,1371,1554,1504,2027,2036,2036,2012,2042,1985,1983,1990,1818,1516,1529,1471,1689,1680,1659,1652,1664,2022,1965,1981,2001,1898,1720,1713,1741,1934,2055,2048,2051,2041,1279,1253,861,538,541,544,860,1412,1432,1426,1191,1246,1574,1577,1182,1465,1571,1485,1556,1442,1531,1713,1682,1880,1817,1418,1213,1355,1246,1256,961,982,960,1287,868,917,981,841,1590,1989,1962,1958,1952,2029,2001,1970,2011,1874,1495,1521,1628,1767,1624,1679,1651,1739,1659,1472,1576,1631,1773,1662,1737,1630,1651,1595,1661,1510,1500,1516,1614,1522,1479,1893,1908,1866,1863,1894,1902,1849,1852,1896,1546,1466,1463,1845,1947,1972,2022,2010,1905,1808,1793,1808,1846,1889,1911,1920,1747,1422,1467,1407,1430,1444,1517,1483,1436,1547,1644,1718,1655,1555,1503,1594,1532,1575,1744,1650,1708,1740,1696,1729,1671,1736,1639,1690,1514,1711,1662,1653,1515,1699,1694,1433,1585,1571,1558,1377,1669,1558,1708,1524,1461,1587,1523,1506,1466,1534,1733,1497,1301,1257,1464,1523,1612,1790,1399,1678,1537,1513,1758,1728,1601,1651,1455,1226,1149,1272,1267,1387,1190,1382,1794,1304,1389,1367,1264,1150,1145,1293,1188,1406,1466,1392,1337,1543,1414,1178,1343,1824,1695,1815,1573,1301,1076,1007,913,890,1077,1187,1304,1274,1553,1626,1534,1688,1951,1104,1249,972,999,858,634,1127,1184,1328,1141,1281,1265,1272,1560,1726,1801,1948,1726,1784,1785,1638,1295,1248,1221,1351,1292,1311,1354,1233,1235,1304,1266,1266,1553,1702,1651,1697,1496,1453,1549,1751,1527,1660,1274,1218,1188,1268,1286,1263,1461,1502,1695,1457,1284,1356,1203,1187,1185,1314,1448,1711,1744,1667,1588,1371,1429,1394,1406,1699,1572,1336,1273,1188,1283,1143,1244,1472,1751,1652,1748,1653,1539,1707,1668,1485,1694,1583,556,250,1457,1572,578,250,1375,1561,594,278,1379,1582,596,250,1395,1571,626,244,1331,1580,633,244,1175,1251,1285,1255,1421,1262,1287,1332,1395,1318,1280,1317,1256,1449,1319,1322,1260,1405,1572,1231,1237,1293,1191,1262,1252,1266,1253,1534,1168,1201,1234,1212,1188,1220,1230,1467,1232,1254,1276,1301,1251,1271,1294,1267,1813,1724,1759,1711,1688,1643,1787,1741,1593,1230,1349,1314,1382,1339,1348,1254,1384,1310,1427,1330,1366,1345,1432,1361,1390,1852,1665,1592,1572,1633,1588,1479,1421,1311,1396,1403,1447,1553,1522,1419,1577,1705,1893,1678,1576,1579,1652,1593,1496,1463,1282,1354,1428,1463,1584,1514,1432,1518,1721,1913,1682,1593,1580,1668,1586,1510,1481,1238,1361,1403,1446,1572,1503,1428,1516,1714,1912,1683,1615,1554,1644,1572,1532,1474,1254,1371,1371,1424,1592,1496,1452,1520,1680,1923,1169,1229,1089,914,869,1038,1038,1010,1114,1272,1227,1220,940,984,1043,1037,1464,1295,1218,1130,918,915,993,1072,936,1103,1240,1251,1200,962,924,1048,1073,1338,1994,1922,1918,1952,1961,1963,1953,1922,1875,1812,1784,1835,1875,1935,1920,1955,1895,1536,1967,1923,1969,2012,1988,1927,1961,1999,1796,1734,1778,1755,1770,1772,1846,1768,1750,1793,1750,1786,1769,1567,1888,1994,1944,1858,1882,1942,1916,1224,818,1324,1926,2018,2006,1978,1932,1996,1967,1956,2041,1949,1962,1961,1941,1989,1945,1951,1985,1610,1534,1569,1581,1571,1549,1590,1559,1772,1734,1627,1699,1559,1820,1812,1832,1801,1843,1490,1560,1570,1515,1717,1661,1718,1595,1784,1608,1706,1663,1852,1806,1865,1844,1880,1698,1659,1692,1597,1874,1815,1838,1802,1834,1516,1637,1544,1580,1613,1687,1714,1665,1734,1730,1751,1740,1756,1519,1703,1684,1787,1518,1652,1821,1604,1732,1791,1783,1620,1665,1593,1748,1643,1572,1547,1746,1629,1727,1015,1834,1916,1617,1378,1921,1888,1468,1575,1583,1996,2015,1971,1571,1342,930,1223,1323,1179,1686,1562,1557,1460,1415,1495,1484,1508,1731,1138,1121,871,968,1187,1125,960,1006,1112,1194,1878,1773,1868,1804,1849,1816,1855,1773,1854,1734,1581,1763,1596,1747,1727,1721,1791,1914,1782,1863,1844,1822,1832,1834,1784,1921,1755,1579,1730,1669,1740,1737,1722,1804,1799,1830,1865,1835,1896,1825,1897,1798,1973,1938,1874,1990,1917,1927,1959,2035,1915,1956,1764,1748,1813,1746,1828,1812,1835,1854,1627,1480,1267,1487,1553,1705,1445,1133,1250,1030,863,318,625,1316,1277,1348,1234,1458,1339,1255,1397,1278,1412,1345,1234,1356,1326,1444,1336,1325,1343,1324,1481,1669,891,1630,1409,1898,1931,1995,2048,2004,2013,1983,1923,1950,1635,1553,1495,1553,1691,1643,1743,1746,1801,1742,1748,1622,1714,1558,1613,1641,1502,1657,1817,1927,1863,1747,1608,1766,1916,1965,1916,1806,1641,1815,1894,1941,1802,1768,1609,1920,1915,1894,1794,1552,1915,1934,1921,1918,1912,1609,1801,1862,1881,1868,1735,965,977,968,983,1612,1466,1706,1576,1665,1627,1695,1651,1539,1789,1702,1663,1752,1720,1658,1661,1629,1692,1649,1730,1938,1729,1757,1720,1649,1805,1695,1598,1779,1640,1832,1606,1640,1676,1603,1695,1921,1905,1882,1883,1945,1921,1837,1674,1760,1634,1707,1887,1929,1872,1882,1927,1926,1983,1917,1944,1938,1905,1784,1758,1782,1809,1948,1924,1879,1893,1914,1857,1899,1884,1455,1395,1323,1546,1600,1657,1615,1664,1907,1846,1872,1834,1875,1807,1851,1892,1829,1890,1906,1839,643,498,515,1189,1044,1011,1414,1242,1236,1386,1690,1641,1625,1636,1770,1483,1689,1732,1332,1687,1533,1374,1279,1434,1626,1685,1692,1780,1658,1719,1689,1621,1619,1353,1474,1473,1444,1494,1438,1507,1439,1476,1397,1492,1392,1790,1804,1839,1909,1850,1853,1840,1846,1891,1842,1829,1883,1903,1882,1877,1866,1905,1947,2006,1939,1896,1906,1911,1943,1935,1908,1932,1925,1914,1846,1890,1877,1887,1853,1636,1401,1446,1759,1625,1583,1629,1608,1630,1650,1622,1637,1741,1665,1635,1676,1640,1642,1635,1645,1739,1652,1655,1648,1641,1630,1630,1666,1630,2006,1876,1858,1856,1884,1868,1835,1858,1937,1826,1843,1816,1827,1864,1827,1838,1835,1961,1849,1856,1872,1849,1851,1840,1865,1945,1343,1411,1440,1395,1354,1437,1562,1440,1377,1368,1528,1452,1461,1441,1940,1898,1793,1780,1810,1846,1856,1901,1912,1600,1833,1723,1660,1699,1697,1748,1593,1714,1674,1719,1673,1797,1734,1778,1625,1693,1686,1872,1817,1847,1758,1581,1896,1841,1904,1822,1868,1613,1794,1754,1776,1833,1731,1621,1748,1671,1744,1780,1551,1828,1730,1749,1706,1831,1606,1727,1632,1608,1736,1715,1142,1245,1262,1226,1291,1305,1051,1594,1607,1523,1545,1629,1587,1574,1538,1580,1585,1538,1588,1708,1829,1887,1931,1843,1753,1953,1414,1364,1743,1769,1849,1750,1704,1660,1479,1680,1717,1773,1713,1388,1298,1713,1826,1840,1495,1415,1601,1394,1670,1573,1421,1623,1513,1505,1492,1530,1459,1559,1513,1352,1550,1510,1594,1495,1448,1514,1689,1554,1505,1456,1351,1495,1470,1667,1833,1866,1833,1831,1816,1792,1773,1710,1648,1606,1826,1680,1792,1742,1713,1788,1741,1700,1894,1924,1824,1853,1870,1827,1880,1721,1676,1703,1694,1699,1785,1746,1621,1737,1796,1749,1613,1845,1685,1729,1728,1697,1648,1675,1690,1705,1851,1672,1698,1624,1788,1692,1755,1674,1621,1785,1750,1421,1367,1737,1770,1653,1713,1718,1510,1488,1581,1509,1484,1423,1580,1515,1492,1763,1759,1667,1745,1746,1642,1718,1726,1611,1640,1671,1639,1709,1595,1621,1637,1702,1658,1625,1616,1700,1631,1660,1639,1719,1634,1642,1640,1609,1711,1637,1670,1624,1705,1627,1652,1656,1693,1603,1641,1591,1653,1685,1609,1713,1761,1731,1649,1614,1636,1724,1605,1638,1655,1772,1684,1620,1624,1609,1725,1751,1889,1719,1651,1715,1812,1711,1686,1726,1840,1803,1690,1911,1881,1877,1980,1977,1956,1944,1965,1909,1822,1838,1969,2010,2009,1999,1933,1833,1967,1771,1824,1974,2023,2025,1990,2010,1962,1919,1925,1913,1906,1932,1898,1950,1957,1856,1829,1916,1917,1881,1828,1645,1625,1771,1866,1813,1685,1618,1598,1651,1628,1609,1644,1425,1370,1337,1426,1426,1541,1461,1387,1376,1520,1558,1301,1447,1548,1459,1422,1611,1705,1702,1752,1657,1689,1728,1801,1634,1731,1718,1759,1719,1660,1645,1688,1673,1712,1664,1701,1657,1707,1683,1744,1641,1660,1734,1632,1640,1644,1905,1883,1907,1913,1914,1913,1890,1905,1906,1841,1793,1785,1808,2000,2008,2001,2039,2041,2027,2036,2017,2029,2039,2042,2049,2049,2056,2048,2031,2040,2022,1855,1852,1895,1927,1924,1871,1854,1875,1545,1441,1495,1473,1697,1624,1539,1542,1659,1563,1570,1690,1447,1413,1622,1597,1509,1595,1607,1432,1474,1438,1548,1738,1927,1782,1711,1682,1622,1928,1857,1884,1805,1781,1794,1745,1827,1854,1608,1826,1979,1997,1991,1908,1900,1900,1602,1661,1747,1713,1780,1741,1813,1693,1683,1764,1680,1714,1682,1322,1534,1500,1521,1495,1578,1524,1508,1497,1529,1510,1528,1513,1553,1477,1486,1504,1489,1420,1277,1323,1255,1500,1911,1937,1900,1870,1952,1936,1936,1943,1671,1351,1286,1331,1359,1314,1309,1333,1574,1488,1488,1492,1635,1627,1509,1627,1520,1829,1621,1654,1720,1364,1728,1629,1650,1833,1301,1226,1288,1279,1297,1298,1236,1212,1508,1207,1005,1131,1099,1278,1109,1091,1284,1465,1245,1277,1197,1244,1235,1334,1348,1571,1433,1286,1308,1353,1334,1296,1274,1361,1940,1493,1654,1757,1684,1545,1485,1377,2002,1928,1171,1187,1126,1258,1275,1038,1936,1961,1926,1493,1823,1825,1825,1615,1772,1964,546,604,475,492,598,452,558,403,872,496,1327,1418,1372,1256,1124,865,483,804,927,1401,1492,1489,1452,1389,707,1117,1026,1463,1421,1139,1382,1289,1308,1267,1896,1755,1737,1748,1428,84,415,1161,748,529,614,457,642,585,655,689,1291,811,1110,1414,1432,1432,1384,1404,1669,1572,1702,1577,1587,1542,1728,1790,1457,1060,1117,1207,1258,1364,1217,1300,1311,1451,1584,1579,1676,1690,1473,1317,1454,1264,471,25,30,25,832,588,1379,701,1639,1600,1673,1598,1661,1155,1662,1531,1572,1555,1838,1921,1942,1918,1952,1887,1278,866,1387,1514,1074,952,1084,1251,1389,1433,1460,1493,1572,1497,1705,1744,1599,1612,1542,1527,1567,1569,1495,1590,1893,2053,2051,2037,1955,1862,2021,2008,1854,1776,1945,1893,1984,2005,2038,2013,2038,1995,2022,1999,2046,2041,1884,1726,1962,1999,2006,1997,1809,1649,1443,1200,1239,1196,1740,2009,1794,1718,1832,1906,1858,1759,1758,1753,1937,1929,1980,1947,1957,2005,1975,1990,1705,1560,1560,1539,1547,1533,1548,1530,1443,1396,1339,1338,1284,1300,1324,1313,1787,2004,1997,1989,1986,1999,1951,1963,2006,1995,1743,1702,1653,1671,1675,1687,728,208,817,1349,1294,1233,975,1063,893,1010,1417,1692,1645,1603,1757,1712,1608,1505,1611,1559,1615,1555,1588,1465,1499,1241,1254,1049,1286,1270,1312,1223,1428,1412,1573,1561,1560,1461,1400,1423,1047,948,1361,1576,1292,704,1309,1274,1417,1521,1489,1465,1349,1170,1420,1504,1548,1719,1778,1832,1773,1819,1710,1557,1648,1621,1640,1554,1591,1494,1573,1496,1326,1307,1480,1552,1515,1369,1389,1387,1409,1370,944,517,625,459,1161,1429,1592,1506,1464,1415,1532,1538,1501,1364,1273,1116,1241,1328,1460,1502,1224,1029,602,292,1422,1770,1896,1779,1687,1565,1181,1069,1356,1546,1581,1555,1574,1594,1570,1585,1817,1738,1838,1728,1875,1771,1877,1767,1468,1398,1417,1356,1432,1416,1598,1683,1648,1545,1523,1460,1512,1526,1487,1475,1790,1934,1668,1535,906,725,954,851,1169,1599,1613,1661,1663,1501,1601,1323,1264,1277,858,551,889,814,768,606,1106,1464,913,503,614,508,1414,1801,1397,1088,1107,1037,1312,1413,1266,1089,939,891,1381,1434,1464,1426,1416,1466,1637,1694,1755,1642,1876,1893,1704,1552,1185,1034,1195,1157,1155,1009,1015,868,1160,983,1238,1180,852,484,624,597,610,505,594,600,606,508,658,605,624,520,647,588,579,409,544,543,1516,1918,1394,1033,1129,1024,1129,1026,1175,1133,1614,1769,1629,1724,1683,1681,1670,1690,1347,1178,1556,1680,1680,1703,1858,1879,761,190,373,289,302,191,367,237,297,51,264,25,213,128,285,316,359,201,1076,1505,1538,1696,1235,1124,1072,1118,1181,1205,1440,1473,1493,1440,1815,1853,1807,1705,1657,1353,1644,1599,1532,1385,1427,1274,1292,1809,1568,1333,1446,1526,1446,1505,1492,1233,1389,1451,1434,1450,1544,1506,1502,1115,1237,1255,1456,1166,1262,1292,1123,1053,1125,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2044,1907,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2040,1852,2048,2048,1979,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,1981,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2038,1903,2048,2048,2048,2049,1905,2048,1965,2048,1965,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2045,2021,1800,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2046,1953,1864,2048,2048,2048,2048,2056,1968,1909,2048,2048,2048,2053,2030,1970,1926,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2050,2053,1991,1810,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2031,1982,1693,2048,1979,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2057,2048,2034,1911,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,1868,2048,2048,2048,2048,1965,2048,2048,2048,2048,1941,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2056,1965,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2022,2032,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,1980,2048,1976,2048,2048,1990,2048,1976,1977,2048,1722,1962,2036,2048,2003,1890,1937,2036,2048,2048,1926,1914,2011,2056,2050,1952,1904,2000,2048,2054,1989,1900,1983,2046,2048,2024,1918,1942,2025,2048,2028,1926,1956,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,1977,2048,2048,2048,2048,1974,1977,2048,1981,2038,2014,1978,2048,2048,2048,2048,1976,2048,2048,2048,2048,1981,1975,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,1972,1980,2048,1975,2048,1970,2048,2045,2006,2048,1998,2053,1979,2048,1979,2048,1979,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,1978,2048,2048,2048,1977,2048,2048,2048,2048,1978,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,1974,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2052,2026,1817,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2052,2048,2029,2010,2023,1977,1820,1867,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1956,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,1985,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1891,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2022,2032,2048,2048,2048,2048,2048,1899,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,1970,2048,2048,1971,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1982,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,1976,1977,2048,2048,1975,2048,2048,1971,2048,1970,2055,1918,2048,1979,2048,2048,1975,2048,1973,2048,1972,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,1970,1981,2048,1978,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1970,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,1968,2048,2048,1968,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2055,2052,2054,2048,1972,1720,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2034,1880,1901,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2044,1850,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,1922,1916,2048,2048,2048,2048,2048,2038,2016,1973,1972,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2056,1974,2048,2048,2048,2048,2048,1966,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2031,1961,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1942,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2048,1932,1965,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2022,1849,2048,1979,2048,1979,2048,1974,1977,2048,2048,2048,2048,2056,2048,1892,2048,2048,2048,2048,2048,2048,1933,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,1973,1896,2048,1977,2048,1888,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1983,2056,2048,2048,2048,2048,1973,2056,2048,2048,1983,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,1896,2048,2048,2048,1944,2048,2048,2048,1969,1980,1979,2048,1977,1802,1974,1982,2048,1977,2048,2048,2048,2048,2048,2048,2057,2048,2020,1955,1701,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2035,1840,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,1977,2048,2048,2048,2048,1976,2048,2048,2048,2048,2050,1878,2048,2048,2048,2048,2057,2026,1824,2055,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1912,2028,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1036,1032,1636,1421,1742,1313,1039,1103,1379,1429,1443,1476,1690,1871,1880,1895,1974,1788,1891,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,1978,2048,1983,2048,1539,1330,1505,1650,1177,1261,1597,1364,922,802,918,790,880,772,1920,2048,370,25,25,1628,2055,1533,25,25,895,1172,1392,848,2048,1943,2004,2048,2048,2048,2048,2048,1929,2048,2048,1985,2048,2048,2001,2048,2048,2048,2048,2048,2048,2005,1940,1943,1976,1964,1971,2003,2007,2008,2048,2048,2048,2048,2048,1896,1877,2048,2048,2048,2048,2002,2048,1870,2048,2048,2049,2016,2048,1944,2048,2056,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2000,2048,2013,2048,1872,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,1978,2057,1877,2048,2048,2001,1885,1920,1977,1976,1921,1944,1944,2048,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,1999,2011,2048,1972,1949,1948,1942,1949,1942,1897,1941,2048,2048,1972,2048,2048,2048,2005,2048,1953,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,1965,2048,2048,2048,2048,2048,2048,2048,1974,2005,2048,1865,2048,2048,2048,2048,2048,2048,2048,2048,1992,2048,2048,2018,2047,2048,2009,2003,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,1939,1919,2048,1926,1995,2048,1886,2048,1870,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2013,1875,1949,2000,2048,2000,1824,1836,2048,2048,2048,2048,2048,1945,1961,2048,1870,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,1942,2048,2048,1929,1855,1581,2048,2048,2048,2048,1965,2048,2048,2048,1942,2048,2048,1946,2048,1958,2048,1848,2048,1939,2048,2048,1746,2048,1875,2048,2048,2048,2048,2048,2048,1963,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,1952,2048,2048,2048,2048,1874,2048,2048,1970,2048,1894,2048,1900,2048,1945,2048,2006,2048,2048,2048,2048,2048,2048,2002,2048,2008,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,1943,2048,2048,1969,2048,1872,2048,2048,2048,2048,2004,2048,2048,2048,2001,2048,2048,1916,2048,1957,2048,1950,1942,1926,1937,2048,1975,2048,2048,2048,1762,2003,2008,1965,2048,2048,2048,2048,2048,1950,2048,1877,1969,1895,2003,2048,2048,2048,2048,2048,1960,2048,2011,2048,1943,1884,1838,1997,2048,2048,2048,2048,2048,2008,1880,2048,2048,2048,2003,2048,2048,2048,1963,2048,1930,1942,2048,2048,2048,2004,2048,2048,2048,1999,2048,2048,2002,2048,2048,2048,2048,2009,2048,2048,2048,1999,2048,2048,2048,1868,2048,2048,2048,2048,2048,1999,2048,2048,2048,2000,2048,1939,2048,1823,2010,1993,2048,2048,1753,2048,2048,2048,2001,2048,2048,2005,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,1987,2048,2048,2048,2048,1963,2053,2048,1944,2048,2048,2048,2048,2048,1871,2048,2053,1733,1945,2048,2048,2048,2048,2048,1310,1757,2048,2048,2048,2003,2048,2048,2048,1999,2048,1789,2048,2048,2001,1860,2048,1880,2048,1871,2048,2048,2048,1857,1988,2048,2048,2048,2048,1944,2048,2048,1961,2048,2048,2008,1944,2048,1975,2048,2048,2048,1949,1944,1918,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,1998,2048,2048,2048,2000,2048,2048,1219,2048,2048,2048,2048,2004,2048,2048,2048,2004,2048,2048,2048,2048,2048,2007,2048,2048,2048,2056,2048,2048,1997,2048,2048,2048,2048,2002,2048,2048,2048,1937,2048,2048,2048,2048,2008,2048,2048,2048,2003,2048,1939,2048,2048,2048,2048,2048,1688,1872,2048,1939,2048,2008,1999,1920,2048,2048,2048,2048,1876,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1879,2048,2048,1871,2057,2048,2048,1874,2048,2048,2048,2048,2048,2048,2048,1872,1871,1872,2048,1871,1553,2048,2001,2007,2048,2048,1939,2048,1964,2048,1998,2048,1868,2048,1999,1965,1964,2048,1944,1986,2048,2000,2048,2048,2048,1940,2048,2048,2008,2048,2048,2048,1956,2048,2048,1892,1956,2048,2048,2048,2048,2001,2048,2048,2048,2004,2048,2048,2003,2048,2048,1954,2048,1951,1977,2048,2048,1941,2048,2048,1997,1966,2048,1904,2004,2048,2048,1968,2011,1912,2048,2048,1874,2048,2048,1868,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2002,2048,2048,2048,2002,2048,1909,2048,2048,2048,2048,2001,1938,1977,1970,2043,1999,1825,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2007,1944,2048,2048,2048,2048,2048,2048,1949,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,1971,2045,1998,1994,2048,2048,2048,1872,1939,2048,1983,2048,2048,2048,2007,2048,2048,2048,2048,2048,1963,2048,2048,2048,2048,2048,1942,2048,2048,2048,2048,2004,2048,1940,2048,2009,2048,2048,2001,2048,2048,2008,2048,2048,2011,2048,2048,2048,1867,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2002,2005,2005,2048,1941,2048,2048,1945,2048,2048,1596,2048,2000,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,1361,1492,2048,1941,2048,1770,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2012,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2002,2048,2048,2048,2002,1943,2048,2048,2048,2048,2048,2048,2055,2048,2004,2048,2048,2048,2048,2048,2001,2048,2048,1942,2048,2048,2048,2048,2048,2048,1866,2048,2048,2048,2048,2048,1839,2048,2048,2048,2048,2048,2048,2048,2048,1876,2048,2048,2048,1873,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1799,2038,2048,2048,2048,2048,2009,2048,2048,2048,2048,2004,2048,2048,2048,2048,1999,1941,1944,2048,2048,1880,2048,2048,2048,2048,1950,1872,1567,2048,2048,2048,1874,2048,2048,2048,2048,2048,2048,2048,2004,1963,2048,2003,1839,1985,2048,2048,1873,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2001,2048,1873,2048,2000,2048,1872,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2001,1934,2016,1873,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2005,2048,2048,2056,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2003,2048,2011,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2010,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,1999,2048,2048,2048,2006,1942,1872,1877,2048,2048,1971,2042,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,1997,2048,2048,2048,2003,2040,2048,2048,2048,2048,1999,2048,2048,1962,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2003,2048,1960,2048,2048,2048,2053,2024,1876,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,1940,2048,2056,2048,1999,2048,2005,1952,2048,2048,2048,2048,2048,2048,2048,2056,1940,2048,2048,1620,2048,2048,1944,2048,2048,2048,2048,2048,2048,2048,2048,1941,2048,2048,2048,2048,2048,1906,1648,2048,2005,1941,2048,2048,2048,2048,2048,1975,2000,2048,1925,2053,2001,2048,2048,1945,2048,2048,2048,1890,2048,2048,2057,2048,1991,2048,2003,2048,2048,1890,1616,2048,1999,2048,2048,2056,1985,2048,2048,2048,2048,1984,2048,2048,2048,1971,2048,2048,2048,2048,2048,1865,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,1992,2048,2048,1986,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,1998,2048,1999,2048,2048,1998,2048,2048,2042,1846,2048,2048,1887,2048,2048,1799,1844,2048,2048,2048,2053,2052,1987,2048,2048,2048,2048,1995,2057,2048,2048,2048,2056,2048,2048,1998,2048,2048,2048,2048,2057,2048,2056,2049,1998,2048,2048,2048,2048,1998,2048,2038,2034,2048,1995,2005,2048,2048,2045,1967,2048,2048,2048,2048,2048,2000,2048,1930,2048,1996,2048,2048,2048,1985,2048,2048,1987,2048,1989,2048,2001,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2056,1937,2048,2048,2048,2048,2048,1996,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1992,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,1958,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,1985,2048,2048,2048,2048,2048,2048,2048,2048,1991,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,1963,1992,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2042,1960,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2022,2053,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1995,1897,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2008,2048,1994,2048,2048,1990,2048,2048,2056,2051,2055,1996,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1624,1033,1094,1173,1158,1978,757,689,1188,2048,2048,1096,34,34,34,34,34,34,548,352,491,541,621,689,662,513,602,542,595,515,656,636,578,669,643,717,762,813,784,778,685,1121,1039,943,922,928,940,966,952,1005,996,969,960,814,980,1323,1171,1360,1133,1326,1182,1143,1145,1141,1168,1159,1158,1178,1149,1112,941,1323,1443,1282,827,763,786,944,1293,1265,1339,1085,337,97,98,110,211,41,116,47,47,44,44,124,50,199,177,44,42,97,47,48,48,107,48,48,48,48,125,49,49,184,47,47,47,47,47,115,47,117,41,47,47,112,50,42,53,105,50,49,46,43,44,99,46,46,46,46,46,122,46,47,110,47,112,45,45,45,45,105,45,45,41,99,50,50,50,50,42,120,53,50,97,46,43,44,98,46,155,870,1195,330,48,706,1169,465,49,560,1157,612,324,1186,1214,801,835,919,423],\"successes\":[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,0,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,1,0,1,0,1,1,1,1,0,0,1,1,1,1,0,1,1,0,0,0,0,1,1,0,0,1,0,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,0,1,0,1,1,1,1,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,0,1,1,1,1,0,1,0,1,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,1,1,1,0,1,0,1,1,1,0,1,0,0,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,1,1,0,1,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,0,0,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,1,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,1,1,0,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,1,1,0,1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,0,1,0,1,1,1,0,1,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,1,0,1,1,1,1,0,1,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,1,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,1,1,1,0,1,0,0,0,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,1,0,1,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,1,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,1,0,1,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,1,0,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,1,0,0,1,1,0,1,1,0,0,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,1,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,1,1,0,1,1,1,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,0,1,1,0,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,1,1,1,0,0,0,0,1,0,1,1,0,1,1,0,0,1,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n;\r\n            compressedData['data'] = byteArray;\r\n            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');\r\n            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, false);\r\n            Module['removeRunDependency']('datafile_C:/Dev/EDGE-classic-emscripten-builds/web/site/edge-classic.data');\r\n      };\r\n      Module['addRunDependency']('datafile_C:/Dev/EDGE-classic-emscripten-builds/web/site/edge-classic.data');\r\n\r\n      if (!Module.preloadResults) Module.preloadResults = {};\r\n\r\n        function preloadFallback(error) {\r\n          console.error(error);\r\n          console.error('falling back to default preload behavior');\r\n          fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, processPackageData, handleError);\r\n        };\r\n\r\n        openDatabase(\r\n          function(db) {\r\n            checkCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME,\r\n              function(useCached, metadata) {\r\n                Module.preloadResults[PACKAGE_NAME] = {fromCache: useCached};\r\n                if (useCached) {\r\n                  fetchCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME, metadata, processPackageData, preloadFallback);\r\n                } else {\r\n                  fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE,\r\n                    function(packageData) {\r\n                      cacheRemotePackage(db, PACKAGE_PATH + PACKAGE_NAME, packageData, {uuid:PACKAGE_UUID}, processPackageData,\r\n                        function(error) {\r\n                          console.error(error);\r\n                          processPackageData(packageData);\r\n                        });\r\n                    }\r\n                  , preloadFallback);\r\n                }\r\n              }\r\n            , preloadFallback);\r\n          }\r\n        , preloadFallback);\r\n\r\n        if (Module['setStatus']) Module['setStatus']('Downloading...');\r\n\r\n    }\r\n    if (Module['calledRun']) {\r\n      runWithFS();\r\n    } else {\r\n      if (!Module['preRun']) Module['preRun'] = [];\r\n      Module[\"preRun\"].push(runWithFS); // FS is not initialized yet, wait for it\r\n    }\r\n\r\n    }\r\n    loadPackage({\"files\": [{\"filename\": \"/.gitkeep\", \"start\": 0, \"end\": 0}, {\"filename\": \"/edge_base/blasphemer/graphics/AUTOPAGE.png\", \"start\": 0, \"end\": 42807}, {\"filename\": \"/edge_base/blasphemer/graphics/M_DOOM.lmp\", \"start\": 42807, \"end\": 49300}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSCNTR.lmp\", \"start\": 49300, \"end\": 49492}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSLEFT.lmp\", \"start\": 49492, \"end\": 49684}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSRGHT.lmp\", \"start\": 49684, \"end\": 49876}, {\"filename\": \"/edge_base/blasphemer/graphics/M_SKULL1.lmp\", \"start\": 49876, \"end\": 50448}, {\"filename\": \"/edge_base/blasphemer/graphics/M_SKULL2.lmp\", \"start\": 50448, \"end\": 51020}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERML.lmp\", \"start\": 51020, \"end\": 51154}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMM.lmp\", \"start\": 51154, \"end\": 51360}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMO.lmp\", \"start\": 51360, \"end\": 51468}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMR.lmp\", \"start\": 51468, \"end\": 51602}, {\"filename\": \"/edge_base/blasphemer/graphics/NULL.png\", \"start\": 51602, \"end\": 52762}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARL.lmp\", \"start\": 52762, \"end\": 55473}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARR.lmp\", \"start\": 55473, \"end\": 58184}, {\"filename\": \"/edge_base/blasphemer/graphics/_IN1.png\", \"start\": 58184, \"end\": 59371}, {\"filename\": \"/edge_base/blasphemer/scripts/anims.ddf\", \"start\": 59371, \"end\": 60849}, {\"filename\": \"/edge_base/blasphemer/scripts/attacks.ddf\", \"start\": 60849, \"end\": 102518}, {\"filename\": \"/edge_base/blasphemer/scripts/coal_hud.ec\", \"start\": 102518, \"end\": 118231}, {\"filename\": \"/edge_base/blasphemer/scripts/flats.ddf\", \"start\": 118231, \"end\": 118788}, {\"filename\": \"/edge_base/blasphemer/scripts/fonts.ddf\", \"start\": 118788, \"end\": 119836}, {\"filename\": \"/edge_base/blasphemer/scripts/games.ddf\", \"start\": 119836, \"end\": 122570}, {\"filename\": \"/edge_base/blasphemer/scripts/images.ddf\", \"start\": 122570, \"end\": 123996}, {\"filename\": \"/edge_base/blasphemer/scripts/language.ldf\", \"start\": 123996, \"end\": 132497}, {\"filename\": \"/edge_base/blasphemer/scripts/levels.ddf\", \"start\": 132497, \"end\": 145367}, {\"filename\": \"/edge_base/blasphemer/scripts/lines.ddf\", \"start\": 145367, \"end\": 150202}, {\"filename\": \"/edge_base/blasphemer/scripts/playlist.ddf\", \"start\": 150202, \"end\": 152358}, {\"filename\": \"/edge_base/blasphemer/scripts/rscript.rts\", \"start\": 152358, \"end\": 165402}, {\"filename\": \"/edge_base/blasphemer/scripts/sectors.ddf\", \"start\": 165402, \"end\": 166886}, {\"filename\": \"/edge_base/blasphemer/scripts/sounds.ddf\", \"start\": 166886, \"end\": 178082}, {\"filename\": \"/edge_base/blasphemer/scripts/styles.ddf\", \"start\": 178082, \"end\": 183178}, {\"filename\": \"/edge_base/blasphemer/scripts/switch.ddf\", \"start\": 183178, \"end\": 183591}, {\"filename\": \"/edge_base/blasphemer/scripts/things.ddf\", \"start\": 183591, \"end\": 267401}, {\"filename\": \"/edge_base/blasphemer/scripts/weapons.ddf\", \"start\": 267401, \"end\": 277719}, {\"filename\": \"/edge_base/doom/graphics/CREDIT.lmp\", \"start\": 277719, \"end\": 397007}, {\"filename\": \"/edge_base/doom/graphics/ENDPIC.lmp\", \"start\": 397007, \"end\": 516295}, {\"filename\": \"/edge_base/doom/graphics/HELP1.lmp\", \"start\": 516295, \"end\": 635583}, {\"filename\": \"/edge_base/doom/graphics/INTERPIC.lmp\", \"start\": 635583, \"end\": 754871}, {\"filename\": \"/edge_base/doom/graphics/PFUB1.lmp\", \"start\": 754871, \"end\": 874159}, {\"filename\": \"/edge_base/doom/graphics/PFUB2.lmp\", \"start\": 874159, \"end\": 993447}, {\"filename\": \"/edge_base/doom/graphics/TITLEPIC.lmp\", \"start\": 993447, \"end\": 1112735}, {\"filename\": \"/edge_base/doom/graphics/VICTORY2.lmp\", \"start\": 1112735, \"end\": 1232023}, {\"filename\": \"/edge_base/doom/graphics/WIA20000.lmp\", \"start\": 1232023, \"end\": 1261143}, {\"filename\": \"/edge_base/doom/graphics/WIA20001.lmp\", \"start\": 1261143, \"end\": 1290263}, {\"filename\": \"/edge_base/doom/graphics/WIA20002.lmp\", \"start\": 1290263, \"end\": 1319383}, {\"filename\": \"/edge_base/doom/graphics/WIA20400.lmp\", \"start\": 1319383, \"end\": 1324981}, {\"filename\": \"/edge_base/doom/graphics/WIA20401.lmp\", \"start\": 1324981, \"end\": 1330579}, {\"filename\": \"/edge_base/doom/graphics/WIA20402.lmp\", \"start\": 1330579, \"end\": 1336177}, {\"filename\": \"/edge_base/doom/graphics/WIA20500.lmp\", \"start\": 1336177, \"end\": 1349385}, {\"filename\": \"/edge_base/doom/graphics/WIA20501.lmp\", \"start\": 1349385, \"end\": 1362593}, {\"filename\": \"/edge_base/doom/graphics/WIA20502.lmp\", \"start\": 1362593, \"end\": 1375801}, {\"filename\": \"/edge_base/doom/graphics/WIMAP0.lmp\", \"start\": 1375801, \"end\": 1495089}, {\"filename\": \"/edge_base/doom/graphics/WIMAP1.lmp\", \"start\": 1495089, \"end\": 1614377}, {\"filename\": \"/edge_base/doom/graphics/WIMAP2.lmp\", \"start\": 1614377, \"end\": 1733665}, {\"filename\": \"/edge_base/doom/scripts/images.ddf\", \"start\": 1733665, \"end\": 1735503}, {\"filename\": \"/edge_base/doom/textures/SKY1_B.png\", \"start\": 1735503, \"end\": 1750146}, {\"filename\": \"/edge_base/doom/textures/SKY1_E.png\", \"start\": 1750146, \"end\": 1773325}, {\"filename\": \"/edge_base/doom/textures/SKY1_N.png\", \"start\": 1773325, \"end\": 1796212}, {\"filename\": \"/edge_base/doom/textures/SKY1_S.png\", \"start\": 1796212, \"end\": 1818837}, {\"filename\": \"/edge_base/doom/textures/SKY1_T.png\", \"start\": 1818837, \"end\": 1846029}, {\"filename\": \"/edge_base/doom/textures/SKY1_W.png\", \"start\": 1846029, \"end\": 1868872}, {\"filename\": \"/edge_base/doom/textures/SKY2_B.png\", \"start\": 1868872, \"end\": 1885739}, {\"filename\": \"/edge_base/doom/textures/SKY2_E.png\", \"start\": 1885739, \"end\": 1912308}, {\"filename\": \"/edge_base/doom/textures/SKY2_N.png\", \"start\": 1912308, \"end\": 1939164}, {\"filename\": \"/edge_base/doom/textures/SKY2_S.png\", \"start\": 1939164, \"end\": 1966664}, {\"filename\": \"/edge_base/doom/textures/SKY2_T.png\", \"start\": 1966664, \"end\": 1991018}, {\"filename\": \"/edge_base/doom/textures/SKY2_W.png\", \"start\": 1991018, \"end\": 2017205}, {\"filename\": \"/edge_base/doom/textures/SKY3_B.png\", \"start\": 2017205, \"end\": 2029188}, {\"filename\": \"/edge_base/doom/textures/SKY3_E.png\", \"start\": 2029188, \"end\": 2048754}, {\"filename\": \"/edge_base/doom/textures/SKY3_N.png\", \"start\": 2048754, \"end\": 2068455}, {\"filename\": \"/edge_base/doom/textures/SKY3_S.png\", \"start\": 2068455, \"end\": 2088789}, {\"filename\": \"/edge_base/doom/textures/SKY3_T.png\", \"start\": 2088789, \"end\": 2113232}, {\"filename\": \"/edge_base/doom/textures/SKY3_W.png\", \"start\": 2113232, \"end\": 2132277}, {\"filename\": \"/edge_base/doom/textures/SKY4_B.png\", \"start\": 2132277, \"end\": 2170613}, {\"filename\": \"/edge_base/doom/textures/SKY4_E.png\", \"start\": 2170613, \"end\": 2183222}, {\"filename\": \"/edge_base/doom/textures/SKY4_N.png\", \"start\": 2183222, \"end\": 2194938}, {\"filename\": \"/edge_base/doom/textures/SKY4_S.png\", \"start\": 2194938, \"end\": 2206654}, {\"filename\": \"/edge_base/doom/textures/SKY4_T.png\", \"start\": 2206654, \"end\": 2244990}, {\"filename\": \"/edge_base/doom/textures/SKY4_W.png\", \"start\": 2244990, \"end\": 2257599}, {\"filename\": \"/edge_base/doom1/graphics/CREDIT.lmp\", \"start\": 2257599, \"end\": 2376887}, {\"filename\": \"/edge_base/doom1/graphics/HELP1.lmp\", \"start\": 2376887, \"end\": 2496175}, {\"filename\": \"/edge_base/doom1/graphics/HELP2.lmp\", \"start\": 2496175, \"end\": 2615463}, {\"filename\": \"/edge_base/doom1/graphics/TITLEPIC.lmp\", \"start\": 2615463, \"end\": 2734751}, {\"filename\": \"/edge_base/doom1/graphics/WIMAP0.lmp\", \"start\": 2734751, \"end\": 2854039}, {\"filename\": \"/edge_base/doom1/scripts/images.ddf\", \"start\": 2854039, \"end\": 2855891}, {\"filename\": \"/edge_base/doom1/textures/SKY1_B.png\", \"start\": 2855891, \"end\": 2870534}, {\"filename\": \"/edge_base/doom1/textures/SKY1_E.png\", \"start\": 2870534, \"end\": 2893713}, {\"filename\": \"/edge_base/doom1/textures/SKY1_N.png\", \"start\": 2893713, \"end\": 2916600}, {\"filename\": \"/edge_base/doom1/textures/SKY1_S.png\", \"start\": 2916600, \"end\": 2939225}, {\"filename\": \"/edge_base/doom1/textures/SKY1_T.png\", \"start\": 2939225, \"end\": 2966417}, {\"filename\": \"/edge_base/doom1/textures/SKY1_W.png\", \"start\": 2966417, \"end\": 2989260}, {\"filename\": \"/edge_base/doom2/graphics/BOSSBACK.lmp\", \"start\": 2989260, \"end\": 3108548}, {\"filename\": \"/edge_base/doom2/graphics/CREDIT.lmp\", \"start\": 3108548, \"end\": 3227836}, {\"filename\": \"/edge_base/doom2/graphics/HELP.lmp\", \"start\": 3227836, \"end\": 3347124}, {\"filename\": \"/edge_base/doom2/graphics/INTERPIC.lmp\", \"start\": 3347124, \"end\": 3466412}, {\"filename\": \"/edge_base/doom2/graphics/TITLEPIC.lmp\", \"start\": 3466412, \"end\": 3585700}, {\"filename\": \"/edge_base/doom2/scripts/images.ddf\", \"start\": 3585700, \"end\": 3587131}, {\"filename\": \"/edge_base/doom2/textures/SKY1_B.png\", \"start\": 3587131, \"end\": 3608411}, {\"filename\": \"/edge_base/doom2/textures/SKY1_E.png\", \"start\": 3608411, \"end\": 3626091}, {\"filename\": \"/edge_base/doom2/textures/SKY1_N.png\", \"start\": 3626091, \"end\": 3643771}, {\"filename\": \"/edge_base/doom2/textures/SKY1_S.png\", \"start\": 3643771, \"end\": 3661451}, {\"filename\": \"/edge_base/doom2/textures/SKY1_T.png\", \"start\": 3661451, \"end\": 3682731}, {\"filename\": \"/edge_base/doom2/textures/SKY1_W.png\", \"start\": 3682731, \"end\": 3700411}, {\"filename\": \"/edge_base/doom2/textures/SKY2_B.png\", \"start\": 3700411, \"end\": 3714334}, {\"filename\": \"/edge_base/doom2/textures/SKY2_E.png\", \"start\": 3714334, \"end\": 3739553}, {\"filename\": \"/edge_base/doom2/textures/SKY2_N.png\", \"start\": 3739553, \"end\": 3764785}, {\"filename\": \"/edge_base/doom2/textures/SKY2_S.png\", \"start\": 3764785, \"end\": 3789988}, {\"filename\": \"/edge_base/doom2/textures/SKY2_T.png\", \"start\": 3789988, \"end\": 3814740}, {\"filename\": \"/edge_base/doom2/textures/SKY2_W.png\", \"start\": 3814740, \"end\": 3839944}, {\"filename\": \"/edge_base/doom2/textures/SKY3_B.png\", \"start\": 3839944, \"end\": 3923514}, {\"filename\": \"/edge_base/doom2/textures/SKY3_E.png\", \"start\": 3923514, \"end\": 4018323}, {\"filename\": \"/edge_base/doom2/textures/SKY3_N.png\", \"start\": 4018323, \"end\": 4117094}, {\"filename\": \"/edge_base/doom2/textures/SKY3_S.png\", \"start\": 4117094, \"end\": 4215865}, {\"filename\": \"/edge_base/doom2/textures/SKY3_T.png\", \"start\": 4215865, \"end\": 4402356}, {\"filename\": \"/edge_base/doom2/textures/SKY3_W.png\", \"start\": 4402356, \"end\": 4497165}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARL.lmp\", \"start\": 4497165, \"end\": 4500576}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARR.lmp\", \"start\": 4500576, \"end\": 4503987}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT033.png\", \"start\": 4503987, \"end\": 4504332}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT034.png\", \"start\": 4504332, \"end\": 4504679}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT035.png\", \"start\": 4504679, \"end\": 4505110}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT036.png\", \"start\": 4505110, \"end\": 4505519}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT037.png\", \"start\": 4505519, \"end\": 4505940}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT038.png\", \"start\": 4505940, \"end\": 4506387}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT039.png\", \"start\": 4506387, \"end\": 4506708}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT040.png\", \"start\": 4506708, \"end\": 4507098}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT041.png\", \"start\": 4507098, \"end\": 4507487}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT042.png\", \"start\": 4507487, \"end\": 4507938}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT043.png\", \"start\": 4507938, \"end\": 4508297}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT044.png\", \"start\": 4508297, \"end\": 4508621}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT045.png\", \"start\": 4508621, \"end\": 4508934}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT046.png\", \"start\": 4508934, \"end\": 4509230}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT047.png\", \"start\": 4509230, \"end\": 4509653}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT048.png\", \"start\": 4509653, \"end\": 4510058}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT049.png\", \"start\": 4510058, \"end\": 4510438}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT050.png\", \"start\": 4510438, \"end\": 4510846}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT051.png\", \"start\": 4510846, \"end\": 4511309}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT052.png\", \"start\": 4511309, \"end\": 4511728}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT053.png\", \"start\": 4511728, \"end\": 4512136}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT054.png\", \"start\": 4512136, \"end\": 4512544}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT055.png\", \"start\": 4512544, \"end\": 4512948}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT056.png\", \"start\": 4512948, \"end\": 4513420}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT057.png\", \"start\": 4513420, \"end\": 4513835}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT058.png\", \"start\": 4513835, \"end\": 4514183}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT059.png\", \"start\": 4514183, \"end\": 4514544}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT060.png\", \"start\": 4514544, \"end\": 4514913}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT061.png\", \"start\": 4514913, \"end\": 4515254}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT062.png\", \"start\": 4515254, \"end\": 4515675}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT063.png\", \"start\": 4515675, \"end\": 4516078}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT064.png\", \"start\": 4516078, \"end\": 4516496}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT065.png\", \"start\": 4516496, \"end\": 4516999}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT066.png\", \"start\": 4516999, \"end\": 4517424}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT067.png\", \"start\": 4517424, \"end\": 4517827}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT068.png\", \"start\": 4517827, \"end\": 4518260}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT069.png\", \"start\": 4518260, \"end\": 4518676}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT070.png\", \"start\": 4518676, \"end\": 4519081}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT071.png\", \"start\": 4519081, \"end\": 4519500}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT072.png\", \"start\": 4519500, \"end\": 4519925}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT073.png\", \"start\": 4519925, \"end\": 4520327}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT074.png\", \"start\": 4520327, \"end\": 4520796}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT075.png\", \"start\": 4520796, \"end\": 4521230}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT076.png\", \"start\": 4521230, \"end\": 4521619}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT077.png\", \"start\": 4521619, \"end\": 4522074}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT078.png\", \"start\": 4522074, \"end\": 4522584}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT079.png\", \"start\": 4522584, \"end\": 4522994}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT080.png\", \"start\": 4522994, \"end\": 4523401}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT081.png\", \"start\": 4523401, \"end\": 4523818}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT082.png\", \"start\": 4523818, \"end\": 4524237}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT083.png\", \"start\": 4524237, \"end\": 4524663}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT084.png\", \"start\": 4524663, \"end\": 4525048}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT085.png\", \"start\": 4525048, \"end\": 4525463}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT086.png\", \"start\": 4525463, \"end\": 4525887}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT087.png\", \"start\": 4525887, \"end\": 4526332}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT088.png\", \"start\": 4526332, \"end\": 4526758}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT089.png\", \"start\": 4526758, \"end\": 4527223}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT090.png\", \"start\": 4527223, \"end\": 4527641}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT091.png\", \"start\": 4527641, \"end\": 4528028}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT092.png\", \"start\": 4528028, \"end\": 4528462}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT093.png\", \"start\": 4528462, \"end\": 4528858}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT094.png\", \"start\": 4528858, \"end\": 4529209}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT095.png\", \"start\": 4529209, \"end\": 4529522}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT096.png\", \"start\": 4529522, \"end\": 4529842}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT097.png\", \"start\": 4529842, \"end\": 4530300}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT098.png\", \"start\": 4530300, \"end\": 4530700}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT099.png\", \"start\": 4530700, \"end\": 4531134}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT100.png\", \"start\": 4531134, \"end\": 4531541}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT101.png\", \"start\": 4531541, \"end\": 4531937}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT102.png\", \"start\": 4531937, \"end\": 4532328}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT103.png\", \"start\": 4532328, \"end\": 4532772}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT104.png\", \"start\": 4532772, \"end\": 4533174}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT105.png\", \"start\": 4533174, \"end\": 4533554}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT106.png\", \"start\": 4533554, \"end\": 4533998}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT107.png\", \"start\": 4533998, \"end\": 4534467}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT108.png\", \"start\": 4534467, \"end\": 4534841}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT109.png\", \"start\": 4534841, \"end\": 4535262}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT110.png\", \"start\": 4535262, \"end\": 4535678}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT111.png\", \"start\": 4535678, \"end\": 4536127}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT112.png\", \"start\": 4536127, \"end\": 4536517}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT113.png\", \"start\": 4536517, \"end\": 4536975}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT114.png\", \"start\": 4536975, \"end\": 4537372}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT115.png\", \"start\": 4537372, \"end\": 4537783}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT116.png\", \"start\": 4537783, \"end\": 4538217}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT117.png\", \"start\": 4538217, \"end\": 4538619}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT118.png\", \"start\": 4538619, \"end\": 4539080}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT119.png\", \"start\": 4539080, \"end\": 4539497}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT120.png\", \"start\": 4539497, \"end\": 4539941}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT121.png\", \"start\": 4539941, \"end\": 4540334}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT122.png\", \"start\": 4540334, \"end\": 4540769}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT123.png\", \"start\": 4540769, \"end\": 4541159}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT124.png\", \"start\": 4541159, \"end\": 4541520}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT125.png\", \"start\": 4541520, \"end\": 4541908}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT126.png\", \"start\": 4541908, \"end\": 4542298}, {\"filename\": \"/edge_base/freedoom1/scripts/attacks.ddf\", \"start\": 4542298, \"end\": 4563454}, {\"filename\": \"/edge_base/freedoom1/scripts/fonts.ddf\", \"start\": 4563454, \"end\": 4564110}, {\"filename\": \"/edge_base/freedoom1/scripts/images.ddf\", \"start\": 4564110, \"end\": 4571879}, {\"filename\": \"/edge_base/freedoom1/scripts/language.ldf\", \"start\": 4571879, \"end\": 4583481}, {\"filename\": \"/edge_base/freedoom1/scripts/styles.ddf\", \"start\": 4583481, \"end\": 4588690}, {\"filename\": \"/edge_base/freedoom1/scripts/things.ddf\", \"start\": 4588690, \"end\": 4597082}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARL.lmp\", \"start\": 4597082, \"end\": 4600493}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARR.lmp\", \"start\": 4600493, \"end\": 4603904}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT033.png\", \"start\": 4603904, \"end\": 4604249}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT034.png\", \"start\": 4604249, \"end\": 4604596}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT035.png\", \"start\": 4604596, \"end\": 4605027}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT036.png\", \"start\": 4605027, \"end\": 4605436}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT037.png\", \"start\": 4605436, \"end\": 4605857}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT038.png\", \"start\": 4605857, \"end\": 4606304}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT039.png\", \"start\": 4606304, \"end\": 4606625}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT040.png\", \"start\": 4606625, \"end\": 4607015}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT041.png\", \"start\": 4607015, \"end\": 4607404}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT042.png\", \"start\": 4607404, \"end\": 4607855}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT043.png\", \"start\": 4607855, \"end\": 4608214}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT044.png\", \"start\": 4608214, \"end\": 4608538}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT045.png\", \"start\": 4608538, \"end\": 4608851}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT046.png\", \"start\": 4608851, \"end\": 4609147}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT047.png\", \"start\": 4609147, \"end\": 4609570}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT048.png\", \"start\": 4609570, \"end\": 4609975}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT049.png\", \"start\": 4609975, \"end\": 4610355}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT050.png\", \"start\": 4610355, \"end\": 4610763}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT051.png\", \"start\": 4610763, \"end\": 4611226}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT052.png\", \"start\": 4611226, \"end\": 4611645}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT053.png\", \"start\": 4611645, \"end\": 4612053}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT054.png\", \"start\": 4612053, \"end\": 4612461}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT055.png\", \"start\": 4612461, \"end\": 4612865}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT056.png\", \"start\": 4612865, \"end\": 4613337}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT057.png\", \"start\": 4613337, \"end\": 4613752}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT058.png\", \"start\": 4613752, \"end\": 4614100}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT059.png\", \"start\": 4614100, \"end\": 4614461}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT060.png\", \"start\": 4614461, \"end\": 4614830}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT061.png\", \"start\": 4614830, \"end\": 4615171}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT062.png\", \"start\": 4615171, \"end\": 4615592}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT063.png\", \"start\": 4615592, \"end\": 4615995}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT064.png\", \"start\": 4615995, \"end\": 4616413}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT065.png\", \"start\": 4616413, \"end\": 4616916}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT066.png\", \"start\": 4616916, \"end\": 4617341}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT067.png\", \"start\": 4617341, \"end\": 4617744}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT068.png\", \"start\": 4617744, \"end\": 4618177}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT069.png\", \"start\": 4618177, \"end\": 4618593}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT070.png\", \"start\": 4618593, \"end\": 4618998}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT071.png\", \"start\": 4618998, \"end\": 4619417}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT072.png\", \"start\": 4619417, \"end\": 4619842}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT073.png\", \"start\": 4619842, \"end\": 4620244}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT074.png\", \"start\": 4620244, \"end\": 4620713}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT075.png\", \"start\": 4620713, \"end\": 4621147}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT076.png\", \"start\": 4621147, \"end\": 4621536}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT077.png\", \"start\": 4621536, \"end\": 4621991}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT078.png\", \"start\": 4621991, \"end\": 4622501}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT079.png\", \"start\": 4622501, \"end\": 4622911}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT080.png\", \"start\": 4622911, \"end\": 4623318}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT081.png\", \"start\": 4623318, \"end\": 4623735}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT082.png\", \"start\": 4623735, \"end\": 4624154}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT083.png\", \"start\": 4624154, \"end\": 4624580}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT084.png\", \"start\": 4624580, \"end\": 4624965}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT085.png\", \"start\": 4624965, \"end\": 4625380}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT086.png\", \"start\": 4625380, \"end\": 4625804}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT087.png\", \"start\": 4625804, \"end\": 4626249}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT088.png\", \"start\": 4626249, \"end\": 4626675}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT089.png\", \"start\": 4626675, \"end\": 4627140}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT090.png\", \"start\": 4627140, \"end\": 4627558}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT091.png\", \"start\": 4627558, \"end\": 4627945}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT092.png\", \"start\": 4627945, \"end\": 4628379}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT093.png\", \"start\": 4628379, \"end\": 4628775}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT094.png\", \"start\": 4628775, \"end\": 4629126}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT095.png\", \"start\": 4629126, \"end\": 4629439}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT096.png\", \"start\": 4629439, \"end\": 4629759}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT097.png\", \"start\": 4629759, \"end\": 4630217}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT098.png\", \"start\": 4630217, \"end\": 4630617}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT099.png\", \"start\": 4630617, \"end\": 4631051}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT100.png\", \"start\": 4631051, \"end\": 4631458}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT101.png\", \"start\": 4631458, \"end\": 4631854}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT102.png\", \"start\": 4631854, \"end\": 4632245}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT103.png\", \"start\": 4632245, \"end\": 4632689}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT104.png\", \"start\": 4632689, \"end\": 4633091}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT105.png\", \"start\": 4633091, \"end\": 4633471}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT106.png\", \"start\": 4633471, \"end\": 4633915}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT107.png\", \"start\": 4633915, \"end\": 4634384}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT108.png\", \"start\": 4634384, \"end\": 4634758}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT109.png\", \"start\": 4634758, \"end\": 4635179}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT110.png\", \"start\": 4635179, \"end\": 4635595}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT111.png\", \"start\": 4635595, \"end\": 4636044}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT112.png\", \"start\": 4636044, \"end\": 4636434}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT113.png\", \"start\": 4636434, \"end\": 4636892}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT114.png\", \"start\": 4636892, \"end\": 4637289}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT115.png\", \"start\": 4637289, \"end\": 4637700}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT116.png\", \"start\": 4637700, \"end\": 4638134}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT117.png\", \"start\": 4638134, \"end\": 4638536}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT118.png\", \"start\": 4638536, \"end\": 4638997}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT119.png\", \"start\": 4638997, \"end\": 4639414}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT120.png\", \"start\": 4639414, \"end\": 4639858}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT121.png\", \"start\": 4639858, \"end\": 4640251}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT122.png\", \"start\": 4640251, \"end\": 4640686}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT123.png\", \"start\": 4640686, \"end\": 4641076}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT124.png\", \"start\": 4641076, \"end\": 4641437}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT125.png\", \"start\": 4641437, \"end\": 4641825}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT126.png\", \"start\": 4641825, \"end\": 4642215}, {\"filename\": \"/edge_base/freedoom2/scripts/attacks.ddf\", \"start\": 4642215, \"end\": 4663371}, {\"filename\": \"/edge_base/freedoom2/scripts/fonts.ddf\", \"start\": 4663371, \"end\": 4664027}, {\"filename\": \"/edge_base/freedoom2/scripts/images.ddf\", \"start\": 4664027, \"end\": 4671796}, {\"filename\": \"/edge_base/freedoom2/scripts/language.ldf\", \"start\": 4671796, \"end\": 4683259}, {\"filename\": \"/edge_base/freedoom2/scripts/styles.ddf\", \"start\": 4683259, \"end\": 4688096}, {\"filename\": \"/edge_base/freedoom2/scripts/things.ddf\", \"start\": 4688096, \"end\": 4696485}, {\"filename\": \"/edge_base/hacx/graphics/CREDIT.lmp\", \"start\": 4696485, \"end\": 4815773}, {\"filename\": \"/edge_base/hacx/graphics/HELP.lmp\", \"start\": 4815773, \"end\": 4935061}, {\"filename\": \"/edge_base/hacx/graphics/INTERPIC.lmp\", \"start\": 4935061, \"end\": 5054349}, {\"filename\": \"/edge_base/hacx/graphics/M_CONTRL.png\", \"start\": 5054349, \"end\": 5054954}, {\"filename\": \"/edge_base/hacx/graphics/M_EPISOD.lmp\", \"start\": 5054954, \"end\": 5058444}, {\"filename\": \"/edge_base/hacx/graphics/M_GAMEPL.png\", \"start\": 5058444, \"end\": 5059316}, {\"filename\": \"/edge_base/hacx/graphics/M_JKILL.lmp\", \"start\": 5059316, \"end\": 5063906}, {\"filename\": \"/edge_base/hacx/graphics/M_LOADG.lmp\", \"start\": 5063906, \"end\": 5066310}, {\"filename\": \"/edge_base/hacx/graphics/M_MSETTL.png\", \"start\": 5066310, \"end\": 5067074}, {\"filename\": \"/edge_base/hacx/graphics/M_NGAME.lmp\", \"start\": 5067074, \"end\": 5069201}, {\"filename\": \"/edge_base/hacx/graphics/M_RDTHIS.lmp\", \"start\": 5069201, \"end\": 5071710}, {\"filename\": \"/edge_base/hacx/graphics/M_SFXOPT.png\", \"start\": 5071710, \"end\": 5072418}, {\"filename\": \"/edge_base/hacx/graphics/M_VIDEO.png\", \"start\": 5072418, \"end\": 5073157}, {\"filename\": \"/edge_base/hacx/graphics/STBARL.lmp\", \"start\": 5073157, \"end\": 5076568}, {\"filename\": \"/edge_base/hacx/graphics/STBARR.lmp\", \"start\": 5076568, \"end\": 5079979}, {\"filename\": \"/edge_base/hacx/graphics/TITLEPIC.lmp\", \"start\": 5079979, \"end\": 5199267}, {\"filename\": \"/edge_base/hacx/scripts/anims.ddf\", \"start\": 5199267, \"end\": 5202439}, {\"filename\": \"/edge_base/hacx/scripts/attacks.ddf\", \"start\": 5202439, \"end\": 5209937}, {\"filename\": \"/edge_base/hacx/scripts/colmap.ddf\", \"start\": 5209937, \"end\": 5210215}, {\"filename\": \"/edge_base/hacx/scripts/fonts.ddf\", \"start\": 5210215, \"end\": 5210861}, {\"filename\": \"/edge_base/hacx/scripts/language.ldf\", \"start\": 5210861, \"end\": 5216861}, {\"filename\": \"/edge_base/hacx/scripts/lines.ddf\", \"start\": 5216861, \"end\": 5217749}, {\"filename\": \"/edge_base/hacx/scripts/playlist.ddf\", \"start\": 5217749, \"end\": 5219230}, {\"filename\": \"/edge_base/hacx/scripts/styles.ddf\", \"start\": 5219230, \"end\": 5221284}, {\"filename\": \"/edge_base/hacx/scripts/switch.ddf\", \"start\": 5221284, \"end\": 5224493}, {\"filename\": \"/edge_base/hacx/scripts/things.ddf\", \"start\": 5224493, \"end\": 5311999}, {\"filename\": \"/edge_base/hacx/scripts/weapons.ddf\", \"start\": 5311999, \"end\": 5317290}, {\"filename\": \"/edge_base/hacx/sprites/CHGFA0.lmp\", \"start\": 5317290, \"end\": 5332094}, {\"filename\": \"/edge_base/hacx/sprites/CHGFB0.lmp\", \"start\": 5332094, \"end\": 5347120}, {\"filename\": \"/edge_base/hacx/sprites/CHGGA0.lmp\", \"start\": 5347120, \"end\": 5361694}, {\"filename\": \"/edge_base/hacx/sprites/CHGGB0.lmp\", \"start\": 5361694, \"end\": 5368051}, {\"filename\": \"/edge_base/hacx/sprites/MISFA0.lmp\", \"start\": 5368051, \"end\": 5408323}, {\"filename\": \"/edge_base/hacx/sprites/MISFB0.lmp\", \"start\": 5408323, \"end\": 5443489}, {\"filename\": \"/edge_base/hacx/sprites/MISFC0.lmp\", \"start\": 5443489, \"end\": 5476642}, {\"filename\": \"/edge_base/hacx/sprites/MISFD0.lmp\", \"start\": 5476642, \"end\": 5513025}, {\"filename\": \"/edge_base/hacx/sprites/MISGA0.lmp\", \"start\": 5513025, \"end\": 5544555}, {\"filename\": \"/edge_base/hacx/sprites/MISGB0.lmp\", \"start\": 5544555, \"end\": 5579661}, {\"filename\": \"/edge_base/hacx/sprites/PISGD0.lmp\", \"start\": 5579661, \"end\": 5603804}, {\"filename\": \"/edge_base/hacx/sprites/PISGE0.lmp\", \"start\": 5603804, \"end\": 5633470}, {\"filename\": \"/edge_base/hacx/sprites/PLSGA0.lmp\", \"start\": 5633470, \"end\": 5644334}, {\"filename\": \"/edge_base/hacx/sprites/PLSGB0.lmp\", \"start\": 5644334, \"end\": 5657728}, {\"filename\": \"/edge_base/hacx/sprites/SAWGA0.lmp\", \"start\": 5657728, \"end\": 5672177}, {\"filename\": \"/edge_base/hacx/sprites/SAWGB0.lmp\", \"start\": 5672177, \"end\": 5686285}, {\"filename\": \"/edge_base/hacx/sprites/SAWGC0.lmp\", \"start\": 5686285, \"end\": 5695370}, {\"filename\": \"/edge_base/hacx/sprites/SAWGD0.lmp\", \"start\": 5695370, \"end\": 5704455}, {\"filename\": \"/edge_base/hacx/sprites/SHT2A0.lmp\", \"start\": 5704455, \"end\": 5719966}, {\"filename\": \"/edge_base/hacx/sprites/SHT2B0.lmp\", \"start\": 5719966, \"end\": 5735707}, {\"filename\": \"/edge_base/hacx/sprites/SHT2C0.lmp\", \"start\": 5735707, \"end\": 5751740}, {\"filename\": \"/edge_base/hacx/sprites/SHT2D0.lmp\", \"start\": 5751740, \"end\": 5767867}, {\"filename\": \"/edge_base/hacx/sprites/SHT2E0.lmp\", \"start\": 5767867, \"end\": 5784153}, {\"filename\": \"/edge_base/hacx/sprites/SHT2F0.lmp\", \"start\": 5784153, \"end\": 5800307}, {\"filename\": \"/edge_base/hacx/sprites/SHT2G0.lmp\", \"start\": 5800307, \"end\": 5816123}, {\"filename\": \"/edge_base/hacx/sprites/SHT2H0.lmp\", \"start\": 5816123, \"end\": 5831634}, {\"filename\": \"/edge_base/hacx/sprites/SHT2I0.lmp\", \"start\": 5831634, \"end\": 5847317}, {\"filename\": \"/edge_base/hacx/sprites/SHT2J0.lmp\", \"start\": 5847317, \"end\": 5863522}, {\"filename\": \"/edge_base/hacx/sprites/SHTFA0.lmp\", \"start\": 5863522, \"end\": 5872584}, {\"filename\": \"/edge_base/hacx/sprites/SHTFB0.lmp\", \"start\": 5872584, \"end\": 5882075}, {\"filename\": \"/edge_base/hacx/sprites/SHTGA0.lmp\", \"start\": 5882075, \"end\": 5890734}, {\"filename\": \"/edge_base/hacx/sprites/SHTGB0.lmp\", \"start\": 5890734, \"end\": 5903816}, {\"filename\": \"/edge_base/hacx/sprites/SHTGC0.lmp\", \"start\": 5903816, \"end\": 5923055}, {\"filename\": \"/edge_base/hacx/sprites/SHTGD0.lmp\", \"start\": 5923055, \"end\": 5941302}, {\"filename\": \"/edge_base/harmony/ENDOOM.bin\", \"start\": 5941302, \"end\": 5945302}, {\"filename\": \"/edge_base/harmony/graphics/BOSSBACK.lmp\", \"start\": 5945302, \"end\": 6036048}, {\"filename\": \"/edge_base/harmony/graphics/CREDIT.lmp\", \"start\": 6036048, \"end\": 6126794}, {\"filename\": \"/edge_base/harmony/graphics/HELP.lmp\", \"start\": 6126794, \"end\": 6215836}, {\"filename\": \"/edge_base/harmony/graphics/INTERPIC.lmp\", \"start\": 6215836, \"end\": 6306582}, {\"filename\": \"/edge_base/harmony/graphics/M_CONTRL.png\", \"start\": 6306582, \"end\": 6307045}, {\"filename\": \"/edge_base/harmony/graphics/M_EPISOD.lmp\", \"start\": 6307045, \"end\": 6310242}, {\"filename\": \"/edge_base/harmony/graphics/M_GAMEPL.png\", \"start\": 6310242, \"end\": 6310886}, {\"filename\": \"/edge_base/harmony/graphics/M_JKILL.lmp\", \"start\": 6310886, \"end\": 6312304}, {\"filename\": \"/edge_base/harmony/graphics/M_MSETTL.png\", \"start\": 6312304, \"end\": 6312842}, {\"filename\": \"/edge_base/harmony/graphics/M_NEWG.lmp\", \"start\": 6312842, \"end\": 6315216}, {\"filename\": \"/edge_base/harmony/graphics/M_NGAME.lmp\", \"start\": 6315216, \"end\": 6316166}, {\"filename\": \"/edge_base/harmony/graphics/M_OPTTTL.png\", \"start\": 6316166, \"end\": 6317478}, {\"filename\": \"/edge_base/harmony/graphics/M_RDTHIS.lmp\", \"start\": 6317478, \"end\": 6319337}, {\"filename\": \"/edge_base/harmony/graphics/M_SAVEG.lmp\", \"start\": 6319337, \"end\": 6320350}, {\"filename\": \"/edge_base/harmony/graphics/M_SFXOPT.png\", \"start\": 6320350, \"end\": 6320840}, {\"filename\": \"/edge_base/harmony/graphics/M_SVOL.png\", \"start\": 6320840, \"end\": 6322297}, {\"filename\": \"/edge_base/harmony/graphics/M_THERML.png\", \"start\": 6322297, \"end\": 6323237}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMM.png\", \"start\": 6323237, \"end\": 6324166}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMO.png\", \"start\": 6324166, \"end\": 6325081}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMR.png\", \"start\": 6325081, \"end\": 6326019}, {\"filename\": \"/edge_base/harmony/graphics/M_VIDEO.png\", \"start\": 6326019, \"end\": 6326530}, {\"filename\": \"/edge_base/harmony/graphics/STBARL.lmp\", \"start\": 6326530, \"end\": 6329941}, {\"filename\": \"/edge_base/harmony/graphics/STBARR.lmp\", \"start\": 6329941, \"end\": 6333352}, {\"filename\": \"/edge_base/harmony/graphics/STDISK.png\", \"start\": 6333352, \"end\": 6334329}, {\"filename\": \"/edge_base/harmony/graphics/TITLEPIC.lmp\", \"start\": 6334329, \"end\": 6423371}, {\"filename\": \"/edge_base/harmony/graphics/WICOLON.lmp\", \"start\": 6423371, \"end\": 6423473}, {\"filename\": \"/edge_base/harmony/graphics/WIF.lmp\", \"start\": 6423473, \"end\": 6423521}, {\"filename\": \"/edge_base/harmony/graphics/WIFRGS.lmp\", \"start\": 6423521, \"end\": 6424652}, {\"filename\": \"/edge_base/harmony/graphics/WIKILRS.lmp\", \"start\": 6424652, \"end\": 6425125}, {\"filename\": \"/edge_base/harmony/graphics/WIMINUS.lmp\", \"start\": 6425125, \"end\": 6425245}, {\"filename\": \"/edge_base/harmony/graphics/WIMSTT.lmp\", \"start\": 6425245, \"end\": 6426345}, {\"filename\": \"/edge_base/harmony/graphics/WINUM0.lmp\", \"start\": 6426345, \"end\": 6426595}, {\"filename\": \"/edge_base/harmony/graphics/WINUM1.lmp\", \"start\": 6426595, \"end\": 6426741}, {\"filename\": \"/edge_base/harmony/graphics/WINUM2.lmp\", \"start\": 6426741, \"end\": 6427027}, {\"filename\": \"/edge_base/harmony/graphics/WINUM3.lmp\", \"start\": 6427027, \"end\": 6427280}, {\"filename\": \"/edge_base/harmony/graphics/WINUM4.lmp\", \"start\": 6427280, \"end\": 6427504}, {\"filename\": \"/edge_base/harmony/graphics/WINUM5.lmp\", \"start\": 6427504, \"end\": 6427759}, {\"filename\": \"/edge_base/harmony/graphics/WINUM6.lmp\", \"start\": 6427759, \"end\": 6428021}, {\"filename\": \"/edge_base/harmony/graphics/WINUM7.lmp\", \"start\": 6428021, \"end\": 6428238}, {\"filename\": \"/edge_base/harmony/graphics/WINUM8.lmp\", \"start\": 6428238, \"end\": 6428500}, {\"filename\": \"/edge_base/harmony/graphics/WINUM9.lmp\", \"start\": 6428500, \"end\": 6428759}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTF.lmp\", \"start\": 6428759, \"end\": 6428999}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTI.lmp\", \"start\": 6428999, \"end\": 6430447}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTK.lmp\", \"start\": 6430447, \"end\": 6431792}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTS.lmp\", \"start\": 6431792, \"end\": 6432961}, {\"filename\": \"/edge_base/harmony/graphics/WIPAR.lmp\", \"start\": 6432961, \"end\": 6433938}, {\"filename\": \"/edge_base/harmony/graphics/WIPCNT.lmp\", \"start\": 6433938, \"end\": 6434187}, {\"filename\": \"/edge_base/harmony/graphics/WISCRT2.lmp\", \"start\": 6434187, \"end\": 6435962}, {\"filename\": \"/edge_base/harmony/graphics/WISUCKS.lmp\", \"start\": 6435962, \"end\": 6437671}, {\"filename\": \"/edge_base/harmony/graphics/WITIME.lmp\", \"start\": 6437671, \"end\": 6438518}, {\"filename\": \"/edge_base/harmony/graphics/WIVCTMS.lmp\", \"start\": 6438518, \"end\": 6439318}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN033.png\", \"start\": 6439318, \"end\": 6440481}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN034.png\", \"start\": 6440481, \"end\": 6441637}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN035.png\", \"start\": 6441637, \"end\": 6442806}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN036.png\", \"start\": 6442806, \"end\": 6443979}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN037.png\", \"start\": 6443979, \"end\": 6445155}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN038.png\", \"start\": 6445155, \"end\": 6446330}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN039.png\", \"start\": 6446330, \"end\": 6447477}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN040.png\", \"start\": 6447477, \"end\": 6448645}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN041.png\", \"start\": 6448645, \"end\": 6449813}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN042.png\", \"start\": 6449813, \"end\": 6450987}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN043.png\", \"start\": 6450987, \"end\": 6452157}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN044.png\", \"start\": 6452157, \"end\": 6453324}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN045.png\", \"start\": 6453324, \"end\": 6454222}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN046.png\", \"start\": 6454222, \"end\": 6455389}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN047.png\", \"start\": 6455389, \"end\": 6456562}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN048.png\", \"start\": 6456562, \"end\": 6457737}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN049.png\", \"start\": 6457737, \"end\": 6458903}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN050.png\", \"start\": 6458903, \"end\": 6460073}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN051.png\", \"start\": 6460073, \"end\": 6461248}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN052.png\", \"start\": 6461248, \"end\": 6462420}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN053.png\", \"start\": 6462420, \"end\": 6463594}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN054.png\", \"start\": 6463594, \"end\": 6464766}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN055.png\", \"start\": 6464766, \"end\": 6465939}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN056.png\", \"start\": 6465939, \"end\": 6467112}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN057.png\", \"start\": 6467112, \"end\": 6468282}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN058.png\", \"start\": 6468282, \"end\": 6469445}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN059.png\", \"start\": 6469445, \"end\": 6470603}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN060.png\", \"start\": 6470603, \"end\": 6471768}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN061.png\", \"start\": 6471768, \"end\": 6472920}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN062.png\", \"start\": 6472920, \"end\": 6474085}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN063.png\", \"start\": 6474085, \"end\": 6475257}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN064.png\", \"start\": 6475257, \"end\": 6476432}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN065.png\", \"start\": 6476432, \"end\": 6477605}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN066.png\", \"start\": 6477605, \"end\": 6478778}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN067.png\", \"start\": 6478778, \"end\": 6479950}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN068.png\", \"start\": 6479950, \"end\": 6481123}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN069.png\", \"start\": 6481123, \"end\": 6482026}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN070.png\", \"start\": 6482026, \"end\": 6483194}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN071.png\", \"start\": 6483194, \"end\": 6484366}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN072.png\", \"start\": 6484366, \"end\": 6485533}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN073.png\", \"start\": 6485533, \"end\": 6486697}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN074.png\", \"start\": 6486697, \"end\": 6487865}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN075.png\", \"start\": 6487865, \"end\": 6489041}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN076.png\", \"start\": 6489041, \"end\": 6490210}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN077.png\", \"start\": 6490210, \"end\": 6491390}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN078.png\", \"start\": 6491390, \"end\": 6492568}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN079.png\", \"start\": 6492568, \"end\": 6493742}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN080.png\", \"start\": 6493742, \"end\": 6494914}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN081.png\", \"start\": 6494914, \"end\": 6496090}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN082.png\", \"start\": 6496090, \"end\": 6497265}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN083.png\", \"start\": 6497265, \"end\": 6498439}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN084.png\", \"start\": 6498439, \"end\": 6499611}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN085.png\", \"start\": 6499611, \"end\": 6500782}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN086.png\", \"start\": 6500782, \"end\": 6501954}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN087.png\", \"start\": 6501954, \"end\": 6503132}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN088.png\", \"start\": 6503132, \"end\": 6504305}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN089.png\", \"start\": 6504305, \"end\": 6505478}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN090.png\", \"start\": 6505478, \"end\": 6506652}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN091.png\", \"start\": 6506652, \"end\": 6507819}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN092.png\", \"start\": 6507819, \"end\": 6508991}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN093.png\", \"start\": 6508991, \"end\": 6510158}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN094.png\", \"start\": 6510158, \"end\": 6511324}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN095.png\", \"start\": 6511324, \"end\": 6512222}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN121.png\", \"start\": 6512222, \"end\": 6513112}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STTPRCNT.png\", \"start\": 6513112, \"end\": 6514314}, {\"filename\": \"/edge_base/harmony/scripts/attacks.ddf\", \"start\": 6514314, \"end\": 6522202}, {\"filename\": \"/edge_base/harmony/scripts/coal_hud.ec\", \"start\": 6522202, \"end\": 6526113}, {\"filename\": \"/edge_base/harmony/scripts/colmap.ddf\", \"start\": 6526113, \"end\": 6526429}, {\"filename\": \"/edge_base/harmony/scripts/flats.ddf\", \"start\": 6526429, \"end\": 6526776}, {\"filename\": \"/edge_base/harmony/scripts/language.ldf\", \"start\": 6526776, \"end\": 6530550}, {\"filename\": \"/edge_base/harmony/scripts/levels.ddf\", \"start\": 6530550, \"end\": 6546839}, {\"filename\": \"/edge_base/harmony/scripts/playlist.ddf\", \"start\": 6546839, \"end\": 6548312}, {\"filename\": \"/edge_base/harmony/scripts/styles.ddf\", \"start\": 6548312, \"end\": 6550634}, {\"filename\": \"/edge_base/harmony/scripts/things.ddf\", \"start\": 6550634, \"end\": 6620654}, {\"filename\": \"/edge_base/harmony/scripts/weapons.ddf\", \"start\": 6620654, \"end\": 6624434}, {\"filename\": \"/edge_base/harmony/sprites/CELLA0.png\", \"start\": 6624434, \"end\": 6626176}, {\"filename\": \"/edge_base/harmony/sprites/CLIPA0.png\", \"start\": 6626176, \"end\": 6628862}, {\"filename\": \"/edge_base/harmony/sprites/ROCKA0.png\", \"start\": 6628862, \"end\": 6630293}, {\"filename\": \"/edge_base/harmony/sprites/SHELA0.png\", \"start\": 6630293, \"end\": 6632477}, {\"filename\": \"/edge_base/heretic/graphics/AUTOPAGE.png\", \"start\": 6632477, \"end\": 6675284}, {\"filename\": \"/edge_base/heretic/graphics/BARBACK.lmp\", \"start\": 6675284, \"end\": 6695798}, {\"filename\": \"/edge_base/heretic/graphics/CREDIT.lmp\", \"start\": 6695798, \"end\": 6815086}, {\"filename\": \"/edge_base/heretic/graphics/E2END.png\", \"start\": 6815086, \"end\": 6871510}, {\"filename\": \"/edge_base/heretic/graphics/FINAL1.lmp\", \"start\": 6871510, \"end\": 6990798}, {\"filename\": \"/edge_base/heretic/graphics/FINAL2.lmp\", \"start\": 6990798, \"end\": 7110086}, {\"filename\": \"/edge_base/heretic/graphics/HELP1.lmp\", \"start\": 7110086, \"end\": 7229374}, {\"filename\": \"/edge_base/heretic/graphics/HELP2.lmp\", \"start\": 7229374, \"end\": 7348662}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI1.lmp\", \"start\": 7348662, \"end\": 7352072}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI2.lmp\", \"start\": 7352072, \"end\": 7354059}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI3.lmp\", \"start\": 7354059, \"end\": 7357765}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI4.lmp\", \"start\": 7357765, \"end\": 7359941}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI5.lmp\", \"start\": 7359941, \"end\": 7364098}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI6.png\", \"start\": 7364098, \"end\": 7365406}, {\"filename\": \"/edge_base/heretic/graphics/IN1.png\", \"start\": 7365406, \"end\": 7366593}, {\"filename\": \"/edge_base/heretic/graphics/LTFCTOP.lmp\", \"start\": 7366593, \"end\": 7367284}, {\"filename\": \"/edge_base/heretic/graphics/MAPE1.lmp\", \"start\": 7367284, \"end\": 7486572}, {\"filename\": \"/edge_base/heretic/graphics/MAPE2.lmp\", \"start\": 7486572, \"end\": 7605860}, {\"filename\": \"/edge_base/heretic/graphics/MAPE3.lmp\", \"start\": 7605860, \"end\": 7725148}, {\"filename\": \"/edge_base/heretic/graphics/M_DOOM.lmp\", \"start\": 7725148, \"end\": 7732893}, {\"filename\": \"/edge_base/heretic/graphics/M_EPISOD.lmp\", \"start\": 7732893, \"end\": 7735861}, {\"filename\": \"/edge_base/heretic/graphics/M_HURT.lmp\", \"start\": 7735861, \"end\": 7738893}, {\"filename\": \"/edge_base/heretic/graphics/M_JKILL.lmp\", \"start\": 7738893, \"end\": 7743232}, {\"filename\": \"/edge_base/heretic/graphics/M_LOADG.lmp\", \"start\": 7743232, \"end\": 7745200}, {\"filename\": \"/edge_base/heretic/graphics/M_LSCNTR.lmp\", \"start\": 7745200, \"end\": 7745392}, {\"filename\": \"/edge_base/heretic/graphics/M_LSLEFT.lmp\", \"start\": 7745392, \"end\": 7745584}, {\"filename\": \"/edge_base/heretic/graphics/M_LSRGHT.lmp\", \"start\": 7745584, \"end\": 7745776}, {\"filename\": \"/edge_base/heretic/graphics/M_NEWG.lmp\", \"start\": 7745776, \"end\": 7747693}, {\"filename\": \"/edge_base/heretic/graphics/M_NGAME.lmp\", \"start\": 7747693, \"end\": 7749610}, {\"filename\": \"/edge_base/heretic/graphics/M_NMARE.lmp\", \"start\": 7749610, \"end\": 7754936}, {\"filename\": \"/edge_base/heretic/graphics/M_OPTION.lmp\", \"start\": 7754936, \"end\": 7756440}, {\"filename\": \"/edge_base/heretic/graphics/M_OPTTTL.lmp\", \"start\": 7756440, \"end\": 7757944}, {\"filename\": \"/edge_base/heretic/graphics/M_QUITG.lmp\", \"start\": 7757944, \"end\": 7759764}, {\"filename\": \"/edge_base/heretic/graphics/M_RDTHIS.lmp\", \"start\": 7759764, \"end\": 7761372}, {\"filename\": \"/edge_base/heretic/graphics/M_ROUGH.lmp\", \"start\": 7761372, \"end\": 7764690}, {\"filename\": \"/edge_base/heretic/graphics/M_SAVEG.lmp\", \"start\": 7764690, \"end\": 7766712}, {\"filename\": \"/edge_base/heretic/graphics/M_SKILL.lmp\", \"start\": 7766712, \"end\": 7769939}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL00.png\", \"start\": 7769939, \"end\": 7771115}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL01.png\", \"start\": 7771115, \"end\": 7772324}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL02.png\", \"start\": 7772324, \"end\": 7773589}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL03.png\", \"start\": 7773589, \"end\": 7774901}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL04.png\", \"start\": 7774901, \"end\": 7776315}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL05.png\", \"start\": 7776315, \"end\": 7777629}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL06.png\", \"start\": 7777629, \"end\": 7779016}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL07.png\", \"start\": 7779016, \"end\": 7780290}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL08.png\", \"start\": 7780290, \"end\": 7781344}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL09.png\", \"start\": 7781344, \"end\": 7782342}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL10.png\", \"start\": 7782342, \"end\": 7783434}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL11.png\", \"start\": 7783434, \"end\": 7784691}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL12.png\", \"start\": 7784691, \"end\": 7786174}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL13.png\", \"start\": 7786174, \"end\": 7787524}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL14.png\", \"start\": 7787524, \"end\": 7789128}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL15.png\", \"start\": 7789128, \"end\": 7790629}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL16.png\", \"start\": 7790629, \"end\": 7791907}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL17.png\", \"start\": 7791907, \"end\": 7793139}, {\"filename\": \"/edge_base/heretic/graphics/M_THERML.lmp\", \"start\": 7793139, \"end\": 7793273}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMM.lmp\", \"start\": 7793273, \"end\": 7793479}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMO.lmp\", \"start\": 7793479, \"end\": 7793587}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMR.lmp\", \"start\": 7793587, \"end\": 7793721}, {\"filename\": \"/edge_base/heretic/graphics/M_ULTRA.lmp\", \"start\": 7793721, \"end\": 7797976}, {\"filename\": \"/edge_base/heretic/graphics/NULL.png\", \"start\": 7797976, \"end\": 7799136}, {\"filename\": \"/edge_base/heretic/graphics/RTFCTOP.lmp\", \"start\": 7799136, \"end\": 7799885}, {\"filename\": \"/edge_base/heretic/graphics/STBARL.lmp\", \"start\": 7799885, \"end\": 7804126}, {\"filename\": \"/edge_base/heretic/graphics/STBARR.lmp\", \"start\": 7804126, \"end\": 7808367}, {\"filename\": \"/edge_base/heretic/graphics/TITLE.png\", \"start\": 7808367, \"end\": 7858990}, {\"filename\": \"/edge_base/heretic/graphics/WIENTER.png\", \"start\": 7858990, \"end\": 7859889}, {\"filename\": \"/edge_base/heretic/graphics/WIF.png\", \"start\": 7859889, \"end\": 7860635}, {\"filename\": \"/edge_base/heretic/graphics/__SKULL1.lmp\", \"start\": 7860635, \"end\": 7861011}, {\"filename\": \"/edge_base/heretic/graphics/__SKULL2.lmp\", \"start\": 7861011, \"end\": 7861387}, {\"filename\": \"/edge_base/heretic/scripts/anims.ddf\", \"start\": 7861387, \"end\": 7863110}, {\"filename\": \"/edge_base/heretic/scripts/attacks.ddf\", \"start\": 7863110, \"end\": 7904769}, {\"filename\": \"/edge_base/heretic/scripts/coal_hud.ec\", \"start\": 7904769, \"end\": 7920340}, {\"filename\": \"/edge_base/heretic/scripts/flats.ddf\", \"start\": 7920340, \"end\": 7920897}, {\"filename\": \"/edge_base/heretic/scripts/fonts.ddf\", \"start\": 7920897, \"end\": 7921945}, {\"filename\": \"/edge_base/heretic/scripts/games.ddf\", \"start\": 7921945, \"end\": 7924583}, {\"filename\": \"/edge_base/heretic/scripts/images.ddf\", \"start\": 7924583, \"end\": 7927402}, {\"filename\": \"/edge_base/heretic/scripts/language.ldf\", \"start\": 7927402, \"end\": 7936131}, {\"filename\": \"/edge_base/heretic/scripts/levels.ddf\", \"start\": 7936131, \"end\": 7949721}, {\"filename\": \"/edge_base/heretic/scripts/lines.ddf\", \"start\": 7949721, \"end\": 7954556}, {\"filename\": \"/edge_base/heretic/scripts/playlist.ddf\", \"start\": 7954556, \"end\": 7956712}, {\"filename\": \"/edge_base/heretic/scripts/rscript.rts\", \"start\": 7956712, \"end\": 7969760}, {\"filename\": \"/edge_base/heretic/scripts/sectors.ddf\", \"start\": 7969760, \"end\": 7971244}, {\"filename\": \"/edge_base/heretic/scripts/sounds.ddf\", \"start\": 7971244, \"end\": 7982446}, {\"filename\": \"/edge_base/heretic/scripts/styles.ddf\", \"start\": 7982446, \"end\": 7987620}, {\"filename\": \"/edge_base/heretic/scripts/switch.ddf\", \"start\": 7987620, \"end\": 7988075}, {\"filename\": \"/edge_base/heretic/scripts/things.ddf\", \"start\": 7988075, \"end\": 8071910}, {\"filename\": \"/edge_base/heretic/scripts/weapons.ddf\", \"start\": 8071910, \"end\": 8082231}, {\"filename\": \"/edge_base/heretic/sprites/STFFC0.lmp\", \"start\": 8082231, \"end\": 8099361}, {\"filename\": \"/edge_base/heretic/sprites/STFFH0.lmp\", \"start\": 8099361, \"end\": 8117407}, {\"filename\": \"/edge_base/plutonia/graphics/BOSSBACK.lmp\", \"start\": 8117407, \"end\": 8236695}, {\"filename\": \"/edge_base/plutonia/graphics/CREDIT.lmp\", \"start\": 8236695, \"end\": 8355983}, {\"filename\": \"/edge_base/plutonia/graphics/INTERPIC.lmp\", \"start\": 8355983, \"end\": 8475271}, {\"filename\": \"/edge_base/plutonia/graphics/TITLEPIC.lmp\", \"start\": 8475271, \"end\": 8594559}, {\"filename\": \"/edge_base/plutonia/scripts/images.ddf\", \"start\": 8594559, \"end\": 8595985}, {\"filename\": \"/edge_base/plutonia/scripts/language.ldf\", \"start\": 8595985, \"end\": 8599470}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_B.png\", \"start\": 8599470, \"end\": 8614501}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_E.png\", \"start\": 8614501, \"end\": 8629497}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_N.png\", \"start\": 8629497, \"end\": 8642576}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_S.png\", \"start\": 8642576, \"end\": 8655655}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_T.png\", \"start\": 8655655, \"end\": 8670686}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_W.png\", \"start\": 8670686, \"end\": 8685682}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_B.png\", \"start\": 8685682, \"end\": 8713617}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_E.png\", \"start\": 8713617, \"end\": 8725257}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_N.png\", \"start\": 8725257, \"end\": 8737166}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_S.png\", \"start\": 8737166, \"end\": 8749075}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_T.png\", \"start\": 8749075, \"end\": 8777010}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_W.png\", \"start\": 8777010, \"end\": 8788650}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_B.png\", \"start\": 8788650, \"end\": 8987400}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_E.png\", \"start\": 8987400, \"end\": 9077993}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_N.png\", \"start\": 9077993, \"end\": 9161377}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_S.png\", \"start\": 9161377, \"end\": 9244761}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_T.png\", \"start\": 9244761, \"end\": 9443511}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_W.png\", \"start\": 9443511, \"end\": 9534104}, {\"filename\": \"/edge_base/rekkr/graphics/M_DOOM.lmp\", \"start\": 9534104, \"end\": 9559395}, {\"filename\": \"/edge_base/rekkr/graphics/M_EPISOD.lmp\", \"start\": 9559395, \"end\": 9576865}, {\"filename\": \"/edge_base/rekkr/graphics/M_HURT.lmp\", \"start\": 9576865, \"end\": 9579004}, {\"filename\": \"/edge_base/rekkr/graphics/M_JKILL.lmp\", \"start\": 9579004, \"end\": 9581763}, {\"filename\": \"/edge_base/rekkr/graphics/M_LGTTL.lmp\", \"start\": 9581763, \"end\": 9583950}, {\"filename\": \"/edge_base/rekkr/graphics/M_LOADG.lmp\", \"start\": 9583950, \"end\": 9586067}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSCNTR.lmp\", \"start\": 9586067, \"end\": 9586259}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSLEFT.lmp\", \"start\": 9586259, \"end\": 9586451}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSRGHT.lmp\", \"start\": 9586451, \"end\": 9586643}, {\"filename\": \"/edge_base/rekkr/graphics/M_NEWG.lmp\", \"start\": 9586643, \"end\": 9589918}, {\"filename\": \"/edge_base/rekkr/graphics/M_NGAME.lmp\", \"start\": 9589918, \"end\": 9591966}, {\"filename\": \"/edge_base/rekkr/graphics/M_NMARE.lmp\", \"start\": 9591966, \"end\": 9594400}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTION.lmp\", \"start\": 9594400, \"end\": 9596237}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTTTL.lmp\", \"start\": 9596237, \"end\": 9597959}, {\"filename\": \"/edge_base/rekkr/graphics/M_QUITG.lmp\", \"start\": 9597959, \"end\": 9600027}, {\"filename\": \"/edge_base/rekkr/graphics/M_RDTHIS.lmp\", \"start\": 9600027, \"end\": 9601272}, {\"filename\": \"/edge_base/rekkr/graphics/M_ROUGH.lmp\", \"start\": 9601272, \"end\": 9603841}, {\"filename\": \"/edge_base/rekkr/graphics/M_SAVEG.lmp\", \"start\": 9603841, \"end\": 9606061}, {\"filename\": \"/edge_base/rekkr/graphics/M_SGTTL.lmp\", \"start\": 9606061, \"end\": 9608281}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKILL.lmp\", \"start\": 9608281, \"end\": 9636373}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL1.png\", \"start\": 9636373, \"end\": 9636961}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL2.png\", \"start\": 9636961, \"end\": 9637543}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL3.png\", \"start\": 9637543, \"end\": 9638138}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL4.png\", \"start\": 9638138, \"end\": 9638726}, {\"filename\": \"/edge_base/rekkr/graphics/M_ULTRA.lmp\", \"start\": 9638726, \"end\": 9641100}, {\"filename\": \"/edge_base/rekkr/graphics/STBARL.lmp\", \"start\": 9641100, \"end\": 9644511}, {\"filename\": \"/edge_base/rekkr/graphics/STBARR.lmp\", \"start\": 9644511, \"end\": 9647922}, {\"filename\": \"/edge_base/rekkr/graphics/WIENTER.lmp\", \"start\": 9647922, \"end\": 9649847}, {\"filename\": \"/edge_base/rekkr/graphics/WIF.lmp\", \"start\": 9649847, \"end\": 9651628}, {\"filename\": \"/edge_base/rekkr/graphics/WILV00.lmp\", \"start\": 9651628, \"end\": 9653227}, {\"filename\": \"/edge_base/rekkr/graphics/WILV01.lmp\", \"start\": 9653227, \"end\": 9654243}, {\"filename\": \"/edge_base/rekkr/graphics/WILV02.lmp\", \"start\": 9654243, \"end\": 9656270}, {\"filename\": \"/edge_base/rekkr/graphics/WILV03.lmp\", \"start\": 9656270, \"end\": 9658837}, {\"filename\": \"/edge_base/rekkr/graphics/WILV04.lmp\", \"start\": 9658837, \"end\": 9660552}, {\"filename\": \"/edge_base/rekkr/graphics/WILV05.lmp\", \"start\": 9660552, \"end\": 9662280}, {\"filename\": \"/edge_base/rekkr/graphics/WILV06.lmp\", \"start\": 9662280, \"end\": 9665664}, {\"filename\": \"/edge_base/rekkr/graphics/WILV07.lmp\", \"start\": 9665664, \"end\": 9669168}, {\"filename\": \"/edge_base/rekkr/graphics/WILV08.lmp\", \"start\": 9669168, \"end\": 9672011}, {\"filename\": \"/edge_base/rekkr/graphics/WILV10.lmp\", \"start\": 9672011, \"end\": 9673390}, {\"filename\": \"/edge_base/rekkr/graphics/WILV11.lmp\", \"start\": 9673390, \"end\": 9675026}, {\"filename\": \"/edge_base/rekkr/graphics/WILV12.lmp\", \"start\": 9675026, \"end\": 9677346}, {\"filename\": \"/edge_base/rekkr/graphics/WILV13.lmp\", \"start\": 9677346, \"end\": 9678556}, {\"filename\": \"/edge_base/rekkr/graphics/WILV14.lmp\", \"start\": 9678556, \"end\": 9681253}, {\"filename\": \"/edge_base/rekkr/graphics/WILV15.lmp\", \"start\": 9681253, \"end\": 9684340}, {\"filename\": \"/edge_base/rekkr/graphics/WILV16.lmp\", \"start\": 9684340, \"end\": 9685981}, {\"filename\": \"/edge_base/rekkr/graphics/WILV17.lmp\", \"start\": 9685981, \"end\": 9687869}, {\"filename\": \"/edge_base/rekkr/graphics/WILV18.lmp\", \"start\": 9687869, \"end\": 9689056}, {\"filename\": \"/edge_base/rekkr/graphics/WILV20.lmp\", \"start\": 9689056, \"end\": 9691017}, {\"filename\": \"/edge_base/rekkr/graphics/WILV21.lmp\", \"start\": 9691017, \"end\": 9694133}, {\"filename\": \"/edge_base/rekkr/graphics/WILV22.lmp\", \"start\": 9694133, \"end\": 9695894}, {\"filename\": \"/edge_base/rekkr/graphics/WILV23.lmp\", \"start\": 9695894, \"end\": 9698753}, {\"filename\": \"/edge_base/rekkr/graphics/WILV24.lmp\", \"start\": 9698753, \"end\": 9700466}, {\"filename\": \"/edge_base/rekkr/graphics/WILV25.lmp\", \"start\": 9700466, \"end\": 9702730}, {\"filename\": \"/edge_base/rekkr/graphics/WILV26.lmp\", \"start\": 9702730, \"end\": 9703963}, {\"filename\": \"/edge_base/rekkr/graphics/WILV27.lmp\", \"start\": 9703963, \"end\": 9704706}, {\"filename\": \"/edge_base/rekkr/graphics/WILV28.lmp\", \"start\": 9704706, \"end\": 9708484}, {\"filename\": \"/edge_base/rekkr/graphics/WILV30.lmp\", \"start\": 9708484, \"end\": 9710336}, {\"filename\": \"/edge_base/rekkr/graphics/WILV31.lmp\", \"start\": 9710336, \"end\": 9711974}, {\"filename\": \"/edge_base/rekkr/graphics/WILV32.lmp\", \"start\": 9711974, \"end\": 9713096}, {\"filename\": \"/edge_base/rekkr/graphics/WILV33.lmp\", \"start\": 9713096, \"end\": 9715435}, {\"filename\": \"/edge_base/rekkr/graphics/WILV34.lmp\", \"start\": 9715435, \"end\": 9717438}, {\"filename\": \"/edge_base/rekkr/graphics/WILV35.lmp\", \"start\": 9717438, \"end\": 9719572}, {\"filename\": \"/edge_base/rekkr/graphics/WILV36.lmp\", \"start\": 9719572, \"end\": 9722638}, {\"filename\": \"/edge_base/rekkr/graphics/WILV37.lmp\", \"start\": 9722638, \"end\": 9724633}, {\"filename\": \"/edge_base/rekkr/graphics/WILV38.lmp\", \"start\": 9724633, \"end\": 9726493}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTF.lmp\", \"start\": 9726493, \"end\": 9726755}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTI.lmp\", \"start\": 9726755, \"end\": 9727961}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTK.lmp\", \"start\": 9727961, \"end\": 9729026}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTS.lmp\", \"start\": 9729026, \"end\": 9730056}, {\"filename\": \"/edge_base/rekkr/graphics/WIPAR.lmp\", \"start\": 9730056, \"end\": 9730818}, {\"filename\": \"/edge_base/rekkr/graphics/WISCRT2.lmp\", \"start\": 9730818, \"end\": 9732385}, {\"filename\": \"/edge_base/rekkr/graphics/WITIME.lmp\", \"start\": 9732385, \"end\": 9733299}, {\"filename\": \"/edge_base/rekkr/scripts/anims.ddf\", \"start\": 9733299, \"end\": 9733443}, {\"filename\": \"/edge_base/rekkr/scripts/attacks.ddf\", \"start\": 9733443, \"end\": 9734203}, {\"filename\": \"/edge_base/rekkr/scripts/images.ddf\", \"start\": 9734203, \"end\": 9741351}, {\"filename\": \"/edge_base/rekkr/scripts/language.ldf\", \"start\": 9741351, \"end\": 9742161}, {\"filename\": \"/edge_base/rekkr/scripts/styles.ddf\", \"start\": 9742161, \"end\": 9746526}, {\"filename\": \"/edge_base/rekkr/scripts/things.ddf\", \"start\": 9746526, \"end\": 9748766}, {\"filename\": \"/edge_base/rekkr/scripts/weapons.ddf\", \"start\": 9748766, \"end\": 9750701}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA1.lmp\", \"start\": 9750701, \"end\": 9751326}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA2A8.lmp\", \"start\": 9751326, \"end\": 9752301}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA3A7.lmp\", \"start\": 9752301, \"end\": 9753276}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA4A6.lmp\", \"start\": 9753276, \"end\": 9754251}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA5.lmp\", \"start\": 9754251, \"end\": 9754882}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB1.lmp\", \"start\": 9754882, \"end\": 9755465}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB2B8.lmp\", \"start\": 9755465, \"end\": 9756432}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB3B7.lmp\", \"start\": 9756432, \"end\": 9757399}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB4B6.lmp\", \"start\": 9757399, \"end\": 9758366}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB5.lmp\", \"start\": 9758366, \"end\": 9758948}, {\"filename\": \"/edge_base/tnt/graphics/BOSSBACK.lmp\", \"start\": 9758948, \"end\": 9878236}, {\"filename\": \"/edge_base/tnt/graphics/CREDIT.lmp\", \"start\": 9878236, \"end\": 9997524}, {\"filename\": \"/edge_base/tnt/graphics/INTERPIC.lmp\", \"start\": 9997524, \"end\": 10116812}, {\"filename\": \"/edge_base/tnt/graphics/TITLEPIC.lmp\", \"start\": 10116812, \"end\": 10236100}, {\"filename\": \"/edge_base/tnt/scripts/images.ddf\", \"start\": 10236100, \"end\": 10237530}, {\"filename\": \"/edge_base/tnt/scripts/language.ldf\", \"start\": 10237530, \"end\": 10241309}, {\"filename\": \"/edge_base/tnt/textures/SKY1_B.png\", \"start\": 10241309, \"end\": 10257302}, {\"filename\": \"/edge_base/tnt/textures/SKY1_E.png\", \"start\": 10257302, \"end\": 10276768}, {\"filename\": \"/edge_base/tnt/textures/SKY1_N.png\", \"start\": 10276768, \"end\": 10294194}, {\"filename\": \"/edge_base/tnt/textures/SKY1_S.png\", \"start\": 10294194, \"end\": 10310101}, {\"filename\": \"/edge_base/tnt/textures/SKY1_T.png\", \"start\": 10310101, \"end\": 10350219}, {\"filename\": \"/edge_base/tnt/textures/SKY1_W.png\", \"start\": 10350219, \"end\": 10369543}, {\"filename\": \"/edge_base/tnt/textures/SKY2_B.png\", \"start\": 10369543, \"end\": 10370854}, {\"filename\": \"/edge_base/tnt/textures/SKY2_E.png\", \"start\": 10370854, \"end\": 10375377}, {\"filename\": \"/edge_base/tnt/textures/SKY2_N.png\", \"start\": 10375377, \"end\": 10376606}, {\"filename\": \"/edge_base/tnt/textures/SKY2_S.png\", \"start\": 10376606, \"end\": 10382823}, {\"filename\": \"/edge_base/tnt/textures/SKY2_T.png\", \"start\": 10382823, \"end\": 10386950}, {\"filename\": \"/edge_base/tnt/textures/SKY2_W.png\", \"start\": 10386950, \"end\": 10388492}, {\"filename\": \"/edge_base/tnt/textures/SKY3_B.png\", \"start\": 10388492, \"end\": 10412963}, {\"filename\": \"/edge_base/tnt/textures/SKY3_E.png\", \"start\": 10412963, \"end\": 10420665}, {\"filename\": \"/edge_base/tnt/textures/SKY3_N.png\", \"start\": 10420665, \"end\": 10428544}, {\"filename\": \"/edge_base/tnt/textures/SKY3_S.png\", \"start\": 10428544, \"end\": 10435892}, {\"filename\": \"/edge_base/tnt/textures/SKY3_T.png\", \"start\": 10435892, \"end\": 10460363}, {\"filename\": \"/edge_base/tnt/textures/SKY3_W.png\", \"start\": 10460363, \"end\": 10467704}, {\"filename\": \"/edge_defs/colormaps/AUTOMAPS.dat\", \"start\": 10467704, \"end\": 10468216}, {\"filename\": \"/edge_defs/colormaps/LAVAMAP.cmp\", \"start\": 10468216, \"end\": 10476920}, {\"filename\": \"/edge_defs/colormaps/NITEVMAP.cmp\", \"start\": 10476920, \"end\": 10477176}, {\"filename\": \"/edge_defs/colormaps/PLYRMAPS.dat\", \"start\": 10477176, \"end\": 10481016}, {\"filename\": \"/edge_defs/colormaps/SARGMAPS.dat\", \"start\": 10481016, \"end\": 10482552}, {\"filename\": \"/edge_defs/colormaps/SHADEMAP.cmp\", \"start\": 10482552, \"end\": 10482808}, {\"filename\": \"/edge_defs/colormaps/SKINMAPS.dat\", \"start\": 10482808, \"end\": 10484088}, {\"filename\": \"/edge_defs/colormaps/SLIMEMAP.cmp\", \"start\": 10484088, \"end\": 10492792}, {\"filename\": \"/edge_defs/colormaps/TEXTMAPS.dat\", \"start\": 10492792, \"end\": 10494584}, {\"filename\": \"/edge_defs/colormaps/TXTBLUES.dat\", \"start\": 10494584, \"end\": 10495864}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS1.dat\", \"start\": 10495864, \"end\": 10497144}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS2.dat\", \"start\": 10497144, \"end\": 10498424}, {\"filename\": \"/edge_defs/colormaps/TXTGREYS.dat\", \"start\": 10498424, \"end\": 10499704}, {\"filename\": \"/edge_defs/colormaps/TXTGRNS.dat\", \"start\": 10499704, \"end\": 10500984}, {\"filename\": \"/edge_defs/colormaps/TXTORANS.dat\", \"start\": 10500984, \"end\": 10502264}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS1.dat\", \"start\": 10502264, \"end\": 10503544}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS2.dat\", \"start\": 10503544, \"end\": 10504824}, {\"filename\": \"/edge_defs/colormaps/TXTPURPS.dat\", \"start\": 10504824, \"end\": 10506104}, {\"filename\": \"/edge_defs/colormaps/TXTREDS.dat\", \"start\": 10506104, \"end\": 10507384}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS1.dat\", \"start\": 10507384, \"end\": 10508664}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS2.dat\", \"start\": 10508664, \"end\": 10509944}, {\"filename\": \"/edge_defs/colormaps/WATERMAP.cmp\", \"start\": 10509944, \"end\": 10518648}, {\"filename\": \"/edge_defs/graphics/CREDIT2.lmp\", \"start\": 10518648, \"end\": 10585536}, {\"filename\": \"/edge_defs/graphics/DLITEXPN.png\", \"start\": 10585536, \"end\": 10599879}, {\"filename\": \"/edge_defs/graphics/EDGECBG1.jpg\", \"start\": 10599879, \"end\": 10663246}, {\"filename\": \"/edge_defs/graphics/EDGECRED.png\", \"start\": 10663246, \"end\": 10830845}, {\"filename\": \"/edge_defs/graphics/EDGETTL.lmp\", \"start\": 10830845, \"end\": 10897733}, {\"filename\": \"/edge_defs/graphics/ENDFONT.png\", \"start\": 10897733, \"end\": 10904837}, {\"filename\": \"/edge_defs/graphics/FONTVERD.png\", \"start\": 10904837, \"end\": 10949468}, {\"filename\": \"/edge_defs/graphics/MOUSE.lmp\", \"start\": 10949468, \"end\": 10949651}, {\"filename\": \"/edge_defs/graphics/M_EPI5.lmp\", \"start\": 10949651, \"end\": 10950795}, {\"filename\": \"/edge_defs/graphics/M_EPI6.lmp\", \"start\": 10950795, \"end\": 10953825}, {\"filename\": \"/edge_defs/graphics/STBARL.lmp\", \"start\": 10953825, \"end\": 10957236}, {\"filename\": \"/edge_defs/graphics/STBARR.lmp\", \"start\": 10957236, \"end\": 10960647}, {\"filename\": \"/edge_defs/graphics/STCFN000.lmp\", \"start\": 10960647, \"end\": 10960791}, {\"filename\": \"/edge_defs/graphics/STCFN132.lmp\", \"start\": 10960791, \"end\": 10960933}, {\"filename\": \"/edge_defs/graphics/STCFN134.lmp\", \"start\": 10960933, \"end\": 10961060}, {\"filename\": \"/edge_defs/graphics/STCFN148.lmp\", \"start\": 10961060, \"end\": 10961195}, {\"filename\": \"/edge_defs/graphics/STDESYNC.lmp\", \"start\": 10961195, \"end\": 10963792}, {\"filename\": \"/edge_defs/graphics/STFB0.lmp\", \"start\": 10963792, \"end\": 10965200}, {\"filename\": \"/edge_defs/graphics/STFB1.lmp\", \"start\": 10965200, \"end\": 10966608}, {\"filename\": \"/edge_defs/graphics/STFB2.lmp\", \"start\": 10966608, \"end\": 10968016}, {\"filename\": \"/edge_defs/graphics/STFB3.lmp\", \"start\": 10968016, \"end\": 10969424}, {\"filename\": \"/edge_defs/graphics/STFB4.lmp\", \"start\": 10969424, \"end\": 10970832}, {\"filename\": \"/edge_defs/graphics/STFB5.lmp\", \"start\": 10970832, \"end\": 10972240}, {\"filename\": \"/edge_defs/graphics/STFB6.lmp\", \"start\": 10972240, \"end\": 10973648}, {\"filename\": \"/edge_defs/graphics/STFB7.lmp\", \"start\": 10973648, \"end\": 10975056}, {\"filename\": \"/edge_defs/graphics/STKEYS6.lmp\", \"start\": 10975056, \"end\": 10975176}, {\"filename\": \"/edge_defs/graphics/STKEYS7.lmp\", \"start\": 10975176, \"end\": 10975296}, {\"filename\": \"/edge_defs/graphics/STKEYS8.lmp\", \"start\": 10975296, \"end\": 10975416}, {\"filename\": \"/edge_defs/graphics/STPB0.lmp\", \"start\": 10975416, \"end\": 10976894}, {\"filename\": \"/edge_defs/graphics/STPB1.lmp\", \"start\": 10976894, \"end\": 10978372}, {\"filename\": \"/edge_defs/graphics/STPB2.lmp\", \"start\": 10978372, \"end\": 10979850}, {\"filename\": \"/edge_defs/graphics/STPB3.lmp\", \"start\": 10979850, \"end\": 10981328}, {\"filename\": \"/edge_defs/graphics/STPB4.lmp\", \"start\": 10981328, \"end\": 10982806}, {\"filename\": \"/edge_defs/graphics/STPB5.lmp\", \"start\": 10982806, \"end\": 10984284}, {\"filename\": \"/edge_defs/graphics/STPB6.lmp\", \"start\": 10984284, \"end\": 10985762}, {\"filename\": \"/edge_defs/graphics/STPB7.lmp\", \"start\": 10985762, \"end\": 10987240}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR1.png\", \"start\": 10987240, \"end\": 10987433}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR2.png\", \"start\": 10987433, \"end\": 10987618}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR3.png\", \"start\": 10987618, \"end\": 10987803}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR4.png\", \"start\": 10987803, \"end\": 10987990}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR5.png\", \"start\": 10987990, \"end\": 10988256}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR6.png\", \"start\": 10988256, \"end\": 10988597}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR7.png\", \"start\": 10988597, \"end\": 10988891}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR8.png\", \"start\": 10988891, \"end\": 10990275}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR9.png\", \"start\": 10990275, \"end\": 10990694}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN001.png\", \"start\": 10990694, \"end\": 10991051}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN002.png\", \"start\": 10991051, \"end\": 10991396}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN003.png\", \"start\": 10991396, \"end\": 10991752}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN004.png\", \"start\": 10991752, \"end\": 10992100}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN005.png\", \"start\": 10992100, \"end\": 10992439}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN006.png\", \"start\": 10992439, \"end\": 10992757}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN007.png\", \"start\": 10992757, \"end\": 10993107}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN008.png\", \"start\": 10993107, \"end\": 10993463}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN009.png\", \"start\": 10993463, \"end\": 10993742}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN010.png\", \"start\": 10993742, \"end\": 10994067}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN011.png\", \"start\": 10994067, \"end\": 10994436}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN012.png\", \"start\": 10994436, \"end\": 10994760}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN013.png\", \"start\": 10994760, \"end\": 10995126}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN014.png\", \"start\": 10995126, \"end\": 10995482}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN015.png\", \"start\": 10995482, \"end\": 10995855}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN016.png\", \"start\": 10995855, \"end\": 10996189}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN017.png\", \"start\": 10996189, \"end\": 10996564}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN018.png\", \"start\": 10996564, \"end\": 10996922}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN019.png\", \"start\": 10996922, \"end\": 10997273}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN020.png\", \"start\": 10997273, \"end\": 10997592}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN021.png\", \"start\": 10997592, \"end\": 10997938}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN022.png\", \"start\": 10997938, \"end\": 10998267}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN023.png\", \"start\": 10998267, \"end\": 10998622}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN024.png\", \"start\": 10998622, \"end\": 10998973}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN025.png\", \"start\": 10998973, \"end\": 10999322}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN026.png\", \"start\": 10999322, \"end\": 10999660}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN027.png\", \"start\": 10999660, \"end\": 10999949}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN028.png\", \"start\": 10999949, \"end\": 11000263}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN029.png\", \"start\": 11000263, \"end\": 11000506}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN030.png\", \"start\": 11000506, \"end\": 11000749}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN031.png\", \"start\": 11000749, \"end\": 11001015}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN032.png\", \"start\": 11001015, \"end\": 11001248}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN033.png\", \"start\": 11001248, \"end\": 11001586}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN034.png\", \"start\": 11001586, \"end\": 11001879}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN035.png\", \"start\": 11001879, \"end\": 11002217}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN036.png\", \"start\": 11002217, \"end\": 11002546}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN037.png\", \"start\": 11002546, \"end\": 11002875}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN038.png\", \"start\": 11002875, \"end\": 11003208}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN039.png\", \"start\": 11003208, \"end\": 11003544}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN040.png\", \"start\": 11003544, \"end\": 11003841}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN041.png\", \"start\": 11003841, \"end\": 11004181}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN042.png\", \"start\": 11004181, \"end\": 11004521}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN043.png\", \"start\": 11004521, \"end\": 11004756}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN044.png\", \"start\": 11004756, \"end\": 11005076}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN045.png\", \"start\": 11005076, \"end\": 11005360}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN046.png\", \"start\": 11005360, \"end\": 11005690}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN047.png\", \"start\": 11005690, \"end\": 11006028}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN048.png\", \"start\": 11006028, \"end\": 11006343}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN049.png\", \"start\": 11006343, \"end\": 11006672}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN050.png\", \"start\": 11006672, \"end\": 11006994}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN051.png\", \"start\": 11006994, \"end\": 11007311}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN052.png\", \"start\": 11007311, \"end\": 11007650}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN053.png\", \"start\": 11007650, \"end\": 11007970}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN054.png\", \"start\": 11007970, \"end\": 11008244}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN055.png\", \"start\": 11008244, \"end\": 11008551}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN056.png\", \"start\": 11008551, \"end\": 11008896}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN057.png\", \"start\": 11008896, \"end\": 11009194}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN058.png\", \"start\": 11009194, \"end\": 11009548}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN059.png\", \"start\": 11009548, \"end\": 11009887}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN060.png\", \"start\": 11009887, \"end\": 11010226}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN061.png\", \"start\": 11010226, \"end\": 11010550}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN062.png\", \"start\": 11010550, \"end\": 11010890}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN063.png\", \"start\": 11010890, \"end\": 11011215}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN064.png\", \"start\": 11011215, \"end\": 11011554}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN065.png\", \"start\": 11011554, \"end\": 11011860}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN066.png\", \"start\": 11011860, \"end\": 11012194}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN067.png\", \"start\": 11012194, \"end\": 11012526}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN068.png\", \"start\": 11012526, \"end\": 11012874}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN069.png\", \"start\": 11012874, \"end\": 11013215}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN070.png\", \"start\": 11013215, \"end\": 11013540}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN071.png\", \"start\": 11013540, \"end\": 11013872}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN072.png\", \"start\": 11013872, \"end\": 11014201}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN073.png\", \"start\": 11014201, \"end\": 11014435}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN074.png\", \"start\": 11014435, \"end\": 11014681}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN075.png\", \"start\": 11014681, \"end\": 11015007}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN076.png\", \"start\": 11015007, \"end\": 11015294}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN077.png\", \"start\": 11015294, \"end\": 11015612}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN078.png\", \"start\": 11015612, \"end\": 11015932}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN079.png\", \"start\": 11015932, \"end\": 11016243}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN080.png\", \"start\": 11016243, \"end\": 11016560}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN081.png\", \"start\": 11016560, \"end\": 11016875}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN082.png\", \"start\": 11016875, \"end\": 11017177}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN083.png\", \"start\": 11017177, \"end\": 11017505}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN084.png\", \"start\": 11017505, \"end\": 11017837}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN085.png\", \"start\": 11017837, \"end\": 11018085}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN086.png\", \"start\": 11018085, \"end\": 11018336}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_1x.png\", \"start\": 11018336, \"end\": 11025672}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_2x.png\", \"start\": 11025672, \"end\": 11033061}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_1x.png\", \"start\": 11033061, \"end\": 11033225}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_2x.png\", \"start\": 11033225, \"end\": 11033399}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_1x.png\", \"start\": 11033399, \"end\": 11040702}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_2x.png\", \"start\": 11040702, \"end\": 11048037}, {\"filename\": \"/edge_defs/scripts/anims.ddf\", \"start\": 11048037, \"end\": 11050227}, {\"filename\": \"/edge_defs/scripts/attacks.ddf\", \"start\": 11050227, \"end\": 11073290}, {\"filename\": \"/edge_defs/scripts/coal_api.ec\", \"start\": 11073290, \"end\": 11088362}, {\"filename\": \"/edge_defs/scripts/coal_hud.ec\", \"start\": 11088362, \"end\": 11107139}, {\"filename\": \"/edge_defs/scripts/colmap.ddf\", \"start\": 11107139, \"end\": 11111358}, {\"filename\": \"/edge_defs/scripts/flats.ddf\", \"start\": 11111358, \"end\": 11116544}, {\"filename\": \"/edge_defs/scripts/fonts.ddf\", \"start\": 11116544, \"end\": 11118261}, {\"filename\": \"/edge_defs/scripts/games.ddf\", \"start\": 11118261, \"end\": 11122803}, {\"filename\": \"/edge_defs/scripts/images.ddf\", \"start\": 11122803, \"end\": 11142344}, {\"filename\": \"/edge_defs/scripts/language.ldf\", \"start\": 11142344, \"end\": 11260940}, {\"filename\": \"/edge_defs/scripts/levels.ddf\", \"start\": 11260940, \"end\": 11279183}, {\"filename\": \"/edge_defs/scripts/lines.ddf\", \"start\": 11279183, \"end\": 11377221}, {\"filename\": \"/edge_defs/scripts/playlist.ddf\", \"start\": 11377221, \"end\": 11380139}, {\"filename\": \"/edge_defs/scripts/rscript.rts\", \"start\": 11380139, \"end\": 11381830}, {\"filename\": \"/edge_defs/scripts/sectors.ddf\", \"start\": 11381830, \"end\": 11395667}, {\"filename\": \"/edge_defs/scripts/sounds.ddf\", \"start\": 11395667, \"end\": 11407262}, {\"filename\": \"/edge_defs/scripts/styles.ddf\", \"start\": 11407262, \"end\": 11413450}, {\"filename\": \"/edge_defs/scripts/switch.ddf\", \"start\": 11413450, \"end\": 11417754}, {\"filename\": \"/edge_defs/scripts/things.ddf\", \"start\": 11417754, \"end\": 11567081}, {\"filename\": \"/edge_defs/scripts/wadfixes.ddf\", \"start\": 11567081, \"end\": 11567952}, {\"filename\": \"/edge_defs/scripts/weapons.ddf\", \"start\": 11567952, \"end\": 11573646}, {\"filename\": \"/edge_defs/sounds/DPBAREXP.lmp\", \"start\": 11573646, \"end\": 11573729}, {\"filename\": \"/edge_defs/sounds/DPBDCLS.lmp\", \"start\": 11573729, \"end\": 11573775}, {\"filename\": \"/edge_defs/sounds/DPBDOPN.lmp\", \"start\": 11573775, \"end\": 11573816}, {\"filename\": \"/edge_defs/sounds/DPBFG.lmp\", \"start\": 11573816, \"end\": 11574004}, {\"filename\": \"/edge_defs/sounds/DPBGACT.lmp\", \"start\": 11574004, \"end\": 11574103}, {\"filename\": \"/edge_defs/sounds/DPBGDTH1.lmp\", \"start\": 11574103, \"end\": 11574192}, {\"filename\": \"/edge_defs/sounds/DPBGDTH2.lmp\", \"start\": 11574192, \"end\": 11574281}, {\"filename\": \"/edge_defs/sounds/DPBGSIT1.lmp\", \"start\": 11574281, \"end\": 11574392}, {\"filename\": \"/edge_defs/sounds/DPBGSIT2.lmp\", \"start\": 11574392, \"end\": 11574503}, {\"filename\": \"/edge_defs/sounds/DPBOSCUB.lmp\", \"start\": 11574503, \"end\": 11574539}, {\"filename\": \"/edge_defs/sounds/DPBOSDTH.lmp\", \"start\": 11574539, \"end\": 11574818}, {\"filename\": \"/edge_defs/sounds/DPBOSPIT.lmp\", \"start\": 11574818, \"end\": 11574863}, {\"filename\": \"/edge_defs/sounds/DPBOSPN.lmp\", \"start\": 11574863, \"end\": 11574901}, {\"filename\": \"/edge_defs/sounds/DPBOSSIT.lmp\", \"start\": 11574901, \"end\": 11575035}, {\"filename\": \"/edge_defs/sounds/DPBRSDTH.lmp\", \"start\": 11575035, \"end\": 11575147}, {\"filename\": \"/edge_defs/sounds/DPBRSSIT.lmp\", \"start\": 11575147, \"end\": 11575255}, {\"filename\": \"/edge_defs/sounds/DPBSPACT.lmp\", \"start\": 11575255, \"end\": 11575311}, {\"filename\": \"/edge_defs/sounds/DPBSPDTH.lmp\", \"start\": 11575311, \"end\": 11575402}, {\"filename\": \"/edge_defs/sounds/DPBSPSIT.lmp\", \"start\": 11575402, \"end\": 11575541}, {\"filename\": \"/edge_defs/sounds/DPBSPWLK.lmp\", \"start\": 11575541, \"end\": 11575586}, {\"filename\": \"/edge_defs/sounds/DPCACDTH.lmp\", \"start\": 11575586, \"end\": 11575675}, {\"filename\": \"/edge_defs/sounds/DPCACSIT.lmp\", \"start\": 11575675, \"end\": 11575787}, {\"filename\": \"/edge_defs/sounds/DPCLAW.lmp\", \"start\": 11575787, \"end\": 11575833}, {\"filename\": \"/edge_defs/sounds/DPCYBDTH.lmp\", \"start\": 11575833, \"end\": 11575970}, {\"filename\": \"/edge_defs/sounds/DPCYBSIT.lmp\", \"start\": 11575970, \"end\": 11576119}, {\"filename\": \"/edge_defs/sounds/DPDBCLS.lmp\", \"start\": 11576119, \"end\": 11576130}, {\"filename\": \"/edge_defs/sounds/DPDBLOAD.lmp\", \"start\": 11576130, \"end\": 11576141}, {\"filename\": \"/edge_defs/sounds/DPDBOPN.lmp\", \"start\": 11576141, \"end\": 11576152}, {\"filename\": \"/edge_defs/sounds/DPDMACT.lmp\", \"start\": 11576152, \"end\": 11576179}, {\"filename\": \"/edge_defs/sounds/DPDMPAIN.lmp\", \"start\": 11576179, \"end\": 11576220}, {\"filename\": \"/edge_defs/sounds/DPDORCLS.lmp\", \"start\": 11576220, \"end\": 11576291}, {\"filename\": \"/edge_defs/sounds/DPDOROPN.lmp\", \"start\": 11576291, \"end\": 11576364}, {\"filename\": \"/edge_defs/sounds/DPDSHTGN.lmp\", \"start\": 11576364, \"end\": 11576407}, {\"filename\": \"/edge_defs/sounds/DPFIRSHT.lmp\", \"start\": 11576407, \"end\": 11576442}, {\"filename\": \"/edge_defs/sounds/DPFIRXPL.lmp\", \"start\": 11576442, \"end\": 11576459}, {\"filename\": \"/edge_defs/sounds/DPFLAME.lmp\", \"start\": 11576459, \"end\": 11576536}, {\"filename\": \"/edge_defs/sounds/DPFLAMST.lmp\", \"start\": 11576536, \"end\": 11576550}, {\"filename\": \"/edge_defs/sounds/DPGETPOW.lmp\", \"start\": 11576550, \"end\": 11576687}, {\"filename\": \"/edge_defs/sounds/DPHOOF.lmp\", \"start\": 11576687, \"end\": 11576767}, {\"filename\": \"/edge_defs/sounds/DPITEMUP.lmp\", \"start\": 11576767, \"end\": 11576854}, {\"filename\": \"/edge_defs/sounds/DPITMBK.lmp\", \"start\": 11576854, \"end\": 11576939}, {\"filename\": \"/edge_defs/sounds/DPKEENDT.lmp\", \"start\": 11576939, \"end\": 11577045}, {\"filename\": \"/edge_defs/sounds/DPKEENPN.lmp\", \"start\": 11577045, \"end\": 11577101}, {\"filename\": \"/edge_defs/sounds/DPKNTDTH.lmp\", \"start\": 11577101, \"end\": 11577224}, {\"filename\": \"/edge_defs/sounds/DPKNTSIT.lmp\", \"start\": 11577224, \"end\": 11577290}, {\"filename\": \"/edge_defs/sounds/DPMANATK.lmp\", \"start\": 11577290, \"end\": 11577356}, {\"filename\": \"/edge_defs/sounds/DPMANDTH.lmp\", \"start\": 11577356, \"end\": 11577434}, {\"filename\": \"/edge_defs/sounds/DPMANSIT.lmp\", \"start\": 11577434, \"end\": 11577531}, {\"filename\": \"/edge_defs/sounds/DPMETAL.lmp\", \"start\": 11577531, \"end\": 11577550}, {\"filename\": \"/edge_defs/sounds/DPMNPAIN.lmp\", \"start\": 11577550, \"end\": 11577610}, {\"filename\": \"/edge_defs/sounds/DPNOWAY.lmp\", \"start\": 11577610, \"end\": 11577651}, {\"filename\": \"/edge_defs/sounds/DPOOF.lmp\", \"start\": 11577651, \"end\": 11577670}, {\"filename\": \"/edge_defs/sounds/DPPDIEHI.lmp\", \"start\": 11577670, \"end\": 11577748}, {\"filename\": \"/edge_defs/sounds/DPPEDTH.lmp\", \"start\": 11577748, \"end\": 11577857}, {\"filename\": \"/edge_defs/sounds/DPPEPAIN.lmp\", \"start\": 11577857, \"end\": 11577907}, {\"filename\": \"/edge_defs/sounds/DPPESIT.lmp\", \"start\": 11577907, \"end\": 11578024}, {\"filename\": \"/edge_defs/sounds/DPPISTOL.lmp\", \"start\": 11578024, \"end\": 11578042}, {\"filename\": \"/edge_defs/sounds/DPPLASMA.lmp\", \"start\": 11578042, \"end\": 11578084}, {\"filename\": \"/edge_defs/sounds/DPPLDETH.lmp\", \"start\": 11578084, \"end\": 11578233}, {\"filename\": \"/edge_defs/sounds/DPPLPAIN.lmp\", \"start\": 11578233, \"end\": 11578263}, {\"filename\": \"/edge_defs/sounds/DPPODTH1.lmp\", \"start\": 11578263, \"end\": 11578352}, {\"filename\": \"/edge_defs/sounds/DPPODTH2.lmp\", \"start\": 11578352, \"end\": 11578441}, {\"filename\": \"/edge_defs/sounds/DPPODTH3.lmp\", \"start\": 11578441, \"end\": 11578530}, {\"filename\": \"/edge_defs/sounds/DPPOPAIN.lmp\", \"start\": 11578530, \"end\": 11578568}, {\"filename\": \"/edge_defs/sounds/DPPOSACT.lmp\", \"start\": 11578568, \"end\": 11578598}, {\"filename\": \"/edge_defs/sounds/DPPOSIT1.lmp\", \"start\": 11578598, \"end\": 11578709}, {\"filename\": \"/edge_defs/sounds/DPPOSIT2.lmp\", \"start\": 11578709, \"end\": 11578820}, {\"filename\": \"/edge_defs/sounds/DPPOSIT3.lmp\", \"start\": 11578820, \"end\": 11578931}, {\"filename\": \"/edge_defs/sounds/DPPSTART.lmp\", \"start\": 11578931, \"end\": 11578972}, {\"filename\": \"/edge_defs/sounds/DPPSTOP.lmp\", \"start\": 11578972, \"end\": 11578989}, {\"filename\": \"/edge_defs/sounds/DPPUNCH.lmp\", \"start\": 11578989, \"end\": 11579026}, {\"filename\": \"/edge_defs/sounds/DPRADIO.lmp\", \"start\": 11579026, \"end\": 11579078}, {\"filename\": \"/edge_defs/sounds/DPRLAUNC.lmp\", \"start\": 11579078, \"end\": 11579141}, {\"filename\": \"/edge_defs/sounds/DPRXPLOD.lmp\", \"start\": 11579141, \"end\": 11579313}, {\"filename\": \"/edge_defs/sounds/DPSAWFUL.lmp\", \"start\": 11579313, \"end\": 11579341}, {\"filename\": \"/edge_defs/sounds/DPSAWHIT.lmp\", \"start\": 11579341, \"end\": 11579369}, {\"filename\": \"/edge_defs/sounds/DPSAWIDL.lmp\", \"start\": 11579369, \"end\": 11579374}, {\"filename\": \"/edge_defs/sounds/DPSAWUP.lmp\", \"start\": 11579374, \"end\": 11579462}, {\"filename\": \"/edge_defs/sounds/DPSGCOCK.lmp\", \"start\": 11579462, \"end\": 11579525}, {\"filename\": \"/edge_defs/sounds/DPSGTATK.lmp\", \"start\": 11579525, \"end\": 11579599}, {\"filename\": \"/edge_defs/sounds/DPSGTDTH.lmp\", \"start\": 11579599, \"end\": 11579688}, {\"filename\": \"/edge_defs/sounds/DPSGTSIT.lmp\", \"start\": 11579688, \"end\": 11579799}, {\"filename\": \"/edge_defs/sounds/DPSHOTGN.lmp\", \"start\": 11579799, \"end\": 11579841}, {\"filename\": \"/edge_defs/sounds/DPSKEACT.lmp\", \"start\": 11579841, \"end\": 11579881}, {\"filename\": \"/edge_defs/sounds/DPSKEATK.lmp\", \"start\": 11579881, \"end\": 11579940}, {\"filename\": \"/edge_defs/sounds/DPSKEDTH.lmp\", \"start\": 11579940, \"end\": 11580020}, {\"filename\": \"/edge_defs/sounds/DPSKEPCH.lmp\", \"start\": 11580020, \"end\": 11580057}, {\"filename\": \"/edge_defs/sounds/DPSKESIT.lmp\", \"start\": 11580057, \"end\": 11580163}, {\"filename\": \"/edge_defs/sounds/DPSKESWG.lmp\", \"start\": 11580163, \"end\": 11580203}, {\"filename\": \"/edge_defs/sounds/DPSKLATK.lmp\", \"start\": 11580203, \"end\": 11580283}, {\"filename\": \"/edge_defs/sounds/DPSKLDTH.lmp\", \"start\": 11580283, \"end\": 11580300}, {\"filename\": \"/edge_defs/sounds/DPSLOP.lmp\", \"start\": 11580300, \"end\": 11580409}, {\"filename\": \"/edge_defs/sounds/DPSPIDTH.lmp\", \"start\": 11580409, \"end\": 11580522}, {\"filename\": \"/edge_defs/sounds/DPSPISIT.lmp\", \"start\": 11580522, \"end\": 11580670}, {\"filename\": \"/edge_defs/sounds/DPSSDTH.lmp\", \"start\": 11580670, \"end\": 11580759}, {\"filename\": \"/edge_defs/sounds/DPSSSIT.lmp\", \"start\": 11580759, \"end\": 11580870}, {\"filename\": \"/edge_defs/sounds/DPSTNMOV.lmp\", \"start\": 11580870, \"end\": 11580878}, {\"filename\": \"/edge_defs/sounds/DPSWTCHN.lmp\", \"start\": 11580878, \"end\": 11580906}, {\"filename\": \"/edge_defs/sounds/DPSWTCHX.lmp\", \"start\": 11580906, \"end\": 11580935}, {\"filename\": \"/edge_defs/sounds/DPTELEPT.lmp\", \"start\": 11580935, \"end\": 11581037}, {\"filename\": \"/edge_defs/sounds/DPTINK.lmp\", \"start\": 11581037, \"end\": 11581089}, {\"filename\": \"/edge_defs/sounds/DPVILACT.lmp\", \"start\": 11581089, \"end\": 11581144}, {\"filename\": \"/edge_defs/sounds/DPVILATK.lmp\", \"start\": 11581144, \"end\": 11581207}, {\"filename\": \"/edge_defs/sounds/DPVILDTH.lmp\", \"start\": 11581207, \"end\": 11581475}, {\"filename\": \"/edge_defs/sounds/DPVILSIT.lmp\", \"start\": 11581475, \"end\": 11581551}, {\"filename\": \"/edge_defs/sounds/DPVIPAIN.lmp\", \"start\": 11581551, \"end\": 11581662}, {\"filename\": \"/edge_defs/sounds/DPWPNUP.lmp\", \"start\": 11581662, \"end\": 11581706}, {\"filename\": \"/edge_defs/sounds/DSACIDFT.ogg\", \"start\": 11581706, \"end\": 11589256, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSCRUSH.lmp\", \"start\": 11589256, \"end\": 11596274}, {\"filename\": \"/edge_defs/sounds/DSDGACT.ogg\", \"start\": 11596274, \"end\": 11603935, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGATK.ogg\", \"start\": 11603935, \"end\": 11610741, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGDTH.ogg\", \"start\": 11610741, \"end\": 11621557, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGPAIN.ogg\", \"start\": 11621557, \"end\": 11627549, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGSIT.ogg\", \"start\": 11627549, \"end\": 11633712, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT1.wav\", \"start\": 11633712, \"end\": 11649056, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT2.wav\", \"start\": 11649056, \"end\": 11664528, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT3.wav\", \"start\": 11664528, \"end\": 11676768, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT4.wav\", \"start\": 11676768, \"end\": 11692134, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSGLSBRK.wav\", \"start\": 11692134, \"end\": 11724732, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSJPDOWN.lmp\", \"start\": 11724732, \"end\": 11741320}, {\"filename\": \"/edge_defs/sounds/DSJPFLOW.lmp\", \"start\": 11741320, \"end\": 11745242}, {\"filename\": \"/edge_defs/sounds/DSJPIDLE.lmp\", \"start\": 11745242, \"end\": 11748209}, {\"filename\": \"/edge_defs/sounds/DSJPMOVE.lmp\", \"start\": 11748209, \"end\": 11749626}, {\"filename\": \"/edge_defs/sounds/DSJPRISE.lmp\", \"start\": 11749626, \"end\": 11757446}, {\"filename\": \"/edge_defs/sounds/DSMUCKFT.ogg\", \"start\": 11757446, \"end\": 11763520, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSSECRET.ogg\", \"start\": 11763520, \"end\": 11776361, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWATRFT.ogg\", \"start\": 11776361, \"end\": 11784022, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWTDIVE.wav\", \"start\": 11784022, \"end\": 11806498, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/HEARTBT1.ogg\", \"start\": 11806498, \"end\": 11826853, \"audio\": 1}, {\"filename\": \"/edge_defs/sprites/BSPHA0.png\", \"start\": 11826853, \"end\": 11828069}, {\"filename\": \"/edge_defs/sprites/BSPHB0.png\", \"start\": 11828069, \"end\": 11829290}, {\"filename\": \"/edge_defs/sprites/BSPHC0.png\", \"start\": 11829290, \"end\": 11830500}, {\"filename\": \"/edge_defs/sprites/BSPHD0.png\", \"start\": 11830500, \"end\": 11831701}, {\"filename\": \"/edge_defs/sprites/BSPHE0.png\", \"start\": 11831701, \"end\": 11832982}, {\"filename\": \"/edge_defs/sprites/BSPHF0.png\", \"start\": 11832982, \"end\": 11834325}, {\"filename\": \"/edge_defs/sprites/BSPHG0.png\", \"start\": 11834325, \"end\": 11835729}, {\"filename\": \"/edge_defs/sprites/BSPHH0.png\", \"start\": 11835729, \"end\": 11837074}, {\"filename\": \"/edge_defs/sprites/BSPHI0.png\", \"start\": 11837074, \"end\": 11838381}, {\"filename\": \"/edge_defs/sprites/BSPHJ0.png\", \"start\": 11838381, \"end\": 11839648}, {\"filename\": \"/edge_defs/sprites/BSPHK0.png\", \"start\": 11839648, \"end\": 11840885}, {\"filename\": \"/edge_defs/sprites/GLS1A0.lmp\", \"start\": 11840885, \"end\": 11840979}, {\"filename\": \"/edge_defs/sprites/GLS2A0.lmp\", \"start\": 11840979, \"end\": 11841193}, {\"filename\": \"/edge_defs/sprites/GLS3A0.lmp\", \"start\": 11841193, \"end\": 11841497}, {\"filename\": \"/edge_defs/sprites/GLS4A0.lmp\", \"start\": 11841497, \"end\": 11841865}, {\"filename\": \"/edge_defs/sprites/GLS5A0.lmp\", \"start\": 11841865, \"end\": 11842260}, {\"filename\": \"/edge_defs/sprites/GLS6A0.lmp\", \"start\": 11842260, \"end\": 11842696}, {\"filename\": \"/edge_defs/sprites/GLS7A0.lmp\", \"start\": 11842696, \"end\": 11843166}, {\"filename\": \"/edge_defs/sprites/GLS8A0.lmp\", \"start\": 11843166, \"end\": 11843598}, {\"filename\": \"/edge_defs/sprites/GLS9A0.lmp\", \"start\": 11843598, \"end\": 11843961}, {\"filename\": \"/edge_defs/sprites/JPCKA0.lmp\", \"start\": 11843961, \"end\": 11844777}, {\"filename\": \"/edge_defs/sprites/JPCKB0.lmp\", \"start\": 11844777, \"end\": 11845595}, {\"filename\": \"/edge_defs/sprites/JPCKC0.lmp\", \"start\": 11845595, \"end\": 11846413}, {\"filename\": \"/edge_defs/sprites/LVASA0.png\", \"start\": 11846413, \"end\": 11847711}, {\"filename\": \"/edge_defs/sprites/LVASB0.png\", \"start\": 11847711, \"end\": 11849094}, {\"filename\": \"/edge_defs/sprites/LVASC0.png\", \"start\": 11849094, \"end\": 11850448}, {\"filename\": \"/edge_defs/sprites/LVASD0.png\", \"start\": 11850448, \"end\": 11851748}, {\"filename\": \"/edge_defs/sprites/LVASE0.png\", \"start\": 11851748, \"end\": 11853017}, {\"filename\": \"/edge_defs/sprites/LVASF0.png\", \"start\": 11853017, \"end\": 11854240}, {\"filename\": \"/edge_defs/sprites/MUDSA0.png\", \"start\": 11854240, \"end\": 11855450}, {\"filename\": \"/edge_defs/sprites/MUDSB0.png\", \"start\": 11855450, \"end\": 11856662}, {\"filename\": \"/edge_defs/sprites/MUDSC0.png\", \"start\": 11856662, \"end\": 11857853}, {\"filename\": \"/edge_defs/sprites/MUDSD0.png\", \"start\": 11857853, \"end\": 11859038}, {\"filename\": \"/edge_defs/sprites/MUDSE0.png\", \"start\": 11859038, \"end\": 11860289}, {\"filename\": \"/edge_defs/sprites/MUDSF0.png\", \"start\": 11860289, \"end\": 11861530}, {\"filename\": \"/edge_defs/sprites/MUDSG0.png\", \"start\": 11861530, \"end\": 11862779}, {\"filename\": \"/edge_defs/sprites/MUDSH0.png\", \"start\": 11862779, \"end\": 11864001}, {\"filename\": \"/edge_defs/sprites/NVSCA0.lmp\", \"start\": 11864001, \"end\": 11864605}, {\"filename\": \"/edge_defs/sprites/NVSCB0.lmp\", \"start\": 11864605, \"end\": 11865209}, {\"filename\": \"/edge_defs/sprites/PLAYX1.lmp\", \"start\": 11865209, \"end\": 11866132}, {\"filename\": \"/edge_defs/sprites/PLAYX2X8.lmp\", \"start\": 11866132, \"end\": 11867348}, {\"filename\": \"/edge_defs/sprites/PLAYX3X7.lmp\", \"start\": 11867348, \"end\": 11868743}, {\"filename\": \"/edge_defs/sprites/PLAYX4X6.lmp\", \"start\": 11868743, \"end\": 11869872}, {\"filename\": \"/edge_defs/sprites/PLAYX5.lmp\", \"start\": 11869872, \"end\": 11870674}, {\"filename\": \"/edge_defs/sprites/PLAYY1.lmp\", \"start\": 11870674, \"end\": 11871622}, {\"filename\": \"/edge_defs/sprites/PLAYY2Y8.lmp\", \"start\": 11871622, \"end\": 11872850}, {\"filename\": \"/edge_defs/sprites/PLAYY3Y7.lmp\", \"start\": 11872850, \"end\": 11874236}, {\"filename\": \"/edge_defs/sprites/PLAYY4Y6.lmp\", \"start\": 11874236, \"end\": 11875374}, {\"filename\": \"/edge_defs/sprites/PLAYY5.lmp\", \"start\": 11875374, \"end\": 11876171}, {\"filename\": \"/edge_defs/sprites/PRT1A0.png\", \"start\": 11876171, \"end\": 11877043}, {\"filename\": \"/edge_defs/sprites/PRT2A0.png\", \"start\": 11877043, \"end\": 11877915}, {\"filename\": \"/edge_defs/sprites/PRT3A0.png\", \"start\": 11877915, \"end\": 11878044}, {\"filename\": \"/edge_defs/sprites/SLDGA0.png\", \"start\": 11878044, \"end\": 11879260}, {\"filename\": \"/edge_defs/sprites/SLDGB0.png\", \"start\": 11879260, \"end\": 11880478}, {\"filename\": \"/edge_defs/sprites/SLDGC0.png\", \"start\": 11880478, \"end\": 11881674}, {\"filename\": \"/edge_defs/sprites/SLDGD0.png\", \"start\": 11881674, \"end\": 11882861}, {\"filename\": \"/edge_defs/sprites/SLDGE0.png\", \"start\": 11882861, \"end\": 11884112}, {\"filename\": \"/edge_defs/sprites/SLDGF0.png\", \"start\": 11884112, \"end\": 11885353}, {\"filename\": \"/edge_defs/sprites/SLDGG0.png\", \"start\": 11885353, \"end\": 11886602}, {\"filename\": \"/edge_defs/sprites/SLDGH0.png\", \"start\": 11886602, \"end\": 11887824}, {\"filename\": \"/edge_defs/sprites/SLIMA0.png\", \"start\": 11887824, \"end\": 11889025}, {\"filename\": \"/edge_defs/sprites/SLIMB0.png\", \"start\": 11889025, \"end\": 11890230}, {\"filename\": \"/edge_defs/sprites/SLIMC0.png\", \"start\": 11890230, \"end\": 11891417}, {\"filename\": \"/edge_defs/sprites/SLIMD0.png\", \"start\": 11891417, \"end\": 11892595}, {\"filename\": \"/edge_defs/sprites/SLIME0.png\", \"start\": 11892595, \"end\": 11893840}, {\"filename\": \"/edge_defs/sprites/SLIMF0.png\", \"start\": 11893840, \"end\": 11895076}, {\"filename\": \"/edge_defs/sprites/SLIMG0.png\", \"start\": 11895076, \"end\": 11896321}, {\"filename\": \"/edge_defs/sprites/SLIMH0.png\", \"start\": 11896321, \"end\": 11897537}, {\"filename\": \"/edge_defs/sprites/SPSHA0.png\", \"start\": 11897537, \"end\": 11898754}, {\"filename\": \"/edge_defs/sprites/SPSHB0.png\", \"start\": 11898754, \"end\": 11899974}, {\"filename\": \"/edge_defs/sprites/SPSHC0.png\", \"start\": 11899974, \"end\": 11901185}, {\"filename\": \"/edge_defs/sprites/SPSHD0.png\", \"start\": 11901185, \"end\": 11902386}, {\"filename\": \"/edge_defs/sprites/SPSHE0.png\", \"start\": 11902386, \"end\": 11903666}, {\"filename\": \"/edge_defs/sprites/SPSHF0.png\", \"start\": 11903666, \"end\": 11905017}, {\"filename\": \"/edge_defs/sprites/SPSHG0.png\", \"start\": 11905017, \"end\": 11906424}, {\"filename\": \"/edge_defs/sprites/SPSHH0.png\", \"start\": 11906424, \"end\": 11907776}, {\"filename\": \"/edge_defs/sprites/SPSHI0.png\", \"start\": 11907776, \"end\": 11909087}, {\"filename\": \"/edge_defs/sprites/SPSHJ0.png\", \"start\": 11909087, \"end\": 11910355}, {\"filename\": \"/edge_defs/sprites/SPSHK0.png\", \"start\": 11910355, \"end\": 11911592}, {\"filename\": \"/edge_defs/sprites/TSTPA0.png\", \"start\": 11911592, \"end\": 11912717}, {\"filename\": \"/edge_defs/sprites/TSTPB0.lmp\", \"start\": 11912717, \"end\": 11913059}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA1.png\", \"start\": 11913059, \"end\": 11914339}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA2.png\", \"start\": 11914339, \"end\": 11915892}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA3.png\", \"start\": 11915892, \"end\": 11917523}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA4.png\", \"start\": 11917523, \"end\": 11919056}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA5.png\", \"start\": 11919056, \"end\": 11920242}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA6.png\", \"start\": 11920242, \"end\": 11921758}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA7.png\", \"start\": 11921758, \"end\": 11923351}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA8.png\", \"start\": 11923351, \"end\": 11924869}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB1.png\", \"start\": 11924869, \"end\": 11926099}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB2.png\", \"start\": 11926099, \"end\": 11927619}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB3.png\", \"start\": 11927619, \"end\": 11929226}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB4.png\", \"start\": 11929226, \"end\": 11930759}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB5.png\", \"start\": 11930759, \"end\": 11931969}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB6.png\", \"start\": 11931969, \"end\": 11933467}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB7.png\", \"start\": 11933467, \"end\": 11935059}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB8.png\", \"start\": 11935059, \"end\": 11936573}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC1.png\", \"start\": 11936573, \"end\": 11937870}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC2.png\", \"start\": 11937870, \"end\": 11939376}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC3.png\", \"start\": 11939376, \"end\": 11940947}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC4.png\", \"start\": 11940947, \"end\": 11942478}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC5.png\", \"start\": 11942478, \"end\": 11943815}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC6.png\", \"start\": 11943815, \"end\": 11945335}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC7.png\", \"start\": 11945335, \"end\": 11946871}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC8.png\", \"start\": 11946871, \"end\": 11948360}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD1.png\", \"start\": 11948360, \"end\": 11949671}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD2.png\", \"start\": 11949671, \"end\": 11951189}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD3.png\", \"start\": 11951189, \"end\": 11952777}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD4.png\", \"start\": 11952777, \"end\": 11954302}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD5.png\", \"start\": 11954302, \"end\": 11955628}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD6.png\", \"start\": 11955628, \"end\": 11957170}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD7.png\", \"start\": 11957170, \"end\": 11958743}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD8.png\", \"start\": 11958743, \"end\": 11960246}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE1.png\", \"start\": 11960246, \"end\": 11961608}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE2.png\", \"start\": 11961608, \"end\": 11963125}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE3.png\", \"start\": 11963125, \"end\": 11964673}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE4.png\", \"start\": 11964673, \"end\": 11966271}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE5.png\", \"start\": 11966271, \"end\": 11967709}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE6.png\", \"start\": 11967709, \"end\": 11969259}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE7.png\", \"start\": 11969259, \"end\": 11970813}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE8.png\", \"start\": 11970813, \"end\": 11972372}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF1.png\", \"start\": 11972372, \"end\": 11973769}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF2.png\", \"start\": 11973769, \"end\": 11975340}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF3.png\", \"start\": 11975340, \"end\": 11976942}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF4.png\", \"start\": 11976942, \"end\": 11978508}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF5.png\", \"start\": 11978508, \"end\": 11979911}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF6.png\", \"start\": 11979911, \"end\": 11981428}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF7.png\", \"start\": 11981428, \"end\": 11983024}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF8.png\", \"start\": 11983024, \"end\": 11984632}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG1.png\", \"start\": 11984632, \"end\": 11986021}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG2.png\", \"start\": 11986021, \"end\": 11987609}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG3.png\", \"start\": 11987609, \"end\": 11989253}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG4.png\", \"start\": 11989253, \"end\": 11990773}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG5.png\", \"start\": 11990773, \"end\": 11992123}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG6.png\", \"start\": 11992123, \"end\": 11993644}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG7.png\", \"start\": 11993644, \"end\": 11995266}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG8.png\", \"start\": 11995266, \"end\": 11996836}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH1.png\", \"start\": 11996836, \"end\": 11998146}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH2.png\", \"start\": 11998146, \"end\": 11999677}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH3.png\", \"start\": 11999677, \"end\": 12001269}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH4.png\", \"start\": 12001269, \"end\": 12002752}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH5.png\", \"start\": 12002752, \"end\": 12004046}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH6.png\", \"start\": 12004046, \"end\": 12005513}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH7.png\", \"start\": 12005513, \"end\": 12007091}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH8.png\", \"start\": 12007091, \"end\": 12008660}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDI0.png\", \"start\": 12008660, \"end\": 12010350}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDJ0.png\", \"start\": 12010350, \"end\": 12012132}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDK0.png\", \"start\": 12012132, \"end\": 12013878}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDL0.png\", \"start\": 12013878, \"end\": 12015598}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDM0.png\", \"start\": 12015598, \"end\": 12017325}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDN0.png\", \"start\": 12017325, \"end\": 12019064}, {\"filename\": \"/edge_defs/textures/FUZZMAP8.png\", \"start\": 12019064, \"end\": 12033864}, {\"filename\": \"/edge_defs/textures/PORTAL7A.jpg\", \"start\": 12033864, \"end\": 12055982}, {\"filename\": \"/edge_defs/textures/PORTAL7B.jpg\", \"start\": 12055982, \"end\": 12074335}, {\"filename\": \"/edge_defs/textures/PORTAL7C.jpg\", \"start\": 12074335, \"end\": 12089826}, {\"filename\": \"/edge_defs/textures/PORTAL7D.jpg\", \"start\": 12089826, \"end\": 12105120}, {\"filename\": \"/edge_defs/textures/PORTAL7E.jpg\", \"start\": 12105120, \"end\": 12119987}, {\"filename\": \"/edge_defs/textures/PORTAL7F.jpg\", \"start\": 12119987, \"end\": 12136988}, {\"filename\": \"/edge_defs/textures/PORTAL7G.jpg\", \"start\": 12136988, \"end\": 12157696}, {\"filename\": \"/edge_defs/ttf/ECFONT01.ttf\", \"start\": 12157696, \"end\": 12222036}, {\"filename\": \"/edge_defs/version.txt\", \"start\": 12222036, \"end\": 12222040}, {\"filename\": \"/freedm.wad\", \"start\": 12222040, \"end\": 34046488}, {\"filename\": \"/freedoom2.wad\", \"start\": 34046488, \"end\": 62590620}, {\"filename\": \"/soundfont/16-Bit Game Station.sf2\", \"start\": 62590620, \"end\": 66274158}, {\"filename\": \"/soundfont/ProtoSquare!.sf2\", \"start\": 66274158, \"end\": 66638396}, {\"filename\": \"/soundfont/adplug.op2\", \"start\": 66638396, \"end\": 66650304}, {\"filename\": \"/soundfont/bonkers_for_bits.sf2\", \"start\": 66650304, \"end\": 66678308}, {\"filename\": \"/soundfont/default.sf2\", \"start\": 66678308, \"end\": 70824748}, {\"filename\": \"/soundfont/dmxopl.op2\", \"start\": 70824748, \"end\": 70836656}, {\"filename\": \"/soundfont/dmxopl3.wopl\", \"start\": 70836656, \"end\": 71048725}, {\"filename\": \"/soundfont/wadsmoosh.op2\", \"start\": 71048725, \"end\": 71060633}], \"remote_package_size\": 52779517, \"package_uuid\": \"sha256-e81112b57fce930b7041b097ed63bdc96b244788668b6c980689cc82a60bb53d\"});\r\n\r\n  })();\r\n\r\n\r\n// Sometimes an existing Module object exists with properties\r\n// meant to overwrite the default module functionality. Here\r\n// we collect those properties and reapply _after_ we configure\r\n// the current environment's defaults to avoid having to be so\r\n// defensive during initialization.\r\nvar moduleOverrides = Object.assign({}, Module);\r\n\r\nvar arguments_ = [];\r\nvar thisProgram = './this.program';\r\nvar quit_ = (status, toThrow) => {\r\n  throw toThrow;\r\n};\r\n\r\n// Determine the runtime environment we are in. You can customize this by\r\n// setting the ENVIRONMENT setting at compile time (see settings.js).\r\n\r\nvar ENVIRONMENT_IS_WEB = true;\r\nvar ENVIRONMENT_IS_WORKER = false;\r\nvar ENVIRONMENT_IS_NODE = false;\r\nvar ENVIRONMENT_IS_SHELL = false;\r\n\r\n// `/` should be present at the end if `scriptDirectory` is not empty\r\nvar scriptDirectory = '';\r\nfunction locateFile(path) {\r\n  if (Module['locateFile']) {\r\n    return Module['locateFile'](path, scriptDirectory);\r\n  }\r\n  return scriptDirectory + path;\r\n}\r\n\r\n// Hooks that are implemented differently in different runtime environments.\r\nvar read_,\r\n    readAsync,\r\n    readBinary,\r\n    setWindowTitle;\r\n\r\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\r\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\r\n// ENVIRONMENT_IS_NODE.\r\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\r\n    scriptDirectory = self.location.href;\r\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\r\n    scriptDirectory = document.currentScript.src;\r\n  }\r\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\r\n  // is gone, so we saved it, and we use it here instead of any other info.\r\n  if (_scriptDir) {\r\n    scriptDirectory = _scriptDir;\r\n  }\r\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\r\n  // otherwise, slice off the final part of the url to find the script directory.\r\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\r\n  // and scriptDirectory will correctly be replaced with an empty string.\r\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\r\n  // they are removed because they could contain a slash.\r\n  if (scriptDirectory.indexOf('blob:') !== 0) {\r\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\r\n  } else {\r\n    scriptDirectory = '';\r\n  }\r\n\r\n  // Differentiate the Web Worker from the Node Worker case, as reading must\r\n  // be done differently.\r\n  {\r\n// include: web_or_worker_shell_read.js\r\nread_ = (url) => {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, false);\r\n      xhr.send(null);\r\n      return xhr.responseText;\r\n  }\r\n\r\n  if (ENVIRONMENT_IS_WORKER) {\r\n    readBinary = (url) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, false);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.send(null);\r\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\r\n    };\r\n  }\r\n\r\n  readAsync = (url, onload, onerror) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url, true);\r\n    xhr.responseType = 'arraybuffer';\r\n    xhr.onload = () => {\r\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n        onload(xhr.response);\r\n        return;\r\n      }\r\n      onerror();\r\n    };\r\n    xhr.onerror = onerror;\r\n    xhr.send(null);\r\n  }\r\n\r\n// end include: web_or_worker_shell_read.js\r\n  }\r\n\r\n  setWindowTitle = (title) => document.title = title;\r\n} else\r\n{\r\n}\r\n\r\nvar out = Module['print'] || console.log.bind(console);\r\nvar err = Module['printErr'] || console.warn.bind(console);\r\n\r\n// Merge back in the overrides\r\nObject.assign(Module, moduleOverrides);\r\n// Free the object hierarchy contained in the overrides, this lets the GC\r\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\r\nmoduleOverrides = null;\r\n\r\n// Emit code to handle expected values on the Module object. This applies Module.x\r\n// to the proper local x. This has two benefits: first, we only emit it if it is\r\n// expected to arrive, and second, by using a local everywhere else that can be\r\n// minified.\r\n\r\nif (Module['arguments']) arguments_ = Module['arguments'];\r\n\r\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\r\n\r\nif (Module['quit']) quit_ = Module['quit'];\r\n\r\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\r\n\r\n\r\n// end include: shell.js\r\n// include: preamble.js\r\n// === Preamble library stuff ===\r\n\r\n// Documentation for the public APIs defined in this file must be updated in:\r\n//    site/source/docs/api_reference/preamble.js.rst\r\n// A prebuilt local version of the documentation is available at:\r\n//    site/build/text/docs/api_reference/preamble.js.txt\r\n// You can also build docs locally as HTML or other formats in site/\r\n// An online HTML version (which may be of a different version of Emscripten)\r\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\r\n\r\nvar wasmBinary;\r\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\r\nvar noExitRuntime = Module['noExitRuntime'] || true;\r\n\r\nif (typeof WebAssembly != 'object') {\r\n  abort('no native wasm support detected');\r\n}\r\n\r\n// Wasm globals\r\n\r\nvar wasmMemory;\r\n\r\n//========================================\r\n// Runtime essentials\r\n//========================================\r\n\r\n// whether we are quitting the application. no code should run after this.\r\n// set in exit() and abort()\r\nvar ABORT = false;\r\n\r\n// set by exit() and abort().  Passed to 'onExit' handler.\r\n// NOTE: This is also used as the process return code code in shell environments\r\n// but only when noExitRuntime is false.\r\nvar EXITSTATUS;\r\n\r\n/** @type {function(*, string=)} */\r\nfunction assert(condition, text) {\r\n  if (!condition) {\r\n    // This build was created without ASSERTIONS defined.  `assert()` should not\r\n    // ever be called in this configuration but in case there are callers in\r\n    // the wild leave this simple abort() implemenation here for now.\r\n    abort(text);\r\n  }\r\n}\r\n\r\n// Memory management\r\n\r\nvar HEAP,\r\n/** @type {!Int8Array} */\r\n  HEAP8,\r\n/** @type {!Uint8Array} */\r\n  HEAPU8,\r\n/** @type {!Int16Array} */\r\n  HEAP16,\r\n/** @type {!Uint16Array} */\r\n  HEAPU16,\r\n/** @type {!Int32Array} */\r\n  HEAP32,\r\n/** @type {!Uint32Array} */\r\n  HEAPU32,\r\n/** @type {!Float32Array} */\r\n  HEAPF32,\r\n/** @type {!Float64Array} */\r\n  HEAPF64;\r\n\r\nfunction updateMemoryViews() {\r\n  var b = wasmMemory.buffer;\r\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\r\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\r\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\r\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\r\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\r\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\r\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\r\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\r\n}\r\n\r\n// include: runtime_init_table.js\r\n// In regular non-RELOCATABLE mode the table is exported\r\n// from the wasm module and this will be assigned once\r\n// the exports are available.\r\nvar wasmTable;\r\n\r\n// end include: runtime_init_table.js\r\n// include: runtime_stack_check.js\r\n// end include: runtime_stack_check.js\r\n// include: runtime_assertions.js\r\n// end include: runtime_assertions.js\r\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\r\nvar __ATINIT__    = []; // functions called during startup\r\nvar __ATMAIN__    = []; // functions called when main() is to be run\r\nvar __ATEXIT__    = []; // functions called during shutdown\r\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\r\n\r\nvar runtimeInitialized = false;\r\n\r\nvar runtimeKeepaliveCounter = 0;\r\n\r\nfunction keepRuntimeAlive() {\r\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\r\n}\r\n\r\nfunction preRun() {\r\n  if (Module['preRun']) {\r\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\r\n    while (Module['preRun'].length) {\r\n      addOnPreRun(Module['preRun'].shift());\r\n    }\r\n  }\r\n  callRuntimeCallbacks(__ATPRERUN__);\r\n}\r\n\r\nfunction initRuntime() {\r\n  runtimeInitialized = true;\r\n\r\n  \r\nif (!Module[\"noFSInit\"] && !FS.init.initialized)\r\n  FS.init();\r\nFS.ignorePermissions = false;\r\n\r\nTTY.init();\r\n  callRuntimeCallbacks(__ATINIT__);\r\n}\r\n\r\nfunction preMain() {\r\n  \r\n  callRuntimeCallbacks(__ATMAIN__);\r\n}\r\n\r\nfunction postRun() {\r\n\r\n  if (Module['postRun']) {\r\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\r\n    while (Module['postRun'].length) {\r\n      addOnPostRun(Module['postRun'].shift());\r\n    }\r\n  }\r\n\r\n  callRuntimeCallbacks(__ATPOSTRUN__);\r\n}\r\n\r\nfunction addOnPreRun(cb) {\r\n  __ATPRERUN__.unshift(cb);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n  __ATINIT__.unshift(cb);\r\n}\r\n\r\nfunction addOnPreMain(cb) {\r\n  __ATMAIN__.unshift(cb);\r\n}\r\n\r\nfunction addOnExit(cb) {\r\n}\r\n\r\nfunction addOnPostRun(cb) {\r\n  __ATPOSTRUN__.unshift(cb);\r\n}\r\n\r\n// include: runtime_math.js\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\r\n\r\n// end include: runtime_math.js\r\n// A counter of dependencies for calling run(). If we need to\r\n// do asynchronous work before running, increment this and\r\n// decrement it. Incrementing must happen in a place like\r\n// Module.preRun (used by emcc to add file preloading).\r\n// Note that you can add dependencies in preRun, even though\r\n// it happens right before run - run will be postponed until\r\n// the dependencies are met.\r\nvar runDependencies = 0;\r\nvar runDependencyWatcher = null;\r\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\r\n\r\nfunction getUniqueRunDependency(id) {\r\n  return id;\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n  runDependencies++;\r\n\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n  runDependencies--;\r\n\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n\r\n  if (runDependencies == 0) {\r\n    if (runDependencyWatcher !== null) {\r\n      clearInterval(runDependencyWatcher);\r\n      runDependencyWatcher = null;\r\n    }\r\n    if (dependenciesFulfilled) {\r\n      var callback = dependenciesFulfilled;\r\n      dependenciesFulfilled = null;\r\n      callback(); // can add another dependenciesFulfilled\r\n    }\r\n  }\r\n}\r\n\r\n/** @param {string|number=} what */\r\nfunction abort(what) {\r\n  if (Module['onAbort']) {\r\n    Module['onAbort'](what);\r\n  }\r\n\r\n  what = 'Aborted(' + what + ')';\r\n  // TODO(sbc): Should we remove printing and leave it up to whoever\r\n  // catches the exception?\r\n  err(what);\r\n\r\n  ABORT = true;\r\n  EXITSTATUS = 1;\r\n\r\n  what += '. Build with -sASSERTIONS for more info.';\r\n\r\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\r\n  // exception, which means we'd run destructors on it. We need the error to\r\n  // simply make the program stop.\r\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\r\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\r\n  // a trap or not based on a hidden field within the object. So at the moment\r\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\r\n  // allows this in the wasm spec.\r\n\r\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\r\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\r\n  // though it can.\r\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\r\n  /** @suppress {checkTypes} */\r\n  var e = new WebAssembly.RuntimeError(what);\r\n\r\n  readyPromiseReject(e);\r\n  // Throw the error whether or not MODULARIZE is set because abort is used\r\n  // in code paths apart from instantiation where an exception is expected\r\n  // to be thrown when abort is called.\r\n  throw e;\r\n}\r\n\r\n// include: memoryprofiler.js\r\n// end include: memoryprofiler.js\r\n// include: URIUtils.js\r\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\r\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\r\n\r\n// Indicates whether filename is a base64 data URI.\r\nfunction isDataURI(filename) {\r\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\r\n  return filename.startsWith(dataURIPrefix);\r\n}\r\n\r\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\r\nfunction isFileURI(filename) {\r\n  return filename.startsWith('file://');\r\n}\r\n\r\n// end include: URIUtils.js\r\n// include: runtime_exceptions.js\r\n// end include: runtime_exceptions.js\r\nvar wasmBinaryFile;\r\n  wasmBinaryFile = 'edge-classic.wasm';\r\n  if (!isDataURI(wasmBinaryFile)) {\r\n    wasmBinaryFile = locateFile(wasmBinaryFile);\r\n  }\r\n\r\nfunction getBinary(file) {\r\n  try {\r\n    if (file == wasmBinaryFile && wasmBinary) {\r\n      return new Uint8Array(wasmBinary);\r\n    }\r\n    if (readBinary) {\r\n      return readBinary(file);\r\n    }\r\n    throw \"both async and sync fetching of the wasm failed\";\r\n  }\r\n  catch (err) {\r\n    abort(err);\r\n  }\r\n}\r\n\r\nfunction getBinaryPromise(binaryFile) {\r\n  // If we don't have the binary yet, try to load it asynchronously.\r\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\r\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\r\n  // Cordova or Electron apps are typically loaded from a file:// url.\r\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\r\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\r\n    if (typeof fetch == 'function'\r\n    ) {\r\n      return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n        if (!response['ok']) {\r\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\r\n        }\r\n        return response['arrayBuffer']();\r\n      }).catch(() => getBinary(binaryFile));\r\n    }\r\n  }\r\n\r\n  // Otherwise, getBinary should be able to get it synchronously\r\n  return Promise.resolve().then(() => getBinary(binaryFile));\r\n}\r\n\r\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\r\n  return getBinaryPromise(binaryFile).then((binary) => {\r\n    return WebAssembly.instantiate(binary, imports);\r\n  }).then((instance) => {\r\n    return instance;\r\n  }).then(receiver, (reason) => {\r\n    err('failed to asynchronously prepare wasm: ' + reason);\r\n\r\n    abort(reason);\r\n  });\r\n}\r\n\r\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\r\n  if (!binary &&\r\n      typeof WebAssembly.instantiateStreaming == 'function' &&\r\n      !isDataURI(binaryFile) &&\r\n      typeof fetch == 'function') {\r\n    return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n      // Suppress closure warning here since the upstream definition for\r\n      // instantiateStreaming only allows Promise<Repsponse> rather than\r\n      // an actual Response.\r\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\r\n      /** @suppress {checkTypes} */\r\n      var result = WebAssembly.instantiateStreaming(response, imports);\r\n\r\n      return result.then(\r\n        callback,\r\n        function(reason) {\r\n          // We expect the most common failure cause to be a bad MIME type for the binary,\r\n          // in which case falling back to ArrayBuffer instantiation should work.\r\n          err('wasm streaming compile failed: ' + reason);\r\n          err('falling back to ArrayBuffer instantiation');\r\n          return instantiateArrayBuffer(binaryFile, imports, callback);\r\n        });\r\n    });\r\n  } else {\r\n    return instantiateArrayBuffer(binaryFile, imports, callback);\r\n  }\r\n}\r\n\r\n// Create the wasm instance.\r\n// Receives the wasm imports, returns the exports.\r\nfunction createWasm() {\r\n  // prepare imports\r\n  var info = {\r\n    'env': wasmImports,\r\n    'wasi_snapshot_preview1': wasmImports,\r\n  };\r\n  // Load the wasm module and create an instance of using native support in the JS engine.\r\n  // handle a generated wasm instance, receiving its exports and\r\n  // performing other necessary setup\r\n  /** @param {WebAssembly.Module=} module*/\r\n  function receiveInstance(instance, module) {\r\n    var exports = instance.exports;\r\n\r\n    exports = Asyncify.instrumentWasmExports(exports);\r\n\r\n    Module['asm'] = exports;\r\n\r\n    wasmMemory = Module['asm']['memory'];\r\n    updateMemoryViews();\r\n\r\n    wasmTable = Module['asm']['__indirect_function_table'];\r\n\r\n    addOnInit(Module['asm']['__wasm_call_ctors']);\r\n\r\n    removeRunDependency('wasm-instantiate');\r\n\r\n    return exports;\r\n  }\r\n  // wait for the pthread pool (if any)\r\n  addRunDependency('wasm-instantiate');\r\n\r\n  // Prefer streaming instantiation if available.\r\n  function receiveInstantiationResult(result) {\r\n    // 'result' is a ResultObject object which has both the module and instance.\r\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\r\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\r\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\r\n    receiveInstance(result['instance']);\r\n  }\r\n\r\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\r\n  // to manually instantiate the Wasm module themselves. This allows pages to\r\n  // run the instantiation parallel to any other async startup actions they are\r\n  // performing.\r\n  // Also pthreads and wasm workers initialize the wasm instance through this\r\n  // path.\r\n  if (Module['instantiateWasm']) {\r\n\r\n    try {\r\n      return Module['instantiateWasm'](info, receiveInstance);\r\n    } catch(e) {\r\n      err('Module.instantiateWasm callback failed with error: ' + e);\r\n        // If instantiation fails, reject the module ready promise.\r\n        readyPromiseReject(e);\r\n    }\r\n  }\r\n\r\n  // If instantiation fails, reject the module ready promise.\r\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\r\n  return {}; // no exports yet; we'll fill them in later\r\n}\r\n\r\n// Globals used by JS i64 conversions (see makeSetValue)\r\nvar tempDouble;\r\nvar tempI64;\r\n\r\n// include: runtime_debug.js\r\n// end include: runtime_debug.js\r\n// === Body ===\r\n\r\nvar ASM_CONSTS = {\r\n  609364: () => { if (Module.edgePostInit) { Module.edgePostInit(); } },  \r\n 609420: ($0, $1) => { const args = []; for (let i = 0; i < $0; i++) { args.push(UTF8ToString(HEAP32[($1 >> 2) + i])); } console.log(`Edge command line: ${args}`); const homeIndex = args.indexOf(\"-home\"); if (homeIndex === -1 || homeIndex >= args.length || args[homeIndex + 1].startsWith(\"-\")) { throw \"No home command line option specified\" } const homeDir = args[homeIndex + 1]; if (!FS.analyzePath(homeDir).exists) { FS.mkdirTree(homeDir); } FS.mount(IDBFS, {}, homeDir); FS.syncfs(true, function (err) { if (err) { console.error(`Error mounting home dir ${err}`); return; } Module._I_WebMain($0, $1); }); },  \r\n 610010: () => { if (Module.onFullscreen) { Module.onFullscreen(); } },  \r\n 610066: ($0) => { if (Module.edgePreSyncFS) { Module.edgePreSyncFS(); } FS.syncfs($0, function (err) { if (Module.edgePostSyncFS) { Module.edgePostSyncFS(); } }); },  \r\n 610215: () => { if (typeof(AudioContext) !== 'undefined') { return true; } else if (typeof(webkitAudioContext) !== 'undefined') { return true; } return false; },  \r\n 610362: () => { if ((typeof(navigator.mediaDevices) !== 'undefined') && (typeof(navigator.mediaDevices.getUserMedia) !== 'undefined')) { return true; } else if (typeof(navigator.webkitGetUserMedia) !== 'undefined') { return true; } return false; },  \r\n 610596: ($0) => { if(typeof(Module['SDL2']) === 'undefined') { Module['SDL2'] = {}; } var SDL2 = Module['SDL2']; if (!$0) { SDL2.audio = {}; } else { SDL2.capture = {}; } if (!SDL2.audioContext) { if (typeof(AudioContext) !== 'undefined') { SDL2.audioContext = new AudioContext(); } else if (typeof(webkitAudioContext) !== 'undefined') { SDL2.audioContext = new webkitAudioContext(); } if (SDL2.audioContext) { autoResumeAudioContext(SDL2.audioContext); } } return SDL2.audioContext === undefined ? -1 : 0; },  \r\n 611089: () => { var SDL2 = Module['SDL2']; return SDL2.audioContext.sampleRate; },  \r\n 611157: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; var have_microphone = function(stream) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); SDL2.capture.silenceTimer = undefined; } SDL2.capture.mediaStreamNode = SDL2.audioContext.createMediaStreamSource(stream); SDL2.capture.scriptProcessorNode = SDL2.audioContext.createScriptProcessor($1, $0, 1); SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) { if ((SDL2 === undefined) || (SDL2.capture === undefined)) { return; } audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0); SDL2.capture.currentCaptureBuffer = audioProcessingEvent.inputBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode); SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination); SDL2.capture.stream = stream; }; var no_microphone = function(error) { }; SDL2.capture.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { SDL2.capture.currentCaptureBuffer = SDL2.capture.silenceBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.silenceTimer = setTimeout(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); if ((navigator.mediaDevices !== undefined) && (navigator.mediaDevices.getUserMedia !== undefined)) { navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(have_microphone).catch(no_microphone); } else if (navigator.webkitGetUserMedia !== undefined) { navigator.webkitGetUserMedia({ audio: true, video: false }, have_microphone, no_microphone); } },  \r\n 612809: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; SDL2.audio.scriptProcessorNode = SDL2.audioContext['createScriptProcessor']($1, 0, $0); SDL2.audio.scriptProcessorNode['onaudioprocess'] = function (e) { if ((SDL2 === undefined) || (SDL2.audio === undefined)) { return; } SDL2.audio.currentOutputBuffer = e['outputBuffer']; dynCall('vi', $2, [$3]); }; SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']); },  \r\n 613219: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.capture.currentCaptureBuffer.numberOfChannels; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.capture.currentCaptureBuffer.getChannelData(c); if (channelData.length != $1) { throw 'Web Audio capture buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } if (numChannels == 1) { for (var j = 0; j < $1; ++j) { setValue($0 + (j * 4), channelData[j], 'float'); } } else { for (var j = 0; j < $1; ++j) { setValue($0 + (((j * numChannels) + c) * 4), channelData[j], 'float'); } } } },  \r\n 613824: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.audio.currentOutputBuffer['numberOfChannels']; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.audio.currentOutputBuffer['getChannelData'](c); if (channelData.length != $1) { throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } for (var j = 0; j < $1; ++j) { channelData[j] = HEAPF32[$0 + ((j*numChannels + c) << 2) >> 2]; } } },  \r\n 614304: ($0) => { var SDL2 = Module['SDL2']; if ($0) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); } if (SDL2.capture.stream !== undefined) { var tracks = SDL2.capture.stream.getAudioTracks(); for (var i = 0; i < tracks.length; i++) { SDL2.capture.stream.removeTrack(tracks[i]); } SDL2.capture.stream = undefined; } if (SDL2.capture.scriptProcessorNode !== undefined) { SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) {}; SDL2.capture.scriptProcessorNode.disconnect(); SDL2.capture.scriptProcessorNode = undefined; } if (SDL2.capture.mediaStreamNode !== undefined) { SDL2.capture.mediaStreamNode.disconnect(); SDL2.capture.mediaStreamNode = undefined; } if (SDL2.capture.silenceBuffer !== undefined) { SDL2.capture.silenceBuffer = undefined } SDL2.capture = undefined; } else { if (SDL2.audio.scriptProcessorNode != undefined) { SDL2.audio.scriptProcessorNode.disconnect(); SDL2.audio.scriptProcessorNode = undefined; } SDL2.audio = undefined; } if ((SDL2.audioContext !== undefined) && (SDL2.audio === undefined) && (SDL2.capture === undefined)) { SDL2.audioContext.close(); SDL2.audioContext = undefined; } },  \r\n 615476: ($0, $1, $2) => { var w = $0; var h = $1; var pixels = $2; if (!Module['SDL2']) Module['SDL2'] = {}; var SDL2 = Module['SDL2']; if (SDL2.ctxCanvas !== Module['canvas']) { SDL2.ctx = Module['createContext'](Module['canvas'], false, true); SDL2.ctxCanvas = Module['canvas']; } if (SDL2.w !== w || SDL2.h !== h || SDL2.imageCtx !== SDL2.ctx) { SDL2.image = SDL2.ctx.createImageData(w, h); SDL2.w = w; SDL2.h = h; SDL2.imageCtx = SDL2.ctx; } var data = SDL2.image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = 0xff; src++; dst += 4; } } else { if (SDL2.data32Data !== data) { SDL2.data32 = new Int32Array(data.buffer); SDL2.data8 = new Uint8Array(data.buffer); SDL2.data32Data = data; } var data32 = SDL2.data32; num = data32.length; data32.set(HEAP32.subarray(src, src + num)); var data8 = SDL2.data8; var i = 3; var j = i + 4*num; if (num % 8 == 0) { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; } } else { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; } } } SDL2.ctx.putImageData(SDL2.image, 0, 0); },  \r\n 616945: ($0, $1, $2, $3, $4) => { var w = $0; var h = $1; var hot_x = $2; var hot_y = $3; var pixels = $4; var canvas = document.createElement(\"canvas\"); canvas.width = w; canvas.height = h; var ctx = canvas.getContext(\"2d\"); var image = ctx.createImageData(w, h); var data = image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = (val >> 24) & 0xff; src++; dst += 4; } } else { var data32 = new Int32Array(data.buffer); num = data32.length; data32.set(HEAP32.subarray(src, src + num)); } ctx.putImageData(image, 0, 0); var url = hot_x === 0 && hot_y === 0 ? \"url(\" + canvas.toDataURL() + \"), auto\" : \"url(\" + canvas.toDataURL() + \") \" + hot_x + \" \" + hot_y + \", auto\"; var urlBuf = _malloc(url.length + 1); stringToUTF8(url, urlBuf, url.length + 1); return urlBuf; },  \r\n 617934: ($0) => { if (Module['canvas']) { Module['canvas'].style['cursor'] = UTF8ToString($0); } },  \r\n 618017: () => { if (Module['canvas']) { Module['canvas'].style['cursor'] = 'none'; } },  \r\n 618086: () => { return window.innerWidth; },  \r\n 618116: () => { return window.innerHeight; },  \r\n 618147: ($0, $1) => { alert(UTF8ToString($0) + \"\\n\\n\" + UTF8ToString($1)); }\r\n};\r\n\r\n\r\n\r\n// end include: preamble.js\r\n\r\n  /** @constructor */\r\n  function ExitStatus(status) {\r\n      this.name = 'ExitStatus';\r\n      this.message = 'Program terminated with exit(' + status + ')';\r\n      this.status = status;\r\n    }\r\n\r\n  function listenOnce(object, event, func) {\r\n      object.addEventListener(event, func, { 'once': true });\r\n    }\r\n  /** @param {Object=} elements */\r\n  function autoResumeAudioContext(ctx, elements) {\r\n      if (!elements) {\r\n        elements = [document, document.getElementById('canvas')];\r\n      }\r\n      ['keydown', 'mousedown', 'touchstart'].forEach((event) => {\r\n        elements.forEach((element) => {\r\n          if (element) {\r\n            listenOnce(element, event, () => {\r\n              if (ctx.state === 'suspended') ctx.resume();\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n  function callRuntimeCallbacks(callbacks) {\r\n      while (callbacks.length > 0) {\r\n        // Pass the module as the first argument.\r\n        callbacks.shift()(Module);\r\n      }\r\n    }\r\n\r\n  function dynCallLegacy(sig, ptr, args) {\r\n      var f = Module['dynCall_' + sig];\r\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\r\n    }\r\n  \r\n  var wasmTableMirror = [];\r\n  \r\n  function getWasmTableEntry(funcPtr) {\r\n      var func = wasmTableMirror[funcPtr];\r\n      if (!func) {\r\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\r\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\r\n      }\r\n      return func;\r\n    }\r\n  /** @param {Object=} args */\r\n  function dynCall(sig, ptr, args) {\r\n      return dynCallLegacy(sig, ptr, args);\r\n    }\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {string} type\r\n     */\r\n  function getValue(ptr, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': return HEAP8[((ptr)>>0)];\r\n      case 'i8': return HEAP8[((ptr)>>0)];\r\n      case 'i16': return HEAP16[((ptr)>>1)];\r\n      case 'i32': return HEAP32[((ptr)>>2)];\r\n      case 'i64': return HEAP32[((ptr)>>2)];\r\n      case 'float': return HEAPF32[((ptr)>>2)];\r\n      case 'double': return HEAPF64[((ptr)>>3)];\r\n      case '*': return HEAPU32[((ptr)>>2)];\r\n      default: abort('invalid type for getValue: ' + type);\r\n    }\r\n  }\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {number} value\r\n     * @param {string} type\r\n     */\r\n  function setValue(ptr, value, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\r\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\r\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\r\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\r\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((ptr)>>2)] = tempI64[0],HEAP32[(((ptr)+(4))>>2)] = tempI64[1]); break;\r\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\r\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\r\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\r\n      default: abort('invalid type for setValue: ' + type);\r\n    }\r\n  }\r\n\r\n  /** @constructor */\r\n  function ExceptionInfo(excPtr) {\r\n      this.excPtr = excPtr;\r\n      this.ptr = excPtr - 24;\r\n  \r\n      this.set_type = function(type) {\r\n        HEAPU32[(((this.ptr)+(4))>>2)] = type;\r\n      };\r\n  \r\n      this.get_type = function() {\r\n        return HEAPU32[(((this.ptr)+(4))>>2)];\r\n      };\r\n  \r\n      this.set_destructor = function(destructor) {\r\n        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;\r\n      };\r\n  \r\n      this.get_destructor = function() {\r\n        return HEAPU32[(((this.ptr)+(8))>>2)];\r\n      };\r\n  \r\n      this.set_caught = function (caught) {\r\n        caught = caught ? 1 : 0;\r\n        HEAP8[(((this.ptr)+(12))>>0)] = caught;\r\n      };\r\n  \r\n      this.get_caught = function () {\r\n        return HEAP8[(((this.ptr)+(12))>>0)] != 0;\r\n      };\r\n  \r\n      this.set_rethrown = function (rethrown) {\r\n        rethrown = rethrown ? 1 : 0;\r\n        HEAP8[(((this.ptr)+(13))>>0)] = rethrown;\r\n      };\r\n  \r\n      this.get_rethrown = function () {\r\n        return HEAP8[(((this.ptr)+(13))>>0)] != 0;\r\n      };\r\n  \r\n      // Initialize native structure fields. Should be called once after allocated.\r\n      this.init = function(type, destructor) {\r\n        this.set_adjusted_ptr(0);\r\n        this.set_type(type);\r\n        this.set_destructor(destructor);\r\n      }\r\n  \r\n      this.set_adjusted_ptr = function(adjustedPtr) {\r\n        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;\r\n      };\r\n  \r\n      this.get_adjusted_ptr = function() {\r\n        return HEAPU32[(((this.ptr)+(16))>>2)];\r\n      };\r\n  \r\n      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\r\n      // when the pointer is casted to some of the exception object base classes (e.g. when virtual\r\n      // inheritance is used). When a pointer is thrown this method should return the thrown pointer\r\n      // itself.\r\n      this.get_exception_ptr = function() {\r\n        // Work around a fastcomp bug, this code is still included for some reason in a build without\r\n        // exceptions support.\r\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\r\n        if (isPointer) {\r\n          return HEAPU32[((this.excPtr)>>2)];\r\n        }\r\n        var adjusted = this.get_adjusted_ptr();\r\n        if (adjusted !== 0) return adjusted;\r\n        return this.excPtr;\r\n      };\r\n    }\r\n  \r\n  var exceptionLast = 0;\r\n  \r\n  var uncaughtExceptionCount = 0;\r\n  function ___cxa_throw(ptr, type, destructor) {\r\n      var info = new ExceptionInfo(ptr);\r\n      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\r\n      info.init(type, destructor);\r\n      exceptionLast = ptr;\r\n      uncaughtExceptionCount++;\r\n      throw exceptionLast;\r\n    }\r\n\r\n  var PATH = {isAbs:(path) => path.charAt(0) === '/',splitPath:(filename) => {\r\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n        return splitPathRe.exec(filename).slice(1);\r\n      },normalizeArray:(parts, allowAboveRoot) => {\r\n        // if the path tries to go above the root, `up` ends up > 0\r\n        var up = 0;\r\n        for (var i = parts.length - 1; i >= 0; i--) {\r\n          var last = parts[i];\r\n          if (last === '.') {\r\n            parts.splice(i, 1);\r\n          } else if (last === '..') {\r\n            parts.splice(i, 1);\r\n            up++;\r\n          } else if (up) {\r\n            parts.splice(i, 1);\r\n            up--;\r\n          }\r\n        }\r\n        // if the path is allowed to go above the root, restore leading ..s\r\n        if (allowAboveRoot) {\r\n          for (; up; up--) {\r\n            parts.unshift('..');\r\n          }\r\n        }\r\n        return parts;\r\n      },normalize:(path) => {\r\n        var isAbsolute = PATH.isAbs(path),\r\n            trailingSlash = path.substr(-1) === '/';\r\n        // Normalize the path\r\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\r\n        if (!path && !isAbsolute) {\r\n          path = '.';\r\n        }\r\n        if (path && trailingSlash) {\r\n          path += '/';\r\n        }\r\n        return (isAbsolute ? '/' : '') + path;\r\n      },dirname:(path) => {\r\n        var result = PATH.splitPath(path),\r\n            root = result[0],\r\n            dir = result[1];\r\n        if (!root && !dir) {\r\n          // No dirname whatsoever\r\n          return '.';\r\n        }\r\n        if (dir) {\r\n          // It has a dirname, strip trailing slash\r\n          dir = dir.substr(0, dir.length - 1);\r\n        }\r\n        return root + dir;\r\n      },basename:(path) => {\r\n        // EMSCRIPTEN return '/'' for '/', not an empty string\r\n        if (path === '/') return '/';\r\n        path = PATH.normalize(path);\r\n        path = path.replace(/\\/$/, \"\");\r\n        var lastSlash = path.lastIndexOf('/');\r\n        if (lastSlash === -1) return path;\r\n        return path.substr(lastSlash+1);\r\n      },join:function() {\r\n        var paths = Array.prototype.slice.call(arguments);\r\n        return PATH.normalize(paths.join('/'));\r\n      },join2:(l, r) => {\r\n        return PATH.normalize(l + '/' + r);\r\n      }};\r\n  \r\n  function initRandomFill() {\r\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\r\n        // for modern web browsers\r\n        return (view) => crypto.getRandomValues(view);\r\n      } else\r\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\r\n      abort(\"initRandomDevice\");\r\n    }\r\n  function randomFill(view) {\r\n      // Lazily init on the first invocation.\r\n      return (randomFill = initRandomFill())(view);\r\n    }\r\n  \r\n  \r\n  \r\n  var PATH_FS = {resolve:function() {\r\n        var resolvedPath = '',\r\n          resolvedAbsolute = false;\r\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\r\n          // Skip empty and invalid entries\r\n          if (typeof path != 'string') {\r\n            throw new TypeError('Arguments to path.resolve must be strings');\r\n          } else if (!path) {\r\n            return ''; // an invalid portion invalidates the whole thing\r\n          }\r\n          resolvedPath = path + '/' + resolvedPath;\r\n          resolvedAbsolute = PATH.isAbs(path);\r\n        }\r\n        // At this point the path should be resolved to a full absolute path, but\r\n        // handle relative paths to be safe (might happen when process.cwd() fails)\r\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\r\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n      },relative:(from, to) => {\r\n        from = PATH_FS.resolve(from).substr(1);\r\n        to = PATH_FS.resolve(to).substr(1);\r\n        function trim(arr) {\r\n          var start = 0;\r\n          for (; start < arr.length; start++) {\r\n            if (arr[start] !== '') break;\r\n          }\r\n          var end = arr.length - 1;\r\n          for (; end >= 0; end--) {\r\n            if (arr[end] !== '') break;\r\n          }\r\n          if (start > end) return [];\r\n          return arr.slice(start, end - start + 1);\r\n        }\r\n        var fromParts = trim(from.split('/'));\r\n        var toParts = trim(to.split('/'));\r\n        var length = Math.min(fromParts.length, toParts.length);\r\n        var samePartsLength = length;\r\n        for (var i = 0; i < length; i++) {\r\n          if (fromParts[i] !== toParts[i]) {\r\n            samePartsLength = i;\r\n            break;\r\n          }\r\n        }\r\n        var outputParts = [];\r\n        for (var i = samePartsLength; i < fromParts.length; i++) {\r\n          outputParts.push('..');\r\n        }\r\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n        return outputParts.join('/');\r\n      }};\r\n  \r\n  \r\n  function lengthBytesUTF8(str) {\r\n      var len = 0;\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        var c = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (c <= 0x7F) {\r\n          len++;\r\n        } else if (c <= 0x7FF) {\r\n          len += 2;\r\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\r\n          len += 4; ++i;\r\n        } else {\r\n          len += 3;\r\n        }\r\n      }\r\n      return len;\r\n    }\r\n  \r\n  function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\r\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\r\n      // undefined and false each don't write out any bytes.\r\n      if (!(maxBytesToWrite > 0))\r\n        return 0;\r\n  \r\n      var startIdx = outIdx;\r\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // and https://www.ietf.org/rfc/rfc2279.txt\r\n        // and https://tools.ietf.org/html/rfc3629\r\n        var u = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (u >= 0xD800 && u <= 0xDFFF) {\r\n          var u1 = str.charCodeAt(++i);\r\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\r\n        }\r\n        if (u <= 0x7F) {\r\n          if (outIdx >= endIdx) break;\r\n          heap[outIdx++] = u;\r\n        } else if (u <= 0x7FF) {\r\n          if (outIdx + 1 >= endIdx) break;\r\n          heap[outIdx++] = 0xC0 | (u >> 6);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else if (u <= 0xFFFF) {\r\n          if (outIdx + 2 >= endIdx) break;\r\n          heap[outIdx++] = 0xE0 | (u >> 12);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else {\r\n          if (outIdx + 3 >= endIdx) break;\r\n          heap[outIdx++] = 0xF0 | (u >> 18);\r\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        }\r\n      }\r\n      // Null-terminate the pointer to the buffer.\r\n      heap[outIdx] = 0;\r\n      return outIdx - startIdx;\r\n    }\r\n  /** @type {function(string, boolean=, number=)} */\r\n  function intArrayFromString(stringy, dontAddNull, length) {\r\n    var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\r\n    var u8array = new Array(len);\r\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n    if (dontAddNull) u8array.length = numBytesWritten;\r\n    return u8array;\r\n  }\r\n  var TTY = {ttys:[],init:function () {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\r\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\r\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\r\n        //   // with text files until FS.init can be refactored.\r\n        //   process.stdin.setEncoding('utf8');\r\n        // }\r\n      },shutdown:function() {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\r\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\r\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\r\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\r\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\r\n        //   process.stdin.pause();\r\n        // }\r\n      },register:function(dev, ops) {\r\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\r\n        FS.registerDevice(dev, TTY.stream_ops);\r\n      },stream_ops:{open:function(stream) {\r\n          var tty = TTY.ttys[stream.node.rdev];\r\n          if (!tty) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          stream.tty = tty;\r\n          stream.seekable = false;\r\n        },close:function(stream) {\r\n          // flush any pending line data\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },fsync:function(stream) {\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },read:function(stream, buffer, offset, length, pos /* ignored */) {\r\n          if (!stream.tty || !stream.tty.ops.get_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          var bytesRead = 0;\r\n          for (var i = 0; i < length; i++) {\r\n            var result;\r\n            try {\r\n              result = stream.tty.ops.get_char(stream.tty);\r\n            } catch (e) {\r\n              throw new FS.ErrnoError(29);\r\n            }\r\n            if (result === undefined && bytesRead === 0) {\r\n              throw new FS.ErrnoError(6);\r\n            }\r\n            if (result === null || result === undefined) break;\r\n            bytesRead++;\r\n            buffer[offset+i] = result;\r\n          }\r\n          if (bytesRead) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return bytesRead;\r\n        },write:function(stream, buffer, offset, length, pos) {\r\n          if (!stream.tty || !stream.tty.ops.put_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          try {\r\n            for (var i = 0; i < length; i++) {\r\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\r\n            }\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n          if (length) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return i;\r\n        }},default_tty_ops:{get_char:function(tty) {\r\n          if (!tty.input.length) {\r\n            var result = null;\r\n            if (typeof window != 'undefined' &&\r\n              typeof window.prompt == 'function') {\r\n              // Browser.\r\n              result = window.prompt('Input: ');  // returns null on cancel\r\n              if (result !== null) {\r\n                result += '\\n';\r\n              }\r\n            } else if (typeof readline == 'function') {\r\n              // Command line.\r\n              result = readline();\r\n              if (result !== null) {\r\n                result += '\\n';\r\n              }\r\n            }\r\n            if (!result) {\r\n              return null;\r\n            }\r\n            tty.input = intArrayFromString(result, true);\r\n          }\r\n          return tty.input.shift();\r\n        },put_char:function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\r\n          }\r\n        },fsync:function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        }},default_tty1_ops:{put_char:function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val);\r\n          }\r\n        },fsync:function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        }}};\r\n  \r\n  \r\n  function zeroMemory(address, size) {\r\n      HEAPU8.fill(0, address, address + size);\r\n      return address;\r\n    }\r\n  \r\n  function alignMemory(size, alignment) {\r\n      return Math.ceil(size / alignment) * alignment;\r\n    }\r\n  function mmapAlloc(size) {\r\n      abort();\r\n    }\r\n  var MEMFS = {ops_table:null,mount:function(mount) {\r\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\r\n      },createNode:function(parent, name, mode, dev) {\r\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n          // no supported\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (!MEMFS.ops_table) {\r\n          MEMFS.ops_table = {\r\n            dir: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr,\r\n                lookup: MEMFS.node_ops.lookup,\r\n                mknod: MEMFS.node_ops.mknod,\r\n                rename: MEMFS.node_ops.rename,\r\n                unlink: MEMFS.node_ops.unlink,\r\n                rmdir: MEMFS.node_ops.rmdir,\r\n                readdir: MEMFS.node_ops.readdir,\r\n                symlink: MEMFS.node_ops.symlink\r\n              },\r\n              stream: {\r\n                llseek: MEMFS.stream_ops.llseek\r\n              }\r\n            },\r\n            file: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr\r\n              },\r\n              stream: {\r\n                llseek: MEMFS.stream_ops.llseek,\r\n                read: MEMFS.stream_ops.read,\r\n                write: MEMFS.stream_ops.write,\r\n                allocate: MEMFS.stream_ops.allocate,\r\n                mmap: MEMFS.stream_ops.mmap,\r\n                msync: MEMFS.stream_ops.msync\r\n              }\r\n            },\r\n            link: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr,\r\n                readlink: MEMFS.node_ops.readlink\r\n              },\r\n              stream: {}\r\n            },\r\n            chrdev: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr\r\n              },\r\n              stream: FS.chrdev_stream_ops\r\n            }\r\n          };\r\n        }\r\n        var node = FS.createNode(parent, name, mode, dev);\r\n        if (FS.isDir(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.dir.node;\r\n          node.stream_ops = MEMFS.ops_table.dir.stream;\r\n          node.contents = {};\r\n        } else if (FS.isFile(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.file.node;\r\n          node.stream_ops = MEMFS.ops_table.file.stream;\r\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\r\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\r\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\r\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\r\n          node.contents = null; \r\n        } else if (FS.isLink(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.link.node;\r\n          node.stream_ops = MEMFS.ops_table.link.stream;\r\n        } else if (FS.isChrdev(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.chrdev.node;\r\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\r\n        }\r\n        node.timestamp = Date.now();\r\n        // add the new node to the parent\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n          parent.timestamp = node.timestamp;\r\n        }\r\n        return node;\r\n      },getFileDataAsTypedArray:function(node) {\r\n        if (!node.contents) return new Uint8Array(0);\r\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\r\n        return new Uint8Array(node.contents);\r\n      },expandFileStorage:function(node, newCapacity) {\r\n        var prevCapacity = node.contents ? node.contents.length : 0;\r\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\r\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\r\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\r\n        // avoid overshooting the allocation cap by a very large margin.\r\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\r\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\r\n        var oldContents = node.contents;\r\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\r\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\r\n      },resizeFileStorage:function(node, newSize) {\r\n        if (node.usedBytes == newSize) return;\r\n        if (newSize == 0) {\r\n          node.contents = null; // Fully decommit when requesting a resize to zero.\r\n          node.usedBytes = 0;\r\n        } else {\r\n          var oldContents = node.contents;\r\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\r\n          if (oldContents) {\r\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\r\n          }\r\n          node.usedBytes = newSize;\r\n        }\r\n      },node_ops:{getattr:function(node) {\r\n          var attr = {};\r\n          // device numbers reuse inode numbers.\r\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n          attr.ino = node.id;\r\n          attr.mode = node.mode;\r\n          attr.nlink = 1;\r\n          attr.uid = 0;\r\n          attr.gid = 0;\r\n          attr.rdev = node.rdev;\r\n          if (FS.isDir(node.mode)) {\r\n            attr.size = 4096;\r\n          } else if (FS.isFile(node.mode)) {\r\n            attr.size = node.usedBytes;\r\n          } else if (FS.isLink(node.mode)) {\r\n            attr.size = node.link.length;\r\n          } else {\r\n            attr.size = 0;\r\n          }\r\n          attr.atime = new Date(node.timestamp);\r\n          attr.mtime = new Date(node.timestamp);\r\n          attr.ctime = new Date(node.timestamp);\r\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\r\n          //       but this is not required by the standard.\r\n          attr.blksize = 4096;\r\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n          return attr;\r\n        },setattr:function(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n          if (attr.size !== undefined) {\r\n            MEMFS.resizeFileStorage(node, attr.size);\r\n          }\r\n        },lookup:function(parent, name) {\r\n          throw FS.genericErrors[44];\r\n        },mknod:function(parent, name, mode, dev) {\r\n          return MEMFS.createNode(parent, name, mode, dev);\r\n        },rename:function(old_node, new_dir, new_name) {\r\n          // if we're overwriting a directory at new_name, make sure it's empty.\r\n          if (FS.isDir(old_node.mode)) {\r\n            var new_node;\r\n            try {\r\n              new_node = FS.lookupNode(new_dir, new_name);\r\n            } catch (e) {\r\n            }\r\n            if (new_node) {\r\n              for (var i in new_node.contents) {\r\n                throw new FS.ErrnoError(55);\r\n              }\r\n            }\r\n          }\r\n          // do the internal rewiring\r\n          delete old_node.parent.contents[old_node.name];\r\n          old_node.parent.timestamp = Date.now()\r\n          old_node.name = new_name;\r\n          new_dir.contents[new_name] = old_node;\r\n          new_dir.timestamp = old_node.parent.timestamp;\r\n          old_node.parent = new_dir;\r\n        },unlink:function(parent, name) {\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },rmdir:function(parent, name) {\r\n          var node = FS.lookupNode(parent, name);\r\n          for (var i in node.contents) {\r\n            throw new FS.ErrnoError(55);\r\n          }\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },readdir:function(node) {\r\n          var entries = ['.', '..'];\r\n          for (var key in node.contents) {\r\n            if (!node.contents.hasOwnProperty(key)) {\r\n              continue;\r\n            }\r\n            entries.push(key);\r\n          }\r\n          return entries;\r\n        },symlink:function(parent, newname, oldpath) {\r\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\r\n          node.link = oldpath;\r\n          return node;\r\n        },readlink:function(node) {\r\n          if (!FS.isLink(node.mode)) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return node.link;\r\n        }},stream_ops:{read:function(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= stream.node.usedBytes) return 0;\r\n          var size = Math.min(stream.node.usedBytes - position, length);\r\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\r\n            buffer.set(contents.subarray(position, position + size), offset);\r\n          } else {\r\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\r\n          }\r\n          return size;\r\n        },write:function(stream, buffer, offset, length, position, canOwn) {\r\n          // If the buffer is located in main memory (HEAP), and if\r\n          // memory can grow, we can't hold on to references of the\r\n          // memory buffer, as they may get invalidated. That means we\r\n          // need to do copy its contents.\r\n          if (buffer.buffer === HEAP8.buffer) {\r\n            canOwn = false;\r\n          }\r\n  \r\n          if (!length) return 0;\r\n          var node = stream.node;\r\n          node.timestamp = Date.now();\r\n  \r\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\r\n            if (canOwn) {\r\n              node.contents = buffer.subarray(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\r\n              node.contents = buffer.slice(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\r\n              node.contents.set(buffer.subarray(offset, offset + length), position);\r\n              return length;\r\n            }\r\n          }\r\n  \r\n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\r\n          MEMFS.expandFileStorage(node, position+length);\r\n          if (node.contents.subarray && buffer.subarray) {\r\n            // Use typed array write which is available.\r\n            node.contents.set(buffer.subarray(offset, offset + length), position);\r\n          } else {\r\n            for (var i = 0; i < length; i++) {\r\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\r\n            }\r\n          }\r\n          node.usedBytes = Math.max(node.usedBytes, position + length);\r\n          return length;\r\n        },llseek:function(stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.usedBytes;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        },allocate:function(stream, offset, length) {\r\n          MEMFS.expandFileStorage(stream.node, offset + length);\r\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\r\n        },mmap:function(stream, length, position, prot, flags) {\r\n          if (!FS.isFile(stream.node.mode)) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          var ptr;\r\n          var allocated;\r\n          var contents = stream.node.contents;\r\n          // Only make a new copy when MAP_PRIVATE is specified.\r\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\r\n            // We can't emulate MAP_SHARED when the file is not backed by the\r\n            // buffer we're mapping to (e.g. the HEAP buffer).\r\n            allocated = false;\r\n            ptr = contents.byteOffset;\r\n          } else {\r\n            // Try to avoid unnecessary slices.\r\n            if (position > 0 || position + length < contents.length) {\r\n              if (contents.subarray) {\r\n                contents = contents.subarray(position, position + length);\r\n              } else {\r\n                contents = Array.prototype.slice.call(contents, position, position + length);\r\n              }\r\n            }\r\n            allocated = true;\r\n            ptr = mmapAlloc(length);\r\n            if (!ptr) {\r\n              throw new FS.ErrnoError(48);\r\n            }\r\n            HEAP8.set(contents, ptr);\r\n          }\r\n          return { ptr: ptr, allocated: allocated };\r\n        },msync:function(stream, buffer, offset, length, mmapFlags) {\r\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n          // should we check if bytesWritten and length are the same?\r\n          return 0;\r\n        }}};\r\n  \r\n  /** @param {boolean=} noRunDep */\r\n  function asyncLoad(url, onload, onerror, noRunDep) {\r\n      var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\r\n      readAsync(url, (arrayBuffer) => {\r\n        assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\r\n        onload(new Uint8Array(arrayBuffer));\r\n        if (dep) removeRunDependency(dep);\r\n      }, (event) => {\r\n        if (onerror) {\r\n          onerror();\r\n        } else {\r\n          throw 'Loading data file \"' + url + '\" failed.';\r\n        }\r\n      });\r\n      if (dep) addRunDependency(dep);\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  var IDBFS = {dbs:{},indexedDB:() => {\r\n        if (typeof indexedDB != 'undefined') return indexedDB;\r\n        var ret = null;\r\n        if (typeof window == 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        assert(ret, 'IDBFS used, but indexedDB not supported');\r\n        return ret;\r\n      },DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:function(mount) {\r\n        // reuse all of the core MEMFS functionality\r\n        return MEMFS.mount.apply(null, arguments);\r\n      },syncfs:(mount, populate, callback) => {\r\n        IDBFS.getLocalSet(mount, (err, local) => {\r\n          if (err) return callback(err);\r\n  \r\n          IDBFS.getRemoteSet(mount, (err, remote) => {\r\n            if (err) return callback(err);\r\n  \r\n            var src = populate ? remote : local;\r\n            var dst = populate ? local : remote;\r\n  \r\n            IDBFS.reconcile(src, dst, callback);\r\n          });\r\n        });\r\n      },quit:() => {\r\n        Object.values(IDBFS.dbs).forEach((value) => value.close());\r\n        IDBFS.dbs = {};\r\n      },getDB:(name, callback) => {\r\n        // check the cache first\r\n        var db = IDBFS.dbs[name];\r\n        if (db) {\r\n          return callback(null, db);\r\n        }\r\n  \r\n        var req;\r\n        try {\r\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n        if (!req) {\r\n          return callback(\"Unable to connect to IndexedDB\");\r\n        }\r\n        req.onupgradeneeded = (e) => {\r\n          var db = /** @type {IDBDatabase} */ (e.target.result);\r\n          var transaction = e.target.transaction;\r\n  \r\n          var fileStore;\r\n  \r\n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\r\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n          } else {\r\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\r\n          }\r\n  \r\n          if (!fileStore.indexNames.contains('timestamp')) {\r\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\r\n          }\r\n        };\r\n        req.onsuccess = () => {\r\n          db = /** @type {IDBDatabase} */ (req.result);\r\n  \r\n          // add to the cache\r\n          IDBFS.dbs[name] = db;\r\n          callback(null, db);\r\n        };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },getLocalSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        function isRealDir(p) {\r\n          return p !== '.' && p !== '..';\r\n        };\r\n        function toAbsolute(root) {\r\n          return (p) => {\r\n            return PATH.join2(root, p);\r\n          }\r\n        };\r\n  \r\n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\r\n  \r\n        while (check.length) {\r\n          var path = check.pop();\r\n          var stat;\r\n  \r\n          try {\r\n            stat = FS.stat(path);\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\r\n          }\r\n  \r\n          entries[path] = { 'timestamp': stat.mtime };\r\n        }\r\n  \r\n        return callback(null, { type: 'local', entries: entries });\r\n      },getRemoteSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        IDBFS.getDB(mount.mountpoint, (err, db) => {\r\n          if (err) return callback(err);\r\n  \r\n          try {\r\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\r\n            transaction.onerror = (e) => {\r\n              callback(this.error);\r\n              e.preventDefault();\r\n            };\r\n  \r\n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n            var index = store.index('timestamp');\r\n  \r\n            index.openKeyCursor().onsuccess = (event) => {\r\n              var cursor = event.target.result;\r\n  \r\n              if (!cursor) {\r\n                return callback(null, { type: 'remote', db: db, entries: entries });\r\n              }\r\n  \r\n              entries[cursor.primaryKey] = { 'timestamp': cursor.key };\r\n  \r\n              cursor.continue();\r\n            };\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n        });\r\n      },loadLocalEntry:(path, callback) => {\r\n        var stat, node;\r\n  \r\n        try {\r\n          var lookup = FS.lookupPath(path);\r\n          node = lookup.node;\r\n          stat = FS.stat(path);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        if (FS.isDir(stat.mode)) {\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode });\r\n        } else if (FS.isFile(stat.mode)) {\r\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\r\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\r\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode, 'contents': node.contents });\r\n        } else {\r\n          return callback(new Error('node type not supported'));\r\n        }\r\n      },storeLocalEntry:(path, entry, callback) => {\r\n        try {\r\n          if (FS.isDir(entry['mode'])) {\r\n            FS.mkdirTree(path, entry['mode']);\r\n          } else if (FS.isFile(entry['mode'])) {\r\n            FS.writeFile(path, entry['contents'], { canOwn: true });\r\n          } else {\r\n            return callback(new Error('node type not supported'));\r\n          }\r\n  \r\n          FS.chmod(path, entry['mode']);\r\n          FS.utime(path, entry['timestamp'], entry['timestamp']);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },removeLocalEntry:(path, callback) => {\r\n        try {\r\n          var stat = FS.stat(path);\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            FS.rmdir(path);\r\n          } else if (FS.isFile(stat.mode)) {\r\n            FS.unlink(path);\r\n          }\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },loadRemoteEntry:(store, path, callback) => {\r\n        var req = store.get(path);\r\n        req.onsuccess = (event) => { callback(null, event.target.result); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },storeRemoteEntry:(store, path, entry, callback) => {\r\n        try {\r\n          var req = store.put(entry, path);\r\n        } catch (e) {\r\n          callback(e);\r\n          return;\r\n        }\r\n        req.onsuccess = () => { callback(null); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },removeRemoteEntry:(store, path, callback) => {\r\n        var req = store.delete(path);\r\n        req.onsuccess = () => { callback(null); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },reconcile:(src, dst, callback) => {\r\n        var total = 0;\r\n  \r\n        var create = [];\r\n        Object.keys(src.entries).forEach(function (key) {\r\n          var e = src.entries[key];\r\n          var e2 = dst.entries[key];\r\n          if (!e2 || e['timestamp'].getTime() != e2['timestamp'].getTime()) {\r\n            create.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        var remove = [];\r\n        Object.keys(dst.entries).forEach(function (key) {\r\n          if (!src.entries[key]) {\r\n            remove.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        if (!total) {\r\n          return callback(null);\r\n        }\r\n  \r\n        var errored = false;\r\n        var db = src.type === 'remote' ? src.db : dst.db;\r\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\r\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n  \r\n        function done(err) {\r\n          if (err && !errored) {\r\n            errored = true;\r\n            return callback(err);\r\n          }\r\n        };\r\n  \r\n        transaction.onerror = (e) => {\r\n          done(this.error);\r\n          e.preventDefault();\r\n        };\r\n  \r\n        transaction.oncomplete = (e) => {\r\n          if (!errored) {\r\n            callback(null);\r\n          }\r\n        };\r\n  \r\n        // sort paths in ascending order so directory entries are created\r\n        // before the files inside them\r\n        create.sort().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.loadRemoteEntry(store, path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeLocalEntry(path, entry, done);\r\n            });\r\n          } else {\r\n            IDBFS.loadLocalEntry(path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeRemoteEntry(store, path, entry, done);\r\n            });\r\n          }\r\n        });\r\n  \r\n        // sort paths in descending order so files are deleted before their\r\n        // parent directories\r\n        remove.sort().reverse().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.removeLocalEntry(path, done);\r\n          } else {\r\n            IDBFS.removeRemoteEntry(store, path, done);\r\n          }\r\n        });\r\n      }};\r\n  \r\n  var LZ4 = {DIR_MODE:16895,FILE_MODE:33279,CHUNK_SIZE:-1,codec:null,init:function() {\r\n        if (LZ4.codec) return;\r\n        LZ4.codec = (function() {\r\n          /*\r\n  MiniLZ4: Minimal LZ4 block decoding and encoding.\r\n  \r\n  based off of node-lz4, https://github.com/pierrec/node-lz4\r\n  \r\n  ====\r\n  Copyright (c) 2012 Pierre Curto\r\n  \r\n  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  of this software and associated documentation files (the \"Software\"), to deal\r\n  in the Software without restriction, including without limitation the rights\r\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n  copies of the Software, and to permit persons to whom the Software is\r\n  furnished to do so, subject to the following conditions:\r\n  \r\n  The above copyright notice and this permission notice shall be included in\r\n  all copies or substantial portions of the Software.\r\n  \r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n  THE SOFTWARE.\r\n  ====\r\n  \r\n  changes have the same license\r\n  */\r\n  \r\n  var MiniLZ4 = (function() {\r\n  \r\n  var exports = {};\r\n  \r\n  /**\r\n   * Decode a block. Assumptions: input contains all sequences of a \r\n   * chunk, output is large enough to receive the decoded data.\r\n   * If the output buffer is too small, an error will be thrown.\r\n   * If the returned value is negative, an error occured at the returned offset.\r\n   *\r\n   * @param {ArrayBufferView} input input data\r\n   * @param {ArrayBufferView} output output data\r\n   * @param {number=} sIdx\r\n   * @param {number=} eIdx\r\n   * @return {number} number of decoded bytes\r\n   * @private\r\n   */\r\n  exports.uncompress = function (input, output, sIdx, eIdx) {\r\n  \tsIdx = sIdx || 0\r\n  \teIdx = eIdx || (input.length - sIdx)\r\n  \t// Process each sequence in the incoming data\r\n  \tfor (var i = sIdx, n = eIdx, j = 0; i < n;) {\r\n  \t\tvar token = input[i++]\r\n  \r\n  \t\t// Literals\r\n  \t\tvar literals_length = (token >> 4)\r\n  \t\tif (literals_length > 0) {\r\n  \t\t\t// length of literals\r\n  \t\t\tvar l = literals_length + 240\r\n  \t\t\twhile (l === 255) {\r\n  \t\t\t\tl = input[i++]\r\n  \t\t\t\tliterals_length += l\r\n  \t\t\t}\r\n  \r\n  \t\t\t// Copy the literals\r\n  \t\t\tvar end = i + literals_length\r\n  \t\t\twhile (i < end) output[j++] = input[i++]\r\n  \r\n  \t\t\t// End of buffer?\r\n  \t\t\tif (i === n) return j\r\n  \t\t}\r\n  \r\n  \t\t// Match copy\r\n  \t\t// 2 bytes offset (little endian)\r\n  \t\tvar offset = input[i++] | (input[i++] << 8)\r\n  \r\n  \t\t// XXX 0 is an invalid offset value\r\n  \t\tif (offset === 0) return j\r\n  \t\tif (offset > j) return -(i-2)\r\n  \r\n  \t\t// length of match copy\r\n  \t\tvar match_length = (token & 0xf)\r\n  \t\tvar l = match_length + 240\r\n  \t\twhile (l === 255) {\r\n  \t\t\tl = input[i++]\r\n  \t\t\tmatch_length += l\r\n  \t\t}\r\n  \r\n  \t\t// Copy the match\r\n  \t\tvar pos = j - offset // position of the match copy in the current output\r\n  \t\tvar end = j + match_length + 4 // minmatch = 4\r\n  \t\twhile (j < end) output[j++] = output[pos++]\r\n  \t}\r\n  \r\n  \treturn j\r\n  }\r\n  \r\n  var\r\n  \tmaxInputSize\t= 0x7E000000\r\n  ,\tminMatch\t\t= 4\r\n  // uint32() optimization\r\n  ,\thashLog\t\t\t= 16\r\n  ,\thashShift\t\t= (minMatch * 8) - hashLog\r\n  ,\thashSize\t\t= 1 << hashLog\r\n  \r\n  ,\tcopyLength\t\t= 8\r\n  ,\tlastLiterals\t= 5\r\n  ,\tmfLimit\t\t\t= copyLength + minMatch\r\n  ,\tskipStrength\t= 6\r\n  \r\n  ,\tmlBits  \t\t= 4\r\n  ,\tmlMask  \t\t= (1 << mlBits) - 1\r\n  ,\trunBits \t\t= 8 - mlBits\r\n  ,\trunMask \t\t= (1 << runBits) - 1\r\n  \r\n  ,\thasher \t\t\t= /* XXX uint32( */ 2654435761 /* ) */\r\n  \r\n  assert(hashShift === 16);\r\n  var hashTable = new Int16Array(1<<16);\r\n  var empty = new Int16Array(hashTable.length);\r\n  \r\n  // CompressBound returns the maximum length of a lz4 block, given it's uncompressed length\r\n  exports.compressBound = function (isize) {\r\n  \treturn isize > maxInputSize\r\n  \t\t? 0\r\n  \t\t: (isize + (isize/255) + 16) | 0\r\n  }\r\n  \r\n  /** @param {number=} sIdx\r\n  \t@param {number=} eIdx */\r\n  exports.compress = function (src, dst, sIdx, eIdx) {\r\n  \thashTable.set(empty);\r\n  \treturn compressBlock(src, dst, 0, sIdx || 0, eIdx || dst.length)\r\n  }\r\n  \r\n  function compressBlock (src, dst, pos, sIdx, eIdx) {\r\n  \t// XXX var Hash = uint32() // Reusable unsigned 32 bits integer\r\n  \tvar dpos = sIdx\r\n  \tvar dlen = eIdx - sIdx\r\n  \tvar anchor = 0\r\n  \r\n  \tif (src.length >= maxInputSize) throw new Error(\"input too large\")\r\n  \r\n  \t// Minimum of input bytes for compression (LZ4 specs)\r\n  \tif (src.length > mfLimit) {\r\n  \t\tvar n = exports.compressBound(src.length)\r\n  \t\tif ( dlen < n ) throw Error(\"output too small: \" + dlen + \" < \" + n)\r\n  \r\n  \t\tvar \r\n  \t\t\tstep  = 1\r\n  \t\t,\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \t\t// Keep last few bytes incompressible (LZ4 specs):\r\n  \t\t// last 5 bytes must be literals\r\n  \t\t,\tsrcLength = src.length - mfLimit\r\n  \r\n  \t\twhile (pos + minMatch < srcLength) {\r\n  \t\t\t// Find a match\r\n  \t\t\t// min match of 4 bytes aka sequence\r\n  \t\t\tvar sequenceLowBits = src[pos+1]<<8 | src[pos]\r\n  \t\t\tvar sequenceHighBits = src[pos+3]<<8 | src[pos+2]\r\n  \t\t\t// compute hash for the current sequence\r\n  \t\t\tvar hash = Math.imul(sequenceLowBits | (sequenceHighBits << 16), hasher) >>> hashShift;\r\n  \t\t\t/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)\r\n  \t\t\t\t\t\t\t.multiply(hasher)\r\n  \t\t\t\t\t\t\t.shiftr(hashShift)\r\n  \t\t\t\t\t\t\t.toNumber() */\r\n  \t\t\t// get the position of the sequence matching the hash\r\n  \t\t\t// NB. since 2 different sequences may have the same hash\r\n  \t\t\t// it is double-checked below\r\n  \t\t\t// do -1 to distinguish between initialized and uninitialized values\r\n  \t\t\tvar ref = hashTable[hash] - 1\r\n  \t\t\t// save position of current sequence in hash table\r\n  \t\t\thashTable[hash] = pos + 1\r\n  \r\n  \t\t\t// first reference or within 64k limit or current sequence !== hashed one: no match\r\n  \t\t\tif ( ref < 0 ||\r\n  \t\t\t\t((pos - ref) >>> 16) > 0 ||\r\n  \t\t\t\t(\r\n  \t\t\t\t\t((src[ref+3]<<8 | src[ref+2]) != sequenceHighBits) ||\r\n  \t\t\t\t\t((src[ref+1]<<8 | src[ref]) != sequenceLowBits )\r\n  \t\t\t\t)\r\n  \t\t\t) {\r\n  \t\t\t\t// increase step if nothing found within limit\r\n  \t\t\t\tstep = findMatchAttempts++ >> skipStrength\r\n  \t\t\t\tpos += step\r\n  \t\t\t\tcontinue\r\n  \t\t\t}\r\n  \r\n  \t\t\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \r\n  \t\t\t// got a match\r\n  \t\t\tvar literals_length = pos - anchor\r\n  \t\t\tvar offset = pos - ref\r\n  \r\n  \t\t\t// minMatch already verified\r\n  \t\t\tpos += minMatch\r\n  \t\t\tref += minMatch\r\n  \r\n  \t\t\t// move to the end of the match (>=minMatch)\r\n  \t\t\tvar match_length = pos\r\n  \t\t\twhile (pos < srcLength && src[pos] == src[ref]) {\r\n  \t\t\t\tpos++\r\n  \t\t\t\tref++\r\n  \t\t\t}\r\n  \r\n  \t\t\t// match length\r\n  \t\t\tmatch_length = pos - match_length\r\n  \r\n  \t\t\t// token\r\n  \t\t\tvar token = match_length < mlMask ? match_length : mlMask\r\n  \r\n  \t\t\t// encode literals length\r\n  \t\t\tif (literals_length >= runMask) {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (runMask << mlBits) + token\r\n  \t\t\t\tfor (var len = literals_length - runMask; len > 254; len -= 255) {\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \t\t\t\tdst[dpos++] = len\r\n  \t\t\t} else {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (literals_length << mlBits) + token\r\n  \t\t\t}\r\n  \r\n  \t\t\t// write literals\r\n  \t\t\tfor (var i = 0; i < literals_length; i++) {\r\n  \t\t\t\tdst[dpos++] = src[anchor+i]\r\n  \t\t\t}\r\n  \r\n  \t\t\t// encode offset\r\n  \t\t\tdst[dpos++] = offset\r\n  \t\t\tdst[dpos++] = (offset >> 8)\r\n  \r\n  \t\t\t// encode match length\r\n  \t\t\tif (match_length >= mlMask) {\r\n  \t\t\t\tmatch_length -= mlMask\r\n  \t\t\t\twhile (match_length >= 255) {\r\n  \t\t\t\t\tmatch_length -= 255\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \r\n  \t\t\t\tdst[dpos++] = match_length\r\n  \t\t\t}\r\n  \r\n  \t\t\tanchor = pos\r\n  \t\t}\r\n  \t}\r\n  \r\n  \t// cannot compress input\r\n  \tif (anchor == 0) return 0\r\n  \r\n  \t// Write last literals\r\n  \t// encode literals length\r\n  \tliterals_length = src.length - anchor\r\n  \tif (literals_length >= runMask) {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (runMask << mlBits)\r\n  \t\tfor (var ln = literals_length - runMask; ln > 254; ln -= 255) {\r\n  \t\t\tdst[dpos++] = 255\r\n  \t\t}\r\n  \t\tdst[dpos++] = ln\r\n  \t} else {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (literals_length << mlBits)\r\n  \t}\r\n  \r\n  \t// write literals\r\n  \tpos = anchor\r\n  \twhile (pos < src.length) {\r\n  \t\tdst[dpos++] = src[pos++]\r\n  \t}\r\n  \r\n  \treturn dpos\r\n  }\r\n  \r\n  exports.CHUNK_SIZE = 2048; // musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea\r\n  \r\n  exports.compressPackage = function(data, verify) {\r\n    if (verify) {\r\n      var temp = new Uint8Array(exports.CHUNK_SIZE);\r\n    }\r\n    // compress the data in chunks\r\n    assert(data instanceof ArrayBuffer);\r\n    data = new Uint8Array(data);\r\n    console.log('compressing package of size ' + data.length);\r\n    var compressedChunks = [];\r\n    var successes = [];\r\n    var offset = 0;\r\n    var total = 0;\r\n    while (offset < data.length) {\r\n      var chunk = data.subarray(offset, offset + exports.CHUNK_SIZE);\r\n      //console.log('compress a chunk ' + [offset, total, data.length]);\r\n      offset += exports.CHUNK_SIZE;\r\n      var bound = exports.compressBound(chunk.length);\r\n      var compressed = new Uint8Array(bound);\r\n      var compressedSize = exports.compress(chunk, compressed);\r\n      if (compressedSize > 0) {\r\n        assert(compressedSize <= bound);\r\n        compressed = compressed.subarray(0, compressedSize);\r\n        compressedChunks.push(compressed);\r\n        total += compressedSize;\r\n        successes.push(1);\r\n        if (verify) {\r\n          var back = exports.uncompress(compressed, temp);\r\n          assert(back === chunk.length, [back, chunk.length]);\r\n          for (var i = 0; i < chunk.length; i++) {\r\n            assert(chunk[i] === temp[i]);\r\n          }\r\n        }\r\n      } else {\r\n        assert(compressedSize === 0);\r\n        // failure to compress :(\r\n        compressedChunks.push(chunk);\r\n        total += chunk.length; // last chunk may not be the full exports.CHUNK_SIZE size\r\n        successes.push(0);\r\n      }\r\n    }\r\n    data = null; // XXX null out pack['data'] too?\r\n    var compressedData = {\r\n      'data': new Uint8Array(total + exports.CHUNK_SIZE*2), // store all the compressed data, plus room for two cached decompressed chunk, in one fast array\r\n      'cachedOffset': total,\r\n      'cachedIndexes': [-1, -1], // cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing\r\n      'cachedChunks': [null, null],\r\n      'offsets': [], // chunk# => start in compressed data\r\n      'sizes': [],\r\n      'successes': successes, // 1 if chunk is compressed\r\n    };\r\n    offset = 0;\r\n    for (var i = 0; i < compressedChunks.length; i++) {\r\n      compressedData['data'].set(compressedChunks[i], offset);\r\n      compressedData['offsets'][i] = offset;\r\n      compressedData['sizes'][i] = compressedChunks[i].length\r\n      offset += compressedChunks[i].length;\r\n    }\r\n    console.log('compressed package into ' + [compressedData['data'].length]);\r\n    assert(offset === total);\r\n    return compressedData;\r\n  };\r\n  \r\n  assert(exports.CHUNK_SIZE < (1 << 15)); // we use 16-bit ints as the type of the hash table, chunk size must be smaller\r\n  \r\n  return exports;\r\n  \r\n  })();\r\n  \r\n  ;\r\n          return MiniLZ4;\r\n        })();\r\n        LZ4.CHUNK_SIZE = LZ4.codec.CHUNK_SIZE;\r\n      },loadPackage:function (pack, preloadPlugin) {\r\n        LZ4.init();\r\n        var compressedData = pack['compressedData'];\r\n        if (!compressedData) compressedData = LZ4.codec.compressPackage(pack['data']);\r\n        assert(compressedData['cachedIndexes'].length === compressedData['cachedChunks'].length);\r\n        for (var i = 0; i < compressedData['cachedIndexes'].length; i++) {\r\n          compressedData['cachedIndexes'][i] = -1;\r\n          compressedData['cachedChunks'][i] = compressedData['data'].subarray(compressedData['cachedOffset'] + i*LZ4.CHUNK_SIZE,\r\n                                                                        compressedData['cachedOffset'] + (i+1)*LZ4.CHUNK_SIZE);\r\n          assert(compressedData['cachedChunks'][i].length === LZ4.CHUNK_SIZE);\r\n        }\r\n        pack['metadata'].files.forEach(function(file) {\r\n          var dir = PATH.dirname(file.filename);\r\n          var name = PATH.basename(file.filename);\r\n          FS.createPath('', dir, true, true);\r\n          var parent = FS.analyzePath(dir).object;\r\n          LZ4.createNode(parent, name, LZ4.FILE_MODE, 0, {\r\n            compressedData: compressedData,\r\n            start: file.start,\r\n            end: file.end,\r\n          });\r\n        });\r\n        // Preload files if necessary. This code is largely similar to\r\n        // createPreloadedFile in library_fs.js. However, a main difference here\r\n        // is that we only decompress the file if it can be preloaded.\r\n        // Abstracting out the common parts seems to be more effort than it is\r\n        // worth.\r\n        if (preloadPlugin) {\r\n          Browser.init();\r\n          pack['metadata'].files.forEach(function(file) {\r\n            var handled = false;\r\n            var fullname = file.filename;\r\n            Module['preloadPlugins'].forEach(function(plugin) {\r\n              if (handled) return;\r\n              if (plugin['canHandle'](fullname)) {\r\n                var dep = getUniqueRunDependency('fp ' + fullname);\r\n                addRunDependency(dep);\r\n                var finish = () => removeRunDependency(dep);\r\n                var byteArray = FS.readFile(fullname);\r\n                plugin['handle'](byteArray, fullname, finish, finish);\r\n                handled = true;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      },createNode:function (parent, name, mode, dev, contents, mtime) {\r\n        var node = FS.createNode(parent, name, mode);\r\n        node.mode = mode;\r\n        node.node_ops = LZ4.node_ops;\r\n        node.stream_ops = LZ4.stream_ops;\r\n        node.timestamp = (mtime || new Date).getTime();\r\n        assert(LZ4.FILE_MODE !== LZ4.DIR_MODE);\r\n        if (mode === LZ4.FILE_MODE) {\r\n          node.size = contents.end - contents.start;\r\n          node.contents = contents;\r\n        } else {\r\n          node.size = 4096;\r\n          node.contents = {};\r\n        }\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n        }\r\n        return node;\r\n      },node_ops:{getattr:function(node) {\r\n          return {\r\n            dev: 1,\r\n            ino: node.id,\r\n            mode: node.mode,\r\n            nlink: 1,\r\n            uid: 0,\r\n            gid: 0,\r\n            rdev: undefined,\r\n            size: node.size,\r\n            atime: new Date(node.timestamp),\r\n            mtime: new Date(node.timestamp),\r\n            ctime: new Date(node.timestamp),\r\n            blksize: 4096,\r\n            blocks: Math.ceil(node.size / 4096),\r\n          };\r\n        },setattr:function(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n        },lookup:function(parent, name) {\r\n          throw new FS.ErrnoError(44);\r\n        },mknod:function (parent, name, mode, dev) {\r\n          throw new FS.ErrnoError(63);\r\n        },rename:function (oldNode, newDir, newName) {\r\n          throw new FS.ErrnoError(63);\r\n        },unlink:function(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },rmdir:function(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },readdir:function(node) {\r\n          throw new FS.ErrnoError(63);\r\n        },symlink:function(parent, newName, oldPath) {\r\n          throw new FS.ErrnoError(63);\r\n        }},stream_ops:{read:function (stream, buffer, offset, length, position) {\r\n          //out('LZ4 read ' + [offset, length, position]);\r\n          length = Math.min(length, stream.node.size - position);\r\n          if (length <= 0) return 0;\r\n          var contents = stream.node.contents;\r\n          var compressedData = contents.compressedData;\r\n          var written = 0;\r\n          while (written < length) {\r\n            var start = contents.start + position + written; // start index in uncompressed data\r\n            var desired = length - written;\r\n            //out('current read: ' + ['start', start, 'desired', desired]);\r\n            var chunkIndex = Math.floor(start / LZ4.CHUNK_SIZE);\r\n            var compressedStart = compressedData['offsets'][chunkIndex];\r\n            var compressedSize = compressedData['sizes'][chunkIndex];\r\n            var currChunk;\r\n            if (compressedData['successes'][chunkIndex]) {\r\n              var found = compressedData['cachedIndexes'].indexOf(chunkIndex);\r\n              if (found >= 0) {\r\n                currChunk = compressedData['cachedChunks'][found];\r\n              } else {\r\n                // decompress the chunk\r\n                compressedData['cachedIndexes'].pop();\r\n                compressedData['cachedIndexes'].unshift(chunkIndex);\r\n                currChunk = compressedData['cachedChunks'].pop();\r\n                compressedData['cachedChunks'].unshift(currChunk);\r\n                if (compressedData['debug']) {\r\n                  out('decompressing chunk ' + chunkIndex);\r\n                  Module['decompressedChunks'] = (Module['decompressedChunks'] || 0) + 1;\r\n                }\r\n                var compressed = compressedData['data'].subarray(compressedStart, compressedStart + compressedSize);\r\n                //var t = Date.now();\r\n                var originalSize = LZ4.codec.uncompress(compressed, currChunk);\r\n                //out('decompress time: ' + (Date.now() - t));\r\n                if (chunkIndex < compressedData['successes'].length-1) assert(originalSize === LZ4.CHUNK_SIZE); // all but the last chunk must be full-size\r\n              }\r\n            } else {\r\n              // uncompressed\r\n              currChunk = compressedData['data'].subarray(compressedStart, compressedStart + LZ4.CHUNK_SIZE);\r\n            }\r\n            var startInChunk = start % LZ4.CHUNK_SIZE;\r\n            var endInChunk = Math.min(startInChunk + desired, LZ4.CHUNK_SIZE);\r\n            buffer.set(currChunk.subarray(startInChunk, endInChunk), offset + written);\r\n            var currWritten = endInChunk - startInChunk;\r\n            written += currWritten;\r\n          }\r\n          return written;\r\n        },write:function (stream, buffer, offset, length, position) {\r\n          throw new FS.ErrnoError(29);\r\n        },llseek:function (stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.size;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        }}};\r\n  var FS = {root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path, opts = {}) => {\r\n        path = PATH_FS.resolve(path);\r\n  \r\n        if (!path) return { path: '', node: null };\r\n  \r\n        var defaults = {\r\n          follow_mount: true,\r\n          recurse_count: 0\r\n        };\r\n        opts = Object.assign(defaults, opts)\r\n  \r\n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\r\n          throw new FS.ErrnoError(32);\r\n        }\r\n  \r\n        // split the absolute path\r\n        var parts = path.split('/').filter((p) => !!p);\r\n  \r\n        // start at the root\r\n        var current = FS.root;\r\n        var current_path = '/';\r\n  \r\n        for (var i = 0; i < parts.length; i++) {\r\n          var islast = (i === parts.length-1);\r\n          if (islast && opts.parent) {\r\n            // stop resolving\r\n            break;\r\n          }\r\n  \r\n          current = FS.lookupNode(current, parts[i]);\r\n          current_path = PATH.join2(current_path, parts[i]);\r\n  \r\n          // jump to the mount's root node if this is a mountpoint\r\n          if (FS.isMountpoint(current)) {\r\n            if (!islast || (islast && opts.follow_mount)) {\r\n              current = current.mounted.root;\r\n            }\r\n          }\r\n  \r\n          // by default, lookupPath will not follow a symlink if it is the final path component.\r\n          // setting opts.follow = true will override this behavior.\r\n          if (!islast || opts.follow) {\r\n            var count = 0;\r\n            while (FS.isLink(current.mode)) {\r\n              var link = FS.readlink(current_path);\r\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\r\n  \r\n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\r\n              current = lookup.node;\r\n  \r\n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\r\n                throw new FS.ErrnoError(32);\r\n              }\r\n            }\r\n          }\r\n        }\r\n  \r\n        return { path: current_path, node: current };\r\n      },getPath:(node) => {\r\n        var path;\r\n        while (true) {\r\n          if (FS.isRoot(node)) {\r\n            var mount = node.mount.mountpoint;\r\n            if (!path) return mount;\r\n            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;\r\n          }\r\n          path = path ? node.name + '/' + path : node.name;\r\n          node = node.parent;\r\n        }\r\n      },hashName:(parentid, name) => {\r\n        var hash = 0;\r\n  \r\n        for (var i = 0; i < name.length; i++) {\r\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\r\n        }\r\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\r\n      },hashAddNode:(node) => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        node.name_next = FS.nameTable[hash];\r\n        FS.nameTable[hash] = node;\r\n      },hashRemoveNode:(node) => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        if (FS.nameTable[hash] === node) {\r\n          FS.nameTable[hash] = node.name_next;\r\n        } else {\r\n          var current = FS.nameTable[hash];\r\n          while (current) {\r\n            if (current.name_next === node) {\r\n              current.name_next = node.name_next;\r\n              break;\r\n            }\r\n            current = current.name_next;\r\n          }\r\n        }\r\n      },lookupNode:(parent, name) => {\r\n        var errCode = FS.mayLookup(parent);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode, parent);\r\n        }\r\n        var hash = FS.hashName(parent.id, name);\r\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n          var nodeName = node.name;\r\n          if (node.parent.id === parent.id && nodeName === name) {\r\n            return node;\r\n          }\r\n        }\r\n        // if we failed to find it in the cache, call into the VFS\r\n        return FS.lookup(parent, name);\r\n      },createNode:(parent, name, mode, rdev) => {\r\n        var node = new FS.FSNode(parent, name, mode, rdev);\r\n  \r\n        FS.hashAddNode(node);\r\n  \r\n        return node;\r\n      },destroyNode:(node) => {\r\n        FS.hashRemoveNode(node);\r\n      },isRoot:(node) => {\r\n        return node === node.parent;\r\n      },isMountpoint:(node) => {\r\n        return !!node.mounted;\r\n      },isFile:(mode) => {\r\n        return (mode & 61440) === 32768;\r\n      },isDir:(mode) => {\r\n        return (mode & 61440) === 16384;\r\n      },isLink:(mode) => {\r\n        return (mode & 61440) === 40960;\r\n      },isChrdev:(mode) => {\r\n        return (mode & 61440) === 8192;\r\n      },isBlkdev:(mode) => {\r\n        return (mode & 61440) === 24576;\r\n      },isFIFO:(mode) => {\r\n        return (mode & 61440) === 4096;\r\n      },isSocket:(mode) => {\r\n        return (mode & 49152) === 49152;\r\n      },flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:(str) => {\r\n        var flags = FS.flagModes[str];\r\n        if (typeof flags == 'undefined') {\r\n          throw new Error('Unknown file open mode: ' + str);\r\n        }\r\n        return flags;\r\n      },flagsToPermissionString:(flag) => {\r\n        var perms = ['r', 'w', 'rw'][flag & 3];\r\n        if ((flag & 512)) {\r\n          perms += 'w';\r\n        }\r\n        return perms;\r\n      },nodePermissions:(node, perms) => {\r\n        if (FS.ignorePermissions) {\r\n          return 0;\r\n        }\r\n        // return 0 if any user, group or owner bits are set.\r\n        if (perms.includes('r') && !(node.mode & 292)) {\r\n          return 2;\r\n        } else if (perms.includes('w') && !(node.mode & 146)) {\r\n          return 2;\r\n        } else if (perms.includes('x') && !(node.mode & 73)) {\r\n          return 2;\r\n        }\r\n        return 0;\r\n      },mayLookup:(dir) => {\r\n        var errCode = FS.nodePermissions(dir, 'x');\r\n        if (errCode) return errCode;\r\n        if (!dir.node_ops.lookup) return 2;\r\n        return 0;\r\n      },mayCreate:(dir, name) => {\r\n        try {\r\n          var node = FS.lookupNode(dir, name);\r\n          return 20;\r\n        } catch (e) {\r\n        }\r\n        return FS.nodePermissions(dir, 'wx');\r\n      },mayDelete:(dir, name, isdir) => {\r\n        var node;\r\n        try {\r\n          node = FS.lookupNode(dir, name);\r\n        } catch (e) {\r\n          return e.errno;\r\n        }\r\n        var errCode = FS.nodePermissions(dir, 'wx');\r\n        if (errCode) {\r\n          return errCode;\r\n        }\r\n        if (isdir) {\r\n          if (!FS.isDir(node.mode)) {\r\n            return 54;\r\n          }\r\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n            return 10;\r\n          }\r\n        } else {\r\n          if (FS.isDir(node.mode)) {\r\n            return 31;\r\n          }\r\n        }\r\n        return 0;\r\n      },mayOpen:(node, flags) => {\r\n        if (!node) {\r\n          return 44;\r\n        }\r\n        if (FS.isLink(node.mode)) {\r\n          return 32;\r\n        } else if (FS.isDir(node.mode)) {\r\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\r\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\r\n            return 31;\r\n          }\r\n        }\r\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\r\n      },MAX_OPEN_FDS:4096,nextfd:(fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\r\n        for (var fd = fd_start; fd <= fd_end; fd++) {\r\n          if (!FS.streams[fd]) {\r\n            return fd;\r\n          }\r\n        }\r\n        throw new FS.ErrnoError(33);\r\n      },getStream:(fd) => FS.streams[fd],createStream:(stream, fd_start, fd_end) => {\r\n        if (!FS.FSStream) {\r\n          FS.FSStream = /** @constructor */ function() {\r\n            this.shared = { };\r\n          };\r\n          FS.FSStream.prototype = {};\r\n          Object.defineProperties(FS.FSStream.prototype, {\r\n            object: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.node; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.node = val; }\r\n            },\r\n            isRead: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 2097155) !== 1; }\r\n            },\r\n            isWrite: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 2097155) !== 0; }\r\n            },\r\n            isAppend: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 1024); }\r\n            },\r\n            flags: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.shared.flags; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.shared.flags = val; },\r\n            },\r\n            position : {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.shared.position; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.shared.position = val; },\r\n            },\r\n          });\r\n        }\r\n        // clone it, so we can return an instance of FSStream\r\n        stream = Object.assign(new FS.FSStream(), stream);\r\n        var fd = FS.nextfd(fd_start, fd_end);\r\n        stream.fd = fd;\r\n        FS.streams[fd] = stream;\r\n        return stream;\r\n      },closeStream:(fd) => {\r\n        FS.streams[fd] = null;\r\n      },chrdev_stream_ops:{open:(stream) => {\r\n          var device = FS.getDevice(stream.node.rdev);\r\n          // override node's stream ops with the device's\r\n          stream.stream_ops = device.stream_ops;\r\n          // forward the open call\r\n          if (stream.stream_ops.open) {\r\n            stream.stream_ops.open(stream);\r\n          }\r\n        },llseek:() => {\r\n          throw new FS.ErrnoError(70);\r\n        }},major:(dev) => ((dev) >> 8),minor:(dev) => ((dev) & 0xff),makedev:(ma, mi) => ((ma) << 8 | (mi)),registerDevice:(dev, ops) => {\r\n        FS.devices[dev] = { stream_ops: ops };\r\n      },getDevice:(dev) => FS.devices[dev],getMounts:(mount) => {\r\n        var mounts = [];\r\n        var check = [mount];\r\n  \r\n        while (check.length) {\r\n          var m = check.pop();\r\n  \r\n          mounts.push(m);\r\n  \r\n          check.push.apply(check, m.mounts);\r\n        }\r\n  \r\n        return mounts;\r\n      },syncfs:(populate, callback) => {\r\n        if (typeof populate == 'function') {\r\n          callback = populate;\r\n          populate = false;\r\n        }\r\n  \r\n        FS.syncFSRequests++;\r\n  \r\n        if (FS.syncFSRequests > 1) {\r\n          err('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');\r\n        }\r\n  \r\n        var mounts = FS.getMounts(FS.root.mount);\r\n        var completed = 0;\r\n  \r\n        function doCallback(errCode) {\r\n          FS.syncFSRequests--;\r\n          return callback(errCode);\r\n        }\r\n  \r\n        function done(errCode) {\r\n          if (errCode) {\r\n            if (!done.errored) {\r\n              done.errored = true;\r\n              return doCallback(errCode);\r\n            }\r\n            return;\r\n          }\r\n          if (++completed >= mounts.length) {\r\n            doCallback(null);\r\n          }\r\n        };\r\n  \r\n        // sync all mounts\r\n        mounts.forEach((mount) => {\r\n          if (!mount.type.syncfs) {\r\n            return done(null);\r\n          }\r\n          mount.type.syncfs(mount, populate, done);\r\n        });\r\n      },mount:(type, opts, mountpoint) => {\r\n        var root = mountpoint === '/';\r\n        var pseudo = !mountpoint;\r\n        var node;\r\n  \r\n        if (root && FS.root) {\r\n          throw new FS.ErrnoError(10);\r\n        } else if (!root && !pseudo) {\r\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n          mountpoint = lookup.path;  // use the absolute path\r\n          node = lookup.node;\r\n  \r\n          if (FS.isMountpoint(node)) {\r\n            throw new FS.ErrnoError(10);\r\n          }\r\n  \r\n          if (!FS.isDir(node.mode)) {\r\n            throw new FS.ErrnoError(54);\r\n          }\r\n        }\r\n  \r\n        var mount = {\r\n          type: type,\r\n          opts: opts,\r\n          mountpoint: mountpoint,\r\n          mounts: []\r\n        };\r\n  \r\n        // create a root node for the fs\r\n        var mountRoot = type.mount(mount);\r\n        mountRoot.mount = mount;\r\n        mount.root = mountRoot;\r\n  \r\n        if (root) {\r\n          FS.root = mountRoot;\r\n        } else if (node) {\r\n          // set as a mountpoint\r\n          node.mounted = mount;\r\n  \r\n          // add the new mount to the current mount's children\r\n          if (node.mount) {\r\n            node.mount.mounts.push(mount);\r\n          }\r\n        }\r\n  \r\n        return mountRoot;\r\n      },unmount:(mountpoint) => {\r\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n        if (!FS.isMountpoint(lookup.node)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n  \r\n        // destroy the nodes for this mount, and all its child mounts\r\n        var node = lookup.node;\r\n        var mount = node.mounted;\r\n        var mounts = FS.getMounts(mount);\r\n  \r\n        Object.keys(FS.nameTable).forEach((hash) => {\r\n          var current = FS.nameTable[hash];\r\n  \r\n          while (current) {\r\n            var next = current.name_next;\r\n  \r\n            if (mounts.includes(current.mount)) {\r\n              FS.destroyNode(current);\r\n            }\r\n  \r\n            current = next;\r\n          }\r\n        });\r\n  \r\n        // no longer a mountpoint\r\n        node.mounted = null;\r\n  \r\n        // remove this mount from the child mounts\r\n        var idx = node.mount.mounts.indexOf(mount);\r\n        node.mount.mounts.splice(idx, 1);\r\n      },lookup:(parent, name) => {\r\n        return parent.node_ops.lookup(parent, name);\r\n      },mknod:(path, mode, dev) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        if (!name || name === '.' || name === '..') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.mayCreate(parent, name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.mknod) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.mknod(parent, name, mode, dev);\r\n      },create:(path, mode) => {\r\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\r\n        mode &= 4095;\r\n        mode |= 32768;\r\n        return FS.mknod(path, mode, 0);\r\n      },mkdir:(path, mode) => {\r\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\r\n        mode &= 511 | 512;\r\n        mode |= 16384;\r\n        return FS.mknod(path, mode, 0);\r\n      },mkdirTree:(path, mode) => {\r\n        var dirs = path.split('/');\r\n        var d = '';\r\n        for (var i = 0; i < dirs.length; ++i) {\r\n          if (!dirs[i]) continue;\r\n          d += '/' + dirs[i];\r\n          try {\r\n            FS.mkdir(d, mode);\r\n          } catch(e) {\r\n            if (e.errno != 20) throw e;\r\n          }\r\n        }\r\n      },mkdev:(path, mode, dev) => {\r\n        if (typeof dev == 'undefined') {\r\n          dev = mode;\r\n          mode = 438 /* 0666 */;\r\n        }\r\n        mode |= 8192;\r\n        return FS.mknod(path, mode, dev);\r\n      },symlink:(oldpath, newpath) => {\r\n        if (!PATH_FS.resolve(oldpath)) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var lookup = FS.lookupPath(newpath, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var newname = PATH.basename(newpath);\r\n        var errCode = FS.mayCreate(parent, newname);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.symlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.symlink(parent, newname, oldpath);\r\n      },rename:(old_path, new_path) => {\r\n        var old_dirname = PATH.dirname(old_path);\r\n        var new_dirname = PATH.dirname(new_path);\r\n        var old_name = PATH.basename(old_path);\r\n        var new_name = PATH.basename(new_path);\r\n        // parents must exist\r\n        var lookup, old_dir, new_dir;\r\n  \r\n        // let the errors from non existant directories percolate up\r\n        lookup = FS.lookupPath(old_path, { parent: true });\r\n        old_dir = lookup.node;\r\n        lookup = FS.lookupPath(new_path, { parent: true });\r\n        new_dir = lookup.node;\r\n  \r\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\r\n        // need to be part of the same mount\r\n        if (old_dir.mount !== new_dir.mount) {\r\n          throw new FS.ErrnoError(75);\r\n        }\r\n        // source must exist\r\n        var old_node = FS.lookupNode(old_dir, old_name);\r\n        // old path should not be an ancestor of the new path\r\n        var relative = PATH_FS.relative(old_path, new_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        // new path should not be an ancestor of the old path\r\n        relative = PATH_FS.relative(new_path, old_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(55);\r\n        }\r\n        // see if the new path already exists\r\n        var new_node;\r\n        try {\r\n          new_node = FS.lookupNode(new_dir, new_name);\r\n        } catch (e) {\r\n          // not fatal\r\n        }\r\n        // early out if nothing needs to change\r\n        if (old_node === new_node) {\r\n          return;\r\n        }\r\n        // we'll need to delete the old entry\r\n        var isdir = FS.isDir(old_node.mode);\r\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        // need delete permissions if we'll be overwriting.\r\n        // need create permissions if new doesn't already exist.\r\n        errCode = new_node ?\r\n          FS.mayDelete(new_dir, new_name, isdir) :\r\n          FS.mayCreate(new_dir, new_name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!old_dir.node_ops.rename) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        // if we are going to change the parent, check write permissions\r\n        if (new_dir !== old_dir) {\r\n          errCode = FS.nodePermissions(old_dir, 'w');\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // remove the node from the lookup hash\r\n        FS.hashRemoveNode(old_node);\r\n        // do the underlying fs rename\r\n        try {\r\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          // add the node back to the hash (in case node_ops.rename\r\n          // changed its name)\r\n          FS.hashAddNode(old_node);\r\n        }\r\n      },rmdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, true);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.rmdir) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.rmdir(parent, name);\r\n        FS.destroyNode(node);\r\n      },readdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        if (!node.node_ops.readdir) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        return node.node_ops.readdir(node);\r\n      },unlink:(path) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, false);\r\n        if (errCode) {\r\n          // According to POSIX, we should map EISDIR to EPERM, but\r\n          // we instead do what Linux does (and we must, as we use\r\n          // the musl linux libc).\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.unlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.unlink(parent, name);\r\n        FS.destroyNode(node);\r\n      },readlink:(path) => {\r\n        var lookup = FS.lookupPath(path);\r\n        var link = lookup.node;\r\n        if (!link) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!link.node_ops.readlink) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\r\n      },stat:(path, dontFollow) => {\r\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n        var node = lookup.node;\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!node.node_ops.getattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return node.node_ops.getattr(node);\r\n      },lstat:(path) => {\r\n        return FS.stat(path, true);\r\n      },chmod:(path, mode, dontFollow) => {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          mode: (mode & 4095) | (node.mode & ~4095),\r\n          timestamp: Date.now()\r\n        });\r\n      },lchmod:(path, mode) => {\r\n        FS.chmod(path, mode, true);\r\n      },fchmod:(fd, mode) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        FS.chmod(stream.node, mode);\r\n      },chown:(path, uid, gid, dontFollow) => {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Date.now()\r\n          // we ignore the uid / gid for now\r\n        });\r\n      },lchown:(path, uid, gid) => {\r\n        FS.chown(path, uid, gid, true);\r\n      },fchown:(fd, uid, gid) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        FS.chown(stream.node, uid, gid);\r\n      },truncate:(path, len) => {\r\n        if (len < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: true });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!FS.isFile(node.mode)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.nodePermissions(node, 'w');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          size: len,\r\n          timestamp: Date.now()\r\n        });\r\n      },ftruncate:(fd, len) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        FS.truncate(stream.node, len);\r\n      },utime:(path, atime, mtime) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Math.max(atime, mtime)\r\n        });\r\n      },open:(path, flags, mode) => {\r\n        if (path === \"\") {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\r\n        mode = typeof mode == 'undefined' ? 438 /* 0666 */ : mode;\r\n        if ((flags & 64)) {\r\n          mode = (mode & 4095) | 32768;\r\n        } else {\r\n          mode = 0;\r\n        }\r\n        var node;\r\n        if (typeof path == 'object') {\r\n          node = path;\r\n        } else {\r\n          path = PATH.normalize(path);\r\n          try {\r\n            var lookup = FS.lookupPath(path, {\r\n              follow: !(flags & 131072)\r\n            });\r\n            node = lookup.node;\r\n          } catch (e) {\r\n            // ignore\r\n          }\r\n        }\r\n        // perhaps we need to create the node\r\n        var created = false;\r\n        if ((flags & 64)) {\r\n          if (node) {\r\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\r\n            if ((flags & 128)) {\r\n              throw new FS.ErrnoError(20);\r\n            }\r\n          } else {\r\n            // node doesn't exist, try to create it\r\n            node = FS.mknod(path, mode, 0);\r\n            created = true;\r\n          }\r\n        }\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        // can't truncate a device\r\n        if (FS.isChrdev(node.mode)) {\r\n          flags &= ~512;\r\n        }\r\n        // if asked only for a directory, then this must be one\r\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        // check permissions, if this is not a file we just created now (it is ok to\r\n        // create and write to a file with read-only permissions; it is read-only\r\n        // for later use)\r\n        if (!created) {\r\n          var errCode = FS.mayOpen(node, flags);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // do truncation if necessary\r\n        if ((flags & 512) && !created) {\r\n          FS.truncate(node, 0);\r\n        }\r\n        // we've already handled these, don't pass down to the underlying vfs\r\n        flags &= ~(128 | 512 | 131072);\r\n  \r\n        // register the stream with the filesystem\r\n        var stream = FS.createStream({\r\n          node: node,\r\n          path: FS.getPath(node),  // we want the absolute path to the node\r\n          flags: flags,\r\n          seekable: true,\r\n          position: 0,\r\n          stream_ops: node.stream_ops,\r\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\r\n          ungotten: [],\r\n          error: false\r\n        });\r\n        // call the new stream's open function\r\n        if (stream.stream_ops.open) {\r\n          stream.stream_ops.open(stream);\r\n        }\r\n        if (Module['logReadFiles'] && !(flags & 1)) {\r\n          if (!FS.readFiles) FS.readFiles = {};\r\n          if (!(path in FS.readFiles)) {\r\n            FS.readFiles[path] = 1;\r\n          }\r\n        }\r\n        return stream;\r\n      },close:(stream) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (stream.getdents) stream.getdents = null; // free readdir state\r\n        try {\r\n          if (stream.stream_ops.close) {\r\n            stream.stream_ops.close(stream);\r\n          }\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          FS.closeStream(stream.fd);\r\n        }\r\n        stream.fd = null;\r\n      },isClosed:(stream) => {\r\n        return stream.fd === null;\r\n      },llseek:(stream, offset, whence) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!stream.seekable || !stream.stream_ops.llseek) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        if (whence != 0 && whence != 1 && whence != 2) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n        stream.ungotten = [];\r\n        return stream.position;\r\n      },read:(stream, buffer, offset, length, position) => {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.read) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n        if (!seeking) stream.position += bytesRead;\r\n        return bytesRead;\r\n      },write:(stream, buffer, offset, length, position, canOwn) => {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.write) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (stream.seekable && stream.flags & 1024) {\r\n          // seek to the end before writing in append mode\r\n          FS.llseek(stream, 0, 2);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n        if (!seeking) stream.position += bytesWritten;\r\n        return bytesWritten;\r\n      },allocate:(stream, offset, length) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (offset < 0 || length <= 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (!stream.stream_ops.allocate) {\r\n          throw new FS.ErrnoError(138);\r\n        }\r\n        stream.stream_ops.allocate(stream, offset, length);\r\n      },mmap:(stream, length, position, prot, flags) => {\r\n        // User requests writing to file (prot & PROT_WRITE != 0).\r\n        // Checking if we have permissions to write to the file unless\r\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\r\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\r\n        // as all modifications will be visible only in the memory of\r\n        // the current process.\r\n        if ((prot & 2) !== 0\r\n            && (flags & 2) === 0\r\n            && (stream.flags & 2097155) !== 2) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if (!stream.stream_ops.mmap) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\r\n      },msync:(stream, buffer, offset, length, mmapFlags) => {\r\n        if (!stream.stream_ops.msync) {\r\n          return 0;\r\n        }\r\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\r\n      },munmap:(stream) => 0,ioctl:(stream, cmd, arg) => {\r\n        if (!stream.stream_ops.ioctl) {\r\n          throw new FS.ErrnoError(59);\r\n        }\r\n        return stream.stream_ops.ioctl(stream, cmd, arg);\r\n      },readFile:(path, opts = {}) => {\r\n        opts.flags = opts.flags || 0;\r\n        opts.encoding = opts.encoding || 'binary';\r\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\r\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\r\n        }\r\n        var ret;\r\n        var stream = FS.open(path, opts.flags);\r\n        var stat = FS.stat(path);\r\n        var length = stat.size;\r\n        var buf = new Uint8Array(length);\r\n        FS.read(stream, buf, 0, length, 0);\r\n        if (opts.encoding === 'utf8') {\r\n          ret = UTF8ArrayToString(buf, 0);\r\n        } else if (opts.encoding === 'binary') {\r\n          ret = buf;\r\n        }\r\n        FS.close(stream);\r\n        return ret;\r\n      },writeFile:(path, data, opts = {}) => {\r\n        opts.flags = opts.flags || 577;\r\n        var stream = FS.open(path, opts.flags, opts.mode);\r\n        if (typeof data == 'string') {\r\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\r\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\r\n        } else if (ArrayBuffer.isView(data)) {\r\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\r\n        } else {\r\n          throw new Error('Unsupported data type');\r\n        }\r\n        FS.close(stream);\r\n      },cwd:() => FS.currentPath,chdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        if (lookup.node === null) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!FS.isDir(lookup.node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        var errCode = FS.nodePermissions(lookup.node, 'x');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        FS.currentPath = lookup.path;\r\n      },createDefaultDirectories:() => {\r\n        FS.mkdir('/tmp');\r\n        FS.mkdir('/home');\r\n        FS.mkdir('/home/web_user');\r\n      },createDefaultDevices:() => {\r\n        // create /dev\r\n        FS.mkdir('/dev');\r\n        // setup /dev/null\r\n        FS.registerDevice(FS.makedev(1, 3), {\r\n          read: () => 0,\r\n          write: (stream, buffer, offset, length, pos) => length,\r\n        });\r\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\r\n        // setup /dev/tty and /dev/tty1\r\n        // stderr needs to print output using err() rather than out()\r\n        // so we register a second tty just for it.\r\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\r\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\r\n        // setup /dev/[u]random\r\n        // use a buffer to avoid overhead of individual crypto calls per byte\r\n        var randomBuffer = new Uint8Array(1024), randomLeft = 0;\r\n        var randomByte = () => {\r\n          if (randomLeft === 0) {\r\n            randomLeft = randomFill(randomBuffer).byteLength;\r\n          }\r\n          return randomBuffer[--randomLeft];\r\n        };\r\n        FS.createDevice('/dev', 'random', randomByte);\r\n        FS.createDevice('/dev', 'urandom', randomByte);\r\n        // we're not going to emulate the actual shm device,\r\n        // just create the tmp dirs that reside in it commonly\r\n        FS.mkdir('/dev/shm');\r\n        FS.mkdir('/dev/shm/tmp');\r\n      },createSpecialDirectories:() => {\r\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\r\n        // name of the stream for fd 6 (see test_unistd_ttyname)\r\n        FS.mkdir('/proc');\r\n        var proc_self = FS.mkdir('/proc/self');\r\n        FS.mkdir('/proc/self/fd');\r\n        FS.mount({\r\n          mount: () => {\r\n            var node = FS.createNode(proc_self, 'fd', 16384 | 511 /* 0777 */, 73);\r\n            node.node_ops = {\r\n              lookup: (parent, name) => {\r\n                var fd = +name;\r\n                var stream = FS.getStream(fd);\r\n                if (!stream) throw new FS.ErrnoError(8);\r\n                var ret = {\r\n                  parent: null,\r\n                  mount: { mountpoint: 'fake' },\r\n                  node_ops: { readlink: () => stream.path },\r\n                };\r\n                ret.parent = ret; // make it look like a simple root node\r\n                return ret;\r\n              }\r\n            };\r\n            return node;\r\n          }\r\n        }, {}, '/proc/self/fd');\r\n      },createStandardStreams:() => {\r\n        // TODO deprecate the old functionality of a single\r\n        // input / output callback and that utilizes FS.createDevice\r\n        // and instead require a unique set of stream ops\r\n  \r\n        // by default, we symlink the standard streams to the\r\n        // default tty devices. however, if the standard streams\r\n        // have been overwritten we create a unique device for\r\n        // them instead.\r\n        if (Module['stdin']) {\r\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdin');\r\n        }\r\n        if (Module['stdout']) {\r\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdout');\r\n        }\r\n        if (Module['stderr']) {\r\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\r\n        } else {\r\n          FS.symlink('/dev/tty1', '/dev/stderr');\r\n        }\r\n  \r\n        // open default streams for the stdin, stdout and stderr devices\r\n        var stdin = FS.open('/dev/stdin', 0);\r\n        var stdout = FS.open('/dev/stdout', 1);\r\n        var stderr = FS.open('/dev/stderr', 1);\r\n      },ensureErrnoError:() => {\r\n        if (FS.ErrnoError) return;\r\n        FS.ErrnoError = /** @this{Object} */ function ErrnoError(errno, node) {\r\n          // We set the `name` property to be able to identify `FS.ErrnoError`\r\n          // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\r\n          // - when using PROXYFS, an error can come from an underlying FS\r\n          // as different FS objects have their own FS.ErrnoError each,\r\n          // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\r\n          // we'll use the reliable test `err.name == \"ErrnoError\"` instead\r\n          this.name = 'ErrnoError';\r\n          this.node = node;\r\n          this.setErrno = /** @this{Object} */ function(errno) {\r\n            this.errno = errno;\r\n          };\r\n          this.setErrno(errno);\r\n          this.message = 'FS error';\r\n  \r\n        };\r\n        FS.ErrnoError.prototype = new Error();\r\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\r\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\r\n        [44].forEach((code) => {\r\n          FS.genericErrors[code] = new FS.ErrnoError(code);\r\n          FS.genericErrors[code].stack = '<generic error, no stack>';\r\n        });\r\n      },staticInit:() => {\r\n        FS.ensureErrnoError();\r\n  \r\n        FS.nameTable = new Array(4096);\r\n  \r\n        FS.mount(MEMFS, {}, '/');\r\n  \r\n        FS.createDefaultDirectories();\r\n        FS.createDefaultDevices();\r\n        FS.createSpecialDirectories();\r\n  \r\n        FS.filesystems = {\r\n          'MEMFS': MEMFS,\r\n          'IDBFS': IDBFS,\r\n        };\r\n      },init:(input, output, error) => {\r\n        FS.init.initialized = true;\r\n  \r\n        FS.ensureErrnoError();\r\n  \r\n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\r\n        Module['stdin'] = input || Module['stdin'];\r\n        Module['stdout'] = output || Module['stdout'];\r\n        Module['stderr'] = error || Module['stderr'];\r\n  \r\n        FS.createStandardStreams();\r\n      },quit:() => {\r\n        FS.init.initialized = false;\r\n        // force-flush all streams, so we get musl std streams printed out\r\n        // close all of our streams\r\n        for (var i = 0; i < FS.streams.length; i++) {\r\n          var stream = FS.streams[i];\r\n          if (!stream) {\r\n            continue;\r\n          }\r\n          FS.close(stream);\r\n        }\r\n      },getMode:(canRead, canWrite) => {\r\n        var mode = 0;\r\n        if (canRead) mode |= 292 | 73;\r\n        if (canWrite) mode |= 146;\r\n        return mode;\r\n      },findObject:(path, dontResolveLastLink) => {\r\n        var ret = FS.analyzePath(path, dontResolveLastLink);\r\n        if (!ret.exists) {\r\n          return null;\r\n        }\r\n        return ret.object;\r\n      },analyzePath:(path, dontResolveLastLink) => {\r\n        // operate from within the context of the symlink's target\r\n        try {\r\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          path = lookup.path;\r\n        } catch (e) {\r\n        }\r\n        var ret = {\r\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\r\n          parentExists: false, parentPath: null, parentObject: null\r\n        };\r\n        try {\r\n          var lookup = FS.lookupPath(path, { parent: true });\r\n          ret.parentExists = true;\r\n          ret.parentPath = lookup.path;\r\n          ret.parentObject = lookup.node;\r\n          ret.name = PATH.basename(path);\r\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          ret.exists = true;\r\n          ret.path = lookup.path;\r\n          ret.object = lookup.node;\r\n          ret.name = lookup.node.name;\r\n          ret.isRoot = lookup.path === '/';\r\n        } catch (e) {\r\n          ret.error = e.errno;\r\n        };\r\n        return ret;\r\n      },createPath:(parent, path, canRead, canWrite) => {\r\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n        var parts = path.split('/').reverse();\r\n        while (parts.length) {\r\n          var part = parts.pop();\r\n          if (!part) continue;\r\n          var current = PATH.join2(parent, part);\r\n          try {\r\n            FS.mkdir(current);\r\n          } catch (e) {\r\n            // ignore EEXIST\r\n          }\r\n          parent = current;\r\n        }\r\n        return current;\r\n      },createFile:(parent, name, properties, canRead, canWrite) => {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS.getMode(canRead, canWrite);\r\n        return FS.create(path, mode);\r\n      },createDataFile:(parent, name, data, canRead, canWrite, canOwn) => {\r\n        var path = name;\r\n        if (parent) {\r\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n          path = name ? PATH.join2(parent, name) : parent;\r\n        }\r\n        var mode = FS.getMode(canRead, canWrite);\r\n        var node = FS.create(path, mode);\r\n        if (data) {\r\n          if (typeof data == 'string') {\r\n            var arr = new Array(data.length);\r\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n            data = arr;\r\n          }\r\n          // make sure we can write to the file\r\n          FS.chmod(node, mode | 146);\r\n          var stream = FS.open(node, 577);\r\n          FS.write(stream, data, 0, data.length, 0, canOwn);\r\n          FS.close(stream);\r\n          FS.chmod(node, mode);\r\n        }\r\n        return node;\r\n      },createDevice:(parent, name, input, output) => {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS.getMode(!!input, !!output);\r\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\r\n        var dev = FS.makedev(FS.createDevice.major++, 0);\r\n        // Create a fake device that a set of stream ops to emulate\r\n        // the old behavior.\r\n        FS.registerDevice(dev, {\r\n          open: (stream) => {\r\n            stream.seekable = false;\r\n          },\r\n          close: (stream) => {\r\n            // flush any pending line data\r\n            if (output && output.buffer && output.buffer.length) {\r\n              output(10);\r\n            }\r\n          },\r\n          read: (stream, buffer, offset, length, pos /* ignored */) => {\r\n            var bytesRead = 0;\r\n            for (var i = 0; i < length; i++) {\r\n              var result;\r\n              try {\r\n                result = input();\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n              if (result === undefined && bytesRead === 0) {\r\n                throw new FS.ErrnoError(6);\r\n              }\r\n              if (result === null || result === undefined) break;\r\n              bytesRead++;\r\n              buffer[offset+i] = result;\r\n            }\r\n            if (bytesRead) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return bytesRead;\r\n          },\r\n          write: (stream, buffer, offset, length, pos) => {\r\n            for (var i = 0; i < length; i++) {\r\n              try {\r\n                output(buffer[offset+i]);\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n            }\r\n            if (length) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return i;\r\n          }\r\n        });\r\n        return FS.mkdev(path, mode, dev);\r\n      },forceLoadFile:(obj) => {\r\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\r\n        } else if (read_) {\r\n          // Command-line.\r\n          try {\r\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\r\n            //          read() will try to parse UTF8.\r\n            obj.contents = intArrayFromString(read_(obj.url), true);\r\n            obj.usedBytes = obj.contents.length;\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n        } else {\r\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\r\n        }\r\n      },createLazyFile:(parent, name, url, canRead, canWrite) => {\r\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\r\n        /** @constructor */\r\n        function LazyUint8Array() {\r\n          this.lengthKnown = false;\r\n          this.chunks = []; // Loaded chunks. Index is the chunk number\r\n        }\r\n        LazyUint8Array.prototype.get = /** @this{Object} */ function LazyUint8Array_get(idx) {\r\n          if (idx > this.length-1 || idx < 0) {\r\n            return undefined;\r\n          }\r\n          var chunkOffset = idx % this.chunkSize;\r\n          var chunkNum = (idx / this.chunkSize)|0;\r\n          return this.getter(chunkNum)[chunkOffset];\r\n        };\r\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\r\n          this.getter = getter;\r\n        };\r\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\r\n          // Find length\r\n          var xhr = new XMLHttpRequest();\r\n          xhr.open('HEAD', url, false);\r\n          xhr.send(null);\r\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n          var header;\r\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n  \r\n          var chunkSize = 1024*1024; // Chunk size in bytes\r\n  \r\n          if (!hasByteServing) chunkSize = datalength;\r\n  \r\n          // Function to get a range from the remote URL.\r\n          var doXHR = (from, to) => {\r\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n  \r\n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url, false);\r\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n  \r\n            // Some hints to the browser that we want binary data.\r\n            xhr.responseType = 'arraybuffer';\r\n            if (xhr.overrideMimeType) {\r\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\r\n            }\r\n  \r\n            xhr.send(null);\r\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n            if (xhr.response !== undefined) {\r\n              return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\r\n            }\r\n            return intArrayFromString(xhr.responseText || '', true);\r\n          };\r\n          var lazyArray = this;\r\n          lazyArray.setDataGetter((chunkNum) => {\r\n            var start = chunkNum * chunkSize;\r\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\r\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\r\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\r\n            }\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\r\n            return lazyArray.chunks[chunkNum];\r\n          });\r\n  \r\n          if (usesGzip || !datalength) {\r\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\r\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\r\n            datalength = this.getter(0).length;\r\n            chunkSize = datalength;\r\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\r\n          }\r\n  \r\n          this._length = datalength;\r\n          this._chunkSize = chunkSize;\r\n          this.lengthKnown = true;\r\n        };\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\r\n          var lazyArray = new LazyUint8Array();\r\n          Object.defineProperties(lazyArray, {\r\n            length: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._length;\r\n              }\r\n            },\r\n            chunkSize: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._chunkSize;\r\n              }\r\n            }\r\n          });\r\n  \r\n          var properties = { isDevice: false, contents: lazyArray };\r\n        } else {\r\n          var properties = { isDevice: false, url: url };\r\n        }\r\n  \r\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n        // This is a total hack, but I want to get this lazy file code out of the\r\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\r\n        // be its own thin LAZYFS proxying calls to MEMFS.\r\n        if (properties.contents) {\r\n          node.contents = properties.contents;\r\n        } else if (properties.url) {\r\n          node.contents = null;\r\n          node.url = properties.url;\r\n        }\r\n        // Add a function that defers querying the file size until it is asked the first time.\r\n        Object.defineProperties(node, {\r\n          usedBytes: {\r\n            get: /** @this {FSNode} */ function() { return this.contents.length; }\r\n          }\r\n        });\r\n        // override each stream op with one that tries to force load the lazy file first\r\n        var stream_ops = {};\r\n        var keys = Object.keys(node.stream_ops);\r\n        keys.forEach((key) => {\r\n          var fn = node.stream_ops[key];\r\n          stream_ops[key] = function forceLoadLazyFile() {\r\n            FS.forceLoadFile(node);\r\n            return fn.apply(null, arguments);\r\n          };\r\n        });\r\n        function writeChunks(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= contents.length)\r\n            return 0;\r\n          var size = Math.min(contents.length - position, length);\r\n          if (contents.slice) { // normal array\r\n            for (var i = 0; i < size; i++) {\r\n              buffer[offset + i] = contents[position + i];\r\n            }\r\n          } else {\r\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\r\n              buffer[offset + i] = contents.get(position + i);\r\n            }\r\n          }\r\n          return size;\r\n        }\r\n        // use a custom read function\r\n        stream_ops.read = (stream, buffer, offset, length, position) => {\r\n          FS.forceLoadFile(node);\r\n          return writeChunks(stream, buffer, offset, length, position)\r\n        };\r\n        // use a custom mmap function\r\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\r\n          FS.forceLoadFile(node);\r\n          var ptr = mmapAlloc(length);\r\n          if (!ptr) {\r\n            throw new FS.ErrnoError(48);\r\n          }\r\n          writeChunks(stream, HEAP8, ptr, length, position);\r\n          return { ptr: ptr, allocated: true };\r\n        };\r\n        node.stream_ops = stream_ops;\r\n        return node;\r\n      },createPreloadedFile:(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\r\n        // TODO we should allow people to just pass in a complete filename instead\r\n        // of parent and name being that we just join them anyways\r\n        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\r\n        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname\r\n        function processData(byteArray) {\r\n          function finish(byteArray) {\r\n            if (preFinish) preFinish();\r\n            if (!dontCreateFile) {\r\n              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\r\n            }\r\n            if (onload) onload();\r\n            removeRunDependency(dep);\r\n          }\r\n          if (Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\r\n            if (onerror) onerror();\r\n            removeRunDependency(dep);\r\n          })) {\r\n            return;\r\n          }\r\n          finish(byteArray);\r\n        }\r\n        addRunDependency(dep);\r\n        if (typeof url == 'string') {\r\n          asyncLoad(url, (byteArray) => processData(byteArray), onerror);\r\n        } else {\r\n          processData(url);\r\n        }\r\n      }};\r\n  \r\n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\r\n  \r\n    /**\r\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\r\n     * array that contains uint8 values, returns a copy of that string as a\r\n     * Javascript String object.\r\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\r\n     * @param {number} idx\r\n     * @param {number=} maxBytesToRead\r\n     * @return {string}\r\n     */\r\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\r\n      var endIdx = idx + maxBytesToRead;\r\n      var endPtr = idx;\r\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\r\n      // null terminator by itself.  Also, use the length info to avoid running tiny\r\n      // strings through TextDecoder, since .subarray() allocates garbage.\r\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\r\n      // so that undefined means Infinity)\r\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n  \r\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\r\n      }\r\n      var str = '';\r\n      // If building with TextDecoder, we have already computed the string length\r\n      // above, so test loop end condition against that\r\n      while (idx < endPtr) {\r\n        // For UTF8 byte structure, see:\r\n        // http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // https://www.ietf.org/rfc/rfc2279.txt\r\n        // https://tools.ietf.org/html/rfc3629\r\n        var u0 = heapOrArray[idx++];\r\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\r\n        var u1 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\r\n        var u2 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xF0) == 0xE0) {\r\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n        } else {\r\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\r\n        }\r\n  \r\n        if (u0 < 0x10000) {\r\n          str += String.fromCharCode(u0);\r\n        } else {\r\n          var ch = u0 - 0x10000;\r\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n        }\r\n      }\r\n      return str;\r\n    }\r\n  \r\n  \r\n    /**\r\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\r\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\r\n     *\r\n     * @param {number} ptr\r\n     * @param {number=} maxBytesToRead - An optional length that specifies the\r\n     *   maximum number of bytes to read. You can omit this parameter to scan the\r\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\r\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\r\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\r\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\r\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\r\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\r\n     * @return {string}\r\n     */\r\n  function UTF8ToString(ptr, maxBytesToRead) {\r\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\r\n    }\r\n  var SYSCALLS = {DEFAULT_POLLMASK:5,calculateAt:function(dirfd, path, allowEmpty) {\r\n        if (PATH.isAbs(path)) {\r\n          return path;\r\n        }\r\n        // relative path\r\n        var dir;\r\n        if (dirfd === -100) {\r\n          dir = FS.cwd();\r\n        } else {\r\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\r\n          dir = dirstream.path;\r\n        }\r\n        if (path.length == 0) {\r\n          if (!allowEmpty) {\r\n            throw new FS.ErrnoError(44);;\r\n          }\r\n          return dir;\r\n        }\r\n        return PATH.join2(dir, path);\r\n      },doStat:function(func, path, buf) {\r\n        try {\r\n          var stat = func(path);\r\n        } catch (e) {\r\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\r\n            // an error occurred while trying to look up the path; we should just report ENOTDIR\r\n            return -54;\r\n          }\r\n          throw e;\r\n        }\r\n        HEAP32[((buf)>>2)] = stat.dev;\r\n        HEAP32[(((buf)+(8))>>2)] = stat.ino;\r\n        HEAP32[(((buf)+(12))>>2)] = stat.mode;\r\n        HEAPU32[(((buf)+(16))>>2)] = stat.nlink;\r\n        HEAP32[(((buf)+(20))>>2)] = stat.uid;\r\n        HEAP32[(((buf)+(24))>>2)] = stat.gid;\r\n        HEAP32[(((buf)+(28))>>2)] = stat.rdev;\r\n        (tempI64 = [stat.size>>>0,(tempDouble=stat.size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(40))>>2)] = tempI64[0],HEAP32[(((buf)+(44))>>2)] = tempI64[1]);\r\n        HEAP32[(((buf)+(48))>>2)] = 4096;\r\n        HEAP32[(((buf)+(52))>>2)] = stat.blocks;\r\n        var atime = stat.atime.getTime();\r\n        var mtime = stat.mtime.getTime();\r\n        var ctime = stat.ctime.getTime();\r\n        (tempI64 = [Math.floor(atime / 1000)>>>0,(tempDouble=Math.floor(atime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(56))>>2)] = tempI64[0],HEAP32[(((buf)+(60))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(64))>>2)] = (atime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(mtime / 1000)>>>0,(tempDouble=Math.floor(mtime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(72))>>2)] = tempI64[0],HEAP32[(((buf)+(76))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(80))>>2)] = (mtime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(ctime / 1000)>>>0,(tempDouble=Math.floor(ctime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(88))>>2)] = tempI64[0],HEAP32[(((buf)+(92))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(96))>>2)] = (ctime % 1000) * 1000;\r\n        (tempI64 = [stat.ino>>>0,(tempDouble=stat.ino,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(104))>>2)] = tempI64[0],HEAP32[(((buf)+(108))>>2)] = tempI64[1]);\r\n        return 0;\r\n      },doMsync:function(addr, stream, len, flags, offset) {\r\n        if (!FS.isFile(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (flags & 2) {\r\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\r\n          return 0;\r\n        }\r\n        var buffer = HEAPU8.slice(addr, addr + len);\r\n        FS.msync(stream, buffer, offset, len, flags);\r\n      },varargs:undefined,get:function() {\r\n        SYSCALLS.varargs += 4;\r\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\r\n        return ret;\r\n      },getStr:function(ptr) {\r\n        var ret = UTF8ToString(ptr);\r\n        return ret;\r\n      },getStreamFromFD:function(fd) {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) throw new FS.ErrnoError(8);\r\n        return stream;\r\n      }};\r\n  function ___syscall_chmod(path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.chmod(path, mode);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fchmod(fd, mode) {\r\n  try {\r\n  \r\n      FS.fchmod(fd, mode);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function setErrNo(value) {\r\n      HEAP32[((___errno_location())>>2)] = value;\r\n      return value;\r\n    }\r\n  \r\n  function ___syscall_fcntl64(fd, cmd, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (cmd) {\r\n        case 0: {\r\n          var arg = SYSCALLS.get();\r\n          if (arg < 0) {\r\n            return -28;\r\n          }\r\n          var newStream;\r\n          newStream = FS.createStream(stream, arg);\r\n          return newStream.fd;\r\n        }\r\n        case 1:\r\n        case 2:\r\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\r\n        case 3:\r\n          return stream.flags;\r\n        case 4: {\r\n          var arg = SYSCALLS.get();\r\n          stream.flags |= arg;\r\n          return 0;\r\n        }\r\n        case 5:\r\n        /* case 5: Currently in musl F_GETLK64 has same value as F_GETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */ {\r\n          \r\n          var arg = SYSCALLS.get();\r\n          var offset = 0;\r\n          // We're always unlocked.\r\n          HEAP16[(((arg)+(offset))>>1)] = 2;\r\n          return 0;\r\n        }\r\n        case 6:\r\n        case 7:\r\n        /* case 6: Currently in musl F_SETLK64 has same value as F_SETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\r\n        /* case 7: Currently in musl F_SETLKW64 has same value as F_SETLKW, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\r\n          \r\n          \r\n          return 0; // Pretend that the locking is successful.\r\n        case 16:\r\n        case 8:\r\n          return -28; // These are for sockets. We don't have them fully implemented yet.\r\n        case 9:\r\n          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fcntl() returns that, and we set errno ourselves.\r\n          setErrNo(28);\r\n          return -1;\r\n        default: {\r\n          return -28;\r\n        }\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fstat64(fd, buf) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      return SYSCALLS.doStat(FS.stat, stream.path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function convertI32PairToI53Checked(lo, hi) {\r\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  function ___syscall_ftruncate64(fd, length_low, length_high) {\r\n  try {\r\n  \r\n      var length = convertI32PairToI53Checked(length_low, length_high); if (isNaN(length)) return -61;\r\n      FS.ftruncate(fd, length);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n      return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\r\n    }\r\n  \r\n  function ___syscall_getcwd(buf, size) {\r\n  try {\r\n  \r\n      if (size === 0) return -28;\r\n      var cwd = FS.cwd();\r\n      var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\r\n      if (size < cwdLengthInBytes) return -68;\r\n      stringToUTF8(cwd, buf, size);\r\n      return cwdLengthInBytes;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function ___syscall_getdents64(fd, dirp, count) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd)\r\n      if (!stream.getdents) {\r\n        stream.getdents = FS.readdir(stream.path);\r\n      }\r\n  \r\n      var struct_size = 280;\r\n      var pos = 0;\r\n      var off = FS.llseek(stream, 0, 1);\r\n  \r\n      var idx = Math.floor(off / struct_size);\r\n  \r\n      while (idx < stream.getdents.length && pos + struct_size <= count) {\r\n        var id;\r\n        var type;\r\n        var name = stream.getdents[idx];\r\n        if (name === '.') {\r\n          id = stream.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else if (name === '..') {\r\n          var lookup = FS.lookupPath(stream.path, { parent: true });\r\n          id = lookup.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else {\r\n          var child = FS.lookupNode(stream.node, name);\r\n          id = child.id;\r\n          type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.\r\n                 FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.\r\n                 FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.\r\n                 8;                             // DT_REG, regular file.\r\n        }\r\n        (tempI64 = [id>>>0,(tempDouble=id,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((dirp + pos)>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(4))>>2)] = tempI64[1]);\r\n        (tempI64 = [(idx + 1) * struct_size>>>0,(tempDouble=(idx + 1) * struct_size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((dirp + pos)+(8))>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(12))>>2)] = tempI64[1]);\r\n        HEAP16[(((dirp + pos)+(16))>>1)] = 280;\r\n        HEAP8[(((dirp + pos)+(18))>>0)] = type;\r\n        stringToUTF8(name, dirp + pos + 19, 256);\r\n        pos += struct_size;\r\n        idx += 1;\r\n      }\r\n      FS.llseek(stream, idx * struct_size, 0);\r\n      return pos;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_ioctl(fd, op, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (op) {\r\n        case 21509:\r\n        case 21505: {\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21510:\r\n        case 21511:\r\n        case 21512:\r\n        case 21506:\r\n        case 21507:\r\n        case 21508: {\r\n          if (!stream.tty) return -59;\r\n          return 0; // no-op, not actually adjusting terminal settings\r\n        }\r\n        case 21519: {\r\n          if (!stream.tty) return -59;\r\n          var argp = SYSCALLS.get();\r\n          HEAP32[((argp)>>2)] = 0;\r\n          return 0;\r\n        }\r\n        case 21520: {\r\n          if (!stream.tty) return -59;\r\n          return -28; // not supported\r\n        }\r\n        case 21531: {\r\n          var argp = SYSCALLS.get();\r\n          return FS.ioctl(stream, op, argp);\r\n        }\r\n        case 21523: {\r\n          // TODO: in theory we should write to the winsize struct that gets\r\n          // passed in, but for now musl doesn't read anything on it\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21524: {\r\n          // TODO: technically, this ioctl call should change the window size.\r\n          // but, since emscripten doesn't have any concept of a terminal window\r\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        default: return -28; // not supported\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_lstat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.lstat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_mkdirat(dirfd, path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      // remove a trailing slash, if one - /a/b/ has basename of '', but\r\n      // we want to create b in the context of this function\r\n      path = PATH.normalize(path);\r\n      if (path[path.length-1] === '/') path = path.substr(0, path.length-1);\r\n      FS.mkdir(path, mode, 0);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_newfstatat(dirfd, path, buf, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      var nofollow = flags & 256;\r\n      var allowEmpty = flags & 4096;\r\n      flags = flags & (~6400);\r\n      path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\r\n      return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_openat(dirfd, path, flags, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      var mode = varargs ? SYSCALLS.get() : 0;\r\n      return FS.open(path, flags, mode).fd;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_rmdir(path) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.rmdir(path);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_stat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_unlinkat(dirfd, path, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      if (flags === 0) {\r\n        FS.unlink(path);\r\n      } else if (flags === 512) {\r\n        FS.rmdir(path);\r\n      } else {\r\n        abort('Invalid flags passed to unlinkat');\r\n      }\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  var nowIsMonotonic = true;;\r\n  function __emscripten_get_now_is_monotonic() {\r\n      return nowIsMonotonic;\r\n    }\r\n\r\n  function readI53FromI64(ptr) {\r\n      return HEAPU32[ptr>>2] + HEAP32[ptr+4>>2] * 4294967296;\r\n    }\r\n  \r\n  function isLeapYear(year) {\r\n        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);\r\n    }\r\n  \r\n  var MONTH_DAYS_LEAP_CUMULATIVE = [0,31,60,91,121,152,182,213,244,274,305,335];\r\n  \r\n  var MONTH_DAYS_REGULAR_CUMULATIVE = [0,31,59,90,120,151,181,212,243,273,304,334];\r\n  function ydayFromDate(date) {\r\n      var leap = isLeapYear(date.getFullYear());\r\n      var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\r\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1; // -1 since it's days since Jan 1\r\n  \r\n      return yday;\r\n    }\r\n  function __localtime_js(time, tmPtr) {\r\n      var date = new Date(readI53FromI64(time)*1000);\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getFullYear()-1900;\r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n  \r\n      var yday = ydayFromDate(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      HEAP32[(((tmPtr)+(36))>>2)] = -(date.getTimezoneOffset() * 60);\r\n  \r\n      // Attention: DST is in December in South, and some regions don't have DST at all.\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\r\n      HEAP32[(((tmPtr)+(32))>>2)] = dst;\r\n    }\r\n\r\n  function __mktime_js(tmPtr) {\r\n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\r\n                          HEAP32[(((tmPtr)+(16))>>2)],\r\n                          HEAP32[(((tmPtr)+(12))>>2)],\r\n                          HEAP32[(((tmPtr)+(8))>>2)],\r\n                          HEAP32[(((tmPtr)+(4))>>2)],\r\n                          HEAP32[((tmPtr)>>2)],\r\n                          0);\r\n  \r\n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\r\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\r\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\r\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\r\n      var guessedOffset = date.getTimezoneOffset();\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\r\n      if (dst < 0) {\r\n        // Attention: some regions don't have DST at all.\r\n        HEAP32[(((tmPtr)+(32))>>2)] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\r\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\r\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\r\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\r\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\r\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\r\n      }\r\n  \r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n      var yday = ydayFromDate(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      // To match expected behavior, update fields from date\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getYear();\r\n  \r\n      return (date.getTime() / 1000)|0;\r\n    }\r\n\r\n  \r\n  \r\n  function stringToNewUTF8(str) {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = _malloc(size);\r\n      if (ret) stringToUTF8(str, ret, size);\r\n      return ret;\r\n    }\r\n  function __tzset_js(timezone, daylight, tzname) {\r\n      // TODO: Use (malleable) environment variables instead of system settings.\r\n      var currentYear = new Date().getFullYear();\r\n      var winter = new Date(currentYear, 0, 1);\r\n      var summer = new Date(currentYear, 6, 1);\r\n      var winterOffset = winter.getTimezoneOffset();\r\n      var summerOffset = summer.getTimezoneOffset();\r\n  \r\n      // Local standard timezone offset. Local standard time is not adjusted for daylight savings.\r\n      // This code uses the fact that getTimezoneOffset returns a greater value during Standard Time versus Daylight Saving Time (DST).\r\n      // Thus it determines the expected output during Standard Time, and it compares whether the output of the given date the same (Standard) or less (DST).\r\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\r\n  \r\n      // timezone is specified as seconds west of UTC (\"The external variable\r\n      // `timezone` shall be set to the difference, in seconds, between\r\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\r\n      // as returned by stdTimezoneOffset.\r\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\r\n      HEAPU32[((timezone)>>2)] = stdTimezoneOffset * 60;\r\n  \r\n      HEAP32[((daylight)>>2)] = Number(winterOffset != summerOffset);\r\n  \r\n      function extractZone(date) {\r\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\r\n        return match ? match[1] : \"GMT\";\r\n      };\r\n      var winterName = extractZone(winter);\r\n      var summerName = extractZone(summer);\r\n      var winterNamePtr = stringToNewUTF8(winterName);\r\n      var summerNamePtr = stringToNewUTF8(summerName);\r\n      if (summerOffset < winterOffset) {\r\n        // Northern hemisphere\r\n        HEAPU32[((tzname)>>2)] = winterNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = summerNamePtr;\r\n      } else {\r\n        HEAPU32[((tzname)>>2)] = summerNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = winterNamePtr;\r\n      }\r\n    }\r\n\r\n  function _abort() {\r\n      abort('');\r\n    }\r\n\r\n  function _emscripten_set_main_loop_timing(mode, value) {\r\n      Browser.mainLoop.timingMode = mode;\r\n      Browser.mainLoop.timingValue = value;\r\n  \r\n      if (!Browser.mainLoop.func) {\r\n        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.\r\n      }\r\n  \r\n      if (!Browser.mainLoop.running) {\r\n        \r\n        Browser.mainLoop.running = true;\r\n      }\r\n      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {\r\n          var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now())|0;\r\n          setTimeout(Browser.mainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop\r\n        };\r\n        Browser.mainLoop.method = 'timeout';\r\n      } else if (mode == 1 /*EM_TIMING_RAF*/) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {\r\n          Browser.requestAnimationFrame(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'rAF';\r\n      } else if (mode == 2 /*EM_TIMING_SETIMMEDIATE*/) {\r\n        if (typeof setImmediate == 'undefined') {\r\n          // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)\r\n          var setImmediates = [];\r\n          var emscriptenMainLoopMessageId = 'setimmediate';\r\n          /** @param {Event} event */\r\n          var Browser_setImmediate_messageHandler = (event) => {\r\n            // When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,\r\n            // so check for both cases.\r\n            if (event.data === emscriptenMainLoopMessageId || event.data.target === emscriptenMainLoopMessageId) {\r\n              event.stopPropagation();\r\n              setImmediates.shift()();\r\n            }\r\n          };\r\n          addEventListener(\"message\", Browser_setImmediate_messageHandler, true);\r\n          setImmediate = /** @type{function(function(): ?, ...?): number} */(function Browser_emulated_setImmediate(func) {\r\n            setImmediates.push(func);\r\n            if (ENVIRONMENT_IS_WORKER) {\r\n              if (Module['setImmediates'] === undefined) Module['setImmediates'] = [];\r\n              Module['setImmediates'].push(func);\r\n              postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js\r\n            } else postMessage(emscriptenMainLoopMessageId, \"*\"); // On the main thread, can just send the message to itself.\r\n          })\r\n        }\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {\r\n          setImmediate(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'immediate';\r\n      }\r\n      return 0;\r\n    }\r\n  \r\n  var _emscripten_get_now;_emscripten_get_now = () => performance.now();\r\n  ;\r\n  \r\n  \r\n    /**\r\n     * @param {number=} arg\r\n     * @param {boolean=} noSetTiming\r\n     */\r\n  function setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop, arg, noSetTiming) {\r\n      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');\r\n  \r\n      Browser.mainLoop.func = browserIterationFunc;\r\n      Browser.mainLoop.arg = arg;\r\n  \r\n      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;\r\n      function checkIsRunning() {\r\n        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) {\r\n          \r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n  \r\n      // We create the loop runner here but it is not actually running until\r\n      // _emscripten_set_main_loop_timing is called (which might happen a\r\n      // later time).  This member signifies that the current runner has not\r\n      // yet been started so that we can call runtimeKeepalivePush when it\r\n      // gets it timing set for the first time.\r\n      Browser.mainLoop.running = false;\r\n      Browser.mainLoop.runner = function Browser_mainLoop_runner() {\r\n        if (ABORT) return;\r\n        if (Browser.mainLoop.queue.length > 0) {\r\n          var start = Date.now();\r\n          var blocker = Browser.mainLoop.queue.shift();\r\n          blocker.func(blocker.arg);\r\n          if (Browser.mainLoop.remainingBlockers) {\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);\r\n            if (blocker.counted) {\r\n              Browser.mainLoop.remainingBlockers = next;\r\n            } else {\r\n              // not counted, but move the progress along a tiny bit\r\n              next = next + 0.5; // do not steal all the next one's progress\r\n              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;\r\n            }\r\n          }\r\n          out('main loop blocker \"' + blocker.name + '\" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);\r\n          Browser.mainLoop.updateStatus();\r\n  \r\n          // catches pause/resume main loop from blocker execution\r\n          if (!checkIsRunning()) return;\r\n  \r\n          setTimeout(Browser.mainLoop.runner, 0);\r\n          return;\r\n        }\r\n  \r\n        // catch pauses from non-main loop sources\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Implement very basic swap interval control\r\n        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;\r\n        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {\r\n          // Not the scheduled time to render this frame - skip.\r\n          Browser.mainLoop.scheduler();\r\n          return;\r\n        } else if (Browser.mainLoop.timingMode == 0/*EM_TIMING_SETTIMEOUT*/) {\r\n          Browser.mainLoop.tickStartTime = _emscripten_get_now();\r\n        }\r\n  \r\n        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize\r\n        // VBO double-buffering and reduce GPU stalls.\r\n        GL.newRenderingFrameStarted();\r\n  \r\n        Browser.mainLoop.runIter(browserIterationFunc);\r\n  \r\n        // catch pauses from the main loop itself\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able\r\n        // to queue the newest produced audio samples.\r\n        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()\r\n        //       do not need to be hardcoded into this function, but can be more generic.\r\n        if (typeof SDL == 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (!noSetTiming) {\r\n        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);\r\n        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (simulateInfiniteLoop) {\r\n        throw 'unwind';\r\n      }\r\n    }\r\n  \r\n  function handleException(e) {\r\n      // Certain exception types we do not treat as errors since they are used for\r\n      // internal control flow.\r\n      // 1. ExitStatus, which is thrown by exit()\r\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\r\n      //    that wish to return to JS event loop.\r\n      if (e instanceof ExitStatus || e == 'unwind') {\r\n        return EXITSTATUS;\r\n      }\r\n      quit_(1, e);\r\n    }\r\n  \r\n  \r\n  function _proc_exit(code) {\r\n      EXITSTATUS = code;\r\n      if (!keepRuntimeAlive()) {\r\n        if (Module['onExit']) Module['onExit'](code);\r\n        ABORT = true;\r\n      }\r\n      quit_(code, new ExitStatus(code));\r\n    }\r\n  /** @suppress {duplicate } */\r\n  /** @param {boolean|number=} implicit */\r\n  function exitJS(status, implicit) {\r\n      EXITSTATUS = status;\r\n  \r\n      _proc_exit(status);\r\n    }\r\n  var _exit = exitJS;\r\n  \r\n  function maybeExit() {\r\n      if (!keepRuntimeAlive()) {\r\n        try {\r\n          _exit(EXITSTATUS);\r\n        } catch (e) {\r\n          handleException(e);\r\n        }\r\n      }\r\n    }\r\n  function callUserCallback(func) {\r\n      if (ABORT) {\r\n        return;\r\n      }\r\n      try {\r\n        func();\r\n        maybeExit();\r\n      } catch (e) {\r\n        handleException(e);\r\n      }\r\n    }\r\n  \r\n  /** @param {number=} timeout */\r\n  function safeSetTimeout(func, timeout) {\r\n      \r\n      return setTimeout(() => {\r\n        \r\n        callUserCallback(func);\r\n      }, timeout);\r\n    }\r\n  \r\n  function warnOnce(text) {\r\n      if (!warnOnce.shown) warnOnce.shown = {};\r\n      if (!warnOnce.shown[text]) {\r\n        warnOnce.shown[text] = 1;\r\n        err(text);\r\n      }\r\n    }\r\n  \r\n  \r\n  var Browser = {mainLoop:{running:false,scheduler:null,method:\"\",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function() {\r\n          Browser.mainLoop.scheduler = null;\r\n          // Incrementing this signals the previous main loop that it's now become old, and it must return.\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n        },resume:function() {\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n          var timingMode = Browser.mainLoop.timingMode;\r\n          var timingValue = Browser.mainLoop.timingValue;\r\n          var func = Browser.mainLoop.func;\r\n          Browser.mainLoop.func = null;\r\n          // do not set timing and call scheduler, we will do it on the next lines\r\n          setMainLoop(func, 0, false, Browser.mainLoop.arg, true);\r\n          _emscripten_set_main_loop_timing(timingMode, timingValue);\r\n          Browser.mainLoop.scheduler();\r\n        },updateStatus:function() {\r\n          if (Module['setStatus']) {\r\n            var message = Module['statusMessage'] || 'Please wait...';\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var expected = Browser.mainLoop.expectedBlockers;\r\n            if (remaining) {\r\n              if (remaining < expected) {\r\n                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');\r\n              } else {\r\n                Module['setStatus'](message);\r\n              }\r\n            } else {\r\n              Module['setStatus']('');\r\n            }\r\n          }\r\n        },runIter:function(func) {\r\n          if (ABORT) return;\r\n          if (Module['preMainLoop']) {\r\n            var preRet = Module['preMainLoop']();\r\n            if (preRet === false) {\r\n              return; // |return false| skips a frame\r\n            }\r\n          }\r\n          callUserCallback(func);\r\n          if (Module['postMainLoop']) Module['postMainLoop']();\r\n        }},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function() {\r\n        if (!Module[\"preloadPlugins\"]) Module[\"preloadPlugins\"] = []; // needs to exist even in workers\r\n  \r\n        if (Browser.initted) return;\r\n        Browser.initted = true;\r\n  \r\n        try {\r\n          new Blob();\r\n          Browser.hasBlobConstructor = true;\r\n        } catch(e) {\r\n          Browser.hasBlobConstructor = false;\r\n          err(\"warning: no blob constructor, cannot create blobs with mimetypes\");\r\n        }\r\n        Browser.BlobBuilder = typeof MozBlobBuilder != \"undefined\" ? MozBlobBuilder : (typeof WebKitBlobBuilder != \"undefined\" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? err(\"warning: no BlobBuilder\") : null));\r\n        Browser.URLObject = typeof window != \"undefined\" ? (window.URL ? window.URL : window.webkitURL) : undefined;\r\n        if (!Module.noImageDecoding && typeof Browser.URLObject == 'undefined') {\r\n          err(\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\");\r\n          Module.noImageDecoding = true;\r\n        }\r\n  \r\n        // Support for plugins that can process preloaded files. You can add more of these to\r\n        // your app by creating and appending to Module.preloadPlugins.\r\n        //\r\n        // Each plugin is asked if it can handle a file based on the file's name. If it can,\r\n        // it is given the file's raw data. When it is done, it calls a callback with the file's\r\n        // (possibly modified) data. For example, a plugin might decompress a file, or it\r\n        // might create some side data structure for use later (like an Image element, etc.).\r\n  \r\n        var imagePlugin = {};\r\n        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {\r\n          return !Module.noImageDecoding && /\\.(jpg|jpeg|png|bmp)$/i.test(name);\r\n        };\r\n        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {\r\n          var b = null;\r\n          if (Browser.hasBlobConstructor) {\r\n            try {\r\n              b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n              if (b.size !== byteArray.length) { // Safari bug #118630\r\n                // Safari's Blob can only take an ArrayBuffer\r\n                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });\r\n              }\r\n            } catch(e) {\r\n              warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');\r\n            }\r\n          }\r\n          if (!b) {\r\n            var bb = new Browser.BlobBuilder();\r\n            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range\r\n            b = bb.getBlob();\r\n          }\r\n          var url = Browser.URLObject.createObjectURL(b);\r\n          var img = new Image();\r\n          img.onload = () => {\r\n            assert(img.complete, 'Image ' + name + ' could not be decoded');\r\n            var canvas = /** @type {!HTMLCanvasElement} */ (document.createElement('canvas'));\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            var ctx = canvas.getContext('2d');\r\n            ctx.drawImage(img, 0, 0);\r\n            preloadedImages[name] = canvas;\r\n            Browser.URLObject.revokeObjectURL(url);\r\n            if (onload) onload(byteArray);\r\n          };\r\n          img.onerror = (event) => {\r\n            out('Image ' + url + ' could not be decoded');\r\n            if (onerror) onerror();\r\n          };\r\n          img.src = url;\r\n        };\r\n        Module['preloadPlugins'].push(imagePlugin);\r\n  \r\n        var audioPlugin = {};\r\n        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {\r\n          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };\r\n        };\r\n        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {\r\n          var done = false;\r\n          function finish(audio) {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = audio;\r\n            if (onload) onload(byteArray);\r\n          }\r\n          function fail() {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = new Audio(); // empty shim\r\n            if (onerror) onerror();\r\n          }\r\n          if (Browser.hasBlobConstructor) {\r\n            try {\r\n              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n            } catch(e) {\r\n              return fail();\r\n            }\r\n            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!\r\n            var audio = new Audio();\r\n            audio.addEventListener('canplaythrough', () => finish(audio), false); // use addEventListener due to chromium bug 124926\r\n            audio.onerror = function audio_onerror(event) {\r\n              if (done) return;\r\n              err('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');\r\n              function encode64(data) {\r\n                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n                var PAD = '=';\r\n                var ret = '';\r\n                var leftchar = 0;\r\n                var leftbits = 0;\r\n                for (var i = 0; i < data.length; i++) {\r\n                  leftchar = (leftchar << 8) | data[i];\r\n                  leftbits += 8;\r\n                  while (leftbits >= 6) {\r\n                    var curr = (leftchar >> (leftbits-6)) & 0x3f;\r\n                    leftbits -= 6;\r\n                    ret += BASE[curr];\r\n                  }\r\n                }\r\n                if (leftbits == 2) {\r\n                  ret += BASE[(leftchar&3) << 4];\r\n                  ret += PAD + PAD;\r\n                } else if (leftbits == 4) {\r\n                  ret += BASE[(leftchar&0xf) << 2];\r\n                  ret += PAD;\r\n                }\r\n                return ret;\r\n              }\r\n              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);\r\n              finish(audio); // we don't wait for confirmation this worked - but it's worth trying\r\n            };\r\n            audio.src = url;\r\n            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror\r\n            safeSetTimeout(() => {\r\n              finish(audio); // try to use it even though it is not necessarily ready to play\r\n            }, 10000);\r\n          } else {\r\n            return fail();\r\n          }\r\n        };\r\n        Module['preloadPlugins'].push(audioPlugin);\r\n  \r\n        // Canvas event setup\r\n  \r\n        function pointerLockChange() {\r\n          Browser.pointerLock = document['pointerLockElement'] === Module['canvas'] ||\r\n                                document['mozPointerLockElement'] === Module['canvas'] ||\r\n                                document['webkitPointerLockElement'] === Module['canvas'] ||\r\n                                document['msPointerLockElement'] === Module['canvas'];\r\n        }\r\n        var canvas = Module['canvas'];\r\n        if (canvas) {\r\n          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module\r\n          // Module['forcedAspectRatio'] = 4 / 3;\r\n  \r\n          canvas.requestPointerLock = canvas['requestPointerLock'] ||\r\n                                      canvas['mozRequestPointerLock'] ||\r\n                                      canvas['webkitRequestPointerLock'] ||\r\n                                      canvas['msRequestPointerLock'] ||\r\n                                      (() => {});\r\n          canvas.exitPointerLock = document['exitPointerLock'] ||\r\n                                   document['mozExitPointerLock'] ||\r\n                                   document['webkitExitPointerLock'] ||\r\n                                   document['msExitPointerLock'] ||\r\n                                   (() => {}); // no-op if function does not exist\r\n          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\r\n  \r\n          document.addEventListener('pointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mozpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mspointerlockchange', pointerLockChange, false);\r\n  \r\n          if (Module['elementPointerLock']) {\r\n            canvas.addEventListener(\"click\", (ev) => {\r\n              if (!Browser.pointerLock && Module['canvas'].requestPointerLock) {\r\n                Module['canvas'].requestPointerLock();\r\n                ev.preventDefault();\r\n              }\r\n            }, false);\r\n          }\r\n        }\r\n      },handledByPreloadPlugin:function(byteArray, fullname, finish, onerror) {\r\n        // Ensure plugins are ready.\r\n        Browser.init();\r\n  \r\n        var handled = false;\r\n        Module['preloadPlugins'].forEach((plugin) => {\r\n          if (handled) return;\r\n          if (plugin['canHandle'](fullname)) {\r\n            plugin['handle'](byteArray, fullname, finish, onerror);\r\n            handled = true;\r\n          }\r\n        });\r\n        return handled;\r\n      },createContext:function(/** @type {HTMLCanvasElement} */ canvas, useWebGL, setInModule, webGLContextAttributes) {\r\n        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.\r\n  \r\n        var ctx;\r\n        var contextHandle;\r\n        if (useWebGL) {\r\n          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.\r\n          var contextAttributes = {\r\n            antialias: false,\r\n            alpha: false,\r\n            majorVersion: (typeof WebGL2RenderingContext != 'undefined') ? 2 : 1,\r\n          };\r\n  \r\n          if (webGLContextAttributes) {\r\n            for (var attribute in webGLContextAttributes) {\r\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\r\n            }\r\n          }\r\n  \r\n          // This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not\r\n          // actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function\r\n          // Browser.createContext() should not even be emitted.\r\n          if (typeof GL != 'undefined') {\r\n            contextHandle = GL.createContext(canvas, contextAttributes);\r\n            if (contextHandle) {\r\n              ctx = GL.getContext(contextHandle).GLctx;\r\n            }\r\n          }\r\n        } else {\r\n          ctx = canvas.getContext('2d');\r\n        }\r\n  \r\n        if (!ctx) return null;\r\n  \r\n        if (setInModule) {\r\n          if (!useWebGL) assert(typeof GLctx == 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');\r\n  \r\n          Module.ctx = ctx;\r\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\r\n          Module.useWebGL = useWebGL;\r\n          Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\r\n          Browser.init();\r\n        }\r\n        return ctx;\r\n      },destroyContext:function(canvas, useWebGL, setInModule) {},fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:function(lockPointer, resizeCanvas) {\r\n        Browser.lockPointer = lockPointer;\r\n        Browser.resizeCanvas = resizeCanvas;\r\n        if (typeof Browser.lockPointer == 'undefined') Browser.lockPointer = true;\r\n        if (typeof Browser.resizeCanvas == 'undefined') Browser.resizeCanvas = false;\r\n  \r\n        var canvas = Module['canvas'];\r\n        function fullscreenChange() {\r\n          Browser.isFullscreen = false;\r\n          var canvasContainer = canvas.parentNode;\r\n          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n               document['webkitCurrentFullScreenElement']) === canvasContainer) {\r\n            canvas.exitFullscreen = Browser.exitFullscreen;\r\n            if (Browser.lockPointer) canvas.requestPointerLock();\r\n            Browser.isFullscreen = true;\r\n            if (Browser.resizeCanvas) {\r\n              Browser.setFullscreenCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          } else {\r\n            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen\r\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\r\n            canvasContainer.parentNode.removeChild(canvasContainer);\r\n  \r\n            if (Browser.resizeCanvas) {\r\n              Browser.setWindowedCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          }\r\n          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullscreen);\r\n          if (Module['onFullscreen']) Module['onFullscreen'](Browser.isFullscreen);\r\n        }\r\n  \r\n        if (!Browser.fullscreenHandlersInstalled) {\r\n          Browser.fullscreenHandlersInstalled = true;\r\n          document.addEventListener('fullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('mozfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('MSFullscreenChange', fullscreenChange, false);\r\n        }\r\n  \r\n        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root\r\n        var canvasContainer = document.createElement(\"div\");\r\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\r\n        canvasContainer.appendChild(canvas);\r\n  \r\n        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)\r\n        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||\r\n                                            canvasContainer['mozRequestFullScreen'] ||\r\n                                            canvasContainer['msRequestFullscreen'] ||\r\n                                           (canvasContainer['webkitRequestFullscreen'] ? () => canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) : null) ||\r\n                                           (canvasContainer['webkitRequestFullScreen'] ? () => canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) : null);\r\n  \r\n        canvasContainer.requestFullscreen();\r\n      },exitFullscreen:function() {\r\n        // This is workaround for chrome. Trying to exit from fullscreen\r\n        // not in fullscreen state will cause \"TypeError: Document not active\"\r\n        // in chrome. See https://github.com/emscripten-core/emscripten/pull/8236\r\n        if (!Browser.isFullscreen) {\r\n          return false;\r\n        }\r\n  \r\n        var CFS = document['exitFullscreen'] ||\r\n                  document['cancelFullScreen'] ||\r\n                  document['mozCancelFullScreen'] ||\r\n                  document['msExitFullscreen'] ||\r\n                  document['webkitCancelFullScreen'] ||\r\n            (() => {});\r\n        CFS.apply(document, []);\r\n        return true;\r\n      },nextRAF:0,fakeRequestAnimationFrame:function(func) {\r\n        // try to keep 60fps between calls to here\r\n        var now = Date.now();\r\n        if (Browser.nextRAF === 0) {\r\n          Browser.nextRAF = now + 1000/60;\r\n        } else {\r\n          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0\r\n            Browser.nextRAF += 1000/60;\r\n          }\r\n        }\r\n        var delay = Math.max(Browser.nextRAF - now, 0);\r\n        setTimeout(func, delay);\r\n      },requestAnimationFrame:function(func) {\r\n        if (typeof requestAnimationFrame == 'function') {\r\n          requestAnimationFrame(func);\r\n          return;\r\n        }\r\n        var RAF = Browser.fakeRequestAnimationFrame;\r\n        RAF(func);\r\n      },safeSetTimeout:function(func, timeout) {\r\n        // Legacy function, this is used by the SDL2 port so we need to keep it\r\n        // around at least until that is updated.\r\n        // See https://github.com/libsdl-org/SDL/pull/6304\r\n        return safeSetTimeout(func, timeout);\r\n      },safeRequestAnimationFrame:function(func) {\r\n        \r\n        return Browser.requestAnimationFrame(() => {\r\n          \r\n          callUserCallback(func);\r\n        });\r\n      },getMimetype:function(name) {\r\n        return {\r\n          'jpg': 'image/jpeg',\r\n          'jpeg': 'image/jpeg',\r\n          'png': 'image/png',\r\n          'bmp': 'image/bmp',\r\n          'ogg': 'audio/ogg',\r\n          'wav': 'audio/wav',\r\n          'mp3': 'audio/mpeg'\r\n        }[name.substr(name.lastIndexOf('.')+1)];\r\n      },getUserMedia:function(func) {\r\n        if (!window.getUserMedia) {\r\n          window.getUserMedia = navigator['getUserMedia'] ||\r\n                                navigator['mozGetUserMedia'];\r\n        }\r\n        window.getUserMedia(func);\r\n      },getMovementX:function(event) {\r\n        return event['movementX'] ||\r\n               event['mozMovementX'] ||\r\n               event['webkitMovementX'] ||\r\n               0;\r\n      },getMovementY:function(event) {\r\n        return event['movementY'] ||\r\n               event['mozMovementY'] ||\r\n               event['webkitMovementY'] ||\r\n               0;\r\n      },getMouseWheelDelta:function(event) {\r\n        var delta = 0;\r\n        switch (event.type) {\r\n          case 'DOMMouseScroll':\r\n            // 3 lines make up a step\r\n            delta = event.detail / 3;\r\n            break;\r\n          case 'mousewheel':\r\n            // 120 units make up a step\r\n            delta = event.wheelDelta / 120;\r\n            break;\r\n          case 'wheel':\r\n            delta = event.deltaY\r\n            switch (event.deltaMode) {\r\n              case 0:\r\n                // DOM_DELTA_PIXEL: 100 pixels make up a step\r\n                delta /= 100;\r\n                break;\r\n              case 1:\r\n                // DOM_DELTA_LINE: 3 lines make up a step\r\n                delta /= 3;\r\n                break;\r\n              case 2:\r\n                // DOM_DELTA_PAGE: A page makes up 80 steps\r\n                delta *= 80;\r\n                break;\r\n              default:\r\n                throw 'unrecognized mouse wheel delta mode: ' + event.deltaMode;\r\n            }\r\n            break;\r\n          default:\r\n            throw 'unrecognized mouse wheel event: ' + event.type;\r\n        }\r\n        return delta;\r\n      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function(event) { // event should be mousemove, mousedown or mouseup\r\n        if (Browser.pointerLock) {\r\n          // When the pointer is locked, calculate the coordinates\r\n          // based on the movement of the mouse.\r\n          // Workaround for Firefox bug 764498\r\n          if (event.type != 'mousemove' &&\r\n              ('mozMovementX' in event)) {\r\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\r\n          } else {\r\n            Browser.mouseMovementX = Browser.getMovementX(event);\r\n            Browser.mouseMovementY = Browser.getMovementY(event);\r\n          }\r\n  \r\n          // check if SDL is available\r\n          if (typeof SDL != \"undefined\") {\r\n            Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;\r\n            Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;\r\n          } else {\r\n            // just add the mouse delta to the current absolut mouse position\r\n            // FIXME: ideally this should be clamped against the canvas size and zero\r\n            Browser.mouseX += Browser.mouseMovementX;\r\n            Browser.mouseY += Browser.mouseMovementY;\r\n          }\r\n        } else {\r\n          // Otherwise, calculate the movement based on the changes\r\n          // in the coordinates.\r\n          var rect = Module[\"canvas\"].getBoundingClientRect();\r\n          var cw = Module[\"canvas\"].width;\r\n          var ch = Module[\"canvas\"].height;\r\n  \r\n          // Neither .scrollX or .pageXOffset are defined in a spec, but\r\n          // we prefer .scrollX because it is currently in a spec draft.\r\n          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)\r\n          var scrollX = ((typeof window.scrollX != 'undefined') ? window.scrollX : window.pageXOffset);\r\n          var scrollY = ((typeof window.scrollY != 'undefined') ? window.scrollY : window.pageYOffset);\r\n  \r\n          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {\r\n            var touch = event.touch;\r\n            if (touch === undefined) {\r\n              return; // the \"touch\" property is only defined in SDL\r\n  \r\n            }\r\n            var adjustedX = touch.pageX - (scrollX + rect.left);\r\n            var adjustedY = touch.pageY - (scrollY + rect.top);\r\n  \r\n            adjustedX = adjustedX * (cw / rect.width);\r\n            adjustedY = adjustedY * (ch / rect.height);\r\n  \r\n            var coords = { x: adjustedX, y: adjustedY };\r\n  \r\n            if (event.type === 'touchstart') {\r\n              Browser.lastTouches[touch.identifier] = coords;\r\n              Browser.touches[touch.identifier] = coords;\r\n            } else if (event.type === 'touchend' || event.type === 'touchmove') {\r\n              var last = Browser.touches[touch.identifier];\r\n              if (!last) last = coords;\r\n              Browser.lastTouches[touch.identifier] = last;\r\n              Browser.touches[touch.identifier] = coords;\r\n            }\r\n            return;\r\n          }\r\n  \r\n          var x = event.pageX - (scrollX + rect.left);\r\n          var y = event.pageY - (scrollY + rect.top);\r\n  \r\n          // the canvas might be CSS-scaled compared to its backbuffer;\r\n          // SDL-using content will want mouse coordinates in terms\r\n          // of backbuffer units.\r\n          x = x * (cw / rect.width);\r\n          y = y * (ch / rect.height);\r\n  \r\n          Browser.mouseMovementX = x - Browser.mouseX;\r\n          Browser.mouseMovementY = y - Browser.mouseY;\r\n          Browser.mouseX = x;\r\n          Browser.mouseY = y;\r\n        }\r\n      },resizeListeners:[],updateResizeListeners:function() {\r\n        var canvas = Module['canvas'];\r\n        Browser.resizeListeners.forEach((listener) => listener(canvas.width, canvas.height));\r\n      },setCanvasSize:function(width, height, noUpdates) {\r\n        var canvas = Module['canvas'];\r\n        Browser.updateCanvasDimensions(canvas, width, height);\r\n        if (!noUpdates) Browser.updateResizeListeners();\r\n      },windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:function() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags | 0x00800000; // set SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },setWindowedCanvasSize:function() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },updateCanvasDimensions:function(canvas, wNative, hNative) {\r\n        if (wNative && hNative) {\r\n          canvas.widthNative = wNative;\r\n          canvas.heightNative = hNative;\r\n        } else {\r\n          wNative = canvas.widthNative;\r\n          hNative = canvas.heightNative;\r\n        }\r\n        var w = wNative;\r\n        var h = hNative;\r\n        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {\r\n          if (w/h < Module['forcedAspectRatio']) {\r\n            w = Math.round(h * Module['forcedAspectRatio']);\r\n          } else {\r\n            h = Math.round(w / Module['forcedAspectRatio']);\r\n          }\r\n        }\r\n        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {\r\n           var factor = Math.min(screen.width / w, screen.height / h);\r\n           w = Math.round(w * factor);\r\n           h = Math.round(h * factor);\r\n        }\r\n        if (Browser.resizeCanvas) {\r\n          if (canvas.width  != w) canvas.width  = w;\r\n          if (canvas.height != h) canvas.height = h;\r\n          if (typeof canvas.style != 'undefined') {\r\n            canvas.style.removeProperty( \"width\");\r\n            canvas.style.removeProperty(\"height\");\r\n          }\r\n        } else {\r\n          if (canvas.width  != wNative) canvas.width  = wNative;\r\n          if (canvas.height != hNative) canvas.height = hNative;\r\n          if (typeof canvas.style != 'undefined') {\r\n            if (w != wNative || h != hNative) {\r\n              canvas.style.setProperty( \"width\", w + \"px\", \"important\");\r\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\r\n            } else {\r\n              canvas.style.removeProperty( \"width\");\r\n              canvas.style.removeProperty(\"height\");\r\n            }\r\n          }\r\n        }\r\n      }};\r\n  \r\n  var EGL = {errorCode:12288,defaultDisplayInitialized:false,currentContext:0,currentReadSurface:0,currentDrawSurface:0,contextAttributes:{alpha:false,depth:false,stencil:false,antialias:false},stringCache:{},setErrorCode:function(code) {\r\n        EGL.errorCode = code;\r\n      },chooseConfig:function(display, attribList, config, config_size, numConfigs) {\r\n        if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n          EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n          return 0;\r\n        }\r\n  \r\n        if (attribList) {\r\n          // read attribList if it is non-null\r\n          for (;;) {\r\n            var param = HEAP32[((attribList)>>2)];\r\n            if (param == 0x3021 /*EGL_ALPHA_SIZE*/) {\r\n              var alphaSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.alpha = (alphaSize > 0);\r\n            } else if (param == 0x3025 /*EGL_DEPTH_SIZE*/) {\r\n              var depthSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.depth = (depthSize > 0);\r\n            } else if (param == 0x3026 /*EGL_STENCIL_SIZE*/) {\r\n              var stencilSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.stencil = (stencilSize > 0);\r\n            } else if (param == 0x3031 /*EGL_SAMPLES*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples > 0);\r\n            } else if (param == 0x3032 /*EGL_SAMPLE_BUFFERS*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples == 1);\r\n            } else if (param == 0x3100 /*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/) {\r\n              var requestedPriority = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.lowLatency = (requestedPriority != 0x3103 /*EGL_CONTEXT_PRIORITY_LOW_IMG*/);\r\n            } else if (param == 0x3038 /*EGL_NONE*/) {\r\n                break;\r\n            }\r\n            attribList += 8;\r\n          }\r\n        }\r\n  \r\n        if ((!config || !config_size) && !numConfigs) {\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n        }\r\n        if (numConfigs) {\r\n          HEAP32[((numConfigs)>>2)] = 1; // Total number of supported configs: 1.\r\n        }\r\n        if (config && config_size > 0) {\r\n          HEAP32[((config)>>2)] = 62002;\r\n        }\r\n  \r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }};\r\n  function _eglBindAPI(api) {\r\n      if (api == 0x30A0 /* EGL_OPENGL_ES_API */) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }\r\n      // if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {\r\n      EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n      return 0;\r\n    }\r\n\r\n  function _eglChooseConfig(display, attrib_list, configs, config_size, numConfigs) {\r\n      return EGL.chooseConfig(display, attrib_list, configs, config_size, numConfigs);\r\n    }\r\n\r\n  function webgl_enable_ANGLE_instanced_arrays(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 26 and Google Chrome 30 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('ANGLE_instanced_arrays');\r\n      if (ext) {\r\n        ctx['vertexAttribDivisor'] = function(index, divisor) { ext['vertexAttribDivisorANGLE'](index, divisor); };\r\n        ctx['drawArraysInstanced'] = function(mode, first, count, primcount) { ext['drawArraysInstancedANGLE'](mode, first, count, primcount); };\r\n        ctx['drawElementsInstanced'] = function(mode, count, type, indices, primcount) { ext['drawElementsInstancedANGLE'](mode, count, type, indices, primcount); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_OES_vertex_array_object(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 25 and WebKit 536.28/desktop Safari 6.0.3 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('OES_vertex_array_object');\r\n      if (ext) {\r\n        ctx['createVertexArray'] = function() { return ext['createVertexArrayOES'](); };\r\n        ctx['deleteVertexArray'] = function(vao) { ext['deleteVertexArrayOES'](vao); };\r\n        ctx['bindVertexArray'] = function(vao) { ext['bindVertexArrayOES'](vao); };\r\n        ctx['isVertexArray'] = function(vao) { return ext['isVertexArrayOES'](vao); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_draw_buffers(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 28 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('WEBGL_draw_buffers');\r\n      if (ext) {\r\n        ctx['drawBuffers'] = function(n, bufs) { ext['drawBuffersWEBGL'](n, bufs); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(ctx) {\r\n      // Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.dibvbi = ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance'));\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(ctx) {\r\n      // Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.mdibvbi = ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_multi_draw(ctx) {\r\n      // Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.\r\n      return !!(ctx.multiDrawWebgl = ctx.getExtension('WEBGL_multi_draw'));\r\n    }\r\n  \r\n  \r\n  var GL = {counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:[],offscreenCanvases:{},queries:[],samplers:[],transformFeedbacks:[],syncs:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],stringCache:{},stringiCache:{},unpackAlignment:4,recordError:function recordError(errorCode) {\r\n        if (!GL.lastError) {\r\n          GL.lastError = errorCode;\r\n        }\r\n      },getNewId:function(table) {\r\n        var ret = GL.counter++;\r\n        for (var i = table.length; i < ret; i++) {\r\n          table[i] = null;\r\n        }\r\n        return ret;\r\n      },MAX_TEMP_BUFFER_SIZE:16777216,numTempVertexBuffersPerSize:64,log2ceilLookup:function(i) {\r\n        return 32 - Math.clz32(i === 0 ? 0 : i - 1);\r\n      },generateTempBuffers:function(quads, context) {\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        context.tempVertexBufferCounters1 = [];\r\n        context.tempVertexBufferCounters2 = [];\r\n        context.tempVertexBufferCounters1.length = context.tempVertexBufferCounters2.length = largestIndex+1;\r\n        context.tempVertexBuffers1 = [];\r\n        context.tempVertexBuffers2 = [];\r\n        context.tempVertexBuffers1.length = context.tempVertexBuffers2.length = largestIndex+1;\r\n        context.tempIndexBuffers = [];\r\n        context.tempIndexBuffers.length = largestIndex+1;\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          context.tempIndexBuffers[i] = null; // Created on-demand\r\n          context.tempVertexBufferCounters1[i] = context.tempVertexBufferCounters2[i] = 0;\r\n          var ringbufferLength = GL.numTempVertexBuffersPerSize;\r\n          context.tempVertexBuffers1[i] = [];\r\n          context.tempVertexBuffers2[i] = [];\r\n          var ringbuffer1 = context.tempVertexBuffers1[i];\r\n          var ringbuffer2 = context.tempVertexBuffers2[i];\r\n          ringbuffer1.length = ringbuffer2.length = ringbufferLength;\r\n          for (var j = 0; j < ringbufferLength; ++j) {\r\n            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand\r\n          }\r\n        }\r\n  \r\n        if (quads) {\r\n          // GL_QUAD indexes can be precalculated\r\n          context.tempQuadIndexBuffer = GLctx.createBuffer();\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, context.tempQuadIndexBuffer);\r\n          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;\r\n          var quadIndexes = new Uint16Array(numIndexes);\r\n          var i = 0, v = 0;\r\n          while (1) {\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+1;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+3;\r\n            if (i >= numIndexes) break;\r\n            v += 4;\r\n          }\r\n          context.GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, quadIndexes, 0x88E4 /*GL_STATIC_DRAW*/);\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n        }\r\n      },getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ringbuffer = GL.currentContext.tempVertexBuffers1[idx];\r\n        var nextFreeBufferIndex = GL.currentContext.tempVertexBufferCounters1[idx];\r\n        GL.currentContext.tempVertexBufferCounters1[idx] = (GL.currentContext.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);\r\n        var vbo = ringbuffer[nextFreeBufferIndex];\r\n        if (vbo) {\r\n          return vbo;\r\n        }\r\n        var prevVBO = GLctx.getParameter(0x8894 /*GL_ARRAY_BUFFER_BINDING*/);\r\n        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, ringbuffer[nextFreeBufferIndex]);\r\n        GLctx.bufferData(0x8892 /*GL_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, prevVBO);\r\n        return ringbuffer[nextFreeBufferIndex];\r\n      },getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ibo = GL.currentContext.tempIndexBuffers[idx];\r\n        if (ibo) {\r\n          return ibo;\r\n        }\r\n        var prevIBO = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n        GL.currentContext.tempIndexBuffers[idx] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, GL.currentContext.tempIndexBuffers[idx]);\r\n        GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, prevIBO);\r\n        return GL.currentContext.tempIndexBuffers[idx];\r\n      },newRenderingFrameStarted:function newRenderingFrameStarted() {\r\n        if (!GL.currentContext) {\r\n          return;\r\n        }\r\n        var vb = GL.currentContext.tempVertexBuffers1;\r\n        GL.currentContext.tempVertexBuffers1 = GL.currentContext.tempVertexBuffers2;\r\n        GL.currentContext.tempVertexBuffers2 = vb;\r\n        vb = GL.currentContext.tempVertexBufferCounters1;\r\n        GL.currentContext.tempVertexBufferCounters1 = GL.currentContext.tempVertexBufferCounters2;\r\n        GL.currentContext.tempVertexBufferCounters2 = vb;\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          GL.currentContext.tempVertexBufferCounters1[i] = 0;\r\n        }\r\n      },getSource:function(shader, count, string, length) {\r\n        var source = '';\r\n        for (var i = 0; i < count; ++i) {\r\n          var len = length ? HEAP32[(((length)+(i*4))>>2)] : -1;\r\n          source += UTF8ToString(HEAP32[(((string)+(i*4))>>2)], len < 0 ? undefined : len);\r\n        }\r\n        return source;\r\n      },calcBufLength:function calcBufLength(size, type, stride, count) {\r\n        if (stride > 0) {\r\n          return count * stride;  // XXXvlad this is not exactly correct I don't think\r\n        }\r\n        var typeSize = GL.byteSizeByType[type - GL.byteSizeByTypeRoot];\r\n        return size * typeSize * count;\r\n      },usedTempBuffers:[],preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count) {\r\n        GL.resetBufferBinding = false;\r\n  \r\n        // TODO: initial pass to detect ranges we need to upload, might not need an upload per attrib\r\n        for (var i = 0; i < GL.currentContext.maxVertexAttribs; ++i) {\r\n          var cb = GL.currentContext.clientBuffers[i];\r\n          if (!cb.clientside || !cb.enabled) continue;\r\n  \r\n          GL.resetBufferBinding = true;\r\n  \r\n          var size = GL.calcBufLength(cb.size, cb.type, cb.stride, count);\r\n          var buf = GL.getTempVertexBuffer(size);\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, buf);\r\n          GLctx.bufferSubData(0x8892 /*GL_ARRAY_BUFFER*/,\r\n                                   0,\r\n                                   HEAPU8.subarray(cb.ptr, cb.ptr + size));\r\n          cb.vertexAttribPointerAdaptor.call(GLctx, i, cb.size, cb.type, cb.normalized, cb.stride, 0);\r\n        }\r\n      },postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings() {\r\n        if (GL.resetBufferBinding) {\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, GL.buffers[GLctx.currentArrayBufferBinding]);\r\n        }\r\n      },createContext:function(/** @type {HTMLCanvasElement} */ canvas, webGLContextAttributes) {\r\n  \r\n        // BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL context on a canvas,\r\n        // calling .getContext() will always return that context independent of which 'webgl' or 'webgl2'\r\n        // context version was passed. See https://bugs.webkit.org/show_bug.cgi?id=222758 and\r\n        // https://github.com/emscripten-core/emscripten/issues/13295.\r\n        // TODO: Once the bug is fixed and shipped in Safari, adjust the Safari version field in above check.\r\n        if (!canvas.getContextSafariWebGL2Fixed) {\r\n          canvas.getContextSafariWebGL2Fixed = canvas.getContext;\r\n          /** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */\r\n          function fixedGetContext(ver, attrs) {\r\n            var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\r\n            return ((ver == 'webgl') == (gl instanceof WebGLRenderingContext)) ? gl : null;\r\n          }\r\n          canvas.getContext = fixedGetContext;\r\n        }\r\n  \r\n        var ctx =\r\n          (webGLContextAttributes.majorVersion > 1)\r\n          ?\r\n            canvas.getContext(\"webgl2\", webGLContextAttributes)\r\n          :\r\n          (canvas.getContext(\"webgl\", webGLContextAttributes)\r\n            // https://caniuse.com/#feat=webgl\r\n            );\r\n  \r\n        if (!ctx) return 0;\r\n  \r\n        var handle = GL.registerContext(ctx, webGLContextAttributes);\r\n  \r\n        return handle;\r\n      },registerContext:function(ctx, webGLContextAttributes) {\r\n        // without pthreads a context is just an integer ID\r\n        var handle = GL.getNewId(GL.contexts);\r\n  \r\n        var context = {\r\n          handle: handle,\r\n          attributes: webGLContextAttributes,\r\n          version: webGLContextAttributes.majorVersion,\r\n          GLctx: ctx\r\n        };\r\n  \r\n        // Store the created context object so that we can access the context given a canvas without having to pass the parameters again.\r\n        if (ctx.canvas) ctx.canvas.GLctxObject = context;\r\n        GL.contexts[handle] = context;\r\n        if (typeof webGLContextAttributes.enableExtensionsByDefault == 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {\r\n          GL.initExtensions(context);\r\n        }\r\n  \r\n        context.maxVertexAttribs = context.GLctx.getParameter(0x8869 /*GL_MAX_VERTEX_ATTRIBS*/);\r\n        context.clientBuffers = [];\r\n        for (var i = 0; i < context.maxVertexAttribs; i++) {\r\n          context.clientBuffers[i] = { enabled: false, clientside: false, size: 0, type: 0, normalized: 0, stride: 0, ptr: 0, vertexAttribPointerAdaptor: null };\r\n        }\r\n  \r\n        GL.generateTempBuffers(false, context);\r\n  \r\n        return handle;\r\n      },makeContextCurrent:function(contextHandle) {\r\n  \r\n        GL.currentContext = GL.contexts[contextHandle]; // Active Emscripten GL layer context object.\r\n        Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx; // Active WebGL context object.\r\n        return !(contextHandle && !GLctx);\r\n      },getContext:function(contextHandle) {\r\n        return GL.contexts[contextHandle];\r\n      },deleteContext:function(contextHandle) {\r\n        if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = null;\r\n        if (typeof JSEvents == 'object') JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas); // Release all JS event handlers on the DOM element that the GL context is associated with since the context is now deleted.\r\n        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined; // Make sure the canvas object no longer refers to the context object so there are no GC surprises.\r\n        GL.contexts[contextHandle] = null;\r\n      },initExtensions:function(context) {\r\n        // If this function is called without a specific context object, init the extensions of the currently active context.\r\n        if (!context) context = GL.currentContext;\r\n  \r\n        if (context.initExtensionsDone) return;\r\n        context.initExtensionsDone = true;\r\n  \r\n        var GLctx = context.GLctx;\r\n  \r\n        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist.\r\n  \r\n        // Extensions that are only available in WebGL 1 (the calls will be no-ops if called on a WebGL 2 context active)\r\n        webgl_enable_ANGLE_instanced_arrays(GLctx);\r\n        webgl_enable_OES_vertex_array_object(GLctx);\r\n        webgl_enable_WEBGL_draw_buffers(GLctx);\r\n        // Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)\r\n        webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);\r\n        webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);\r\n  \r\n        // On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative\r\n        // that's based on core APIs, and exposes only the queryCounterEXT()\r\n        // entrypoint.\r\n        if (context.version >= 2) {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\");\r\n        }\r\n  \r\n        // However, Firefox exposes the WebGL 1 version on WebGL 2 as well and\r\n        // thus we look for the WebGL 1 version again if the WebGL 2 version\r\n        // isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882\r\n        if (context.version < 2 || !GLctx.disjointTimerQueryExt)\r\n        {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query\");\r\n        }\r\n  \r\n        webgl_enable_WEBGL_multi_draw(GLctx);\r\n  \r\n        // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n        var exts = GLctx.getSupportedExtensions() || [];\r\n        exts.forEach(function(ext) {\r\n          // WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders are not enabled by default.\r\n          if (!ext.includes('lose_context') && !ext.includes('debug')) {\r\n            // Call .getExtension() to enable that extension permanently.\r\n            GLctx.getExtension(ext);\r\n          }\r\n        });\r\n      }};\r\n  \r\n  function _eglCreateContext(display, config, hmm, contextAttribs) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n  \r\n      // EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.\r\n      // So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.\r\n      var glesContextVersion = 1;\r\n      for (;;) {\r\n        var param = HEAP32[((contextAttribs)>>2)];\r\n        if (param == 0x3098 /*EGL_CONTEXT_CLIENT_VERSION*/) {\r\n          glesContextVersion = HEAP32[(((contextAttribs)+(4))>>2)];\r\n        } else if (param == 0x3038 /*EGL_NONE*/) {\r\n          break;\r\n        } else {\r\n          /* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */\r\n          EGL.setErrorCode(0x3004 /*EGL_BAD_ATTRIBUTE*/);\r\n          return 0;\r\n        }\r\n        contextAttribs += 8;\r\n      }\r\n      if (glesContextVersion < 2 || glesContextVersion > 3) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n  \r\n      EGL.contextAttributes.majorVersion = glesContextVersion - 1; // WebGL 1 is GLES 2, WebGL2 is GLES3\r\n      EGL.contextAttributes.minorVersion = 0;\r\n  \r\n      EGL.context = GL.createContext(Module['canvas'], EGL.contextAttributes);\r\n  \r\n      if (EGL.context != 0) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n  \r\n        // Run callbacks so that GL emulation works\r\n        GL.makeContextCurrent(EGL.context);\r\n        Module.useWebGL = true;\r\n        Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });\r\n  \r\n        // Note: This function only creates a context, but it shall not make it active.\r\n        GL.makeContextCurrent(null);\r\n        return 62004; // Magic ID for Emscripten EGLContext\r\n      } else {\r\n        EGL.setErrorCode(0x3009 /* EGL_BAD_MATCH */); // By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n    }\r\n\r\n  function _eglCreateWindowSurface(display, config, win, attrib_list) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      // TODO: Examine attrib_list! Parameters that can be present there are:\r\n      // - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)\r\n      // - EGL_VG_COLORSPACE (can't be set)\r\n      // - EGL_VG_ALPHA_FORMAT (can't be set)\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 62006; /* Magic ID for Emscripten 'default surface' */\r\n    }\r\n\r\n  \r\n  function _eglDestroyContext(display, context) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (context != 62004 /* Magic ID for Emscripten EGLContext */) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.deleteContext(EGL.context);\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.currentContext == context) {\r\n        EGL.currentContext = 0;\r\n      }\r\n      return 1 /* EGL_TRUE */;\r\n    }\r\n\r\n  function _eglDestroySurface(display, surface) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (surface != 62006 /* Magic ID for the only EGLSurface supported by Emscripten */) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 1;\r\n      }\r\n      if (EGL.currentReadSurface == surface) {\r\n        EGL.currentReadSurface = 0;\r\n      }\r\n      if (EGL.currentDrawSurface == surface) {\r\n        EGL.currentDrawSurface = 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1; /* Magic ID for Emscripten 'default surface' */\r\n    }\r\n\r\n  function _eglGetConfigAttrib(display, config, attribute, value) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      if (!value) {\r\n        EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n        return 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      switch (attribute) {\r\n      case 0x3020: // EGL_BUFFER_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 32 : 24;\r\n        return 1;\r\n      case 0x3021: // EGL_ALPHA_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 8 : 0;\r\n        return 1;\r\n      case 0x3022: // EGL_BLUE_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3023: // EGL_GREEN_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3024: // EGL_RED_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3025: // EGL_DEPTH_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.depth ? 24 : 0;\r\n        return 1;\r\n      case 0x3026: // EGL_STENCIL_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.stencil ? 8 : 0;\r\n        return 1;\r\n      case 0x3027: // EGL_CONFIG_CAVEAT\r\n        // We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3028: // EGL_CONFIG_ID\r\n        HEAP32[((value)>>2)] = 62002;\r\n        return 1;\r\n      case 0x3029: // EGL_LEVEL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302A: // EGL_MAX_PBUFFER_HEIGHT\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302B: // EGL_MAX_PBUFFER_PIXELS\r\n        HEAP32[((value)>>2)] = 16777216;\r\n        return 1;\r\n      case 0x302C: // EGL_MAX_PBUFFER_WIDTH\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302D: // EGL_NATIVE_RENDERABLE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302E: // EGL_NATIVE_VISUAL_ID\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302F: // EGL_NATIVE_VISUAL_TYPE\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3031: // EGL_SAMPLES\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 4 : 0;\r\n        return 1;\r\n      case 0x3032: // EGL_SAMPLE_BUFFERS\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 1 : 0;\r\n        return 1;\r\n      case 0x3033: // EGL_SURFACE_TYPE\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3034: // EGL_TRANSPARENT_TYPE\r\n        // If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3035: // EGL_TRANSPARENT_BLUE_VALUE\r\n      case 0x3036: // EGL_TRANSPARENT_GREEN_VALUE\r\n      case 0x3037: // EGL_TRANSPARENT_RED_VALUE\r\n        // \"If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined.\"\r\n        HEAP32[((value)>>2)] = -1;\r\n        return 1;\r\n      case 0x3039: // EGL_BIND_TO_TEXTURE_RGB\r\n      case 0x303A: // EGL_BIND_TO_TEXTURE_RGBA\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303B: // EGL_MIN_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303C: // EGL_MAX_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 1;\r\n        return 1;\r\n      case 0x303D: // EGL_LUMINANCE_SIZE\r\n      case 0x303E: // EGL_ALPHA_MASK_SIZE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303F: // EGL_COLOR_BUFFER_TYPE\r\n        // EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.\r\n        HEAP32[((value)>>2)] = 0x308E;\r\n        return 1;\r\n      case 0x3040: // EGL_RENDERABLE_TYPE\r\n        // A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3042: // EGL_CONFORMANT\r\n        // \"EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API.\"\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      default:\r\n        EGL.setErrorCode(0x3004 /* EGL_BAD_ATTRIBUTE */);\r\n        return 0;\r\n      }\r\n    }\r\n\r\n  function _eglGetDisplay(nativeDisplayType) {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      // Note: As a 'conformant' implementation of EGL, we would prefer to init here only if the user\r\n      //       calls this function with EGL_DEFAULT_DISPLAY. Other display IDs would be preferred to be unsupported\r\n      //       and EGL_NO_DISPLAY returned. Uncomment the following code lines to do this.\r\n      // Instead, an alternative route has been preferred, namely that the Emscripten EGL implementation\r\n      // \"emulates\" X11, and eglGetDisplay is expected to accept/receive a pointer to an X11 Display object.\r\n      // Therefore, be lax and allow anything to be passed in, and return the magic handle to our default EGLDisplay object.\r\n  \r\n  //    if (nativeDisplayType == 0 /* EGL_DEFAULT_DISPLAY */) {\r\n          return 62000; // Magic ID for Emscripten 'default display'\r\n  //    }\r\n  //    else\r\n  //      return 0; // EGL_NO_DISPLAY\r\n    }\r\n\r\n  function _eglGetError() {\r\n      return EGL.errorCode;\r\n    }\r\n\r\n  function _eglInitialize(display, majorVersion, minorVersion) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (majorVersion) {\r\n        HEAP32[((majorVersion)>>2)] = 1; // Advertise EGL Major version: '1'\r\n      }\r\n      if (minorVersion) {\r\n        HEAP32[((minorVersion)>>2)] = 4; // Advertise EGL Minor version: '4'\r\n      }\r\n      EGL.defaultDisplayInitialized = true;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  \r\n  function _eglMakeCurrent(display, draw, read, context) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0 /* EGL_FALSE */;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      if (context != 0 && context != 62004 /* Magic ID for Emscripten EGLContext */) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n      if ((read != 0 && read != 62006) || (draw != 0 && draw != 62006 /* Magic ID for Emscripten 'default surface' */)) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.makeContextCurrent(context ? EGL.context : null);\r\n  \r\n      EGL.currentContext = context;\r\n      EGL.currentDrawSurface = draw;\r\n      EGL.currentReadSurface = read;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1 /* EGL_TRUE */;\r\n    }\r\n\r\n  \r\n  function _eglQueryString(display, name) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.stringCache[name]) return EGL.stringCache[name];\r\n      var ret;\r\n      switch (name) {\r\n        case 0x3053 /* EGL_VENDOR */: ret = stringToNewUTF8(\"Emscripten\"); break;\r\n        case 0x3054 /* EGL_VERSION */: ret = stringToNewUTF8(\"1.4 Emscripten EGL\"); break;\r\n        case 0x3055 /* EGL_EXTENSIONS */:  ret = stringToNewUTF8(\"\"); break; // Currently not supporting any EGL extensions.\r\n        case 0x308D /* EGL_CLIENT_APIS */: ret = stringToNewUTF8(\"OpenGL_ES\"); break;\r\n        default:\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n      }\r\n      EGL.stringCache[name] = ret;\r\n      return ret;\r\n    }\r\n\r\n  function _eglSwapBuffers() {\r\n  \r\n      if (!EGL.defaultDisplayInitialized) {\r\n        EGL.setErrorCode(0x3001 /* EGL_NOT_INITIALIZED */);\r\n      } else if (!Module.ctx) {\r\n        EGL.setErrorCode(0x3002 /* EGL_BAD_ACCESS */);\r\n      } else if (Module.ctx.isContextLost()) {\r\n        EGL.setErrorCode(0x300E /* EGL_CONTEXT_LOST */);\r\n      } else {\r\n        // According to documentation this does an implicit flush.\r\n        // Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871\r\n        // the flush was removed since this _may_ result in slowing code down.\r\n        //_glFlush();\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1 /* EGL_TRUE */;\r\n      }\r\n      return 0 /* EGL_FALSE */;\r\n    }\r\n\r\n  \r\n  function _eglSwapInterval(display, interval) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (interval == 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 0);\r\n      else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, interval);\r\n  \r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  function _eglTerminate(display) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      EGL.currentContext = 0;\r\n      EGL.currentReadSurface = 0;\r\n      EGL.currentDrawSurface = 0;\r\n      EGL.defaultDisplayInitialized = false;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _eglWaitClient() {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n  var _eglWaitGL = _eglWaitClient;\r\n\r\n  function _eglWaitNative(nativeEngineId) {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  var readEmAsmArgsArray = [];\r\n  function readEmAsmArgs(sigPtr, buf) {\r\n      readEmAsmArgsArray.length = 0;\r\n      var ch;\r\n      // Most arguments are i32s, so shift the buffer pointer so it is a plain\r\n      // index into HEAP32.\r\n      buf >>= 2;\r\n      while (ch = HEAPU8[sigPtr++]) {\r\n        // Floats are always passed as doubles, and doubles and int64s take up 8\r\n        // bytes (two 32-bit slots) in memory, align reads to these:\r\n        buf += (ch != 105/*i*/) & buf;\r\n        readEmAsmArgsArray.push(\r\n          ch == 105/*i*/ ? HEAP32[buf] :\r\n         HEAPF64[buf++ >> 1]\r\n        );\r\n        ++buf;\r\n      }\r\n      return readEmAsmArgsArray;\r\n    }\r\n  function runEmAsmFunction(code, sigPtr, argbuf) {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    }\r\n  function _emscripten_asm_const_int(code, sigPtr, argbuf) {\r\n      return runEmAsmFunction(code, sigPtr, argbuf);\r\n    }\r\n\r\n  function runMainThreadEmAsm(code, sigPtr, argbuf, sync) {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    }\r\n  function _emscripten_asm_const_int_sync_on_main_thread(code, sigPtr, argbuf) {\r\n      return runMainThreadEmAsm(code, sigPtr, argbuf, 1);\r\n    }\r\n\r\n  function _emscripten_date_now() {\r\n      return Date.now();\r\n    }\r\n\r\n  function withStackSave(f) {\r\n      var stack = stackSave();\r\n      var ret = f();\r\n      stackRestore(stack);\r\n      return ret;\r\n    }\r\n  var JSEvents = {inEventHandler:0,removeAllEventListeners:function() {\r\n        for (var i = JSEvents.eventHandlers.length-1; i >= 0; --i) {\r\n          JSEvents._removeHandler(i);\r\n        }\r\n        JSEvents.eventHandlers = [];\r\n        JSEvents.deferredCalls = [];\r\n      },registerRemoveEventListeners:function() {\r\n        if (!JSEvents.removeEventListenersRegistered) {\r\n          __ATEXIT__.push(JSEvents.removeAllEventListeners);\r\n          JSEvents.removeEventListenersRegistered = true;\r\n        }\r\n      },deferredCalls:[],deferCall:function(targetFunction, precedence, argsList) {\r\n        function arraysHaveEqualContent(arrA, arrB) {\r\n          if (arrA.length != arrB.length) return false;\r\n  \r\n          for (var i in arrA) {\r\n            if (arrA[i] != arrB[i]) return false;\r\n          }\r\n          return true;\r\n        }\r\n        // Test if the given call was already queued, and if so, don't add it again.\r\n        for (var i in JSEvents.deferredCalls) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\r\n            return;\r\n          }\r\n        }\r\n        JSEvents.deferredCalls.push({\r\n          targetFunction: targetFunction,\r\n          precedence: precedence,\r\n          argsList: argsList\r\n        });\r\n  \r\n        JSEvents.deferredCalls.sort(function(x,y) { return x.precedence < y.precedence; });\r\n      },removeDeferredCalls:function(targetFunction) {\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\r\n            JSEvents.deferredCalls.splice(i, 1);\r\n            --i;\r\n          }\r\n        }\r\n      },canPerformEventHandlerRequests:function() {\r\n        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\r\n      },runDeferredCalls:function() {\r\n        if (!JSEvents.canPerformEventHandlerRequests()) {\r\n          return;\r\n        }\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          JSEvents.deferredCalls.splice(i, 1);\r\n          --i;\r\n          call.targetFunction.apply(null, call.argsList);\r\n        }\r\n      },eventHandlers:[],removeAllHandlersOnTarget:function(target, eventTypeString) {\r\n        for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n          if (JSEvents.eventHandlers[i].target == target && \r\n            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\r\n             JSEvents._removeHandler(i--);\r\n           }\r\n        }\r\n      },_removeHandler:function(i) {\r\n        var h = JSEvents.eventHandlers[i];\r\n        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\r\n        JSEvents.eventHandlers.splice(i, 1);\r\n      },registerOrRemoveHandler:function(eventHandler) {\r\n        var jsEventHandler = function jsEventHandler(event) {\r\n          // Increment nesting count for the event handler.\r\n          ++JSEvents.inEventHandler;\r\n          JSEvents.currentEventHandler = eventHandler;\r\n          // Process any old deferred calls the user has placed.\r\n          JSEvents.runDeferredCalls();\r\n          // Process the actual event, calls back to user C code handler.\r\n          eventHandler.handlerFunc(event);\r\n          // Process any new deferred calls that were placed right now from this event handler.\r\n          JSEvents.runDeferredCalls();\r\n          // Out of event handler - restore nesting count.\r\n          --JSEvents.inEventHandler;\r\n        };\r\n        \r\n        if (eventHandler.callbackfunc) {\r\n          eventHandler.eventListenerFunc = jsEventHandler;\r\n          eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\r\n          JSEvents.eventHandlers.push(eventHandler);\r\n          JSEvents.registerRemoveEventListeners();\r\n        } else {\r\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n            if (JSEvents.eventHandlers[i].target == eventHandler.target\r\n             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\r\n               JSEvents._removeHandler(i--);\r\n             }\r\n          }\r\n        }\r\n      },getNodeNameForTarget:function(target) {\r\n        if (!target) return '';\r\n        if (target == window) return '#window';\r\n        if (target == screen) return '#screen';\r\n        return (target && target.nodeName) ? target.nodeName : '';\r\n      },fullscreenEnabled:function() {\r\n        return document.fullscreenEnabled\r\n        // Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.\r\n        // TODO: If Safari at some point ships with unprefixed version, update the version check above.\r\n        || document.webkitFullscreenEnabled\r\n         ;\r\n      }};\r\n  \r\n  function setLetterbox(element, topBottom, leftRight) {\r\n        // Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.\r\n        element.style.paddingLeft = element.style.paddingRight = leftRight + 'px';\r\n        element.style.paddingTop = element.style.paddingBottom = topBottom + 'px';\r\n    }\r\n  \r\n  function hideEverythingExceptGivenElement(onlyVisibleElement) {\r\n      var child = onlyVisibleElement;\r\n      var parent = child.parentNode;\r\n      var hiddenElements = [];\r\n      while (child != document.body) {\r\n        var children = parent.children;\r\n        for (var i = 0; i < children.length; ++i) {\r\n          if (children[i] != child) {\r\n            hiddenElements.push({ node: children[i], displayState: children[i].style.display });\r\n            children[i].style.display = 'none';\r\n          }\r\n        }\r\n        child = parent;\r\n        parent = parent.parentNode;\r\n      }\r\n      return hiddenElements;\r\n    }\r\n  \r\n  var restoreOldWindowedStyle = null;\r\n  \r\n  \r\n  \r\n  function maybeCStringToJsString(cString) {\r\n      // \"cString > 2\" checks if the input is a number, and isn't of the special\r\n      // values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).\r\n      // In other words, if cString > 2 then it's a pointer to a valid place in\r\n      // memory, and points to a C string.\r\n      return cString > 2 ? UTF8ToString(cString) : cString;\r\n    }\r\n  \r\n  var specialHTMLTargets = [0, document, window];\r\n  function findEventTarget(target) {\r\n      target = maybeCStringToJsString(target);\r\n      var domElement = specialHTMLTargets[target] || document.querySelector(target);\r\n      return domElement;\r\n    }\r\n  function findCanvasEventTarget(target) { return findEventTarget(target); }\r\n  function _emscripten_get_canvas_element_size(target, width, height) {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      HEAP32[((width)>>2)] = canvas.width;\r\n      HEAP32[((height)>>2)] = canvas.height;\r\n    }\r\n  \r\n  \r\n  \r\n  function stringToUTF8OnStack(str) {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = stackAlloc(size);\r\n      stringToUTF8(str, ret, size);\r\n      return ret;\r\n    }\r\n  function getCanvasElementSize(target) {\r\n      return withStackSave(function() {\r\n        var w = stackAlloc(8);\r\n        var h = w + 4;\r\n  \r\n        var targetInt = stringToUTF8OnStack(target.id);\r\n        var ret = _emscripten_get_canvas_element_size(targetInt, w, h);\r\n        var size = [HEAP32[((w)>>2)], HEAP32[((h)>>2)]];\r\n        return size;\r\n      });\r\n    }\r\n  \r\n  \r\n  function _emscripten_set_canvas_element_size(target, width, height) {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      return 0;\r\n    }\r\n  \r\n  \r\n  function setCanvasElementSize(target, width, height) {\r\n      if (!target.controlTransferredOffscreen) {\r\n        target.width = width;\r\n        target.height = height;\r\n      } else {\r\n        // This function is being called from high-level JavaScript code instead of asm.js/Wasm,\r\n        // and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.\r\n        withStackSave(function() {\r\n          var targetInt = stringToUTF8OnStack(target.id);\r\n          _emscripten_set_canvas_element_size(targetInt, width, height);\r\n        });\r\n      }\r\n    }\r\n  function registerRestoreOldStyle(canvas) {\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var oldWidth = canvasSize[0];\r\n      var oldHeight = canvasSize[1];\r\n      var oldCssWidth = canvas.style.width;\r\n      var oldCssHeight = canvas.style.height;\r\n      var oldBackgroundColor = canvas.style.backgroundColor; // Chrome reads color from here.\r\n      var oldDocumentBackgroundColor = document.body.style.backgroundColor; // IE11 reads color from here.\r\n      // Firefox always has black background color.\r\n      var oldPaddingLeft = canvas.style.paddingLeft; // Chrome, FF, Safari\r\n      var oldPaddingRight = canvas.style.paddingRight;\r\n      var oldPaddingTop = canvas.style.paddingTop;\r\n      var oldPaddingBottom = canvas.style.paddingBottom;\r\n      var oldMarginLeft = canvas.style.marginLeft; // IE11\r\n      var oldMarginRight = canvas.style.marginRight;\r\n      var oldMarginTop = canvas.style.marginTop;\r\n      var oldMarginBottom = canvas.style.marginBottom;\r\n      var oldDocumentBodyMargin = document.body.style.margin;\r\n      var oldDocumentOverflow = document.documentElement.style.overflow; // Chrome, Firefox\r\n      var oldDocumentScroll = document.body.scroll; // IE\r\n      var oldImageRendering = canvas.style.imageRendering;\r\n  \r\n      function restoreOldStyle() {\r\n        var fullscreenElement = document.fullscreenElement\r\n          || document.webkitFullscreenElement\r\n          ;\r\n        if (!fullscreenElement) {\r\n          document.removeEventListener('fullscreenchange', restoreOldStyle);\r\n  \r\n          // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n          // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n          document.removeEventListener('webkitfullscreenchange', restoreOldStyle);\r\n  \r\n          setCanvasElementSize(canvas, oldWidth, oldHeight);\r\n  \r\n          canvas.style.width = oldCssWidth;\r\n          canvas.style.height = oldCssHeight;\r\n          canvas.style.backgroundColor = oldBackgroundColor; // Chrome\r\n          // IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color\r\n          // before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user\r\n          // had explicitly set so subsequent fullscreen transitions would not set background color properly.\r\n          if (!oldDocumentBackgroundColor) document.body.style.backgroundColor = 'white';\r\n          document.body.style.backgroundColor = oldDocumentBackgroundColor; // IE11\r\n          canvas.style.paddingLeft = oldPaddingLeft; // Chrome, FF, Safari\r\n          canvas.style.paddingRight = oldPaddingRight;\r\n          canvas.style.paddingTop = oldPaddingTop;\r\n          canvas.style.paddingBottom = oldPaddingBottom;\r\n          canvas.style.marginLeft = oldMarginLeft; // IE11\r\n          canvas.style.marginRight = oldMarginRight;\r\n          canvas.style.marginTop = oldMarginTop;\r\n          canvas.style.marginBottom = oldMarginBottom;\r\n          document.body.style.margin = oldDocumentBodyMargin;\r\n          document.documentElement.style.overflow = oldDocumentOverflow; // Chrome, Firefox\r\n          document.body.scroll = oldDocumentScroll; // IE\r\n          canvas.style.imageRendering = oldImageRendering;\r\n          if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, oldWidth, oldHeight);\r\n  \r\n          if (currentFullscreenStrategy.canvasResizedCallback) {\r\n            ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n          }\r\n        }\r\n      }\r\n      document.addEventListener('fullscreenchange', restoreOldStyle);\r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      document.addEventListener('webkitfullscreenchange', restoreOldStyle);\r\n      return restoreOldStyle;\r\n    }\r\n  \r\n  function restoreHiddenElements(hiddenElements) {\r\n      for (var i = 0; i < hiddenElements.length; ++i) {\r\n        hiddenElements[i].node.style.display = hiddenElements[i].displayState;\r\n      }\r\n    }\r\n  \r\n  var currentFullscreenStrategy = {};\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  /** @suppress {checkTypes} */\r\n  function jstoi_q(str) {\r\n      return parseInt(str);\r\n    }\r\n  function softFullscreenResizeWebGLRenderTarget() {\r\n      var dpr = devicePixelRatio;\r\n      var inHiDPIFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode == 2;\r\n      var inAspectRatioFixedFullscreenMode = currentFullscreenStrategy.scaleMode == 2;\r\n      var inPixelPerfectFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode != 0;\r\n      var inCenteredWithoutScalingFullscreenMode = currentFullscreenStrategy.scaleMode == 3;\r\n      var screenWidth = inHiDPIFullscreenMode ? Math.round(innerWidth*dpr) : innerWidth;\r\n      var screenHeight = inHiDPIFullscreenMode ? Math.round(innerHeight*dpr) : innerHeight;\r\n      var w = screenWidth;\r\n      var h = screenHeight;\r\n      var canvas = currentFullscreenStrategy.target;\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var x = canvasSize[0];\r\n      var y = canvasSize[1];\r\n      var topMargin;\r\n  \r\n      if (inAspectRatioFixedFullscreenMode) {\r\n        if (w*y < x*h) h = (w * y / x) | 0;\r\n        else if (w*y > x*h) w = (h * x / y) | 0;\r\n        topMargin = ((screenHeight - h) / 2) | 0;\r\n      }\r\n  \r\n      if (inPixelPerfectFullscreenMode) {\r\n        setCanvasElementSize(canvas, w, h);\r\n        if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, w, h);\r\n      }\r\n  \r\n      // Back to CSS pixels.\r\n      if (inHiDPIFullscreenMode) {\r\n        topMargin /= dpr;\r\n        w /= dpr;\r\n        h /= dpr;\r\n        // Round to nearest 4 digits of precision.\r\n        w = Math.round(w*1e4)/1e4;\r\n        h = Math.round(h*1e4)/1e4;\r\n        topMargin = Math.round(topMargin*1e4)/1e4;\r\n      }\r\n  \r\n      if (inCenteredWithoutScalingFullscreenMode) {\r\n        var t = (innerHeight - jstoi_q(canvas.style.height)) / 2;\r\n        var b = (innerWidth - jstoi_q(canvas.style.width)) / 2;\r\n        setLetterbox(canvas, t, b);\r\n      } else {\r\n        canvas.style.width = w + 'px';\r\n        canvas.style.height = h + 'px';\r\n        var b = (innerWidth - w) / 2;\r\n        setLetterbox(canvas, topMargin, b);\r\n      }\r\n  \r\n      if (!inCenteredWithoutScalingFullscreenMode && currentFullscreenStrategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n      }\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  function getBoundingClientRect(e) {\r\n      return specialHTMLTargets.indexOf(e) < 0 ? e.getBoundingClientRect() : {'left':0,'top':0};\r\n    }\r\n  function JSEvents_resizeCanvasForFullscreen(target, strategy) {\r\n      var restoreOldStyle = registerRestoreOldStyle(target);\r\n      var cssWidth = strategy.softFullscreen ? innerWidth : screen.width;\r\n      var cssHeight = strategy.softFullscreen ? innerHeight : screen.height;\r\n      var rect = getBoundingClientRect(target);\r\n      var windowedCssWidth = rect.width;\r\n      var windowedCssHeight = rect.height;\r\n      var canvasSize = getCanvasElementSize(target);\r\n      var windowedRttWidth = canvasSize[0];\r\n      var windowedRttHeight = canvasSize[1];\r\n  \r\n      if (strategy.scaleMode == 3) {\r\n        setLetterbox(target, (cssHeight - windowedCssHeight) / 2, (cssWidth - windowedCssWidth) / 2);\r\n        cssWidth = windowedCssWidth;\r\n        cssHeight = windowedCssHeight;\r\n      } else if (strategy.scaleMode == 2) {\r\n        if (cssWidth*windowedRttHeight < windowedRttWidth*cssHeight) {\r\n          var desiredCssHeight = windowedRttHeight * cssWidth / windowedRttWidth;\r\n          setLetterbox(target, (cssHeight - desiredCssHeight) / 2, 0);\r\n          cssHeight = desiredCssHeight;\r\n        } else {\r\n          var desiredCssWidth = windowedRttWidth * cssHeight / windowedRttHeight;\r\n          setLetterbox(target, 0, (cssWidth - desiredCssWidth) / 2);\r\n          cssWidth = desiredCssWidth;\r\n        }\r\n      }\r\n  \r\n      // If we are adding padding, must choose a background color or otherwise Chrome will give the\r\n      // padding a default white color. Do it only if user has not customized their own background color.\r\n      if (!target.style.backgroundColor) target.style.backgroundColor = 'black';\r\n      // IE11 does the same, but requires the color to be set in the document body.\r\n      if (!document.body.style.backgroundColor) document.body.style.backgroundColor = 'black'; // IE11\r\n      // Firefox always shows black letterboxes independent of style color.\r\n  \r\n      target.style.width = cssWidth + 'px';\r\n      target.style.height = cssHeight + 'px';\r\n  \r\n      if (strategy.filteringMode == 1) {\r\n        target.style.imageRendering = 'optimizeSpeed';\r\n        target.style.imageRendering = '-moz-crisp-edges';\r\n        target.style.imageRendering = '-o-crisp-edges';\r\n        target.style.imageRendering = '-webkit-optimize-contrast';\r\n        target.style.imageRendering = 'optimize-contrast';\r\n        target.style.imageRendering = 'crisp-edges';\r\n        target.style.imageRendering = 'pixelated';\r\n      }\r\n  \r\n      var dpiScale = (strategy.canvasResolutionScaleMode == 2) ? devicePixelRatio : 1;\r\n      if (strategy.canvasResolutionScaleMode != 0) {\r\n        var newWidth = (cssWidth * dpiScale)|0;\r\n        var newHeight = (cssHeight * dpiScale)|0;\r\n        setCanvasElementSize(target, newWidth, newHeight);\r\n        if (target.GLctxObject) target.GLctxObject.GLctx.viewport(0, 0, newWidth, newHeight);\r\n      }\r\n      return restoreOldStyle;\r\n    }\r\n  \r\n  function _emscripten_enter_soft_fullscreen(target, fullscreenStrategy) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var strategy = {\r\n          scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n          canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n          filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n          canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n          canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)],\r\n          target: target,\r\n          softFullscreen: true\r\n      };\r\n  \r\n      var restoreOldStyle = JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n  \r\n      document.documentElement.style.overflow = 'hidden';  // Firefox, Chrome\r\n      document.body.scroll = \"no\"; // IE11\r\n      document.body.style.margin = '0px'; // Override default document margin area on all browsers.\r\n  \r\n      var hiddenElements = hideEverythingExceptGivenElement(target);\r\n  \r\n      function restoreWindowedState() {\r\n        restoreOldStyle();\r\n        restoreHiddenElements(hiddenElements);\r\n        removeEventListener('resize', softFullscreenResizeWebGLRenderTarget);\r\n        if (strategy.canvasResizedCallback) {\r\n          ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n        }\r\n        currentFullscreenStrategy = 0;\r\n      }\r\n      restoreOldWindowedStyle = restoreWindowedState;\r\n      currentFullscreenStrategy = strategy;\r\n      addEventListener('resize', softFullscreenResizeWebGLRenderTarget);\r\n  \r\n      // Inform the caller that the canvas size has changed.\r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function JSEvents_requestFullscreen(target, strategy) {\r\n      // EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.\r\n      if (strategy.scaleMode != 0 || strategy.canvasResolutionScaleMode != 0) {\r\n        JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n      }\r\n  \r\n      if (target.requestFullscreen) {\r\n        target.requestFullscreen();\r\n      } else if (target.webkitRequestFullscreen) {\r\n        target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n      } else {\r\n        return JSEvents.fullscreenEnabled() ? -3 : -1;\r\n      }\r\n  \r\n      currentFullscreenStrategy = strategy;\r\n  \r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n  \r\n  function _emscripten_exit_fullscreen() {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);\r\n  \r\n      var d = specialHTMLTargets[1];\r\n      if (d.exitFullscreen) {\r\n        d.fullscreenElement && d.exitFullscreen();\r\n      } else if (d.webkitExitFullscreen) {\r\n        d.webkitFullscreenElement && d.webkitExitFullscreen();\r\n      } else {\r\n        return -1;\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  function requestPointerLock(target) {\r\n      if (target.requestPointerLock) {\r\n        target.requestPointerLock();\r\n      } else {\r\n        // document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,\r\n        // or if the whole browser just doesn't support the feature.\r\n        if (document.body.requestPointerLock\r\n          ) {\r\n          return -3;\r\n        }\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n  function _emscripten_exit_pointerlock() {\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(requestPointerLock);\r\n  \r\n      if (document.exitPointerLock) {\r\n        document.exitPointerLock();\r\n      } else {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_exit_soft_fullscreen() {\r\n      if (restoreOldWindowedStyle) restoreOldWindowedStyle();\r\n      restoreOldWindowedStyle = null;\r\n  \r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_get_device_pixel_ratio() {\r\n      return devicePixelRatio;\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_get_element_css_size(target, width, height) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAPF64[((width)>>3)] = rect.width;\r\n      HEAPF64[((height)>>3)] = rect.height;\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  function fillGamepadEventData(eventStruct, e) {\r\n      HEAPF64[((eventStruct)>>3)] = e.timestamp;\r\n      for (var i = 0; i < e.axes.length; ++i) {\r\n        HEAPF64[(((eventStruct+i*8)+(16))>>3)] = e.axes[i];\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i].value;\r\n        } else {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i];\r\n        }\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i].pressed;\r\n        } else {\r\n          // Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:\r\n          /** @suppress {checkTypes} */\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i] == 1;\r\n        }\r\n      }\r\n      HEAP32[(((eventStruct)+(1296))>>2)] = e.connected;\r\n      HEAP32[(((eventStruct)+(1300))>>2)] = e.index;\r\n      HEAP32[(((eventStruct)+(8))>>2)] = e.axes.length;\r\n      HEAP32[(((eventStruct)+(12))>>2)] = e.buttons.length;\r\n      stringToUTF8(e.id, eventStruct + 1304, 64);\r\n      stringToUTF8(e.mapping, eventStruct + 1368, 64);\r\n    }\r\n  function _emscripten_get_gamepad_status(index, gamepadState) {\r\n  \r\n      // INVALID_PARAM is returned on a Gamepad index that never was there.\r\n      if (index < 0 || index >= JSEvents.lastGamepadState.length) return -5;\r\n  \r\n      // NO_DATA is returned on a Gamepad index that was removed.\r\n      // For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.\r\n      // This is because gamepads must keep their original position in the array.\r\n      // For example, removing the first of two gamepads produces [null/undefined/false, gamepad].\r\n      if (!JSEvents.lastGamepadState[index]) return -7;\r\n  \r\n      fillGamepadEventData(gamepadState, JSEvents.lastGamepadState[index]);\r\n      return 0;\r\n    }\r\n\r\n\r\n  function _emscripten_get_num_gamepads() {\r\n      // N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.\r\n      // Otherwise the following line will throw an exception.\r\n      return JSEvents.lastGamepadState.length;\r\n    }\r\n\r\n  function _emscripten_get_screen_size(width, height) {\r\n      HEAP32[((width)>>2)] = screen.width;\r\n      HEAP32[((height)>>2)] = screen.height;\r\n    }\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }\r\n  var _emscripten_glActiveTexture = _glActiveTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glAttachShader(program, shader) {\r\n      GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glAttachShader = _glAttachShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginQuery(target, id) {\r\n      GLctx.beginQuery(target, GL.queries[id]);\r\n    }\r\n  var _emscripten_glBeginQuery = _glBeginQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginQueryEXT(target, id) {\r\n      GLctx.disjointTimerQueryExt['beginQueryEXT'](target, GL.queries[id]);\r\n    }\r\n  var _emscripten_glBeginQueryEXT = _glBeginQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginTransformFeedback(x0) { GLctx.beginTransformFeedback(x0) }\r\n  var _emscripten_glBeginTransformFeedback = _glBeginTransformFeedback;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glBindAttribLocation(program, index, name) {\r\n      GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\r\n    }\r\n  var _emscripten_glBindAttribLocation = _glBindAttribLocation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBuffer(target, buffer) {\r\n      if (target == 0x8892 /*GL_ARRAY_BUFFER*/) {\r\n        GLctx.currentArrayBufferBinding = buffer;\r\n      } else if (target == 0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/) {\r\n        GLctx.currentElementArrayBufferBinding = buffer;\r\n      }\r\n  \r\n      if (target == 0x88EB /*GL_PIXEL_PACK_BUFFER*/) {\r\n        // In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that binding point is non-null to know what is\r\n        // the proper API function to call.\r\n        GLctx.currentPixelPackBufferBinding = buffer;\r\n      } else if (target == 0x88EC /*GL_PIXEL_UNPACK_BUFFER*/) {\r\n        // In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to\r\n        // use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that\r\n        // binding point is non-null to know what is the proper API function to\r\n        // call.\r\n        GLctx.currentPixelUnpackBufferBinding = buffer;\r\n      }\r\n      GLctx.bindBuffer(target, GL.buffers[buffer]);\r\n    }\r\n  var _emscripten_glBindBuffer = _glBindBuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBufferBase(target, index, buffer) {\r\n      GLctx.bindBufferBase(target, index, GL.buffers[buffer]);\r\n    }\r\n  var _emscripten_glBindBufferBase = _glBindBufferBase;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBufferRange(target, index, buffer, offset, ptrsize) {\r\n      GLctx.bindBufferRange(target, index, GL.buffers[buffer], offset, ptrsize);\r\n    }\r\n  var _emscripten_glBindBufferRange = _glBindBufferRange;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindFramebuffer(target, framebuffer) {\r\n  \r\n      GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\r\n  \r\n    }\r\n  var _emscripten_glBindFramebuffer = _glBindFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindRenderbuffer(target, renderbuffer) {\r\n      GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\r\n    }\r\n  var _emscripten_glBindRenderbuffer = _glBindRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindSampler(unit, sampler) {\r\n      GLctx.bindSampler(unit, GL.samplers[sampler]);\r\n    }\r\n  var _emscripten_glBindSampler = _glBindSampler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindTexture(target, texture) {\r\n      GLctx.bindTexture(target, GL.textures[texture]);\r\n    }\r\n  var _emscripten_glBindTexture = _glBindTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindTransformFeedback(target, id) {\r\n      GLctx.bindTransformFeedback(target, GL.transformFeedbacks[id]);\r\n    }\r\n  var _emscripten_glBindTransformFeedback = _glBindTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindVertexArray(vao) {\r\n      GLctx.bindVertexArray(GL.vaos[vao]);\r\n      var ibo = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n      GLctx.currentElementArrayBufferBinding = ibo ? (ibo.name | 0) : 0;\r\n    }\r\n  var _emscripten_glBindVertexArray = _glBindVertexArray;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glBindVertexArrayOES = _glBindVertexArray;\r\n  var _emscripten_glBindVertexArrayOES = _glBindVertexArrayOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendColor(x0, x1, x2, x3) { GLctx.blendColor(x0, x1, x2, x3) }\r\n  var _emscripten_glBlendColor = _glBlendColor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendEquation(x0) { GLctx.blendEquation(x0) }\r\n  var _emscripten_glBlendEquation = _glBlendEquation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendEquationSeparate(x0, x1) { GLctx.blendEquationSeparate(x0, x1) }\r\n  var _emscripten_glBlendEquationSeparate = _glBlendEquationSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }\r\n  var _emscripten_glBlendFunc = _glBlendFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendFuncSeparate(x0, x1, x2, x3) { GLctx.blendFuncSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glBlendFuncSeparate = _glBlendFuncSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) { GLctx.blitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) }\r\n  var _emscripten_glBlitFramebuffer = _glBlitFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBufferData(target, size, data, usage) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        // If size is zero, WebGL would interpret uploading the whole input arraybuffer (starting from given offset), which would\r\n        // not make sense in WebAssembly, so avoid uploading if size is zero. However we must still call bufferData to establish a\r\n        // backing storage of zero bytes.\r\n        if (data && size) {\r\n          GLctx.bufferData(target, HEAPU8, usage, data, size);\r\n        } else {\r\n          GLctx.bufferData(target, size, usage);\r\n        }\r\n      } else {\r\n        // N.b. here first form specifies a heap subarray, second form an integer size, so the ?: code here is polymorphic. It is advised to avoid\r\n        // randomly mixing both uses in calling code, to avoid any potential JS engine JIT issues.\r\n        GLctx.bufferData(target, data ? HEAPU8.subarray(data, data+size) : size, usage);\r\n      }\r\n    }\r\n  var _emscripten_glBufferData = _glBufferData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBufferSubData(target, offset, size, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        size && GLctx.bufferSubData(target, offset, HEAPU8, data, size);\r\n        return;\r\n      }\r\n      GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));\r\n    }\r\n  var _emscripten_glBufferSubData = _glBufferSubData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCheckFramebufferStatus(x0) { return GLctx.checkFramebufferStatus(x0) }\r\n  var _emscripten_glCheckFramebufferStatus = _glCheckFramebufferStatus;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClear(x0) { GLctx.clear(x0) }\r\n  var _emscripten_glClear = _glClear;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferfi(x0, x1, x2, x3) { GLctx.clearBufferfi(x0, x1, x2, x3) }\r\n  var _emscripten_glClearBufferfi = _glClearBufferfi;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferfv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferfv(buffer, drawbuffer, HEAPF32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferfv = _glClearBufferfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferiv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferiv(buffer, drawbuffer, HEAP32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferiv = _glClearBufferiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferuiv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferuiv(buffer, drawbuffer, HEAPU32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferuiv = _glClearBufferuiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }\r\n  var _emscripten_glClearColor = _glClearColor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearDepthf(x0) { GLctx.clearDepth(x0) }\r\n  var _emscripten_glClearDepthf = _glClearDepthf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearStencil(x0) { GLctx.clearStencil(x0) }\r\n  var _emscripten_glClearStencil = _glClearStencil;\r\n\r\n  function convertI32PairToI53(lo, hi) {\r\n      return (lo >>> 0) + hi * 4294967296;\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glClientWaitSync(sync, flags, timeout_low, timeout_high) {\r\n      // WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.\r\n      // In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.\r\n      // Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)\r\n      // See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      return GLctx.clientWaitSync(GL.syncs[sync], flags, timeout);\r\n    }\r\n  var _emscripten_glClientWaitSync = _glClientWaitSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glColorMask(red, green, blue, alpha) {\r\n      GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\r\n    }\r\n  var _emscripten_glColorMask = _glColorMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompileShader(shader) {\r\n      GLctx.compileShader(GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glCompileShader = _glCompileShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data);\r\n        } else {\r\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    }\r\n  var _emscripten_glCompressedTexImage2D = _glCompressedTexImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data);\r\n      } else {\r\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, HEAPU8, data, imageSize);\r\n      }\r\n    }\r\n  var _emscripten_glCompressedTexImage3D = _glCompressedTexImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\r\n        } else {\r\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    }\r\n  var _emscripten_glCompressedTexSubImage2D = _glCompressedTexSubImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\r\n      } else {\r\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, HEAPU8, data, imageSize);\r\n      }\r\n    }\r\n  var _emscripten_glCompressedTexSubImage3D = _glCompressedTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyBufferSubData(x0, x1, x2, x3, x4) { GLctx.copyBufferSubData(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glCopyBufferSubData = _glCopyBufferSubData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\r\n  var _emscripten_glCopyTexImage2D = _glCopyTexImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\r\n  var _emscripten_glCopyTexSubImage2D = _glCopyTexSubImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) { GLctx.copyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) }\r\n  var _emscripten_glCopyTexSubImage3D = _glCopyTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCreateProgram() {\r\n      var id = GL.getNewId(GL.programs);\r\n      var program = GLctx.createProgram();\r\n      // Store additional information needed for each shader program:\r\n      program.name = id;\r\n      // Lazy cache results of glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)\r\n      program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\r\n      program.uniformIdCounter = 1;\r\n      GL.programs[id] = program;\r\n      return id;\r\n    }\r\n  var _emscripten_glCreateProgram = _glCreateProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCreateShader(shaderType) {\r\n      var id = GL.getNewId(GL.shaders);\r\n      GL.shaders[id] = GLctx.createShader(shaderType);\r\n  \r\n      return id;\r\n    }\r\n  var _emscripten_glCreateShader = _glCreateShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCullFace(x0) { GLctx.cullFace(x0) }\r\n  var _emscripten_glCullFace = _glCullFace;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteBuffers(n, buffers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((buffers)+(i*4))>>2)];\r\n        var buffer = GL.buffers[id];\r\n  \r\n        // From spec: \"glDeleteBuffers silently ignores 0's and names that do not\r\n        // correspond to existing buffer objects.\"\r\n        if (!buffer) continue;\r\n  \r\n        GLctx.deleteBuffer(buffer);\r\n        buffer.name = 0;\r\n        GL.buffers[id] = null;\r\n  \r\n        if (id == GLctx.currentArrayBufferBinding) GLctx.currentArrayBufferBinding = 0;\r\n        if (id == GLctx.currentElementArrayBufferBinding) GLctx.currentElementArrayBufferBinding = 0;\r\n        if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\r\n        if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteBuffers = _glDeleteBuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteFramebuffers(n, framebuffers) {\r\n      for (var i = 0; i < n; ++i) {\r\n        var id = HEAP32[(((framebuffers)+(i*4))>>2)];\r\n        var framebuffer = GL.framebuffers[id];\r\n        if (!framebuffer) continue; // GL spec: \"glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects\".\r\n        GLctx.deleteFramebuffer(framebuffer);\r\n        framebuffer.name = 0;\r\n        GL.framebuffers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteFramebuffers = _glDeleteFramebuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteProgram(id) {\r\n      if (!id) return;\r\n      var program = GL.programs[id];\r\n      if (!program) { // glDeleteProgram actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteProgram(program);\r\n      program.name = 0;\r\n      GL.programs[id] = null;\r\n    }\r\n  var _emscripten_glDeleteProgram = _glDeleteProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteQueries(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.deleteQuery(query);\r\n        GL.queries[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteQueries = _glDeleteQueries;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteQueriesEXT(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);\r\n        GL.queries[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteQueriesEXT = _glDeleteQueriesEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteRenderbuffers(n, renderbuffers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];\r\n        var renderbuffer = GL.renderbuffers[id];\r\n        if (!renderbuffer) continue; // GL spec: \"glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects\".\r\n        GLctx.deleteRenderbuffer(renderbuffer);\r\n        renderbuffer.name = 0;\r\n        GL.renderbuffers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteRenderbuffers = _glDeleteRenderbuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteSamplers(n, samplers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((samplers)+(i*4))>>2)];\r\n        var sampler = GL.samplers[id];\r\n        if (!sampler) continue;\r\n        GLctx.deleteSampler(sampler);\r\n        sampler.name = 0;\r\n        GL.samplers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteSamplers = _glDeleteSamplers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteShader(id) {\r\n      if (!id) return;\r\n      var shader = GL.shaders[id];\r\n      if (!shader) { // glDeleteShader actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteShader(shader);\r\n      GL.shaders[id] = null;\r\n    }\r\n  var _emscripten_glDeleteShader = _glDeleteShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteSync(id) {\r\n      if (!id) return;\r\n      var sync = GL.syncs[id];\r\n      if (!sync) { // glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteSync(sync);\r\n      sync.name = 0;\r\n      GL.syncs[id] = null;\r\n    }\r\n  var _emscripten_glDeleteSync = _glDeleteSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteTextures(n, textures) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((textures)+(i*4))>>2)];\r\n        var texture = GL.textures[id];\r\n        if (!texture) continue; // GL spec: \"glDeleteTextures silently ignores 0s and names that do not correspond to existing textures\".\r\n        GLctx.deleteTexture(texture);\r\n        texture.name = 0;\r\n        GL.textures[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteTextures = _glDeleteTextures;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteTransformFeedbacks(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var transformFeedback = GL.transformFeedbacks[id];\r\n        if (!transformFeedback) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.deleteTransformFeedback(transformFeedback);\r\n        transformFeedback.name = 0;\r\n        GL.transformFeedbacks[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteTransformFeedbacks = _glDeleteTransformFeedbacks;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteVertexArrays(n, vaos) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\r\n        GLctx.deleteVertexArray(GL.vaos[id]);\r\n        GL.vaos[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteVertexArrays = _glDeleteVertexArrays;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDeleteVertexArraysOES = _glDeleteVertexArrays;\r\n  var _emscripten_glDeleteVertexArraysOES = _glDeleteVertexArraysOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthFunc(x0) { GLctx.depthFunc(x0) }\r\n  var _emscripten_glDepthFunc = _glDepthFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthMask(flag) {\r\n      GLctx.depthMask(!!flag);\r\n    }\r\n  var _emscripten_glDepthMask = _glDepthMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthRangef(x0, x1) { GLctx.depthRange(x0, x1) }\r\n  var _emscripten_glDepthRangef = _glDepthRangef;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDetachShader(program, shader) {\r\n      GLctx.detachShader(GL.programs[program], GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glDetachShader = _glDetachShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDisable(x0) { GLctx.disable(x0) }\r\n  var _emscripten_glDisable = _glDisable;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDisableVertexAttribArray(index) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = false;\r\n      GLctx.disableVertexAttribArray(index);\r\n    }\r\n  var _emscripten_glDisableVertexAttribArray = _glDisableVertexAttribArray;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawArrays(mode, first, count) {\r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(first + count);\r\n  \r\n      GLctx.drawArrays(mode, first, count);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings();\r\n    }\r\n  var _emscripten_glDrawArrays = _glDrawArrays;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawArraysInstanced(mode, first, count, primcount) {\r\n      GLctx.drawArraysInstanced(mode, first, count, primcount);\r\n    }\r\n  var _emscripten_glDrawArraysInstanced = _glDrawArraysInstanced;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedANGLE = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedANGLE = _glDrawArraysInstancedANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedARB = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedARB = _glDrawArraysInstancedARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedEXT = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedEXT = _glDrawArraysInstancedEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedNV = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedNV = _glDrawArraysInstancedNV;\r\n\r\n  var tempFixedLengthArray = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glDrawBuffers(n, bufs) {\r\n  \r\n      var bufArray = tempFixedLengthArray[n];\r\n      for (var i = 0; i < n; i++) {\r\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.drawBuffers(bufArray);\r\n    }\r\n  var _emscripten_glDrawBuffers = _glDrawBuffers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffersEXT = _glDrawBuffers;\r\n  var _emscripten_glDrawBuffersEXT = _glDrawBuffersEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffersWEBGL = _glDrawBuffers;\r\n  var _emscripten_glDrawBuffersWEBGL = _glDrawBuffersWEBGL;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawElements(mode, count, type, indices) {\r\n      var buf;\r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        var size = GL.calcBufLength(1, type, 0, count);\r\n        buf = GL.getTempIndexBuffer(size);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, buf);\r\n        GLctx.bufferSubData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/,\r\n                                 0,\r\n                                 HEAPU8.subarray(indices, indices + size));\r\n        // the index is now 0\r\n        indices = 0;\r\n      }\r\n  \r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      GLctx.drawElements(mode, count, type, indices);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n      }\r\n    }\r\n  var _emscripten_glDrawElements = _glDrawElements;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawElementsInstanced(mode, count, type, indices, primcount) {\r\n      GLctx.drawElementsInstanced(mode, count, type, indices, primcount);\r\n    }\r\n  var _emscripten_glDrawElementsInstanced = _glDrawElementsInstanced;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedANGLE = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedANGLE = _glDrawElementsInstancedANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedARB = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedARB = _glDrawElementsInstancedARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedEXT = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedEXT = _glDrawElementsInstancedEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedNV = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedNV = _glDrawElementsInstancedNV;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawRangeElements(mode, start, end, count, type, indices) {\r\n      // TODO: This should be a trivial pass-though function registered at the bottom of this page as\r\n      // glFuncs[6][1] += ' drawRangeElements';\r\n      // but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,\r\n      // we work around by ignoring the range.\r\n      _glDrawElements(mode, count, type, indices);\r\n    }\r\n  var _emscripten_glDrawRangeElements = _glDrawRangeElements;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEnable(x0) { GLctx.enable(x0) }\r\n  var _emscripten_glEnable = _glEnable;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEnableVertexAttribArray(index) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = true;\r\n      GLctx.enableVertexAttribArray(index);\r\n    }\r\n  var _emscripten_glEnableVertexAttribArray = _glEnableVertexAttribArray;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndQuery(x0) { GLctx.endQuery(x0) }\r\n  var _emscripten_glEndQuery = _glEndQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndQueryEXT(target) {\r\n      GLctx.disjointTimerQueryExt['endQueryEXT'](target);\r\n    }\r\n  var _emscripten_glEndQueryEXT = _glEndQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndTransformFeedback() { GLctx.endTransformFeedback() }\r\n  var _emscripten_glEndTransformFeedback = _glEndTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFenceSync(condition, flags) {\r\n      var sync = GLctx.fenceSync(condition, flags);\r\n      if (sync) {\r\n        var id = GL.getNewId(GL.syncs);\r\n        sync.name = id;\r\n        GL.syncs[id] = sync;\r\n        return id;\r\n      }\r\n      return 0; // Failed to create a sync object\r\n    }\r\n  var _emscripten_glFenceSync = _glFenceSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFinish() { GLctx.finish() }\r\n  var _emscripten_glFinish = _glFinish;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFlush() { GLctx.flush() }\r\n  var _emscripten_glFlush = _glFlush;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer) {\r\n      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,\r\n                                         GL.renderbuffers[renderbuffer]);\r\n    }\r\n  var _emscripten_glFramebufferRenderbuffer = _glFramebufferRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferTexture2D(target, attachment, textarget, texture, level) {\r\n      GLctx.framebufferTexture2D(target, attachment, textarget,\r\n                                      GL.textures[texture], level);\r\n    }\r\n  var _emscripten_glFramebufferTexture2D = _glFramebufferTexture2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferTextureLayer(target, attachment, texture, level, layer) {\r\n      GLctx.framebufferTextureLayer(target, attachment, GL.textures[texture], level, layer);\r\n    }\r\n  var _emscripten_glFramebufferTextureLayer = _glFramebufferTextureLayer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFrontFace(x0) { GLctx.frontFace(x0) }\r\n  var _emscripten_glFrontFace = _glFrontFace;\r\n\r\n  function __glGenObject(n, buffers, createFunction, objectTable\r\n      ) {\r\n      for (var i = 0; i < n; i++) {\r\n        var buffer = GLctx[createFunction]();\r\n        var id = buffer && GL.getNewId(objectTable);\r\n        if (buffer) {\r\n          buffer.name = id;\r\n          objectTable[id] = buffer;\r\n        } else {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n        }\r\n        HEAP32[(((buffers)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenBuffers(n, buffers) {\r\n      __glGenObject(n, buffers, 'createBuffer', GL.buffers\r\n        );\r\n    }\r\n  var _emscripten_glGenBuffers = _glGenBuffers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenFramebuffers(n, ids) {\r\n      __glGenObject(n, ids, 'createFramebuffer', GL.framebuffers\r\n        );\r\n    }\r\n  var _emscripten_glGenFramebuffers = _glGenFramebuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenQueries(n, ids) {\r\n      __glGenObject(n, ids, 'createQuery', GL.queries\r\n        );\r\n    }\r\n  var _emscripten_glGenQueries = _glGenQueries;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenQueriesEXT(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var query = GLctx.disjointTimerQueryExt['createQueryEXT']();\r\n        if (!query) {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n          while (i < n) HEAP32[(((ids)+(i++*4))>>2)] = 0;\r\n          return;\r\n        }\r\n        var id = GL.getNewId(GL.queries);\r\n        query.name = id;\r\n        GL.queries[id] = query;\r\n        HEAP32[(((ids)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  var _emscripten_glGenQueriesEXT = _glGenQueriesEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenRenderbuffers(n, renderbuffers) {\r\n      __glGenObject(n, renderbuffers, 'createRenderbuffer', GL.renderbuffers\r\n        );\r\n    }\r\n  var _emscripten_glGenRenderbuffers = _glGenRenderbuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenSamplers(n, samplers) {\r\n      __glGenObject(n, samplers, 'createSampler', GL.samplers\r\n        );\r\n    }\r\n  var _emscripten_glGenSamplers = _glGenSamplers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenTextures(n, textures) {\r\n      __glGenObject(n, textures, 'createTexture', GL.textures\r\n        );\r\n    }\r\n  var _emscripten_glGenTextures = _glGenTextures;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenTransformFeedbacks(n, ids) {\r\n      __glGenObject(n, ids, 'createTransformFeedback', GL.transformFeedbacks\r\n        );\r\n    }\r\n  var _emscripten_glGenTransformFeedbacks = _glGenTransformFeedbacks;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenVertexArrays(n, arrays) {\r\n      __glGenObject(n, arrays, 'createVertexArray', GL.vaos\r\n        );\r\n    }\r\n  var _emscripten_glGenVertexArrays = _glGenVertexArrays;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGenVertexArraysOES = _glGenVertexArrays;\r\n  var _emscripten_glGenVertexArraysOES = _glGenVertexArraysOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenerateMipmap(x0) { GLctx.generateMipmap(x0) }\r\n  var _emscripten_glGenerateMipmap = _glGenerateMipmap;\r\n\r\n  \r\n  function __glGetActiveAttribOrUniform(funcName, program, index, bufSize, length, size, type, name) {\r\n      program = GL.programs[program];\r\n      var info = GLctx[funcName](program, index);\r\n      if (info) { // If an error occurs, nothing will be written to length, size and type and name.\r\n        var numBytesWrittenExclNull = name && stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n        if (size) HEAP32[((size)>>2)] = info.size;\r\n        if (type) HEAP32[((type)>>2)] = info.type;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveAttrib(program, index, bufSize, length, size, type, name) {\r\n      __glGetActiveAttribOrUniform('getActiveAttrib', program, index, bufSize, length, size, type, name);\r\n    }\r\n  var _emscripten_glGetActiveAttrib = _glGetActiveAttrib;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniform(program, index, bufSize, length, size, type, name) {\r\n      __glGetActiveAttribOrUniform('getActiveUniform', program, index, bufSize, length, size, type, name);\r\n    }\r\n  var _emscripten_glGetActiveUniform = _glGetActiveUniform;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName) {\r\n      program = GL.programs[program];\r\n  \r\n      var result = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\r\n      if (!result) return; // If an error occurs, nothing will be written to uniformBlockName or length.\r\n      if (uniformBlockName && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(result, uniformBlockName, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformBlockName = _glGetActiveUniformBlockName;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8A41 /* GL_UNIFORM_BLOCK_NAME_LENGTH */) {\r\n        var name = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\r\n        HEAP32[((params)>>2)] = name.length+1;\r\n        return;\r\n      }\r\n  \r\n      var result = GLctx.getActiveUniformBlockParameter(program, uniformBlockIndex, pname);\r\n      if (result === null) return; // If an error occurs, nothing should be written to params.\r\n      if (pname == 0x8A43 /*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/) {\r\n        for (var i = 0; i < result.length; i++) {\r\n          HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n        }\r\n      } else {\r\n        HEAP32[((params)>>2)] = result;\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformBlockiv = _glGetActiveUniformBlockiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && uniformIndices == 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var ids = [];\r\n      for (var i = 0; i < uniformCount; i++) {\r\n        ids.push(HEAP32[(((uniformIndices)+(i*4))>>2)]);\r\n      }\r\n  \r\n      var result = GLctx.getActiveUniforms(program, ids, pname);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to params.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformsiv = _glGetActiveUniformsiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetAttachedShaders(program, maxCount, count, shaders) {\r\n      var result = GLctx.getAttachedShaders(GL.programs[program]);\r\n      var len = result.length;\r\n      if (len > maxCount) {\r\n        len = maxCount;\r\n      }\r\n      HEAP32[((count)>>2)] = len;\r\n      for (var i = 0; i < len; ++i) {\r\n        var id = GL.shaders.indexOf(result[i]);\r\n        HEAP32[(((shaders)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  var _emscripten_glGetAttachedShaders = _glGetAttachedShaders;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetAttribLocation(program, name) {\r\n      return GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\r\n    }\r\n  var _emscripten_glGetAttribLocation = _glGetAttribLocation;\r\n\r\n  function writeI53ToI64(ptr, num) {\r\n      HEAPU32[ptr>>2] = num;\r\n      HEAPU32[ptr+4>>2] = (num - HEAPU32[ptr>>2])/4294967296;\r\n    }\r\n  \r\n  function emscriptenWebGLGet(name_, p, type) {\r\n      // Guard against user passing a null pointer.\r\n      // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.\r\n      // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but\r\n      // better to report an error instead of doing anything random.\r\n      if (!p) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = undefined;\r\n      switch (name_) { // Handle a few trivial GLES values\r\n        case 0x8DFA: // GL_SHADER_COMPILER\r\n          ret = 1;\r\n          break;\r\n        case 0x8DF8: // GL_SHADER_BINARY_FORMATS\r\n          if (type != 0 && type != 1) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n          }\r\n          return; // Do not write anything to the out pointer, since no binary formats are supported.\r\n        case 0x87FE: // GL_NUM_PROGRAM_BINARY_FORMATS\r\n        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS\r\n          ret = 0;\r\n          break;\r\n        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS\r\n          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),\r\n          // so implement it ourselves to allow C++ GLES2 code get the length.\r\n          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);\r\n          ret = formats ? formats.length : 0;\r\n          break;\r\n  \r\n        case 0x821D: // GL_NUM_EXTENSIONS\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n            return;\r\n          }\r\n          // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          var exts = GLctx.getSupportedExtensions() || [];\r\n          ret = 2 * exts.length; // each extension is duplicated, first in unprefixed WebGL form, and then a second time with \"GL_\" prefix.\r\n          break;\r\n        case 0x821B: // GL_MAJOR_VERSION\r\n        case 0x821C: // GL_MINOR_VERSION\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          ret = name_ == 0x821B ? 3 : 0; // return version 3.0\r\n          break;\r\n      }\r\n  \r\n      if (ret === undefined) {\r\n        var result = GLctx.getParameter(name_);\r\n        switch (typeof result) {\r\n          case \"number\":\r\n            ret = result;\r\n            break;\r\n          case \"boolean\":\r\n            ret = result ? 1 : 0;\r\n            break;\r\n          case \"string\":\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          case \"object\":\r\n            if (result === null) {\r\n              // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise\r\n              // can mean an invalid name_, which we need to report as an error\r\n              switch (name_) {\r\n                case 0x8894: // ARRAY_BUFFER_BINDING\r\n                case 0x8B8D: // CURRENT_PROGRAM\r\n                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING\r\n                case 0x8CA6: // FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING\r\n                case 0x8CA7: // RENDERBUFFER_BINDING\r\n                case 0x8069: // TEXTURE_BINDING_2D\r\n                case 0x85B5: // WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES\r\n                case 0x8F36: // COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER\r\n                case 0x8F37: // COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER\r\n                case 0x88ED: // PIXEL_PACK_BUFFER_BINDING\r\n                case 0x88EF: // PIXEL_UNPACK_BUFFER_BINDING\r\n                case 0x8CAA: // READ_FRAMEBUFFER_BINDING\r\n                case 0x8919: // SAMPLER_BINDING\r\n                case 0x8C1D: // TEXTURE_BINDING_2D_ARRAY\r\n                case 0x806A: // TEXTURE_BINDING_3D\r\n                case 0x8E25: // TRANSFORM_FEEDBACK_BINDING\r\n                case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n                case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP\r\n                  ret = 0;\r\n                  break;\r\n                }\r\n                default: {\r\n                  GL.recordError(0x500); // GL_INVALID_ENUM\r\n                  return;\r\n                }\r\n              }\r\n            } else if (result instanceof Float32Array ||\r\n                       result instanceof Uint32Array ||\r\n                       result instanceof Int32Array ||\r\n                       result instanceof Array) {\r\n              for (var i = 0; i < result.length; ++i) {\r\n                switch (type) {\r\n                  case 0: HEAP32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 2: HEAPF32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 4: HEAP8[(((p)+(i))>>0)] = result[i] ? 1 : 0; break;\r\n                }\r\n              }\r\n              return;\r\n            } else {\r\n              try {\r\n                ret = result.name | 0;\r\n              } catch(e) {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                err('GL_INVALID_ENUM in glGet' + type + 'v: Unknown object returned from WebGL getParameter(' + name_ + ')! (error: ' + e + ')');\r\n                return;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            err('GL_INVALID_ENUM in glGet' + type + 'v: Native code calling glGet' + type + 'v(' + name_ + ') and it returns ' + result + ' of type ' + typeof(result) + '!');\r\n            return;\r\n        }\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(p, ret); break;\r\n        case 0: HEAP32[((p)>>2)] = ret; break;\r\n        case 2:   HEAPF32[((p)>>2)] = ret; break;\r\n        case 4: HEAP8[((p)>>0)] = ret ? 1 : 0; break;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetBooleanv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 4);\r\n    }\r\n  var _emscripten_glGetBooleanv = _glGetBooleanv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetBufferParameteri64v(target, value, data) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      writeI53ToI64(data, GLctx.getBufferParameter(target, value));\r\n    }\r\n  var _emscripten_glGetBufferParameteri64v = _glGetBufferParameteri64v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetBufferParameteriv(target, value, data) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((data)>>2)] = GLctx.getBufferParameter(target, value);\r\n    }\r\n  var _emscripten_glGetBufferParameteriv = _glGetBufferParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetError() {\r\n      var error = GLctx.getError() || GL.lastError;\r\n      GL.lastError = 0/*GL_NO_ERROR*/;\r\n      return error;\r\n    }\r\n  var _emscripten_glGetError = _glGetError;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetFloatv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 2);\r\n    }\r\n  var _emscripten_glGetFloatv = _glGetFloatv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetFragDataLocation(program, name) {\r\n      return GLctx.getFragDataLocation(GL.programs[program], UTF8ToString(name));\r\n    }\r\n  var _emscripten_glGetFragDataLocation = _glGetFragDataLocation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetFramebufferAttachmentParameteriv(target, attachment, pname, params) {\r\n      var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\r\n      if (result instanceof WebGLRenderbuffer ||\r\n          result instanceof WebGLTexture) {\r\n        result = result.name | 0;\r\n      }\r\n      HEAP32[((params)>>2)] = result;\r\n    }\r\n  var _emscripten_glGetFramebufferAttachmentParameteriv = _glGetFramebufferAttachmentParameteriv;\r\n\r\n  function emscriptenWebGLGetIndexed(target, index, data, type) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var result = GLctx.getIndexedParameter(target, index);\r\n      var ret;\r\n      switch (typeof result) {\r\n        case 'boolean':\r\n          ret = result ? 1 : 0;\r\n          break;\r\n        case 'number':\r\n          ret = result;\r\n          break;\r\n        case 'object':\r\n          if (result === null) {\r\n            switch (target) {\r\n              case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n              case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                ret = 0;\r\n                break;\r\n              default: {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                return;\r\n              }\r\n            }\r\n          } else if (result instanceof WebGLBuffer) {\r\n            ret = result.name | 0;\r\n          } else {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          GL.recordError(0x500); // GL_INVALID_ENUM\r\n          return;\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(data, ret); break;\r\n        case 0: HEAP32[((data)>>2)] = ret; break;\r\n        case 2: HEAPF32[((data)>>2)] = ret; break;\r\n        case 4: HEAP8[((data)>>0)] = ret ? 1 : 0; break;\r\n        default: throw 'internal emscriptenWebGLGetIndexed() error, bad type: ' + type;\r\n      }\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glGetInteger64i_v(target, index, data) {\r\n      emscriptenWebGLGetIndexed(target, index, data, 1);\r\n    }\r\n  var _emscripten_glGetInteger64i_v = _glGetInteger64i_v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetInteger64v(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 1);\r\n    }\r\n  var _emscripten_glGetInteger64v = _glGetInteger64v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetIntegeri_v(target, index, data) {\r\n      emscriptenWebGLGetIndexed(target, index, data, 0);\r\n    }\r\n  var _emscripten_glGetIntegeri_v = _glGetIntegeri_v;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetIntegerv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 0);\r\n    }\r\n  var _emscripten_glGetIntegerv = _glGetIntegerv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetInternalformativ(target, internalformat, pname, bufSize, params) {\r\n      if (bufSize < 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getInternalformatParameter(target, internalformat, pname);\r\n      if (ret === null) return;\r\n      for (var i = 0; i < ret.length && i < bufSize; ++i) {\r\n        HEAP32[(((params)+(i*4))>>2)] = ret[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetInternalformativ = _glGetInternalformativ;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramBinary(program, bufSize, length, binaryFormat, binary) {\r\n      GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n    }\r\n  var _emscripten_glGetProgramBinary = _glGetProgramBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramInfoLog(program, maxLength, length, infoLog) {\r\n      var log = GLctx.getProgramInfoLog(GL.programs[program]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetProgramInfoLog = _glGetProgramInfoLog;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramiv(program, pname, p) {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      if (program >= GL.counter) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getProgramInfoLog(program);\r\n        if (log === null) log = '(unknown error)';\r\n        HEAP32[((p)>>2)] = log.length + 1;\r\n      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\r\n        if (!program.maxUniformLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n            program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformLength;\r\n      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\r\n        if (!program.maxAttributeLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/); ++i) {\r\n            program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxAttributeLength;\r\n      } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\r\n        if (!program.maxUniformBlockNameLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/); ++i) {\r\n            program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformBlockNameLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getProgramParameter(program, pname);\r\n      }\r\n    }\r\n  var _emscripten_glGetProgramiv = _glGetProgramiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjecti64vEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param;\r\n      if (GL.currentContext.version < 2)\r\n      {\r\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      }\r\n      else {\r\n        param = GLctx.getQueryParameter(query, pname);\r\n      }\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      writeI53ToI64(params, ret);\r\n    }\r\n  var _emscripten_glGetQueryObjecti64vEXT = _glGetQueryObjecti64vEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjectivEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n  var _emscripten_glGetQueryObjectivEXT = _glGetQueryObjectivEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectui64vEXT = _glGetQueryObjecti64vEXT;\r\n  var _emscripten_glGetQueryObjectui64vEXT = _glGetQueryObjectui64vEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjectuiv(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.getQueryParameter(query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n  var _emscripten_glGetQueryObjectuiv = _glGetQueryObjectuiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectuivEXT = _glGetQueryObjectivEXT;\r\n  var _emscripten_glGetQueryObjectuivEXT = _glGetQueryObjectuivEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryiv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getQuery(target, pname);\r\n    }\r\n  var _emscripten_glGetQueryiv = _glGetQueryiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryivEXT(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.disjointTimerQueryExt['getQueryEXT'](target, pname);\r\n    }\r\n  var _emscripten_glGetQueryivEXT = _glGetQueryivEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetRenderbufferParameteriv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getRenderbufferParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetRenderbufferParameteriv = _glGetRenderbufferParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSamplerParameterfv(sampler, pname, params) {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\r\n    }\r\n  var _emscripten_glGetSamplerParameterfv = _glGetSamplerParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSamplerParameteriv(sampler, pname, params) {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\r\n    }\r\n  var _emscripten_glGetSamplerParameteriv = _glGetSamplerParameteriv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderInfoLog(shader, maxLength, length, infoLog) {\r\n      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetShaderInfoLog = _glGetShaderInfoLog;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderPrecisionFormat(shaderType, precisionType, range, precision) {\r\n      var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\r\n      HEAP32[((range)>>2)] = result.rangeMin;\r\n      HEAP32[(((range)+(4))>>2)] = result.rangeMax;\r\n      HEAP32[((precision)>>2)] = result.precision;\r\n    }\r\n  var _emscripten_glGetShaderPrecisionFormat = _glGetShaderPrecisionFormat;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderSource(shader, bufSize, length, source) {\r\n      var result = GLctx.getShaderSource(GL.shaders[shader]);\r\n      if (!result) return; // If an error occurs, nothing will be written to length or source.\r\n      var numBytesWrittenExclNull = (bufSize > 0 && source) ? stringToUTF8(result, source, bufSize) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetShaderSource = _glGetShaderSource;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderiv(shader, pname, p) {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n        if (log === null) log = '(unknown error)';\r\n        // The GLES2 specification says that if the shader has an empty info log,\r\n        // a value of 0 is returned. Otherwise the log has a null char appended.\r\n        // (An empty string is falsey, so we can just check that instead of\r\n        // looking at log.length.)\r\n        var logLength = log ? log.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = logLength;\r\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\r\n        var source = GLctx.getShaderSource(GL.shaders[shader]);\r\n        // source may be a null, or the empty string, both of which are falsey\r\n        // values that we report a 0 length for.\r\n        var sourceLength = source ? source.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = sourceLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getShaderParameter(GL.shaders[shader], pname);\r\n      }\r\n    }\r\n  var _emscripten_glGetShaderiv = _glGetShaderiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetString(name_) {\r\n      var ret = GL.stringCache[name_];\r\n      if (!ret) {\r\n        switch (name_) {\r\n          case 0x1F03 /* GL_EXTENSIONS */:\r\n            var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n            exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\r\n            ret = stringToNewUTF8(exts.join(' '));\r\n            break;\r\n          case 0x1F00 /* GL_VENDOR */:\r\n          case 0x1F01 /* GL_RENDERER */:\r\n          case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\r\n          case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\r\n            var s = GLctx.getParameter(name_);\r\n            if (!s) {\r\n              GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            }\r\n            ret = s && stringToNewUTF8(s);\r\n            break;\r\n  \r\n          case 0x1F02 /* GL_VERSION */:\r\n            var glVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\r\n            // return GLES version string corresponding to the version of the WebGL context\r\n            if (GL.currentContext.version >= 2) glVersion = 'OpenGL ES 3.0 (' + glVersion + ')';\r\n            else\r\n            {\r\n              glVersion = 'OpenGL ES 2.0 (' + glVersion + ')';\r\n            }\r\n            ret = stringToNewUTF8(glVersion);\r\n            break;\r\n          case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\r\n            var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\r\n            // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\r\n            var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\r\n            var ver_num = glslVersion.match(ver_re);\r\n            if (ver_num !== null) {\r\n              if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\r\n              glslVersion = 'OpenGL ES GLSL ES ' + ver_num[1] + ' (' + glslVersion + ')';\r\n            }\r\n            ret = stringToNewUTF8(glslVersion);\r\n            break;\r\n          default:\r\n            GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            // fall through\r\n        }\r\n        GL.stringCache[name_] = ret;\r\n      }\r\n      return ret;\r\n    }\r\n  var _emscripten_glGetString = _glGetString;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetStringi(name, index) {\r\n      if (GL.currentContext.version < 2) {\r\n        GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n        return 0;\r\n      }\r\n      var stringiCache = GL.stringiCache[name];\r\n      if (stringiCache) {\r\n        if (index < 0 || index >= stringiCache.length) {\r\n          GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n          return 0;\r\n        }\r\n        return stringiCache[index];\r\n      }\r\n      switch (name) {\r\n        case 0x1F03 /* GL_EXTENSIONS */:\r\n          var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\r\n          exts = exts.map(function(e) { return stringToNewUTF8(e); });\r\n  \r\n          stringiCache = GL.stringiCache[name] = exts;\r\n          if (index < 0 || index >= stringiCache.length) {\r\n            GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n            return 0;\r\n          }\r\n          return stringiCache[index];\r\n        default:\r\n          GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n          return 0;\r\n      }\r\n    }\r\n  var _emscripten_glGetStringi = _glGetStringi;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSynciv(sync, pname, bufSize, length, values) {\r\n      if (bufSize < 0) {\r\n        // GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,\r\n        // so raise GL_INVALID_VALUE here as well.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!values) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getSyncParameter(GL.syncs[sync], pname);\r\n      if (ret !== null) {\r\n        HEAP32[((values)>>2)] = ret;\r\n        if (length) HEAP32[((length)>>2)] = 1; // Report a single value outputted.\r\n      }\r\n    }\r\n  var _emscripten_glGetSynciv = _glGetSynciv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTexParameterfv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetTexParameterfv = _glGetTexParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTexParameteriv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetTexParameteriv = _glGetTexParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name) {\r\n      program = GL.programs[program];\r\n      var info = GLctx.getTransformFeedbackVarying(program, index);\r\n      if (!info) return; // If an error occurred, the return parameters length, size, type and name will be unmodified.\r\n  \r\n      if (name && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n  \r\n      if (size) HEAP32[((size)>>2)] = info.size;\r\n      if (type) HEAP32[((type)>>2)] = info.type;\r\n    }\r\n  var _emscripten_glGetTransformFeedbackVarying = _glGetTransformFeedbackVarying;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformBlockIndex(program, uniformBlockName) {\r\n      return GLctx.getUniformBlockIndex(GL.programs[program], UTF8ToString(uniformBlockName));\r\n    }\r\n  var _emscripten_glGetUniformBlockIndex = _glGetUniformBlockIndex;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformIndices(program, uniformCount, uniformNames, uniformIndices) {\r\n      if (!uniformIndices) {\r\n        // GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense\r\n        // if uniformIndices == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && (uniformNames == 0 || uniformIndices == 0)) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var names = [];\r\n      for (var i = 0; i < uniformCount; i++)\r\n        names.push(UTF8ToString(HEAP32[(((uniformNames)+(i*4))>>2)]));\r\n  \r\n      var result = GLctx.getUniformIndices(program, names);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to uniformIndices.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((uniformIndices)+(i*4))>>2)] = result[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetUniformIndices = _glGetUniformIndices;\r\n\r\n  \r\n  /** @noinline */\r\n  function webglGetLeftBracePos(name) {\r\n      return name.slice(-1) == ']' && name.lastIndexOf('[');\r\n    }\r\n  \r\n  function webglPrepareUniformLocationsBeforeFirstUse(program) {\r\n      var uniformLocsById = program.uniformLocsById, // Maps GLuint -> WebGLUniformLocation\r\n        uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, // Maps name -> [uniform array length, GLuint]\r\n        i, j;\r\n  \r\n      // On the first time invocation of glGetUniformLocation on this shader program:\r\n      // initialize cache data structures and discover which uniforms are arrays.\r\n      if (!uniformLocsById) {\r\n        // maps GLint integer locations to WebGLUniformLocations\r\n        program.uniformLocsById = uniformLocsById = {};\r\n        // maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations\r\n        program.uniformArrayNamesById = {};\r\n  \r\n        for (i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n          var u = GLctx.getActiveUniform(program, i);\r\n          var nm = u.name;\r\n          var sz = u.size;\r\n          var lb = webglGetLeftBracePos(nm);\r\n          var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\r\n  \r\n          // Assign a new location.\r\n          var id = program.uniformIdCounter;\r\n          program.uniformIdCounter += sz;\r\n          // Eagerly get the location of the uniformArray[0] base element.\r\n          // The remaining indices >0 will be left for lazy evaluation to\r\n          // improve performance. Those may never be needed to fetch, if the\r\n          // application fills arrays always in full starting from the first\r\n          // element of the array.\r\n          uniformSizeAndIdsByName[arrayName] = [sz, id];\r\n  \r\n          // Store placeholder integers in place that highlight that these\r\n          // >0 index locations are array indices pending population.\r\n          for(j = 0; j < sz; ++j) {\r\n            uniformLocsById[id] = j;\r\n            program.uniformArrayNamesById[id++] = arrayName;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformLocation(program, name) {\r\n  \r\n      name = UTF8ToString(name);\r\n  \r\n      if (program = GL.programs[program]) {\r\n        webglPrepareUniformLocationsBeforeFirstUse(program);\r\n        var uniformLocsById = program.uniformLocsById; // Maps GLuint -> WebGLUniformLocation\r\n        var arrayIndex = 0;\r\n        var uniformBaseName = name;\r\n  \r\n        // Invariant: when populating integer IDs for uniform locations, we must maintain the precondition that\r\n        // arrays reside in contiguous addresses, i.e. for a 'vec4 colors[10];', colors[4] must be at location colors[0]+4.\r\n        // However, user might call glGetUniformLocation(program, \"colors\") for an array, so we cannot discover based on the user\r\n        // input arguments whether the uniform we are dealing with is an array. The only way to discover which uniforms are arrays\r\n        // is to enumerate over all the active uniforms in the program.\r\n        var leftBrace = webglGetLeftBracePos(name);\r\n  \r\n        // If user passed an array accessor \"[index]\", parse the array index off the accessor.\r\n        if (leftBrace > 0) {\r\n          arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0; // \"index]\", coerce parseInt(']') with >>>0 to treat \"foo[]\" as \"foo[0]\" and foo[-1] as unsigned out-of-bounds.\r\n          uniformBaseName = name.slice(0, leftBrace);\r\n        }\r\n  \r\n        // Have we cached the location of this uniform before?\r\n        var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName]; // A pair [array length, GLint of the uniform location]\r\n  \r\n        // If an uniform with this name exists, and if its index is within the array limits (if it's even an array),\r\n        // query the WebGLlocation, or return an existing cached location.\r\n        if (sizeAndId && arrayIndex < sizeAndId[0]) {\r\n          arrayIndex += sizeAndId[1]; // Add the base location of the uniform to the array index offset.\r\n          if ((uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name))) {\r\n            return arrayIndex;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // N.b. we are currently unable to distinguish between GL program IDs that never existed vs GL program IDs that have been deleted,\r\n        // so report GL_INVALID_VALUE in both cases.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n      }\r\n      return -1;\r\n    }\r\n  var _emscripten_glGetUniformLocation = _glGetUniformLocation;\r\n\r\n  function webglGetUniformLocation(location) {\r\n      var p = GLctx.currentProgram;\r\n  \r\n      if (p) {\r\n        var webglLoc = p.uniformLocsById[location];\r\n        // p.uniformLocsById[location] stores either an integer, or a WebGLUniformLocation.\r\n  \r\n        // If an integer, we have not yet bound the location, so do it now. The integer value specifies the array index\r\n        // we should bind to.\r\n        if (typeof webglLoc == 'number') {\r\n          p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? '[' + webglLoc + ']' : ''));\r\n        }\r\n        // Else an already cached WebGLUniformLocation, return it.\r\n        return webglLoc;\r\n      } else {\r\n        GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n      }\r\n    }\r\n  \r\n  \r\n  /** @suppress{checkTypes} */\r\n  function emscriptenWebGLGetUniform(program, location, params, type) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      webglPrepareUniformLocationsBeforeFirstUse(program);\r\n      var data = GLctx.getUniform(program, webglGetUniformLocation(location));\r\n      if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformfv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 2);\r\n    }\r\n  var _emscripten_glGetUniformfv = _glGetUniformfv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformiv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    }\r\n  var _emscripten_glGetUniformiv = _glGetUniformiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformuiv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    }\r\n  var _emscripten_glGetUniformuiv = _glGetUniformuiv;\r\n\r\n  /** @suppress{checkTypes} */\r\n  function emscriptenWebGLGetVertexAttrib(index, pname, params, type) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttrib*v on client-side array: not supported, bad data returned\");\r\n      }\r\n      var data = GLctx.getVertexAttrib(index, pname);\r\n      if (pname == 0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/) {\r\n        HEAP32[((params)>>2)] = data && data[\"name\"];\r\n      } else if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n          case 5: HEAP32[((params)>>2)] = Math.fround(data); break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 5: HEAP32[(((params)+(i*4))>>2)] = Math.fround(data[i]); break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribIiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\r\n    }\r\n  var _emscripten_glGetVertexAttribIiv = _glGetVertexAttribIiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetVertexAttribIuiv = _glGetVertexAttribIiv;\r\n  var _emscripten_glGetVertexAttribIuiv = _glGetVertexAttribIuiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribPointerv(index, pname, pointer) {\r\n      if (!pointer) {\r\n        // GLES2 specification does not specify how to behave if pointer is a null pointer. Since calling this function does not make sense\r\n        // if pointer == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttribPointer on client-side array: not supported, bad data returned\");\r\n      }\r\n      HEAP32[((pointer)>>2)] = GLctx.getVertexAttribOffset(index, pname);\r\n    }\r\n  var _emscripten_glGetVertexAttribPointerv = _glGetVertexAttribPointerv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribfv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2);\r\n    }\r\n  var _emscripten_glGetVertexAttribfv = _glGetVertexAttribfv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5);\r\n    }\r\n  var _emscripten_glGetVertexAttribiv = _glGetVertexAttribiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glHint(x0, x1) { GLctx.hint(x0, x1) }\r\n  var _emscripten_glHint = _glHint;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glInvalidateFramebuffer(target, numAttachments, attachments) {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.invalidateFramebuffer(target, list);\r\n    }\r\n  var _emscripten_glInvalidateFramebuffer = _glInvalidateFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glInvalidateSubFramebuffer(target, numAttachments, attachments, x, y, width, height) {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.invalidateSubFramebuffer(target, list, x, y, width, height);\r\n    }\r\n  var _emscripten_glInvalidateSubFramebuffer = _glInvalidateSubFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsBuffer(buffer) {\r\n      var b = GL.buffers[buffer];\r\n      if (!b) return 0;\r\n      return GLctx.isBuffer(b);\r\n    }\r\n  var _emscripten_glIsBuffer = _glIsBuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsEnabled(x0) { return GLctx.isEnabled(x0) }\r\n  var _emscripten_glIsEnabled = _glIsEnabled;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsFramebuffer(framebuffer) {\r\n      var fb = GL.framebuffers[framebuffer];\r\n      if (!fb) return 0;\r\n      return GLctx.isFramebuffer(fb);\r\n    }\r\n  var _emscripten_glIsFramebuffer = _glIsFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsProgram(program) {\r\n      program = GL.programs[program];\r\n      if (!program) return 0;\r\n      return GLctx.isProgram(program);\r\n    }\r\n  var _emscripten_glIsProgram = _glIsProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsQuery(id) {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.isQuery(query);\r\n    }\r\n  var _emscripten_glIsQuery = _glIsQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsQueryEXT(id) {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.disjointTimerQueryExt['isQueryEXT'](query);\r\n    }\r\n  var _emscripten_glIsQueryEXT = _glIsQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsRenderbuffer(renderbuffer) {\r\n      var rb = GL.renderbuffers[renderbuffer];\r\n      if (!rb) return 0;\r\n      return GLctx.isRenderbuffer(rb);\r\n    }\r\n  var _emscripten_glIsRenderbuffer = _glIsRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsSampler(id) {\r\n      var sampler = GL.samplers[id];\r\n      if (!sampler) return 0;\r\n      return GLctx.isSampler(sampler);\r\n    }\r\n  var _emscripten_glIsSampler = _glIsSampler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsShader(shader) {\r\n      var s = GL.shaders[shader];\r\n      if (!s) return 0;\r\n      return GLctx.isShader(s);\r\n    }\r\n  var _emscripten_glIsShader = _glIsShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsSync(sync) {\r\n      return GLctx.isSync(GL.syncs[sync]);\r\n    }\r\n  var _emscripten_glIsSync = _glIsSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsTexture(id) {\r\n      var texture = GL.textures[id];\r\n      if (!texture) return 0;\r\n      return GLctx.isTexture(texture);\r\n    }\r\n  var _emscripten_glIsTexture = _glIsTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsTransformFeedback(id) {\r\n      return GLctx.isTransformFeedback(GL.transformFeedbacks[id]);\r\n    }\r\n  var _emscripten_glIsTransformFeedback = _glIsTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsVertexArray(array) {\r\n  \r\n      var vao = GL.vaos[array];\r\n      if (!vao) return 0;\r\n      return GLctx.isVertexArray(vao);\r\n    }\r\n  var _emscripten_glIsVertexArray = _glIsVertexArray;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glIsVertexArrayOES = _glIsVertexArray;\r\n  var _emscripten_glIsVertexArrayOES = _glIsVertexArrayOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glLineWidth(x0) { GLctx.lineWidth(x0) }\r\n  var _emscripten_glLineWidth = _glLineWidth;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glLinkProgram(program) {\r\n      program = GL.programs[program];\r\n      GLctx.linkProgram(program);\r\n      // Invalidate earlier computed uniform->ID mappings, those have now become stale\r\n      program.uniformLocsById = 0; // Mark as null-like so that glGetUniformLocation() knows to populate this again.\r\n      program.uniformSizeAndIdsByName = {};\r\n  \r\n    }\r\n  var _emscripten_glLinkProgram = _glLinkProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPauseTransformFeedback() { GLctx.pauseTransformFeedback() }\r\n  var _emscripten_glPauseTransformFeedback = _glPauseTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPixelStorei(pname, param) {\r\n      if (pname == 0xCF5 /* GL_UNPACK_ALIGNMENT */) {\r\n        GL.unpackAlignment = param;\r\n      }\r\n      GLctx.pixelStorei(pname, param);\r\n    }\r\n  var _emscripten_glPixelStorei = _glPixelStorei;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPolygonOffset(x0, x1) { GLctx.polygonOffset(x0, x1) }\r\n  var _emscripten_glPolygonOffset = _glPolygonOffset;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glProgramBinary(program, binaryFormat, binary, length) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glProgramBinary = _glProgramBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glProgramParameteri(program, pname, value) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glProgramParameteri = _glProgramParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glQueryCounterEXT(id, target) {\r\n      GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id], target);\r\n    }\r\n  var _emscripten_glQueryCounterEXT = _glQueryCounterEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glReadBuffer(x0) { GLctx.readBuffer(x0) }\r\n  var _emscripten_glReadBuffer = _glReadBuffer;\r\n\r\n  function computeUnpackAlignedImageSize(width, height, sizePerPixel, alignment) {\r\n      function roundedToNextMultipleOf(x, y) {\r\n        return (x + y - 1) & -y;\r\n      }\r\n      var plainRowSize = width * sizePerPixel;\r\n      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);\r\n      return height * alignedRowSize;\r\n    }\r\n  \r\n  function colorChannelsInGlTextureFormat(format) {\r\n      // Micro-optimizations for size: map format to size by subtracting smallest enum value (0x1902) from all values first.\r\n      // Also omit the most common size value (1) from the list, which is assumed by formats not on the list.\r\n      var colorChannels = {\r\n        // 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,\r\n        // 0x1906 /* GL_ALPHA */ - 0x1902: 1,\r\n        5: 3,\r\n        6: 4,\r\n        // 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,\r\n        8: 2,\r\n        29502: 3,\r\n        29504: 4,\r\n        // 0x1903 /* GL_RED */ - 0x1902: 1,\r\n        26917: 2,\r\n        26918: 2,\r\n        // 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,\r\n        29846: 3,\r\n        29847: 4\r\n      };\r\n      return colorChannels[format - 0x1902]||1;\r\n    }\r\n  \r\n  function heapObjectForWebGLType(type) {\r\n      // Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare\r\n      // smaller values for the heap, for shorter generated code size.\r\n      // Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.\r\n      // (since most types are HEAPU16)\r\n      type -= 0x1400;\r\n      if (type == 0) return HEAP8;\r\n  \r\n      if (type == 1) return HEAPU8;\r\n  \r\n      if (type == 2) return HEAP16;\r\n  \r\n      if (type == 4) return HEAP32;\r\n  \r\n      if (type == 6) return HEAPF32;\r\n  \r\n      if (type == 5\r\n        || type == 28922\r\n        || type == 28520\r\n        || type == 30779\r\n        || type == 30782\r\n        )\r\n        return HEAPU32;\r\n  \r\n      return HEAPU16;\r\n    }\r\n  \r\n  function heapAccessShiftForWebGLHeap(heap) {\r\n      return 31 - Math.clz32(heap.BYTES_PER_ELEMENT);\r\n    }\r\n  \r\n  function emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) {\r\n      var heap = heapObjectForWebGLType(type);\r\n      var shift = heapAccessShiftForWebGLHeap(heap);\r\n      var byteSize = 1<<shift;\r\n      var sizePerPixel = colorChannelsInGlTextureFormat(format) * byteSize;\r\n      var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel, GL.unpackAlignment);\r\n      return heap.subarray(pixels >> shift, pixels + bytes >> shift);\r\n    }\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glReadPixels(x, y, width, height, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelPackBufferBinding) {\r\n          GLctx.readPixels(x, y, width, height, format, type, pixels);\r\n        } else {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.readPixels(x, y, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);\r\n      if (!pixelData) {\r\n        GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n        return;\r\n      }\r\n      GLctx.readPixels(x, y, width, height, format, type, pixelData);\r\n    }\r\n  var _emscripten_glReadPixels = _glReadPixels;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glReleaseShaderCompiler() {\r\n      // NOP (as allowed by GLES 2.0 spec)\r\n    }\r\n  var _emscripten_glReleaseShaderCompiler = _glReleaseShaderCompiler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glRenderbufferStorage(x0, x1, x2, x3) { GLctx.renderbufferStorage(x0, x1, x2, x3) }\r\n  var _emscripten_glRenderbufferStorage = _glRenderbufferStorage;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glRenderbufferStorageMultisample(x0, x1, x2, x3, x4) { GLctx.renderbufferStorageMultisample(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glRenderbufferStorageMultisample = _glRenderbufferStorageMultisample;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glResumeTransformFeedback() { GLctx.resumeTransformFeedback() }\r\n  var _emscripten_glResumeTransformFeedback = _glResumeTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSampleCoverage(value, invert) {\r\n      GLctx.sampleCoverage(value, !!invert);\r\n    }\r\n  var _emscripten_glSampleCoverage = _glSampleCoverage;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameterf(sampler, pname, param) {\r\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameterf = _glSamplerParameterf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameterfv(sampler, pname, params) {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameterfv = _glSamplerParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameteri(sampler, pname, param) {\r\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameteri = _glSamplerParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameteriv(sampler, pname, params) {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameteriv = _glSamplerParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glScissor(x0, x1, x2, x3) { GLctx.scissor(x0, x1, x2, x3) }\r\n  var _emscripten_glScissor = _glScissor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glShaderBinary(count, shaders, binaryformat, binary, length) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glShaderBinary = _glShaderBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glShaderSource(shader, count, string, length) {\r\n      var source = GL.getSource(shader, count, string, length);\r\n  \r\n      GLctx.shaderSource(GL.shaders[shader], source);\r\n    }\r\n  var _emscripten_glShaderSource = _glShaderSource;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilFunc(x0, x1, x2) { GLctx.stencilFunc(x0, x1, x2) }\r\n  var _emscripten_glStencilFunc = _glStencilFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilFuncSeparate(x0, x1, x2, x3) { GLctx.stencilFuncSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glStencilFuncSeparate = _glStencilFuncSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilMask(x0) { GLctx.stencilMask(x0) }\r\n  var _emscripten_glStencilMask = _glStencilMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilMaskSeparate(x0, x1) { GLctx.stencilMaskSeparate(x0, x1) }\r\n  var _emscripten_glStencilMaskSeparate = _glStencilMaskSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilOp(x0, x1, x2) { GLctx.stencilOp(x0, x1, x2) }\r\n  var _emscripten_glStencilOp = _glStencilOp;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilOpSeparate(x0, x1, x2, x3) { GLctx.stencilOpSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glStencilOpSeparate = _glStencilOpSeparate;\r\n\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null);\r\n    }\r\n  var _emscripten_glTexImage2D = _glTexImage2D;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, null);\r\n      }\r\n    }\r\n  var _emscripten_glTexImage3D = _glTexImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameterf(x0, x1, x2) { GLctx.texParameterf(x0, x1, x2) }\r\n  var _emscripten_glTexParameterf = _glTexParameterf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameterfv(target, pname, params) {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.texParameterf(target, pname, param);\r\n    }\r\n  var _emscripten_glTexParameterfv = _glTexParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }\r\n  var _emscripten_glTexParameteri = _glTexParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameteriv(target, pname, params) {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.texParameteri(target, pname, param);\r\n    }\r\n  var _emscripten_glTexParameteriv = _glTexParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexStorage2D(x0, x1, x2, x3, x4) { GLctx.texStorage2D(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glTexStorage2D = _glTexStorage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexStorage3D(x0, x1, x2, x3, x4, x5) { GLctx.texStorage3D(x0, x1, x2, x3, x4, x5) }\r\n  var _emscripten_glTexStorage3D = _glTexStorage3D;\r\n\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = null;\r\n      if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0);\r\n      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\r\n    }\r\n  var _emscripten_glTexSubImage2D = _glTexSubImage2D;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, null);\r\n      }\r\n    }\r\n  var _emscripten_glTexSubImage3D = _glTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTransformFeedbackVaryings(program, count, varyings, bufferMode) {\r\n      program = GL.programs[program];\r\n      var vars = [];\r\n      for (var i = 0; i < count; i++)\r\n        vars.push(UTF8ToString(HEAP32[(((varyings)+(i*4))>>2)]));\r\n  \r\n      GLctx.transformFeedbackVaryings(program, vars, bufferMode);\r\n    }\r\n  var _emscripten_glTransformFeedbackVaryings = _glTransformFeedbackVaryings;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1f(location, v0) {\r\n      GLctx.uniform1f(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1f = _glUniform1f;\r\n\r\n  \r\n  var miniTempWebGLFloatBuffers = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform1fv = _glUniform1fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1i(location, v0) {\r\n      GLctx.uniform1i(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1i = _glUniform1i;\r\n\r\n  \r\n  var miniTempWebGLIntBuffers = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform1iv = _glUniform1iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform1ui(location, v0) {\r\n      GLctx.uniform1ui(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1ui = _glUniform1ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform1uiv(location, count, value) {\r\n      count && GLctx.uniform1uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count);\r\n    }\r\n  var _emscripten_glUniform1uiv = _glUniform1uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2f(location, v0, v1) {\r\n      GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2f = _glUniform2f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform2fv = _glUniform2fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2i(location, v0, v1) {\r\n      GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2i = _glUniform2i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform2iv = _glUniform2iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform2ui(location, v0, v1) {\r\n      GLctx.uniform2ui(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2ui = _glUniform2ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform2uiv(location, count, value) {\r\n      count && GLctx.uniform2uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*2);\r\n    }\r\n  var _emscripten_glUniform2uiv = _glUniform2uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3f(location, v0, v1, v2) {\r\n      GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3f = _glUniform3f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform3fv = _glUniform3fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3i(location, v0, v1, v2) {\r\n      GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3i = _glUniform3i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform3iv = _glUniform3iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform3ui(location, v0, v1, v2) {\r\n      GLctx.uniform3ui(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3ui = _glUniform3ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform3uiv(location, count, value) {\r\n      count && GLctx.uniform3uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*3);\r\n    }\r\n  var _emscripten_glUniform3uiv = _glUniform3uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4f(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4f = _glUniform4f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 4 * count; i += 4) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform4fv = _glUniform4fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4i(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4i = _glUniform4i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAP32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform4iv = _glUniform4iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform4ui(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4ui(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4ui = _glUniform4ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform4uiv(location, count, value) {\r\n      count && GLctx.uniform4uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*4);\r\n    }\r\n  var _emscripten_glUniform4uiv = _glUniform4uiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding) {\r\n      program = GL.programs[program];\r\n  \r\n      GLctx.uniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding);\r\n    }\r\n  var _emscripten_glUniformBlockBinding = _glUniformBlockBinding;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix2fv = _glUniformMatrix2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2x3fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    }\r\n  var _emscripten_glUniformMatrix2x3fv = _glUniformMatrix2x3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2x4fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    }\r\n  var _emscripten_glUniformMatrix2x4fv = _glUniformMatrix2x4fv;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*9);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 32) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[9*count-1];\r\n        for (var i = 0; i < 9*count; i += 9) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n          view[i+4] = HEAPF32[(((value)+(4*i+16))>>2)];\r\n          view[i+5] = HEAPF32[(((value)+(4*i+20))>>2)];\r\n          view[i+6] = HEAPF32[(((value)+(4*i+24))>>2)];\r\n          view[i+7] = HEAPF32[(((value)+(4*i+28))>>2)];\r\n          view[i+8] = HEAPF32[(((value)+(4*i+32))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*36)>>2);\r\n      }\r\n      GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix3fv = _glUniformMatrix3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3x2fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    }\r\n  var _emscripten_glUniformMatrix3x2fv = _glUniformMatrix3x2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3x4fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    }\r\n  var _emscripten_glUniformMatrix3x4fv = _glUniformMatrix3x4fv;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*16);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 18) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[16*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 16 * count; i += 16) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n          view[i + 4] = heap[dst + 4];\r\n          view[i + 5] = heap[dst + 5];\r\n          view[i + 6] = heap[dst + 6];\r\n          view[i + 7] = heap[dst + 7];\r\n          view[i + 8] = heap[dst + 8];\r\n          view[i + 9] = heap[dst + 9];\r\n          view[i + 10] = heap[dst + 10];\r\n          view[i + 11] = heap[dst + 11];\r\n          view[i + 12] = heap[dst + 12];\r\n          view[i + 13] = heap[dst + 13];\r\n          view[i + 14] = heap[dst + 14];\r\n          view[i + 15] = heap[dst + 15];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*64)>>2);\r\n      }\r\n      GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix4fv = _glUniformMatrix4fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4x2fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    }\r\n  var _emscripten_glUniformMatrix4x2fv = _glUniformMatrix4x2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4x3fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    }\r\n  var _emscripten_glUniformMatrix4x3fv = _glUniformMatrix4x3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUseProgram(program) {\r\n      program = GL.programs[program];\r\n      GLctx.useProgram(program);\r\n      // Record the currently active program so that we can access the uniform\r\n      // mapping table of that program.\r\n      GLctx.currentProgram = program;\r\n    }\r\n  var _emscripten_glUseProgram = _glUseProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glValidateProgram(program) {\r\n      GLctx.validateProgram(GL.programs[program]);\r\n    }\r\n  var _emscripten_glValidateProgram = _glValidateProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib1f(x0, x1) { GLctx.vertexAttrib1f(x0, x1) }\r\n  var _emscripten_glVertexAttrib1f = _glVertexAttrib1f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib1fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib1f(index, HEAPF32[v>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib1fv = _glVertexAttrib1fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib2f(x0, x1, x2) { GLctx.vertexAttrib2f(x0, x1, x2) }\r\n  var _emscripten_glVertexAttrib2f = _glVertexAttrib2f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib2fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib2f(index, HEAPF32[v>>2], HEAPF32[v+4>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib2fv = _glVertexAttrib2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib3f(x0, x1, x2, x3) { GLctx.vertexAttrib3f(x0, x1, x2, x3) }\r\n  var _emscripten_glVertexAttrib3f = _glVertexAttrib3f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib3fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib3f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib3fv = _glVertexAttrib3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib4f(x0, x1, x2, x3, x4) { GLctx.vertexAttrib4f(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttrib4f = _glVertexAttrib4f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib4fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib4f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2], HEAPF32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib4fv = _glVertexAttrib4fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribDivisor(index, divisor) {\r\n      GLctx.vertexAttribDivisor(index, divisor);\r\n    }\r\n  var _emscripten_glVertexAttribDivisor = _glVertexAttribDivisor;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorANGLE = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorANGLE = _glVertexAttribDivisorANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorARB = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorARB = _glVertexAttribDivisorARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorEXT = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorEXT = _glVertexAttribDivisorEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorNV = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorNV = _glVertexAttribDivisorNV;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4i(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4i(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttribI4i = _glVertexAttribI4i;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4iv(index, v) {\r\n      GLctx.vertexAttribI4i(index, HEAP32[v>>2], HEAP32[v+4>>2], HEAP32[v+8>>2], HEAP32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttribI4iv = _glVertexAttribI4iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4ui(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4ui(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttribI4ui = _glVertexAttribI4ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4uiv(index, v) {\r\n      GLctx.vertexAttribI4ui(index, HEAPU32[v>>2], HEAPU32[v+4>>2], HEAPU32[v+8>>2], HEAPU32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttribI4uiv = _glVertexAttribI4uiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribIPointer(index, size, type, stride, ptr) {\r\n      GLctx.vertexAttribIPointer(index, size, type, stride, ptr);\r\n    }\r\n  var _emscripten_glVertexAttribIPointer = _glVertexAttribIPointer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      if (!GLctx.currentArrayBufferBinding) {\r\n        cb.size = size;\r\n        cb.type = type;\r\n        cb.normalized = normalized;\r\n        cb.stride = stride;\r\n        cb.ptr = ptr;\r\n        cb.clientside = true;\r\n        cb.vertexAttribPointerAdaptor = function(index, size, type, normalized, stride, ptr) {\r\n          this.vertexAttribPointer(index, size, type, normalized, stride, ptr);\r\n        };\r\n        return;\r\n      }\r\n      cb.clientside = false;\r\n      GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\r\n    }\r\n  var _emscripten_glVertexAttribPointer = _glVertexAttribPointer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }\r\n  var _emscripten_glViewport = _glViewport;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glWaitSync(sync, flags, timeout_low, timeout_high) {\r\n      // See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      GLctx.waitSync(GL.syncs[sync], flags, timeout);\r\n    }\r\n  var _emscripten_glWaitSync = _glWaitSync;\r\n\r\n  function _emscripten_has_asyncify() {\r\n      return 1;\r\n    }\r\n\r\n  function _emscripten_memcpy_big(dest, src, num) {\r\n      HEAPU8.copyWithin(dest, src, src + num);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  function doRequestFullscreen(target, strategy) {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      if (!target.requestFullscreen\r\n        && !target.webkitRequestFullscreen\r\n        ) {\r\n        return -3;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (strategy.deferUntilInEventHandler) {\r\n          JSEvents.deferCall(JSEvents_requestFullscreen, 1 /* priority over pointer lock */, [target, strategy]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return JSEvents_requestFullscreen(target, strategy);\r\n    }\r\n  \r\n  \r\n  function _emscripten_request_fullscreen_strategy(target, deferUntilInEventHandler, fullscreenStrategy) {\r\n      var strategy = {\r\n        scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n        canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n        filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n        deferUntilInEventHandler: deferUntilInEventHandler,\r\n        canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n        canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)]\r\n      };\r\n  \r\n      return doRequestFullscreen(target, strategy);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_request_pointerlock(target, deferUntilInEventHandler) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      if (!target.requestPointerLock\r\n        ) {\r\n        return -1;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (deferUntilInEventHandler) {\r\n          JSEvents.deferCall(requestPointerLock, 2 /* priority below fullscreen */, [target]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return requestPointerLock(target);\r\n    }\r\n\r\n  function getHeapMax() {\r\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\r\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\r\n      // for any code that deals with heap sizes, which would require special\r\n      // casing all heap size related code to treat 0 specially.\r\n      return 2147483648;\r\n    }\r\n  \r\n  function emscripten_realloc_buffer(size) {\r\n      var b = wasmMemory.buffer;\r\n      try {\r\n        // round size grow request up to wasm page size (fixed 64KB per spec)\r\n        wasmMemory.grow((size - b.byteLength + 65535) >>> 16); // .grow() takes a delta compared to the previous size\r\n        updateMemoryViews();\r\n        return 1 /*success*/;\r\n      } catch(e) {\r\n      }\r\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\r\n      // anyhow)\r\n    }\r\n  function _emscripten_resize_heap(requestedSize) {\r\n      var oldSize = HEAPU8.length;\r\n      requestedSize = requestedSize >>> 0;\r\n      // With multithreaded builds, races can happen (another thread might increase the size\r\n      // in between), so return a failure, and let the caller retry.\r\n  \r\n      // Memory resize rules:\r\n      // 1.  Always increase heap size to at least the requested size, rounded up\r\n      //     to next page multiple.\r\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\r\n      //     geometrically: increase the heap size according to\r\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\r\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\r\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\r\n      //     linearly: increase the heap size by at least\r\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\r\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\r\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\r\n      // 4.  If we were unable to allocate as much memory, it may be due to\r\n      //     over-eager decision to excessively reserve due to (3) above.\r\n      //     Hence if an allocation fails, cut down on the amount of excess\r\n      //     growth, in an attempt to succeed to perform a smaller allocation.\r\n  \r\n      // A limit is set for how much we can grow. We should not exceed that\r\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\r\n      var maxHeapSize = getHeapMax();\r\n      if (requestedSize > maxHeapSize) {\r\n        return false;\r\n      }\r\n  \r\n      let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\r\n  \r\n      // Loop through potential heap size increases. If we attempt a too eager\r\n      // reservation that fails, cut down on the attempted size and reserve a\r\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\r\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\r\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\r\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\r\n  \r\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\r\n  \r\n        var replacement = emscripten_realloc_buffer(newSize);\r\n        if (replacement) {\r\n  \r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n  function _emscripten_sample_gamepad_data() {\r\n      return (JSEvents.lastGamepadState = (navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : null)))\r\n        ? 0 : -1;\r\n    }\r\n\r\n  \r\n  \r\n  function registerBeforeUnloadEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {\r\n      var beforeUnloadEventHandlerFunc = function(e = event) {\r\n        // Note: This is always called on the main browser thread, since it needs synchronously return a value!\r\n        var confirmationMessage = ((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, 0, userData);\r\n        \r\n        if (confirmationMessage) {\r\n          confirmationMessage = UTF8ToString(confirmationMessage);\r\n        }\r\n        if (confirmationMessage) {\r\n          e.preventDefault();\r\n          e.returnValue = confirmationMessage;\r\n          return confirmationMessage;\r\n        }\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: beforeUnloadEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_beforeunload_callback_on_thread(userData, callbackfunc, targetThread) {\r\n      if (typeof onbeforeunload == 'undefined') return -1;\r\n      // beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,\r\n      // and there is no time to start proxying it anywhere.\r\n      if (targetThread !== 1) return -5;\r\n      registerBeforeUnloadEventCallback(2, userData, true, callbackfunc, 28, \"beforeunload\");\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerFocusEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.focusEvent) JSEvents.focusEvent = _malloc( 256 );\r\n  \r\n      var focusEventHandlerFunc = function(e = event) {\r\n        var nodeName = JSEvents.getNodeNameForTarget(e.target);\r\n        var id = e.target.id ? e.target.id : '';\r\n  \r\n        var focusEvent = JSEvents.focusEvent;\r\n        stringToUTF8(nodeName, focusEvent + 0, 128);\r\n        stringToUTF8(id, focusEvent + 128, 128);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, focusEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: focusEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_blur_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 12, \"blur\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n\r\n  \r\n  function _emscripten_set_element_css_size(target, width, height) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      target.style.width = width + \"px\";\r\n      target.style.height = height + \"px\";\r\n  \r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_focus_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 13, \"focus\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillFullscreenChangeEventData(eventStruct) {\r\n      var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\r\n      var isFullscreen = !!fullscreenElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isFullscreen;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = JSEvents.fullscreenEnabled();\r\n      // If transitioning to fullscreen, report info about the element that is now fullscreen.\r\n      // If transitioning to windowed mode, report info about the element that just was fullscreen.\r\n      var reportedElement = isFullscreen ? fullscreenElement : JSEvents.previousFullscreenElement;\r\n      var nodeName = JSEvents.getNodeNameForTarget(reportedElement);\r\n      var id = (reportedElement && reportedElement.id) ? reportedElement.id : '';\r\n      stringToUTF8(nodeName, eventStruct + 8, 128);\r\n      stringToUTF8(id, eventStruct + 136, 128);\r\n      HEAP32[(((eventStruct)+(264))>>2)] = reportedElement ? reportedElement.clientWidth : 0;\r\n      HEAP32[(((eventStruct)+(268))>>2)] = reportedElement ? reportedElement.clientHeight : 0;\r\n      HEAP32[(((eventStruct)+(272))>>2)] = screen.width;\r\n      HEAP32[(((eventStruct)+(276))>>2)] = screen.height;\r\n      if (isFullscreen) {\r\n        JSEvents.previousFullscreenElement = fullscreenElement;\r\n      }\r\n    }\r\n  \r\n  \r\n  function registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.fullscreenChangeEvent) JSEvents.fullscreenChangeEvent = _malloc( 280 );\r\n  \r\n      var fullscreenChangeEventhandlerFunc = function(e = event) {\r\n        var fullscreenChangeEvent = JSEvents.fullscreenChangeEvent;\r\n  \r\n        fillFullscreenChangeEventData(fullscreenChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, fullscreenChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: fullscreenChangeEventhandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  \r\n  function _emscripten_set_fullscreenchange_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"fullscreenchange\", targetThread);\r\n  \r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"webkitfullscreenchange\", targetThread);\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerGamepadEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.gamepadEvent) JSEvents.gamepadEvent = _malloc( 1432 );\r\n  \r\n      var gamepadEventHandlerFunc = function(e = event) {\r\n        var gamepadEvent = JSEvents.gamepadEvent;\r\n        fillGamepadEventData(gamepadEvent, e[\"gamepad\"]);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, gamepadEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: gamepadEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_gamepadconnected_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\r\n      registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 26, \"gamepadconnected\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_gamepaddisconnected_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\r\n      registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 27, \"gamepaddisconnected\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerKeyEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.keyEvent) JSEvents.keyEvent = _malloc( 176 );\r\n  \r\n      var keyEventHandlerFunc = function(e) {\r\n  \r\n        var keyEventData = JSEvents.keyEvent;\r\n        HEAPF64[((keyEventData)>>3)] = e.timeStamp;\r\n  \r\n        var idx = keyEventData >> 2;\r\n  \r\n        HEAP32[idx + 2] = e.location;\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        HEAP32[idx + 7] = e.repeat;\r\n        HEAP32[idx + 8] = e.charCode;\r\n        HEAP32[idx + 9] = e.keyCode;\r\n        HEAP32[idx + 10] = e.which;\r\n        stringToUTF8(e.key || '', keyEventData + 44, 32);\r\n        stringToUTF8(e.code || '', keyEventData + 76, 32);\r\n        stringToUTF8(e.char || '', keyEventData + 108, 32);\r\n        stringToUTF8(e.locale || '', keyEventData + 140, 32);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, keyEventData, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: keyEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_keydown_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 2, \"keydown\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_keypress_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 1, \"keypress\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_keyup_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 3, \"keyup\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop) {\r\n      var browserIterationFunc = (() => dynCall_v.call(null, func));\r\n      setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillMouseEventData(eventStruct, e, target) {\r\n      HEAPF64[((eventStruct)>>3)] = e.timeStamp;\r\n      var idx = eventStruct >> 2;\r\n      HEAP32[idx + 2] = e.screenX;\r\n      HEAP32[idx + 3] = e.screenY;\r\n      HEAP32[idx + 4] = e.clientX;\r\n      HEAP32[idx + 5] = e.clientY;\r\n      HEAP32[idx + 6] = e.ctrlKey;\r\n      HEAP32[idx + 7] = e.shiftKey;\r\n      HEAP32[idx + 8] = e.altKey;\r\n      HEAP32[idx + 9] = e.metaKey;\r\n      HEAP16[idx*2 + 20] = e.button;\r\n      HEAP16[idx*2 + 21] = e.buttons;\r\n  \r\n      HEAP32[idx + 11] = e[\"movementX\"]\r\n        ;\r\n  \r\n      HEAP32[idx + 12] = e[\"movementY\"]\r\n        ;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAP32[idx + 13] = e.clientX - rect.left;\r\n      HEAP32[idx + 14] = e.clientY - rect.top;\r\n  \r\n    }\r\n  \r\n  \r\n  function registerMouseEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.mouseEvent) JSEvents.mouseEvent = _malloc( 72 );\r\n      target = findEventTarget(target);\r\n  \r\n      var mouseEventHandlerFunc = function(e = event) {\r\n        // TODO: Make this access thread safe, or this could update live while app is reading it.\r\n        fillMouseEventData(JSEvents.mouseEvent, e, target);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, JSEvents.mouseEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: eventTypeString != 'mousemove' && eventTypeString != 'mouseenter' && eventTypeString != 'mouseleave', // Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: mouseEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_mousedown_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 5, \"mousedown\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseenter_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 33, \"mouseenter\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseleave_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 34, \"mouseleave\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mousemove_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 8, \"mousemove\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseup_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 6, \"mouseup\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillPointerlockChangeEventData(eventStruct) {\r\n      var pointerLockElement = document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement || document.msPointerLockElement;\r\n      var isPointerlocked = !!pointerLockElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isPointerlocked;\r\n      var nodeName = JSEvents.getNodeNameForTarget(pointerLockElement);\r\n      var id = (pointerLockElement && pointerLockElement.id) ? pointerLockElement.id : '';\r\n      stringToUTF8(nodeName, eventStruct + 4, 128);\r\n      stringToUTF8(id, eventStruct + 132, 128);\r\n    }\r\n  \r\n  \r\n  function registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.pointerlockChangeEvent) JSEvents.pointerlockChangeEvent = _malloc( 260 );\r\n  \r\n      var pointerlockChangeEventHandlerFunc = function(e = event) {\r\n        var pointerlockChangeEvent = JSEvents.pointerlockChangeEvent;\r\n        fillPointerlockChangeEventData(pointerlockChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, pointerlockChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: pointerlockChangeEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  \r\n  /** @suppress {missingProperties} */\r\n  function _emscripten_set_pointerlockchange_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      // TODO: Currently not supported in pthreads or in --proxy-to-worker mode. (In pthreads mode, document object is not defined)\r\n      if (!document || !document.body || (!document.body.requestPointerLock && !document.body.mozRequestPointerLock && !document.body.webkitRequestPointerLock && !document.body.msRequestPointerLock)) {\r\n        return -1;\r\n      }\r\n  \r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"pointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mozpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"webkitpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mspointerlockchange\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  function registerUiEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.uiEvent) JSEvents.uiEvent = _malloc( 36 );\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var uiEventHandlerFunc = function(e = event) {\r\n        if (e.target != target) {\r\n          // Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that\r\n          // was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log\r\n          // message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,\r\n          // causing a new scroll, etc..\r\n          return;\r\n        }\r\n        var b = document.body; // Take document.body to a variable, Closure compiler does not outline access to it on its own.\r\n        if (!b) {\r\n          // During a page unload 'body' can be null, with \"Cannot read property 'clientWidth' of null\" being thrown\r\n          return;\r\n        }\r\n        var uiEvent = JSEvents.uiEvent;\r\n        HEAP32[((uiEvent)>>2)] = e.detail;\r\n        HEAP32[(((uiEvent)+(4))>>2)] = b.clientWidth;\r\n        HEAP32[(((uiEvent)+(8))>>2)] = b.clientHeight;\r\n        HEAP32[(((uiEvent)+(12))>>2)] = innerWidth;\r\n        HEAP32[(((uiEvent)+(16))>>2)] = innerHeight;\r\n        HEAP32[(((uiEvent)+(20))>>2)] = outerWidth;\r\n        HEAP32[(((uiEvent)+(24))>>2)] = outerHeight;\r\n        HEAP32[(((uiEvent)+(28))>>2)] = pageXOffset;\r\n        HEAP32[(((uiEvent)+(32))>>2)] = pageYOffset;\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, uiEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: uiEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_resize_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerUiEventCallback(target, userData, useCapture, callbackfunc, 10, \"resize\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerTouchEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.touchEvent) JSEvents.touchEvent = _malloc( 1696 );\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var touchEventHandlerFunc = function(e) {\r\n        var t, touches = {}, et = e.touches;\r\n        // To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches, \r\n        // only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in\r\n        // each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.\r\n  \r\n        for (var i = 0; i < et.length; ++i) {\r\n          t = et[i];\r\n          // Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any\r\n          // changed/target states we may have set from previous frame.\r\n          t.isChanged = t.onTarget = 0;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the changedTouches list.\r\n        for (var i = 0; i < e.changedTouches.length; ++i) {\r\n          t = e.changedTouches[i];\r\n          t.isChanged = 1;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the targetTouches list.\r\n        for (var i = 0; i < e.targetTouches.length; ++i) {\r\n          touches[e.targetTouches[i].identifier].onTarget = 1;\r\n        }\r\n  \r\n        var touchEvent = JSEvents.touchEvent;\r\n        HEAPF64[((touchEvent)>>3)] = e.timeStamp;\r\n        var idx = touchEvent>>2; // Pre-shift the ptr to index to HEAP32 to save code size\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        idx += 7; // Advance to the start of the touch array.\r\n        var targetRect = getBoundingClientRect(target);\r\n        var numTouches = 0;\r\n        for (var i in touches) {\r\n          t = touches[i];\r\n          HEAP32[idx + 0] = t.identifier;\r\n          HEAP32[idx + 1] = t.screenX;\r\n          HEAP32[idx + 2] = t.screenY;\r\n          HEAP32[idx + 3] = t.clientX;\r\n          HEAP32[idx + 4] = t.clientY;\r\n          HEAP32[idx + 5] = t.pageX;\r\n          HEAP32[idx + 6] = t.pageY;\r\n          HEAP32[idx + 7] = t.isChanged;\r\n          HEAP32[idx + 8] = t.onTarget;\r\n          HEAP32[idx + 9] = t.clientX - targetRect.left;\r\n          HEAP32[idx + 10] = t.clientY - targetRect.top;\r\n  \r\n          idx += 13;\r\n  \r\n          if (++numTouches > 31) {\r\n            break;\r\n          }\r\n        }\r\n        HEAP32[(((touchEvent)+(8))>>2)] = numTouches;\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, touchEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: eventTypeString == 'touchstart' || eventTypeString == 'touchend',\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: touchEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_touchcancel_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 25, \"touchcancel\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchend_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 23, \"touchend\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchmove_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 24, \"touchmove\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchstart_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 22, \"touchstart\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function fillVisibilityChangeEventData(eventStruct) {\r\n      var visibilityStates = [ \"hidden\", \"visible\", \"prerender\", \"unloaded\" ];\r\n      var visibilityState = visibilityStates.indexOf(document.visibilityState);\r\n  \r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = document.hidden;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = visibilityState;\r\n    }\r\n  \r\n  \r\n  function registerVisibilityChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.visibilityChangeEvent) JSEvents.visibilityChangeEvent = _malloc( 8 );\r\n  \r\n      var visibilityChangeEventHandlerFunc = function(e = event) {\r\n        var visibilityChangeEvent = JSEvents.visibilityChangeEvent;\r\n  \r\n        fillVisibilityChangeEventData(visibilityChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, visibilityChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: visibilityChangeEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  function _emscripten_set_visibilitychange_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      registerVisibilityChangeEventCallback(specialHTMLTargets[1], userData, useCapture, callbackfunc, 21, \"visibilitychange\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  function registerWheelEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.wheelEvent) JSEvents.wheelEvent = _malloc( 104 );\r\n  \r\n      // The DOM Level 3 events spec event 'wheel'\r\n      var wheelHandlerFunc = function(e = event) {\r\n        var wheelEvent = JSEvents.wheelEvent;\r\n        fillMouseEventData(wheelEvent, e, target);\r\n        HEAPF64[(((wheelEvent)+(72))>>3)] = e[\"deltaX\"];\r\n        HEAPF64[(((wheelEvent)+(80))>>3)] = e[\"deltaY\"];\r\n        HEAPF64[(((wheelEvent)+(88))>>3)] = e[\"deltaZ\"];\r\n        HEAP32[(((wheelEvent)+(96))>>2)] = e[\"deltaMode\"];\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, wheelEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: wheelHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  function _emscripten_set_wheel_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      target = findEventTarget(target);\r\n      if (typeof target.onwheel != 'undefined') {\r\n        registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, \"wheel\", targetThread);\r\n        return 0;\r\n      } else {\r\n        return -1;\r\n      }\r\n    }\r\n\r\n  \r\n  function _emscripten_set_window_title(title) {\r\n      setWindowTitle(UTF8ToString(title));\r\n    }\r\n\r\n  function _emscripten_sleep(ms) {\r\n      // emscripten_sleep() does not return a value, but we still need a |return|\r\n      // here for stack switching support (ASYNCIFY=2). In that mode this function\r\n      // returns a Promise instead of nothing, and that Promise is what tells the\r\n      // wasm VM to pause the stack.\r\n      return Asyncify.handleSleep((wakeUp) => safeSetTimeout(wakeUp, ms));\r\n    }\r\n  _emscripten_sleep.isAsync = true;\r\n\r\n  var ENV = {};\r\n  \r\n  function getExecutableName() {\r\n      return thisProgram || './this.program';\r\n    }\r\n  function getEnvStrings() {\r\n      if (!getEnvStrings.strings) {\r\n        // Default values.\r\n        // Browser language detection #8751\r\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\r\n        var env = {\r\n          'USER': 'web_user',\r\n          'LOGNAME': 'web_user',\r\n          'PATH': '/',\r\n          'PWD': '/',\r\n          'HOME': '/home/web_user',\r\n          'LANG': lang,\r\n          '_': getExecutableName()\r\n        };\r\n        // Apply the user-provided values, if any.\r\n        for (var x in ENV) {\r\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\r\n          // explicitly set to be so. We allow user code to do that to\r\n          // force variables with default values to remain unset.\r\n          if (ENV[x] === undefined) delete env[x];\r\n          else env[x] = ENV[x];\r\n        }\r\n        var strings = [];\r\n        for (var x in env) {\r\n          strings.push(x + '=' + env[x]);\r\n        }\r\n        getEnvStrings.strings = strings;\r\n      }\r\n      return getEnvStrings.strings;\r\n    }\r\n  \r\n  function stringToAscii(str, buffer) {\r\n      for (var i = 0; i < str.length; ++i) {\r\n        HEAP8[((buffer++)>>0)] = str.charCodeAt(i);\r\n      }\r\n      // Null-terminate the string\r\n      HEAP8[((buffer)>>0)] = 0;\r\n    }\r\n  \r\n  function _environ_get(__environ, environ_buf) {\r\n      var bufSize = 0;\r\n      getEnvStrings().forEach(function(string, i) {\r\n        var ptr = environ_buf + bufSize;\r\n        HEAPU32[(((__environ)+(i*4))>>2)] = ptr;\r\n        stringToAscii(string, ptr);\r\n        bufSize += string.length + 1;\r\n      });\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function _environ_sizes_get(penviron_count, penviron_buf_size) {\r\n      var strings = getEnvStrings();\r\n      HEAPU32[((penviron_count)>>2)] = strings.length;\r\n      var bufSize = 0;\r\n      strings.forEach(function(string) {\r\n        bufSize += string.length + 1;\r\n      });\r\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\r\n      return 0;\r\n    }\r\n\r\n\r\n  function _fd_close(fd) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.close(stream);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  function _fd_fdstat_get(fd, pbuf) {\r\n  try {\r\n  \r\n      var rightsBase = 0;\r\n      var rightsInheriting = 0;\r\n      var flags = 0;\r\n      {\r\n        var stream = SYSCALLS.getStreamFromFD(fd);\r\n        // All character devices are terminals (other things a Linux system would\r\n        // assume is a character device, like the mouse, we have special APIs for).\r\n        var type = stream.tty ? 2 :\r\n                   FS.isDir(stream.mode) ? 3 :\r\n                   FS.isLink(stream.mode) ? 7 :\r\n                   4;\r\n      }\r\n      HEAP8[((pbuf)>>0)] = type;\r\n      HEAP16[(((pbuf)+(2))>>1)] = flags;\r\n      (tempI64 = [rightsBase>>>0,(tempDouble=rightsBase,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(8))>>2)] = tempI64[0],HEAP32[(((pbuf)+(12))>>2)] = tempI64[1]);\r\n      (tempI64 = [rightsInheriting>>>0,(tempDouble=rightsInheriting,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(16))>>2)] = tempI64[0],HEAP32[(((pbuf)+(20))>>2)] = tempI64[1]);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  function doReadv(stream, iov, iovcnt, offset) {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.read(stream, HEAP8,ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (curr < len) break; // nothing more to read\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n  \r\n  function _fd_read(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doReadv(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\r\n  try {\r\n  \r\n      var offset = convertI32PairToI53Checked(offset_low, offset_high); if (isNaN(offset)) return 61;\r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.llseek(stream, offset, whence);\r\n      (tempI64 = [stream.position>>>0,(tempDouble=stream.position,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((newOffset)>>2)] = tempI64[0],HEAP32[(((newOffset)+(4))>>2)] = tempI64[1]);\r\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  function doWritev(stream, iov, iovcnt, offset) {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.write(stream, HEAP8,ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n  \r\n  function _fd_write(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doWritev(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n\r\n  \r\n  function arraySum(array, index) {\r\n      var sum = 0;\r\n      for (var i = 0; i <= index; sum += array[i++]) {\r\n        // no-op\r\n      }\r\n      return sum;\r\n    }\r\n  \r\n  \r\n  var MONTH_DAYS_LEAP = [31,29,31,30,31,30,31,31,30,31,30,31];\r\n  \r\n  var MONTH_DAYS_REGULAR = [31,28,31,30,31,30,31,31,30,31,30,31];\r\n  function addDays(date, days) {\r\n      var newDate = new Date(date.getTime());\r\n      while (days > 0) {\r\n        var leap = isLeapYear(newDate.getFullYear());\r\n        var currentMonth = newDate.getMonth();\r\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\r\n  \r\n        if (days > daysInCurrentMonth-newDate.getDate()) {\r\n          // we spill over to next month\r\n          days -= (daysInCurrentMonth-newDate.getDate()+1);\r\n          newDate.setDate(1);\r\n          if (currentMonth < 11) {\r\n            newDate.setMonth(currentMonth+1)\r\n          } else {\r\n            newDate.setMonth(0);\r\n            newDate.setFullYear(newDate.getFullYear()+1);\r\n          }\r\n        } else {\r\n          // we stay in current month\r\n          newDate.setDate(newDate.getDate()+days);\r\n          return newDate;\r\n        }\r\n      }\r\n  \r\n      return newDate;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  function writeArrayToMemory(array, buffer) {\r\n      HEAP8.set(array, buffer);\r\n    }\r\n  \r\n  function _strftime(s, maxsize, format, tm) {\r\n      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);\r\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html\r\n  \r\n      var tm_zone = HEAP32[(((tm)+(40))>>2)];\r\n  \r\n      var date = {\r\n        tm_sec: HEAP32[((tm)>>2)],\r\n        tm_min: HEAP32[(((tm)+(4))>>2)],\r\n        tm_hour: HEAP32[(((tm)+(8))>>2)],\r\n        tm_mday: HEAP32[(((tm)+(12))>>2)],\r\n        tm_mon: HEAP32[(((tm)+(16))>>2)],\r\n        tm_year: HEAP32[(((tm)+(20))>>2)],\r\n        tm_wday: HEAP32[(((tm)+(24))>>2)],\r\n        tm_yday: HEAP32[(((tm)+(28))>>2)],\r\n        tm_isdst: HEAP32[(((tm)+(32))>>2)],\r\n        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],\r\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''\r\n      };\r\n  \r\n      var pattern = UTF8ToString(format);\r\n  \r\n      // expand format\r\n      var EXPANSION_RULES_1 = {\r\n        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013\r\n        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y\r\n        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d\r\n        '%h': '%b',                       // Equivalent to %b\r\n        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation\r\n        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation\r\n        '%T': '%H:%M:%S',                 // Replaced by the time\r\n        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation\r\n        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation\r\n        // Modified Conversion Specifiers\r\n        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.\r\n        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.\r\n        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.\r\n        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.\r\n        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.\r\n        '%EY': '%Y',                      // Replaced by the full alternative year representation.\r\n        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.\r\n        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.\r\n        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.\r\n        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.\r\n        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.\r\n        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.\r\n        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.\r\n        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).\r\n        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.\r\n        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.\r\n        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.\r\n        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.\r\n        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.\r\n      };\r\n      for (var rule in EXPANSION_RULES_1) {\r\n        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\r\n      }\r\n  \r\n      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  \r\n      function leadingSomething(value, digits, character) {\r\n        var str = typeof value == 'number' ? value.toString() : (value || '');\r\n        while (str.length < digits) {\r\n          str = character[0]+str;\r\n        }\r\n        return str;\r\n      }\r\n  \r\n      function leadingNulls(value, digits) {\r\n        return leadingSomething(value, digits, '0');\r\n      }\r\n  \r\n      function compareByDay(date1, date2) {\r\n        function sgn(value) {\r\n          return value < 0 ? -1 : (value > 0 ? 1 : 0);\r\n        }\r\n  \r\n        var compare;\r\n        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {\r\n          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {\r\n            compare = sgn(date1.getDate()-date2.getDate());\r\n          }\r\n        }\r\n        return compare;\r\n      }\r\n  \r\n      function getFirstWeekStartDate(janFourth) {\r\n          switch (janFourth.getDay()) {\r\n            case 0: // Sunday\r\n              return new Date(janFourth.getFullYear()-1, 11, 29);\r\n            case 1: // Monday\r\n              return janFourth;\r\n            case 2: // Tuesday\r\n              return new Date(janFourth.getFullYear(), 0, 3);\r\n            case 3: // Wednesday\r\n              return new Date(janFourth.getFullYear(), 0, 2);\r\n            case 4: // Thursday\r\n              return new Date(janFourth.getFullYear(), 0, 1);\r\n            case 5: // Friday\r\n              return new Date(janFourth.getFullYear()-1, 11, 31);\r\n            case 6: // Saturday\r\n              return new Date(janFourth.getFullYear()-1, 11, 30);\r\n          }\r\n      }\r\n  \r\n      function getWeekBasedYear(date) {\r\n          var thisDate = addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);\r\n  \r\n          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\r\n          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);\r\n  \r\n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\r\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\r\n  \r\n          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\r\n            // this date is after the start of the first week of this year\r\n            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\r\n              return thisDate.getFullYear()+1;\r\n            }\r\n            return thisDate.getFullYear();\r\n          }\r\n          return thisDate.getFullYear()-1;\r\n      }\r\n  \r\n      var EXPANSION_RULES_2 = {\r\n        '%a': function(date) {\r\n          return WEEKDAYS[date.tm_wday].substring(0,3);\r\n        },\r\n        '%A': function(date) {\r\n          return WEEKDAYS[date.tm_wday];\r\n        },\r\n        '%b': function(date) {\r\n          return MONTHS[date.tm_mon].substring(0,3);\r\n        },\r\n        '%B': function(date) {\r\n          return MONTHS[date.tm_mon];\r\n        },\r\n        '%C': function(date) {\r\n          var year = date.tm_year+1900;\r\n          return leadingNulls((year/100)|0,2);\r\n        },\r\n        '%d': function(date) {\r\n          return leadingNulls(date.tm_mday, 2);\r\n        },\r\n        '%e': function(date) {\r\n          return leadingSomething(date.tm_mday, 2, ' ');\r\n        },\r\n        '%g': function(date) {\r\n          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.\r\n          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes\r\n          // January 4th, which is also the week that includes the first Thursday of the year, and\r\n          // is also the first week that contains at least four days in the year.\r\n          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of\r\n          // the last week of the preceding year; thus, for Saturday 2nd January 1999,\r\n          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,\r\n          // or 31st is a Monday, it and any following days are part of week 1 of the following year.\r\n          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.\r\n  \r\n          return getWeekBasedYear(date).toString().substring(2);\r\n        },\r\n        '%G': function(date) {\r\n          return getWeekBasedYear(date);\r\n        },\r\n        '%H': function(date) {\r\n          return leadingNulls(date.tm_hour, 2);\r\n        },\r\n        '%I': function(date) {\r\n          var twelveHour = date.tm_hour;\r\n          if (twelveHour == 0) twelveHour = 12;\r\n          else if (twelveHour > 12) twelveHour -= 12;\r\n          return leadingNulls(twelveHour, 2);\r\n        },\r\n        '%j': function(date) {\r\n          // Day of the year (001-366)\r\n          return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year+1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon-1), 3);\r\n        },\r\n        '%m': function(date) {\r\n          return leadingNulls(date.tm_mon+1, 2);\r\n        },\r\n        '%M': function(date) {\r\n          return leadingNulls(date.tm_min, 2);\r\n        },\r\n        '%n': function() {\r\n          return '\\n';\r\n        },\r\n        '%p': function(date) {\r\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\r\n            return 'AM';\r\n          }\r\n          return 'PM';\r\n        },\r\n        '%S': function(date) {\r\n          return leadingNulls(date.tm_sec, 2);\r\n        },\r\n        '%t': function() {\r\n          return '\\t';\r\n        },\r\n        '%u': function(date) {\r\n          return date.tm_wday || 7;\r\n        },\r\n        '%U': function(date) {\r\n          var days = date.tm_yday + 7 - date.tm_wday;\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%V': function(date) {\r\n          // Replaced by the week number of the year (Monday as the first day of the week)\r\n          // as a decimal number [01,53]. If the week containing 1 January has four\r\n          // or more days in the new year, then it is considered week 1.\r\n          // Otherwise, it is the last week of the previous year, and the next week is week 1.\r\n          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]\r\n          var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7 ) / 7);\r\n          // If 1 Jan is just 1-3 days past Monday, the previous week\r\n          // is also in this year.\r\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\r\n            val++;\r\n          }\r\n          if (!val) {\r\n            val = 52;\r\n            // If 31 December of prev year a Thursday, or Friday of a\r\n            // leap year, then the prev year has 53 weeks.\r\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\r\n            if (dec31 == 4 || (dec31 == 5 && isLeapYear(date.tm_year%400-1))) {\r\n              val++;\r\n            }\r\n          } else if (val == 53) {\r\n            // If 1 January is not a Thursday, and not a Wednesday of a\r\n            // leap year, then this year has only 52 weeks.\r\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\r\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year)))\r\n              val = 1;\r\n          }\r\n          return leadingNulls(val, 2);\r\n        },\r\n        '%w': function(date) {\r\n          return date.tm_wday;\r\n        },\r\n        '%W': function(date) {\r\n          var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%y': function(date) {\r\n          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]\r\n          return (date.tm_year+1900).toString().substring(2);\r\n        },\r\n        '%Y': function(date) {\r\n          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]\r\n          return date.tm_year+1900;\r\n        },\r\n        '%z': function(date) {\r\n          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).\r\n          // For example, \"-0430\" means 4 hours 30 minutes behind UTC (west of Greenwich).\r\n          var off = date.tm_gmtoff;\r\n          var ahead = off >= 0;\r\n          off = Math.abs(off) / 60;\r\n          // convert from minutes into hhmm format (which means 60 minutes = 100 units)\r\n          off = (off / 60)*100 + (off % 60);\r\n          return (ahead ? '+' : '-') + String(\"0000\" + off).slice(-4);\r\n        },\r\n        '%Z': function(date) {\r\n          return date.tm_zone;\r\n        },\r\n        '%%': function() {\r\n          return '%';\r\n        }\r\n      };\r\n  \r\n      // Replace %% with a pair of NULLs (which cannot occur in a C string), then\r\n      // re-inject them after processing.\r\n      pattern = pattern.replace(/%%/g, '\\0\\0')\r\n      for (var rule in EXPANSION_RULES_2) {\r\n        if (pattern.includes(rule)) {\r\n          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\r\n        }\r\n      }\r\n      pattern = pattern.replace(/\\0\\0/g, '%')\r\n  \r\n      var bytes = intArrayFromString(pattern, false);\r\n      if (bytes.length > maxsize) {\r\n        return 0;\r\n      }\r\n  \r\n      writeArrayToMemory(bytes, s);\r\n      return bytes.length-1;\r\n    }\r\n\r\n  function _strftime_l(s, maxsize, format, tm, loc) {\r\n      return _strftime(s, maxsize, format, tm); // no locale support yet\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  function runAndAbortIfError(func) {\r\n      try {\r\n        return func();\r\n      } catch (e) {\r\n        abort(e);\r\n      }\r\n    }\r\n  \r\n  \r\n  function sigToWasmTypes(sig) {\r\n      var typeNames = {\r\n        'i': 'i32',\r\n        // i64 values will be split into two i32s.\r\n        'j': 'i32',\r\n        'f': 'f32',\r\n        'd': 'f64',\r\n        'p': 'i32',\r\n      };\r\n      var type = {\r\n        parameters: [],\r\n        results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\r\n      };\r\n      for (var i = 1; i < sig.length; ++i) {\r\n        type.parameters.push(typeNames[sig[i]]);\r\n        if (sig[i] === 'j') {\r\n          type.parameters.push('i32');\r\n        }\r\n      }\r\n      return type;\r\n    }\r\n  \r\n  function runtimeKeepalivePush() {\r\n      runtimeKeepaliveCounter += 1;\r\n    }\r\n  \r\n  function runtimeKeepalivePop() {\r\n      runtimeKeepaliveCounter -= 1;\r\n    }\r\n  \r\n  \r\n  var Asyncify = {instrumentWasmImports:function(imports) {\r\n        var ASYNCIFY_IMPORTS = [\"invoke_*\",\"fd_sync\",\"__wasi_fd_sync\",\"__asyncjs__*\",\"emscripten_idb_load\",\"emscripten_idb_store\",\"emscripten_idb_delete\",\"emscripten_idb_exists\",\"emscripten_idb_load_blob\",\"emscripten_idb_store_blob\",\"emscripten_sleep\",\"emscripten_wget\",\"emscripten_wget_data\",\"emscripten_scan_registers\",\"emscripten_lazy_load_code\",\"_load_secondary_module\",\"emscripten_fiber_swap\"];\r\n        for (var x in imports) {\r\n          (function(x) {\r\n            var original = imports[x];\r\n            var sig = original.sig;\r\n            if (typeof original == 'function') {\r\n              var isAsyncifyImport = original.isAsync ||\r\n                                     ASYNCIFY_IMPORTS.indexOf(x) >= 0 ||\r\n                                     x.startsWith('__asyncjs__');\r\n            }\r\n          })(x);\r\n        }\r\n      },instrumentWasmExports:function(exports) {\r\n        var ret = {};\r\n        for (var x in exports) {\r\n          (function(x) {\r\n            var original = exports[x];\r\n            if (typeof original == 'function') {\r\n              ret[x] = function() {\r\n                Asyncify.exportCallStack.push(x);\r\n                try {\r\n                  return original.apply(null, arguments);\r\n                } finally {\r\n                  if (!ABORT) {\r\n                    var y = Asyncify.exportCallStack.pop();\r\n                    assert(y === x);\r\n                    Asyncify.maybeStopUnwind();\r\n                  }\r\n                }\r\n              };\r\n            } else {\r\n              ret[x] = original;\r\n            }\r\n          })(x);\r\n        }\r\n        return ret;\r\n      },State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId:function(funcName) {\r\n        var id = Asyncify.callStackNameToId[funcName];\r\n        if (id === undefined) {\r\n          id = Asyncify.callStackId++;\r\n          Asyncify.callStackNameToId[funcName] = id;\r\n          Asyncify.callStackIdToName[id] = funcName;\r\n        }\r\n        return id;\r\n      },maybeStopUnwind:function() {\r\n        if (Asyncify.currData &&\r\n            Asyncify.state === Asyncify.State.Unwinding &&\r\n            Asyncify.exportCallStack.length === 0) {\r\n          // We just finished unwinding.\r\n          // Be sure to set the state before calling any other functions to avoid\r\n          // possible infinite recursion here (For example in debug pthread builds\r\n          // the dbg() function itself can call back into WebAssembly to get the\r\n          // current pthread_self() pointer).\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          \r\n          // Keep the runtime alive so that a re-wind can be done later.\r\n          runAndAbortIfError(_asyncify_stop_unwind);\r\n          if (typeof Fibers != 'undefined') {\r\n            Fibers.trampoline();\r\n          }\r\n        }\r\n      },whenDone:function() {\r\n        return new Promise((resolve, reject) => {\r\n          Asyncify.asyncPromiseHandlers = {\r\n            resolve: resolve,\r\n            reject: reject\r\n          };\r\n        });\r\n      },allocateData:function() {\r\n        // An asyncify data structure has three fields:\r\n        //  0  current stack pos\r\n        //  4  max stack pos\r\n        //  8  id of function at bottom of the call stack (callStackIdToName[id] == name of js function)\r\n        //\r\n        // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\r\n        // We also embed a stack in the same memory region here, right next to the structure.\r\n        // This struct is also defined as asyncify_data_t in emscripten/fiber.h\r\n        var ptr = _malloc(12 + Asyncify.StackSize);\r\n        Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\r\n        Asyncify.setDataRewindFunc(ptr);\r\n        return ptr;\r\n      },setDataHeader:function(ptr, stack, stackSize) {\r\n        HEAP32[((ptr)>>2)] = stack;\r\n        HEAP32[(((ptr)+(4))>>2)] = stack + stackSize;\r\n      },setDataRewindFunc:function(ptr) {\r\n        var bottomOfCallStack = Asyncify.exportCallStack[0];\r\n        var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\r\n        HEAP32[(((ptr)+(8))>>2)] = rewindId;\r\n      },getDataRewindFunc:function(ptr) {\r\n        var id = HEAP32[(((ptr)+(8))>>2)];\r\n        var name = Asyncify.callStackIdToName[id];\r\n        var func = Module['asm'][name];\r\n        return func;\r\n      },doRewind:function(ptr) {\r\n        var start = Asyncify.getDataRewindFunc(ptr);\r\n        // Once we have rewound and the stack we no longer need to artificially\r\n        // keep the runtime alive.\r\n        \r\n        return start();\r\n      },handleSleep:function(startAsync) {\r\n        if (ABORT) return;\r\n        if (Asyncify.state === Asyncify.State.Normal) {\r\n          // Prepare to sleep. Call startAsync, and see what happens:\r\n          // if the code decided to call our callback synchronously,\r\n          // then no async operation was in fact begun, and we don't\r\n          // need to do anything.\r\n          var reachedCallback = false;\r\n          var reachedAfterCallback = false;\r\n          startAsync((handleSleepReturnValue = 0) => {\r\n            if (ABORT) return;\r\n            Asyncify.handleSleepReturnValue = handleSleepReturnValue;\r\n            reachedCallback = true;\r\n            if (!reachedAfterCallback) {\r\n              // We are happening synchronously, so no need for async.\r\n              return;\r\n            }\r\n            Asyncify.state = Asyncify.State.Rewinding;\r\n            runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.resume();\r\n            }\r\n            var asyncWasmReturnValue, isError = false;\r\n            try {\r\n              asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\r\n            } catch (err) {\r\n              asyncWasmReturnValue = err;\r\n              isError = true;\r\n            }\r\n            // Track whether the return value was handled by any promise handlers.\r\n            var handled = false;\r\n            if (!Asyncify.currData) {\r\n              // All asynchronous execution has finished.\r\n              // `asyncWasmReturnValue` now contains the final\r\n              // return value of the exported async WASM function.\r\n              //\r\n              // Note: `asyncWasmReturnValue` is distinct from\r\n              // `Asyncify.handleSleepReturnValue`.\r\n              // `Asyncify.handleSleepReturnValue` contains the return\r\n              // value of the last C function to have executed\r\n              // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\r\n              // contains the return value of the exported WASM function\r\n              // that may have called C functions that\r\n              // call `Asyncify.handleSleep()`.\r\n              var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\r\n              if (asyncPromiseHandlers) {\r\n                Asyncify.asyncPromiseHandlers = null;\r\n                (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\r\n                handled = true;\r\n              }\r\n            }\r\n            if (isError && !handled) {\r\n              // If there was an error and it was not handled by now, we have no choice but to\r\n              // rethrow that error into the global scope where it can be caught only by\r\n              // `onerror` or `onunhandledpromiserejection`.\r\n              throw asyncWasmReturnValue;\r\n            }\r\n          });\r\n          reachedAfterCallback = true;\r\n          if (!reachedCallback) {\r\n            // A true async operation was begun; start a sleep.\r\n            Asyncify.state = Asyncify.State.Unwinding;\r\n            // TODO: reuse, don't alloc/free every sleep\r\n            Asyncify.currData = Asyncify.allocateData();\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.pause();\r\n            }\r\n            runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\r\n          }\r\n        } else if (Asyncify.state === Asyncify.State.Rewinding) {\r\n          // Stop a resume.\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          runAndAbortIfError(_asyncify_stop_rewind);\r\n          _free(Asyncify.currData);\r\n          Asyncify.currData = null;\r\n          // Call all sleep callbacks now that the sleep-resume is all done.\r\n          Asyncify.sleepCallbacks.forEach((func) => callUserCallback(func));\r\n        } else {\r\n          abort('invalid state: ' + Asyncify.state);\r\n        }\r\n        return Asyncify.handleSleepReturnValue;\r\n      },handleAsync:function(startAsync) {\r\n        return Asyncify.handleSleep((wakeUp) => {\r\n          // TODO: add error handling as a second param when handleSleep implements it.\r\n          startAsync().then(wakeUp);\r\n        });\r\n      }};\r\n\r\n\r\n  var FSNode = /** @constructor */ function(parent, name, mode, rdev) {\r\n    if (!parent) {\r\n      parent = this;  // root node sets parent to itself\r\n    }\r\n    this.parent = parent;\r\n    this.mount = parent.mount;\r\n    this.mounted = null;\r\n    this.id = FS.nextInode++;\r\n    this.name = name;\r\n    this.mode = mode;\r\n    this.node_ops = {};\r\n    this.stream_ops = {};\r\n    this.rdev = rdev;\r\n  };\r\n  var readMode = 292/*292*/ | 73/*73*/;\r\n  var writeMode = 146/*146*/;\r\n  Object.defineProperties(FSNode.prototype, {\r\n   read: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & readMode) === readMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= readMode : this.mode &= ~readMode;\r\n    }\r\n   },\r\n   write: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & writeMode) === writeMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= writeMode : this.mode &= ~writeMode;\r\n    }\r\n   },\r\n   isFolder: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isDir(this.mode);\r\n    }\r\n   },\r\n   isDevice: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isChrdev(this.mode);\r\n    }\r\n   }\r\n  });\r\n  FS.FSNode = FSNode;\r\n  FS.staticInit();Module[\"FS_createPath\"] = FS.createPath;Module[\"FS_createDataFile\"] = FS.createDataFile;Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;Module[\"FS_unlink\"] = FS.unlink;Module[\"FS_createLazyFile\"] = FS.createLazyFile;Module[\"FS_createDevice\"] = FS.createDevice;;\r\n\r\n      // exports\r\n      Module[\"requestFullscreen\"] = function Module_requestFullscreen(lockPointer, resizeCanvas) { Browser.requestFullscreen(lockPointer, resizeCanvas) };\r\n      Module[\"requestAnimationFrame\"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };\r\n      Module[\"setCanvasSize\"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };\r\n      Module[\"pauseMainLoop\"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };\r\n      Module[\"resumeMainLoop\"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };\r\n      Module[\"getUserMedia\"] = function Module_getUserMedia() { Browser.getUserMedia() };\r\n      Module[\"createContext\"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) };\r\n      var preloadedImages = {};\r\n      var preloadedAudios = {};;\r\nvar GLctx;;\r\nfor (var i = 0; i < 32; ++i) tempFixedLengthArray.push(new Array(i));;\r\nvar miniTempWebGLFloatBuffersStorage = new Float32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n  miniTempWebGLFloatBuffers[i] = miniTempWebGLFloatBuffersStorage.subarray(0, i+1);\r\n  }\r\n  ;\r\nvar miniTempWebGLIntBuffersStorage = new Int32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n  miniTempWebGLIntBuffers[i] = miniTempWebGLIntBuffersStorage.subarray(0, i+1);\r\n  }\r\n  ;\r\n// include: base64Utils.js\r\n// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149\r\n\r\n// This code was written by Tyler Akins and has been placed in the\r\n// public domain.  It would be nice if you left this header intact.\r\n// Base64 code from Tyler Akins -- http://rumkin.com\r\n\r\n/**\r\n * Decodes a base64 string.\r\n * @param {string} input The string to decode.\r\n */\r\nvar decodeBase64 = typeof atob == 'function' ? atob : function (input) {\r\n  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\n  var output = '';\r\n  var chr1, chr2, chr3;\r\n  var enc1, enc2, enc3, enc4;\r\n  var i = 0;\r\n  // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\r\n  do {\r\n    enc1 = keyStr.indexOf(input.charAt(i++));\r\n    enc2 = keyStr.indexOf(input.charAt(i++));\r\n    enc3 = keyStr.indexOf(input.charAt(i++));\r\n    enc4 = keyStr.indexOf(input.charAt(i++));\r\n\r\n    chr1 = (enc1 << 2) | (enc2 >> 4);\r\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n    chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n    output = output + String.fromCharCode(chr1);\r\n\r\n    if (enc3 !== 64) {\r\n      output = output + String.fromCharCode(chr2);\r\n    }\r\n    if (enc4 !== 64) {\r\n      output = output + String.fromCharCode(chr3);\r\n    }\r\n  } while (i < input.length);\r\n  return output;\r\n};\r\n\r\n// Converts a string of base64 into a byte array.\r\n// Throws error on invalid input.\r\nfunction intArrayFromBase64(s) {\r\n\r\n  try {\r\n    var decoded = decodeBase64(s);\r\n    var bytes = new Uint8Array(decoded.length);\r\n    for (var i = 0 ; i < decoded.length ; ++i) {\r\n      bytes[i] = decoded.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n  } catch (_) {\r\n    throw new Error('Converting base64 string to bytes failed.');\r\n  }\r\n}\r\n\r\n// If filename is a base64 data URI, parses and returns data (Buffer on node,\r\n// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.\r\nfunction tryParseAsDataURI(filename) {\r\n  if (!isDataURI(filename)) {\r\n    return;\r\n  }\r\n\r\n  return intArrayFromBase64(filename.slice(dataURIPrefix.length));\r\n}\r\n\r\n\r\n// end include: base64Utils.js\r\nvar wasmImports = {\r\n  \"__cxa_throw\": ___cxa_throw,\r\n  \"__syscall_chmod\": ___syscall_chmod,\r\n  \"__syscall_fchmod\": ___syscall_fchmod,\r\n  \"__syscall_fcntl64\": ___syscall_fcntl64,\r\n  \"__syscall_fstat64\": ___syscall_fstat64,\r\n  \"__syscall_ftruncate64\": ___syscall_ftruncate64,\r\n  \"__syscall_getcwd\": ___syscall_getcwd,\r\n  \"__syscall_getdents64\": ___syscall_getdents64,\r\n  \"__syscall_ioctl\": ___syscall_ioctl,\r\n  \"__syscall_lstat64\": ___syscall_lstat64,\r\n  \"__syscall_mkdirat\": ___syscall_mkdirat,\r\n  \"__syscall_newfstatat\": ___syscall_newfstatat,\r\n  \"__syscall_openat\": ___syscall_openat,\r\n  \"__syscall_rmdir\": ___syscall_rmdir,\r\n  \"__syscall_stat64\": ___syscall_stat64,\r\n  \"__syscall_unlinkat\": ___syscall_unlinkat,\r\n  \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\r\n  \"_localtime_js\": __localtime_js,\r\n  \"_mktime_js\": __mktime_js,\r\n  \"_tzset_js\": __tzset_js,\r\n  \"abort\": _abort,\r\n  \"eglBindAPI\": _eglBindAPI,\r\n  \"eglChooseConfig\": _eglChooseConfig,\r\n  \"eglCreateContext\": _eglCreateContext,\r\n  \"eglCreateWindowSurface\": _eglCreateWindowSurface,\r\n  \"eglDestroyContext\": _eglDestroyContext,\r\n  \"eglDestroySurface\": _eglDestroySurface,\r\n  \"eglGetConfigAttrib\": _eglGetConfigAttrib,\r\n  \"eglGetDisplay\": _eglGetDisplay,\r\n  \"eglGetError\": _eglGetError,\r\n  \"eglInitialize\": _eglInitialize,\r\n  \"eglMakeCurrent\": _eglMakeCurrent,\r\n  \"eglQueryString\": _eglQueryString,\r\n  \"eglSwapBuffers\": _eglSwapBuffers,\r\n  \"eglSwapInterval\": _eglSwapInterval,\r\n  \"eglTerminate\": _eglTerminate,\r\n  \"eglWaitGL\": _eglWaitGL,\r\n  \"eglWaitNative\": _eglWaitNative,\r\n  \"emscripten_asm_const_int\": _emscripten_asm_const_int,\r\n  \"emscripten_asm_const_int_sync_on_main_thread\": _emscripten_asm_const_int_sync_on_main_thread,\r\n  \"emscripten_date_now\": _emscripten_date_now,\r\n  \"emscripten_enter_soft_fullscreen\": _emscripten_enter_soft_fullscreen,\r\n  \"emscripten_exit_fullscreen\": _emscripten_exit_fullscreen,\r\n  \"emscripten_exit_pointerlock\": _emscripten_exit_pointerlock,\r\n  \"emscripten_exit_soft_fullscreen\": _emscripten_exit_soft_fullscreen,\r\n  \"emscripten_get_device_pixel_ratio\": _emscripten_get_device_pixel_ratio,\r\n  \"emscripten_get_element_css_size\": _emscripten_get_element_css_size,\r\n  \"emscripten_get_gamepad_status\": _emscripten_get_gamepad_status,\r\n  \"emscripten_get_now\": _emscripten_get_now,\r\n  \"emscripten_get_num_gamepads\": _emscripten_get_num_gamepads,\r\n  \"emscripten_get_screen_size\": _emscripten_get_screen_size,\r\n  \"emscripten_glActiveTexture\": _emscripten_glActiveTexture,\r\n  \"emscripten_glAttachShader\": _emscripten_glAttachShader,\r\n  \"emscripten_glBeginQuery\": _emscripten_glBeginQuery,\r\n  \"emscripten_glBeginQueryEXT\": _emscripten_glBeginQueryEXT,\r\n  \"emscripten_glBeginTransformFeedback\": _emscripten_glBeginTransformFeedback,\r\n  \"emscripten_glBindAttribLocation\": _emscripten_glBindAttribLocation,\r\n  \"emscripten_glBindBuffer\": _emscripten_glBindBuffer,\r\n  \"emscripten_glBindBufferBase\": _emscripten_glBindBufferBase,\r\n  \"emscripten_glBindBufferRange\": _emscripten_glBindBufferRange,\r\n  \"emscripten_glBindFramebuffer\": _emscripten_glBindFramebuffer,\r\n  \"emscripten_glBindRenderbuffer\": _emscripten_glBindRenderbuffer,\r\n  \"emscripten_glBindSampler\": _emscripten_glBindSampler,\r\n  \"emscripten_glBindTexture\": _emscripten_glBindTexture,\r\n  \"emscripten_glBindTransformFeedback\": _emscripten_glBindTransformFeedback,\r\n  \"emscripten_glBindVertexArray\": _emscripten_glBindVertexArray,\r\n  \"emscripten_glBindVertexArrayOES\": _emscripten_glBindVertexArrayOES,\r\n  \"emscripten_glBlendColor\": _emscripten_glBlendColor,\r\n  \"emscripten_glBlendEquation\": _emscripten_glBlendEquation,\r\n  \"emscripten_glBlendEquationSeparate\": _emscripten_glBlendEquationSeparate,\r\n  \"emscripten_glBlendFunc\": _emscripten_glBlendFunc,\r\n  \"emscripten_glBlendFuncSeparate\": _emscripten_glBlendFuncSeparate,\r\n  \"emscripten_glBlitFramebuffer\": _emscripten_glBlitFramebuffer,\r\n  \"emscripten_glBufferData\": _emscripten_glBufferData,\r\n  \"emscripten_glBufferSubData\": _emscripten_glBufferSubData,\r\n  \"emscripten_glCheckFramebufferStatus\": _emscripten_glCheckFramebufferStatus,\r\n  \"emscripten_glClear\": _emscripten_glClear,\r\n  \"emscripten_glClearBufferfi\": _emscripten_glClearBufferfi,\r\n  \"emscripten_glClearBufferfv\": _emscripten_glClearBufferfv,\r\n  \"emscripten_glClearBufferiv\": _emscripten_glClearBufferiv,\r\n  \"emscripten_glClearBufferuiv\": _emscripten_glClearBufferuiv,\r\n  \"emscripten_glClearColor\": _emscripten_glClearColor,\r\n  \"emscripten_glClearDepthf\": _emscripten_glClearDepthf,\r\n  \"emscripten_glClearStencil\": _emscripten_glClearStencil,\r\n  \"emscripten_glClientWaitSync\": _emscripten_glClientWaitSync,\r\n  \"emscripten_glColorMask\": _emscripten_glColorMask,\r\n  \"emscripten_glCompileShader\": _emscripten_glCompileShader,\r\n  \"emscripten_glCompressedTexImage2D\": _emscripten_glCompressedTexImage2D,\r\n  \"emscripten_glCompressedTexImage3D\": _emscripten_glCompressedTexImage3D,\r\n  \"emscripten_glCompressedTexSubImage2D\": _emscripten_glCompressedTexSubImage2D,\r\n  \"emscripten_glCompressedTexSubImage3D\": _emscripten_glCompressedTexSubImage3D,\r\n  \"emscripten_glCopyBufferSubData\": _emscripten_glCopyBufferSubData,\r\n  \"emscripten_glCopyTexImage2D\": _emscripten_glCopyTexImage2D,\r\n  \"emscripten_glCopyTexSubImage2D\": _emscripten_glCopyTexSubImage2D,\r\n  \"emscripten_glCopyTexSubImage3D\": _emscripten_glCopyTexSubImage3D,\r\n  \"emscripten_glCreateProgram\": _emscripten_glCreateProgram,\r\n  \"emscripten_glCreateShader\": _emscripten_glCreateShader,\r\n  \"emscripten_glCullFace\": _emscripten_glCullFace,\r\n  \"emscripten_glDeleteBuffers\": _emscripten_glDeleteBuffers,\r\n  \"emscripten_glDeleteFramebuffers\": _emscripten_glDeleteFramebuffers,\r\n  \"emscripten_glDeleteProgram\": _emscripten_glDeleteProgram,\r\n  \"emscripten_glDeleteQueries\": _emscripten_glDeleteQueries,\r\n  \"emscripten_glDeleteQueriesEXT\": _emscripten_glDeleteQueriesEXT,\r\n  \"emscripten_glDeleteRenderbuffers\": _emscripten_glDeleteRenderbuffers,\r\n  \"emscripten_glDeleteSamplers\": _emscripten_glDeleteSamplers,\r\n  \"emscripten_glDeleteShader\": _emscripten_glDeleteShader,\r\n  \"emscripten_glDeleteSync\": _emscripten_glDeleteSync,\r\n  \"emscripten_glDeleteTextures\": _emscripten_glDeleteTextures,\r\n  \"emscripten_glDeleteTransformFeedbacks\": _emscripten_glDeleteTransformFeedbacks,\r\n  \"emscripten_glDeleteVertexArrays\": _emscripten_glDeleteVertexArrays,\r\n  \"emscripten_glDeleteVertexArraysOES\": _emscripten_glDeleteVertexArraysOES,\r\n  \"emscripten_glDepthFunc\": _emscripten_glDepthFunc,\r\n  \"emscripten_glDepthMask\": _emscripten_glDepthMask,\r\n  \"emscripten_glDepthRangef\": _emscripten_glDepthRangef,\r\n  \"emscripten_glDetachShader\": _emscripten_glDetachShader,\r\n  \"emscripten_glDisable\": _emscripten_glDisable,\r\n  \"emscripten_glDisableVertexAttribArray\": _emscripten_glDisableVertexAttribArray,\r\n  \"emscripten_glDrawArrays\": _emscripten_glDrawArrays,\r\n  \"emscripten_glDrawArraysInstanced\": _emscripten_glDrawArraysInstanced,\r\n  \"emscripten_glDrawArraysInstancedANGLE\": _emscripten_glDrawArraysInstancedANGLE,\r\n  \"emscripten_glDrawArraysInstancedARB\": _emscripten_glDrawArraysInstancedARB,\r\n  \"emscripten_glDrawArraysInstancedEXT\": _emscripten_glDrawArraysInstancedEXT,\r\n  \"emscripten_glDrawArraysInstancedNV\": _emscripten_glDrawArraysInstancedNV,\r\n  \"emscripten_glDrawBuffers\": _emscripten_glDrawBuffers,\r\n  \"emscripten_glDrawBuffersEXT\": _emscripten_glDrawBuffersEXT,\r\n  \"emscripten_glDrawBuffersWEBGL\": _emscripten_glDrawBuffersWEBGL,\r\n  \"emscripten_glDrawElements\": _emscripten_glDrawElements,\r\n  \"emscripten_glDrawElementsInstanced\": _emscripten_glDrawElementsInstanced,\r\n  \"emscripten_glDrawElementsInstancedANGLE\": _emscripten_glDrawElementsInstancedANGLE,\r\n  \"emscripten_glDrawElementsInstancedARB\": _emscripten_glDrawElementsInstancedARB,\r\n  \"emscripten_glDrawElementsInstancedEXT\": _emscripten_glDrawElementsInstancedEXT,\r\n  \"emscripten_glDrawElementsInstancedNV\": _emscripten_glDrawElementsInstancedNV,\r\n  \"emscripten_glDrawRangeElements\": _emscripten_glDrawRangeElements,\r\n  \"emscripten_glEnable\": _emscripten_glEnable,\r\n  \"emscripten_glEnableVertexAttribArray\": _emscripten_glEnableVertexAttribArray,\r\n  \"emscripten_glEndQuery\": _emscripten_glEndQuery,\r\n  \"emscripten_glEndQueryEXT\": _emscripten_glEndQueryEXT,\r\n  \"emscripten_glEndTransformFeedback\": _emscripten_glEndTransformFeedback,\r\n  \"emscripten_glFenceSync\": _emscripten_glFenceSync,\r\n  \"emscripten_glFinish\": _emscripten_glFinish,\r\n  \"emscripten_glFlush\": _emscripten_glFlush,\r\n  \"emscripten_glFramebufferRenderbuffer\": _emscripten_glFramebufferRenderbuffer,\r\n  \"emscripten_glFramebufferTexture2D\": _emscripten_glFramebufferTexture2D,\r\n  \"emscripten_glFramebufferTextureLayer\": _emscripten_glFramebufferTextureLayer,\r\n  \"emscripten_glFrontFace\": _emscripten_glFrontFace,\r\n  \"emscripten_glGenBuffers\": _emscripten_glGenBuffers,\r\n  \"emscripten_glGenFramebuffers\": _emscripten_glGenFramebuffers,\r\n  \"emscripten_glGenQueries\": _emscripten_glGenQueries,\r\n  \"emscripten_glGenQueriesEXT\": _emscripten_glGenQueriesEXT,\r\n  \"emscripten_glGenRenderbuffers\": _emscripten_glGenRenderbuffers,\r\n  \"emscripten_glGenSamplers\": _emscripten_glGenSamplers,\r\n  \"emscripten_glGenTextures\": _emscripten_glGenTextures,\r\n  \"emscripten_glGenTransformFeedbacks\": _emscripten_glGenTransformFeedbacks,\r\n  \"emscripten_glGenVertexArrays\": _emscripten_glGenVertexArrays,\r\n  \"emscripten_glGenVertexArraysOES\": _emscripten_glGenVertexArraysOES,\r\n  \"emscripten_glGenerateMipmap\": _emscripten_glGenerateMipmap,\r\n  \"emscripten_glGetActiveAttrib\": _emscripten_glGetActiveAttrib,\r\n  \"emscripten_glGetActiveUniform\": _emscripten_glGetActiveUniform,\r\n  \"emscripten_glGetActiveUniformBlockName\": _emscripten_glGetActiveUniformBlockName,\r\n  \"emscripten_glGetActiveUniformBlockiv\": _emscripten_glGetActiveUniformBlockiv,\r\n  \"emscripten_glGetActiveUniformsiv\": _emscripten_glGetActiveUniformsiv,\r\n  \"emscripten_glGetAttachedShaders\": _emscripten_glGetAttachedShaders,\r\n  \"emscripten_glGetAttribLocation\": _emscripten_glGetAttribLocation,\r\n  \"emscripten_glGetBooleanv\": _emscripten_glGetBooleanv,\r\n  \"emscripten_glGetBufferParameteri64v\": _emscripten_glGetBufferParameteri64v,\r\n  \"emscripten_glGetBufferParameteriv\": _emscripten_glGetBufferParameteriv,\r\n  \"emscripten_glGetError\": _emscripten_glGetError,\r\n  \"emscripten_glGetFloatv\": _emscripten_glGetFloatv,\r\n  \"emscripten_glGetFragDataLocation\": _emscripten_glGetFragDataLocation,\r\n  \"emscripten_glGetFramebufferAttachmentParameteriv\": _emscripten_glGetFramebufferAttachmentParameteriv,\r\n  \"emscripten_glGetInteger64i_v\": _emscripten_glGetInteger64i_v,\r\n  \"emscripten_glGetInteger64v\": _emscripten_glGetInteger64v,\r\n  \"emscripten_glGetIntegeri_v\": _emscripten_glGetIntegeri_v,\r\n  \"emscripten_glGetIntegerv\": _emscripten_glGetIntegerv,\r\n  \"emscripten_glGetInternalformativ\": _emscripten_glGetInternalformativ,\r\n  \"emscripten_glGetProgramBinary\": _emscripten_glGetProgramBinary,\r\n  \"emscripten_glGetProgramInfoLog\": _emscripten_glGetProgramInfoLog,\r\n  \"emscripten_glGetProgramiv\": _emscripten_glGetProgramiv,\r\n  \"emscripten_glGetQueryObjecti64vEXT\": _emscripten_glGetQueryObjecti64vEXT,\r\n  \"emscripten_glGetQueryObjectivEXT\": _emscripten_glGetQueryObjectivEXT,\r\n  \"emscripten_glGetQueryObjectui64vEXT\": _emscripten_glGetQueryObjectui64vEXT,\r\n  \"emscripten_glGetQueryObjectuiv\": _emscripten_glGetQueryObjectuiv,\r\n  \"emscripten_glGetQueryObjectuivEXT\": _emscripten_glGetQueryObjectuivEXT,\r\n  \"emscripten_glGetQueryiv\": _emscripten_glGetQueryiv,\r\n  \"emscripten_glGetQueryivEXT\": _emscripten_glGetQueryivEXT,\r\n  \"emscripten_glGetRenderbufferParameteriv\": _emscripten_glGetRenderbufferParameteriv,\r\n  \"emscripten_glGetSamplerParameterfv\": _emscripten_glGetSamplerParameterfv,\r\n  \"emscripten_glGetSamplerParameteriv\": _emscripten_glGetSamplerParameteriv,\r\n  \"emscripten_glGetShaderInfoLog\": _emscripten_glGetShaderInfoLog,\r\n  \"emscripten_glGetShaderPrecisionFormat\": _emscripten_glGetShaderPrecisionFormat,\r\n  \"emscripten_glGetShaderSource\": _emscripten_glGetShaderSource,\r\n  \"emscripten_glGetShaderiv\": _emscripten_glGetShaderiv,\r\n  \"emscripten_glGetString\": _emscripten_glGetString,\r\n  \"emscripten_glGetStringi\": _emscripten_glGetStringi,\r\n  \"emscripten_glGetSynciv\": _emscripten_glGetSynciv,\r\n  \"emscripten_glGetTexParameterfv\": _emscripten_glGetTexParameterfv,\r\n  \"emscripten_glGetTexParameteriv\": _emscripten_glGetTexParameteriv,\r\n  \"emscripten_glGetTransformFeedbackVarying\": _emscripten_glGetTransformFeedbackVarying,\r\n  \"emscripten_glGetUniformBlockIndex\": _emscripten_glGetUniformBlockIndex,\r\n  \"emscripten_glGetUniformIndices\": _emscripten_glGetUniformIndices,\r\n  \"emscripten_glGetUniformLocation\": _emscripten_glGetUniformLocation,\r\n  \"emscripten_glGetUniformfv\": _emscripten_glGetUniformfv,\r\n  \"emscripten_glGetUniformiv\": _emscripten_glGetUniformiv,\r\n  \"emscripten_glGetUniformuiv\": _emscripten_glGetUniformuiv,\r\n  \"emscripten_glGetVertexAttribIiv\": _emscripten_glGetVertexAttribIiv,\r\n  \"emscripten_glGetVertexAttribIuiv\": _emscripten_glGetVertexAttribIuiv,\r\n  \"emscripten_glGetVertexAttribPointerv\": _emscripten_glGetVertexAttribPointerv,\r\n  \"emscripten_glGetVertexAttribfv\": _emscripten_glGetVertexAttribfv,\r\n  \"emscripten_glGetVertexAttribiv\": _emscripten_glGetVertexAttribiv,\r\n  \"emscripten_glHint\": _emscripten_glHint,\r\n  \"emscripten_glInvalidateFramebuffer\": _emscripten_glInvalidateFramebuffer,\r\n  \"emscripten_glInvalidateSubFramebuffer\": _emscripten_glInvalidateSubFramebuffer,\r\n  \"emscripten_glIsBuffer\": _emscripten_glIsBuffer,\r\n  \"emscripten_glIsEnabled\": _emscripten_glIsEnabled,\r\n  \"emscripten_glIsFramebuffer\": _emscripten_glIsFramebuffer,\r\n  \"emscripten_glIsProgram\": _emscripten_glIsProgram,\r\n  \"emscripten_glIsQuery\": _emscripten_glIsQuery,\r\n  \"emscripten_glIsQueryEXT\": _emscripten_glIsQueryEXT,\r\n  \"emscripten_glIsRenderbuffer\": _emscripten_glIsRenderbuffer,\r\n  \"emscripten_glIsSampler\": _emscripten_glIsSampler,\r\n  \"emscripten_glIsShader\": _emscripten_glIsShader,\r\n  \"emscripten_glIsSync\": _emscripten_glIsSync,\r\n  \"emscripten_glIsTexture\": _emscripten_glIsTexture,\r\n  \"emscripten_glIsTransformFeedback\": _emscripten_glIsTransformFeedback,\r\n  \"emscripten_glIsVertexArray\": _emscripten_glIsVertexArray,\r\n  \"emscripten_glIsVertexArrayOES\": _emscripten_glIsVertexArrayOES,\r\n  \"emscripten_glLineWidth\": _emscripten_glLineWidth,\r\n  \"emscripten_glLinkProgram\": _emscripten_glLinkProgram,\r\n  \"emscripten_glPauseTransformFeedback\": _emscripten_glPauseTransformFeedback,\r\n  \"emscripten_glPixelStorei\": _emscripten_glPixelStorei,\r\n  \"emscripten_glPolygonOffset\": _emscripten_glPolygonOffset,\r\n  \"emscripten_glProgramBinary\": _emscripten_glProgramBinary,\r\n  \"emscripten_glProgramParameteri\": _emscripten_glProgramParameteri,\r\n  \"emscripten_glQueryCounterEXT\": _emscripten_glQueryCounterEXT,\r\n  \"emscripten_glReadBuffer\": _emscripten_glReadBuffer,\r\n  \"emscripten_glReadPixels\": _emscripten_glReadPixels,\r\n  \"emscripten_glReleaseShaderCompiler\": _emscripten_glReleaseShaderCompiler,\r\n  \"emscripten_glRenderbufferStorage\": _emscripten_glRenderbufferStorage,\r\n  \"emscripten_glRenderbufferStorageMultisample\": _emscripten_glRenderbufferStorageMultisample,\r\n  \"emscripten_glResumeTransformFeedback\": _emscripten_glResumeTransformFeedback,\r\n  \"emscripten_glSampleCoverage\": _emscripten_glSampleCoverage,\r\n  \"emscripten_glSamplerParameterf\": _emscripten_glSamplerParameterf,\r\n  \"emscripten_glSamplerParameterfv\": _emscripten_glSamplerParameterfv,\r\n  \"emscripten_glSamplerParameteri\": _emscripten_glSamplerParameteri,\r\n  \"emscripten_glSamplerParameteriv\": _emscripten_glSamplerParameteriv,\r\n  \"emscripten_glScissor\": _emscripten_glScissor,\r\n  \"emscripten_glShaderBinary\": _emscripten_glShaderBinary,\r\n  \"emscripten_glShaderSource\": _emscripten_glShaderSource,\r\n  \"emscripten_glStencilFunc\": _emscripten_glStencilFunc,\r\n  \"emscripten_glStencilFuncSeparate\": _emscripten_glStencilFuncSeparate,\r\n  \"emscripten_glStencilMask\": _emscripten_glStencilMask,\r\n  \"emscripten_glStencilMaskSeparate\": _emscripten_glStencilMaskSeparate,\r\n  \"emscripten_glStencilOp\": _emscripten_glStencilOp,\r\n  \"emscripten_glStencilOpSeparate\": _emscripten_glStencilOpSeparate,\r\n  \"emscripten_glTexImage2D\": _emscripten_glTexImage2D,\r\n  \"emscripten_glTexImage3D\": _emscripten_glTexImage3D,\r\n  \"emscripten_glTexParameterf\": _emscripten_glTexParameterf,\r\n  \"emscripten_glTexParameterfv\": _emscripten_glTexParameterfv,\r\n  \"emscripten_glTexParameteri\": _emscripten_glTexParameteri,\r\n  \"emscripten_glTexParameteriv\": _emscripten_glTexParameteriv,\r\n  \"emscripten_glTexStorage2D\": _emscripten_glTexStorage2D,\r\n  \"emscripten_glTexStorage3D\": _emscripten_glTexStorage3D,\r\n  \"emscripten_glTexSubImage2D\": _emscripten_glTexSubImage2D,\r\n  \"emscripten_glTexSubImage3D\": _emscripten_glTexSubImage3D,\r\n  \"emscripten_glTransformFeedbackVaryings\": _emscripten_glTransformFeedbackVaryings,\r\n  \"emscripten_glUniform1f\": _emscripten_glUniform1f,\r\n  \"emscripten_glUniform1fv\": _emscripten_glUniform1fv,\r\n  \"emscripten_glUniform1i\": _emscripten_glUniform1i,\r\n  \"emscripten_glUniform1iv\": _emscripten_glUniform1iv,\r\n  \"emscripten_glUniform1ui\": _emscripten_glUniform1ui,\r\n  \"emscripten_glUniform1uiv\": _emscripten_glUniform1uiv,\r\n  \"emscripten_glUniform2f\": _emscripten_glUniform2f,\r\n  \"emscripten_glUniform2fv\": _emscripten_glUniform2fv,\r\n  \"emscripten_glUniform2i\": _emscripten_glUniform2i,\r\n  \"emscripten_glUniform2iv\": _emscripten_glUniform2iv,\r\n  \"emscripten_glUniform2ui\": _emscripten_glUniform2ui,\r\n  \"emscripten_glUniform2uiv\": _emscripten_glUniform2uiv,\r\n  \"emscripten_glUniform3f\": _emscripten_glUniform3f,\r\n  \"emscripten_glUniform3fv\": _emscripten_glUniform3fv,\r\n  \"emscripten_glUniform3i\": _emscripten_glUniform3i,\r\n  \"emscripten_glUniform3iv\": _emscripten_glUniform3iv,\r\n  \"emscripten_glUniform3ui\": _emscripten_glUniform3ui,\r\n  \"emscripten_glUniform3uiv\": _emscripten_glUniform3uiv,\r\n  \"emscripten_glUniform4f\": _emscripten_glUniform4f,\r\n  \"emscripten_glUniform4fv\": _emscripten_glUniform4fv,\r\n  \"emscripten_glUniform4i\": _emscripten_glUniform4i,\r\n  \"emscripten_glUniform4iv\": _emscripten_glUniform4iv,\r\n  \"emscripten_glUniform4ui\": _emscripten_glUniform4ui,\r\n  \"emscripten_glUniform4uiv\": _emscripten_glUniform4uiv,\r\n  \"emscripten_glUniformBlockBinding\": _emscripten_glUniformBlockBinding,\r\n  \"emscripten_glUniformMatrix2fv\": _emscripten_glUniformMatrix2fv,\r\n  \"emscripten_glUniformMatrix2x3fv\": _emscripten_glUniformMatrix2x3fv,\r\n  \"emscripten_glUniformMatrix2x4fv\": _emscripten_glUniformMatrix2x4fv,\r\n  \"emscripten_glUniformMatrix3fv\": _emscripten_glUniformMatrix3fv,\r\n  \"emscripten_glUniformMatrix3x2fv\": _emscripten_glUniformMatrix3x2fv,\r\n  \"emscripten_glUniformMatrix3x4fv\": _emscripten_glUniformMatrix3x4fv,\r\n  \"emscripten_glUniformMatrix4fv\": _emscripten_glUniformMatrix4fv,\r\n  \"emscripten_glUniformMatrix4x2fv\": _emscripten_glUniformMatrix4x2fv,\r\n  \"emscripten_glUniformMatrix4x3fv\": _emscripten_glUniformMatrix4x3fv,\r\n  \"emscripten_glUseProgram\": _emscripten_glUseProgram,\r\n  \"emscripten_glValidateProgram\": _emscripten_glValidateProgram,\r\n  \"emscripten_glVertexAttrib1f\": _emscripten_glVertexAttrib1f,\r\n  \"emscripten_glVertexAttrib1fv\": _emscripten_glVertexAttrib1fv,\r\n  \"emscripten_glVertexAttrib2f\": _emscripten_glVertexAttrib2f,\r\n  \"emscripten_glVertexAttrib2fv\": _emscripten_glVertexAttrib2fv,\r\n  \"emscripten_glVertexAttrib3f\": _emscripten_glVertexAttrib3f,\r\n  \"emscripten_glVertexAttrib3fv\": _emscripten_glVertexAttrib3fv,\r\n  \"emscripten_glVertexAttrib4f\": _emscripten_glVertexAttrib4f,\r\n  \"emscripten_glVertexAttrib4fv\": _emscripten_glVertexAttrib4fv,\r\n  \"emscripten_glVertexAttribDivisor\": _emscripten_glVertexAttribDivisor,\r\n  \"emscripten_glVertexAttribDivisorANGLE\": _emscripten_glVertexAttribDivisorANGLE,\r\n  \"emscripten_glVertexAttribDivisorARB\": _emscripten_glVertexAttribDivisorARB,\r\n  \"emscripten_glVertexAttribDivisorEXT\": _emscripten_glVertexAttribDivisorEXT,\r\n  \"emscripten_glVertexAttribDivisorNV\": _emscripten_glVertexAttribDivisorNV,\r\n  \"emscripten_glVertexAttribI4i\": _emscripten_glVertexAttribI4i,\r\n  \"emscripten_glVertexAttribI4iv\": _emscripten_glVertexAttribI4iv,\r\n  \"emscripten_glVertexAttribI4ui\": _emscripten_glVertexAttribI4ui,\r\n  \"emscripten_glVertexAttribI4uiv\": _emscripten_glVertexAttribI4uiv,\r\n  \"emscripten_glVertexAttribIPointer\": _emscripten_glVertexAttribIPointer,\r\n  \"emscripten_glVertexAttribPointer\": _emscripten_glVertexAttribPointer,\r\n  \"emscripten_glViewport\": _emscripten_glViewport,\r\n  \"emscripten_glWaitSync\": _emscripten_glWaitSync,\r\n  \"emscripten_has_asyncify\": _emscripten_has_asyncify,\r\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\r\n  \"emscripten_request_fullscreen_strategy\": _emscripten_request_fullscreen_strategy,\r\n  \"emscripten_request_pointerlock\": _emscripten_request_pointerlock,\r\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\r\n  \"emscripten_sample_gamepad_data\": _emscripten_sample_gamepad_data,\r\n  \"emscripten_set_beforeunload_callback_on_thread\": _emscripten_set_beforeunload_callback_on_thread,\r\n  \"emscripten_set_blur_callback_on_thread\": _emscripten_set_blur_callback_on_thread,\r\n  \"emscripten_set_canvas_element_size\": _emscripten_set_canvas_element_size,\r\n  \"emscripten_set_element_css_size\": _emscripten_set_element_css_size,\r\n  \"emscripten_set_focus_callback_on_thread\": _emscripten_set_focus_callback_on_thread,\r\n  \"emscripten_set_fullscreenchange_callback_on_thread\": _emscripten_set_fullscreenchange_callback_on_thread,\r\n  \"emscripten_set_gamepadconnected_callback_on_thread\": _emscripten_set_gamepadconnected_callback_on_thread,\r\n  \"emscripten_set_gamepaddisconnected_callback_on_thread\": _emscripten_set_gamepaddisconnected_callback_on_thread,\r\n  \"emscripten_set_keydown_callback_on_thread\": _emscripten_set_keydown_callback_on_thread,\r\n  \"emscripten_set_keypress_callback_on_thread\": _emscripten_set_keypress_callback_on_thread,\r\n  \"emscripten_set_keyup_callback_on_thread\": _emscripten_set_keyup_callback_on_thread,\r\n  \"emscripten_set_main_loop\": _emscripten_set_main_loop,\r\n  \"emscripten_set_mousedown_callback_on_thread\": _emscripten_set_mousedown_callback_on_thread,\r\n  \"emscripten_set_mouseenter_callback_on_thread\": _emscripten_set_mouseenter_callback_on_thread,\r\n  \"emscripten_set_mouseleave_callback_on_thread\": _emscripten_set_mouseleave_callback_on_thread,\r\n  \"emscripten_set_mousemove_callback_on_thread\": _emscripten_set_mousemove_callback_on_thread,\r\n  \"emscripten_set_mouseup_callback_on_thread\": _emscripten_set_mouseup_callback_on_thread,\r\n  \"emscripten_set_pointerlockchange_callback_on_thread\": _emscripten_set_pointerlockchange_callback_on_thread,\r\n  \"emscripten_set_resize_callback_on_thread\": _emscripten_set_resize_callback_on_thread,\r\n  \"emscripten_set_touchcancel_callback_on_thread\": _emscripten_set_touchcancel_callback_on_thread,\r\n  \"emscripten_set_touchend_callback_on_thread\": _emscripten_set_touchend_callback_on_thread,\r\n  \"emscripten_set_touchmove_callback_on_thread\": _emscripten_set_touchmove_callback_on_thread,\r\n  \"emscripten_set_touchstart_callback_on_thread\": _emscripten_set_touchstart_callback_on_thread,\r\n  \"emscripten_set_visibilitychange_callback_on_thread\": _emscripten_set_visibilitychange_callback_on_thread,\r\n  \"emscripten_set_wheel_callback_on_thread\": _emscripten_set_wheel_callback_on_thread,\r\n  \"emscripten_set_window_title\": _emscripten_set_window_title,\r\n  \"emscripten_sleep\": _emscripten_sleep,\r\n  \"environ_get\": _environ_get,\r\n  \"environ_sizes_get\": _environ_sizes_get,\r\n  \"exit\": _exit,\r\n  \"fd_close\": _fd_close,\r\n  \"fd_fdstat_get\": _fd_fdstat_get,\r\n  \"fd_read\": _fd_read,\r\n  \"fd_seek\": _fd_seek,\r\n  \"fd_write\": _fd_write,\r\n  \"glGetFloatv\": _glGetFloatv,\r\n  \"strftime\": _strftime,\r\n  \"strftime_l\": _strftime_l\r\n};\r\nvar asm = createWasm();\r\n/** @type {function(...*):?} */\r\nvar ___wasm_call_ctors = function() {\r\n  return (___wasm_call_ctors = Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _free = function() {\r\n  return (_free = Module[\"asm\"][\"free\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _malloc = function() {\r\n  return (_malloc = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___errno_location = function() {\r\n  return (___errno_location = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebSetFullscreen = Module[\"_I_WebSetFullscreen\"] = function() {\r\n  return (_I_WebSetFullscreen = Module[\"_I_WebSetFullscreen\"] = Module[\"asm\"][\"I_WebSetFullscreen\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebOpenGameMenu = Module[\"_I_WebOpenGameMenu\"] = function() {\r\n  return (_I_WebOpenGameMenu = Module[\"_I_WebOpenGameMenu\"] = Module[\"asm\"][\"I_WebOpenGameMenu\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebSyncScreenSize = Module[\"_I_WebSyncScreenSize\"] = function() {\r\n  return (_I_WebSyncScreenSize = Module[\"_I_WebSyncScreenSize\"] = Module[\"asm\"][\"I_WebSyncScreenSize\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebMain = Module[\"_I_WebMain\"] = function() {\r\n  return (_I_WebMain = Module[\"_I_WebMain\"] = Module[\"asm\"][\"I_WebMain\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _main = Module[\"_main\"] = function() {\r\n  return (_main = Module[\"_main\"] = Module[\"asm\"][\"__main_argc_argv\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_set_limits = function() {\r\n  return (_emscripten_stack_set_limits = Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_get_base = function() {\r\n  return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_get_end = function() {\r\n  return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackSave = function() {\r\n  return (stackSave = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackRestore = function() {\r\n  return (stackRestore = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackAlloc = function() {\r\n  return (stackAlloc = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___cxa_increment_exception_refcount = function() {\r\n  return (___cxa_increment_exception_refcount = Module[\"asm\"][\"__cxa_increment_exception_refcount\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___cxa_is_pointer_type = function() {\r\n  return (___cxa_is_pointer_type = Module[\"asm\"][\"__cxa_is_pointer_type\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vi = Module[\"dynCall_vi\"] = function() {\r\n  return (dynCall_vi = Module[\"dynCall_vi\"] = Module[\"asm\"][\"dynCall_vi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() {\r\n  return (dynCall_ii = Module[\"dynCall_ii\"] = Module[\"asm\"][\"dynCall_ii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iii = Module[\"dynCall_iii\"] = function() {\r\n  return (dynCall_iii = Module[\"dynCall_iii\"] = Module[\"asm\"][\"dynCall_iii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vif = Module[\"dynCall_vif\"] = function() {\r\n  return (dynCall_vif = Module[\"dynCall_vif\"] = Module[\"asm\"][\"dynCall_vif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vffff = Module[\"dynCall_vffff\"] = function() {\r\n  return (dynCall_vffff = Module[\"dynCall_vffff\"] = Module[\"asm\"][\"dynCall_vffff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vii = Module[\"dynCall_vii\"] = function() {\r\n  return (dynCall_vii = Module[\"dynCall_vii\"] = Module[\"asm\"][\"dynCall_vii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() {\r\n  return (dynCall_iiii = Module[\"dynCall_iiii\"] = Module[\"asm\"][\"dynCall_iiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viii = Module[\"dynCall_viii\"] = function() {\r\n  return (dynCall_viii = Module[\"dynCall_viii\"] = Module[\"asm\"][\"dynCall_viii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vfff = Module[\"dynCall_vfff\"] = function() {\r\n  return (dynCall_vfff = Module[\"dynCall_vfff\"] = Module[\"asm\"][\"dynCall_vfff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_v = Module[\"dynCall_v\"] = function() {\r\n  return (dynCall_v = Module[\"dynCall_v\"] = Module[\"asm\"][\"dynCall_v\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function() {\r\n  return (dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = Module[\"asm\"][\"dynCall_iiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = function() {\r\n  return (dynCall_viiii = Module[\"dynCall_viiii\"] = Module[\"asm\"][\"dynCall_viiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiid = Module[\"dynCall_iiid\"] = function() {\r\n  return (dynCall_iiid = Module[\"dynCall_iiid\"] = Module[\"asm\"][\"dynCall_iiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = function() {\r\n  return (dynCall_iiiii = Module[\"dynCall_iiiii\"] = Module[\"asm\"][\"dynCall_iiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iijii = Module[\"dynCall_iijii\"] = function() {\r\n  return (dynCall_iijii = Module[\"dynCall_iijii\"] = Module[\"asm\"][\"dynCall_iijii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vf = Module[\"dynCall_vf\"] = function() {\r\n  return (dynCall_vf = Module[\"dynCall_vf\"] = Module[\"asm\"][\"dynCall_vf\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viif = Module[\"dynCall_viif\"] = function() {\r\n  return (dynCall_viif = Module[\"dynCall_viif\"] = Module[\"asm\"][\"dynCall_viif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = function() {\r\n  return (dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vff = Module[\"dynCall_vff\"] = function() {\r\n  return (dynCall_vff = Module[\"dynCall_vff\"] = Module[\"asm\"][\"dynCall_vff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viffff = Module[\"dynCall_viffff\"] = function() {\r\n  return (dynCall_viffff = Module[\"dynCall_viffff\"] = Module[\"asm\"][\"dynCall_viffff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiji = Module[\"dynCall_iiji\"] = function() {\r\n  return (dynCall_iiji = Module[\"dynCall_iiji\"] = Module[\"asm\"][\"dynCall_iiji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iji = Module[\"dynCall_iji\"] = function() {\r\n  return (dynCall_iji = Module[\"dynCall_iji\"] = Module[\"asm\"][\"dynCall_iji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function() {\r\n  return (dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = Module[\"asm\"][\"dynCall_viiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = function() {\r\n  return (dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = Module[\"asm\"][\"dynCall_iidiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\r\n  return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"dynCall_jiji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\r\n  return (dynCall_ji = Module[\"dynCall_ji\"] = Module[\"asm\"][\"dynCall_ji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = function() {\r\n  return (dynCall_viiiii = Module[\"dynCall_viiiii\"] = Module[\"asm\"][\"dynCall_viiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_i = Module[\"dynCall_i\"] = function() {\r\n  return (dynCall_i = Module[\"dynCall_i\"] = Module[\"asm\"][\"dynCall_i\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vfi = Module[\"dynCall_vfi\"] = function() {\r\n  return (dynCall_vfi = Module[\"dynCall_vfi\"] = Module[\"asm\"][\"dynCall_vfi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viff = Module[\"dynCall_viff\"] = function() {\r\n  return (dynCall_viff = Module[\"dynCall_viff\"] = Module[\"asm\"][\"dynCall_viff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vifff = Module[\"dynCall_vifff\"] = function() {\r\n  return (dynCall_vifff = Module[\"dynCall_vifff\"] = Module[\"asm\"][\"dynCall_vifff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifi = Module[\"dynCall_viifi\"] = function() {\r\n  return (dynCall_viifi = Module[\"dynCall_viifi\"] = Module[\"asm\"][\"dynCall_viifi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifff = Module[\"dynCall_viifff\"] = function() {\r\n  return (dynCall_viifff = Module[\"dynCall_viifff\"] = Module[\"asm\"][\"dynCall_viifff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifffii = Module[\"dynCall_viifffii\"] = function() {\r\n  return (dynCall_viifffii = Module[\"dynCall_viifffii\"] = Module[\"asm\"][\"dynCall_viifffii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiifiiiii = Module[\"dynCall_viiiifiiiii\"] = function() {\r\n  return (dynCall_viiiifiiiii = Module[\"dynCall_viiiifiiiii\"] = Module[\"asm\"][\"dynCall_viiiifiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = function() {\r\n  return (dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_diii = Module[\"dynCall_diii\"] = function() {\r\n  return (dynCall_diii = Module[\"dynCall_diii\"] = Module[\"asm\"][\"dynCall_diii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiid = Module[\"dynCall_viiid\"] = function() {\r\n  return (dynCall_viiid = Module[\"dynCall_viiid\"] = Module[\"asm\"][\"dynCall_viiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiddd = Module[\"dynCall_viiiddd\"] = function() {\r\n  return (dynCall_viiiddd = Module[\"dynCall_viiiddd\"] = Module[\"asm\"][\"dynCall_viiiddd\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vid = Module[\"dynCall_vid\"] = function() {\r\n  return (dynCall_vid = Module[\"dynCall_vid\"] = Module[\"asm\"][\"dynCall_vid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiffi = Module[\"dynCall_viiffi\"] = function() {\r\n  return (dynCall_viiffi = Module[\"dynCall_viiffi\"] = Module[\"asm\"][\"dynCall_viiffi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiifii = Module[\"dynCall_iiiifii\"] = function() {\r\n  return (dynCall_iiiifii = Module[\"dynCall_iiiifii\"] = Module[\"asm\"][\"dynCall_iiiifii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiif = Module[\"dynCall_iiiiif\"] = function() {\r\n  return (dynCall_iiiiif = Module[\"dynCall_iiiiif\"] = Module[\"asm\"][\"dynCall_iiiiif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vijji = Module[\"dynCall_vijji\"] = function() {\r\n  return (dynCall_vijji = Module[\"dynCall_vijji\"] = Module[\"asm\"][\"dynCall_vijji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\r\n  return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"dynCall_viijii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = function() {\r\n  return (dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\r\n  return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"dynCall_iiiiij\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = function() {\r\n  return (dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = Module[\"asm\"][\"dynCall_iiiiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\r\n  return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiijj\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = function() {\r\n  return (dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\r\n  return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiiijj\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_start_unwind = function() {\r\n  return (_asyncify_start_unwind = Module[\"asm\"][\"asyncify_start_unwind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_stop_unwind = function() {\r\n  return (_asyncify_stop_unwind = Module[\"asm\"][\"asyncify_stop_unwind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_start_rewind = function() {\r\n  return (_asyncify_start_rewind = Module[\"asm\"][\"asyncify_start_rewind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_stop_rewind = function() {\r\n  return (_asyncify_stop_rewind = Module[\"asm\"][\"asyncify_stop_rewind\"]).apply(null, arguments);\r\n};\r\n\r\n\r\n\r\n// include: postamble.js\r\n// === Auto-generated postamble setup entry stuff ===\r\n\r\nModule[\"addRunDependency\"] = addRunDependency;\r\nModule[\"removeRunDependency\"] = removeRunDependency;\r\nModule[\"FS_createPath\"] = FS.createPath;\r\nModule[\"FS_createDataFile\"] = FS.createDataFile;\r\nModule[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\r\nModule[\"FS_createLazyFile\"] = FS.createLazyFile;\r\nModule[\"FS_createDevice\"] = FS.createDevice;\r\nModule[\"FS_unlink\"] = FS.unlink;\r\nModule[\"LZ4\"] = LZ4;\r\n\r\n\r\nvar calledRun;\r\n\r\ndependenciesFulfilled = function runCaller() {\r\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\r\n  if (!calledRun) run();\r\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\r\n};\r\n\r\nfunction callMain(args = []) {\r\n\r\n  var entryFunction = _main;\r\n\r\n  args.unshift(thisProgram);\r\n\r\n  var argc = args.length;\r\n  var argv = stackAlloc((argc + 1) * 4);\r\n  var argv_ptr = argv >> 2;\r\n  args.forEach((arg) => {\r\n    HEAP32[argv_ptr++] = stringToUTF8OnStack(arg);\r\n  });\r\n  HEAP32[argv_ptr] = 0;\r\n\r\n  try {\r\n\r\n    var ret = entryFunction(argc, argv);\r\n\r\n    // if we're not running an evented main loop, it's time to exit\r\n    exitJS(ret, /* implicit = */ true);\r\n    return ret;\r\n  }\r\n  catch (e) {\r\n    return handleException(e);\r\n  }\r\n}\r\n\r\nfunction run(args = arguments_) {\r\n\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  preRun();\r\n\r\n  // a preRun added a dependency, run will be called later\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  function doRun() {\r\n    // run may have just been called through dependencies being fulfilled just in this very frame,\r\n    // or while the async setStatus time below was happening\r\n    if (calledRun) return;\r\n    calledRun = true;\r\n    Module['calledRun'] = true;\r\n\r\n    if (ABORT) return;\r\n\r\n    initRuntime();\r\n\r\n    preMain();\r\n\r\n    readyPromiseResolve(Module);\r\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\r\n\r\n    if (shouldRunNow) callMain(args);\r\n\r\n    postRun();\r\n  }\r\n\r\n  if (Module['setStatus']) {\r\n    Module['setStatus']('Running...');\r\n    setTimeout(function() {\r\n      setTimeout(function() {\r\n        Module['setStatus']('');\r\n      }, 1);\r\n      doRun();\r\n    }, 1);\r\n  } else\r\n  {\r\n    doRun();\r\n  }\r\n}\r\n\r\nif (Module['preInit']) {\r\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\r\n  while (Module['preInit'].length > 0) {\r\n    Module['preInit'].pop()();\r\n  }\r\n}\r\n\r\n// shouldRunNow refers to calling main(), not run().\r\nvar shouldRunNow = true;\r\n\r\nif (Module['noInitialRun']) shouldRunNow = false;\r\n\r\nrun();\r\n\r\n\r\n// end include: postamble.js\r\n\r\n\r\n  return createEdgeModule.ready\r\n}\r\n\r\n);\r\n})();\r\nexport default createEdgeModule;","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal__bCOJk\",\"modal_content\":\"modal_content__O8DzT\",\"animatetop\":\"animatetop__1b7Bz\",\"close\":\"close__jJbSs\",\"modal_header\":\"modal_header__7dLiC\",\"modal_body\":\"modal_body__8R0ze\",\"modal_footer\":\"modal_footer__P6GcC\"};","import { FunctionComponent, h } from 'preact';\r\nimport style from './style.css';\r\n\r\nconst LicenseModal: FunctionComponent<{ onClose: () => void }> = ({ onClose }) => (\r\n    <div id=\"myModal\" class={style.modal}>\r\n        <div class={style.modal_content}>\r\n            <div class={style.modal_header}>\r\n                <span class={style.close} onClick={() => onClose()}>&times;</span>\r\n                <h2>EDGE-Classic Licenses</h2>\r\n            </div>\r\n            <div class={style.modal_body}>\r\n                <div style={{ overflowY: \"scroll\", overflowX: \"hidden\", height: \"512px\" }}>\r\n                    <div style={{ fontFamily: \"monospace\", whiteSpace: \"pre\", fontSize: 11 }}>{license}</div>\r\n                </div>\r\n            </div>\r\n            <div class={style.modal_footer}>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n);\r\n\r\nconst license = `===========================================================================================\r\nBSD 2-Clause License\r\n===========================================================================================\r\n\r\nminiz library (gzip support) - Copyright (c) 2015 Wojciech Adam Koszek\r\n\r\n===========================================================================================\r\nBSD 3-Clause License\r\n===========================================================================================\r\n\r\nBlasphemer (various assets) - Copyright (c) 2021 Contributors to the Blasphemer project\r\n\r\nFMMIDI library - Copyright (c) 2003-2006 yuno\r\n\r\nFreedoom (various assets) - Copyright (c) 2001-2019 Contributors to the Freedoom project\r\n\r\nYMFM library - Copyright (c) 2021 Aaron Giles\r\n\r\nYMFMIDI library - Copyright (c) 2021-2022 Devin Acker\r\n\r\nMod4Play library - Copyright (c) 2022 Olav Sørensen\r\n\r\nminivorbis library - Copyright (c) 2020 Eduardo Bart\r\n                     Copyright (c) 2002-2020 Xiph.org Foundation\r\n\r\n===========================================================================================\r\nCC 1.0 Universal License\r\n===========================================================================================\r\n\r\nminimp3 library - lieff\r\n\r\n\"ProtoSquare!\" soundfont - Yingchun Soul\r\n\r\n===========================================================================================\r\nCC-BY-3.0 Unported License\r\n===========================================================================================\r\n\r\nGerman Shepherd Dog Sprites - Copyright (c) 2017 Nash Muhandes\r\n\r\n===========================================================================================\r\nCC-BY-NC-4.0 International License\r\n===========================================================================================\r\n\r\nREKKR (various assets) - Copyright (c) 2021 Mockingbird Softworks\r\n\r\n===========================================================================================\r\nCC-BY-SA-4.0 International License\r\n===========================================================================================\r\n\r\n\"Bonkers for Bits\" soundfont - Copyright (c) Marcel J. Therrien\r\n\r\n\"DMXOPL\" and \"DMXPOL3\" instrument banks - Copyright (c) ConSiGno\r\n\r\n===========================================================================================\r\nGPL2 License\r\n===========================================================================================\r\n\r\n\"Adplug\" instrument bank - Copyright (C) 1999, 2000, 2001 Simon Peter, et al.\r\n\r\nAJBSP - Copyright (c) 2000-2023 Andrew Apted, et al\r\n        Copyright (c) 1994-1998 Colin Reed\r\n        Copyright (c) 1997-1998 Lee Killough\r\n\r\nCOAL -  Copyright (c) 2009-2023 Andrew Apted, et al\r\n        Copyright (c) 1996-1997 Id Software, Inc.\r\n\r\nDDF library - Copyright (c) 1999-2023 The EDGE Team\r\n\r\nDEHACKED library (formerly DEH_EDGE) - Copyright (c) 2004-2023 The EDGE Team\r\n\r\nEC_VOXELIB library - Copyright (c) 2022-2023 The EDGE Team\r\n\r\nEDGE-Classic - Copyright (c) 1999-2023 The EDGE Team\r\n\r\nEPI library - Copyright (c) 2002-2023 The EDGE Team\r\n\r\nFluidlite library - Copyright (c) 2016 Robin Lobel\r\n\r\nGame Music Emu - Copyright (c) 2003-2009 Shay Green\r\n\r\nSuperFastHash - Copyright (c) 2004-2010 Paul Hsieh\r\n\r\nXMIDI library - Copyright (c) 2015-2022 Vitaly Novichkov\r\n                Copyright (c) 2015-2016 WildMIDI Developers\r\n                Copyright (c) 2014 Bret Curtis\r\n                Copyright (c) 2001 Ryan Nunn\r\n\r\n===========================================================================================\r\nMIT License\r\n===========================================================================================\r\n\r\n\"16-Bit Game Station\" soundfont - Copyright (c) 2022 Yingchun Soul\r\n\r\nBW_Midi_Sequencer library - Copyright (c) 2015-2022 Vitaly Novichkov\r\n\r\ngl4es library - Copyright (c) 2016-2018 Sebastien Chevalier\r\n\t\t\t\tCopyright (c) 2013-2016 Ryan Hileman\r\n\r\nglad library - Copyright (c) 2013-2022 David Herberth\r\n\r\nminiz library - Copyright (c) 2013-2014 RAD Game Tools and Valve Software\r\n\t\t\t\tCopyright (c) 2010-2014 Rich Geldreich and Tenacious Software LLC\r\n\r\nPNPOLY algorithm - Copyright (c) 1970-2003 Wm. Randolph Franklin\r\n\r\n\"WadSmoosh\" instrument bank - Copyright (c) 2016-2020 JP LeBreton\r\n\r\n\"C++ implementation of a fast Gaussian blur algorithm by Ivan Kutskir - Integer Version\"\r\n    - Copyright (C) 2017 Basile Fraboni\r\n    - Copyright (C) 2014 Ivan Kutskir\r\n\r\n\r\n===========================================================================================\r\nPublic Domain\r\n===========================================================================================\r\n\r\nFraction.hpp - Bisqwit\r\n\r\n\"GMGSx\" soundfont (renamed to default.sf2) - Kenneth Rundt\r\n\r\ndr_wav and dr_flac libraries - David Reid\r\n\r\nstb_image, stb_image_write, stb_rect_pack and stb_truetype libraries - Sean Barrett\r\n\r\n\"Unicode Processing with C++0x\" Conversion Classes - Andrew Choi\r\n\r\n===========================================================================================\r\nWidePix License\r\n===========================================================================================\r\n\r\nWidePix (various assets) - Copyright (c) 2020-2021 Nash Muhandes\r\n\r\n===========================================================================================\r\nWTF License\r\n===========================================================================================\r\n\r\ncrsid library - Copyright (c) 2022 Hermit (Mihaly Horvath)\r\n\r\n===========================================================================================\r\nzlib License\r\n===========================================================================================\r\n\r\nSDL2 library - Copyright (c) 1997-2020 Sam Lantinga\r\n`\r\n\r\nexport default LicenseModal;\r\n","import { Signal, signal } from '@preact/signals';\r\nimport { h } from 'preact';\r\nimport style from './style.css';\r\nimport { useEffect, useRef, useState } from 'preact/hooks';\r\nimport createEdgeModule from '../../edge-classic';\r\nimport LicenseModal from '../licenses';\r\n\r\nconst defaultIWad = \"freedoom2.wad\"\r\nconst deathmatchIWad = \"freedm.wad\";\r\n\r\ntype PlayerConfig = {\r\n\tindexDBName: string;\r\n}\r\n\r\ntype WadState = {\r\n\terror?: string;\r\n\twadName?: string;\r\n\tisIWAD?: boolean;\r\n}\r\n\r\nconst config: PlayerConfig = {\r\n\tindexDBName: '/edge-classic'\r\n}\r\n\r\nclass WadHandler {\r\n\r\n\tconstructor(config: PlayerConfig) {\r\n\t\tthis.config = config;\r\n\t}\r\n\r\n\tprivate error(message: string) {\r\n\t\talert(message);\r\n\t\tconsole.error(message);\r\n\t\tconsole.trace();\r\n\t}\r\n\r\n\tsetWad(wadName: string, isIWAD?: boolean) {\r\n\t\tthis.wadState.value = { wadName: wadName, isIWAD: isIWAD };\r\n\t}\r\n\r\n\tasync uploadWad(file: File) {\r\n\r\n\t\tlet database: IDBDatabase | undefined;\r\n\r\n\t\ttry {\r\n\t\t\tdatabase = await this.openDatabase();\r\n\t\t\tif (!database) {\r\n\t\t\t\tthis.error(\"Unable to open database\")\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis.error(e);\r\n\t\t\tdatabase?.close();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst upload = new Promise<{ wadName: string, iwad: boolean }>((resolve, reject) => {\r\n\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\r\n\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\tconst bits = e.target.result;\r\n\t\t\t\tconst contents = new Uint8Array(bits as ArrayBuffer);\r\n\r\n\t\t\t\tconst iwad = contents[0] === 73;\r\n\r\n\t\t\t\tconst trans = database.transaction(['FILE_DATA'], 'readwrite');\r\n\t\t\t\tconst path = `${this.config.indexDBName}/${file.name}`;\r\n\t\t\t\tconst addReq = trans.objectStore('FILE_DATA').put({ timestamp: new Date(), mode: 33206, contents: contents }, path);\r\n\r\n\t\t\t\taddReq.onerror = (e) => {\r\n\t\t\t\t\treject(\"Error storing wad data\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttrans.oncomplete = (e) => {\r\n\t\t\t\t\tresolve({ wadName: file.name, iwad: iwad });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treader.onerror = (e) => {\r\n\t\t\t\treject(\"Error reading wad\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst wad = await upload;\r\n\t\t\tdatabase?.close();\r\n\t\t\tdatabase = undefined;\r\n\t\t\tthis.setWad(wad.wadName, wad.iwad);\r\n\t\t} catch (e) {\r\n\t\t\tthis.error(e);\r\n\t\t} finally {\r\n\t\t\tdatabase?.close();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate async openDatabase() {\r\n\r\n\t\treturn new Promise<IDBDatabase | undefined>((resolve, reject) => {\r\n\r\n\t\t\t// build pre-render guard\r\n\t\t\tif (typeof window !== 'undefined') {\r\n\t\t\t\tconst dbrequest = window.indexedDB.open(this.config.indexDBName);\r\n\r\n\t\t\t\tdbrequest.onerror = (e) => {\r\n\t\t\t\t\treject(`unable to load database ${this.config.indexDBName}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdbrequest.onupgradeneeded = (e) => {\r\n\r\n\t\t\t\t\tconsole.log(\"upgrade needed\");\r\n\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tif (!db.objectStoreNames.contains(\"FILE_DATA\")) {\r\n\t\t\t\t\t\tconsole.log(\"Creating FILE_DATA object store\");\r\n\t\t\t\t\t\tconst store = db.createObjectStore(\"FILE_DATA\", {});\r\n\t\t\t\t\t\tstore.createIndex(\"timestamp\", \"timestamp\", { unique: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tdbrequest.onsuccess = (e) => {\r\n\t\t\t\t\tconsole.log(\"db open\");\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tresolve(db);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\twadState: Signal<WadState> = signal({});\r\n\r\n\tconfig: PlayerConfig;\r\n\r\n\tstatic get singleton(): WadHandler {\r\n\t\tif (!WadHandler.instance) {\r\n\t\t\tWadHandler.instance = new WadHandler(config);\r\n\t\t}\r\n\t\treturn WadHandler.instance;\r\n\t}\r\n\r\n\tprivate static instance?: WadHandler;\r\n}\r\n\r\ntype Project = {\r\n\tname: string;\r\n\timage: string;\r\n\tlink: string;\r\n}\r\n\r\nconst projects: Project[] = [\r\n\r\n\t{ name: \"Operation: Arctic Wolf Revisited\", image: \"./assets/images/articwolf.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/arctic-wolf-revisited\" },\r\n\t{ name: \"Astral Pathfinder\", image: \"./assets/images/astralpathfinder.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/astral-pathfinder1\" },\r\n\t{ name: \"Aliens: Stranded\", image: \"./assets/images/aliensstranded.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/aliens-stranded\" }\r\n]\r\n\r\nconst WadChooser = () => {\r\n\r\n\tconst [showLicense, setShowLicense] = useState(false);\r\n\r\n\tconst pelements = projects.map(p => {\r\n\t\treturn <a href={p.link} target=\"_blank\" style=\"display:flex;flex:1;flex-direction:column;height:100%;align-items:flex-end\">\r\n\t\t\t<div style={{ display: \"flex\", flex: 0 }}>\r\n\t\t\t\t<div style={{ paddingTop: 12, paddingBottom: 4, fontSize: 14, whiteSpace: \"pre\", fontWeight: \"normal\" }}>{p.name}</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", position: \"relative\", flexGrow: 1, width: \"100%\" }} >\r\n\t\t\t\t<img style=\"width:100%;height:100%;object-fit:cover;position:absolute\" src={p.image} />\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t});\r\n\r\n\treturn <div style={{ display: \"flex\", width: \"100%\", maxWidth: \"1440px\", padding: 24, paddingLeft: 42 }}>\r\n\t\t{showLicense && <LicenseModal onClose={() => setShowLicense(false)} />}\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1 }}>\r\n\t\t\t<div style={{ display: \"flex\", width: \"80%\" }}>\r\n\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"start\" }}>\r\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t\t<div style={{ fontSize: 18, fontWeight: \"normal\", paddingBottom: 24, width: 800 }}>Play EDGE-Classic in your browser by selecting an option below:\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWad(defaultIWad, true)\r\n\t\t\t\t\t\t}}>Play Freedoom</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWad(deathmatchIWad, true)\r\n\t\t\t\t\t\t}}>Play Bot Death Match</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tdocument.getElementById('getWadFile').click()\r\n\t\t\t\t\t\t}}>Choose Wad, EPK, or Zip</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 128 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tsetShowLicense(true);\r\n\t\t\t\t\t\t}}>Show Licenses</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<input id=\"getWadFile\" style=\"display:none\" type=\"file\" onChange={(e) => {\r\n\t\t\t\t\tconst files = (e.target as any).files as File[];\r\n\t\t\t\t\tif (files.length !== 1) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(\"Please select a single wad, epk, or zip file\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst file = files[0];\r\n\t\t\t\t\tconst check = file.name.toLowerCase();\r\n\t\t\t\t\tif (!check.endsWith(\".wad\") && !check.endsWith(\".zip\") && !check.endsWith(\".epk\")) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(\"Please select a wad, epk, or zip file\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst wadHandler = WadHandler.singleton;\r\n\t\t\t\t\twadHandler.uploadWad(file);\r\n\r\n\t\t\t\t}} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1, width: \"50%\", flexDirection: \"column\" }}>\r\n\t\t\t<div style={{ display: \"flex\", flex: \"0 0 24px\", position: \"relative\" }}>\r\n\t\t\t\t<div style={{ position: \"absolute\", fontSize: 18, fontWeight: 400, whiteSpace: \"pre\" }}>Suggested Projects</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", flexShrink: 0, flexGrow: 1, flexDirection: \"column\" }}>\r\n\t\t\t\t{pelements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n}\r\n\r\nconst EdgeClassic = () => {\r\n\r\n\tconst canvasRef = useRef<HTMLCanvasElement>(null);\r\n\tconst canvasContainerRef = useRef<HTMLDivElement>(null);\r\n\tconst [state, setState] = useState<{ loading: boolean }>({ loading: true });\r\n\tconst wadState = WadHandler.singleton.wadState.value;\r\n\r\n\r\n\tconst pointerLockChange = () => {\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst lock = canvas === document.pointerLockElement;\r\n\r\n\t\t// disabled for embedded classic site\r\n\t\t//Module._I_WebSetFullscreen(lock ? 1 : 0);\r\n\r\n\t\t/*\r\n\t\t// It feels good to open the menu when releasing pointer lock\r\n\t\t// though, it makes the interaction tricky to close the menu\r\n\t\tif (!lock) {\r\n\t\t\tModule._I_WebOpenGameMenu(1);\r\n\t\t} \r\n\t\t*/\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst canvasContainer = canvasContainerRef?.current;\r\n\r\n\t\tconst wadName = wadState.wadName!;\r\n\r\n\t\tif (!canvasContainer) {\r\n\t\t\tthrow \"Unable to get canvas container\";\r\n\t\t}\r\n\r\n\t\tif (!canvas) {\r\n\t\t\tthrow \"Unable to get canvas\";\r\n\t\t}\r\n\r\n\t\tconst syncCanvasSize = () => {\r\n\t\t\tconst w = Math.floor(canvasContainer.offsetWidth);\r\n\t\t\tconst h = Math.floor(canvasContainer.offsetHeight);\r\n\t\t\tconsole.log(\"Setting canvas size\", w, h);\r\n\t\t\tcanvas.style.width = `${w}px`;\r\n\t\t\tcanvas.style.height = `${h}px`;\r\n\t\t\tcanvas.width = w;\r\n\t\t\tcanvas.height = h;\r\n\t\t}\r\n\r\n\t\t// initial update\t\t\r\n\t\tsyncCanvasSize();\r\n\r\n\t\tconst canvasSync = () => {\r\n\t\t\tsyncCanvasSize();\r\n\t\t\tModule._I_WebSyncScreenSize();\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"pointerlockchange\", pointerLockChange, false);\r\n\r\n\t\tlet doSyncTimeout;\r\n\t\twindow.addEventListener(\"resize\", (ev) => {\r\n\r\n\t\t\tclearTimeout(doSyncTimeout);\r\n\t\t\tdoSyncTimeout = setTimeout(canvasSync, 250);\r\n\r\n\t\t});\r\n\r\n\t\tcanvas.addEventListener(\"webglcontextlost\", function (e) { alert('FIXME: WebGL context lost, please reload the page'); e.preventDefault(); }, false);\r\n\r\n\r\n\t\tlet iwad = defaultIWad;\r\n\t\tif (wadState.wadName === deathmatchIWad) {\r\n\t\t\tiwad = deathmatchIWad;\r\n\t\t}\r\n\r\n\t\tif (wadState.wadName !== iwad && wadState.isIWAD) {\r\n\t\t\tiwad = `edge-classic/${wadName}`;\r\n\t\t}\r\n\r\n\t\tconst args = [\"-home\", \"edge-classic\", \"-windowed\", \"-width\", canvas.offsetWidth.toString(), \"-height\", canvas.offsetHeight.toString(), \"-iwad\", iwad];\r\n\r\n\t\tif (iwad === deathmatchIWad) {\r\n\t\t\targs.push(...[\"-deathmatch\", \"1\", \"-nomonsters\", \"-skill\", \"2\", \"-bots\", \"1\", \"-warp\", \"map03\"])\r\n\t\t}\r\n\r\n\t\tif (!wadState.isIWAD) {\r\n\t\t\targs.push(\"-file\")\r\n\t\t\targs.push(`edge-classic/${wadName}`);\r\n\t\t}\r\n\r\n\t\tcreateEdgeModule({\r\n\t\t\tedgePostInit: () => {\r\n\t\t\t\tconsole.log(\"Post-Init!\");\r\n\t\t\t\t// jump \r\n\t\t\t\tif (!args.find(a => a.startsWith(\"-warp\"))) {\r\n\t\t\t\t\tModule._I_WebOpenGameMenu(1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetState({ ...state, loading: false });\r\n\t\t\t},\r\n\t\t\tonFullscreen: () => {\r\n\t\t\t\t/*\r\n\t\t\t\tconsole.log(\"On fullscreen\");\r\n\t\t\t\tconst elements = document.querySelectorAll(\".playercontrols\");\r\n\t\t\t\telements?.forEach(e => {\r\n\t\t\t\t\t(e as any).style.display = \"flex\";\r\n\t\t\t\t});\r\n\t\t\t\t*/\r\n\t\t\t},\r\n\t\t\tpreEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\tpostEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\targuments: args,\r\n\t\t\tpreInit: () => {\r\n\t\t\t\tconsole.log(\"Pre-Init\");\r\n\t\t\t},\r\n\t\t\tpreRun: [],\r\n\t\t\tpostRun: [],\r\n\t\t\tprint: (function () {\r\n\t\t\t\treturn function (text) {\r\n\t\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\t\tconsole.log(text);\r\n\t\t\t\t};\r\n\t\t\t})(),\r\n\t\t\tprintErr: function (text) {\r\n\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\tconsole.error(text);\r\n\t\t\t},\r\n\t\t\tcanvas: canvas,\r\n\t\t\tsetStatus: function (text) { console.log(\"status\", text) },\r\n\t\t\tmonitorRunDependencies: function (left) { console.log(left) },\r\n\t\t}).then(module => {\r\n\t\t\tglobalThis.Module = module;\r\n\t\t\tmodule.canvas = canvas;\r\n\t\t});\r\n\r\n\r\n\t\treturn () => {\r\n\r\n\t\t};\r\n\r\n\t}, []);\r\n\r\n\r\n\treturn <div id=\"canvas-container\" ref={canvasContainerRef} style={{ display: \"flex\", width: \"100%\", height: \"100%\", position: \"relative\" }}>\r\n\t\t<canvas id=\"canvas\" ref={canvasRef} style={{ visibility: state.loading ? \"hidden\" : \"visible\" }}\r\n\t\t\tonClick={async (ev) => {\r\n\t\t\t\tconst lock = canvasRef.current === document.pointerLockElement;\r\n\t\t\t\tif (!lock) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait canvasRef.current?.requestPointerLock();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}} />\r\n\r\n\t\t{!!state.loading && <div style={{ position: \"absolute\", display: \"flex\", width: \"100%\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n\t\t\t<div class={style.loading}>\r\n\t\t\t\t<span style=\"--i:1\">L</span>\r\n\t\t\t\t<span style=\"--i:2\">O</span>\r\n\t\t\t\t<span style=\"--i:3\">A</span>\r\n\t\t\t\t<span style=\"--i:4\">D</span>\r\n\t\t\t\t<span style=\"--i:5\">I</span>\r\n\t\t\t\t<span style=\"--i:6\">N</span>\r\n\t\t\t\t<span style=\"--i:7\">G</span>\r\n\t\t\t\t<span style=\"--i:8\">.</span>\r\n\t\t\t\t<span style=\"--i:9\">.</span>\r\n\t\t\t\t<span style=\"--i:10\">.</span>\r\n\t\t\t</div>\r\n\t\t</div>}\r\n\r\n\t</div>\r\n}\r\n// floating player controls, not currently used\r\n// {!state.loading && <PlayerControls />} \r\n\r\nconst PlayerControls = () => {\r\n\tconst [fullscreen, setFullscreen] = useState(false);\r\n\treturn <div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\", padding: \"24px\", zIndex: 1, position: \"absolute\" }}>\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\" }} />\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", flexShrink: 1, paddingRight: \"48px\" }}>\r\n\t\t\t<button style={{ opacity: 1 }} className=\"playercontrols\" onClick={() => { Module._I_WebSetFullscreen(fullscreen ? 0 : 1, setFullscreen(!fullscreen)) }}>{fullscreen ? \"Minimize\" : \"Maximize\"}</button>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst Player = () => {\r\n\r\n\tconst wadHandler = WadHandler.singleton;\r\n\tconst wadState = wadHandler.wadState.value;\r\n\r\n\treturn (\r\n\t\t<div style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\r\n\t\t\t{!wadState.wadName && <WadChooser />}\r\n\t\t\t{!!wadState.wadName && <EdgeClassic />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Player;\r\n","import './style/index.css';\r\nimport App from './components/app';\r\n\r\nexport default App;\r\n","import { h } from 'preact';\r\n\r\nimport Player from './player';\r\n\r\nconst App = () => (\r\n\t<div id=\"app\">\r\n\t\t<main>\r\n\t\t\t<Player/>\r\n\t\t</main>\r\n\t</div>\r\n);\r\n\r\nexport default App;\r\n"],"sourceRoot":""}