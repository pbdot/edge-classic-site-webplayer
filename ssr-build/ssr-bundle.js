module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "./";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "qVkA");
/******/ })
/************************************************************************/
/******/ ({

/***/ "HteQ":
/***/ (function(module, exports) {

module.exports = require("preact");

/***/ }),

/***/ "qVkA":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./style/index.css
// extracted by mini-css-extract-plugin

// EXTERNAL MODULE: external "preact"
var external_preact_ = __webpack_require__("HteQ");

// CONCATENATED MODULE: ../node_modules/preact/hooks/dist/hooks.module.js

var hooks_module_t,
  hooks_module_r,
  hooks_module_u,
  hooks_module_i,
  hooks_module_o = 0,
  hooks_module_f = [],
  c = [],
  hooks_module_e = external_preact_["options"].__b,
  a = external_preact_["options"].__r,
  v = external_preact_["options"].diffed,
  l = external_preact_["options"].__c,
  m = external_preact_["options"].unmount;
function d(t, u) {
  external_preact_["options"].__h && external_preact_["options"].__h(hooks_module_r, t, hooks_module_o || u), hooks_module_o = 0;
  var i = hooks_module_r.__H || (hooks_module_r.__H = {
    __: [],
    __h: []
  });
  return t >= i.__.length && i.__.push({
    __V: c
  }), i.__[t];
}
function h(n) {
  return hooks_module_o = 1, s(B, n);
}
function s(n, u, i) {
  var o = d(hooks_module_t++, 2);
  if (o.t = n, !o.__c && (o.__ = [i ? i(u) : B(void 0, u), function (n) {
    var t = o.__N ? o.__N[0] : o.__[0],
      r = o.t(t, n);
    t !== r && (o.__N = [r, o.__[1]], o.__c.setState({}));
  }], o.__c = hooks_module_r, !hooks_module_r.u)) {
    var f = function f(n, t, r) {
      if (!o.__c.__H) return !0;
      var u = o.__c.__H.__.filter(function (n) {
        return n.__c;
      });
      if (u.every(function (n) {
        return !n.__N;
      })) return !c || c.call(this, n, t, r);
      var i = !1;
      return u.forEach(function (n) {
        if (n.__N) {
          var t = n.__[0];
          n.__ = n.__N, n.__N = void 0, t !== n.__[0] && (i = !0);
        }
      }), !(!i && o.__c.props === n) && (!c || c.call(this, n, t, r));
    };
    hooks_module_r.u = !0;
    var c = hooks_module_r.shouldComponentUpdate,
      e = hooks_module_r.componentWillUpdate;
    hooks_module_r.componentWillUpdate = function (n, t, r) {
      if (this.__e) {
        var u = c;
        c = void 0, f(n, t, r), c = u;
      }
      e && e.call(this, n, t, r);
    }, hooks_module_r.shouldComponentUpdate = f;
  }
  return o.__N || o.__;
}
function hooks_module_p(u, i) {
  var o = d(hooks_module_t++, 3);
  !external_preact_["options"].__s && z(o.__H, i) && (o.__ = u, o.i = i, hooks_module_r.__H.__h.push(o));
}
function y(u, i) {
  var o = d(hooks_module_t++, 4);
  !external_preact_["options"].__s && z(o.__H, i) && (o.__ = u, o.i = i, hooks_module_r.__h.push(o));
}
function _(n) {
  return hooks_module_o = 5, F(function () {
    return {
      current: n
    };
  }, []);
}
function A(n, t, r) {
  hooks_module_o = 6, y(function () {
    return "function" == typeof n ? (n(t()), function () {
      return n(null);
    }) : n ? (n.current = t(), function () {
      return n.current = null;
    }) : void 0;
  }, null == r ? r : r.concat(n));
}
function F(n, r) {
  var u = d(hooks_module_t++, 7);
  return z(u.__H, r) ? (u.__V = n(), u.i = r, u.__h = n, u.__V) : u.__;
}
function T(n, t) {
  return hooks_module_o = 8, F(function () {
    return n;
  }, t);
}
function q(n) {
  var u = hooks_module_r.context[n.__c],
    i = d(hooks_module_t++, 9);
  return i.c = n, u ? (null == i.__ && (i.__ = !0, u.sub(hooks_module_r)), u.props.value) : n.__;
}
function x(t, r) {
  external_preact_["options"].useDebugValue && external_preact_["options"].useDebugValue(r ? r(t) : t);
}
function P(n) {
  var u = d(hooks_module_t++, 10),
    i = h();
  return u.__ = n, hooks_module_r.componentDidCatch || (hooks_module_r.componentDidCatch = function (n, t) {
    u.__ && u.__(n, t), i[1](n);
  }), [i[0], function () {
    i[1](void 0);
  }];
}
function V() {
  var n = d(hooks_module_t++, 11);
  if (!n.__) {
    for (var u = hooks_module_r.__v; null !== u && !u.__m && null !== u.__;) u = u.__;
    var i = u.__m || (u.__m = [0, 0]);
    n.__ = "P" + i[0] + "-" + i[1]++;
  }
  return n.__;
}
function b() {
  for (var t; t = hooks_module_f.shift();) if (t.__P && t.__H) try {
    t.__H.__h.forEach(k), t.__H.__h.forEach(w), t.__H.__h = [];
  } catch (r) {
    t.__H.__h = [], external_preact_["options"].__e(r, t.__v);
  }
}
external_preact_["options"].__b = function (n) {
  hooks_module_r = null, hooks_module_e && hooks_module_e(n);
}, external_preact_["options"].__r = function (n) {
  a && a(n), hooks_module_t = 0;
  var i = (hooks_module_r = n.__c).__H;
  i && (hooks_module_u === hooks_module_r ? (i.__h = [], hooks_module_r.__h = [], i.__.forEach(function (n) {
    n.__N && (n.__ = n.__N), n.__V = c, n.__N = n.i = void 0;
  })) : (i.__h.forEach(k), i.__h.forEach(w), i.__h = [])), hooks_module_u = hooks_module_r;
}, external_preact_["options"].diffed = function (t) {
  v && v(t);
  var o = t.__c;
  o && o.__H && (o.__H.__h.length && (1 !== hooks_module_f.push(o) && hooks_module_i === external_preact_["options"].requestAnimationFrame || ((hooks_module_i = external_preact_["options"].requestAnimationFrame) || j)(b)), o.__H.__.forEach(function (n) {
    n.i && (n.__H = n.i), n.__V !== c && (n.__ = n.__V), n.i = void 0, n.__V = c;
  })), hooks_module_u = hooks_module_r = null;
}, external_preact_["options"].__c = function (t, r) {
  r.some(function (t) {
    try {
      t.__h.forEach(k), t.__h = t.__h.filter(function (n) {
        return !n.__ || w(n);
      });
    } catch (u) {
      r.some(function (n) {
        n.__h && (n.__h = []);
      }), r = [], external_preact_["options"].__e(u, t.__v);
    }
  }), l && l(t, r);
}, external_preact_["options"].unmount = function (t) {
  m && m(t);
  var r,
    u = t.__c;
  u && u.__H && (u.__H.__.forEach(function (n) {
    try {
      k(n);
    } catch (n) {
      r = n;
    }
  }), u.__H = void 0, r && external_preact_["options"].__e(r, u.__v));
};
var g = "function" == typeof requestAnimationFrame;
function j(n) {
  var t,
    r = function r() {
      clearTimeout(u), g && cancelAnimationFrame(t), setTimeout(n);
    },
    u = setTimeout(r, 100);
  g && (t = requestAnimationFrame(r));
}
function k(n) {
  var t = hooks_module_r,
    u = n.__c;
  "function" == typeof u && (n.__c = void 0, u()), hooks_module_r = t;
}
function w(n) {
  var t = hooks_module_r;
  n.__c = n.__(), hooks_module_r = t;
}
function z(n, t) {
  return !n || n.length !== t.length || t.some(function (t, r) {
    return t !== n[r];
  });
}
function B(n, t) {
  return "function" == typeof t ? t(n) : t;
}

// CONCATENATED MODULE: ../node_modules/@preact/signals-core/dist/signals-core.module.js
function signals_core_module_i() {
  throw new Error("Cycle detected");
}
function signals_core_module_t() {
  if (!(signals_core_module_s > 1)) {
    var i,
      t = !1;
    while (void 0 !== signals_core_module_r) {
      var h = signals_core_module_r;
      signals_core_module_r = void 0;
      signals_core_module_n++;
      while (void 0 !== h) {
        var o = h.o;
        h.o = void 0;
        h.f &= -3;
        if (!(8 & h.f) && signals_core_module_d(h)) try {
          h.c();
        } catch (h) {
          if (!t) {
            i = h;
            t = !0;
          }
        }
        h = o;
      }
    }
    signals_core_module_n = 0;
    signals_core_module_s--;
    if (t) throw i;
  } else signals_core_module_s--;
}
function signals_core_module_h(i) {
  if (signals_core_module_s > 0) return i();
  signals_core_module_s++;
  try {
    return i();
  } finally {
    signals_core_module_t();
  }
}
var signals_core_module_o = void 0,
  signals_core_module_r = void 0,
  signals_core_module_s = 0,
  signals_core_module_n = 0,
  signals_core_module_f = 0;
function signals_core_module_v(i) {
  if (void 0 !== signals_core_module_o) {
    var t = i.n;
    if (void 0 === t || t.t !== signals_core_module_o) {
      t = {
        i: 0,
        S: i,
        p: signals_core_module_o.s,
        n: void 0,
        t: signals_core_module_o,
        e: void 0,
        x: void 0,
        r: t
      };
      if (void 0 !== signals_core_module_o.s) signals_core_module_o.s.n = t;
      signals_core_module_o.s = t;
      i.n = t;
      if (32 & signals_core_module_o.f) i.S(t);
      return t;
    } else if (-1 === t.i) {
      t.i = 0;
      if (void 0 !== t.n) {
        t.n.p = t.p;
        if (void 0 !== t.p) t.p.n = t.n;
        t.p = signals_core_module_o.s;
        t.n = void 0;
        signals_core_module_o.s.n = t;
        signals_core_module_o.s = t;
      }
      return t;
    }
  }
}
function signals_core_module_e(i) {
  this.v = i;
  this.i = 0;
  this.n = void 0;
  this.t = void 0;
}
signals_core_module_e.prototype.h = function () {
  return !0;
};
signals_core_module_e.prototype.S = function (i) {
  if (this.t !== i && void 0 === i.e) {
    i.x = this.t;
    if (void 0 !== this.t) this.t.e = i;
    this.t = i;
  }
};
signals_core_module_e.prototype.U = function (i) {
  if (void 0 !== this.t) {
    var t = i.e,
      h = i.x;
    if (void 0 !== t) {
      t.x = h;
      i.e = void 0;
    }
    if (void 0 !== h) {
      h.e = t;
      i.x = void 0;
    }
    if (i === this.t) this.t = h;
  }
};
signals_core_module_e.prototype.subscribe = function (i) {
  var t = this;
  return signals_core_module_p(function () {
    var h = t.value,
      o = 32 & this.f;
    this.f &= -33;
    try {
      i(h);
    } finally {
      this.f |= o;
    }
  });
};
signals_core_module_e.prototype.valueOf = function () {
  return this.value;
};
signals_core_module_e.prototype.toString = function () {
  return this.value + "";
};
signals_core_module_e.prototype.peek = function () {
  return this.v;
};
Object.defineProperty(signals_core_module_e.prototype, "value", {
  get: function get() {
    var i = signals_core_module_v(this);
    if (void 0 !== i) i.i = this.i;
    return this.v;
  },
  set: function set(h) {
    if (h !== this.v) {
      if (signals_core_module_n > 100) signals_core_module_i();
      this.v = h;
      this.i++;
      signals_core_module_f++;
      signals_core_module_s++;
      try {
        for (var o = this.t; void 0 !== o; o = o.x) o.t.N();
      } finally {
        signals_core_module_t();
      }
    }
  }
});
function signals_core_module_u(i) {
  return new signals_core_module_e(i);
}
function signals_core_module_d(i) {
  for (var t = i.s; void 0 !== t; t = t.n) if (t.S.i !== t.i || !t.S.h() || t.S.i !== t.i) return !0;
  return !1;
}
function signals_core_module_c(i) {
  for (var t = i.s; void 0 !== t; t = t.n) {
    var h = t.S.n;
    if (void 0 !== h) t.r = h;
    t.S.n = t;
    t.i = -1;
    if (void 0 === t.n) {
      i.s = t;
      break;
    }
  }
}
function signals_core_module_a(i) {
  var t = i.s,
    h = void 0;
  while (void 0 !== t) {
    var o = t.p;
    if (-1 === t.i) {
      t.S.U(t);
      if (void 0 !== o) o.n = t.n;
      if (void 0 !== t.n) t.n.p = o;
    } else h = t;
    t.S.n = t.r;
    if (void 0 !== t.r) t.r = void 0;
    t = o;
  }
  i.s = h;
}
function signals_core_module_l(i) {
  signals_core_module_e.call(this, void 0);
  this.x = i;
  this.s = void 0;
  this.g = signals_core_module_f - 1;
  this.f = 4;
}
(signals_core_module_l.prototype = new signals_core_module_e()).h = function () {
  this.f &= -3;
  if (1 & this.f) return !1;
  if (32 == (36 & this.f)) return !0;
  this.f &= -5;
  if (this.g === signals_core_module_f) return !0;
  this.g = signals_core_module_f;
  this.f |= 1;
  if (this.i > 0 && !signals_core_module_d(this)) {
    this.f &= -2;
    return !0;
  }
  var i = signals_core_module_o;
  try {
    signals_core_module_c(this);
    signals_core_module_o = this;
    var t = this.x();
    if (16 & this.f || this.v !== t || 0 === this.i) {
      this.v = t;
      this.f &= -17;
      this.i++;
    }
  } catch (i) {
    this.v = i;
    this.f |= 16;
    this.i++;
  }
  signals_core_module_o = i;
  signals_core_module_a(this);
  this.f &= -2;
  return !0;
};
signals_core_module_l.prototype.S = function (i) {
  if (void 0 === this.t) {
    this.f |= 36;
    for (var t = this.s; void 0 !== t; t = t.n) t.S.S(t);
  }
  signals_core_module_e.prototype.S.call(this, i);
};
signals_core_module_l.prototype.U = function (i) {
  if (void 0 !== this.t) {
    signals_core_module_e.prototype.U.call(this, i);
    if (void 0 === this.t) {
      this.f &= -33;
      for (var t = this.s; void 0 !== t; t = t.n) t.S.U(t);
    }
  }
};
signals_core_module_l.prototype.N = function () {
  if (!(2 & this.f)) {
    this.f |= 6;
    for (var i = this.t; void 0 !== i; i = i.x) i.t.N();
  }
};
signals_core_module_l.prototype.peek = function () {
  if (!this.h()) signals_core_module_i();
  if (16 & this.f) throw this.v;
  return this.v;
};
Object.defineProperty(signals_core_module_l.prototype, "value", {
  get: function get() {
    if (1 & this.f) signals_core_module_i();
    var t = signals_core_module_v(this);
    this.h();
    if (void 0 !== t) t.i = this.i;
    if (16 & this.f) throw this.v;
    return this.v;
  }
});
function signals_core_module_w(i) {
  return new signals_core_module_l(i);
}
function signals_core_module_y(i) {
  var h = i.u;
  i.u = void 0;
  if ("function" == typeof h) {
    signals_core_module_s++;
    var r = signals_core_module_o;
    signals_core_module_o = void 0;
    try {
      h();
    } catch (t) {
      i.f &= -2;
      i.f |= 8;
      signals_core_module_(i);
      throw t;
    } finally {
      signals_core_module_o = r;
      signals_core_module_t();
    }
  }
}
function signals_core_module_(i) {
  for (var t = i.s; void 0 !== t; t = t.n) t.S.U(t);
  i.x = void 0;
  i.s = void 0;
  signals_core_module_y(i);
}
function signals_core_module_g(i) {
  if (signals_core_module_o !== this) throw new Error("Out-of-order effect");
  signals_core_module_a(this);
  signals_core_module_o = i;
  this.f &= -2;
  if (8 & this.f) signals_core_module_(this);
  signals_core_module_t();
}
function signals_core_module_b(i) {
  this.x = i;
  this.u = void 0;
  this.s = void 0;
  this.o = void 0;
  this.f = 32;
}
signals_core_module_b.prototype.c = function () {
  var i = this.S();
  try {
    if (!(8 & this.f) && void 0 !== this.x) this.u = this.x();
  } finally {
    i();
  }
};
signals_core_module_b.prototype.S = function () {
  if (1 & this.f) signals_core_module_i();
  this.f |= 1;
  this.f &= -9;
  signals_core_module_y(this);
  signals_core_module_c(this);
  signals_core_module_s++;
  var t = signals_core_module_o;
  signals_core_module_o = this;
  return signals_core_module_g.bind(this, t);
};
signals_core_module_b.prototype.N = function () {
  if (!(2 & this.f)) {
    this.f |= 2;
    this.o = signals_core_module_r;
    signals_core_module_r = this;
  }
};
signals_core_module_b.prototype.d = function () {
  this.f |= 8;
  if (!(1 & this.f)) signals_core_module_(this);
};
function signals_core_module_p(i) {
  var t = new signals_core_module_b(i);
  try {
    t.c();
  } catch (i) {
    t.d();
    throw i;
  }
  return t.d.bind(t);
}

// CONCATENATED MODULE: ../node_modules/@preact/signals/dist/signals.module.js




var signals_module_c, signals_module_v;
function signals_module_s(n, i) {
  external_preact_["options"][n] = i.bind(null, external_preact_["options"][n] || function () {});
}
function signals_module_l(n) {
  if (signals_module_v) signals_module_v();
  signals_module_v = n && n.S();
}
function signals_module_d(n) {
  var r = this,
    t = n.data,
    f = useSignal(t);
  f.value = t;
  var o = F(function () {
    var n = r.__v;
    while (n = n.__) if (n.__c) {
      n.__c.__$f |= 4;
      break;
    }
    r.__$u.c = function () {
      r.base.data = o.peek();
    };
    return signals_core_module_w(function () {
      var n = f.value.value;
      return 0 === n ? 0 : !0 === n ? "" : n || "";
    });
  }, []);
  return o.value;
}
signals_module_d.displayName = "_st";
Object.defineProperties(signals_core_module_e.prototype, {
  constructor: {
    configurable: !0,
    value: void 0
  },
  type: {
    configurable: !0,
    value: signals_module_d
  },
  props: {
    configurable: !0,
    get: function get() {
      return {
        data: this
      };
    }
  },
  __b: {
    configurable: !0,
    value: 1
  }
});
signals_module_s("__b", function (n, r) {
  if ("string" == typeof r.type) {
    var i,
      t = r.props;
    for (var f in t) if ("children" !== f) {
      var e = t[f];
      if (e instanceof signals_core_module_e) {
        if (!i) r.__np = i = {};
        i[f] = e;
        t[f] = e.peek();
      }
    }
  }
  n(r);
});
signals_module_s("__r", function (n, r) {
  signals_module_l();
  var i,
    t = r.__c;
  if (t) {
    t.__$f &= -2;
    if (void 0 === (i = t.__$u)) t.__$u = i = function (n) {
      var r;
      signals_core_module_p(function () {
        r = this;
      });
      r.c = function () {
        t.__$f |= 1;
        t.setState({});
      };
      return r;
    }();
  }
  signals_module_c = t;
  signals_module_l(i);
  n(r);
});
signals_module_s("__e", function (n, r, i, t) {
  signals_module_l();
  signals_module_c = void 0;
  n(r, i, t);
});
signals_module_s("diffed", function (n, r) {
  signals_module_l();
  signals_module_c = void 0;
  var i;
  if ("string" == typeof r.type && (i = r.__e)) {
    var t = r.__np,
      f = r.props;
    if (t) {
      var o = i.U;
      if (o) for (var e in o) {
        var u = o[e];
        if (void 0 !== u && !(e in t)) {
          u.d();
          o[e] = void 0;
        }
      } else i.U = o = {};
      for (var a in t) {
        var v = o[a],
          s = t[a];
        if (void 0 === v) {
          v = signals_module_p(i, a, s, f);
          o[a] = v;
        } else v.o(s, f);
      }
    }
  }
  n(r);
});
function signals_module_p(n, r, i, t) {
  var f = r in n && void 0 === n.ownerSVGElement,
    _o = signals_core_module_u(i);
  return {
    o: function o(n, r) {
      _o.value = n;
      t = r;
    },
    d: signals_core_module_p(function () {
      var i = _o.value.value;
      if (t[r] !== i) {
        t[r] = i;
        if (f) n[r] = i;else if (i) n.setAttribute(r, i);else n.removeAttribute(r);
      }
    })
  };
}
signals_module_s("unmount", function (n, r) {
  if ("string" == typeof r.type) {
    var i = r.__e;
    if (i) {
      var t = i.U;
      if (t) {
        i.U = void 0;
        for (var f in t) {
          var o = t[f];
          if (o) o.d();
        }
      }
    }
  } else {
    var e = r.__c;
    if (e) {
      var u = e.__$u;
      if (u) {
        e.__$u = void 0;
        u.d();
      }
    }
  }
  n(r);
});
signals_module_s("__h", function (n, r, i, t) {
  if (t < 3) r.__$f |= 2;
  n(r, i, t);
});
external_preact_["Component"].prototype.shouldComponentUpdate = function (n, r) {
  var i = this.__$u;
  if (!(i && void 0 !== i.s || 4 & this.__$f)) return !0;
  if (3 & this.__$f) return !0;
  for (var t in r) return !0;
  for (var f in n) if ("__source" !== f && n[f] !== this.props[f]) return !0;
  for (var o in this.props) if (!(o in n)) return !0;
  return !1;
};
function useSignal(n) {
  return F(function () {
    return signals_core_module_u(n);
  }, []);
}
function useComputed(n) {
  var r = _(n);
  r.current = n;
  signals_module_c.__$f |= 4;
  return F(function () {
    return signals_core_module_w(function () {
      return r.current();
    });
  }, []);
}
function useSignalEffect(n) {
  var r = _(n);
  r.current = n;
  hooks_module_p(function () {
    return signals_core_module_p(function () {
      return r.current();
    });
  }, []);
}

// CONCATENATED MODULE: ./components/player/style.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var style = ({"loading":"loading__O14bA"});
// CONCATENATED MODULE: ./edge-classic.js
function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _typeof(obj){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj;}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;},_typeof(obj);}var createEdgeModule=function(){var _scriptDir=typeof document!=='undefined'&&document.currentScript?document.currentScript.src:undefined;return function(){var _this=this;var moduleArg=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};// include: shell.js
// The Module object: Our interface to the outside world. We import
// and export values on it. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to check if Module already exists (e.g. case 3 above).
// Substitution will be replaced with actual code on later stage of the build,
// this way Closure Compiler will not mangle it (e.g. case 4. above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module=moduleArg;// Set up the promise that indicates the Module is initialized
var readyPromiseResolve,readyPromiseReject;Module['ready']=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject;});// --pre-jses are emitted after the Module integration code, so that they can
// refer to Module (if they choose; they can also define Module)
var Module=typeof Module!=='undefined'?Module:{};if(!Module.expectedDataFileDownloads){Module.expectedDataFileDownloads=0;}Module.expectedDataFileDownloads++;(function(){// Do not attempt to redownload the virtual filesystem data when in a pthread or a Wasm Worker context.
if(Module['ENVIRONMENT_IS_PTHREAD']||Module['$ww'])return;var loadPackage=function loadPackage(metadata){var PACKAGE_PATH='';if((typeof window==="undefined"?"undefined":_typeof(window))==='object'){PACKAGE_PATH=window['encodeURIComponent'](window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf('/'))+'/');}else if(typeof process==='undefined'&&typeof location!=='undefined'){// web worker
PACKAGE_PATH=encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf('/'))+'/');}var PACKAGE_NAME='/home/jenge/Dev_WSL/EDGE-classic/web/site/edge-classic.data';var REMOTE_PACKAGE_BASE='edge-classic.data';if(typeof Module['locateFilePackage']==='function'&&!Module['locateFile']){Module['locateFile']=Module['locateFilePackage'];err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');}var REMOTE_PACKAGE_NAME=Module['locateFile']?Module['locateFile'](REMOTE_PACKAGE_BASE,''):REMOTE_PACKAGE_BASE;var REMOTE_PACKAGE_SIZE=metadata['remote_package_size'];function fetchRemotePackage(packageName,packageSize,callback,errback){var xhr=new XMLHttpRequest();xhr.open('GET',packageName,true);xhr.responseType='arraybuffer';xhr.onprogress=function(event){var url=packageName;var size=packageSize;if(event.total)size=event.total;if(event.loaded){if(!xhr.addedTotal){xhr.addedTotal=true;if(!Module.dataFileDownloads)Module.dataFileDownloads={};Module.dataFileDownloads[url]={loaded:event.loaded,total:size};}else{Module.dataFileDownloads[url].loaded=event.loaded;}var total=0;var loaded=0;var num=0;for(var download in Module.dataFileDownloads){var data=Module.dataFileDownloads[download];total+=data.total;loaded+=data.loaded;num++;}total=Math.ceil(total*Module.expectedDataFileDownloads/num);if(Module['setStatus'])Module['setStatus']("Downloading data... (".concat(loaded,"/").concat(total,")"));}else if(!Module.dataFileDownloads){if(Module['setStatus'])Module['setStatus']('Downloading data...');}};xhr.onerror=function(event){throw new Error("NetworkError for: "+packageName);};xhr.onload=function(event){if(xhr.status==200||xhr.status==304||xhr.status==206||xhr.status==0&&xhr.response){// file URLs can return 0
var packageData=xhr.response;callback(packageData);}else{throw new Error(xhr.statusText+" : "+xhr.responseURL);}};xhr.send(null);};function handleError(error){console.error('package error:',error);};function runWithFS(){function assert(check,msg){if(!check)throw msg+new Error().stack;}Module['FS_createPath']("/","edge_base",true,true);Module['FS_createPath']("/edge_base","blasphemer",true,true);Module['FS_createPath']("/edge_base/blasphemer","graphics",true,true);Module['FS_createPath']("/edge_base/blasphemer","scripts",true,true);Module['FS_createPath']("/edge_base","chex",true,true);Module['FS_createPath']("/edge_base/chex","graphics",true,true);Module['FS_createPath']("/edge_base/chex/graphics","chex_font",true,true);Module['FS_createPath']("/edge_base/chex","scripts",true,true);Module['FS_createPath']("/edge_base","doom",true,true);Module['FS_createPath']("/edge_base/doom","graphics",true,true);Module['FS_createPath']("/edge_base/doom","scripts",true,true);Module['FS_createPath']("/edge_base/doom","textures",true,true);Module['FS_createPath']("/edge_base","doom1",true,true);Module['FS_createPath']("/edge_base/doom1","graphics",true,true);Module['FS_createPath']("/edge_base/doom1","scripts",true,true);Module['FS_createPath']("/edge_base/doom1","textures",true,true);Module['FS_createPath']("/edge_base","doom2",true,true);Module['FS_createPath']("/edge_base/doom2","graphics",true,true);Module['FS_createPath']("/edge_base/doom2","scripts",true,true);Module['FS_createPath']("/edge_base/doom2","textures",true,true);Module['FS_createPath']("/edge_base","freedoom1",true,true);Module['FS_createPath']("/edge_base/freedoom1","graphics",true,true);Module['FS_createPath']("/edge_base/freedoom1/graphics","freedoom_font",true,true);Module['FS_createPath']("/edge_base/freedoom1","scripts",true,true);Module['FS_createPath']("/edge_base","freedoom2",true,true);Module['FS_createPath']("/edge_base/freedoom2","graphics",true,true);Module['FS_createPath']("/edge_base/freedoom2/graphics","freedoom_font",true,true);Module['FS_createPath']("/edge_base/freedoom2","scripts",true,true);Module['FS_createPath']("/edge_base","hacx",true,true);Module['FS_createPath']("/edge_base/hacx","graphics",true,true);Module['FS_createPath']("/edge_base/hacx","scripts",true,true);Module['FS_createPath']("/edge_base/hacx","sprites",true,true);Module['FS_createPath']("/edge_base","harmony",true,true);Module['FS_createPath']("/edge_base/harmony","graphics",true,true);Module['FS_createPath']("/edge_base/harmony","scripts",true,true);Module['FS_createPath']("/edge_base/harmony","sprites",true,true);Module['FS_createPath']("/edge_base","heretic",true,true);Module['FS_createPath']("/edge_base/heretic","graphics",true,true);Module['FS_createPath']("/edge_base/heretic","scripts",true,true);Module['FS_createPath']("/edge_base/heretic","sprites",true,true);Module['FS_createPath']("/edge_base","plutonia",true,true);Module['FS_createPath']("/edge_base/plutonia","graphics",true,true);Module['FS_createPath']("/edge_base/plutonia","scripts",true,true);Module['FS_createPath']("/edge_base/plutonia","textures",true,true);Module['FS_createPath']("/edge_base","rekkr",true,true);Module['FS_createPath']("/edge_base/rekkr","graphics",true,true);Module['FS_createPath']("/edge_base/rekkr","scripts",true,true);Module['FS_createPath']("/edge_base/rekkr","sprites",true,true);Module['FS_createPath']("/edge_base","strife",true,true);Module['FS_createPath']("/edge_base","tnt",true,true);Module['FS_createPath']("/edge_base/tnt","graphics",true,true);Module['FS_createPath']("/edge_base/tnt","scripts",true,true);Module['FS_createPath']("/edge_base/tnt","textures",true,true);Module['FS_createPath']("/","edge_defs",true,true);Module['FS_createPath']("/edge_defs","colormaps",true,true);Module['FS_createPath']("/edge_defs","graphics",true,true);Module['FS_createPath']("/edge_defs/graphics","crosshairs",true,true);Module['FS_createPath']("/edge_defs/graphics","edge1_font",true,true);Module['FS_createPath']("/edge_defs/graphics","overlays",true,true);Module['FS_createPath']("/edge_defs","scripts",true,true);Module['FS_createPath']("/edge_defs","sounds",true,true);Module['FS_createPath']("/edge_defs","sprites",true,true);Module['FS_createPath']("/edge_defs/sprites","mbf_dog",true,true);Module['FS_createPath']("/edge_defs","textures",true,true);Module['FS_createPath']("/edge_defs","ttf",true,true);Module['FS_createPath']("/","soundfont",true,true);var PACKAGE_UUID=metadata['package_uuid'];var indexedDB;if((typeof window==="undefined"?"undefined":_typeof(window))==='object'){indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;}else if(typeof location!=='undefined'){// worker
indexedDB=self.indexedDB;}else{throw'using IndexedDB to cache data can only be done on a web page or in a web worker';}var IDB_RO="readonly";var IDB_RW="readwrite";var DB_NAME="EM_PRELOAD_CACHE";var DB_VERSION=1;var METADATA_STORE_NAME='METADATA';var PACKAGE_STORE_NAME='PACKAGES';function openDatabase(callback,errback){try{var openRequest=indexedDB.open(DB_NAME,DB_VERSION);}catch(e){return errback(e);}openRequest.onupgradeneeded=function(event){var db=/** @type {IDBDatabase} */event.target.result;if(db.objectStoreNames.contains(PACKAGE_STORE_NAME)){db.deleteObjectStore(PACKAGE_STORE_NAME);}var packages=db.createObjectStore(PACKAGE_STORE_NAME);if(db.objectStoreNames.contains(METADATA_STORE_NAME)){db.deleteObjectStore(METADATA_STORE_NAME);}var metadata=db.createObjectStore(METADATA_STORE_NAME);};openRequest.onsuccess=function(event){var db=/** @type {IDBDatabase} */event.target.result;callback(db);};openRequest.onerror=function(error){errback(error);};};// This is needed as chromium has a limit on per-entry files in IndexedDB
// https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177
// https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60
// We set the chunk size to 64MB to stay well-below the limit
var CHUNK_SIZE=64*1024*1024;function cacheRemotePackage(db,packageName,packageData,packageMeta,callback,errback){var transactionPackages=db.transaction([PACKAGE_STORE_NAME],IDB_RW);var packages=transactionPackages.objectStore(PACKAGE_STORE_NAME);var chunkSliceStart=0;var nextChunkSliceStart=0;var chunkCount=Math.ceil(packageData.byteLength/CHUNK_SIZE);var finishedChunks=0;for(var chunkId=0;chunkId<chunkCount;chunkId++){nextChunkSliceStart+=CHUNK_SIZE;var putPackageRequest=packages.put(packageData.slice(chunkSliceStart,nextChunkSliceStart),"package/".concat(packageName,"/").concat(chunkId));chunkSliceStart=nextChunkSliceStart;putPackageRequest.onsuccess=function(event){finishedChunks++;if(finishedChunks==chunkCount){var transaction_metadata=db.transaction([METADATA_STORE_NAME],IDB_RW);var metadata=transaction_metadata.objectStore(METADATA_STORE_NAME);var putMetadataRequest=metadata.put({'uuid':packageMeta.uuid,'chunkCount':chunkCount},"metadata/".concat(packageName));putMetadataRequest.onsuccess=function(event){callback(packageData);};putMetadataRequest.onerror=function(error){errback(error);};}};putPackageRequest.onerror=function(error){errback(error);};}}/* Check if there's a cached package, and if so whether it's the latest available */function checkCachedPackage(db,packageName,callback,errback){var transaction=db.transaction([METADATA_STORE_NAME],IDB_RO);var metadata=transaction.objectStore(METADATA_STORE_NAME);var getRequest=metadata.get("metadata/".concat(packageName));getRequest.onsuccess=function(event){var result=event.target.result;if(!result){return callback(false,null);}else{return callback(PACKAGE_UUID===result['uuid'],result);}};getRequest.onerror=function(error){errback(error);};}function fetchCachedPackage(db,packageName,metadata,callback,errback){var transaction=db.transaction([PACKAGE_STORE_NAME],IDB_RO);var packages=transaction.objectStore(PACKAGE_STORE_NAME);var chunksDone=0;var totalSize=0;var chunkCount=metadata['chunkCount'];var chunks=new Array(chunkCount);for(var chunkId=0;chunkId<chunkCount;chunkId++){var getRequest=packages.get("package/".concat(packageName,"/").concat(chunkId));getRequest.onsuccess=function(event){// If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now
if(chunkCount==1){callback(event.target.result);}else{chunksDone++;totalSize+=event.target.result.byteLength;chunks.push(event.target.result);if(chunksDone==chunkCount){if(chunksDone==1){callback(event.target.result);}else{var tempTyped=new Uint8Array(totalSize);var byteOffset=0;for(var chunkId in chunks){var buffer=chunks[chunkId];tempTyped.set(new Uint8Array(buffer),byteOffset);byteOffset+=buffer.byteLength;buffer=undefined;}chunks=undefined;callback(tempTyped.buffer);tempTyped=undefined;}}}};getRequest.onerror=function(error){errback(error);};}}function processPackageData(arrayBuffer){assert(arrayBuffer,'Loading data file failed.');assert(arrayBuffer.constructor.name===ArrayBuffer.name,'bad input to processPackageData');var byteArray=new Uint8Array(arrayBuffer);var curr;var compressedData={"data":null,"cachedOffset":51834088,"cachedIndexes":[-1,-1],"cachedChunks":[null,null],"offsets":[0,1547,2815,4214,5343,5973,6826,7583,8461,9443,10513,11366,12149,13093,14123,14997,15856,16687,17601,18490,19239,20067,20891,21849,22977,23944,24781,25628,26532,27705,28836,29943,31194,32194,32997,34176,35485,36769,38027,39163,39728,40295,40846,41380,41886,42950,43889,44862,45698,46203,46743,47579,48089,48864,50005,50689,51407,52136,52808,53585,54230,55035,55988,57066,58283,59030,59738,60267,60766,61325,62057,62824,63636,64449,65109,65788,66665,67622,68791,69674,70430,71492,72509,73316,74350,75043,75993,76961,77733,78539,79509,80465,80736,81335,82200,83225,83644,84189,85033,85759,86436,87010,87635,88392,89348,90160,91058,91712,92427,93145,94297,96345,97716,98670,99798,101052,102286,102961,104407,105509,106634,107431,108511,109737,110921,112597,114055,115593,117387,118369,118416,118461,118545,118598,118692,118739,118904,119153,119547,120044,120662,121281,121870,122545,123330,124123,125381,126828,128342,129784,131249,132969,134519,136079,137740,139373,141064,142723,144425,146226,147891,149497,151093,152788,154459,155907,157444,158874,160152,161065,161957,162685,163282,163853,164460,165057,165613,166098,166458,166825,167053,167156,167239,167287,167336,167381,168220,169717,169761,169809,169858,169905,169950,169996,170044,170093,170140,170185,170286,170616,171758,173145,174509,175954,177364,178716,179869,180925,182025,182832,183441,184320,185160,185958,186840,187683,188646,189606,190450,191261,191999,192744,193711,194568,195365,196139,196929,197709,198439,199138,199703,200105,200252,200297,200345,200394,200439,200484,200529,200577,200626,200671,200716,200761,201099,203147,204568,205982,207367,208685,209971,211274,212610,213888,215234,216542,217885,219121,220367,221664,222810,223827,224862,225808,226756,227656,228458,229343,230417,231526,232698,234061,235532,237206,238780,240334,241966,243527,244920,246306,247397,248585,249924,251284,252800,254206,255511,256540,257503,258618,259793,261021,262270,263516,264756,265986,267275,268553,269933,271217,272573,273900,275267,277271,277715,277760,277808,277857,277903,277963,278283,278946,279851,280901,282113,283712,285405,287144,288926,290651,292377,294103,295853,297613,299490,301324,303113,304783,306173,307571,308847,310358,312144,313984,315845,317760,319645,321576,323524,325362,327222,329098,330968,332748,334533,336231,337921,339731,341625,343094,344552,345883,347012,347521,347600,347645,347687,347736,347781,347826,347871,348693,349640,350828,351955,353183,354142,354831,356058,356971,357857,358896,360757,362404,363834,365311,366805,368309,369831,371357,372848,374367,375876,377463,379227,381061,383007,384992,386995,388992,391004,393019,395026,396987,398891,400701,402485,404362,406292,408152,410131,412143,414069,415905,417725,419532,421278,423009,424730,426564,428394,430312,432272,434259,436264,438282,440272,442154,443791,445319,446800,448315,449844,451361,452877,454370,455839,457291,458731,460168,461983,463746,465023,466308,467602,468867,470100,471387,472765,474070,475288,476577,477808,479067,480458,481852,483279,484707,486161,487590,489010,490533,492054,493551,495106,496635,498184,499821,501460,503036,504660,506217,507809,509349,510864,512377,514039,515766,517313,519013,520597,522014,523382,524778,526069,527309,528559,529854,531104,532287,533472,534692,535845,537040,538213,539439,540771,542025,543555,545410,546517,547598,548750,549857,550847,551827,552891,553978,555090,556316,557383,558623,559776,561147,562601,564106,565632,567265,568808,570400,572019,573510,574886,576443,578051,579574,581137,582632,584004,585472,586705,588049,589471,590721,592095,593577,595058,596591,598100,599588,601019,602298,603530,604558,605553,606573,607677,608827,610002,611096,611941,612967,613999,614904,615850,616831,617995,620043,621518,623092,624647,626263,627856,629466,631146,632741,634353,635967,637642,639266,640674,642228,643839,645377,646997,648744,650362,651899,653525,655035,656503,657946,659481,661077,662553,664049,665586,667157,668715,670262,671792,673396,674974,676623,678287,680001,681609,683181,684794,686468,687973,689460,690698,692021,693595,695117,696609,698048,699645,701272,702963,704682,706254,707753,709328,711345,712612,713559,714628,715628,716739,717789,718861,720047,721100,722139,723231,724386,725584,726698,727814,728854,729993,731186,732430,733651,734839,736129,737505,738843,740019,741120,742155,743254,744292,745290,746261,747324,748380,749313,750277,751195,752106,753162,754208,755257,756218,757198,758246,759293,760233,761200,762140,763247,764321,765437,766533,767651,768796,769916,770962,771787,772636,774236,776002,777280,778567,779872,781161,782404,783694,785059,786350,787567,788855,790094,791251,792545,793866,795206,796537,797886,799211,800593,802094,803716,805354,806967,808349,809641,811068,812630,814197,815933,817600,819215,820656,821920,823277,824702,826190,827625,829130,830595,832003,833365,834767,836051,837307,838555,839850,841079,842251,843416,844628,845789,846968,848131,849360,850673,851937,853484,855453,857021,858631,860218,861812,863398,864955,866515,868125,869663,871235,872859,874599,876342,878150,879976,881715,883215,884917,886562,888330,890202,892026,893774,895689,897509,899294,901213,903019,904788,906564,908273,910005,911779,913458,915129,916891,918539,920403,922216,924016,925340,926704,928115,929366,930760,932258,933741,935220,936748,938283,939778,941326,942882,944349,945786,947269,948821,950869,951658,952458,953215,954120,955046,955783,956505,957439,958245,959097,959900,960684,961674,962842,964108,965296,966609,967875,969206,970688,972225,973757,975341,976996,978600,980241,981826,983426,985057,986694,988280,989761,991259,992754,994302,995861,997381,998865,1000346,1001775,1003120,1004420,1005647,1006833,1008007,1009214,1010314,1011342,1012330,1013373,1014390,1015342,1016342,1017349,1018391,1019273,1020032,1021907,1023685,1025524,1027426,1029281,1031114,1032913,1034754,1036623,1038411,1040136,1041750,1043280,1044696,1046533,1048448,1050375,1052164,1054066,1055929,1057801,1059708,1061639,1063448,1065157,1066777,1068358,1069761,1071531,1073521,1075333,1077157,1079074,1080978,1082844,1084611,1086358,1087879,1089334,1090857,1092454,1094064,1095781,1097691,1099382,1101395,1103203,1105003,1107007,1108717,1110610,1112617,1114072,1115440,1117063,1118591,1120057,1121923,1123664,1124947,1126515,1128117,1129629,1131153,1133061,1134507,1135929,1137596,1139146,1140700,1142567,1144423,1146098,1147786,1149510,1151281,1153017,1154772,1156526,1158295,1160126,1161953,1163821,1165669,1167433,1169218,1171008,1172804,1174630,1176453,1178259,1180137,1181962,1183742,1185489,1187235,1188983,1190767,1192459,1194200,1196018,1197741,1199504,1201265,1203106,1204879,1206656,1208413,1210158,1211883,1213595,1215313,1217078,1218816,1220524,1222182,1223943,1225778,1227677,1229511,1231352,1233172,1235029,1236942,1238790,1240588,1242271,1243896,1245671,1247719,1249644,1251555,1253460,1255420,1257332,1259219,1261134,1263047,1264911,1266794,1268715,1270637,1272433,1274228,1275980,1277718,1279484,1281327,1283121,1284953,1286728,1288583,1290426,1292243,1294051,1295813,1297548,1299235,1300835,1302390,1304069,1305830,1307646,1309388,1311145,1312864,1314544,1316272,1317966,1319700,1321459,1323244,1325032,1326760,1328594,1330502,1332402,1334352,1336183,1337961,1339819,1341726,1343650,1345567,1347469,1349396,1351283,1353331,1355304,1357246,1359240,1361240,1363232,1365252,1367231,1369198,1371117,1373005,1374996,1377012,1378992,1380942,1382830,1384764,1386753,1388732,1390690,1392683,1394690,1396703,1398623,1400540,1402439,1404338,1406243,1408079,1409827,1411574,1413403,1415331,1417260,1419187,1421129,1423117,1425068,1427049,1428986,1430913,1432909,1434832,1436655,1438507,1440357,1442225,1444064,1445900,1447707,1449526,1451376,1453194,1454922,1456577,1458151,1459651,1461088,1461921,1463809,1465857,1467905,1469953,1472001,1474049,1476097,1478154,1480202,1482250,1484298,1486346,1488394,1490442,1492490,1494538,1496586,1498634,1500682,1502730,1504778,1506826,1508874,1510922,1512970,1515018,1517066,1519114,1521162,1523210,1525258,1527306,1529354,1531402,1533450,1535498,1537546,1539594,1541642,1543690,1545738,1547786,1549834,1551882,1553930,1555978,1558026,1560074,1562122,1564170,1566218,1568266,1570314,1572362,1574410,1576458,1578506,1580554,1582602,1584650,1586698,1588746,1590794,1592842,1594890,1596938,1598986,1601034,1603082,1605130,1607178,1609226,1611274,1613322,1615370,1617418,1619466,1621514,1623562,1625610,1627658,1629706,1631763,1633811,1635859,1637907,1639955,1642003,1644051,1646099,1648147,1650195,1652243,1654291,1656339,1658387,1660444,1662492,1664540,1666588,1668636,1670684,1672732,1674780,1676828,1678876,1680924,1682972,1685020,1687076,1689124,1691172,1693220,1695276,1697324,1699372,1701420,1703468,1705516,1707564,1709612,1711660,1713708,1715756,1717804,1719852,1721900,1723948,1725996,1728044,1730092,1732140,1734188,1736236,1738284,1740332,1742380,1744428,1746476,1748524,1750572,1752620,1754668,1756716,1758764,1760812,1762860,1764908,1766956,1769004,1771052,1773100,1775148,1777196,1779244,1781292,1783340,1785388,1787436,1789484,1791532,1793580,1795628,1797676,1799724,1801772,1803820,1805868,1807916,1809964,1812012,1814060,1816108,1818156,1820204,1822252,1824300,1826348,1828396,1830444,1832492,1834540,1836588,1838636,1840684,1842732,1844780,1846828,1848876,1850924,1852972,1855020,1857068,1859116,1861164,1863212,1865260,1867308,1869356,1871404,1873452,1875500,1877548,1879596,1881644,1883692,1885740,1887788,1889836,1891884,1893932,1895980,1898028,1900076,1902124,1904172,1906220,1908268,1910316,1912364,1914412,1916460,1918508,1920556,1922604,1924652,1926700,1928748,1930796,1932844,1934901,1936949,1938997,1941045,1943093,1945141,1947189,1949237,1951285,1953333,1955381,1957429,1959477,1961525,1963573,1965621,1967669,1969717,1971765,1973813,1975861,1977909,1979957,1982005,1984053,1986101,1987656,1989123,1990460,1991994,1993495,1995068,1996499,1997936,1999263,2000425,2001747,2003253,2004661,2005851,2007150,2008578,2010125,2011531,2012995,2014447,2015814,2017167,2018640,2020131,2021579,2023064,2024542,2026027,2027490,2028983,2030516,2032038,2033623,2035100,2036678,2038198,2039760,2041268,2042766,2044181,2045760,2047344,2048772,2050215,2051588,2053224,2054896,2056538,2058166,2059778,2061303,2062925,2064625,2066222,2067744,2069384,2070924,2072825,2074323,2075366,2076492,2077602,2078701,2079671,2080722,2081833,2082901,2084026,2085137,2086293,2087515,2088830,2090185,2091653,2093153,2094725,2096307,2097840,2099468,2101039,2102442,2103847,2105440,2107023,2108543,2110092,2111523,2112954,2114344,2115660,2116981,2118364,2119595,2120993,2122443,2123959,2125482,2126983,2128484,2129827,2131034,2132204,2133202,2134271,2135286,2136452,2137627,2138801,2139766,2140645,2141692,2142657,2143575,2144522,2145536,2147064,2148789,2149879,2151010,2152152,2153251,2154190,2155201,2156238,2157308,2158448,2159662,2160922,2162234,2163426,2164934,2166494,2167997,2169503,2171014,2172471,2174095,2175693,2177212,2178663,2180284,2181899,2183288,2184829,2186330,2187901,2189543,2191220,2193067,2194969,2196821,2198390,2200167,2201993,2203733,2205230,2206912,2208200,2209638,2210968,2211869,2212960,2214070,2215159,2216276,2217459,2218527,2219417,2220459,2221478,2222366,2223303,2224308,2225577,2227614,2229121,2230651,2232192,2233743,2235320,2236790,2238276,2239814,2241311,2242822,2244394,2246046,2247774,2249545,2251327,2253043,2254530,2256208,2257788,2259514,2261395,2263166,2264856,2266729,2268491,2270254,2272134,2273849,2275459,2277321,2278993,2280674,2282435,2283965,2285542,2287254,2288848,2290683,2292511,2294205,2295571,2296933,2298278,2299524,2300867,2302323,2303798,2305245,2306698,2308167,2309611,2311084,2312615,2314018,2315392,2316816,2318266,2320310,2322027,2323686,2325364,2327106,2328889,2330606,2332346,2334139,2335920,2337750,2339565,2341448,2343232,2344989,2346779,2348566,2350383,2352209,2354052,2355841,2357736,2359541,2361294,2363064,2364829,2366570,2368352,2370038,2371792,2373602,2375338,2377097,2378878,2380712,2382485,2384243,2385994,2387708,2389443,2391141,2392859,2394594,2396321,2398022,2399637,2401472,2403329,2405227,2407066,2408881,2410706,2412585,2414472,2416314,2418097,2419792,2421376,2422294,2424171,2426219,2428267,2430315,2432363,2434411,2436459,2438516,2440564,2442612,2444660,2446708,2448756,2450804,2452852,2454900,2456948,2458996,2461044,2463092,2465140,2467188,2469236,2471284,2473332,2475380,2477428,2479476,2481524,2483572,2485620,2487668,2489716,2491764,2493812,2495860,2497908,2499956,2502004,2504052,2506100,2508148,2510196,2512244,2514292,2516340,2518388,2520436,2522484,2524532,2526580,2528628,2530676,2532724,2534772,2536820,2538868,2540916,2542964,2545012,2547060,2549108,2551156,2553204,2555252,2557300,2558851,2560099,2561455,2562856,2564307,2565849,2567398,2568824,2570292,2571764,2573252,2574676,2576123,2577573,2578921,2580228,2580881,2581797,2582947,2584413,2585993,2587701,2589546,2591380,2593259,2595121,2596940,2598655,2600295,2602042,2603796,2605649,2607524,2609374,2611181,2612985,2614788,2616591,2618173,2619462,2620494,2621597,2622857,2624135,2625260,2626676,2627955,2629063,2630329,2631638,2633057,2634517,2635987,2637462,2638856,2640252,2641631,2643407,2645219,2646644,2648093,2649583,2651141,2652605,2654110,2655633,2657041,2658517,2660073,2661692,2663132,2664627,2666277,2667964,2669602,2671352,2673150,2674791,2676525,2678167,2679746,2681287,2682783,2684371,2686002,2687581,2689182,2690785,2692416,2693995,2695528,2697088,2698716,2700348,2701961,2703591,2705182,2706705,2708266,2709877,2711514,2713103,2714563,2715733,2717123,2718621,2720103,2721468,2722899,2724389,2725969,2727570,2729154,2730574,2732017,2733670,2735623,2736998,2738375,2739806,2741263,2742607,2744013,2745497,2746907,2748336,2749743,2751268,2752621,2753795,2755321,2756852,2758389,2759989,2761660,2763263,2764849,2766439,2767912,2769402,2770890,2772440,2773988,2775465,2776904,2778426,2780003,2781513,2782990,2784494,2786085,2787632,2789187,2790762,2792359,2793920,2795426,2796977,2798473,2799867,2801171,2802160,2803202,2804547,2805950,2807241,2808524,2809993,2811482,2813010,2814561,2815905,2817202,2818588,2820636,2822273,2823933,2825582,2827322,2829085,2830790,2832555,2834242,2835927,2837662,2839464,2841207,2842639,2844219,2845896,2847531,2849190,2850997,2852701,2854301,2855994,2857589,2859121,2860645,2862244,2863933,2865486,2867025,2868579,2870218,2871856,2873485,2875104,2876792,2878450,2880193,2881923,2883712,2885392,2887022,2888646,2890357,2891939,2893489,2894775,2896175,2897882,2899557,2901181,2902739,2904444,2906190,2907984,2909832,2911530,2913118,2914788,2916786,2917835,2918407,2919030,2919652,2920314,2921062,2921824,2922768,2923752,2924843,2925747,2926769,2928240,2929713,2931329,2932955,2934149,2935598,2937110,2938811,2940528,2942251,2943848,2945513,2947149,2948904,2950528,2952238,2953695,2955428,2957096,2958864,2960586,2962353,2964013,2965627,2967321,2969073,2970835,2972538,2974156,2975546,2976972,2978234,2979434,2980707,2982153,2983418,2984605,2985926,2987221,2988637,2990212,2991758,2993259,2994806,2996410,2997771,2999282,3001330,3003378,3005426,3007474,3009522,3011570,3013618,3015666,3017714,3019762,3021810,3023858,3025906,3027954,3030002,3032050,3034098,3036146,3038194,3040242,3042290,3044338,3046386,3048434,3050482,3052530,3054578,3056635,3058683,3060731,3062779,3064827,3066875,3068923,3070971,3073019,3075067,3077115,3079163,3081211,3083259,3085307,3087355,3089403,3091451,3093499,3095547,3097595,3099643,3101691,3103739,3105787,3107835,3109883,3111931,3113979,3116027,3118075,3120123,3122171,3124219,3126267,3128315,3130363,3132411,3134459,3136507,3138555,3140603,3142651,3144699,3146747,3148795,3150843,3152891,3154939,3156987,3159035,3161083,3163131,3165179,3167227,3169275,3171323,3173371,3175419,3177467,3179515,3181563,3183611,3185659,3187707,3189755,3191803,3193851,3195899,3197947,3199995,3202043,3204091,3206139,3208187,3210235,3212283,3214331,3216379,3218427,3220475,3222523,3224571,3226619,3228667,3230715,3232763,3234811,3236859,3238907,3240955,3243003,3245051,3247099,3249147,3251195,3253251,3255299,3257347,3259395,3261443,3263491,3265539,3267587,3269635,3271683,3273731,3275779,3277827,3279875,3281923,3283971,3286019,3288067,3290115,3292163,3294211,3296259,3298307,3300355,3302403,3304451,3306499,3308547,3310595,3312643,3314691,3316739,3318787,3320835,3322883,3324931,3326979,3329027,3331075,3333123,3335171,3337219,3339267,3341315,3343363,3345411,3347459,3349507,3351555,3353603,3355651,3357699,3359747,3361795,3363843,3365891,3367939,3369987,3372035,3374083,3376131,3378181,3380199,3382230,3384266,3386314,3388371,3390419,3392475,3394528,3396576,3398624,3400672,3402720,3404768,3406816,3408864,3410912,3412960,3415008,3417056,3419104,3421152,3423200,3425248,3427296,3429344,3431400,3433448,3435496,3437544,3439592,3441640,3443688,3445736,3447784,3449832,3451880,3453928,3455976,3458024,3460080,3462128,3464176,3466224,3468272,3470320,3472368,3474423,3476465,3478479,3480514,3482559,3484607,3486663,3488711,3490758,3492806,3494854,3496902,3498950,3500998,3503046,3505094,3507142,3509190,3511238,3513286,3515334,3517382,3519430,3521478,3523526,3525574,3527622,3529670,3531718,3533766,3535814,3537862,3539910,3541958,3544006,3546054,3548102,3550150,3552198,3554246,3556294,3558342,3560390,3562438,3564486,3566534,3568582,3570630,3572678,3574727,3576745,3578774,3580824,3582877,3584925,3586981,3589028,3591076,3593124,3595172,3597220,3599268,3601316,3603364,3605412,3607460,3609508,3611556,3613604,3615652,3617700,3619748,3621796,3623844,3625892,3627940,3629988,3632036,3634084,3636132,3638180,3640228,3642276,3644324,3646372,3648420,3650468,3652516,3654564,3656612,3658660,3660708,3662756,3664804,3666852,3668900,3670948,3672996,3675044,3677092,3679140,3681188,3683236,3685284,3687332,3689380,3691428,3693476,3695524,3697572,3699620,3701668,3703716,3705764,3707812,3709860,3711908,3713956,3716004,3718052,3720100,3722148,3724196,3726244,3728292,3730340,3732388,3734436,3736484,3738532,3740580,3742628,3744676,3746724,3748772,3750820,3752868,3754916,3756964,3759012,3761060,3763108,3765156,3767204,3769252,3771300,3773348,3775396,3777444,3779492,3781540,3783588,3785636,3787684,3789732,3791780,3793828,3795876,3797924,3799972,3802020,3804068,3806116,3808164,3810212,3812260,3814317,3816365,3818413,3820461,3822509,3824557,3826605,3828653,3830701,3832749,3834797,3836845,3838893,3840941,3842989,3845037,3847085,3849133,3851181,3853237,3855294,3857341,3859351,3861378,3863425,3865482,3867530,3869578,3871629,3873677,3875725,3877773,3879821,3881869,3883917,3885965,3888013,3890061,3892109,3894157,3896205,3898253,3900301,3902349,3904397,3906445,3908432,3909631,3911014,3912224,3913301,3914405,3915430,3916585,3917729,3918750,3920004,3921068,3922285,3923337,3924453,3925671,3926684,3927792,3928952,3930095,3931280,3932564,3933811,3934718,3935572,3936463,3937459,3938380,3939221,3940072,3940908,3941771,3942743,3943398,3943751,3944123,3944868,3946055,3947460,3948966,3950391,3951864,3952837,3953925,3955121,3956031,3956961,3957778,3959088,3960321,3961687,3962887,3963927,3965044,3966060,3967208,3968351,3969446,3970639,3971720,3973032,3974065,3975156,3976325,3977403,3978559,3979704,3980813,3981962,3983155,3984431,3985306,3986130,3987016,3987978,3988890,3989680,3990560,3991363,3992222,3993216,3993851,3994205,3994579,3995376,3996505,3997975,3999477,4000920,4002407,4003308,4004419,4005537,4006439,4007346,4008176,4010014,4011043,4011088,4011132,4011180,4011249,4011380,4011516,4011711,4011891,4012080,4012355,4012564,4012849,4013549,4014560,4015591,4016613,4017806,4019289,4020868,4022466,4024156,4025773,4027553,4029302,4031075,4032650,4034221,4035799,4037415,4039085,4040765,4042541,4044308,4045903,4047548,4049191,4050802,4052434,4053959,4054919,4055890,4056808,4057537,4058049,4058295,4058465,4058588,4058703,4058853,4059018,4059124,4059190,4059238,4059287,4059332,4059377,4060174,4061771,4061903,4062171,4062414,4062619,4062839,4063286,4063710,4064095,4064484,4064880,4065146,4065579,4066297,4067197,4068111,4069090,4070195,4071555,4073205,4074895,4076709,4078459,4080286,4082139,4083961,4085651,4087346,4089023,4090751,4092607,4094462,4096349,4098201,4099991,4101786,4103704,4105555,4107409,4109310,4110466,4111499,4112383,4113250,4113970,4114410,4114796,4115135,4115482,4115863,4116215,4116633,4116804,4117006,4117148,4117389,4117594,4117946,4120003,4121222,4122548,4123826,4125023,4126406,4127777,4129174,4130517,4131909,4133239,4134653,4136134,4137556,4138955,4140404,4141901,4143388,4144813,4146296,4147781,4149156,4150546,4151967,4153333,4154592,4155676,4156931,4158345,4159651,4160967,4162350,4163724,4164952,4166350,4167796,4169111,4170401,4171783,4173303,4174764,4176221,4177705,4178977,4180368,4181745,4183218,4184652,4186078,4187470,4188831,4190177,4191492,4192939,4194266,4195515,4196680,4197878,4199171,4200269,4201094,4202727,4203903,4203952,4203997,4204042,4204510,4205524,4206602,4207611,4208948,4210457,4211903,4213351,4215198,4217003,4218714,4220403,4222077,4223170,4224182,4225685,4227408,4229176,4231022,4232766,4234580,4236385,4238149,4239786,4241440,4243112,4244943,4246815,4248659,4250528,4252382,4254117,4256013,4257909,4259775,4261631,4263467,4265086,4266681,4268194,4269899,4271416,4272716,4273972,4275304,4276480,4277589,4278650,4279379,4280058,4280103,4280151,4280200,4280629,4281313,4282400,4283168,4283873,4284919,4286303,4287578,4288877,4290001,4291022,4292080,4292537,4293424,4294102,4294794,4295492,4296166,4297118,4297978,4298888,4299849,4300726,4301698,4302579,4303506,4304258,4305128,4306093,4307016,4307922,4308668,4309395,4310042,4310734,4311506,4312314,4313102,4313829,4314814,4315525,4316277,4317157,4317980,4318778,4319632,4320396,4321373,4322328,4323192,4324055,4324857,4325701,4326618,4327439,4328276,4329818,4331325,4332791,4334294,4335947,4337580,4339124,4340694,4342339,4343775,4345286,4346813,4348454,4350052,4351453,4353247,4354575,4356056,4357556,4359221,4360798,4362245,4363892,4365279,4366988,4368855,4370282,4371766,4373078,4374185,4375427,4376748,4378101,4379203,4380301,4381530,4382579,4383719,4384970,4386222,4387467,4388586,4389417,4390293,4391100,4392897,4394410,4395785,4397249,4398638,4399915,4401305,4402493,4403744,4405115,4406455,4407681,4408807,4409731,4410634,4411268,4412215,4414131,4415639,4417149,4418658,4420073,4421373,4422748,4423922,4425139,4426476,4427795,4429007,4429901,4430767,4431466,4432208,4434103,4435565,4437035,4438437,4439918,4441255,4442486,4443862,4445034,4446332,4447715,4449036,4450241,4451282,4452246,4453114,4453767,4454762,4456650,4458096,4459572,4461000,4462460,4463999,4465482,4466846,4468038,4468980,4469789,4470550,4471430,4472280,4473106,4474822,4476317,4477809,4479235,4480717,4482020,4483248,4484595,4485749,4487058,4488394,4489694,4490846,4491826,4492770,4493538,4494218,4495837,4497531,4499003,4500386,4501524,4502776,4504248,4505685,4507038,4507972,4509001,4510381,4512121,4513708,4515286,4516673,4517926,4519052,4520527,4521947,4523201,4524242,4525507,4526751,4528121,4529086,4530234,4531981,4533739,4535523,4537352,4539042,4540654,4542032,4543884,4545796,4547596,4549324,4551238,4553055,4554362,4555626,4556929,4558283,4559736,4561195,4563090,4564423,4565821,4567110,4568453,4569920,4571447,4572827,4573745,4574696,4575825,4577646,4578637,4579489,4580400,4582130,4583462,4584802,4586476,4588104,4589615,4591361,4593104,4594874,4596063,4597572,4599304,4600811,4602431,4604314,4606172,4607798,4609020,4610599,4612289,4613833,4615575,4617494,4619393,4620817,4622130,4623795,4625498,4627083,4628882,4630795,4632727,4634048,4635421,4637095,4638784,4640321,4642055,4643962,4645890,4647282,4648681,4650319,4652006,4653502,4655208,4657060,4658988,4660342,4661714,4663398,4664999,4666520,4668278,4670036,4671846,4673056,4674590,4676321,4677812,4679436,4681193,4683012,4684431,4685747,4687401,4689058,4690562,4692270,4694044,4695915,4697148,4698622,4700361,4701891,4703505,4705314,4707150,4708727,4710357,4711862,4713476,4715062,4716610,4718290,4719972,4721508,4723031,4724629,4726056,4727642,4729233,4730791,4732343,4733793,4735291,4736815,4738198,4739712,4741181,4742367,4743477,4744650,4746003,4747301,4748435,4749718,4751362,4752926,4754218,4755517,4756900,4758280,4759703,4760880,4762348,4763362,4764745,4766622,4766670,4766719,4766764,4766809,4766854,4766942,4767351,4768025,4768774,4769602,4770535,4771519,4772495,4773550,4774475,4775621,4776735,4778011,4779354,4780516,4781803,4783135,4784291,4785512,4786640,4787628,4788851,4789894,4791111,4792279,4793297,4794240,4795190,4795982,4796610,4797339,4797997,4798342,4798387,4798432,4798480,4798529,4798574,4799820,4800743,4801502,4802306,4803411,4804695,4805986,4806993,4808020,4809023,4810066,4810816,4811536,4812305,4813278,4814270,4815376,4816552,4817658,4818799,4820079,4821360,4822559,4823929,4825290,4826631,4827977,4829266,4830595,4831802,4832729,4833533,4834080,4834633,4835181,4835957,4836835,4837616,4838406,4839308,4840331,4841293,4842176,4843176,4844442,4845496,4846489,4847538,4848306,4849404,4850690,4851738,4852835,4853821,4854845,4855714,4857090,4857799,4858862,4860009,4861656,4862851,4864110,4865460,4866928,4868410,4869871,4871497,4873278,4875064,4876909,4878733,4880517,4882233,4883967,4885592,4887272,4889039,4890645,4892301,4893901,4895559,4897145,4898624,4900277,4901967,4903565,4905135,4906714,4908327,4909899,4911345,4912544,4913623,4914989,4916603,4918106,4919689,4921255,4922705,4924049,4925479,4926939,4928917,4929632,4930392,4931448,4932561,4933688,4934996,4936401,4937720,4938974,4940511,4941955,4943244,4944011,4944916,4946091,4947389,4948808,4950055,4951265,4952488,4953625,4954777,4955931,4957136,4958460,4959674,4960991,4962403,4963624,4964894,4966287,4967660,4968983,4970272,4971523,4972776,4973985,4974939,4975917,4977114,4978249,4979567,4980702,4982170,4982784,4984197,4985018,4986018,4987204,4988880,4990590,4991419,4992417,4993421,4995177,4995984,4996874,4997673,4998740,4999861,5000880,5001887,5002924,5004143,5005484,5007054,5008706,5010366,5012007,5013498,5014840,5016246,5017759,5019431,5021038,5022727,5024361,5025989,5027608,5029189,5030661,5032175,5033821,5035642,5037499,5039352,5041181,5042924,5044676,5046165,5047578,5048924,5050275,5051627,5052874,5053882,5054469,5055452,5056615,5057724,5058931,5059738,5060975,5061810,5062821,5063907,5064831,5065670,5066802,5067642,5068816,5070120,5071596,5072212,5072815,5073363,5074057,5074654,5075286,5075886,5076949,5078047,5079089,5080170,5080985,5081780,5082589,5083382,5084204,5085201,5086156,5087048,5088042,5088976,5089762,5090696,5091474,5092417,5093416,5094387,5095334,5096273,5096856,5097529,5098243,5098976,5099704,5100677,5101561,5102334,5103270,5104052,5104903,5105758,5106753,5107468,5108785,5110305,5112260,5113471,5115406,5117406,5119274,5121010,5122701,5124484,5126199,5127939,5129765,5131663,5133646,5135150,5135195,5135243,5135292,5135337,5135382,5135427,5135475,5135524,5135569,5135614,5135659,5135707,5136238,5137061,5138382,5139793,5141298,5142846,5144354,5145838,5147317,5148889,5150559,5152244,5153977,5155708,5157424,5159095,5160756,5162410,5163995,5165616,5167228,5168815,5170386,5171697,5172999,5174157,5175359,5176427,5176976,5177359,5177596,5177744,5177855,5177900,5177943,5177992,5178037,5178082,5178127,5178171,5178220,5178265,5178310,5178355,5178684,5180741,5182789,5184837,5186885,5188933,5190981,5193029,5195077,5197125,5199173,5201221,5203269,5205317,5207365,5209413,5211461,5213509,5215557,5217605,5219653,5221701,5223749,5225797,5227845,5229893,5231941,5233989,5236037,5237775,5239141,5240321,5241535,5242776,5243905,5245038,5246210,5247386,5248608,5249854,5251138,5252334,5253626,5255004,5256313,5257943,5259594,5261094,5262560,5263911,5265267,5266814,5268376,5269768,5271180,5272860,5274420,5275933,5277397,5278842,5280426,5281762,5283191,5284584,5286045,5287527,5288893,5290061,5291353,5292645,5293899,5295113,5296193,5297228,5298165,5299234,5300283,5301372,5302273,5303002,5303674,5304536,5305290,5305912,5306529,5307109,5308210,5310152,5311505,5312535,5313616,5314707,5315798,5317069,5318445,5319609,5320852,5322056,5323249,5324544,5325862,5327191,5328709,5330446,5332182,5333890,5335704,5337488,5339111,5340803,5342150,5343711,5345080,5346635,5348291,5349830,5351197,5352826,5354455,5356069,5357640,5359254,5360883,5362378,5363685,5365029,5366354,5367575,5368656,5369675,5370671,5371721,5372697,5373637,5374680,5375754,5376818,5377816,5378674,5379398,5380138,5380492,5380998,5381415,5381948,5383996,5384639,5385281,5385989,5386650,5387316,5387982,5388637,5389377,5390063,5390693,5391332,5392021,5392891,5394346,5395976,5397431,5399056,5400652,5402316,5403865,5405387,5406857,5408175,5409122,5409984,5411536,5412931,5414464,5415968,5417460,5418969,5420406,5421739,5423038,5424130,5425055,5426352,5427849,5429354,5430763,5432254,5433662,5434988,5436153,5436908,5437562,5438294,5438994,5439649,5440303,5440958,5441654,5442331,5442982,5443654,5444303,5444996,5446894,5447911,5448592,5449268,5449925,5450627,5451321,5452008,5452684,5453333,5454002,5454702,5455403,5456116,5457141,5458752,5460328,5461941,5463661,5465370,5466966,5468535,5470014,5471464,5472820,5474127,5475492,5476801,5478087,5479305,5480652,5482007,5483314,5484469,5485865,5487557,5489232,5490826,5492480,5494115,5495701,5497174,5498432,5499505,5500284,5501056,5501770,5502432,5503087,5503731,5504374,5505070,5505748,5506385,5507059,5507748,5508422,5509093,5510582,5512353,5512653,5513145,5513773,5514410,5515074,5515879,5516768,5517673,5518737,5519830,5520860,5522101,5523517,5525041,5526602,5528180,5529762,5531288,5532770,5534219,5535652,5537112,5538530,5540006,5541552,5542967,5544425,5545839,5547213,5548500,5549902,5551297,5552814,5554462,5555990,5557454,5558817,5560015,5561143,5562337,5563574,5564827,5566163,5567312,5568440,5569537,5570520,5571517,5572556,5573591,5574534,5575508,5576405,5577173,5577816,5578315,5578701,5580749,5581128,5581538,5582039,5582633,5583332,5584133,5584988,5585913,5586886,5587835,5588912,5590090,5591380,5592796,5594400,5596049,5597751,5599410,5601042,5602653,5604072,5605532,5606834,5608132,5609460,5610885,5612365,5613785,5615212,5616673,5618111,5619550,5620990,5622450,5623896,5625367,5627019,5628711,5630308,5631740,5633017,5634295,5635495,5636740,5637967,5639125,5640374,5641474,5642557,5643654,5644716,5645666,5646526,5647277,5647989,5648597,5649030,5650727,5651560,5651952,5652496,5653149,5653781,5654506,5655380,5656251,5657250,5658377,5659401,5660563,5662054,5663589,5665062,5666571,5668118,5669623,5671011,5672275,5673626,5674965,5676307,5677714,5679095,5680528,5681968,5683247,5684631,5685989,5687381,5688745,5690051,5691386,5692708,5694013,5695490,5697020,5698601,5700180,5701623,5703046,5704431,5705737,5706943,5708170,5709347,5710512,5711604,5712690,5713682,5714652,5715544,5716449,5717143,5717752,5718143,5719383,5721342,5723343,5725391,5727358,5729406,5731367,5733330,5735378,5737342,5739390,5741447,5743197,5744910,5746687,5748411,5750187,5752235,5754283,5756331,5758379,5760427,5762475,5764523,5766571,5768619,5770667,5772715,5774763,5776811,5778859,5780907,5782955,5785003,5787051,5789099,5791147,5793195,5795243,5797291,5799339,5801387,5802891,5803817,5804587,5805372,5806205,5807142,5808065,5809274,5810197,5811069,5811925,5812878,5813851,5814709,5815618,5816340,5817210,5818142,5818955,5819770,5820620,5821424,5822533,5823737,5824423,5825371,5826251,5827363,5828469,5829484,5830909,5832044,5832736,5833297,5834445,5835710,5836992,5838247,5839587,5840131,5840608,5841170,5841771,5842314,5843021,5843941,5844930,5845719,5846487,5847008,5847632,5848309,5848968,5849731,5850928,5851404,5852253,5852876,5853585,5854325,5854969,5856127,5857064,5858006,5859143,5859952,5860648,5861155,5861718,5862270,5862963,5863652,5864596,5865225,5865966,5866604,5867524,5868671,5869500,5870383,5871333,5872278,5873301,5874127,5875149,5875901,5876791,5877871,5878839,5879731,5880416,5881386,5881662,5882280,5883162,5884186,5884524,5885104,5886074,5886747,5887450,5888028,5888615,5889329,5890240,5891171,5892036,5892652,5893345,5894100,5895108,5896991,5898655,5900227,5901685,5903104,5904481,5905941,5907491,5909487,5911232,5913020,5914608,5916031,5917485,5918867,5920354,5921900,5923948,5925568,5927167,5928877,5930547,5932168,5933781,5935522,5937267,5939078,5940830,5942544,5944284,5945709,5946910,5948127,5949392,5951009,5952612,5954266,5956043,5957810,5959550,5961254,5962948,5964713,5966449,5968141,5969847,5971537,5973305,5975050,5976799,5978512,5980256,5981999,5983768,5985485,5987265,5988964,5990547,5992144,5993686,5995003,5996326,5997620,5999109,6000625,6002187,6003829,6005451,6007033,6008726,6010231,6011751,6013399,6015020,6016609,6018582,6020180,6021639,6023120,6024663,6026174,6027638,6029143,6030648,6032075,6033582,6035177,6036813,6038228,6039790,6041470,6043142,6044832,6046628,6048378,6050020,6051755,6053337,6054908,6056462,6057988,6059597,6061213,6062805,6064409,6066031,6067659,6069251,6070796,6072341,6073949,6075615,6077189,6078834,6080387,6081956,6083552,6085209,6086818,6088400,6089762,6090918,6092369,6093869,6095309,6096658,6098137,6099655,6101236,6102852,6104366,6105747,6107231,6109060,6110782,6112017,6113220,6114446,6115686,6116929,6118207,6119452,6120723,6121983,6123284,6124585,6126118,6127407,6128698,6129983,6131301,6132610,6133922,6135228,6136452,6137733,6139005,6140269,6141516,6142809,6144033,6145271,6146544,6147807,6149036,6150256,6151438,6152666,6153894,6155108,6156350,6157573,6158829,6160071,6161331,6162574,6163848,6165143,6166450,6167984,6169301,6170563,6171858,6173175,6174491,6175797,6177078,6178317,6179609,6180891,6182144,6183610,6185648,6187361,6189130,6190926,6192712,6194495,6196283,6198058,6199813,6201597,6203380,6205100,6206836,6208518,6210245,6211904,6213518,6215165,6216759,6218403,6220062,6221714,6223326,6224984,6226707,6228417,6230137,6231910,6233639,6235439,6237192,6238976,6240716,6242467,6244200,6245825,6247486,6249191,6250828,6252552,6254159,6255813,6257510,6259214,6260927,6262631,6264388,6266108,6267889,6269643,6271399,6273137,6274889,6276630,6278379,6280160,6281901,6283672,6284538,6285955,6287850,6289898,6291946,6293994,6296042,6298090,6300138,6302186,6304234,6306282,6308330,6310378,6312426,6314474,6316522,6318570,6320618,6322666,6324714,6326762,6328810,6330858,6332906,6334954,6337002,6339050,6341098,6343146,6345194,6347242,6349290,6351338,6353386,6355434,6357482,6359538,6361586,6363634,6365682,6367730,6369778,6371826,6373874,6375922,6377970,6380018,6382066,6384114,6386162,6388210,6390258,6392306,6394354,6396402,6398450,6400498,6402546,6404594,6406642,6408690,6410738,6412786,6414834,6416882,6418930,6420978,6423026,6425074,6427122,6429170,6431218,6433266,6435314,6437362,6439410,6441458,6443506,6445554,6447602,6449650,6451698,6453746,6455794,6457842,6459890,6461938,6463986,6466034,6468082,6470130,6472178,6474226,6476274,6478322,6480370,6482418,6484466,6486514,6488562,6490610,6492658,6494706,6496754,6498802,6500850,6502898,6504946,6506994,6509042,6511090,6513138,6515186,6517234,6519282,6521330,6523378,6525426,6527474,6529522,6531570,6533618,6535666,6537714,6539762,6541810,6543858,6545906,6547954,6550002,6552050,6554098,6556146,6558194,6560242,6562290,6564338,6566386,6568434,6570482,6572530,6574578,6576626,6578674,6580722,6582770,6584818,6586866,6588914,6590962,6593010,6595058,6597106,6599154,6601202,6603250,6605298,6607346,6609394,6611442,6613490,6615538,6617586,6619634,6621682,6623730,6625778,6627826,6629874,6631922,6633970,6636018,6638066,6640114,6642162,6644210,6646258,6648306,6650354,6652402,6654450,6656498,6658546,6660594,6662642,6664690,6666738,6668786,6670834,6672882,6674930,6676978,6679026,6681074,6683122,6685170,6687218,6689266,6691314,6693362,6695410,6697458,6699506,6701554,6703602,6705650,6707698,6709746,6711794,6713842,6715890,6717938,6719986,6722034,6724082,6726130,6728178,6730226,6732274,6734322,6736370,6738418,6740466,6742514,6744562,6746610,6748658,6750706,6752754,6754802,6756850,6758898,6760946,6762994,6765042,6767090,6769138,6771186,6773234,6775282,6777330,6779378,6781426,6783474,6785522,6787570,6789618,6791666,6793714,6795762,6797810,6799858,6801906,6803954,6806002,6808050,6810098,6812146,6814194,6816242,6818290,6820338,6822386,6824434,6826482,6828530,6830578,6832626,6834674,6836722,6838770,6840818,6842866,6844914,6846962,6849010,6851058,6853106,6855154,6857202,6859250,6861298,6863346,6865394,6867442,6869490,6871538,6873586,6875634,6877682,6879730,6881778,6883826,6885874,6887922,6889970,6892018,6894066,6896114,6898162,6900210,6902258,6904306,6906354,6908402,6910450,6912498,6914546,6916594,6918642,6920690,6922738,6924786,6926834,6928882,6930930,6932978,6935026,6937074,6939122,6941170,6943218,6945266,6947314,6949362,6951410,6953458,6955506,6957554,6959602,6961650,6963698,6965746,6967794,6969842,6971890,6973938,6975986,6978034,6980082,6982130,6984178,6986226,6988274,6990322,6992370,6994418,6996466,6998514,7000562,7002610,7004658,7006706,7008754,7010802,7012850,7014898,7016946,7018994,7021042,7023090,7025138,7027186,7029234,7031282,7033330,7035378,7037426,7039474,7041522,7043570,7045618,7047666,7049714,7051762,7053810,7055858,7057906,7059954,7062002,7064050,7066098,7068146,7070194,7072242,7074290,7076338,7078386,7080434,7082482,7084530,7086578,7088626,7090674,7092722,7094770,7096818,7098866,7100914,7102962,7105010,7107058,7109106,7111154,7113202,7115250,7117298,7119346,7121394,7123442,7125490,7127538,7129586,7131634,7133682,7135730,7137778,7139826,7141874,7143922,7145970,7148018,7150066,7152114,7154162,7156210,7158258,7160306,7162354,7164402,7166450,7168498,7170546,7172594,7174642,7176690,7178738,7180786,7182834,7184882,7186930,7188978,7191026,7193074,7195122,7197170,7199218,7201266,7203314,7205362,7207410,7209458,7211506,7213554,7215602,7217650,7219698,7221746,7222762,7223394,7223965,7224577,7225199,7225819,7226430,7227034,7227627,7228189,7228816,7229522,7230942,7231447,7231998,7232643,7233235,7233678,7234061,7234475,7235542,7237181,7238763,7239816,7240828,7242207,7243506,7244562,7246085,7247269,7248365,7250082,7251581,7252482,7253382,7254517,7254868,7255320,7255799,7256295,7256802,7257235,7257737,7258092,7258449,7258700,7258982,7259294,7260268,7262312,7263884,7265702,7267199,7268925,7270247,7271359,7272489,7273448,7274658,7275811,7276835,7278003,7278891,7280022,7281136,7281673,7282859,7284078,7285160,7286226,7287451,7288304,7289524,7290417,7291355,7292541,7293501,7294670,7295311,7296342,7297258,7298240,7299505,7300377,7301499,7302428,7303580,7304641,7305753,7307070,7308056,7309118,7310217,7311198,7312255,7312984,7314053,7314369,7314684,7315173,7316339,7317299,7318282,7319163,7320815,7321748,7323595,7324533,7325872,7327466,7329222,7330708,7332192,7333780,7335377,7336975,7338609,7340206,7341886,7343507,7345114,7346776,7348459,7350084,7351710,7353350,7354966,7356582,7358237,7359969,7361678,7363384,7365153,7366903,7368673,7370345,7372060,7373812,7375602,7377404,7379218,7381113,7383012,7384899,7386784,7388673,7390552,7392318,7394125,7395941,7397743,7399569,7401357,7403167,7404973,7406771,7408467,7410015,7411600,7413236,7414813,7416358,7417786,7419337,7420938,7422579,7424247,7426080,7427950,7429396,7430810,7432289,7433857,7435313,7436820,7438355,7439784,7441245,7442786,7444410,7445875,7447356,7448997,7450675,7452334,7454062,7455852,7457512,7459236,7460895,7462452,7464028,7465513,7467106,7468733,7470309,7471888,7473512,7475130,7476705,7478258,7479806,7481446,7483076,7484693,7486324,7487919,7489462,7491006,7492615,7494264,7495890,7497372,7498567,7499927,7501421,7502882,7504251,7505679,7507168,7508745,7510364,7511946,7513363,7514775,7516379,7518361,7518888,7519472,7520098,7520675,7521352,7522092,7522794,7523692,7524684,7525670,7526779,7527755,7528989,7530238,7531508,7532802,7534078,7535441,7536866,7538221,7539701,7541113,7542538,7543915,7545414,7546950,7548375,7549813,7551242,7552452,7553470,7554499,7555375,7556633,7557921,7559163,7560352,7561407,7562399,7563367,7564418,7565420,7566221,7567185,7568178,7569040,7569717,7570531,7571456,7572213,7572615,7573372,7574079,7574700,7575424,7576016,7576627,7578491,7579445,7580195,7581010,7581903,7582861,7583936,7585031,7586159,7587270,7588406,7589465,7590364,7591186,7591897,7593062,7594394,7595762,7597201,7598658,7600166,7601657,7603186,7604461,7606016,7607576,7609185,7610689,7612248,7613871,7615594,7617304,7618935,7620421,7621945,7623482,7625070,7626566,7628060,7629472,7630734,7632018,7633209,7634225,7635200,7636246,7637287,7638419,7639497,7640657,7641863,7643087,7644158,7645107,7645892,7646682,7647454,7648264,7649161,7650395,7652037,7654094,7656142,7658190,7660238,7662286,7664334,7666382,7668430,7670478,7672526,7674574,7676622,7678670,7680718,7682766,7684814,7686862,7688910,7690958,7693006,7695054,7697102,7699150,7701198,7703246,7705294,7707342,7709390,7711438,7713486,7715534,7717582,7719630,7721686,7723743,7725791,7727839,7729887,7731935,7733983,7736031,7738079,7740127,7742175,7744223,7746271,7748319,7750367,7752415,7754463,7756511,7758559,7760607,7762655,7764703,7766751,7768799,7770847,7772895,7774943,7776991,7779039,7781087,7783144,7785192,7787240,7789297,7791345,7793393,7795441,7797489,7799513,7801561,7803609,7805657,7807705,7809753,7811801,7813849,7815897,7817945,7819993,7822041,7824089,7826137,7828185,7830233,7832281,7834329,7836377,7838425,7840473,7842521,7844569,7846617,7848673,7850721,7852769,7854817,7856865,7858913,7860961,7863009,7865057,7867105,7869153,7871201,7873249,7875297,7877345,7879192,7880494,7881779,7882931,7883736,7884223,7884637,7885857,7886680,7887749,7888830,7889883,7890707,7891460,7892970,7894553,7895901,7897329,7898681,7900044,7901414,7902517,7903675,7904849,7905925,7907344,7908693,7910018,7911344,7912573,7913783,7914948,7916129,7917309,7918683,7920123,7921538,7922903,7924216,7925431,7926665,7928089,7929571,7931198,7932806,7934379,7935948,7937544,7939094,7940635,7942190,7943669,7945188,7946651,7948078,7949464,7950838,7952206,7954241,7956289,7958337,7960385,7962433,7964481,7966533,7968417,7970465,7972513,7974561,7976609,7978657,7980705,7982753,7984801,7986849,7988897,7990945,7992993,7995041,7997089,7999137,8001185,8003233,8005281,8007329,8009377,8011425,8013473,8015526,8017574,8019626,8021664,8023705,8025740,8027789,8029677,8031734,8033782,8035830,8037878,8039926,8041974,8044022,8046070,8048118,8050166,8052214,8054262,8056310,8058358,8060406,8062454,8064502,8066550,8068598,8070646,8072694,8074742,8076790,8078838,8080886,8082934,8084982,8087030,8089078,8091126,8093174,8095222,8097270,8099318,8101366,8103414,8105462,8107510,8109558,8111606,8113654,8115702,8117750,8119798,8121846,8123894,8125942,8127990,8130038,8132086,8134134,8136182,8138230,8140278,8142326,8144374,8146422,8148470,8150518,8152566,8154614,8156662,8158710,8160758,8162806,8164854,8166902,8168950,8170998,8173046,8175094,8177142,8179190,8181238,8183286,8185334,8187382,8189430,8191478,8193526,8195574,8197622,8199352,8200704,8202135,8203566,8204971,8206377,8207783,8209268,8210720,8212354,8214048,8215606,8217027,8218482,8219817,8221255,8222912,8224644,8226403,8228089,8229723,8231256,8232707,8234206,8235837,8237479,8239139,8240768,8242387,8243950,8245452,8246994,8248835,8250884,8252932,8254973,8257007,8259038,8261075,8263123,8265144,8267177,8269225,8271229,8273277,8275305,8277322,8279370,8281410,8283461,8285509,8287548,8289586,8291584,8293461,8295509,8297548,8299593,8301230,8302630,8304238,8305836,8307444,8309012,8310031,8310244,8310481,8310694,8310922,8311135,8311859,8312079,8312328,8312548,8312778,8312996,8313569,8315438,8316813,8318064,8319397,8320641,8321802,8322926,8324165,8325329,8326605,8327787,8328974,8330170,8331295,8333017,8335065,8336059,8336774,8338699,8340437,8341179,8342307,8344355,8345920,8346537,8348131,8350179,8351102,8351857,8352804,8353778,8354695,8355649,8356479,8357458,8358449,8359014,8360001,8360779,8361517,8362539,8363257,8364250,8365360,8366359,8367278,8368119,8369041,8369943,8371140,8372069,8373154,8374066,8374900,8376098,8377026,8378100,8379398,8380121,8380857,8381264,8381722,8382799,8383750,8384628,8385495,8386013,8386362,8386713,8387132,8387507,8387894,8388439,8388977,8390206,8391342,8392333,8393449,8394814,8396276,8397852,8399310,8400649,8401869,8403081,8404532,8405954,8407251,8408505,8409651,8411116,8412600,8414128,8415671,8416792,8417959,8419116,8420396,8421891,8423335,8424918,8426447,8427541,8428754,8429929,8431285,8432749,8434219,8435831,8437208,8438278,8439409,8440617,8442135,8443573,8445134,8446675,8447765,8448854,8450025,8451356,8452850,8454392,8455890,8457196,8458381,8459570,8460899,8462296,8463675,8464704,8465288,8465856,8466462,8467067,8467692,8468325,8468911,8469504,8470593,8471549,8472438,8473056,8474064,8474905,8475725,8476429,8477349,8478192,8479056,8479567,8480199,8480964,8481602,8482274,8483106,8483855,8484679,8485405,8486282,8486820,8487606,8488152,8488713,8489407,8490061,8490929,8491488,8492433,8492973,8493452,8494074,8494833,8495545,8496066,8496489,8497143,8497570,8498020,8498688,8499189,8499927,8500765,8501206,8501768,8502569,8503461,8504530,8505289,8505864,8506386,8506946,8507586,8508313,8508902,8509913,8510593,8511211,8511851,8512499,8513605,8514598,8515734,8516658,8517161,8518026,8518817,8519376,8520009,8520668,8521511,8522262,8522613,8522961,8523584,8524283,8525041,8525940,8526645,8527728,8528418,8529305,8530092,8530901,8531800,8532678,8533481,8534405,8535279,8536139,8536972,8537822,8538853,8539280,8540120,8541048,8541909,8542739,8543686,8544403,8545350,8546306,8547279,8548256,8549225,8550178,8551120,8552070,8553028,8553999,8554965,8555929,8556882,8557844,8558799,8559672,8560808,8561626,8562443,8563182,8564010,8564911,8565738,8566547,8567392,8568125,8568904,8569780,8570620,8571505,8572295,8573115,8573758,8574596,8575198,8575876,8576540,8577941,8578666,8579422,8581009,8582762,8584605,8586372,8588381,8590249,8592297,8594345,8596402,8598151,8599505,8601192,8602959,8605009,8607056,8608923,8610729,8612777,8614652,8616407,8618459,8620507,8622555,8624529,8626367,8628303,8630226,8632027,8634031,8636037,8637842,8639762,8641076,8642247,8642849,8643495,8643988,8645816,8647873,8649805,8651377,8652777,8653998,8655122,8656428,8658439,8660285,8661521,8662775,8663840,8664946,8666637,8668100,8669494,8670527,8671035,8671177,8671626,8673633,8675681,8677729,8679777,8681825,8683873,8685921,8687969,8690017,8692065,8694113,8696164,8698212,8700239,8702171,8703547,8705595,8707643,8709691,8711739,8713796,8715844,8717892,8719946,8720568,8720659,8722690,8724716,8726764,8728821,8730800,8732179,8734099,8736100,8738134,8740047,8742047,8744095,8746143,8748191,8750239,8752264,8754125,8756173,8758195,8760113,8762170,8764191,8766232,8768280,8770331,8772381,8774433,8776453,8778280,8779738,8781467,8783354,8785402,8787450,8789498,8791546,8793594,8795642,8797690,8799738,8801606,8803647,8804749,8805741,8806933,8808190,8809458,8810701,8812374,8813857,8814854,8816366,8817531,8818857,8819907,8821013,8822086,8823049,8824204,8825569,8827268,8829123,8831028,8832926,8834829,8836719,8838212,8839952,8841660,8843144,8844909,8846398,8847551,8848525,8849643,8850835,8852493,8853660,8854685,8855709,8856863,8858127,8859130,8860202,8861513,8862704,8864042,8865086,8866994,8869025,8871073,8873048,8875083,8877062,8879110,8881057,8883113,8885140,8887116,8889164,8891123,8893171,8895198,8897170,8899218,8901248,8903220,8905251,8907273,8909313,8911347,8913317,8915361,8917418,8919389,8921437,8923485,8925464,8927512,8929560,8931530,8933578,8935626,8937611,8939645,8941702,8943670,8945715,8947740,8949775,8951814,8953786,8955834,8957860,8959889,8961937,8963985,8966040,8968012,8970068,8972124,8974172,8976229,8978277,8980325,8982373,8984421,8986429,8988464,8990512,8992560,8994608,8996656,8998704,9000752,9002800,9004848,9006896,9008787,9010835,9012883,9014931,9016979,9019027,9021075,9023123,9025171,9027069,9029117,9031165,9033213,9035261,9037309,9039357,9041405,9043299,9045347,9047395,9049443,9051491,9053539,9055587,9057486,9059534,9061582,9063630,9065678,9067726,9069774,9071791,9073748,9075796,9077844,9079892,9081940,9083988,9086036,9088084,9089980,9092028,9094076,9096124,9098172,9100220,9102268,9104316,9106364,9108412,9110047,9111868,9113521,9115180,9117020,9118221,9119211,9121133,9123154,9125205,9127253,9129250,9131233,9133283,9135131,9137102,9139100,9141131,9143096,9145116,9147148,9148480,9149878,9151311,9152854,9154181,9156114,9157273,9158442,9159580,9160438,9161983,9163486,9164982,9166469,9167889,9168528,9169227,9169920,9170645,9171367,9172041,9172703,9173293,9173800,9174370,9174900,9176252,9178106,9179789,9181486,9183184,9184882,9186796,9188520,9190266,9192028,9193211,9194199,9196026,9197686,9199227,9200709,9202200,9203013,9203532,9203814,9204247,9204664,9205121,9205389,9205993,9207736,9209433,9211115,9212813,9214642,9216422,9218225,9219734,9221215,9222833,9224306,9225784,9227301,9227841,9228333,9228833,9229346,9229766,9230136,9230642,9231149,9231627,9232739,9234572,9236245,9237915,9239588,9241339,9243177,9244974,9246704,9247924,9249572,9251243,9252721,9254193,9255683,9257172,9258006,9258648,9259297,9259875,9260410,9260930,9261517,9262005,9262622,9263128,9263686,9264112,9264502,9265508,9267459,9269157,9270833,9272519,9274195,9275893,9277752,9279607,9281318,9282999,9284768,9285885,9287297,9288966,9290677,9292165,9293644,9295127,9296257,9296842,9297432,9298037,9298596,9299169,9299787,9300363,9300913,9301486,9302027,9302588,9304019,9305870,9307543,9309214,9310878,9312564,9314307,9316187,9317898,9319602,9321300,9322436,9323500,9325254,9326914,9328429,9329924,9331411,9332726,9333298,9333874,9334428,9334908,9335345,9335922,9336501,9337097,9337574,9337935,9338428,9339692,9341484,9343172,9344856,9346526,9348181,9350059,9351774,9353517,9355210,9356646,9357491,9359366,9361030,9362544,9364024,9365178,9365545,9366062,9366477,9366881,9367389,9367902,9368371,9369089,9370916,9372564,9374260,9375924,9377784,9379463,9381149,9382623,9383982,9385553,9387056,9388535,9389989,9391479,9392967,9394336,9394997,9395627,9396123,9396705,9397411,9397898,9398552,9399228,9399803,9400396,9401128,9401839,9402445,9403201,9403882,9404478,9405137,9405748,9406353,9406832,9407762,9409760,9411485,9413154,9414869,9416544,9418204,9419897,9421610,9423321,9425010,9426908,9428719,9430469,9432191,9433867,9435684,9437508,9439294,9440176,9440878,9441817,9443636,9445474,9447121,9448939,9450505,9451981,9453447,9454915,9456377,9457203,9457641,9458080,9458614,9459220,9459837,9460442,9461034,9461520,9461980,9462584,9463078,9463620,9464211,9465130,9467145,9468836,9470531,9472210,9473896,9475586,9477261,9479184,9480910,9482674,9484470,9486251,9487636,9488304,9489594,9491557,9493245,9494948,9496487,9497970,9499465,9500930,9502385,9502999,9503657,9504325,9504955,9505574,9506121,9506593,9507164,9507842,9508451,9508875,9509397,9509873,9510394,9510869,9512747,9514546,9516229,9517914,9519613,9521315,9523020,9524774,9526711,9528404,9530111,9531904,9533720,9535236,9536010,9537550,9539413,9541185,9542747,9544234,9545733,9547214,9548609,9549182,9549732,9550368,9550982,9551619,9552186,9552718,9552979,9553219,9553400,9553632,9553866,9554097,9555693,9557655,9559383,9561065,9562773,9564490,9566214,9567919,9569947,9571725,9573462,9575253,9577038,9578786,9579784,9581466,9583087,9584662,9586120,9587158,9587851,9588459,9589140,9589792,9591465,9593153,9594921,9596651,9597903,9599491,9600949,9602423,9603602,9604156,9604729,9605276,9605779,9606235,9606724,9607153,9607666,9608833,9610626,9612287,9613968,9615621,9617485,9619170,9620852,9621740,9623398,9625083,9626542,9628013,9629478,9630784,9631353,9631950,9632583,9633115,9633682,9634249,9634817,9635156,9635744,9636322,9636892,9638699,9640385,9642064,9643744,9645428,9647114,9648986,9650675,9652431,9654151,9654859,9656427,9658252,9659813,9661281,9662739,9663941,9664510,9665109,9665442,9665931,9666458,9666906,9667213,9667508,9667922,9668477,9670324,9672013,9673706,9675374,9677004,9678700,9680524,9682248,9683913,9685382,9686198,9688052,9689736,9691198,9692644,9694075,9694965,9695242,9695609,9695939,9696359,9696806,9697258,9697578,9697883,9698314,9698727,9699121,9700843,9702495,9704125,9705769,9707443,9709089,9710931,9712664,9714294,9715886,9717069,9718756,9720295,9721781,9723282,9723839,9724307,9724807,9725373,9725956,9726590,9727194,9727830,9728312,9729711,9731446,9733120,9734776,9736458,9738328,9740003,9741699,9743429,9744212,9746045,9747674,9749136,9750617,9752104,9753488,9754044,9754545,9755120,9755653,9756263,9756851,9757479,9757895,9758340,9758890,9759338,9759819,9760292,9762231,9763947,9765619,9767295,9768966,9770645,9772316,9774269,9775934,9777576,9779308,9780956,9781736,9783292,9785057,9786779,9788196,9789680,9791171,9792636,9794123,9795622,9797117,9798606,9800086,9800964,9801618,9802365,9803025,9803577,9804223,9804773,9805502,9806038,9806660,9807140,9807788,9808473,9809084,9809735,9810365,9810963,9811589,9811947,9812634,9813293,9813978,9814493,9814916,9815467,9816023,9816282,9816555,9817307,9819352,9821387,9823125,9824858,9826572,9828258,9829966,9831630,9833325,9835018,9836688,9838354,9840062,9841751,9843778,9845687,9847355,9849087,9850744,9852409,9854109,9855812,9857495,9859172,9860671,9861420,9862254,9863752,9865650,9867470,9868005,9868736,9869686,9870029,9871706,9873362,9875036,9876521,9878030,9879531,9881044,9882549,9884057,9885545,9887023,9888515,9889989,9890977,9891664,9892476,9893149,9893802,9894561,9895215,9895920,9896677,9897344,9897924,9898632,9899320,9899911,9900582,9901243,9902039,9902694,9903343,9903937,9904400,9904950,9905479,9905819,9906093,9906455,9906954,9907509,9907916,9908246,9908490,9908636,9909889,9911946,9913894,9915689,9917384,9919077,9920787,9922460,9924145,9925839,9927557,9929201,9930882,9932550,9934215,9935909,9937612,9939506,9941554,9943348,9945085,9946798,9948512,9950240,9951888,9953571,9955222,9956866,9958587,9960321,9961660,9962573,9963619,9965444,9967322,9968978,9970760,9972544,9974136,9975626,9977105,9978587,9980075,9980560,9981102,9981634,9982181,9982664,9983193,9983640,9984127,9984544,9985083,9985166,9985779,9986373,9987503,9989427,9991086,9992778,9994449,9996136,9997836,9999720,10001422,10003156,10004831,10006547,10007765,10008973,10010737,10012474,10013914,10015372,10016833,10018312,10019819,10021319,10022797,10024264,10025655,10026246,10026850,10027495,10028104,10028637,10029259,10029924,10030613,10031322,10031928,10032424,10033140,10033765,10034443,10035017,10035725,10036301,10036775,10037362,10037968,10038541,10038958,10039453,10040024,10041398,10043423,10045248,10046941,10048609,10050293,10051989,10053685,10055395,10057086,10058744,10060447,10062254,10064282,10065992,10067649,10069311,10071001,10072725,10074446,10076191,10077775,10078629,10079781,10081607,10083251,10084764,10086407,10088044,10089564,10091033,10092504,10093986,10095474,10096970,10097595,10098117,10098586,10099140,10099859,10100457,10101155,10101729,10102412,10103093,10103664,10104126,10104729,10105459,10106160,10106567,10106967,10108533,10110488,10112160,10113823,10115484,10117160,10118875,10120565,10122237,10124165,10125943,10127638,10129339,10131154,10132910,10134653,10135722,10137275,10139022,10140861,10142432,10143915,10145417,10146895,10148404,10149890,10151376,10152860,10154358,10155861,10157374,10158879,10160374,10161104,10161765,10162471,10163025,10163677,10164313,10164804,10165438,10166088,10166723,10167325,10167909,10168508,10169096,10169649,10170219,10170815,10171314,10171831,10172417,10173029,10173402,10174017,10174626,10175245,10175805,10176343,10176828,10177449,10178016,10178552,10179117,10179702,10180187,10180764,10181162,10181659,10182200,10182656,10183267,10184641,10186686,10188725,10190688,10192396,10194118,10195827,10197530,10199255,10200939,10202652,10204359,10206080,10207790,10209520,10211217,10212935,10214629,10216343,10218059,10219765,10221714,10223762,10225586,10227263,10229005,10230715,10232416,10234117,10235852,10237577,10239243,10240990,10242727,10244509,10245978,10246899,10247815,10248669,10249664,10251361,10253025,10254656,10256240,10257813,10259365,10260756,10261857,10262512,10264245,10266016,10267792,10269443,10270920,10272398,10273882,10275368,10276622,10277310,10277979,10278571,10279086,10279530,10279892,10280273,10280753,10280987,10281459,10281977,10282362,10283219,10285190,10286875,10288562,10290239,10291924,10293592,10295280,10297226,10298957,10300710,10302436,10304150,10305068,10306766,10308529,10310051,10311511,10312993,10313848,10314273,10314812,10315200,10315590,10315873,10316303,10316628,10317462,10319298,10320970,10322646,10324319,10326201,10327933,10329659,10331174,10332616,10334244,10335706,10337183,10338645,10340112,10341091,10341658,10342259,10342871,10343494,10344021,10344559,10345157,10345791,10346117,10346607,10347023,10347541,10347855,10349379,10351207,10352856,10354517,10356188,10357842,10359527,10361220,10363101,10364794,10366493,10368191,10369426,10369878,10370994,10372369,10373745,10375358,10376873,10378359,10379686,10380080,10380262,10380707,10381039,10381383,10381647,10381894,10382330,10384153,10385800,10387448,10389101,10390899,10392544,10394077,10395054,10396601,10398090,10399539,10400975,10401543,10402133,10402512,10402992,10403518,10403968,10404888,10406667,10408333,10409996,10411823,10413565,10414652,10416299,10417793,10419284,10420750,10422230,10423685,10425159,10426643,10427470,10428083,10428737,10429397,10429987,10430475,10430997,10431568,10432177,10432490,10433064,10433543,10434106,10434562,10435037,10435421,10435776,10436291,10436551,10437561,10439481,10441280,10442937,10444622,10446314,10448012,10449694,10451351,10453021,10454685,10456726,10458438,10460168,10461932,10463664,10465329,10466990,10468018,10468860,10470376,10471954,10473453,10475119,10476785,10478284,10479768,10481252,10482736,10483429,10483890,10484268,10484801,10485243,10485683,10485995,10486477,10486972,10487449,10487874,10488227,10488569,10489178,10491097,10492773,10494433,10496094,10497760,10499414,10501085,10503044,10504684,10506383,10508063,10509620,10510253,10511363,10512915,10514600,10516126,10517607,10518844,10519363,10519909,10520240,10520412,10521001,10521317,10522013,10523773,10525483,10527177,10529019,10530814,10532554,10533614,10535294,10537329,10539386,10541439,10543490,10545540,10547195,10548809,10550336,10551706,10552665,10553469,10554310,10555067,10555920,10556784,10558267,10560273,10562281,10564185,10566142,10567683,10568807,10570142,10571392,10572834,10574078,10574964,10576315,10577049,10577898,10579023,10580195,10581201,10582283,10583256,10584357,10585398,10586376,10587293,10588385,10589506,10590595,10591624,10592433,10593399,10594390,10595285,10596201,10597116,10597978,10598976,10599885,10600847,10601878,10602904,10603848,10604935,10605958,10606912,10607800,10608648,10609572,10610573,10611439,10612447,10613388,10614321,10615275,10616160,10617164,10618213,10619191,10620254,10621107,10622111,10623167,10624223,10625272,10626283,10627283,10628381,10629484,10630585,10631784,10632880,10633994,10635105,10636226,10637322,10638467,10639605,10640801,10641845,10642952,10643922,10644562,10645634,10646816,10647894,10648881,10649980,10651168,10652293,10653302,10654419,10655450,10656476,10657532,10658561,10659828,10660951,10662015,10663046,10664149,10665299,10666382,10667587,10668676,10669860,10670975,10672038,10673154,10674331,10675483,10676668,10677768,10678968,10680183,10681307,10682378,10683593,10684715,10686138,10688186,10689636,10690720,10691782,10692743,10693695,10694675,10695782,10696813,10697816,10698693,10699905,10701051,10701870,10702941,10703950,10704962,10705972,10706665,10707495,10708255,10709099,10710124,10711551,10713014,10714499,10715975,10717945,10719993,10722041,10723963,10725365,10727411,10729461,10731509,10733557,10735569,10737349,10739405,10741084,10742999,10745051,10747099,10749147,10751195,10753243,10755291,10757339,10759387,10761407,10763442,10765475,10767520,10769567,10771573,10773523,10775370,10777073,10779002,10781050,10783098,10785146,10787194,10789242,10791290,10793338,10795394,10797442,10799490,10801538,10803545,10805500,10807330,10809151,10810609,10812234,10814169,10816076,10817886,10819770,10821818,10823868,10825924,10827972,10830020,10832068,10834116,10836164,10838212,10840260,10842308,10844356,10846404,10848452,10850460,10852051,10853044,10855049,10857097,10859145,10861193,10863241,10865289,10867337,10869385,10871433,10873481,10875529,10877577,10879625,10881673,10883721,10885769,10887817,10889874,10891922,10893969,10895684,10897577,10899625,10901673,10903721,10905617,10907228,10908612,10909843,10910885,10911605,10912109,10913884,10915932,10917980,10920037,10922092,10924140,10926197,10928245,10930302,10932354,10934247,10935720,10936554,10938492,10940549,10942572,10944556,10946416,10948136,10949660,10950896,10951803,10952425,10952718,10952869,10954750,10956798,10958846,10960899,10962951,10965008,10967064,10969112,10971169,10973217,10975273,10977324,10979363,10981385,10983217,10984844,10986352,10987618,10989647,10991703,10993751,10995799,10997847,10999895,11001943,11003991,11006039,11008096,11010151,11012195,11014217,11016157,11017889,11019399,11020457,11021527,11023321,11025193,11027190,11029238,11031294,11033349,11035320,11037028,11038364,11039202,11041256,11043304,11045352,11047288,11049182,11051239,11053287,11055126,11055835,11055885,11056107,11056140,11056703,11058751,11060799,11062847,11064903,11066959,11069015,11071069,11073122,11075050,11077082,11079130,11081178,11083226,11085235,11087283,11089331,11091379,11093427,11095475,11097523,11099571,11101628,11103676,11105643,11107163,11109158,11111150,11112686,11114287,11116335,11118350,11119977,11121316,11122801,11124650,11126677,11128734,11130791,11132839,11134887,11136918,11138816,11140292,11140761,11141609,11143665,11145713,11147769,11149825,11151876,11153931,11155979,11158027,11160084,11162132,11164144,11166016,11167855,11169815,11171405,11173352,11175409,11177457,11179505,11181553,11183610,11185658,11187706,11189757,11191668,11193716,11195764,11197812,11199869,11201917,11203965,11206013,11208050,11209691,11211690,11213650,11215581,11216606,11218655,11220703,11222751,11224656,11226315,11228363,11230411,11232459,11234516,11236570,11238618,11240666,11242714,11244771,11246639,11248011,11249572,11251503,11253475,11255503,11257536,11259591,11261616,11263640,11265683,11267734,11269787,11271819,11273840,11275860,11277857,11279845,11281822,11283872,11285929,11287977,11290015,11292051,11294076,11296113,11298159,11300196,11302241,11304279,11306307,11308218,11310038,11311652,11313086,11314399,11315575,11316769,11317975,11319028,11320046,11321177,11322155,11323180,11324100,11324994,11325857,11326668,11327318,11327941,11328405,11328596,11328781,11328922,11328981,11329044,11330745,11332769,11334820,11336868,11338916,11340855,11342603,11344280,11345536,11346288,11348336,11350384,11352432,11354480,11356389,11358437,11360485,11362533,11364495,11366543,11368591,11370639,11372687,11374697,11376745,11378793,11380841,11382893,11384923,11386971,11389019,11391070,11393105,11395153,11397209,11399188,11401115,11402957,11404662,11406420,11408087,11409948,11412002,11414050,11416100,11418150,11420198,11422251,11424142,11426039,11428090,11430145,11432202,11434259,11436315,11438363,11440416,11442328,11444385,11446429,11448381,11450006,11451809,11453857,11455910,11457523,11459280,11461328,11463385,11465433,11467481,11469529,11471577,11473631,11475686,11477719,11479678,11481390,11482866,11484350,11485624,11486840,11488253,11490301,11492349,11494397,11496445,11498485,11500399,11502148,11503306,11503606,11504558,11506017,11507705,11509586,11511532,11513438,11515371,11517370,11519318,11521085,11522668,11524026,11525169,11525818,11526213,11527672,11529683,11531725,11533279,11534303,11535886,11537934,11539982,11542030,11544078,11546126,11548174,11550222,11552270,11554204,11556245,11558295,11560160,11561708,11562770,11564128,11566176,11568074,11569528,11571144,11573192,11575240,11577293,11579349,11581397,11583447,11585504,11587561,11589492,11591398,11593007,11595042,11596784,11597978,11599034,11601088,11603136,11605184,11607232,11609280,11611328,11613379,11615283,11617141,11619197,11621245,11623293,11625341,11627389,11629446,11631406,11632495,11633874,11635723,11637747,11639802,11641857,11643903,11645312,11646862,11648805,11650758,11652806,11654854,11656902,11658953,11660983,11662869,11664206,11665288,11666083,11666586,11667007,11667255,11667367,11669048,11671096,11673144,11675192,11677240,11679288,11681336,11683384,11685432,11687480,11689528,11691576,11693624,11695672,11697720,11699768,11701816,11703873,11705198,11707249,11709297,11711345,11713393,11715441,11717489,11719537,11721594,11722803,11723040,11724311,11725995,11727939,11729991,11732039,11734087,11736144,11738192,11740240,11742288,11744336,11746384,11748436,11750345,11751991,11753499,11754893,11756082,11757183,11758186,11759098,11759844,11760650,11761621,11762530,11763312,11764877,11766917,11768965,11771013,11773061,11775109,11777157,11779205,11781253,11783301,11785349,11787397,11789445,11791493,11793420,11794711,11795484,11796138,11797570,11799626,11801674,11803722,11805770,11807315,11808987,11811042,11812823,11814144,11815195,11815770,11816569,11817513,11819570,11821511,11822776,11823249,11825032,11826990,11828980,11831032,11833080,11835128,11837179,11839212,11841243,11842759,11844562,11846352,11848292,11850268,11852324,11854380,11856428,11858476,11860524,11862572,11864629,11866680,11868699,11870468,11871975,11872908,11873589,11875102,11877147,11879195,11881243,11883291,11885339,11887387,11889435,11891483,11893537,11895521,11897285,11898748,11899864,11900849,11901057,11901403,11903436,11905473,11907442,11909371,11911168,11912870,11914591,11916648,11918690,11920490,11922064,11923340,11925107,11926862,11928873,11930921,11932837,11934885,11935881,11937929,11939628,11941482,11943359,11945416,11947091,11949004,11950414,11951871,11952994,11954570,11956571,11958602,11960590,11962539,11964499,11966506,11968417,11970465,11972513,11974548,11976314,11977346,11978583,11980631,11982679,11984727,11986775,11988823,11990120,11991129,11993177,11995225,11997280,11999328,12000870,12001252,12003046,12005103,12007153,12009201,12011258,12013311,12015359,12017309,12019359,12021407,12022900,12024934,12026982,12028730,12030778,12032826,12034439,12036464,12038512,12039968,12041279,12043172,12044754,12045450,12047492,12049540,12051597,12053653,12055054,12055178,12055302,12056606,12058644,12060701,12062749,12064806,12066862,12068919,12070973,12072882,12074930,12076978,12078925,12080972,12083028,12084980,12087028,12089051,12091099,12093149,12095193,12097212,12099130,12100959,12102739,12104540,12106096,12107844,12109034,12110690,12112403,12113964,12115286,12116573,12118601,12120524,12122415,12124346,12126394,12128442,12130490,12132517,12134022,12135055,12135760,12137140,12139051,12140367,12141948,12143767,12145815,12147863,12149911,12151959,12154007,12156055,12158103,12160151,12162199,12164239,12166216,12168003,12169580,12170988,12172171,12173067,12174350,12176398,12178446,12180502,12182550,12184598,12186204,12186869,12188853,12190901,12192954,12194966,12196844,12198877,12200933,12202988,12205036,12207092,12209140,12211196,12213244,12215211,12217012,12218456,12219250,12220152,12222200,12224248,12226296,12228344,12229776,12229987,12230934,12232974,12235031,12237079,12239127,12241175,12243223,12245271,12247319,12249250,12250832,12251086,12251612,12253005,12254954,12257009,12259057,12261105,12263153,12265201,12267249,12269297,12271345,12273393,12275441,12277460,12279353,12281127,12282905,12284640,12286201,12287616,12288889,12290124,12291349,12292405,12293213,12293748,12294300,12294819,12295307,12295774,12296188,12296577,12297006,12297495,12297916,12298473,12299002,12299225,12299610,12300454,12301620,12302812,12304019,12305171,12306259,12307181,12308047,12308784,12309277,12309550,12309698,12309857,12310860,12312514,12314371,12316424,12318481,12320529,12322548,12324505,12326515,12328346,12330339,12332098,12334118,12336078,12337784,12339328,12341379,12343432,12345486,12347495,12349537,12351580,12353615,12355668,12357680,12359674,12361678,12363717,12365599,12367583,12369638,12371686,12373730,12375433,12377261,12379283,12381047,12382915,12384971,12386745,12388019,12389655,12391693,12393744,12395748,12397634,12399547,12401475,12403347,12405274,12407278,12409326,12411380,12413435,12415275,12417323,12419357,12421000,12422524,12424119,12425484,12426618,12427061,12427653,12428047,12428502,12429240,12429906,12430980,12432591,12433964,12435393,12436746,12438016,12439445,12441125,12442838,12444627,12446422,12448358,12450349,12452368,12454414,12456462,12458515,12460563,12462618,12464666,12466714,12468770,12470812,12472803,12474774,12476774,12478763,12480671,12482438,12484173,12485898,12487581,12489255,12490780,12492219,12493691,12495112,12496550,12497892,12499143,12500344,12501519,12502701,12503850,12504901,12505882,12506833,12507755,12509270,12510712,12512207,12513726,12515167,12516603,12518154,12519709,12521207,12522755,12524232,12525805,12527420,12529138,12530699,12532322,12533851,12535363,12536958,12538652,12540387,12542189,12543970,12545690,12547497,12549366,12551273,12553128,12555115,12557064,12559020,12561072,12563116,12565173,12567221,12569276,12571329,12573377,12575395,12577344,12579095,12580717,12581849,12583151,12584952,12586935,12588983,12591037,12593094,12594573,12594784,12595696,12597744,12599792,12601849,12603235,12605283,12606440,12608384,12610437,12612095,12613556,12615612,12617660,12619708,12621765,12623356,12625404,12627400,12628974,12630212,12632260,12634308,12636356,12638404,12640452,12642500,12644497,12646517,12648565,12650621,12652669,12654717,12656765,12658813,12660861,12662909,12664957,12667005,12669053,12671047,12673103,12675160,12677208,12679256,12681313,12683316,12685289,12687289,12689339,12691387,12693435,12695472,12697520,12699568,12701616,12703664,12705712,12707766,12709560,12710815,12712872,12714922,12716979,12719034,12721082,12723128,12725185,12727118,12729035,12730907,12732447,12734080,12735534,12737233,12739067,12740680,12742129,12743522,12744657,12745584,12745986,12747385,12749433,12751481,12753529,12755577,12757561,12759247,12760431,12760658,12761485,12763509,12765557,12767528,12769184,12770595,12772328,12774181,12775355,12775555,12776206,12777178,12777556,12777948,12778290,12778660,12779080,12779482,12779860,12780155,12780979,12781858,12782711,12783482,12783992,12784500,12784989,12785432,12786113,12786583,12787243,12788061,12788529,12789136,12789741,12790548,12791554,12791785,12792246,12792834,12793172,12793626,12794665,12795311,12796027,12796509,12796905,12797785,12798513,12799401,12800081,12800958,12801955,12802785,12803868,12804881,12806167,12807398,12807772,12808191,12808668,12808855,12809186,12809569,12809838,12810382,12811003,12811620,12811830,12812124,12812426,12812742,12812877,12813088,12813419,12813612,12813898,12814212,12814483,12814844,12815125,12815341,12815445,12815626,12815824,12815949,12816152,12816961,12817610,12818039,12818442,12819141,12819909,12820810,12821485,12822405,12823492,12824314,12825064,12825883,12826240,12826698,12827006,12827341,12827698,12827936,12828345,12828940,12829321,12829629,12830142,12831166,12831755,12832965,12833621,12834283,12835057,12835955,12836394,12836863,12837493,12837867,12838621,12840370,12842026,12843035,12844230,12845628,12847059,12848548,12849407,12850459,12851433,12852230,12853131,12854379,12854842,12856023,12856856,12857921,12858530,12859581,12859871,12860377,12860953,12861258,12862044,12862418,12862931,12863746,12864500,12865032,12865657,12866192,12866604,12867215,12868426,12869753,12870686,12871534,12872462,12873768,12874703,12875506,12876772,12878355,12879378,12880478,12881270,12882521,12883558,12885015,12885937,12887110,12887932,12889188,12890011,12890949,12891856,12892855,12893901,12894971,12895970,12896363,12896822,12897080,12897442,12897877,12898079,12898362,12898453,12898769,12899074,12899630,12900098,12900628,12900938,12901519,12902113,12903001,12903780,12904594,12905408,12906032,12907081,12908443,12909529,12910789,12912183,12913285,12914212,12915094,12915579,12916013,12916786,12917761,12918826,12919450,12920389,12920832,12921169,12921700,12922323,12922817,12923899,12925107,12926221,12926577,12927152,12927599,12928112,12928651,12929206,12929576,12930114,12930428,12930979,12931414,12931889,12932224,12932833,12933090,12933482,12934207,12934782,12935609,12935907,12937344,12937866,12938394,12938965,12939529,12939975,12940683,12941097,12941443,12941988,12942155,12942594,12943138,12943644,12944491,12945256,12946385,12947273,12948249,12948796,12949254,12949667,12949869,12950115,12950603,12951275,12951920,12952406,12953055,12953584,12953964,12954341,12954823,12955211,12955623,12956013,12956727,12956942,12957252,12957470,12957804,12958068,12958434,12958571,12958788,12959047,12959418,12959530,12959639,12959764,12959933,12960042,12960139,12960271,12960380,12960477,12960718,12961069,12961521,12961780,12961959,12962806,12963634,12964450,12965075,12966091,12966914,12967486,12968106,12968629,12969124,12969364,12970746,12972075,12973167,12974250,12975382,12976607,12978024,12979626,12981318,12982666,12983831,12984694,12985634,12986590,12987945,12989656,12991319,12992560,12994091,12995516,12996660,12997660,12998271,12998840,12999549,12999830,13000523,13001124,13001937,13002742,13003176,13003599,13003994,13004336,13004700,13005056,13005380,13005978,13006183,13006604,13006836,13007336,13007758,13008093,13008317,13008574,13008763,13008916,13009095,13009580,13010226,13011452,13012344,13013095,13013437,13013635,13014119,13014664,13015319,13015718,13016315,13016918,13017148,13017618,13018300,13019359,13020249,13020933,13021624,13022068,13022586,13023338,13023818,13024295,13024723,13025483,13026028,13026609,13027256,13027949,13028427,13028693,13029092,13029487,13029869,13030274,13030408,13030444,13030481,13030616,13030805,13031007,13031228,13031513,13031665,13031886,13032062,13032226,13032362,13032790,13033094,13033399,13033796,13034006,13034053,13034961,13036136,13037317,13038460,13039526,13040713,13041493,13042776,13043570,13043961,13044320,13045528,13046768,13047318,13048371,13050185,13051636,13053079,13054571,13056109,13057534,13059066,13060452,13061935,13063385,13064932,13066352,13067800,13069266,13070849,13072317,13073857,13075258,13076760,13078155,13079507,13080865,13082410,13083922,13085541,13086938,13088501,13090124,13091657,13093363,13095017,13096696,13098407,13099986,13101018,13101950,13103059,13104178,13105451,13107328,13109048,13110812,13112551,13114229,13115942,13117674,13119384,13121109,13122837,13124532,13126257,13128016,13129790,13131559,13133262,13134904,13136592,13138278,13139927,13141617,13143336,13145025,13146771,13148454,13150151,13151802,13153447,13155116,13156764,13158347,13159939,13161582,13163495,13165026,13166753,13168438,13170041,13171701,13173350,13175077,13176810,13178626,13180470,13182297,13184119,13185930,13187721,13189422,13191205,13192869,13194641,13196466,13198312,13200065,13201711,13203476,13205319,13207022,13208820,13210588,13212342,13214057,13215723,13217379,13219007,13220665,13222381,13224020,13225641,13227226,13228824,13230481,13232146,13233793,13235499,13237202,13238912,13240575,13242295,13243978,13245734,13247454,13249076,13250829,13252545,13254252,13255982,13257656,13259300,13260993,13262675,13264293,13265956,13267552,13269156,13270688,13272194,13273719,13275203,13276857,13277964,13279031,13279889,13280521,13281421,13282741,13284183,13285645,13286939,13288072,13289243,13290455,13291582,13292957,13294316,13295566,13296863,13298127,13299408,13300590,13301572,13302457,13303181,13304078,13304976,13305708,13306338,13307195,13308234,13309328,13310395,13311595,13313201,13314756,13316158,13317594,13318979,13320605,13322022,13323514,13325055,13326627,13327988,13329285,13330545,13331807,13332475,13332714,13332928,13333177,13333398,13333619,13334507,13335884,13337286,13338482,13340067,13341711,13343098,13344387,13345925,13347047,13347787,13349169,13350477,13351264,13352690,13354239,13355690,13357319,13358885,13360498,13361995,13363351,13364669,13366294,13367552,13368998,13370559,13372278,13373686,13375097,13376496,13377972,13379371,13380997,13382154,13383696,13385381,13386936,13388667,13390151,13391711,13393410,13394590,13396318,13397594,13399239,13400690,13401826,13403375,13404884,13406562,13408072,13409461,13410930,13412429,13413785,13415342,13416973,13418558,13419986,13421206,13422802,13424289,13425830,13427429,13428781,13430149,13431626,13433316,13434582,13436243,13437447,13438898,13440406,13442084,13443325,13444670,13446188,13447847,13449424,13451091,13452210,13453768,13455107,13456721,13457756,13459312,13460715,13462415,13463368,13464858,13466299,13467763,13469086,13470563,13472124,13473746,13475353,13476978,13478515,13479861,13481208,13482915,13484382,13486032,13487749,13489169,13490678,13492262,13493762,13495412,13496492,13498176,13499843,13501219,13503022,13504326,13505990,13507745,13509289,13510935,13512158,13513809,13515559,13516790,13518523,13520304,13521654,13523120,13524732,13526094,13527677,13529306,13530761,13532348,13533947,13535470,13537016,13538608,13540291,13541930,13543575,13545114,13546378,13547958,13549771,13551210,13552800,13554672,13556564,13558465,13560411,13562463,13564463,13566519,13568537,13570558,13572572,13574608,13576629,13578665,13580696,13582740,13584793,13586831,13588879,13590873,13592876,13594882,13596926,13598949,13600986,13603034,13605082,13607109,13609151,13611189,13613205,13615222,13617248,13619287,13621336,13623370,13625413,13627464,13629497,13631513,13633534,13635364,13637349,13639386,13641435,13643479,13645518,13647546,13649569,13651609,13653624,13655611,13657602,13659581,13661565,13663582,13665576,13667596,13669634,13671663,13673711,13675740,13677727,13679705,13681698,13683697,13685701,13687688,13689717,13691731,13693758,13695809,13697839,13699834,13701791,13703791,13705807,13707789,13709803,13711855,13713910,13715957,13717981,13719992,13721966,13723957,13725993,13728010,13730044,13732073,13734121,13736175,13738226,13740281,13742306,13744359,13746378,13748424,13750426,13752478,13754470,13756512,13758552,13760472,13762449,13764412,13766395,13768367,13770384,13772321,13774276,13776269,13778261,13780236,13782186,13784192,13786178,13788171,13790099,13792063,13794024,13796015,13797993,13799990,13801920,13803908,13805918,13807879,13809820,13811830,13813800,13815791,13817740,13819714,13821712,13823703,13825674,13827654,13829623,13831609,13833639,13835625,13837631,13839623,13841600,13843608,13845566,13847582,13849501,13851500,13853466,13855459,13857456,13859433,13861411,13863357,13865336,13867319,13869329,13871283,13873292,13875298,13877292,13879292,13881313,13883305,13885306,13887302,13889275,13891268,13893235,13895207,13897217,13899213,13901168,13903096,13905087,13907109,13909073,13911054,13913094,13915123,13917125,13919105,13921140,13923151,13925095,13927152,13929155,13931177,13933200,13935248,13937246,13939265,13941291,13943311,13945303,13947280,13949260,13951267,13953293,13955284,13957259,13959083,13961060,13963116,13965164,13967213,13969149,13971119,13973034,13974941,13976680,13978590,13980472,13982391,13984145,13986078,13987905,13989868,13991863,13993839,13995678,13997608,13999548,14001383,14003248,14005096,14007084,14009032,14010992,14012897,14014839,14016734,14018661,14020546,14022398,14024400,14026360,14028268,14030243,14032052,14034035,14035880,14037760,14039606,14041498,14043458,14045446,14047339,14049376,14051351,14053256,14055119,14056962,14058879,14060738,14062691,14064650,14066564,14068493,14070500,14072459,14074447,14076185,14078141,14079874,14081867,14083814,14085773,14087704,14089565,14091534,14093477,14095431,14097252,14099267,14101222,14103225,14105004,14106713,14108550,14110283,14112189,14114058,14115936,14117759,14119584,14121445,14123287,14125249,14127182,14129093,14131022,14132939,14134827,14136774,14138685,14140582,14142494,14144392,14146279,14148231,14150132,14152119,14154021,14155966,14157852,14159729,14161655,14163493,14165388,14167182,14169099,14171021,14172819,14174767,14176296,14178063,14179406,14181131,14182952,14184697,14186559,14188523,14190451,14192421,14194400,14196383,14198383,14200305,14202277,14204285,14206238,14208202,14210182,14211967,14213383,14214806,14216230,14217665,14219137,14220670,14222058,14223657,14225131,14226564,14228099,14229782,14231553,14233183,14234821,14236721,14238741,14240715,14242648,14244664,14246632,14248446,14250397,14252321,14254317,14256306,14258237,14260215,14262134,14264099,14265928,14267786,14269750,14271762,14273771,14275675,14277691,14279594,14281548,14283448,14285313,14287304,14289270,14291284,14293178,14295198,14297133,14299043,14300930,14302780,14304801,14306722,14308745,14310635,14312604,14314456,14316388,14318286,14320145,14322110,14324086,14326092,14327998,14329951,14331890,14333756,14335655,14337531,14339523,14341539,14343525,14345455,14347452,14349375,14351216,14353132,14355059,14357025,14358974,14360889,14362832,14364776,14366685,14368649,14370572,14372457,14374191,14375937,14377570,14379236,14380909,14382593,14384374,14386079,14387757,14389422,14391127,14392849,14394547,14396278,14397974,14399619,14401314,14403008,14404704,14406430,14408147,14409867,14411501,14413148,14414803,14416519,14418269,14420043,14421734,14423338,14424928,14426599,14428387,14430102,14431762,14433397,14435037,14436701,14438341,14440092,14441830,14443558,14445218,14446851,14448503,14450269,14452071,14453833,14455487,14457088,14458724,14460490,14462377,14464241,14466009,14467736,14469511,14471307,14473159,14475006,14476852,14478646,14480428,14482265,14484004,14485787,14487509,14489212,14490888,14492608,14494337,14495986,14497574,14499334,14501076,14502784,14504405,14506250,14507879,14509516,14511308,14513017,14514535,14516248,14517966,14519704,14521350,14523114,14524869,14526639,14528317,14530104,14531891,14533710,14535373,14537113,14538869,14540587,14542337,14544085,14545852,14547831,14549738,14551737,14553734,14555722,14557683,14559592,14561533,14563462,14565475,14567442,14569425,14571439,14573426,14575406,14577412,14579388,14581385,14583365,14585337,14587298,14589297,14591308,14593305,14595288,14597248,14599244,14601219,14603163,14605133,14607149,14609148,14611137,14613094,14615077,14617043,14619038,14621008,14622993,14624956,14626920,14628905,14630867,14632835,14634792,14636780,14638743,14640714,14642673,14644655,14646604,14648581,14650528,14652477,14654442,14656401,14658377,14660332,14662304,14664281,14666238,14668199,14670157,14672118,14674081,14676040,14678012,14679966,14681939,14683891,14685859,14687812,14689776,14691729,14693694,14695661,14697549,14699495,14701399,14703301,14705213,14707128,14709016,14710938,14712838,14714741,14716663,14718570,14720474,14722382,14724293,14726192,14728130,14729991,14731902,14733815,14735656,14737550,14739485,14741322,14743204,14745146,14746992,14748860,14750813,14752655,14754506,14756461,14758303,14760134,14762091,14763946,14765758,14767716,14769553,14771373,14773345,14775177,14777008,14778898,14780699,14782526,14784412,14786187,14788033,14789927,14791681,14793547,14795446,14797195,14799073,14800964,14802727,14804606,14806470,14808263,14810146,14811987,14813791,14815690,14817495,14819357,14821274,14823093,14824967,14826880,14828684,14830573,14832430,14834278,14836189,14838019,14839869,14841782,14843588,14845473,14847344,14849179,14851090,14852942,14854784,14856697,14858543,14860460,14862346,14864194,14866099,14867984,14869839,14871745,14873628,14875484,14877381,14879263,14881117,14883009,14884893,14886742,14888638,14890519,14892364,14894252,14896136,14897981,14899871,14901758,14903603,14905507,14907416,14909252,14911166,14913071,14914909,14916826,14918735,14920583,14922501,14924386,14926234,14928170,14930034,14931888,14933809,14935664,14937526,14939451,14941316,14943193,14945095,14946950,14948806,14950731,14952646,14954556,14956485,14958390,14960321,14962228,14964152,14966077,14967994,14969909,14971831,14973754,14975661,14977574,14979485,14981411,14983331,14985309,14987293,14989275,14991260,14993241,14995234,14997228,14999215,15001190,15003179,15005173,15007081,15009041,15010929,15012849,15014740,15016659,15018556,15020484,15022326,15024253,15026156,15028028,15029969,15031937,15033904,15035860,15037830,15039791,15041737,15043719,15045649,15047637,15049568,15051548,15053493,15055456,15057396,15059365,15061255,15063212,15065042,15067031,15068863,15070813,15072682,15074591,15076481,15078371,15080310,15082166,15084141,15085967,15087945,15089791,15091728,15093587,15095450,15097319,15099142,15101042,15102843,15104782,15106598,15108483,15110344,15112184,15114054,15115874,15117801,15119585,15121500,15123322,15125198,15127055,15129094,15131151,15133180,15135192,15137220,15139214,15141244,15143267,15145280,15147321,15149349,15151387,15153443,15155473,15157495,15159490,15161320,15163312,15165314,15167362,15169405,15171461,15173485,15175520,15177544,15179557,15181561,15183571,15185612,15187644,15189675,15191730,15193766,15195806,15197830,15199844,15201813,15203746,15205762,15207764,15209791,15211841,15213876,15215881,15217897,15219886,15221881,15223876,15225843,15227839,15229865,15231907,15233926,15235938,15237964,15239976,15241950,15243946,15245941,15247915,15249898,15251916,15253959,15255972,15257984,15260006,15262014,15263991,15265991,15267983,15269952,15271926,15273942,15275984,15277996,15280053,15282096,15284124,15286132,15288167,15290178,15292191,15294148,15296177,15298214,15300264,15302305,15304353,15306394,15308436,15310452,15312479,15314506,15316554,15318602,15320655,15322659,15324697,15326654,15328652,15330624,15332628,15334629,15336603,15338608,15340601,15342561,15344570,15346548,15348490,15350430,15352405,15354392,15356406,15358381,15360388,15362387,15364308,15366250,15368204,15370134,15371929,15373838,15375844,15377846,15379799,15381808,15383783,15385770,15387758,15389739,15391731,15393696,15395599,15397497,15399418,15401404,15403372,15405290,15407195,15409135,15411141,15413086,15415018,15416856,15418745,15420727,15422743,15424647,15426501,15428426,15430391,15432348,15434219,15436094,15437971,15439813,15441713,15443667,15445592,15447528,15449474,15451319,15453209,15455074,15456966,15458945,15460848,15462814,15464774,15466662,15468536,15470428,15472310,15474269,15476270,15478210,15480106,15481925,15483757,15485639,15487570,15489546,15491404,15493277,15495103,15496749,15498680,15500606,15502497,15504415,15506328,15508167,15510046,15511977,15513818,15515703,15517594,15519490,15521347,15523210,15525029,15526878,15528852,15530812,15532730,15534651,15536541,15538388,15540235,15542113,15543943,15545786,15547710,15549682,15551644,15553550,15555508,15557330,15559227,15561184,15563120,15565154,15567181,15569195,15571147,15573080,15575089,15577068,15579084,15581040,15582991,15584924,15586974,15588983,15590969,15592797,15594766,15596768,15598781,15600765,15602728,15604712,15606727,15608735,15610727,15612695,15614674,15616669,15618688,15620701,15622684,15624564,15626532,15628507,15630476,15632512,15634467,15636480,15638520,15640532,15642523,15644526,15646428,15648445,15650449,15652431,15654415,15656441,15658467,15660468,15662396,15664149,15665941,15667826,15669840,15671850,15673814,15675838,15677838,15679810,15681778,15683737,15685699,15687660,15689550,15691504,15693460,15695443,15697379,15699381,15701349,15703379,15705383,15707377,15709333,15711284,15713277,15715255,15717221,15719081,15721029,15722968,15724943,15726824,15728717,15730669,15732610,15734490,15736408,15738399,15740370,15742359,15744346,15746353,15748376,15750371,15752397,15754299,15756203,15758194,15760114,15761816,15763722,15765667,15767615,15769568,15771502,15773447,15775463,15777441,15779445,15781436,15783415,15785368,15787395,15789380,15791337,15793332,15795278,15797206,15799167,15801111,15803087,15805025,15806991,15808971,15810965,15812980,15815004,15816995,15818967,15820935,15822952,15824916,15826891,15828857,15830831,15832784,15834784,15836729,15838676,15840670,15842637,15844632,15846620,15848545,15850537,15852559,15854543,15856499,15858455,15860384,15862428,15864383,15866371,15868367,15870347,15872357,15874334,15876307,15878341,15880315,15882276,15884295,15886215,15888261,15890214,15892154,15894143,15896106,15898090,15900078,15902075,15904029,15905929,15907885,15909881,15911818,15913766,15915765,15917720,15919630,15921600,15923602,15925613,15927598,15929530,15931485,15933443,15935377,15937364,15939276,15941220,15943173,15945011,15946885,15948837,15950812,15952706,15954602,15956531,15958445,15960417,15962360,15964265,15966260,15968234,15970181,15972175,15974146,15976081,15978107,15979923,15981916,15983886,15985881,15987891,15989887,15991901,15993952,15995988,15997857,15999871,16001840,16003890,16005914,16007945,16009993,16012029,16014045,16015984,16017991,16019987,16021997,16024029,16026055,16028084,16030080,16032119,16034103,16036147,16038154,16040177,16042221,16044253,16046309,16048342,16050387,16052354,16054373,16056369,16058383,16060426,16062448,16064505,16066556,16068609,16070603,16072609,16074570,16076605,16078647,16080680,16082731,16084777,16086812,16088748,16090701,16092649,16094574,16096463,16098464,16100428,16102410,16104411,16106403,16108437,16110463,16112392,16114386,16116343,16118386,16120341,16122344,16124282,16126138,16128135,16130107,16132097,16134077,16136083,16138018,16139827,16141804,16143758,16145386,16147256,16149053,16150714,16152337,16153986,16155523,16157313,16158677,16160190,16161731,16163110,16164719,16165991,16167483,16168969,16170113,16171627,16172796,16174212,16175519,16176756,16178160,16179312,16180741,16181896,16182835,16184422,16185800,16186969,16188212,16189542,16190887,16191845,16193107,16194484,16195613,16197224,16198338,16199705,16200871,16202389,16203648,16204928,16206360,16207885,16209052,16210690,16212128,16213594,16215176,16216522,16218136,16219444,16220937,16222474,16223652,16225288,16226452,16227888,16229051,16230615,16231846,16233214,16234586,16235625,16236813,16238325,16239784,16240910,16242180,16243517,16244856,16245802,16247106,16248548,16249709,16251256,16252343,16253714,16254822,16256483,16257693,16259146,16260607,16262002,16263490,16264953,16266523,16267976,16269572,16271045,16272325,16273761,16275279,16276670,16277892,16279480,16280741,16282089,16283246,16284854,16286058,16287482,16288785,16289728,16291070,16292509,16293914,16295000,16296337,16297803,16298929,16299925,16301205,16302597,16303764,16305266,16306393,16307785,16308913,16310517,16311763,16313261,16314740,16316096,16317599,16319029,16320560,16322042,16323571,16325143,16326359,16327869,16329357,16330546,16331927,16333413,16334731,16336113,16337260,16338821,16339971,16341373,16342708,16343563,16345115,16346444,16347735,16348912,16350131,16351727,16352589,16353815,16355214,16356397,16357903,16358933,16360294,16361583,16362914,16364287,16365497,16366940,16368465,16369704,16371315,16372785,16374276,16375824,16377146,16378792,16380072,16381595,16383128,16384409,16386052,16387209,16388589,16389854,16391228,16392638,16393926,16395383,16396483,16397456,16399070,16400477,16401657,16402890,16404242,16405745,16406641,16407894,16409343,16410539,16412155,16413190,16414562,16415665,16417287,16418523,16419928,16421375,16422799,16424147,16425621,16427198,16428631,16430198,16431658,16433064,16434436,16435912,16437412,16438617,16440266,16441425,16442851,16444018,16445614,16446778,16448203,16449479,16450400,16451714,16453112,16454541,16455620,16456929,16458434,16459483,16460535,16461853,16463143,16464349,16465887,16467055,16468425,16469601,16471207,16472463,16473926,16475424,16476813,16478229,16479680,16481296,16482821,16484419,16485971,16487225,16488733,16490291,16491626,16492675,16494357,16495540,16496882,16498023,16499595,16500806,16502105,16503466,16504459,16505643,16507128,16508569,16509639,16510952,16512471,16513492,16514521,16515887,16517124,16518213,16519724,16520864,16522262,16523407,16525042,16526162,16527562,16529080,16530526,16531955,16533491,16535066,16536561,16538123,16539728,16541049,16542498,16544054,16545430,16546544,16548254,16549465,16550830,16551975,16553567,16554766,16556030,16557419,16558518,16559436,16561044,16562503,16563674,16564922,16566269,16567651,16568593,16569876,16571272,16572405,16573959,16575026,16576378,16577661,16579256,16580506,16581724,16583250,16584798,16586184,16587847,16589273,16590792,16592355,16593761,16595470,16596712,16598219,16599743,16600959,16602567,16603819,16605200,16606565,16607824,16609329,16610542,16612028,16613233,16614115,16615792,16617088,16618331,16619546,16620749,16622403,16623231,16624482,16625939,16627194,16628827,16629877,16631211,16632427,16633848,16635326,16636639,16638082,16639604,16640847,16642535,16644022,16645554,16647159,16648560,16650244,16651541,16653112,16654632,16655819,16657468,16658699,16660119,16661481,16662706,16664225,16665452,16666958,16668174,16669025,16670688,16671979,16673249,16674488,16675700,16677317,16678225,16679401,16680820,16682243,16683674,16684991,16686251,16687616,16688905,16690543,16691757,16693273,16694837,16696129,16697773,16699321,16700973,16702532,16704094,16705689,16707091,16708305,16709542,16710843,16712277,16713859,16715445,16716898,16718216,16719442,16720993,16722522,16723905,16725651,16727212,16728534,16729760,16731181,16732646,16734061,16735774,16737314,16738782,16740133,16741372,16742860,16744237,16745602,16747235,16748835,16750419,16751866,16753078,16754459,16755828,16757054,16758518,16760232,16761477,16762583,16763889,16765183,16766908,16768299,16769575,16771046,16772713,16773852,16775550,16777226,16779114,16781062,16782954,16784809,16786736,16788523,16790282,16792110,16794017,16795784,16797620,16799211,16800476,16802210,16803906,16805676,16807402,16809101,16810804,16812261,16813009,16814316,16816316,16818304,16820111,16821657,16822800,16824123,16825925,16827503,16829252,16830991,16832905,16834625,16836373,16838063,16839951,16841663,16843436,16845330,16847222,16849087,16850747,16852429,16854377,16856043,16858023,16859837,16861776,16863757,16865716,16867644,16869493,16871271,16872836,16874732,16876544,16878435,16880340,16882161,16883804,16885532,16887059,16888749,16890512,16892187,16893784,16895466,16897023,16898444,16900124,16901909,16903937,16905945,16907924,16909825,16911820,16913850,16915847,16917792,16919810,16921842,16923851,16925801,16927801,16929843,16931812,16933795,16935722,16937678,16939589,16941585,16943533,16945503,16947458,16949481,16951481,16953486,16955491,16957504,16959534,16961537,16963521,16965348,16967359,16969416,16971471,16973526,16975503,16977436,16979274,16980881,16982844,16984700,16986649,16988530,16990441,16992345,16994260,16996152,16998040,16999932,17001873,17003734,17005636,17007620,17009510,17011420,17013352,17015227,17017113,17018426,17020156,17022105,17023802,17025296,17026790,17028032,17029605,17031342,17032956,17034571,17036419,17037972,17039556,17041162,17042745,17044257,17045826,17047471,17049123,17050698,17051951,17053271,17054934,17056558,17057811,17059198,17061171,17063016,17064774,17066539,17068320,17070033,17071820,17073689,17075416,17077093,17078764,17080512,17082138,17083808,17085645,17087388,17088682,17090194,17091874,17093341,17094796,17096026,17097374,17099134,17100630,17101852,17103041,17104460,17106101,17107348,17108889,17110872,17112916,17114903,17116876,17118843,17120754,17122577,17124125,17126050,17127928,17129820,17131413,17133236,17135233,17137116,17138999,17140891,17142668,17144454,17146306,17147996,17149909,17151435,17152858,17154571,17156034,17157433,17159004,17160627,17162034,17163774,17165155,17166891,17168340,17170050,17171662,17173514,17175027,17176766,17178305,17180065,17181548,17182999,17184609,17186114,17188000,17189263,17190513,17191849,17193606,17195430,17197241,17198954,17200354,17201823,17203487,17205257,17206802,17208246,17209897,17211528,17213168,17214837,17216385,17217954,17219620,17221217,17222573,17224144,17225572,17227265,17228885,17230314,17231925,17233463,17235100,17236756,17238255,17239496,17241086,17242614,17243859,17245170,17246535,17247761,17249079,17250410,17251959,17253170,17254399,17255831,17257161,17258474,17259872,17261240,17262539,17264133,17265706,17267274,17269170,17270646,17272133,17273994,17275823,17277678,17279604,17281149,17283120,17284886,17286516,17288441,17290080,17292021,17293259,17295115,17297031,17298517,17300217,17301939,17303634,17305300,17306894,17308359,17309980,17311457,17313023,17314524,17316079,17317663,17319207,17320728,17322151,17323752,17325297,17326808,17328228,17329816,17331288,17333093,17334973,17336887,17338750,17340593,17342351,17343807,17345303,17346900,17348396,17350293,17352230,17354146,17355993,17357898,17359788,17361694,17363677,17364703,17365239,17365821,17366330,17367065,17367689,17368264,17368837,17369478,17371261,17373238,17375218,17377170,17379088,17381068,17383059,17385012,17386967,17388601,17390267,17391871,17393517,17395297,17396852,17398577,17400157,17401842,17403387,17404938,17406571,17408059,17409576,17411061,17412439,17413937,17415301,17416914,17418436,17419694,17420838,17422255,17423600,17425178,17426628,17428050,17429419,17430999,17432468,17434064,17435501,17436890,17438282,17439686,17441140,17442562,17443946,17445387,17447236,17449007,17450813,17452699,17454589,17456485,17458288,17460038,17461848,17463515,17465220,17467005,17468835,17470657,17472410,17474113,17475774,17476862,17477648,17478446,17479288,17480777,17482481,17484142,17485763,17487419,17489071,17490659,17492254,17493922,17495702,17497365,17499046,17500696,17502371,17504189,17505988,17507857,17509239,17511028,17512523,17514247,17515841,17517615,17519115,17520759,17522699,17524368,17526204,17528046,17529905,17531437,17533279,17535120,17536874,17537930,17538995,17539951,17541037,17542107,17543181,17544156,17545222,17546888,17548449,17550050,17551578,17553158,17554723,17556288,17557808,17559467,17560894,17562450,17564059,17565704,17566963,17568052,17569070,17570102,17571435,17572859,17574447,17576211,17577823,17579269,17580373,17581805,17583358,17584495,17585759,17587269,17588790,17590237,17591829,17593434,17594969,17596538,17598168,17599685,17600982,17601877,17602715,17603757,17604285,17605269,17605992,17607024,17608421,17609894,17610657,17611216,17612074,17612635,17613439,17613981,17614646,17615386,17616105,17616970,17617452,17618270,17618979,17619923,17620431,17620955,17621824,17622533,17623399,17623894,17624746,17625449,17626320,17626765,17627209,17628113,17628702,17629466,17629765,17630344,17630546,17630754,17631333,17631507,17632117,17632320,17632931,17633097,17633575,17633748,17633907,17634368,17634406,17634963,17635139,17635717,17635966,17636172,17637705,17639122,17640548,17641733,17642966,17644129,17645525,17646496,17647506,17648496,17649483,17650470,17651439,17652441,17653423,17654943,17656323,17657732,17659184,17660687,17662142,17663531,17664885,17666460,17667908,17669415,17670926,17672506,17674094,17675586,17677113,17678614,17680176,17681572,17682997,17684386,17685802,17687244,17688644,17690051,17691555,17692949,17694349,17695731,17697109,17698227,17699169,17700126,17701081,17702179,17703116,17704072,17704981,17706074,17706984,17707939,17708860,17709831,17711249,17712632,17714047,17715461,17716599,17717524,17718462,17719406,17720861,17722472,17724044,17725603,17727117,17728645,17730189,17731799,17733408,17734959,17736304,17737655,17738960,17740186,17741507,17742843,17744185,17745734,17747287,17748814,17750132,17751650,17752961,17754233,17755466,17757025,17758667,17760361,17761932,17763535,17765034,17766846,17768554,17770361,17771961,17773175,17774352,17775854,17777270,17778764,17779973,17781267,17782662,17784111,17785753,17787174,17788748,17790192,17791637,17793319,17795012,17796653,17798328,17799886,17801558,17803209,17804847,17806603,17808224,17809928,17811578,17813186,17814780,17816426,17818065,17819582,17821321,17822982,17824597,17826294,17827774,17829419,17831038,17832675,17834347,17835937,17837638,17839314,17840967,17842568,17844229,17845877,17847422,17849225,17850865,17852489,17854114,17855900,17857607,17859222,17860850,17862485,17864317,17865993,17867672,17869349,17871113,17872814,17874481,17876160,17877812,17879038,17879990,17880949,17881905,17883271,17884768,17886310,17887800,17889392,17890717,17892028,17893402,17894687,17896002,17897172,17898419,17899681,17901004,17902194,17903141,17904079,17905519,17906727,17907885,17908988,17910212,17911325,17912235,17913221,17914194,17915777,17917295,17918825,17920372,17921866,17923376,17924884,17926416,17928104,17929506,17930890,17932261,17933658,17935021,17936404,17937768,17939157,17940874,17942409,17943978,17945535,17947106,17948638,17950168,17951697,17953328,17955019,17956624,17958242,17959885,17961511,17963121,17964721,17966385,17968153,17969608,17971032,17972435,17973884,17975349,17976770,17978162,17979593,17981462,17983217,17984933,17986617,17988364,17990106,17991797,17993492,17995401,17997159,17998860,18000548,18002248,18003974,18005643,18007322,18009005,18010346,18011367,18012594,18013635,18014735,18015793,18017039,18018195,18019314,18020379,18021313,18022105,18022737,18023448,18024078,18025685,18027328,18029053,18030738,18032463,18034146,18035866,18037560,18039324,18041146,18042882,18044578,18046191,18047909,18049590,18051335,18053029,18054903,18056649,18058421,18060180,18061936,18063728,18065498,18067271,18069014,18070866,18072582,18074264,18075881,18077571,18079219,18080935,18082607,18084313,18085773,18087275,18088649,18090261,18091267,18092285,18093304,18094340,18096190,18097994,18099808,18101638,18103304,18105147,18106931,18108783,18110593,18112015,18113191,18114410,18115958,18117457,18118462,18119509,18120814,18122560,18124159,18125778,18127359,18128891,18130525,18132143,18133724,18135465,18136996,18138442,18139863,18141351,18142758,18144232,18145648,18147116,18148550,18150350,18151712,18153473,18154785,18156272,18157713,18159194,18160613,18162304,18163947,18165565,18167184,18168708,18170291,18171884,18173460,18175131,18176647,18178119,18179554,18180926,18182447,18183910,18185347,18186738,18188529,18190359,18192192,18194023,18195705,18197530,18199329,18201160,18202932,18204624,18206260,18207876,18209571,18211159,18212806,18214404,18216107,18217700,18219179,18220646,18222137,18223509,18225024,18226464,18227903,18229472,18231313,18233112,18234972,18236867,18238548,18240389,18242194,18244070,18245741,18247357,18249007,18250628,18252172,18253840,18255479,18257082,18258748,18260364,18261811,18263225,18264709,18266110,18267593,18269046,18270480,18272048,18273910,18275732,18277571,18279293,18281167,18282972,18284833,18286665,18287971,18288999,18290696,18291374,18292063,18293242,18293932,18294971,18295755,18296448,18297930,18298999,18299656,18300381,18301551,18302813,18303810,18305025,18306405,18307683,18308273,18309437,18310726,18311898,18313214,18314481,18316222,18317401,18318390,18319354,18320983,18322564,18324137,18325883,18327534,18329261,18330814,18332576,18334073,18335557,18336825,18337668,18338879,18340443,18341947,18342965,18343944,18344962,18345973,18347327,18348417,18349443,18350525,18351877,18353754,18355789,18357800,18359807,18361838,18363857,18365881,18367856,18369881,18371909,18373936,18375957,18377938,18379955,18381967,18383968,18385950,18387979,18390005,18392026,18394020,18396047,18398045,18400057,18402001,18404027,18406065,18408096,18410089,18412084,18414090,18416091,18418089,18420074,18422118,18424040,18425950,18427864,18429736,18431640,18433549,18435381,18437250,18439133,18441048,18442916,18444810,18446631,18448498,18450320,18452208,18454148,18455817,18457478,18459133,18460821,18462494,18464152,18465814,18467449,18469245,18470893,18472555,18474199,18475824,18477483,18479126,18480732,18482398,18483963,18485379,18486828,18488236,18489663,18491101,18492499,18493866,18495428,18496936,18498426,18499937,18501430,18502763,18504298,18505828,18507445,18508876,18510409,18511887,18513571,18515017,18516484,18518023,18519650,18521038,18522401,18523882,18525351,18527360,18529035,18530542,18532219,18533822,18535399,18536905,18538502,18540199,18541732,18543300,18544921,18546600,18548335,18549967,18551560,18553093,18554756,18556299,18557863,18559422,18560986,18562523,18564114,18565641,18567065,18568662,18570127,18571855,18573396,18575047,18576617,18578288,18579944,18581577,18583357,18585092,18586573,18588281,18590214,18592067,18593770,18595491,18597381,18599317,18601252,18603223,18605192,18607134,18609089,18611006,18612935,18614767,18616616,18618482,18620465,18622324,18624194,18626065,18627896,18629692,18631472,18633264,18635041,18637050,18639003,18640968,18642922,18644854,18646764,18648664,18650554,18652535,18654462,18656347,18658237,18660088,18661888,18663725,18665545,18667329,18669332,18671323,18673320,18675297,18677250,18679196,18681118,18683021,18684992,18686911,18688727,18690535,18692280,18694057,18695816,18697586,18699350,18701259,18703099,18704948,18706712,18708515,18710341,18712152,18713956,18715728,18717425,18718850,18720312,18721790,18723224,18724655,18726071,18727481,18729077,18731034,18732966,18734926,18736897,18738837,18740742,18742668,18744594,18746494,18748356,18750269,18752264,18754202,18756142,18758037,18759960,18761848,18763777,18765659,18767594,18769311,18770795,18772326,18773942,18775526,18777129,18778696,18780204,18782033,18783822,18785638,18787437,18789190,18790948,18792672,18794400,18796123,18797701,18799024,18800357,18801637,18803054,18804337,18805693,18807037,18808618,18810107,18811581,18813072,18814638,18816210,18817704,18819179,18820642,18822295,18823997,18825471,18827146,18828784,18830361,18831944,18833431,18834807,18836154,18837465,18838728,18840027,18841182,18842441,18844141,18846028,18847890,18849768,18851681,18853575,18855454,18857323,18859195,18861154,18863051,18864931,18866796,18868698,18870577,18872490,18874364,18876277,18877703,18879145,18880544,18881960,18883430,18884906,18886369,18887844,18889614,18891271,18892979,18894714,18896409,18898008,18899603,18901137,18902838,18904363,18905914,18907496,18909106,18910832,18912556,18914257,18915897,18917616,18919079,18920550,18922019,18923476,18924851,18926247,18927644,18929163,18930703,18932197,18933684,18935236,18936429,18937972,18939487,18940920,18942595,18944088,18945615,18947092,18948418,18949921,18951410,18952925,18954450,18956421,18958375,18960295,18961986,18963390,18964793,18966207,18967026,18968431,18969828,18971242,18972836,18974024,18975188,18976298,18977424,18978481,18979559,18980700,18981887,18983388,18984815,18986237,18988131,18990037,18991924,18993831,18995728,18997636,18999535,19001461,19003162,19004772,19006299,19007805,19009266,19010655,19011517,19012486,19013270,19014171,19014957,19015945,19016640,19017546,19018431,19019452,19020195,19021089,19021991,19022997,19023958,19024869,19026232,19027449,19028810,19030092,19030939,19031299,19031879,19032344,19032777,19033050,19033545,19034176,19035519,19036460,19037304,19038109,19039212,19040529,19041268,19042608,19043410,19043595,19044045,19044307,19044636,19045982,19047365,19048866,19050533,19052396,19054122,19055932,19057761,19059561,19061328,19063087,19064873,19066635,19068273,19069905,19071470,19073087,19074668,19076316,19077914,19079545,19080939,19082253,19083587,19084907,19086504,19088180,19089840,19091507,19093163,19094843,19096486,19098162,19099846,19101520,19103190,19104851,19105816,19107368,19109192,19111057,19112831,19114620,19116414,19118297,19120122,19121893,19123532,19124990,19126460,19127906,19129543,19131399,19133242,19135110,19136965,19138827,19140712,19142557,19144424,19146277,19147349,19149102,19150357,19151442,19152691,19153775,19154941,19156993,19159001,19160972,19162896,19164862,19166818,19168716,19170615,19172505,19174465,19176411,19178366,19180267,19182196,19184088,19186017,19188025,19189807,19191479,19193243,19195050,19196859,19198655,19200344,19201952,19203809,19205865,19207913,19209969,19212021,19214059,19216108,19218144,19220197,19222245,19224298,19226348,19228388,19230439,19232485,19234531,19236570,19238618,19240486,19242443,19244296,19246145,19247960,19249814,19251653,19253521,19255471,19257370,19259238,19261083,19262941,19264773,19266632,19268466,19270417,19271727,19273197,19273989,19274845,19275622,19276332,19277075,19277603,19278413,19279298,19280088,19280479,19281161,19281945,19282817,19283446,19283851,19284597,19285431,19286330,19286810,19287316,19288107,19288925,19289843,19290419,19290881,19292136,19293178,19294285,19294794,19295444,19296615,19297699,19298765,19299139,19300024,19301148,19302191,19303107,19303499,19304569,19305716,19306802,19307496,19308885,19310179,19311767,19313070,19314828,19316220,19317186,19318349,19319479,19320623,19321779,19322873,19323975,19325108,19326300,19327418,19328589,19329768,19330855,19331924,19332933,19334132,19335557,19336680,19337777,19338978,19340019,19341066,19342166,19343232,19344220,19345233,19346154,19347171,19348241,19349099,19349945,19350735,19351586,19352927,19353355,19353905,19354417,19354979,19355531,19355981,19356543,19357108,19357567,19358086,19358567,19359076,19359579,19360104,19360660,19361171,19362604,19364082,19365580,19367074,19368631,19370136,19371650,19373172,19374673,19375783,19376748,19377733,19379198,19380744,19382125,19383521,19384854,19386224,19387700,19389430,19391080,19392747,19394400,19396010,19397625,19399281,19400912,19402564,19404230,19405725,19407188,19408727,19410201,19411722,19413230,19414677,19416257,19417285,19418432,19419670,19421008,19422337,19423654,19424980,19426091,19427480,19428907,19430321,19431752,19433287,19434808,19436356,19437917,19439615,19440945,19441938,19443062,19444231,19445368,19446491,19447576,19448693,19449784,19450945,19452049,19453268,19454464,19455564,19456632,19457707,19458940,19460285,19461396,19462480,19463648,19464708,19465744,19466872,19467890,19468894,19469900,19470788,19471823,19472847,19473695,19474528,19475359,19476250,19477531,19477953,19478507,19479007,19479561,19480101,19480566,19481133,19481679,19482147,19482644,19483126,19483612,19484122,19484654,19485224,19485749,19487495,19489307,19491102,19492909,19494713,19496493,19498222,19499977,19501376,19502801,19504198,19505584,19507220,19508456,19509681,19510899,19512426,19513870,19515214,19516519,19518028,19519338,19520358,19521371,19522336,19523798,19525492,19526948,19528627,19530305,19531672,19532836,19534003,19535215,19536663,19538021,19539737,19541398,19542998,19544687,19546386,19547971,19549647,19551271,19552958,19554131,19555538,19556966,19558498,19560444,19562141,19564110,19565886,19567584,19569233,19570940,19572665,19574287,19576040,19577800,19579497,19581079,19582573,19584111,19585665,19587231,19588738,19590325,19591589,19593325,19594957,19596561,19598152,19599720,19601283,19602863,19604480,19606266,19607728,19609478,19611274,19612772,19614191,19615931,19617727,19619300,19621009,19622097,19623227,19624347,19625508,19626650,19627797,19628846,19630025,19631150,19632273,19633390,19634598,19635765,19636855,19637916,19639002,19640317,19641328,19642591,19643712,19644537,19645244,19646352,19647547,19648631,19649607,19650560,19651761,19652884,19653840,19654393,19655550,19656762,19657924,19658911,19659834,19661096,19662219,19663197,19663693,19664855,19666084,19667305,19668253,19669095,19670254,19671382,19672404,19672826,19674036,19675233,19676417,19677396,19678118,19679251,19680423,19681516,19681925,19683084,19684262,19685407,19686322,19687662,19688783,19689861,19691071,19692108,19693184,19694290,19695310,19696317,19697327,19698264,19699300,19700325,19701174,19702014,19702849,19703746,19704733,19705893,19707106,19708303,19708651,19709642,19710899,19711990,19712908,19714172,19715313,19716544,19717725,19718948,19720113,19721199,19722433,19723619,19724955,19726080,19727186,19728366,19729567,19730857,19731972,19733130,19734367,19735488,19736809,19738000,19738991,19739999,19741137,19742472,19743577,19744588,19745597,19746744,19748090,19749165,19750135,19751189,19752486,19753708,19754790,19755760,19756864,19758351,19759046,19759540,19760099,19761346,19762901,19764638,19766508,19768385,19770205,19771814,19773185,19773736,19774250,19774762,19775284,19775842,19776753,19778064,19779111,19780392,19781905,19783096,19784168,19785616,19786978,19788050,19789307,19790807,19792013,19793092,19794504,19796257,19798122,19799851,19801581,19803575,19805255,19807063,19808953,19810647,19812529,19814332,19816168,19817875,19819732,19821482,19823249,19825140,19826890,19828620,19830507,19832257,19834071,19835863,19837615,19839557,19841314,19843140,19844861,19846760,19848493,19850355,19852109,19853848,19855733,19857394,19859217,19861103,19862857,19864605,19866416,19868242,19869955,19871816,19873683,19875407,19877305,19879027,19880777,19882805,19884549,19886304,19888119,19889886,19891762,19893586,19895416,19897093,19898989,19900719,19902565,19904352,19906100,19907997,19909751,19911582,19913397,19915195,19916940,19918762,19920648,19922359,19924101,19925985,19927688,19929601,19931368,19933121,19934531,19935732,19936973,19938177,19939449,19940611,19941817,19942950,19943993,19944556,19945344,19946218,19947017,19947405,19948120,19948908,19949773,19950403,19950813,19951576,19952436,19953334,19953785,19954320,19955096,19955930,19956865,19957484,19958952,19959939,19961103,19962253,19963378,19964534,19965636,19966739,19967842,19968994,19970124,19971307,19972489,19973587,19974662,19975681,19976781,19978301,19979784,19981370,19982464,19983568,19984749,19985843,19986946,19988053,19989130,19990140,19991159,19992005,19993022,19994036,19994944,19995841,19996623,19997495,19998945,20000373,20001866,20003098,20003543,20004114,20004613,20005152,20005699,20006184,20006734,20007268,20007742,20008258,20008751,20009239,20009757,20010278,20010849,20011382,20013045,20014697,20016379,20017932,20019647,20021269,20022924,20024591,20026299,20027987,20029764,20031410,20033043,20034650,20036322,20037903,20038904,20039388,20040391,20041006,20041432,20041743,20042588,20043609,20045638,20047664,20049682,20051715,20053734,20055728,20057722,20059701,20061730,20063753,20065774,20067797,20069809,20071838,20073858,20075824,20077851,20079249,20080602,20082180,20083719,20085125,20086434,20087740,20088861,20089981,20091105,20092226,20093353,20094475,20095311,20095381,20096219,20098220,20100268,20102128,20104001,20105910,20107766,20109608,20111502,20113405,20115272,20117217,20119129,20121061,20123007,20124881,20126809,20128731,20130649,20132527,20134315,20136317,20138192,20140082,20142002,20143907,20145766,20147539,20149356,20151115,20153029,20154939,20156835,20158706,20160581,20162467,20164366,20166282,20168123,20170124,20171887,20173770,20175637,20177556,20179395,20181060,20182457,20182739,20183306,20183946,20184601,20185229,20185820,20186408,20187137,20187887,20188533,20189316,20190137,20191074,20191701,20192573,20192794,20193907,20194231,20194621,20196161,20196854,20197850,20198086,20198417,20198749,20199676,20201253,20202706,20204302,20205947,20207538,20209102,20210531,20212039,20213654,20215249,20216885,20218484,20219955,20221549,20223104,20224629,20226364,20227887,20229573,20231160,20232652,20234498,20236354,20238149,20239915,20241750,20243615,20245452,20247291,20249147,20250874,20252176,20253449,20254803,20256154,20257486,20258788,20260107,20261543,20263053,20264523,20265997,20267459,20268951,20270407,20271860,20273281,20274904,20276370,20277824,20279272,20280740,20282247,20283726,20285160,20286644,20288265,20289731,20291170,20292637,20294128,20295602,20297041,20298483,20300076,20301548,20302961,20304384,20305829,20307309,20308757,20310174,20311565,20313191,20314568,20315983,20317396,20318900,20320364,20321778,20323194,20324801,20326218,20327610,20328983,20330449,20331934,20333366,20334762,20336170,20337773,20339170,20340553,20341976,20343434,20344909,20346327,20347711,20349302,20350755,20352149,20353604,20355097,20356548,20358025,20359468,20360873,20362507,20363965,20365381,20366843,20368328,20369825,20371264,20372715,20374195,20375676,20377018,20378347,20379717,20381081,20382468,20383781,20385052,20386616,20387969,20389287,20390640,20392046,20393400,20394729,20396070,20397351,20398888,20400198,20401506,20402853,20404213,20405541,20406852,20408106,20409670,20411133,20412556,20414004,20415487,20416983,20418439,20419889,20421300,20422938,20424362,20425755,20427241,20428723,20430219,20431671,20433063,20434692,20436108,20437464,20438857,20440317,20441768,20443182,20444638,20446034,20447647,20449063,20450432,20451868,20453341,20454802,20456209,20457579,20459093,20460609,20461994,20463376,20464814,20466312,20467764,20469186,20470611,20472223,20473684,20475088,20476528,20477974,20479441,20480887,20482305,20483707,20485503,20487260,20489090,20490811,20492670,20494256,20496009,20497809,20499647,20501475,20503247,20504882,20506620,20508404,20510159,20511895,20513688,20515540,20517363,20519246,20521068,20522960,20524797,20526703,20528551,20530439,20532273,20534093,20535849,20537662,20539486,20541278,20543043,20544851,20546780,20548577,20550357,20552076,20553853,20555573,20557343,20559062,20560863,20562716,20564529,20566304,20568061,20569841,20571584,20573322,20575098,20577053,20578934,20580751,20582571,20584386,20586178,20588033,20589830,20591634,20593519,20595247,20597043,20598788,20600523,20602242,20603998,20605774,20607624,20609420,20611265,20613089,20614908,20616733,20618485,20620256,20622043,20623851,20625648,20627391,20629152,20630768,20632376,20634128,20635861,20637485,20639315,20641099,20642819,20644604,20646252,20647899,20649541,20651235,20653039,20654925,20656580,20658189,20659809,20661469,20663163,20664843,20666517,20668170,20669932,20671633,20673261,20674909,20676614,20678306,20680001,20681677,20683487,20685303,20687064,20688840,20690627,20692461,20694250,20696081,20697858,20699700,20701487,20703170,20704921,20706712,20708508,20710273,20712041,20713910,20715661,20717478,20719361,20721230,20723106,20725042,20726934,20728741,20730546,20732225,20733921,20735659,20737420,20739168,20740983,20742711,20744507,20746231,20747899,20749724,20751525,20753315,20755164,20756983,20758702,20760416,20761818,20763341,20764853,20766369,20767892,20769411,20770912,20772482,20774532,20776511,20778436,20780442,20782435,20784370,20786360,20788293,20790202,20792172,20794161,20796161,20798109,20800055,20802034,20804019,20806034,20807615,20808064,20808102,20808142,20808180,20808499,20808539,20808577,20808617,20809343,20811199,20812980,20814808,20816659,20818490,20820312,20822080,20823921,20825685,20827133,20828612,20830041,20831503,20832951,20834388,20835823,20837420,20839252,20841076,20842878,20844635,20846417,20848197,20849965,20851770,20852945,20853748,20853788,20853826,20853866,20854176,20854214,20854254,20854292,20854332,20855437,20856551,20858318,20860042,20861781,20863543,20865303,20867020,20868728,20870474,20872245,20874055,20875131,20876378,20877826,20879001,20879894,20881479,20882908,20884130,20885215,20887031,20888640,20890293,20890754,20890792,20890832,20890870,20891189,20891229,20891267,20891307,20891861,20893282,20894693,20895908,20897105,20898808,20900461,20902082,20903775,20905464,20907131,20908802,20910408,20911965,20912005,20912043,20912083,20912121,20913236,20913529,20913643,20914902,20916755,20918771,20920486,20922139,20923739,20925376,20927063,20928725,20930432,20932162,20933839,20935571,20937320,20939070,20940806,20942524,20944236,20945924,20947663,20948715,20949828,20950168,20951283,20953105,20954859,20956581,20958318,20960043,20961854,20963522,20965266,20967131,20968985,20970823,20972706,20974482,20976409,20978195,20980049,20981939,20983781,20985461,20987106,20988847,20990525,20992344,20994130,20995840,20997723,20999503,21001476,21003249,21005215,21007018,21008967,21010833,21012713,21014648,21015896,21017071,21018194,21019205,21020427,21021860,21023186,21024530,21025897,21027312,21028464,21029633,21030724,21031866,21033019,21034286,21035937,21036604,21037443,21038370,21039409,21040822,21042527,21043629,21044407,21045073,21045882,21047381,21048990,21050729,21052283,21053108,21054464,21056114,21057452,21058668,21059629,21060414,21061361,21062091,21062596,21063493,21064715,21066102,21067291,21068550,21069906,21071254,21072666,21073980,21075410,21077332,21079232,21081108,21083042,21084879,21086739,21088640,21090551,21092409,21094305,21096239,21098181,21100017,21101909,21103796,21105740,21106931,21107860,21108810,21109813,21111387,21113347,21115049,21116966,21118847,21119987,21121210,21122391,21123616,21125617,21127638,21129635,21131673,21133613,21135529,21137415,21139305,21141251,21143297,21145331,21147362,21149410,21151167,21152977,21154760,21156590,21158400,21160196,21161905,21163715,21165563,21167514,21169453,21171391,21173366,21174943,21176232,21177543,21179189,21180478,21181643,21182911,21184202,21185514,21186684,21187957,21189163,21190781,21192191,21193404,21194594,21196319,21197908,21198678,21199478,21201055,21202715,21203569,21204301,21205611,21206908,21207986,21208727,21209690,21211250,21212854,21214237,21215645,21217252,21219072,21220825,21222622,21224403,21226241,21227997,21229858,21231698,21233513,21235171,21236838,21238511,21240257,21242023,21243821,21245637,21247376,21248992,21250422,21251835,21253271,21254837,21256276,21257709,21259141,21260740,21262268,21263716,21265219,21266765,21268337,21269838,21271304,21272853,21274768,21276750,21278702,21280621,21282638,21284612,21286593,21288563,21290565,21292329,21294107,21295856,21297616,21299406,21300974,21302520,21304105,21305999,21307913,21309712,21311612,21313547,21315314,21317148,21318916,21320752,21322676,21324539,21326375,21328280,21330163,21331979,21333764,21335590,21337492,21338921,21340408,21341985,21343573,21344794,21346014,21347600,21348881,21350057,21351303,21352506,21354226,21355351,21356592,21357890,21359774,21361550,21363343,21365108,21366911,21368714,21370515,21372300,21374083,21375963,21377793,21379595,21381406,21382853,21383730,21384567,21385381,21386359,21387519,21388692,21389835,21391020,21392311,21393526,21394685,21395920,21397236,21398618,21400022,21401338,21402941,21404790,21406655,21408499,21410385,21412229,21414037,21415891,21417715,21419666,21421564,21423502,21425410,21427353,21429271,21431199,21433155,21435048,21436880,21438746,21440575,21442300,21444176,21445982,21447692,21449281,21450928,21452719,21454574,21456434,21458331,21460224,21462025,21463917,21465793,21467258,21468730,21470136,21471656,21473203,21474807,21476594,21478161,21479715,21481363,21483013,21484728,21486406,21488160,21489905,21491696,21493492,21495393,21497449,21499503,21501466,21503448,21505421,21507405,21509368,21511362,21513301,21515268,21517184,21519098,21520206,21521539,21522913,21523958,21525709,21527494,21529236,21530988,21532714,21534224,21535873,21537404,21539054,21540826,21542594,21544366,21546101,21547973,21549757,21551569,21553329,21555110,21556804,21558515,21560234,21561869,21563562,21565385,21567175,21568812,21569983,21571007,21572065,21573243,21574580,21575513,21576400,21577301,21578594,21579547,21580782,21581701,21582991,21583500,21584253,21584699,21585316,21586259,21586982,21587802,21588491,21589255,21590441,21591639,21592853,21593875,21595185,21596561,21597994,21599420,21600726,21602167,21603761,21605394,21606744,21608189,21609833,21611333,21612818,21614543,21616160,21617819,21619290,21619489,21619710,21619907,21620322,21621074,21621576,21622000,21622459,21624239,21626273,21628325,21630378,21632407,21634446,21636487,21638511,21640527,21642507,21644437,21646377,21648311,21650189,21652102,21654021,21655932,21657620,21659035,21660388,21661891,21663337,21664464,21665671,21666803,21667877,21669314,21670758,21672153,21673595,21675343,21677189,21679015,21680840,21682725,21684578,21686368,21688156,21690065,21691870,21693598,21695342,21697106,21698789,21700562,21702368,21704069,21705668,21707065,21708566,21710000,21711486,21712933,21714383,21715953,21717384,21719239,21721080,21722941,21724827,21726397,21727613,21728852,21730041,21731684,21733533,21735322,21737093,21738955,21740342,21741775,21743237,21744656,21746619,21748663,21750698,21752750,21754788,21756791,21758796,21760769,21762740,21764269,21765769,21767251,21768756,21770498,21772160,21773821,21775509,21777482,21779458,21781448,21783435,21785428,21787164,21788874,21790586,21792410,21794463,21796515,21798562,21800610,21802099,21803412,21804429,21804956,21805484,21806016,21806791,21808010,21809466,21810942,21812102,21813340,21814841,21816232,21817625,21818932,21820484,21821978,21823591,21825046,21826452,21828137,21829862,21831676,21833524,21835136,21836347,21837675,21838904,21840248,21841182,21842195,21843203,21844340,21845200,21846108,21847093,21848111,21849136,21851153,21853117,21855063,21857010,21859043,21861047,21863016,21865063,21867025,21868581,21870087,21871710,21873445,21875085,21876759,21878455,21880084,21881874,21883375,21884898,21886506,21888344,21889961,21891687,21893354,21895043,21896578,21898275,21899836,21901310,21902743,21904345,21905880,21907297,21909168,21911075,21912931,21914787,21916678,21918571,21920436,21922300,21924202,21925815,21927325,21928754,21930412,21932392,21934372,21936347,21938340,21940334,21942148,21943933,21945728,21947562,21949430,21951356,21953293,21955121,21956488,21957952,21959378,21960747,21962254,21963751,21965279,21966757,21968293,21969844,21971595,21973283,21974870,21976350,21977949,21979452,21980938,21982696,21984412,21986054,21987786,21989459,21991206,21992875,21994645,21996313,21997982,21999520,22001220,22002911,22004555,22006205,22007737,22009432,22011020,22012590,22014139,22015621,22017130,22018915,22020285,22022019,22023681,22025155,22026647,22028166,22029681,22031209,22032722,22034374,22035980,22037301,22038617,22039986,22041497,22043107,22044943,22046344,22047878,22049545,22051018,22052769,22054525,22056219,22057862,22059444,22060704,22061905,22063149,22064460,22065827,22067043,22068371,22070113,22071470,22072935,22074234,22075599,22076695,22077856,22079102,22080299,22081610,22083020,22084435,22085794,22087223,22088804,22090009,22091291,22092878,22094620,22096477,22098133,22099500,22100643,22101664,22102555,22103447,22104520,22105697,22106954,22108245,22109666,22111311,22112892,22114537,22116395,22117858,22119032,22120010,22121017,22121998,22122704,22123594,22124893,22126022,22127280,22128543,22129797,22131111,22132592,22134287,22136021,22137900,22139745,22141528,22143297,22145017,22146400,22147656,22148841,22150152,22151425,22152755,22154071,22155337,22156582,22157861,22159155,22160428,22161749,22163504,22165082,22166783,22168384,22169911,22171364,22173030,22174669,22176324,22177702,22178901,22180080,22181357,22182656,22183919,22185329,22186787,22188660,22190111,22191379,22192775,22193992,22195241,22196350,22197636,22199038,22200660,22202382,22204031,22205636,22207078,22208440,22209894,22211229,22213056,22214506,22215918,22217182,22218416,22219697,22220875,22222104,22223491,22225175,22226881,22228593,22230264,22231764,22233401,22235127,22236632,22238306,22239845,22240806,22241069,22242139,22243710,22244709,22244966,22245969,22247532,22248520,22248777,22249795,22251341,22252336,22252593,22253600,22255149,22256170,22256420,22257379,22258915,22259938,22260190,22261045,22262262,22263548,22264828,22266236,22267561,22268818,22270182,22271455,22272876,22274177,22275512,22276779,22278222,22279535,22280827,22282137,22283439,22284913,22286288,22287528,22288806,22290042,22291294,22292558,22293798,22295076,22296623,22297807,22298983,22300202,22301443,22302669,22303890,22305099,22306313,22307810,22309081,22310338,22311642,22312887,22314133,22315356,22316615,22318256,22319977,22321722,22323485,22325135,22326789,22328503,22330283,22332128,22333315,22334647,22335969,22337391,22338678,22340087,22341339,22342699,22344073,22345416,22346763,22348106,22349438,22350851,22352211,22353595,22355435,22357107,22358711,22360299,22361966,22363530,22365049,22366529,22367790,22369187,22370583,22372042,22373613,22375142,22376575,22378078,22379775,22381680,22383350,22384935,22386506,22388163,22389721,22391286,22392783,22394043,22395463,22396817,22398245,22399794,22401289,22402773,22404282,22405949,22407853,22409512,22411128,22412711,22414376,22415959,22417536,22419063,22420352,22421755,22423110,22424498,22426032,22427521,22429037,22430548,22432197,22434053,22435772,22437384,22439011,22440619,22442191,22443804,22445276,22446589,22447952,22449314,22450698,22452205,22453719,22455262,22456731,22458332,22460146,22461599,22462802,22463923,22464873,22465716,22466654,22467719,22468694,22469810,22471001,22472280,22473501,22474501,22475458,22476500,22477573,22478744,22480336,22481540,22482715,22483761,22484601,22485522,22486604,22487604,22488699,22489838,22491111,22492330,22493384,22494281,22495321,22496344,22497435,22499424,22501349,22503243,22505188,22507156,22509151,22511077,22513022,22514893,22516714,22518492,22520297,22522192,22524096,22526060,22528002,22529959,22531428,22533399,22535314,22537280,22539275,22541251,22543202,22545178,22547158,22549059,22550808,22552573,22554356,22556132,22557883,22559710,22561485,22563213,22564987,22566748,22568535,22570286,22571991,22573728,22575739,22577683,22579566,22581450,22583353,22585328,22586825,22587538,22588447,22590440,22592395,22594408,22596392,22598318,22600303,22602300,22604262,22606279,22608228,22610183,22612154,22614124,22616107,22618070,22620013,22621970,22623738,22625290,22626849,22628426,22629993,22631571,22633117,22634701,22636385,22638171,22639802,22641507,22643068,22644735,22646578,22648386,22650231,22652040,22653689,22655221,22656774,22658244,22659955,22661608,22663344,22664910,22666661,22668293,22670001,22671691,22673455,22675293,22677126,22678975,22680852,22682663,22684320,22686020,22687596,22689432,22691259,22693080,22694919,22696758,22698292,22699894,22701476,22703020,22704680,22706365,22708107,22709765,22711513,22713227,22715023,22716750,22718565,22720105,22721697,22723388,22725106,22726751,22728327,22730182,22731784,22733565,22735239,22737058,22738711,22740410,22741991,22743680,22745393,22746919,22748445,22750190,22751830,22753474,22754811,22756447,22758386,22760160,22761197,22763101,22765025,22766622,22768340,22769892,22771920,22773923,22775939,22777668,22779071,22780309,22781514,22782804,22783989,22785546,22787137,22788731,22790238,22791657,22793134,22794622,22796128,22797674,22799111,22800340,22801292,22802199,22803189,22804532,22805625,22806609,22807770,22808835,22810629,22812457,22814327,22816209,22818012,22819857,22821631,22823423,22825403,22827139,22828693,22830340,22832003,22833711,22835482,22837239,22838932,22840788,22842621,22844512,22846378,22848159,22850033,22851800,22853607,22855565,22857368,22858988,22860642,22862287,22864038,22865817,22867617,22869298,22871143,22872933,22874831,22876630,22878560,22880335,22882292,22884077,22886002,22887984,22889853,22891848,22893823,22895717,22897663,22899660,22901578,22903600,22905437,22907117,22908885,22910705,22912493,22914317,22916168,22918013,22919681,22921276,22922559,22923899,22925569,22927145,22928774,22929889,22931111,22932201,22933266,22933627,22933972,22935281,22936551,22937828,22939108,22940421,22941852,22943156,22944489,22945771,22947214,22948576,22949863,22951237,22952516,22953974,22955319,22956617,22957972,22959288,22960742,22962343,22963433,22964921,22966281,22968184,22970096,22972064,22974113,22976142,22978154,22980151,22982096,22984078,22985692,22987271,22988812,22990305,22992039,22993595,22995337,22997057,22998624,23000374,23002158,23003748,23005521,23007072,23008662,23010301,23011941,23013604,23015414,23017326,23019227,23021031,23022660,23024403,23026243,23028177,23030110,23031958,23033616,23035387,23037232,23039152,23040961,23042708,23044377,23046250,23048166,23050080,23051952,23053536,23055325,23057240,23059196,23061135,23063039,23064738,23066450,23068330,23070212,23072077,23073834,23075093,23076067,23077074,23078056,23079486,23080983,23082581,23084169,23085811,23087438,23089129,23090762,23092363,23093982,23095797,23097493,23099235,23100971,23102584,23104286,23105908,23107544,23109225,23110945,23112880,23114609,23116320,23118065,23119778,23121549,23123276,23124880,23126616,23128277,23130026,23131673,23133274,23134969,23136595,23138126,23140111,23142009,23143876,23145798,23147753,23149688,23151561,23153251,23155013,23156659,23158324,23160118,23162054,23163913,23165814,23167707,23169607,23171608,23173535,23175485,23177421,23179341,23181152,23182938,23184725,23186527,23188427,23190375,23192260,23194136,23196066,23197968,23199821,23201681,23203305,23204677,23205939,23207386,23209065,23210666,23212311,23213941,23215866,23217738,23219585,23221432,23223282,23225112,23226945,23228818,23230698,23232575,23234468,23236368,23237113,23237712,23238350,23239396,23240392,23241355,23242677,23243943,23245260,23246269,23248071,23249761,23251399,23252958,23254734,23256313,23257959,23259645,23261208,23262717,23264349,23265801,23267109,23268403,23269996,23271675,23273347,23275076,23276799,23278513,23280194,23281799,23283502,23284864,23286231,23287769,23289213,23290758,23292221,23293743,23295204,23296708,23298082,23299451,23300772,23302634,23304438,23306267,23308144,23310017,23311857,23313721,23315526,23317419,23319238,23321051,23322897,23324806,23326709,23328584,23330440,23332308,23334302,23336331,23338287,23340186,23342093,23343975,23345932,23347845,23349778,23351678,23353612,23355505,23357376,23359224,23361107,23363002,23364876,23366621,23368099,23369561,23371171,23372804,23374405,23376014,23377627,23379241,23380871,23382505,23384111,23385855,23387507,23389153,23390817,23392469,23394105,23395766,23397412,23399154,23400800,23402440,23404069,23405721,23407347,23408975,23410619,23412257,23414177,23416044,23417918,23419749,23421612,23423465,23425307,23427191,23429045,23430951,23432812,23434628,23436468,23438310,23440162,23442005,23443861,23445815,23447687,23449526,23451380,23453241,23455084,23456921,23458797,23460661,23462205,23463599,23465013,23466436,23467734,23469186,23470590,23472174,23473546,23474875,23476376,23477863,23479283,23480706,23482582,23484464,23486300,23488112,23489913,23491755,23493591,23495514,23497463,23499083,23500827,23502543,23504222,23505937,23507566,23509415,23510977,23512700,23514304,23516020,23517773,23519495,23521221,23522997,23524707,23526334,23527982,23529873,23531710,23533554,23535407,23537024,23538867,23540718,23542575,23544417,23546291,23547929,23549684,23551448,23553212,23555011,23556746,23558415,23560190,23561879,23563573,23565400,23566987,23568728,23570478,23572268,23574006,23575788,23577486,23579173,23580865,23582490,23584177,23585898,23587229,23588441,23589710,23590924,23592165,23593434,23594601,23596018,23597681,23599218,23600702,23602351,23604023,23605566,23607142,23608743,23610280,23611843,23613383,23614965,23616848,23618725,23620644,23622508,23624390,23626053,23627650,23629060,23630719,23632475,23634275,23636063,23637774,23639534,23641004,23642486,23644195,23645903,23647680,23649139,23650509,23652039,23653904,23655816,23657287,23658750,23660361,23661780,23663331,23664883,23666319,23667995,23669498,23670958,23672480,23674008,23675497,23677091,23678539,23680005,23681555,23683033,23684640,23686108,23687610,23689109,23690766,23692309,23693760,23695309,23696658,23698134,23699565,23701100,23702999,23704861,23706699,23708479,23710295,23712105,23713862,23715590,23717299,23718881,23720676,23722368,23724133,23725923,23727532,23729305,23731084,23732712,23734597,23736531,23738391,23740264,23742161,23743914,23745840,23747544,23749290,23751039,23752659,23754406,23756150,23757925,23759532,23761288,23763048,23764817,23766496,23768302,23769946,23771801,23773489,23775147,23776821,23778472,23780184,23781898,23783733,23785373,23787060,23788722,23790519,23792204,23793937,23795599,23797309,23799037,23800813,23802316,23803744,23805421,23807171,23808849,23810584,23812360,23813934,23815391,23816970,23818497,23819991,23821400,23822916,23824422,23825982,23827641,23829433,23831114,23832882,23834651,23836314,23837993,23839736,23841360,23842969,23844670,23846293,23847998,23849600,23851211,23852847,23854576,23856218,23857856,23859450,23861154,23862791,23864435,23866084,23867721,23869424,23871044,23872692,23874320,23876005,23877617,23879257,23880878,23882593,23884223,23885866,23887512,23889182,23890863,23892487,23894104,23895707,23897468,23899105,23900816,23902529,23904317,23905949,23907572,23909208,23910951,23912563,23914182,23915886,23917574,23919374,23920973,23922575,23924219,23925931,23927602,23929486,23931236,23932903,23934539,23936330,23938102,23939742,23941471,23943289,23945086,23946783,23948713,23950569,23952441,23954391,23956394,23958343,23960295,23962253,23964248,23965953,23967819,23969763,23971757,23973766,23975776,23977798,23979612,23981566,23983378,23985186,23987107,23989114,23991152,23993157,23995157,23997123,23999041,24000983,24002892,24004766,24006675,24008591,24010540,24012488,24014441,24016242,24018119,24020020,24021911,24023771,24025493,24027095,24028728,24030686,24032459,24034267,24035818,24037446,24039074,24040697,24042250,24044050,24045459,24046863,24048184,24049563,24050933,24052435,24053959,24055268,24056713,24058256,24059712,24061117,24062585,24064065,24065585,24067054,24068508,24070193,24071956,24073752,24075396,24077132,24078836,24080594,24082309,24083986,24085696,24087386,24089135,24090779,24092452,24094113,24095782,24097445,24099138,24100819,24102477,24104114,24105859,24107552,24109197,24110833,24112567,24114190,24115840,24117492,24119259,24121181,24123064,24124971,24126905,24128788,24130715,24132593,24134498,24136418,24138192,24139971,24141770,24143714,24145718,24147689,24149746,24151794,24153832,24155877,24157895,24159917,24161957,24164003,24166044,24168086,24170140,24172196,24174222,24176265,24178303,24180131,24181977,24183854,24185770,24187692,24189580,24191443,24193330,24195035,24196487,24197989,24199363,24201053,24202657,24204291,24205819,24207396,24209041,24210597,24212217,24213743,24215183,24216736,24218341,24219910,24221443,24223129,24224538,24225936,24227492,24228934,24230701,24232570,24234341,24236068,24237725,24239353,24241209,24243035,24244900,24246730,24248526,24250305,24251972,24253792,24255634,24257411,24259067,24261096,24263085,24265096,24266998,24268902,24270830,24272420,24274091,24275834,24277562,24279283,24281042,24282842,24284581,24286234,24288004,24289700,24291380,24293064,24294653,24296188,24297712,24299231,24300745,24302289,24303805,24305328,24306825,24308382,24309907,24311407,24312942,24314433,24315988,24317523,24319032,24320528,24322004,24323344,24324660,24325943,24327167,24329122,24331060,24332972,24334846,24336789,24338738,24340684,24342612,24344458,24345798,24347078,24348372,24349701,24351026,24352343,24353630,24355070,24356680,24358139,24359614,24361227,24362883,24364357,24365945,24367500,24369240,24370923,24372576,24374273,24375890,24377587,24379217,24380876,24382607,24384199,24385443,24386684,24387989,24389265,24390601,24391862,24393044,24394536,24395770,24396840,24397888,24398995,24400216,24401389,24402399,24403798,24405298,24406571,24407872,24409093,24410350,24411587,24412877,24414245,24415606,24417103,24418410,24419705,24421081,24422428,24423750,24425043,24426370,24428130,24429705,24431338,24433078,24434778,24436383,24437889,24439100,24441042,24443033,24444471,24445538,24446803,24447966,24449336,24450418,24452035,24453998,24455932,24457500,24459263,24461090,24462896,24464636,24466223,24468176,24469253,24469705,24470296,24470781,24471319,24471847,24472364,24472833,24473734,24474191,24475356,24476670,24478099,24479431,24480614,24481734,24482145,24483066,24483690,24485109,24486584,24488092,24489613,24491016,24492005,24492709,24494090,24495207,24496636,24497790,24499259,24500599,24501800,24502982,24504810,24506589,24508301,24510033,24511847,24512044,24512167,24513386,24513902,24514532,24515203,24515735,24516206,24516956,24517548,24518077,24519375,24520291,24521259,24522693,24524110,24525499,24526928,24528337,24529900,24531480,24533179,24534771,24536393,24537956,24539557,24541405,24542950,24544011,24545166,24546387,24547626,24548970,24550239,24551539,24552835,24554273,24555810,24557421,24559047,24560746,24562313,24563693,24565089,24566439,24567228,24567253,24567282,24567307,24567861,24568479,24569772,24570396,24571918,24573551,24575232,24576838,24578466,24579614,24581303,24582792,24584383,24585912,24587648,24589558,24591507,24593417,24595374,24597273,24598929,24599791,24601007,24602504,24603796,24604748,24605730,24607003,24608332,24609755,24611187,24612675,24614217,24615778,24617418,24619129,24620864,24622411,24624011,24625508,24627080,24628684,24630194,24631751,24633491,24635547,24637604,24639638,24641642,24643523,24645482,24647509,24649445,24651191,24653133,24655014,24656968,24658969,24661013,24663011,24665048,24667050,24669085,24671071,24673105,24675146,24677139,24678855,24680726,24682732,24684750,24686752,24688669,24690337,24691894,24693132,24694356,24695534,24697028,24699022,24700916,24702634,24704397,24706286,24708162,24709911,24711698,24713468,24715333,24717278,24719252,24721214,24723188,24725154,24727138,24729150,24731006,24732535,24734087,24735647,24737156,24738658,24740238,24741748,24743247,24744635,24746011,24747348,24748687,24749971,24751312,24752647,24754226,24756250,24758261,24760264,24762234,24764245,24766195,24768139,24770087,24772097,24773914,24775636,24777294,24778962,24780674,24782334,24783529,24783798,24784368,24785619,24786919,24788190,24789149,24790197,24791132,24792219,24793416,24795063,24796767,24798330,24800049,24801782,24803452,24804996,24806583,24808136,24809753,24811306,24812908,24814400,24815880,24817104,24818481,24819581,24820737,24821996,24823332,24824560,24825924,24827350,24828903,24830493,24832089,24833544,24834993,24836405,24837633,24838594,24839737,24841324,24842821,24843513,24844719,24845969,24847372,24848878,24850338,24851848,24853311,24854468,24855794,24857228,24858749,24860469,24862207,24864058,24865879,24867667,24869448,24871009,24872646,24874244,24875886,24877467,24879080,24880567,24882132,24883643,24885101,24886330,24887736,24889250,24890820,24892195,24893559,24894938,24896342,24897697,24898907,24899420,24900083,24900533,24901349,24902769,24904297,24905841,24907372,24908793,24910270,24911822,24913285,24914632,24915970,24917127,24918317,24919622,24921044,24922560,24923896,24924976,24925785,24926068,24927065,24928804,24930722,24932519,24934294,24935841,24937186,24938221,24939419,24940958,24942532,24944094,24945652,24947215,24948780,24950312,24952055,24953800,24955630,24957340,24959174,24960935,24962823,24964569,24966282,24967691,24969102,24970433,24971845,24973271,24974785,24976452,24978162,24979703,24981264,24982770,24984254,24985796,24987343,24988816,24990507,24992417,24994193,24995742,24996938,24997667,24998519,24999370,25000588,25002103,25003699,25005370,25007097,25008579,25010191,25011523,25012851,25014077,25015029,25015597,25016443,25017236,25018092,25018700,25019732,25021147,25022288,25022792,25023342,25023824,25024904,25026668,25028285,25029376,25030502,25031506,25032710,25034111,25035454,25036550,25037681,25038628,25039735,25041185,25042675,25044125,25045575,25047005,25048583,25050266,25052040,25053680,25055497,25057363,25059181,25060735,25062088,25063095,25064286,25065427,25066619,25067582,25068603,25069456,25070604,25071592,25072784,25074015,25075117,25075564,25076136,25076759,25077429,25077914,25078460,25079058,25079714,25080180,25080746,25081355,25082049,25082564,25083154,25083765,25084416,25084828,25085329,25085889,25087043,25088905,25090532,25091568,25092708,25093736,25094871,25095897,25096983,25098086,25099477,25101266,25102894,25104590,25106301,25107946,25109617,25111342,25112858,25113987,25115380,25117039,25118709,25120408,25122174,25124047,25125372,25125594,25125947,25126230,25126597,25126794,25127103,25127343,25127706,25127757,25128027,25128052,25128242,25128393,25128673,25128953,25129249,25129476,25130214,25131689,25133191,25134845,25136303,25137391,25138523,25139617,25140783,25141938,25143295,25144789,25146322,25147773,25149453,25151308,25153188,25154884,25156595,25157962,25159593,25161226,25162850,25164231,25165663,25166911,25168185,25169849,25171404,25172934,25174173,25175783,25177244,25178731,25180208,25181563,25182828,25184272,25185731,25187147,25188669,25190188,25191701,25192956,25194104,25195410,25196762,25198106,25199331,25200664,25201732,25202864,25203899,25205415,25206918,25208417,25209899,25211435,25212968,25214493,25216009,25217001,25217784,25218357,25218901,25219668,25220370,25221135,25221811,25222431,25222981,25223515,25224214,25224927,25225597,25226311,25227013,25227749,25228429,25229191,25230001,25230767,25231428,25232051,25232517,25233579,25235609,25237563,25239321,25241082,25242778,25244452,25246150,25247867,25249578,25251276,25252974,25254660,25256565,25258497,25260310,25262086,25263777,25265481,25267249,25268956,25270707,25271693,25272684,25274018,25275820,25277270,25278991,25280829,25282378,25283823,25285298,25286782,25288256,25289725,25291219,25292693,25294192,25295411,25296006,25296539,25297127,25297775,25298364,25298801,25299377,25299988,25300554,25301145,25301727,25302355,25302920,25303436,25303736,25304144,25304711,25305082,25305329,25305815,25306439,25306773,25307121,25307533,25307930,25308365,25309741,25311673,25313502,25315172,25316828,25318512,25320184,25321857,25323531,25325190,25326889,25328576,25330267,25331953,25333875,25335706,25337352,25339050,25340720,25342481,25344258,25345923,25347605,25348609,25349309,25350016,25351431,25353322,25354965,25356708,25358268,25360037,25361842,25363397,25364928,25366404,25367918,25369401,25370888,25372390,25373893,25375396,25376887,25378393,25379894,25381382,25382868,25384370,25385854,25387362,25388861,25390356,25391821,25393232,25393856,25394172,25394732,25395329,25395988,25396506,25397081,25397754,25398321,25398603,25399239,25399707,25400130,25400577,25401060,25401328,25401704,25402347,25403002,25403636,25404284,25405010,25405556,25406233,25406860,25407377,25408056,25408485,25409034,25409329,25409909,25410390,25410876,25411198,25411662,25412142,25412582,25413049,25413554,25413987,25414427,25414924,25415474,25416012,25416590,25417114,25417469,25418035,25418398,25418970,25419393,25419781,25420159,25420717,25421120,25421655,25422164,25422394,25422731,25423278,25425276,25427268,25429301,25431294,25433301,25435340,25437045,25438721,25440418,25442105,25443813,25445522,25447236,25448918,25450610,25452280,25453969,25455661,25457341,25459036,25460725,25462424,25464120,25465826,25467562,25469277,25470972,25472658,25474363,25476073,25477757,25479450,25481115,25483082,25485130,25487178,25489002,25490573,25492270,25494015,25495691,25497422,25499180,25500828,25502519,25504247,25505963,25507623,25509300,25510954,25512692,25514449,25516143,25517801,25519474,25521174,25522771,25523717,25524658,25525586,25526384,25527081,25528066,25529154,25530209,25531206,25532442,25533575,25534740,25535632,25536763,25537653,25538735,25539525,25540482,25541743,25542634,25544626,25546588,25548465,25550221,25551795,25553254,25554826,25556307,25557827,25559362,25560847,25562307,25563827,25565328,25566814,25568218,25568733,25569259,25569636,25570070,25570497,25570894,25571386,25571731,25572392,25573063,25573602,25574155,25574747,25575252,25575810,25576069,25576313,25576463,25576856,25577353,25578027,25578501,25579012,25579516,25579936,25580382,25580888,25581260,25581466,25581754,25583648,25585703,25587613,25589320,25591031,25592698,25594402,25596104,25597812,25599499,25601198,25602880,25604663,25606370,25608041,25609761,25611809,25613634,25615385,25617028,25618727,25620505,25622242,25623915,25625713,25627528,25629159,25630708,25631717,25632889,25634283,25635802,25637727,25639395,25640863,25642423,25643904,25645405,25646903,25648381,25649873,25651367,25652852,25654301,25655774,25656048,25656305,25656531,25656749,25657248,25657696,25657905,25658170,25658527,25658970,25659258,25659690,25660034,25660358,25660467,25660690,25660793,25661201,25661477,25661926,25662439,25662708,25663004,25663401,25663915,25664460,25664767,25665132,25666734,25668731,25670754,25672431,25674110,25675835,25677499,25679197,25680887,25682548,25684207,25685899,25687610,25689319,25691041,25692932,25694980,25696750,25698610,25700354,25702150,25703869,25705541,25707293,25709100,25710911,25712788,25714129,25714720,25715237,25716113,25717191,25717990,25719407,25721112,25722823,25724565,25726033,25727514,25729019,25730517,25731996,25733462,25734193,25734612,25734999,25735343,25735673,25736149,25736460,25736879,25737329,25737797,25738110,25738573,25738942,25739213,25739443,25739885,25740363,25741681,25743644,25745388,25747072,25748773,25750440,25752116,25753810,25755497,25757208,25759209,25760999,25762744,25764392,25766108,25767882,25769707,25771522,25772378,25773644,25775029,25776590,25778213,25779764,25781252,25782753,25784110,25784678,25785196,25785640,25786105,25786649,25787157,25787709,25788248,25788584,25788993,25789315,25790369,25792288,25793946,25795603,25797251,25798929,25800596,25802573,25804274,25805886,25807592,25808981,25810387,25812012,25813624,25815180,25816631,25818149,25819639,25821137,25822639,25824126,25825621,25827105,25828619,25830110,25831632,25833116,25834608,25836108,25837598,25838929,25839450,25839916,25840416,25840731,25841007,25841486,25841970,25842337,25842585,25843104,25843590,25844081,25844512,25844896,25845316,25845718,25846183,25846569,25847046,25847352,25847522,25847724,25848158,25848411,25848706,25848907,25849102,25849433,25849745,25850050,25850403,25850669,25851045,25851276,25851637,25852066,25852455,25852868,25853184,25853608,25853949,25854427,25854745,25855168,25855477,25855755,25856119,25856518,25856818,25857274,25857790,25858234,25858997,25860983,25862918,25864873,25866855,25868763,25870414,25872086,25873765,25875446,25877132,25878818,25880484,25882162,25883883,25885604,25887282,25888963,25890627,25892307,25893980,25895661,25897334,25899021,25900685,25902368,25904037,25905718,25907392,25909328,25911376,25913380,25915000,25916619,25918252,25919895,25921538,25923246,25925057,25926751,25928482,25930162,25931850,25933442,25935067,25936735,25938439,25940130,25941778,25942700,25943337,25944014,25944614,25945255,25945840,25946866,25948206,25949749,25950902,25952057,25953047,25954499,25955989,25957487,25958739,25960247,25961649,25963103,25964987,25966801,25968629,25970418,25971998,25973548,25975021,25976490,25977973,25979469,25980940,25982453,25983960,25985444,25986940,25988443,25989616,25990143,25990638,25991293,25991979,25992517,25993037,25993467,25993946,25994328,25994488,25994980,25995258,25995718,25996189,25996791,25997223,25997498,25997943,25998536,25999116,25999814,26000414,26001001,26001325,26001870,26002160,26002547,26003083,26003779,26004499,26005161,26005559,26005918,26006315,26006880,26007199,26007382,26008786,26010773,26012751,26014733,26016438,26018157,26019818,26021533,26023221,26024912,26026598,26028305,26030004,26031702,26033413,26035163,26036857,26038577,26040278,26041999,26044036,26046084,26047860,26049599,26051341,26053096,26054891,26056668,26058422,26060181,26061912,26063713,26065479,26067253,26069020,26070545,26071497,26072381,26073608,26075003,26076613,26078091,26079652,26081605,26083373,26084956,26086529,26088224,26089759,26091249,26092732,26094236,26095731,26097222,26098719,26100210,26101692,26103179,26104677,26106185,26107678,26109166,26110630,26112117,26113584,26115060,26116542,26118050,26119547,26120841,26121433,26122102,26122783,26123336,26123954,26124522,26125040,26125680,26126310,26126862,26127383,26127739,26128170,26128714,26129279,26129738,26130165,26130654,26131216,26131681,26132374,26132800,26133374,26133981,26134351,26134769,26135347,26135829,26136340,26136930,26137271,26137838,26138204,26138623,26139107,26139615,26139979,26140285,26140676,26141175,26141630,26142181,26142713,26143066,26143329,26143812,26144226,26144519,26144992,26145347,26145589,26145917,26146257,26146698,26147190,26147668,26148098,26148310,26148909,26149379,26149679,26149984,26150342,26150836,26151250,26151546,26151857,26152451,26152955,26153360,26153806,26154253,26154601,26155220,26155819,26156489,26158545,26160598,26162647,26164700,26166756,26168809,26170830,26172576,26174301,26176046,26177791,26179577,26181340,26183091,26184793,26186535,26188262,26189999,26191733,26193425,26195164,26196913,26198660,26200429,26202169,26203929,26205688,26207431,26209198,26210911,26212627,26214347,26216121,26217876,26219658,26221407,26223135,26224893,26226662,26228384,26230136,26231966,26234014,26236062,26238110,26240158,26242099,26243803,26245597,26247423,26249284,26251170,26252938,26254743,26256536,26258362,26260138,26261835,26263618,26265453,26267255,26269071,26270894,26272697,26274513,26276360,26278207,26280010,26281772,26283606,26285458,26287333,26289165,26291004,26292843,26294687,26296564,26298421,26300225,26301608,26302475,26303265,26304123,26304817,26305741,26307113,26308416,26309839,26310948,26312167,26313655,26314867,26315790,26316607,26317481,26318694,26320018,26321546,26322818,26324803,26326750,26328605,26330363,26331997,26333452,26335087,26336659,26338256,26339786,26341271,26342771,26344279,26345799,26347315,26348818,26350256,26351730,26353227,26354729,26356189,26357686,26359168,26360695,26362197,26363685,26365189,26366693,26368177,26369669,26370522,26371045,26371722,26372326,26372822,26373273,26373610,26374197,26374777,26375379,26376026,26376591,26377203,26377896,26378393,26378894,26379343,26379938,26380530,26380997,26381380,26381833,26382324,26382904,26383493,26383862,26384379,26384818,26385198,26385783,26386210,26386425,26386663,26387061,26387492,26387898,26388231,26388639,26388844,26389336,26389714,26390204,26390496,26390783,26391239,26391609,26392137,26392404,26392757,26392918,26393386,26393790,26394114,26394287,26394495,26394692,26394964,26395258,26395823,26396314,26396772,26397333,26397759,26398248,26398790,26400836,26402825,26404764,26406743,26408721,26410650,26412291,26413967,26415655,26417339,26418998,26420712,26422427,26424118,26425802,26427484,26429126,26430782,26432476,26434192,26435888,26437568,26439277,26440986,26442681,26444356,26446033,26447725,26449384,26451069,26452737,26454410,26456076,26457794,26459842,26461890,26463883,26465483,26467178,26468887,26470623,26472402,26474178,26475850,26477483,26479166,26480952,26482681,26484468,26486174,26487910,26489635,26491353,26493053,26494771,26496462,26498218,26499626,26500467,26501159,26501751,26502271,26503023,26503759,26504748,26505804,26506722,26507422,26508161,26508782,26509523,26510235,26510900,26511658,26512339,26513060,26513458,26513799,26514573,26515222,26516177,26516872,26517440,26517961,26518700,26520271,26520885,26522496,26524170,26525963,26527747,26529517,26531183,26532852,26534361,26535995,26537613,26539145,26540626,26542110,26543594,26545073,26546551,26548030,26549517,26550994,26552451,26553934,26555427,26556889,26558372,26559837,26561309,26562775,26564259,26565740,26567199,26568671,26570163,26571651,26573133,26574609,26576096,26577598,26579066,26580540,26581989,26583468,26584910,26586384,26587850,26589313,26590784,26592268,26593714,26595171,26596645,26598110,26599600,26601090,26602577,26604041,26605499,26606970,26608457,26609895,26611349,26612774,26614185,26615617,26617094,26618592,26620067,26621499,26622952,26624433,26625893,26627377,26628839,26630325,26631812,26633269,26634756,26636183,26637653,26639125,26640598,26642092,26643568,26645037,26646477,26647836,26648398,26648887,26649307,26649939,26650407,26650877,26651164,26651654,26652155,26652402,26652703,26653306,26653876,26654348,26654971,26655401,26655894,26656532,26657153,26657643,26658326,26658754,26659367,26659907,26660289,26660822,26661449,26662059,26662619,26663063,26663519,26663978,26664484,26665031,26665543,26665989,26666486,26667038,26667536,26668064,26668690,26669253,26669955,26670466,26670807,26671090,26671613,26672092,26672554,26673138,26673720,26674373,26674897,26675427,26675997,26676457,26677037,26677410,26677805,26678349,26678797,26679268,26679685,26680214,26680729,26681074,26681536,26682014,26682403,26682981,26683362,26683908,26684268,26684869,26685485,26686085,26686743,26687343,26687957,26688488,26689038,26689580,26690078,26690679,26691209,26691483,26691906,26692238,26692761,26693209,26693709,26694217,26694561,26694859,26695352,26695766,26696079,26696548,26697042,26697549,26697890,26698284,26698803,26699394,26699902,26700431,26701014,26701391,26701645,26702108,26702492,26702700,26702901,26703296,26703855,26704398,26704930,26705279,26705643,26706125,26706440,26706784,26707077,26707438,26707772,26708341,26708741,26709188,26709706,26710157,26710731,26711365,26711867,26712412,26712962,26713536,26714035,26714454,26714887,26715342,26715903,26716481,26717025,26717526,26717985,26718519,26719057,26719374,26719637,26720110,26720586,26721007,26721578,26722109,26722589,26723138,26723599,26723918,26724264,26724820,26725348,26725874,26726299,26726761,26727244,26727682,26728133,26728757,26729342,26729792,26730274,26730762,26731230,26731700,26732280,26732905,26733424,26733816,26734162,26734706,26735189,26735566,26736083,26736679,26737036,26737404,26737820,26738135,26738438,26738702,26739080,26739477,26739817,26740152,26740373,26740956,26741490,26742101,26742639,26743133,26743435,26743791,26744389,26744905,26745409,26745874,26746397,26746886,26747362,26747857,26748358,26748823,26749362,26749675,26750018,26750394,26750760,26751397,26751941,26752462,26752883,26753295,26753818,26754324,26754704,26755306,26755862,26756326,26756822,26757291,26757773,26758293,26758797,26759201,26759688,26760193,26760344,26760529,26761047,26761584,26762113,26762718,26763180,26763741,26764269,26764765,26765285,26765665,26766408,26768317,26770256,26772207,26774121,26776047,26777996,26779998,26781949,26783932,26785910,26787851,26789843,26791782,26793731,26795731,26797697,26799630,26801643,26803695,26805569,26807242,26808865,26810503,26812180,26813866,26815583,26817304,26819026,26820720,26822386,26824082,26825751,26827458,26829137,26830830,26832504,26834188,26835874,26837555,26839226,26840900,26842592,26844279,26845976,26847663,26849353,26851019,26852714,26854387,26856062,26857752,26859438,26861114,26862793,26864475,26866157,26867854,26869524,26871219,26872906,26874570,26876229,26877878,26879552,26881257,26882908,26884599,26886264,26887943,26889581,26891245,26892930,26894602,26896258,26897933,26899638,26901330,26903013,26904699,26906384,26908057,26909721,26911406,26913078,26914724,26916441,26918163,26919845,26921517,26923186,26924841,26926507,26928200,26929846,26931508,26933188,26934831,26936470,26938136,26939806,26941493,26943155,26944825,26946504,26948163,26949848,26951568,26953245,26954952,26956647,26958335,26960062,26961733,26963396,26965095,26966818,26968514,26970195,26971868,26973564,26975236,26976913,26978595,26980294,26981987,26983656,26985554,26987602,26989650,26991698,26993746,26995794,26997842,26999890,27001938,27003986,27006034,27007900,27009523,27011104,27012814,27014571,27016353,27018100,27019823,27021577,27023315,27024976,27026634,27028302,27029992,27031702,27033368,27035105,27036857,27038524,27040243,27041950,27043696,27045427,27047137,27048806,27050395,27052125,27053840,27055560,27057199,27058922,27060523,27062219,27063875,27065583,27067261,27068866,27070594,27072311,27074042,27075810,27077582,27079294,27080950,27082664,27084367,27086076,27087832,27089574,27091266,27092876,27094592,27096370,27098049,27099578,27101035,27102613,27104233,27105948,27107697,27109348,27111137,27112960,27114665,27116398,27118096,27119755,27121546,27123313,27124995,27126641,27128385,27130115,27131885,27133671,27135384,27137100,27138127,27138999,27139732,27140655,27141533,27142236,27143040,27143780,27144374,27145098,27145662,27146267,27146861,27147555,27147773,27148122,27148797,27149464,27150239,27150892,27151785,27152421,27153061,27153837,27154621,27155409,27156197,27156915,27157701,27158568,27159239,27160089,27160950,27161720,27162501,27163296,27164183,27164879,27165643,27166342,27167080,27167849,27168537,27169297,27170044,27170729,27171559,27172196,27173045,27173889,27174479,27175089,27175394,27175824,27176470,27177027,27177879,27178468,27178855,27179574,27180137,27180980,27181825,27182760,27183517,27184123,27184576,27185088,27185707,27186329,27187159,27187733,27188270,27188915,27189430,27190036,27190549,27191169,27191926,27192723,27193352,27194090,27194977,27195506,27195994,27196933,27197416,27197950,27198442,27199358,27200124,27201013,27201660,27202360,27203096,27203718,27204487,27205101,27205848,27206589,27207138,27207801,27208520,27209074,27209873,27210451,27210931,27211486,27211927,27212744,27213530,27214408,27215351,27215946,27216670,27217467,27218217,27218500,27219364,27220182,27220849,27221475,27222165,27222946,27223617,27224247,27224898,27225679,27226392,27226968,27227689,27228166,27228788,27229505,27230295,27230718,27231092,27231430,27231720,27232042,27232317,27232708,27233130,27233413,27233711,27234017,27234292,27234595,27235033,27235519,27236020,27236752,27237249,27237576,27238121,27238836,27239366,27240125,27240805,27241339,27242060,27242849,27243400,27244078,27244774,27245714,27246267,27246692,27247073,27247565,27248028,27248335,27248811,27249167,27249367,27249908,27250237,27250546,27250857,27251103,27251305,27251890,27252468,27252940,27253599,27254327,27255018,27255399,27255617,27255826,27256066,27256320,27256472,27256654,27256880,27257468,27258748,27260639,27261950,27263865,27265752,27267699,27269616,27271529,27273461,27275402,27277342,27279258,27281231,27283140,27285050,27286914,27288722,27290623,27292460,27294344,27295861,27297388,27298854,27300342,27301818,27303311,27304797,27306272,27307772,27309265,27310623,27311090,27311571,27312054,27312578,27313033,27313463,27313981,27314442,27314915,27315160,27315662,27316100,27316620,27317050,27317510,27318110,27318355,27318759,27319196,27319492,27319920,27320264,27320594,27320951,27321345,27321647,27322128,27322401,27322681,27323072,27323504,27324248,27326233,27328179,27330147,27331834,27333514,27335228,27336935,27338629,27340351,27342025,27343745,27345463,27347156,27348835,27350510,27352182,27353858,27355658,27357706,27359545,27361342,27363049,27364866,27366620,27368331,27370099,27371908,27373680,27375409,27377096,27378816,27380035,27380802,27381616,27382711,27384276,27385600,27386935,27388109,27389723,27391374,27393118,27394647,27396096,27397625,27399124,27400592,27402034,27403537,27405032,27406538,27408029,27409506,27409896,27410202,27410659,27411122,27411493,27412199,27412738,27413321,27413852,27414452,27414983,27415467,27415874,27416227,27416492,27416945,27417402,27417772,27418068,27418469,27418791,27419235,27419792,27420128,27420434,27420948,27421208,27421430,27422671,27424672,27426727,27428426,27430110,27431822,27433534,27435271,27436982,27438693,27440367,27442079,27443777,27445464,27447175,27448858,27450741,27452789,27454456,27456077,27457874,27459722,27461572,27463307,27465042,27466830,27468681,27470443,27472226,27474008,27474956,27475698,27476570,27477716,27478712,27480085,27481403,27482984,27484662,27486371,27487962,27489558,27491149,27492647,27494134,27495624,27497110,27498595,27500097,27501583,27503075,27504545,27506016,27507480,27508977,27510445,27511896,27513378,27514869,27516356,27517836,27519316,27520788,27522237,27523708,27525175,27526676,27528148,27529621,27531110,27532588,27534071,27535551,27537036,27538522,27540027,27541515,27542976,27544472,27545224,27545862,27546447,27547096,27547771,27548429,27549062,27549592,27550174,27550723,27551297,27551942,27552507,27553128,27553737,27554366,27554981,27555591,27556147,27556693,27557342,27557984,27558581,27559152,27559681,27560351,27560955,27561554,27562167,27562743,27563257,27563732,27564229,27564903,27565510,27566038,27566580,27567096,27567637,27568216,27568766,27569318,27569871,27570517,27571079,27571492,27571867,27572078,27572430,27572857,27573214,27573730,27574196,27574612,27575057,27575593,27576278,27576812,27577154,27577334,27577525,27577899,27578030,27578245,27578589,27579052,27579510,27580017,27580489,27581017,27581695,27582187,27582776,27583385,27584002,27584628,27585189,27585691,27586237,27586640,27587210,27587687,27588333,27588914,27589484,27589762,27590258,27590747,27591278,27591780,27592075,27592334,27592680,27593280,27593840,27594450,27595017,27595496,27595903,27596504,27597117,27597597,27598169,27598759,27599386,27599936,27600495,27600953,27601542,27603146,27605157,27607141,27609128,27611175,27613075,27615048,27616996,27618977,27620969,27622687,27624398,27626106,27627818,27629523,27631227,27632920,27634618,27636336,27638003,27639718,27641408,27643099,27644797,27646509,27648204,27649896,27651576,27653277,27654981,27656617,27658282,27659940,27661593,27663273,27664944,27666618,27668307,27670011,27671687,27673370,27675041,27676737,27678428,27680123,27681816,27683478,27685141,27686813,27688510,27690184,27691850,27693509,27695203,27696865,27698528,27700543,27702591,27704639,27706687,27708682,27710433,27712204,27713910,27715578,27717237,27718949,27720674,27722463,27724211,27725957,27727698,27729365,27731085,27732800,27734422,27736165,27737797,27739504,27741214,27742960,27744692,27746396,27748149,27749901,27751617,27753216,27754824,27756526,27758265,27759976,27761699,27763372,27764421,27765337,27766216,27767086,27767825,27768642,27769500,27770286,27771181,27771950,27772999,27773989,27774927,27775743,27776735,27777637,27778969,27779993,27781139,27782323,27783401,27784535,27785785,27786873,27788043,27789263,27790709,27792079,27793456,27794419,27795496,27796774,27797519,27798340,27799090,27799590,27800356,27800863,27801289,27802050,27802987,27803929,27805064,27806189,27807322,27808211,27808773,27809285,27810133,27811400,27812392,27813327,27814442,27815907,27817763,27819617,27821472,27823339,27825255,27827188,27829089,27831040,27832885,27834454,27835972,27837458,27838939,27840430,27841914,27843409,27844876,27846343,27847831,27849326,27850815,27851759,27852165,27852380,27852852,27853399,27853731,27854140,27854655,27855130,27855485,27855642,27855813,27856061,27856370,27856630,27857013,27857504,27857842,27858342,27858755,27859067,27859453,27859845,27860289,27860715,27860965,27861340,27861668,27862001,27862430,27862675,27863122,27863466,27863826,27864755,27866739,27868716,27870739,27872383,27874088,27875735,27877442,27879128,27880807,27882505,27884207,27885921,27887605,27889300,27891016,27892718,27894406,27896120,27898168,27900104,27901779,27903484,27905258,27907002,27908742,27910522,27912329,27914103,27915839,27917586,27919299,27920961,27921592,27922391,27923743,27925227,27925946,27926712,27927798,27929424,27931252,27933055,27934588,27936204,27937698,27939183,27940682,27942176,27943684,27945180,27945820,27946313,27946879,27947505,27947992,27948405,27948979,27949464,27949803,27950242,27950682,27951133,27951304,27951639,27952018,27952504,27952908,27953201,27953615,27954008,27954393,27954703,27955462,27957390,27959339,27961041,27962749,27964464,27966151,27967866,27969526,27971189,27972874,27974568,27976281,27978329,27980062,27981845,27983645,27985400,27987133,27988855,27990609,27992455,27993970,27994736,27995523,27997155,27998896,28000405,28001782,28003356,28005026,28006494,28007963,28009313,28010802,28012288,28013766,28015271,28016732,28018209,28019680,28021158,28022669,28024179,28025659,28027150,28028638,28029892,28030466,28030861,28031417,28032032,28032478,28033079,28033495,28033999,28034540,28035030,28035505,28036175,28036736,28037303,28037592,28038010,28038372,28038688,28039138,28039584,28040149,28040528,28041028,28041347,28041566,28041797,28042387,28042992,28043641,28044209,28044820,28045346,28045810,28046390,28046744,28047215,28047782,28048196,28048865,28049446,28049876,28050328,28050844,28051134,28051766,28053752,28055722,28057733,28059761,28061452,28063185,28064893,28066594,28068285,28069963,28071642,28073302,28075012,28076742,28078407,28080082,28081752,28083473,28085192,28086907,28088631,28090361,28092087,28093789,28095779,28097827,28099738,28101467,28103151,28104898,28106651,28108347,28110030,28111720,28113357,28115042,28116770,28118551,28120294,28122065,28123829,28125610,28126816,28127716,28128454,28129458,28131085,28132687,28134043,28135570,28136982,28138614,28140038,28141843,28143675,28145430,28147059,28148476,28149919,28151408,28152889,28154378,28155843,28157336,28158818,28160300,28161772,28163247,28164730,28166228,28167705,28169182,28170611,28171110,28171624,28172221,28172746,28173257,28173656,28174197,28174767,28175340,28175700,28176125,28176610,28176968,28177371,28177609,28178037,28178499,28179052,28179621,28180032,28180551,28181117,28181516,28181961,28182164,28182401,28182601,28183070,28183504,28183850,28184070,28184138,28184348,28184701,28184964,28185209,28185551,28186090,28186479,28186919,28187348,28187587,28187896,28188238,28188486,28190254,28192213,28194126,28196154,28197897,28199600,28201282,28202956,28204641,28206319,28208009,28209730,28211405,28213060,28214728,28216398,28218100,28219787,28221458,28223130,28224807,28226475,28228158,28229840,28231776,28233824,28235798,28237506,28239215,28240882,28242657,28244380,28246155,28247882,28249543,28251230,28252936,28254547,28256313,28257949,28259623,28261424,28262759,28263450,28264177,28264680,28265633,28266521,28267187,28268042,28268879,28269679,28270453,28270958,28272185,28273470,28275247,28276958,28278565,28280209,28281875,28283362,28284842,28286338,28287836,28289344,28290837,28292315,28293766,28295256,28296745,28298252,28299734,28301252,28302734,28304251,28305742,28307235,28308663,28310138,28311640,28313175,28314697,28315336,28315893,28316498,28316843,28317243,28317745,28318256,28318841,28319391,28319814,28320249,28320702,28321270,28321743,28321859,28322406,28322970,28323507,28323970,28324400,28324810,28325130,28325322,28325492,28326004,28326584,28327116,28327642,28328219,28328726,28329215,28329648,28329994,28330394,28330919,28331445,28331962,28332427,28332736,28333052,28333567,28333914,28334268,28334469,28334579,28334827,28335401,28335896,28336362,28336876,28337263,28337581,28338036,28338470,28338850,28339224,28339518,28339685,28340027,28340438,28340862,28341227,28341678,28342171,28342554,28342861,28343326,28343754,28344209,28344602,28345950,28347959,28349995,28351978,28353978,28356028,28357905,28359625,28361305,28362942,28364604,28366296,28367999,28369641,28371328,28373044,28374717,28376430,28378127,28379812,28381484,28383175,28384858,28386547,28388245,28389950,28391651,28393339,28395001,28396671,28398360,28400074,28401770,28403444,28405138,28406847,28408552,28410272,28412294,28414342,28416390,28418376,28420041,28421765,28423371,28425021,28426776,28428293,28430104,28431839,28433623,28435374,28437096,28438797,28440532,28442236,28443940,28445702,28447411,28449102,28450822,28452576,28454430,28456055,28457833,28459628,28461460,28462506,28463129,28463654,28464287,28464831,28465549,28466254,28466978,28467629,28468030,28468245,28468744,28469473,28470170,28470551,28471070,28471497,28471763,28472275,28472718,28473051,28473286,28473628,28474714,28475954,28476448,28478070,28479766,28481536,28483326,28485115,28486848,28488385,28489809,28491296,28492788,28494303,28495809,28496935,28497428,28497667,28497899,28498160,28498589,28498875,28499027,28499282,28499532,28499737,28500252,28500679,28501028,28501411,28501891,28502414,28504018,28505986,28507654,28509324,28511024,28512726,28514399,28516064,28517744,28519631,28521460,28523233,28524973,28526748,28528441,28530061,28531021,28531874,28533042,28534319,28535980,28537641,28539265,28540786,28542298,28543798,28545295,28546767,28548265,28549739,28551237,28552724,28554198,28555676,28557167,28558670,28560159,28561642,28563129,28564606,28566115,28566833,28567451,28568076,28568637,28569190,28569717,28570241,28570766,28571326,28571851,28572380,28572942,28573358,28573972,28574567,28575040,28575673,28576063,28576525,28577130,28577705,28578244,28578751,28579350,28579960,28580260,28580761,28581358,28581855,28582240,28582559,28583077,28583525,28584077,28584622,28585012,28585413,28585854,28586406,28586866,28587313,28587957,28588303,28588901,28589480,28590091,28590758,28591194,28591542,28592182,28592688,28593117,28593630,28594225,28594607,28595228,28595792,28596383,28596992,28597597,28599038,28601088,28603109,28605149,28607181,28609022,28610730,28612442,28614155,28615857,28617548,28619251,28620961,28622672,28624368,28626046,28627725,28629417,28631097,28632813,28634487,28636214,28637895,28639606,28641278,28642948,28644627,28646288,28647998,28649709,28651431,28653244,28655292,28657340,28659181,28660931,28662703,28664437,28666185,28667828,28669549,28671233,28672993,28674814,28676600,28678440,28680266,28681933,28683576,28685328,28687128,28688923,28690350,28691081,28691850,28692710,28693411,28694336,28696023,28697617,28698892,28700224,28701952,28703615,28705152,28706551,28707627,28709340,28711177,28713029,28714768,28716615,28718202,28719736,28721280,28722785,28724270,28725754,28727232,28728711,28730202,28731677,28733150,28734626,28736125,28737587,28739080,28740567,28742053,28743559,28745081,28746564,28748061,28749554,28751061,28752437,28752945,28753017,28753296,28753478,28753960,28754510,28755015,28755466,28755914,28756419,28757042,28757677,28757921,28758322,28758787,28759133,28759569,28759870,28760425,28760988,28761541,28761863,28762246,28762413,28762838,28763173,28763378,28763933,28764289,28764906,28765448,28765907,28766388,28766904,28767437,28767723,28768027,28768585,28768982,28769475,28770078,28770672,28771225,28771730,28771971,28772198,28772646,28773033,28773490,28773991,28774432,28774978,28775569,28776110,28776735,28777320,28777818,28778327,28778780,28779108,28779570,28780047,28780220,28780340,28780801,28781169,28781663,28781975,28782302,28783899,28785934,28787930,28789959,28792005,28793986,28795643,28797345,28799034,28800713,28802360,28804053,28805719,28807363,28809025,28810717,28812405,28814078,28815764,28817462,28819177,28820848,28822560,28824236,28825911,28827615,28829312,28831007,28832703,28834422,28836131,28837805,28839501,28841177,28842832,28844597,28846645,28848693,28850741,28852479,28854207,28855967,28857700,28859462,28861166,28862797,28864526,28866251,28867921,28869611,28871417,28873186,28874991,28876688,28878436,28880160,28881813,28883585,28885304,28886948,28888524,28890254,28891238,28892074,28892779,28893560,28894361,28895080,28895795,28896513,28897088,28897808,28898601,28899611,28900623,28901682,28902510,28903231,28904103,28905104,28906273,28907257,28908185,28909200,28910205,28911091,28911914,28912865,28913701,28914247,28914869,28915572,28915644,28916265,28917457,28918937,28920690,28922556,28924376,28926207,28927979,28929553,28931072,28932619,28934116,28935605,28937096,28938596,28940094,28941600,28943083,28944580,28946100,28947041,28947437,28947815,28948040,28948360,28948919,28949485,28949814,28950300,28950703,28951188,28951674,28952055,28952340,28952844,28953216,28953505,28954056,28954467,28954796,28955108,28955645,28956052,28956409,28956793,28957161,28957358,28957740,28957945,28958227,28958582,28959109,28959462,28959696,28959965,28960189,28961876,28963861,28965812,28967643,28969341,28971018,28972708,28974399,28976034,28977731,28979400,28981084,28982743,28984407,28986101,28987797,28989505,28991193,28992869,28994917,28996963,28998684,29000426,29002172,29003947,29005585,29007349,29009055,29010683,29012354,29014130,29015856,29017617,29019268,29020384,29020988,29021668,29022469,29023669,29024820,29025726,29026886,29028611,29030504,29032390,29034026,29035543,29037069,29038563,29040062,29041553,29043044,29044544,29046056,29047550,29049035,29050534,29052039,29053525,29055033,29056565,29058059,29059543,29061029,29062521,29064020,29065535,29067012,29068504,29070003,29071494,29072968,29074490,29076003,29077514,29078983,29080507,29082002,29083483,29084945,29085520,29086058,29086602,29087065,29087579,29088114,29088647,29089295,29089893,29090479,29091079,29091565,29091992,29092437,29092973,29093430,29093856,29094416,29094997,29095611,29096220,29096782,29097292,29097903,29098381,29098814,29099324,29099905,29100504,29101034,29101339,29101839,29102268,29102814,29103307,29103752,29104259,29104750,29105251,29105812,29106234,29106757,29107298,29107719,29108020,29108324,29108697,29109135,29109516,29109803,29110101,29110629,29111010,29111431,29111913,29112349,29112983,29113529,29114000,29114303,29114824,29115425,29116057,29116648,29117203,29117768,29118139,29118671,29119101,29119662,29120153,29120558,29121017,29121552,29121912,29122384,29122908,29123389,29123806,29124180,29124609,29125136,29125615,29125969,29126439,29126896,29127247,29127643,29127872,29128423,29128961,29129318,29129740,29130143,29130476,29130810,29131421,29131733,29132191,29132645,29132897,29133103,29133425,29133850,29134219,29134539,29134906,29135254,29135465,29135875,29136159,29137532,29139532,29141576,29143567,29145546,29147560,29149583,29151576,29153618,29155672,29157408,29159086,29160779,29162463,29164151,29165840,29167516,29169212,29170940,29172641,29174343,29176078,29177807,29179538,29181247,29182976,29184702,29186459,29188193,29189924,29191633,29193327,29195018,29196711,29198397,29200084,29201755,29203435,29205133,29206814,29208533,29210243,29211896,29213561,29215249,29216937,29218629,29220342,29222055,29223797,29225542,29227285,29229014,29230673,29232362,29234078,29235774,29237439,29239094,29240773,29242682,29244730,29246778,29248826,29250874,29252873,29254560,29256287,29257973,29259667,29261280,29262946,29264706,29266426,29268213,29269950,29271720,29273489,29275238,29276920,29278631,29280328,29282042,29283751,29285479,29287111,29288766,29290380,29292007,29293766,29295505,29297150,29298891,29300491,29302164,29303802,29305535,29307304,29309066,29310757,29312571,29314183,29315732,29317331,29318341,29319107,29319834,29320630,29321506,29322048,29322812,29323550,29324171,29325044,29325919,29326885,29327852,29328827,29329305,29329878,29330514,29331183,29332114,29332909,29333564,29334301,29334945,29335612,29336416,29337048,29337647,29338218,29338656,29338843,29339701,29340565,29341405,29342355,29343376,29344492,29345316,29346348,29347288,29348082,29348791,29349309,29350615,29352020,29353747,29355611,29357435,29359306,29361144,29362933,29364755,29366656,29368306,29369978,29371552,29373042,29374552,29376036,29377525,29379029,29380505,29381991,29383473,29384956,29386198,29386665,29387160,29387671,29388083,29388614,29389058,29389564,29389926,29390364,29390708,29390979,29391325,29391447,29391502,29391953,29392519,29393123,29393684,29394284,29394824,29395422,29395748,29395918,29395977,29396299,29396731,29396964,29397332,29397704,29397872,29397932,29398277,29400252,29402305,29404358,29406050,29407723,29409420,29411119,29412816,29414546,29416266,29417978,29419655,29421315,29423024,29424733,29426440,29428174,29430197,29432245,29434047,29435889,29437706,29439499,29441277,29443003,29444809,29446572,29448289,29450100,29451927,29453786,29454688,29455452,29456168,29457047,29457972,29458539,29459978,29460646,29461998,29463569,29465213,29466823,29468328,29469897,29471432,29472915,29474434,29475932,29477440,29478925,29480414,29481904,29483395,29484874,29486371,29487849,29489345,29490829,29491653,29492051,29492293,29492565,29492926,29493374,29493751,29494150,29494568,29494808,29495052,29495665,29496138,29496705,29497283,29497709,29498195,29498614,29498899,29499163,29499584,29499989,29500253,29500701,29501203,29501571,29501849,29502237,29502680,29503042,29503446,29503692,29504136,29504546,29505007,29505457,29505932,29506201,29506958,29508983,29510994,29513023,29514728,29516381,29518034,29519731,29521439,29523128,29524818,29526511,29528219,29529925,29531617,29533305,29534965,29536614,29538276,29539930,29541604,29543652,29545698,29547305,29548953,29550759,29552651,29554548,29556360,29558176,29559988,29561827,29563654,29565349,29567028,29568631,29569577,29570248,29570840,29571580,29572158,29572448,29572798,29573255,29573617,29573992,29574401,29574883,29575395,29577009,29578165,29578633,29579351,29580853,29582382,29583873,29585375,29587090,29588757,29590351,29591991,29593492,29595018,29596527,29598058,29599576,29601111,29602631,29604160,29605655,29607170,29608689,29610202,29611707,29613220,29614723,29616242,29617773,29619280,29620798,29622296,29623804,29625324,29626839,29628348,29629852,29631393,29632887,29634398,29635938,29637470,29639008,29640549,29642068,29643588,29645108,29646623,29648138,29649652,29651146,29652645,29654140,29655633,29657107,29658589,29660088,29661578,29663080,29664559,29665086,29665628,29666096,29666576,29667090,29667585,29668158,29668596,29669113,29669788,29670462,29671108,29671834,29672508,29673193,29673913,29674596,29675236,29675893,29676634,29677375,29678109,29678697,29679225,29679824,29680159,29680772,29681319,29681927,29682613,29683327,29683944,29684598,29685256,29685914,29686512,29687182,29687773,29688394,29689023,29689504,29690106,29690760,29691321,29691914,29692487,29693075,29693592,29694103,29694694,29695282,29695895,29696519,29697041,29697598,29698237,29698829,29699340,29699889,29700419,29701042,29701549,29701953,29702470,29703036,29703552,29704121,29704748,29705295,29705906,29706506,29707081,29707726,29708241,29708852,29709384,29710051,29710648,29711159,29711663,29712217,29712747,29713224,29713758,29714260,29714867,29715451,29715920,29716340,29716910,29717507,29718048,29718743,29719305,29720049,29720819,29721504,29722155,29722828,29723483,29724159,29724861,29725454,29726010,29726636,29727300,29727944,29728578,29729129,29729651,29730166,29730779,29731373,29732014,29732651,29733263,29733806,29734418,29734988,29735586,29736163,29736726,29737291,29737838,29738113,29738714,29739272,29739814,29740343,29740885,29741409,29741910,29742456,29742947,29743458,29744057,29744669,29745182,29745572,29745933,29746540,29747050,29747570,29748117,29748506,29748938,29749422,29749960,29750544,29751065,29751564,29751925,29753267,29755324,29757378,29759425,29761466,29763508,29765563,29767602,29769650,29771706,29773762,29775779,29777833,29779802,29781512,29783243,29784922,29786623,29788335,29790063,29791768,29793446,29795157,29796853,29798564,29800256,29801957,29803657,29805350,29807053,29808792,29810520,29812218,29813944,29815668,29817400,29819145,29820875,29822635,29824397,29826155,29827911,29829650,29831357,29833048,29834768,29836486,29838179,29839865,29841532,29843237,29844972,29846658,29848340,29850049,29851754,29853451,29855169,29856880,29858628,29860369,29862127,29863872,29865626,29867334,29869053,29870776,29872513,29874234,29875975,29877703,29879464,29881200,29882927,29884674,29886437,29888187,29889931,29891659,29893414,29895468,29897516,29899564,29901612,29903660,29905708,29907756,29909724,29911428,29913066,29914812,29916552,29918243,29919918,29921645,29923426,29925128,29926907,29928705,29930467,29932309,29934091,29935919,29937738,29939529,29941328,29943121,29944875,29946650,29948444,29950050,29951625,29953324,29955051,29956730,29958366,29959993,29961793,29963459,29965180,29966880,29968572,29970302,29972150,29973985,29975794,29977605,29979421,29981241,29982917,29984633,29986225,29987886,29989671,29991496,29993295,29995087,29996936,29998793,30000608,30002389,30003453,30004394,30005303,30006231,30007189,30008103,30008848,30009636,30010535,30011419,30012581,30013880,30015268,30016494,30017669,30018900,30020132,30021416,30022724,30024019,30025214,30026301,30027542,30028308,30029030,30029767,30030684,30031642,30032583,30033660,30034988,30035957,30036431,30037075,30038671,30040023,30041813,30043781,30045475,30047292,30049173,30051085,30052891,30054706,30056530,30058361,30060250,30062114,30063639,30065119,30066673,30068168,30069671,30071155,30072655,30074166,30075657,30077117,30078573,30078736,30078854,30079139,30079256,30079370,30079644,30079904,30080335,30080580,30080898,30081214,30081502,30081649,30082016,30082276,30082426,30082591,30082774,30083277,30083667,30083947,30084144,30084695,30085109,30085494,30085932,30086202,30086361,30087586,30089610,30091666,30093409,30095108,30096797,30098490,30100217,30101917,30103594,30105302,30107020,30108761,30110461,30112122,30113808,30115663,30117711,30119554,30121351,30123012,30124646,30126461,30128170,30129946,30131771,30133546,30135429,30137171,30138879,30139601,30140438,30142237,30143661,30145286,30146887,30148515,30150044,30151489,30152652,30154169,30155659,30156125,30156542,30157040,30157587,30158141,30158617,30159066,30160792,30162526,30164221,30165905,30167758,30169560,30171221,30171860,30172653,30174076,30175633,30177121,30178623,30180109,30181166,30181364,30181824,30182261,30182797,30183257,30183369,30183583,30184169,30184524,30184816,30185085,30185604,30186288,30188231,30189954,30191625,30193317,30194999,30196678,30198322,30200275,30201881,30203616,30205390,30207069,30208326,30209185,30210856,30212632,30214292,30215765,30217240,30218737,30220243,30221728,30222733,30223212,30223661,30224037,30224442,30224919,30225217,30225501,30226004,30226513,30226958,30227319,30227819,30228280,30228729,30229287,30230273,30232296,30233952,30235616,30237274,30238970,30240652,30242331,30244010,30245973,30247636,30249342,30251080,30252847,30254201,30254757,30255721,30256983,30257874,30259166,30260793,30262710,30264763,30266810,30268851,30270904,30272756,30274364,30275953,30277431,30278555,30279355,30280170,30280927,30281754,30282673,30283766,30285780,30287796,30289765,30291696,30293547,30294043,30295041,30296156,30297622,30298752,30300207,30301579,30302913,30304058,30304855,30305528,30306638,30307730,30308946,30310038,30311086,30311863,30312841,30313689,30314777,30315804,30316828,30317899,30319005,30320146,30320970,30321709,30322439,30323264,30324274,30324978,30325895,30326666,30327440,30328719,30330767,30332112,30333204,30334278,30335222,30336174,30337167,30338295,30339288,30340286,30341209,30342427,30343521,30344362,30345423,30346408,30347394,30348416,30349139,30349935,30350658,30351503,30352646,30354066,30355582,30356997,30358602,30360591,30362639,30364695,30366563,30368008,30370036,30372093,30374141,30376189,30378163,30379994,30382051,30383705,30385650,30387705,30389753,30391801,30393849,30395897,30397945,30399993,30402048,30404087,30406118,30408151,30410180,30412211,30414212,30416153,30417950,30419629,30421604,30423652,30425700,30427748,30429796,30431844,30433892,30435940,30437988,30440036,30442084,30444139,30446143,30448078,30449909,30451692,30453023,30454837,30456765,30458658,30460418,30462365,30464420,30466472,30468528,30470576,30472624,30474672,30476720,30478768,30480816,30482864,30484912,30486960,30489008,30491056,30493013,30494475,30495566,30497614,30499662,30501710,30503758,30505806,30507854,30509902,30511950,30513998,30516046,30518094,30520142,30522190,30524238,30526286,30528334,30530382,30532430,30534478,30536505,30538058,30540114,30542162,30544210,30546267,30548127,30549677,30551044,30552247,30553226,30553919,30554404,30556442,30558498,30560546,30562594,30564651,30566699,30568747,30570802,30572857,30574913,30576724,30578151,30578979,30581027,30583082,30585097,30587034,30588905,30590591,30592071,30593221,30594083,30594635,30594883,30595296,30597248,30599296,30601344,30603392,30605441,30607489,30609537,30611585,30613633,30615681,30617729,30619786,30621831,30623802,30625612,30627223,30628688,30630057,30632110,30634158,30636206,30638263,30640320,30642368,30644416,30646464,30648512,30650560,30652610,30654648,30656666,30658551,30660239,30661670,30662693,30663924,30665746,30667632,30669652,30671700,30673752,30675801,30677728,30679407,30680663,30681702,30683750,30685796,30687844,30689606,30691647,30693695,30695747,30697499,30697956,30698047,30698233,30698267,30699170,30701218,30703266,30705323,30707371,30709419,30711467,30713523,30715555,30717454,30719508,30721556,30723604,30725652,30727664,30729721,30731769,30733817,30735865,30737913,30739961,30742016,30744064,30746120,30748034,30749570,30751551,30753534,30755152,30756787,30758835,30760834,30762378,30763643,30765242,30767136,30769175,30771226,30773274,30775330,30777376,30779404,30781260,30782665,30782960,30784149,30786197,30788245,30790293,30792341,30794397,30796454,30798511,30800559,30802607,30804649,30806654,30808490,30810359,30812305,30813844,30815876,30817924,30819980,30822028,30824085,30826133,30828181,30830229,30832213,30834198,30836246,30838294,30840342,30842399,30844447,30846495,30848551,30850484,30852198,30854190,30856164,30857984,30859110,30861164,30863212,30865224,30867065,30868806,30870854,30872902,30874950,30876998,30879053,30881101,30883149,30885197,30887252,30889018,30890329,30892026,30893954,30895928,30897952,30899989,30902037,30904078,30906104,30908145,30910198,30912245,30914294,30916313,30918355,30920349,30922310,30924295,30926344,30928390,30930438,30932479,30934528,30936542,30938586,30940625,30942664,30944705,30946745,30948770,30950681,30952489,30954087,30955476,30956755,30957969,30959151,30960333,30961371,30962368,30963476,30964481,30965482,30966368,30967251,30968126,30968908,30969535,30970105,30970530,30970718,30970882,30970989,30971035,30971096,30973136,30975158,30977208,30979256,30981312,30983231,30984967,30986578,30987759,30988700,30990748,30992796,30994844,30996892,30998799,31000847,31002895,31004943,31006914,31008962,31011010,31013058,31015055,31017110,31019166,31021221,31023277,31025330,31027363,31029411,31031468,31033515,31035564,31037612,31039641,31041603,31043495,31045328,31047059,31048815,31050427,31052361,31054418,31056466,31058517,31060567,31062620,31064671,31066497,31068479,31070534,31072590,31074645,31076693,31078749,31080797,31082841,31084763,31086820,31088853,31090775,31092267,31094219,31096274,31098328,31099842,31101688,31103736,31105784,31107832,31109880,31111928,31113976,31116032,31118082,31120094,31122002,31123722,31125244,31126627,31127929,31129056,31130627,31132675,31134723,31136771,31138812,31140838,31142720,31144396,31145420,31145732,31146743,31148248,31149965,31151857,31153815,31155715,31157644,31159627,31161545,31163287,31164839,31166187,31167282,31167865,31168289,31169922,31171947,31174000,31175398,31176258,31178158,31180206,31182254,31184302,31186350,31188398,31190446,31192494,31194517,31196494,31198538,31200569,31202363,31203853,31204826,31206428,31208481,31210311,31211754,31213483,31215531,31217579,31219632,31221680,31223728,31225785,31227833,31229882,31231827,31233688,31235375,31237423,31238904,31240036,31241416,31243472,31245520,31247568,31249616,31251664,31253712,31255754,31257602,31259494,31261542,31263590,31265638,31267686,31269734,31271782,31273671,31274702,31276181,31278082,31280112,31282166,31284214,31286256,31287574,31289204,31291042,31293093,31295141,31297189,31299237,31301284,31303293,31305117,31306402,31307385,31308160,31308662,31309012,31309259,31309378,31311352,31313400,31315448,31317496,31319544,31321592,31323640,31325688,31327736,31329784,31331832,31333880,31335928,31337976,31340024,31342072,31344120,31346170,31347473,31349521,31351569,31353617,31355665,31357713,31359761,31361809,31363857,31364788,31365129,31366486,31368195,31370165,31372222,31374270,31376318,31378366,31380414,31382462,31384510,31386558,31388606,31390660,31392528,31394165,31395633,31396990,31398181,31399286,31400300,31401193,31401890,31402730,31403739,31404561,31405476,31407156,31409213,31411261,31413309,31415357,31417405,31419453,31421501,31423549,31425597,31427645,31429693,31431741,31433789,31435582,31436799,31437565,31438242,31439866,31441914,31443962,31446010,31448062,31449443,31451303,31453322,31455071,31456320,31457274,31457845,31458565,31459780,31461835,31463686,31464759,31465406,31467224,31469169,31471181,31473229,31475283,31477339,31479387,31481417,31483343,31484959,31486711,31488566,31490501,31492473,31494529,31496584,31498632,31500680,31502737,31504785,31506833,31508890,31510916,31512673,31514098,31514835,31515628,31517368,31519424,31521472,31523520,31525568,31527616,31529664,31531712,31533760,31535814,31537787,31539501,31540922,31541933,31542874,31543059,31543674,31545722,31547761,31549718,31551636,31553430,31555143,31556947,31558995,31561005,31562744,31564348,31565680,31567390,31569191,31571229,31573277,31575206,31577222,31578304,31580355,31582042,31583857,31585810,31587858,31589508,31591399,31592726,31594159,31595318,31597031,31598993,31601026,31603012,31605002,31607023,31609010,31610920,31612968,31615021,31617052,31618675,31619616,31621114,31623162,31625210,31627258,31629306,31631354,31632347,31633666,31635723,31637771,31639819,31641876,31643209,31643591,31645577,31647634,31649669,31651717,31653765,31655813,31657861,31659804,31661859,31663891,31665402,31667450,31669477,31671290,31673347,31675363,31677053,31679080,31681106,31682488,31683806,31685819,31687204,31688071,31690119,31692167,31694215,31696258,31697351,31697468,31697673,31699198,31701251,31703307,31705355,31707412,31709468,31711524,31713567,31715514,31717562,31719610,31721504,31723552,31725566,31727590,31729647,31731665,31733713,31735763,31737819,31739777,31741790,31743492,31745390,31746998,31748720,31750326,31751593,31753248,31754965,31756465,31757772,31759146,31761203,31763103,31764915,31766916,31768964,31771012,31773060,31775048,31776445,31777534,31778234,31779870,31781698,31783085,31785004,31786808,31788865,31790913,31792961,31795009,31797057,31799105,31801153,31803201,31805255,31807289,31809236,31811004,31812582,31813967,31815098,31815953,31817468,31819516,31821564,31823612,31825660,31827708,31829005,31829896,31831927,31833974,31836030,31837994,31839904,31841934,31843987,31846035,31848083,31850131,31852179,31854227,31856272,31858215,31859964,31861322,31861929,31863171,31865219,31867267,31869315,31871363,31872529,31872693,31873936,31875988,31878036,31880084,31882132,31884180,31886236,31888284,31890332,31892203,31893561,31893817,31894465,31895941,31897931,31899979,31902027,31904075,31906123,31908171,31910219,31912267,31914322,31916370,31918423,31920423,31922284,31924078,31925880,31927582,31929093,31930508,31931753,31933021,31934231,31935247,31935965,31936507,31937054,31937562,31938007,31938483,31938867,31939282,31939736,31940209,31940667,31941253,31941702,31941903,31942323,31943302,31944461,31945624,31946851,31947980,31949005,31949912,31950814,31951471,31951922,31952199,31952307,31952524,31953757,31955394,31957287,31959335,31961383,31963440,31965445,31967407,31969357,31971206,31973229,31974995,31976996,31978989,31980540,31982228,31984284,31986337,31988385,31990394,31992427,31994473,31996501,31998544,32000565,32002511,32004559,32006545,32008439,32010459,32012508,32014556,32016589,32018269,32020137,32022118,32023861,32025770,32027809,32029503,32030804,32032508,32034565,32036619,32038596,32040512,32042419,32044267,32046209,32048084,32050139,32052187,32054242,32056280,32058135,32060192,32062209,32063763,32065325,32066887,32068247,32069245,32069691,32070282,32070653,32071190,32071876,32072617,32073770,32075407,32076778,32078213,32079508,32080787,32082260,32083956,32085738,32087543,32089334,32091271,32093285,32095313,32097357,32099414,32101465,32103519,32105576,32107624,32109672,32111727,32113767,32115753,32117753,32119753,32121740,32123611,32125350,32127069,32128802,32130503,32132147,32133674,32135129,32136565,32137987,32139431,32140729,32141985,32143184,32144412,32145584,32146688,32147737,32148680,32149635,32150607,32152138,32153555,32155068,32156613,32158000,32159486,32161023,32162579,32164018,32165612,32167042,32168619,32170242,32171956,32173488,32175180,32176664,32178166,32179822,32181463,32183257,32184988,32186759,32188540,32190368,32192236,32194153,32196023,32197999,32199936,32201909,32203960,32206016,32208072,32210120,32212177,32214229,32216264,32218286,32220195,32221935,32223503,32224557,32225999,32227784,32229812,32231864,32233921,32235974,32237158,32237314,32238566,32240614,32242662,32244681,32246116,32248170,32249220,32251274,32253331,32254842,32256467,32258524,32260572,32262620,32264668,32266198,32268254,32270201,32271722,32273100,32275148,32277196,32279244,32281292,32283340,32285396,32287366,32289414,32291462,32293519,32295567,32297624,32299672,32301720,32303768,32305816,32307864,32309912,32311965,32313974,32316026,32318074,32320131,32322179,32324236,32326253,32328202,32330225,32332282,32334330,32336382,32338435,32340483,32342531,32344579,32346627,32348675,32350723,32352394,32353784,32355832,32357881,32359937,32361994,32364051,32366101,32368155,32370054,32371979,32373769,32375332,32376939,32378379,32380123,32381940,32383506,32384944,32386276,32387417,32388318,32388609,32390347,32392395,32394443,32396491,32398539,32400499,32402087,32403079,32403283,32404368,32406425,32408473,32410425,32412090,32413561,32415327,32417188,32418038,32418240,32419094,32420036,32420406,32420835,32421176,32421593,32421935,32422306,32422602,32423028,32423713,32424614,32425417,32426051,32426567,32427235,32428360,32429208,32429799,32431266,32432686,32434113,32435382,32436582,32437963,32438608,32439221,32440038,32440411,32440671,32441174,32441603,32441939,32442932,32443872,32444211,32444547,32444955,32445571,32446372,32446887,32447402,32448048,32448420,32448802,32449443,32450196,32451035,32451809,32452341,32453396,32454198,32454819,32455784,32456576,32457179,32458081,32458495,32459092,32459719,32460530,32461430,32462006,32462288,32462610,32462837,32463144,32463608,32463965,32464285,32464530,32464689,32465123,32465703,32466474,32467205,32467796,32468232,32468411,32468886,32469454,32469949,32470490,32470945,32471416,32471899,32472045,32472716,32473534,32473808,32474077,32474551,32474917,32475783,32476671,32477259,32477379,32477573,32477844,32478243,32479049,32479356,32479764,32480052,32480499,32480689,32481437,32481709,32482042,32483033,32483742,32483928,32484207,32484616,32485028,32485318,32485555,32485866,32486179,32487031,32487654,32488165,32488573,32489297,32489702,32490264,32490690,32491025,32491776,32492283,32492608,32493219,32493884,32494837,32495055,32495258,32495626,32495999,32496769,32497131,32497701,32498155,32498670,32499203,32499755,32500137,32500732,32501068,32501580,32502077,32502576,32503157,32503375,32504158,32504638,32505207,32505444,32506082,32506872,32507469,32508338,32509553,32510660,32511778,32512861,32513941,32515006,32515404,32515839,32516990,32518079,32519066,32519751,32520342,32521761,32522030,32522486,32522821,32522973,32523319,32523551,32523761,32523900,32524150,32524438,32524852,32524985,32525118,32525251,32525562,32526007,32526648,32526964,32527671,32528217,32528633,32529518,32530072,32530642,32530785,32531136,32531753,32532052,32532402,32532672,32533389,32533803,32534368,32534856,32535140,32535436,32535712,32535987,32536550,32536722,32537078,32537270,32537526,32537861,32538019,32538507,32538796,32539115,32539304,32539585,32539761,32539972,32540499,32540843,32541294,32541663,32542360,32543470,32543752,32544191,32544652,32545145,32545820,32546447,32546794,32547365,32548459,32549284,32550098,32550703,32551243,32551601,32551956,32552318,32552655,32553012,32553462,32553735,32553960,32554230,32554371,32554574,32555344,32556158,32557022,32557818,32558393,32559000,32559532,32559816,32560305,32560600,32561057,32561819,32562006,32562394,32562739,32563325,32564123,32564981,32565739,32566238,32566638,32567182,32567467,32567832,32568044,32568341,32568584,32569150,32569534,32570121,32570511,32571163,32571665,32572228,32572980,32573540,32573606,32573935,32574395,32574967,32575787,32576223,32576649,32577052,32577393,32577762,32578105,32578436,32579667,32580943,32582166,32583508,32584641,32586002,32587965,32589770,32590292,32590414,32590573,32591026,32591602,32591763,32591957,32592080,32592561,32592776,32593165,32593759,32594239,32595393,32596197,32596851,32597067,32597301,32597714,32597934,32598305,32598583,32598757,32599095,32599293,32599799,32600164,32600753,32601253,32601710,32602393,32603128,32604041,32604236,32604870,32605072,32605406,32605772,32606180,32606637,32606903,32607124,32607626,32607929,32608270,32608529,32608813,32609110,32609382,32609942,32610173,32610578,32610771,32611241,32611654,32612058,32612177,32612600,32613193,32613749,32614288,32614455,32614730,32615178,32615588,32616050,32616273,32616724,32617401,32617697,32618445,32618879,32619352,32620035,32620379,32620933,32621816,32621979,32622157,32622308,32622547,32622702,32622892,32623333,32623512,32623674,32623828,32623997,32624183,32624504,32624647,32624921,32625245,32625543,32625892,32626574,32626663,32626867,32627156,32627359,32627702,32628154,32628522,32629093,32629591,32629769,32629961,32630146,32630640,32630922,32631305,32631968,32632188,32632552,32632761,32632935,32633148,32633518,32633625,32634073,32634630,32634796,32635031,32635322,32635479,32635795,32635940,32636078,32636751,32637259,32637734,32638152,32638544,32638976,32639193,32639443,32639737,32640187,32640499,32640767,32641688,32642055,32642407,32642799,32643217,32643587,32644191,32645185,32645924,32646929,32647729,32648463,32650060,32651069,32652197,32653504,32654899,32656341,32657811,32659243,32660782,32662312,32663861,32665435,32666919,32668439,32669922,32671423,32673022,32674508,32676074,32677550,32679067,32680561,32682026,32683327,32684654,32685854,32687117,32688495,32689853,32691092,32692280,32693405,32694485,32695903,32697224,32698884,32700807,32702526,32704290,32706023,32707684,32709396,32711129,32712850,32714564,32716307,32718007,32719719,32721475,32723249,32725018,32726719,32728406,32730086,32731764,32733415,32735085,32736809,32738502,32740257,32741947,32743654,32745293,32746931,32748599,32750234,32751818,32753404,32755041,32756940,32758503,32760228,32761924,32763523,32765170,32766821,32768549,32770279,32772094,32773926,32775745,32777571,32779394,32781193,32782902,32784683,32786354,32788131,32789951,32791804,32793556,32795194,32796946,32798785,32800494,32802269,32804037,32805798,32807526,32809182,32810803,32812455,32814100,32815848,32817503,32819130,32820695,32822278,32823935,32825583,32827226,32828943,32830631,32832347,32833993,32835715,32837398,32839157,32840871,32842498,32844258,32845971,32847667,32849385,32851048,32852685,32854365,32856056,32857683,32859356,32860952,32862556,32864113,32865627,32867143,32868609,32870308,32871416,32872501,32873356,32874058,32874933,32876246,32877654,32879123,32880425,32881557,32882709,32883907,32885054,32886426,32887800,32889028,32890338,32891630,32892922,32894065,32895051,32895917,32896637,32897505,32898448,32899178,32899811,32900666,32901709,32902796,32903862,32905059,32906644,32908204,32909617,32911080,32912460,32914074,32915504,32916974,32918528,32920067,32921436,32922734,32924018,32925256,32925991,32926229,32926441,32926690,32926912,32927134,32928029,32929447,32930882,32932079,32933664,32935308,32936715,32937941,32939428,32940518,32941255,32942626,32943933,32944778,32946231,32947834,32949248,32950888,32952456,32954049,32955477,32956824,32958145,32959781,32961078,32962525,32964111,32965809,32967235,32968653,32970024,32971610,32973013,32974669,32975855,32977458,32979161,32980737,32982472,32983954,32985460,32987222,32988427,32990148,32991407,32993090,32994532,32995695,32997238,32998755,33000435,33001938,33003313,33004807,33006243,33007631,33009190,33010835,33012428,33013855,33015107,33016728,33018169,33019738,33021345,33022711,33024092,33025595,33027281,33028530,33030148,33031306,33032765,33034269,33035893,33037110,33038529,33040009,33041667,33043258,33044920,33046047,33047611,33048946,33050509,33051533,33053145,33054593,33056289,33057283,33058793,33060277,33061744,33063110,33064586,33066129,33067734,33069329,33070950,33072496,33073844,33075253,33076957,33078458,33080206,33081461,33083266,33084536,33086376,33087754,33089338,33090561,33092357,33094027,33095554,33097060,33098524,33100409,33101810,33103204,33104979,33106652,33107872,33109488,33111195,33112918,33114763,33116173,33117854,33119615,33121360,33122899,33124616,33126371,33127644,33129329,33130642,33132240,33133807,33135549,33136876,33138590,33140277,33141847,33143435,33145031,33146600,33148438,33149910,33151712,33153241,33155133,33157012,33158922,33160869,33162921,33164921,33166972,33168990,33171023,33173033,33175069,33177091,33179130,33181150,33183200,33185257,33187295,33189337,33191327,33193358,33195358,33197386,33199410,33201444,33203492,33205540,33207569,33209609,33211658,33213675,33215697,33217722,33219762,33221805,33223846,33225887,33227935,33229963,33231982,33234002,33235833,33237822,33239856,33241896,33243940,33245979,33248011,33250039,33252079,33254092,33256080,33258070,33260051,33262033,33264051,33266045,33268070,33270110,33272136,33274182,33276237,33278226,33280194,33282187,33284187,33286192,33288173,33290202,33292221,33294250,33296299,33298329,33300323,33302281,33304282,33306299,33308283,33310297,33312347,33314393,33316443,33318472,33320485,33322467,33324448,33326479,33328495,33330535,33332562,33334610,33336662,33338708,33340764,33342789,33344842,33346867,33348896,33350893,33352944,33354936,33356977,33358982,33360917,33362891,33364851,33366832,33368803,33370824,33372764,33374704,33376705,33378697,33380672,33382618,33384628,33386615,33388609,33390532,33392497,33394464,33396472,33398450,33400450,33402376,33404361,33406374,33408333,33410277,33412287,33414254,33416241,33418192,33420165,33422161,33424151,33426114,33428094,33430063,33432047,33434071,33436063,33438073,33440065,33442040,33444050,33446006,33448022,33449940,33451939,33453906,33455900,33457894,33459873,33461861,33463808,33465788,33467766,33469768,33471725,33473731,33475740,33477732,33479737,33481756,33483749,33485750,33487747,33489720,33491711,33493678,33495658,33497668,33499673,33501623,33503555,33505546,33507579,33509540,33511522,33513565,33515589,33517603,33519585,33521620,33523642,33525591,33527637,33529639,33531650,33533675,33535706,33537703,33539723,33541758,33543767,33545766,33547739,33549722,33551733,33553755,33555745,33557716,33559536,33561527,33563583,33565629,33567680,33569643,33571613,33573528,33575431,33577177,33579091,33580969,33582883,33584630,33586564,33588390,33590355,33592347,33594324,33596162,33598089,33600030,33601871,33603743,33605591,33607573,33609518,33611480,33613382,33615316,33617228,33619153,33621040,33622878,33624882,33626846,33628747,33630711,33632524,33634494,33636347,33638229,33640077,33641967,33643927,33645914,33647803,33649833,33651811,33653712,33655573,33657416,33659334,33661192,33663145,33665115,33667018,33668960,33670966,33672925,33674901,33676661,33678607,33680339,33682326,33684271,33686229,33688155,33690032,33691999,33693942,33695899,33697721,33699740,33701699,33703686,33705477,33707192,33709019,33710755,33712658,33714530,33716406,33718223,33720058,33721913,33723756,33725721,33727653,33729563,33731499,33733414,33735302,33737236,33739151,33741040,33742954,33744851,33746745,33748691,33750582,33752575,33754472,33756427,33758317,33760191,33762120,33763958,33765857,33767661,33769564,33771487,33773282,33775232,33776752,33778528,33779859,33781592,33783417,33785157,33787036,33789003,33790938,33792907,33794887,33796860,33798859,33800781,33802754,33804762,33806720,33808676,33810654,33812427,33813855,33815287,33816709,33818150,33819631,33821161,33822543,33824157,33825639,33827076,33828631,33830304,33832075,33833687,33835320,33837222,33839240,33841223,33843155,33845168,33847143,33848959,33850899,33852829,33854838,33856823,33858746,33860729,33862648,33864609,33866442,33868299,33870262,33872272,33874283,33876179,33878198,33880101,33882034,33883938,33885814,33887804,33889765,33891778,33893672,33895729,33897663,33899578,33901464,33903313,33905320,33907243,33909264,33911155,33913121,33914974,33916877,33918776,33920638,33922608,33924585,33926636,33928548,33930500,33932440,33934307,33936203,33938077,33940072,33942090,33944073,33946012,33948012,33949932,33951780,33953698,33955622,33957587,33959531,33961446,33963391,33965327,33967231,33969191,33971107,33972991,33974734,33976489,33978118,33979781,33981455,33983141,33984929,33986631,33988312,33989970,33991675,33993399,33995105,33996831,33998533,34000184,34001876,34003551,34005256,34006986,34008698,34010429,34012066,34013713,34015371,34017083,34018820,34020575,34022259,34023868,34025447,34027114,34028890,34030599,34032266,34033889,34035541,34037195,34038857,34040617,34042357,34044074,34045734,34047367,34049034,34050801,34052593,34054360,34056017,34057617,34059256,34061016,34062905,34064764,34066521,34068263,34070033,34071823,34073691,34075528,34077371,34079169,34080950,34082796,34084529,34086320,34088046,34089763,34091441,34093157,34094887,34096521,34098115,34099873,34101605,34103324,34104935,34106790,34108431,34110066,34111864,34113564,34115099,34116822,34118539,34120269,34121912,34123679,34125429,34127190,34128876,34130661,34132448,34134261,34135906,34137655,34139407,34141134,34142885,34144641,34146412,34148369,34150278,34152281,34154287,34156278,34158233,34160145,34162081,34164002,34166017,34167991,34169980,34171992,34173973,34175948,34177949,34179916,34181912,34183892,34185868,34187834,34189825,34191825,34193816,34195800,34197761,34199752,34201726,34203675,34205647,34207668,34209666,34211663,34213626,34215608,34217571,34219556,34221532,34223506,34225472,34227432,34229422,34231384,34233349,34235310,34237307,34239271,34241234,34243189,34245172,34247118,34249090,34251045,34252996,34254967,34256922,34258893,34260857,34262825,34264802,34266765,34268724,34270696,34272650,34274623,34276575,34278543,34280496,34282460,34284413,34286378,34288330,34290300,34292252,34294224,34296190,34298074,34300009,34301905,34303808,34305713,34307633,34309519,34311447,34313348,34315255,34317183,34319085,34320983,34322900,34324810,34326719,34328656,34330512,34332429,34334332,34336171,34338069,34339993,34341825,34343713,34345651,34347489,34349366,34351315,34353160,34355015,34356968,34358806,34360655,34362614,34364465,34366281,34368241,34370078,34371891,34373865,34375694,34377519,34379405,34381196,34383026,34384916,34386684,34388526,34390414,34392164,34394031,34395928,34397681,34399559,34401446,34403225,34405104,34406965,34408744,34410634,34412467,34414281,34416175,34417967,34419837,34421754,34423573,34425445,34427353,34429161,34431054,34432912,34434771,34436683,34438511,34440364,34442278,34444081,34445967,34447833,34449672,34451586,34453430,34455277,34457186,34459037,34460943,34462826,34464682,34466579,34468461,34470315,34472207,34474091,34475940,34477836,34479717,34481562,34483450,34485334,34487179,34489069,34490956,34492802,34494690,34496583,34498430,34500319,34502211,34504052,34505952,34507865,34509702,34511612,34513519,34515358,34517276,34519183,34521029,34522944,34524834,34526681,34528603,34530477,34532335,34534259,34536120,34537979,34539899,34541761,34543641,34545549,34547405,34549268,34551192,34553111,34555025,34556944,34558850,34560779,34562691,34564609,34566536,34568453,34570367,34572288,34574205,34576114,34578028,34579930,34581855,34583786,34585766,34587739,34589736,34591723,34593700,34595687,34597685,34599674,34601652,34603634,34605635,34607545,34609510,34611393,34613319,34615205,34617123,34619020,34620945,34622778,34624710,34626617,34628500,34630430,34632399,34634365,34636320,34638288,34640250,34642194,34644180,34646102,34648091,34650022,34652003,34653939,34655916,34657858,34659832,34661723,34663673,34665502,34667494,34669327,34671287,34673156,34675066,34676956,34678841,34680758,34682609,34684582,34686408,34688394,34690237,34692177,34694018,34695896,34697758,34699586,34701481,34703280,34705212,34707015,34708898,34710757,34712596,34714457,34716277,34718195,34719979,34721900,34723722,34725596,34727450,34729499,34731544,34733569,34735577,34737618,34739615,34741641,34743661,34745674,34747717,34749739,34751778,34753835,34755884,34757903,34759905,34761738,34763728,34765734,34767779,34769833,34771887,34773907,34775938,34777965,34779973,34781984,34783997,34786032,34788065,34790101,34792149,34794184,34796222,34798267,34800293,34802261,34804215,34806221,34808223,34810249,34812300,34814336,34816341,34818359,34820348,34822340,34824331,34826304,34828295,34830324,34832361,34834377,34836389,34838403,34840421,34842403,34844407,34846401,34848379,34850363,34852394,34854439,34856450,34858470,34860488,34862491,34864468,34866470,34868457,34870423,34872399,34874415,34876454,34878466,34880515,34882570,34884596,34886602,34888637,34890651,34892657,34894624,34896672,34898718,34900768,34902806,34904859,34906909,34908958,34910975,34913001,34915023,34917073,34919120,34921173,34923172,34925189,34927155,34929154,34931127,34933132,34935133,34937100,34939111,34941102,34943062,34945069,34947048,34948992,34950934,34952903,34954887,34956891,34958873,34960884,34962880,34964802,34966752,34968693,34970621,34972419,34974330,34976344,34978339,34980297,34982307,34984290,34986281,34988259,34990251,34992249,34994220,34996114,34998011,34999929,35001957,35003918,35005832,35007735,35009671,35011672,35013620,35015551,35017395,35019283,35021262,35023263,35025169,35027026,35028954,35030921,35032873,35034748,35036632,35038506,35040361,35042277,35044230,35046158,35048098,35050051,35051902,35053786,35055645,35057533,35059512,35061413,35063383,35065349,35067234,35069109,35070996,35072890,35074847,35076845,35078783,35080676,35082493,35084326,35086215,35088148,35090122,35091975,35093852,35095675,35097332,35099274,35101195,35103089,35105004,35106916,35108758,35110632,35112570,35114403,35116296,35118174,35120034,35121897,35123756,35125573,35127427,35129398,35131363,35133281,35135201,35137085,35138925,35140778,35142664,35144502,35146345,35148276,35150233,35152199,35154110,35156060,35157880,35159774,35161729,35163662,35165700,35167734,35169752,35171702,35173651,35175654,35177635,35179645,35181604,35183548,35185483,35187537,35189545,35191532,35193341,35195314,35197312,35199324,35201329,35203293,35205282,35207298,35209303,35211302,35213267,35215253,35217248,35219269,35221283,35223251,35225115,35227083,35229062,35231032,35233067,35235038,35237051,35239091,35241097,35243090,35245092,35246995,35249010,35251016,35252998,35254985,35257011,35259032,35261028,35262955,35264701,35266491,35268375,35270391,35272400,35274360,35276383,35278386,35280358,35282324,35284290,35286253,35288210,35290097,35292057,35294013,35295988,35297926,35299928,35301886,35303914,35305911,35307904,35309858,35311812,35313803,35315779,35317744,35319600,35321542,35323482,35325453,35327330,35329225,35331166,35333114,35334985,35336901,35338895,35340864,35342845,35344834,35346841,35348868,35350864,35352878,35354778,35356680,35358670,35360594,35362316,35364223,35366178,35368127,35370082,35372016,35373958,35375981,35377969,35379969,35381953,35383929,35385891,35387917,35389900,35391856,35393860,35395802,35397733,35399693,35401639,35403608,35405544,35407512,35409483,35411474,35413484,35415500,35417492,35419469,35421437,35423468,35425433,35427421,35429393,35431375,35433320,35435323,35437271,35439219,35441205,35443177,35445171,35447155,35449085,35451073,35453092,35455077,35457030,35458987,35460914,35462955,35464909,35466900,35468913,35470898,35472915,35474889,35476854,35478882,35480867,35482832,35484852,35486776,35488815,35490763,35492714,35494694,35496660,35498648,35500638,35502631,35504584,35506481,35508440,35510434,35512367,35514321,35516313,35518281,35520200,35522166,35524153,35526162,35528149,35530082,35532032,35534004,35535940,35537936,35539847,35541789,35543744,35545589,35547470,35549428,35551401,35553297,35555195,35557119,35559033,35561000,35562944,35564853,35566855,35568833,35570777,35572771,35574747,35576684,35578716,35580525,35582511,35584472,35586467,35588479,35590465,35592483,35594533,35596588,35598452,35600468,35602436,35604460,35606484,35608512,35610569,35612602,35614621,35616563,35618569,35620567,35622590,35624623,35626653,35628682,35630676,35632714,35634694,35636729,35638722,35640757,35642801,35644827,35646881,35648914,35650958,35652922,35654942,35656932,35658954,35660993,35663016,35665065,35667115,35669142,35671119,35673126,35675101,35677136,35679178,35681206,35683249,35685291,35687327,35689262,35691208,35693157,35695081,35696980,35698985,35700948,35702931,35704932,35706926,35708961,35710984,35712905,35714906,35716865,35718889,35720850,35722858,35724792,35726629,35728622,35730599,35732570,35734553,35736560,35738499,35740289,35742252,35744211,35745853,35747717,35749506,35751170,35752783,35754413,35755967,35757772,35759128,35760642,35762179,35763552,35765144,35766427,35767920,35769381,35770537,35772051,35773221,35774624,35775933,35777200,35778585,35779736,35781149,35782298,35783249,35784831,35786249,35787396,35788649,35789988,35791309,35792254,35793537,35794925,35796042,35797657,35798761,35800143,35801315,35802840,35804071,35805364,35806795,35808308,35809445,35811079,35812544,35814006,35815593,35816955,35818552,35819858,35821364,35822902,35824056,35825683,35826848,35828294,35829450,35831042,35832250,35833639,35835012,35836027,35837248,35838757,35840189,35841286,35842564,35843924,35845236,35846178,35847499,35848920,35850079,35851632,35852723,35854090,35855186,35856843,35858060,35859523,35860987,35862359,35863850,35865311,35866878,35868319,35869912,35871408,35872682,35874132,35875629,35877022,35878271,35879844,35881112,35882461,35883619,35885226,35886455,35887883,35889190,35890140,35891494,35892926,35894334,35895425,35896740,35898235,35899337,35900341,35901615,35903000,35904184,35905667,35906798,35908184,35909334,35910938,35912163,35913678,35915161,35916507,35918022,35919437,35920976,35922463,35923965,35925548,35926759,35928254,35929740,35930925,35932331,35933803,35935128,35936498,35937649,35939226,35940384,35941790,35943132,35943986,35945558,35946875,35948169,35949385,35950596,35952199,35953052,35954289,35955672,35956850,35958359,35959392,35960747,35962033,35963381,35964736,35965950,35967362,35968874,35970113,35971726,35973207,35974684,35976247,35977565,35979210,35980494,35982012,35983528,35984800,35986453,35987606,35988996,35990245,35991643,35993035,35994341,35995787,35996887,35997875,35999463,36000877,36002025,36003281,36004646,36006121,36007025,36008288,36009729,36010912,36012521,36013569,36014942,36016024,36017676,36018922,36020314,36021773,36023194,36024553,36026007,36027593,36029020,36030592,36032056,36033435,36034827,36036306,36037791,36039014,36040686,36041873,36043285,36044444,36046055,36047210,36048648,36049934,36050862,36052211,36053601,36055042,36056134,36057457,36058972,36059997,36061052,36062379,36063652,36064863,36066386,36067558,36068925,36070106,36071713,36072972,36074453,36075947,36077327,36078765,36080207,36081800,36083331,36084920,36086492,36087733,36089257,36090815,36092136,36093184,36094874,36096089,36097438,36098579,36100156,36101383,36102681,36104049,36105037,36106250,36107729,36109164,36110251,36111566,36113093,36114088,36115136,36116503,36117751,36118839,36120330,36121464,36122862,36124006,36125637,36126759,36128160,36129678,36131134,36132560,36134089,36135686,36137185,36138738,36140345,36141655,36143115,36144668,36146030,36147127,36148854,36150032,36151414,36152548,36154150,36155331,36156591,36157996,36159091,36160020,36161610,36163073,36164235,36165498,36166857,36168213,36169135,36170442,36171822,36172957,36174502,36175572,36176939,36178223,36179820,36181059,36182289,36183811,36185350,36186719,36188388,36189825,36191339,36192917,36194323,36196032,36197276,36198787,36200319,36201520,36203149,36204383,36205760,36207080,36208364,36209856,36211070,36212534,36213725,36214641,36216299,36217598,36218841,36220092,36221294,36222957,36223772,36225026,36226479,36227727,36229382,36230442,36231772,36232995,36234430,36235886,36237201,36238632,36240127,36241370,36243063,36244565,36246095,36247683,36249089,36250781,36252094,36253659,36255164,36256346,36257993,36259245,36260668,36262017,36263260,36264769,36266018,36267518,36268744,36269595,36271263,36272563,36273824,36275046,36276241,36277870,36278763,36279958,36281369,36282800,36284234,36285536,36286819,36288176,36289470,36291120,36292318,36293841,36295401,36296701,36298333,36299882,36301535,36303109,36304653,36306267,36307649,36308865,36310096,36311399,36312831,36314436,36316024,36317463,36318780,36319993,36321554,36323068,36324441,36326197,36327741,36329050,36330276,36331711,36333178,36334594,36336314,36337838,36339309,36340657,36341904,36343396,36344796,36346168,36347820,36349405,36350994,36352434,36353634,36355025,36356384,36357607,36359073,36360804,36362040,36363156,36364459,36365752,36367484,36368862,36370143,36371599,36373271,36374434,36376140,36377814,36379697,36381640,36383528,36385393,36387321,36389103,36390857,36392693,36394601,36396365,36398206,36399795,36401066,36402808,36404503,36406282,36407989,36409697,36411386,36412837,36413555,36414881,36416880,36418873,36420682,36422229,36423380,36424740,36426541,36428159,36429915,36431653,36433560,36435281,36437013,36438691,36440579,36442286,36444083,36445977,36447867,36449723,36451390,36453066,36455009,36456704,36458686,36460491,36462428,36464397,36466348,36468269,36470132,36471882,36473438,36475346,36477166,36479055,36480959,36482772,36484419,36486153,36487702,36489415,36491170,36492836,36494432,36496115,36497663,36499070,36500767,36502560,36504576,36506586,36508566,36510468,36512467,36514489,36516485,36518426,36520444,36522479,36524485,36526432,36528432,36530474,36532443,36534427,36536347,36538305,36540225,36542234,36544190,36546159,36548118,36550143,36552148,36554148,36556155,36558172,36560196,36562197,36564183,36566001,36568003,36570059,36572111,36574159,36576148,36578112,36579964,36581596,36583559,36585426,36587379,36589270,36591187,36593095,36595005,36596900,36598799,36600686,36602630,36604489,36606393,36608370,36610267,36612177,36614107,36615983,36617882,36619209,36620948,36622906,36624609,36626097,36627584,36628827,36630422,36632139,36633754,36635381,36637231,36638775,36640359,36641955,36643544,36645047,36646596,36648239,36649888,36651451,36652752,36654028,36655697,36657300,36658602,36659972,36661952,36663798,36665566,36667327,36669120,36670824,36672626,36674494,36676221,36677883,36679563,36681310,36682921,36684594,36686448,36688194,36689499,36690995,36692695,36694164,36695620,36696863,36698233,36699990,36701491,36702732,36703907,36705363,36706984,36708220,36709763,36711743,36713736,36715709,36717684,36719654,36721565,36723387,36724918,36726832,36728712,36730596,36732185,36734005,36735991,36737871,36739748,36741639,36743420,36745211,36747026,36748727,36750634,36752148,36753589,36755310,36756773,36758150,36759708,36761325,36762740,36764491,36765874,36767610,36769040,36770752,36772358,36774211,36775712,36777454,36778985,36780752,36782217,36783677,36785283,36786783,36788670,36789947,36791215,36792531,36794321,36796156,36797961,36799674,36801068,36802541,36804217,36805972,36807526,36808970,36810615,36812244,36813878,36815533,36817091,36818644,36820309,36821913,36823265,36824837,36826263,36827971,36829587,36830987,36832599,36834127,36835745,36837408,36838904,36840146,36841735,36843271,36844498,36845807,36847178,36848404,36849744,36851088,36852617,36853820,36855057,36856503,36857848,36859204,36860583,36861954,36863265,36864866,36866452,36868016,36869914,36871373,36872850,36874699,36876539,36878392,36880318,36881876,36883851,36885612,36887287,36889245,36890883,36892853,36894078,36895931,36897845,36899370,36901085,36902799,36904495,36906150,36907724,36909191,36910816,36912302,36913866,36915341,36916909,36918493,36920029,36921551,36922987,36924589,36926167,36927668,36929098,36930685,36932158,36933964,36935823,36937740,36939604,36941437,36943174,36944644,36946140,36947738,36949252,36951165,36953103,36955019,36956878,36958759,36960642,36962547,36964513,36965502,36966054,36966653,36967131,36967845,36968500,36969071,36969649,36970278,36972098,36974069,36976052,36978013,36979932,36981894,36983871,36985821,36987767,36989418,36991071,36992679,36994324,36996099,36997665,36999388,37000971,37002671,37004215,37005763,37007382,37008880,37010390,37011875,37013253,37014750,37016127,37017728,37019252,37020477,37021620,37023056,37024401,37025980,37027432,37028839,37030223,37031796,37033242,37034841,37036271,37037658,37039042,37040446,37041898,37043315,37044676,37046125,37047970,37049734,37051549,37053433,37055317,37057202,37058996,37060759,37062568,37064222,37065934,37067720,37069546,37071370,37073117,37074836,37076495,37077568,37078364,37079155,37080032,37081529,37083245,37084912,37086539,37088210,37089848,37091447,37093042,37094702,37096473,37098131,37099820,37101471,37103147,37104986,37106788,37108667,37110022,37111809,37113297,37115027,37116606,37118396,37119900,37121574,37123490,37125179,37127014,37128861,37130717,37132278,37134125,37135979,37137712,37138789,37139845,37140805,37141907,37142954,37144048,37145010,37146077,37147775,37149314,37150917,37152442,37154017,37155607,37157148,37158676,37160340,37161769,37163336,37164922,37166585,37167839,37168867,37169903,37170920,37172253,37173669,37175274,37177039,37178638,37180059,37181155,37182597,37184130,37185259,37186547,37188057,37189588,37191042,37192638,37194266,37195800,37197373,37199007,37200517,37201852,37202725,37203576,37204609,37205162,37206144,37206862,37207924,37209307,37210776,37211536,37212109,37212977,37213573,37214387,37214924,37215617,37216331,37217056,37217917,37218398,37219218,37219912,37220852,37221367,37221890,37222752,37223436,37224318,37224816,37225687,37226396,37227287,37227729,37228180,37229084,37229664,37230404,37230700,37231290,37231553,37231744,37232314,37232474,37233071,37233324,37233930,37234120,37234632,37234818,37234972,37235445,37235485,37236050,37236199,37236774,37237004,37237243,37238780,37240222,37241659,37242837,37244069,37245228,37246604,37247602,37248610,37249592,37250597,37251565,37252555,37253556,37254549,37256079,37257456,37258858,37260313,37261810,37263281,37264660,37266021,37267580,37269026,37270518,37272041,37273624,37275225,37276717,37278256,37279768,37281332,37282736,37284170,37285568,37286988,37288435,37289825,37291250,37292736,37294132,37295534,37296911,37298287,37299383,37300328,37301291,37302222,37303344,37304252,37305186,37306120,37307177,37308101,37309033,37309939,37310945,37312347,37313757,37315150,37316549,37317686,37318601,37319553,37320483,37321942,37323552,37325134,37326700,37328221,37329745,37331276,37332898,37334494,37336070,37337406,37338738,37340053,37341270,37342599,37343913,37345257,37346797,37348350,37349876,37351207,37352719,37354049,37355315,37356574,37358136,37359792,37361499,37363065,37364675,37366193,37367990,37369696,37371504,37373101,37374299,37375462,37376962,37378379,37379859,37381084,37382398,37383778,37385217,37386879,37388296,37389872,37391308,37392772,37394415,37396114,37397751,37399416,37400980,37402644,37404284,37405923,37407675,37409308,37411007,37412671,37414282,37415884,37417538,37419167,37420672,37422408,37424083,37425711,37427411,37428884,37430528,37432145,37433787,37435437,37437052,37438756,37440439,37442101,37443706,37445371,37447021,37448574,37450384,37452019,37453643,37455257,37457056,37458758,37460372,37462006,37463642,37465502,37467177,37468856,37470526,37472293,37473987,37475641,37477340,37478987,37480199,37481169,37482109,37483068,37484463,37485952,37487508,37489001,37490603,37491919,37493249,37494627,37495901,37497200,37498359,37499611,37500868,37502208,37503369,37504318,37505277,37506726,37507923,37509065,37510143,37511363,37512509,37513400,37514378,37515366,37516955,37518475,37520000,37521549,37523043,37524557,37526069,37527614,37529318,37530710,37532084,37533465,37534832,37536209,37537582,37538924,37540359,37542072,37543620,37545162,37546721,37548277,37549820,37551364,37552878,37554521,37556183,37557788,37559418,37561072,37562708,37564305,37565917,37567580,37569341,37570809,37572244,37573640,37575065,37576534,37577943,37579348,37580792,37582654,37584407,37586124,37587805,37589550,37591292,37592983,37594687,37596580,37598333,37600040,37601736,37603429,37605156,37606819,37608504,37610202,37611522,37612513,37613740,37614771,37615883,37616945,37618187,37619328,37620440,37621506,37622474,37623228,37623868,37624602,37625250,37626885,37628522,37630259,37631954,37633682,37635358,37637086,37638788,37640562,37642362,37644096,37645786,37647397,37649113,37650796,37652531,37654228,37656108,37657861,37659633,37661388,37663155,37664941,37666713,37668486,37670235,37672080,37673798,37675477,37677095,37678784,37680438,37682157,37683811,37685512,37686969,37688478,37689860,37691482,37692486,37693508,37694528,37695564,37697415,37699242,37701056,37702878,37704545,37706384,37708183,37710035,37711841,37713249,37714414,37715626,37717199,37718688,37719690,37720726,37722055,37723804,37725400,37727024,37728606,37730143,37731788,37733394,37734985,37736736,37738258,37739719,37741140,37742594,37743993,37745457,37746900,37748363,37749790,37751582,37752934,37754688,37755979,37757469,37758909,37760402,37761813,37763496,37765128,37766738,37768355,37769886,37771482,37773092,37774659,37776327,37777846,37779315,37780761,37782113,37783651,37785096,37786533,37787930,37789725,37791531,37793365,37795210,37796884,37798719,37800524,37802350,37804083,37805782,37807423,37809043,37810730,37812340,37813983,37815585,37817296,37818880,37820366,37821808,37823282,37824680,37826196,37827675,37829116,37830697,37832533,37834342,37836201,37838105,37839796,37841629,37843439,37845312,37846984,37848601,37850233,37851862,37853406,37855064,37856703,37858294,37859979,37861586,37863027,37864452,37865945,37867356,37868840,37870282,37871732,37873300,37875141,37876961,37878823,37880525,37882394,37884200,37886056,37887861,37889183,37890241,37891911,37892582,37893273,37894448,37895150,37896225,37896979,37897667,37899164,37900217,37900867,37901576,37902764,37904023,37905016,37906270,37907660,37908953,37909555,37910704,37911966,37913155,37914468,37915753,37917492,37918715,37919668,37920620,37922264,37923850,37925423,37927152,37928811,37930527,37932081,37933840,37935328,37936804,37938085,37938965,37940151,37941730,37943232,37944241,37945238,37946243,37947271,37948607,37949687,37950733,37951819,37953195,37955086,37957118,37959151,37961171,37963196,37965229,37967246,37969224,37971241,37973270,37975290,37977309,37979298,37981312,37983314,37985303,37987279,37989304,37991327,37993360,37995357,37997383,37999386,38001391,38003337,38005352,38007391,38009429,38011409,38013416,38015425,38017433,38019432,38021414,38023461,38025395,38027308,38029213,38031103,38032998,38034908,38036752,38038620,38040500,38042416,38044287,38046172,38048002,38049874,38051705,38053593,38055545,38057223,38058899,38060566,38062254,38063926,38065575,38067232,38068849,38070650,38072296,38073955,38075607,38077230,38078897,38080543,38082147,38083822,38085364,38086804,38088239,38089647,38091080,38092502,38093901,38095299,38096865,38098365,38099860,38101390,38102893,38104229,38105774,38107311,38108943,38110358,38111910,38113373,38115059,38116491,38117958,38119491,38121120,38122486,38123871,38125348,38126828,38128813,38130493,38132018,38133677,38135263,38136852,38138368,38139968,38141683,38143215,38144790,38146414,38148102,38149840,38151461,38153056,38154588,38156237,38157781,38159343,38160891,38162443,38163964,38165549,38167082,38168511,38170095,38171567,38173285,38174823,38176477,38178072,38179734,38181384,38183031,38184827,38186524,38188009,38189730,38191657,38193506,38195216,38196951,38198845,38200779,38202708,38204645,38206620,38208567,38210496,38212415,38214346,38216173,38217999,38219873,38221855,38223708,38225556,38227420,38229247,38231039,38232810,38234594,38236372,38238388,38240344,38242305,38244266,38246187,38248091,38249996,38251884,38253865,38255788,38257670,38259562,38261416,38263226,38265065,38266885,38268671,38270682,38272660,38274641,38276628,38278572,38280513,38282436,38284336,38286306,38288217,38290031,38291833,38293570,38295350,38297105,38298869,38300633,38302555,38304404,38306251,38308019,38309818,38311643,38313463,38315270,38317036,38318719,38320145,38321609,38323063,38324484,38325915,38327298,38328706,38330323,38332283,38334212,38336173,38338145,38340080,38341980,38343876,38345801,38347705,38349566,38351486,38353476,38355413,38357376,38359266,38361171,38363062,38364996,38366874,38368820,38370526,38372022,38373545,38375145,38376729,38378330,38379907,38381424,38383267,38385055,38386869,38388667,38390422,38392169,38393907,38395641,38397363,38398929,38400274,38401569,38402856,38404248,38405530,38406902,38408256,38409811,38411299,38412773,38414263,38415836,38417426,38418929,38420403,38421858,38423517,38425204,38426682,38428358,38429996,38431560,38433130,38434609,38435979,38437334,38438648,38439901,38441177,38442359,38443619,38445328,38447221,38449081,38450955,38452864,38454750,38456623,38458494,38460375,38462336,38464241,38466115,38467973,38469862,38471740,38473625,38475506,38477406,38478834,38480242,38481618,38483034,38484493,38485952,38487410,38488895,38490678,38492344,38494054,38495791,38497465,38499064,38500651,38502196,38503858,38505390,38506945,38508529,38510150,38511874,38513599,38515293,38516932,38518643,38520082,38521547,38523009,38524448,38525834,38527220,38528622,38530135,38531690,38533187,38534685,38536225,38537445,38538982,38540494,38541947,38543614,38545103,38546636,38548129,38549408,38550911,38552412,38553928,38555466,38557445,38559396,38561320,38562999,38564415,38565833,38567251,38568048,38569477,38570864,38572261,38573854,38575042,38576168,38577302,38578449,38579523,38580589,38581752,38582937,38584427,38585851,38587278,38589191,38591089,38592978,38594883,38596781,38598693,38600589,38602530,38604222,38605825,38607339,38608873,38610315,38611695,38612574,38613525,38614318,38615208,38616006,38616966,38617669,38618585,38619479,38620511,38621259,38622190,38623077,38624114,38625055,38625989,38627367,38628613,38629968,38631257,38632120,38632478,38633085,38633573,38633965,38634243,38634728,38635390,38636736,38637654,38638513,38639345,38640438,38641752,38642509,38643846,38644639,38644834,38645267,38645533,38645847,38647210,38648607,38650097,38651774,38653630,38655361,38657177,38659001,38660800,38662562,38664315,38666106,38667863,38669504,38671152,38672718,38674330,38675932,38677580,38679150,38680809,38682189,38683487,38684816,38686149,38687748,38689437,38691100,38692769,38694435,38696104,38697746,38699425,38701098,38702784,38704448,38706122,38707083,38708647,38710469,38712326,38714100,38715893,38717705,38719593,38721402,38723166,38724811,38726260,38727732,38729181,38730817,38732679,38734528,38736377,38738229,38740091,38741979,38743828,38745705,38747561,38748631,38750381,38751593,38752679,38753955,38755047,38756230,38758271,38760286,38762269,38764184,38766163,38768102,38769999,38771895,38773787,38775749,38777693,38779646,38781564,38783484,38785369,38787297,38789307,38791077,38792734,38794511,38796310,38798126,38799927,38801606,38803219,38805093,38807141,38809189,38811237,38813290,38815331,38817380,38819416,38821466,38823521,38825575,38827631,38829671,38831722,38833775,38835816,38837857,38839910,38841786,38843718,38845579,38847436,38849251,38851118,38852954,38854814,38856765,38858669,38860540,38862394,38864257,38866088,38867943,38869793,38871738,38873042,38874491,38875279,38876147,38876893,38877581,38878325,38878890,38879683,38880557,38881355,38881743,38882450,38883241,38884092,38884722,38885131,38885886,38886740,38887638,38888093,38888625,38889402,38890235,38891170,38891781,38892225,38893467,38894502,38895611,38896109,38896774,38897954,38899045,38900095,38900478,38901379,38902497,38903530,38904428,38904833,38905897,38907046,38908165,38908825,38910227,38911527,38913103,38914417,38916182,38917556,38918548,38919718,38920841,38921984,38923134,38924223,38925327,38926443,38927605,38928736,38929915,38931124,38932189,38933235,38934262,38935473,38936876,38937988,38939079,38940275,38941314,38942383,38943516,38944562,38945597,38946618,38947513,38948544,38949588,38950432,38951273,38952090,38952949,38954284,38954697,38955262,38955779,38956333,38956896,38957346,38957911,38958456,38958921,38959447,38959926,38960428,38960925,38961462,38962028,38962530,38963987,38965465,38966946,38968434,38969990,38971506,38973016,38974532,38976035,38977137,38978107,38979095,38980568,38982104,38983467,38984864,38986193,38987561,38989052,38990786,38992429,38994093,38995748,38997357,38998975,39000639,39002279,39003940,39005591,39007076,39008533,39010069,39011526,39013050,39014561,39016023,39017588,39018609,39019762,39020988,39022335,39023650,39024948,39026241,39027361,39028753,39030173,39031571,39032993,39034542,39036075,39037627,39039171,39040889,39042202,39043192,39044326,39045494,39046623,39047761,39048852,39049962,39051063,39052210,39053324,39054518,39055714,39056794,39057833,39058914,39060163,39061484,39062634,39063724,39064924,39065969,39067030,39068115,39069122,39070132,39071150,39072064,39073106,39074163,39075010,39075840,39076659,39077548,39078803,39079238,39079804,39080297,39080853,39081397,39081876,39082425,39082959,39083433,39083945,39084429,39084920,39085437,39085962,39086544,39087073,39088837,39090642,39092442,39094238,39096035,39097819,39099551,39101308,39102706,39104115,39105507,39106908,39108550,39109778,39110974,39112208,39113750,39115192,39116513,39117817,39119330,39120630,39121663,39122673,39123656,39125130,39126824,39128263,39129935,39131600,39132962,39134154,39135327,39136532,39137968,39139343,39141053,39142714,39144315,39146011,39147714,39149300,39150966,39152606,39154292,39155415,39156855,39158292,39159826,39161741,39163443,39165407,39167176,39168874,39170530,39172243,39173962,39175582,39177326,39179101,39180789,39182370,39183874,39185421,39186964,39188529,39190054,39191625,39192866,39194618,39196244,39197846,39199427,39200996,39202565,39204159,39205777,39207552,39209027,39210777,39212560,39214062,39215483,39217213,39219001,39220550,39222263,39223298,39224397,39225524,39226671,39227837,39228983,39230047,39231228,39232354,39233479,39234585,39235778,39236908,39237979,39238996,39240065,39241361,39242406,39243638,39244791,39245590,39246298,39247426,39248576,39249679,39250642,39251612,39252850,39253948,39254873,39255459,39256590,39257836,39258983,39259964,39260884,39262148,39263287,39264227,39264719,39265880,39267118,39268337,39269294,39270140,39271310,39272435,39273426,39273839,39275038,39276249,39277411,39278410,39279136,39280265,39281421,39282525,39282942,39284106,39285292,39286439,39287351,39288675,39289830,39290919,39292124,39293178,39294224,39295341,39296352,39297365,39298364,39299305,39300326,39301400,39302251,39303080,39303901,39304818,39305781,39306943,39308171,39309398,39309757,39310761,39311992,39313116,39313996,39315249,39316386,39317644,39318851,39320089,39321246,39322361,39323581,39324750,39326058,39327194,39328339,39329527,39330728,39332006,39333111,39334261,39335497,39336634,39337922,39339113,39340093,39341132,39342273,39343617,39344724,39345724,39346718,39347897,39349223,39350282,39351269,39352329,39353614,39354830,39355892,39356864,39357981,39359475,39360131,39360640,39361199,39362466,39364027,39365784,39367651,39369521,39371350,39372942,39374322,39374836,39375363,39375886,39376411,39376957,39377906,39379198,39380236,39381516,39383027,39384217,39385322,39386786,39388126,39389174,39390442,39391945,39393142,39394216,39395649,39397391,39399249,39400986,39402719,39404713,39406397,39408199,39410086,39411793,39413628,39415433,39417260,39418969,39420822,39422575,39424341,39426232,39427980,39429716,39431707,39433456,39435262,39437062,39438816,39440772,39442564,39444392,39446077,39447971,39449712,39451571,39453356,39455101,39456987,39458649,39460472,39462362,39464144,39465903,39467720,39469549,39471253,39473094,39474972,39476686,39478597,39480329,39482094,39483992,39485730,39487480,39489287,39491096,39492882,39494703,39496527,39498205,39500109,39501808,39503643,39505433,39507194,39509069,39510854,39512679,39514475,39516273,39518020,39519822,39521708,39523421,39525161,39527048,39528767,39530649,39532421,39534172,39535572,39536776,39538003,39539235,39540511,39541664,39542866,39543997,39545017,39545579,39546367,39547247,39548013,39548416,39549147,39549946,39550838,39551448,39551860,39552643,39553496,39554405,39554859,39555393,39556163,39557016,39557923,39558583,39560026,39561027,39562208,39563366,39564494,39565646,39566724,39567815,39568929,39570087,39571205,39572398,39573588,39574675,39575761,39576762,39577884,39579364,39580872,39582448,39583572,39584681,39585870,39586965,39588045,39589125,39590176,39591215,39592239,39593093,39594107,39595142,39596007,39596889,39597655,39598513,39599983,39601416,39602924,39604119,39604561,39605129,39605632,39606178,39606732,39607222,39607765,39608296,39608777,39609303,39609800,39610277,39610799,39611321,39611898,39612424,39614105,39615760,39617448,39619008,39620728,39622358,39624007,39625661,39627357,39629044,39630820,39632462,39634091,39635689,39637377,39638967,39639929,39640431,39641433,39642013,39642437,39642742,39643587,39644646,39646675,39648699,39650717,39652728,39654756,39656746,39658744,39660718,39662748,39664786,39666800,39668831,39670845,39672870,39674888,39676854,39678877,39680263,39681609,39683199,39684732,39686111,39687467,39688749,39689870,39690991,39692115,39693236,39694355,39695477,39696297,39696365,39697223,39699212,39701260,39703115,39704996,39706907,39708762,39710608,39712496,39714395,39716249,39718188,39720115,39722039,39723994,39725850,39727752,39729674,39731597,39733474,39735271,39737282,39739160,39741056,39742985,39744914,39746756,39748524,39750345,39752108,39754025,39755930,39757823,39759695,39761561,39763459,39765353,39767267,39769099,39771103,39772859,39774729,39776601,39778518,39780363,39782013,39783850,39785302,39786810,39788428,39790057,39791634,39793167,39794622,39796192,39797800,39799439,39801083,39802613,39804131,39805706,39807302,39808824,39810711,39812355,39813939,39815441,39817061,39819019,39820835,39822612,39824375,39826243,39828098,39829945,39831784,39833697,39835152,39836430,39837754,39839108,39840411,39841772,39843088,39844346,39845946,39847407,39848869,39850319,39851795,39853277,39854746,39856191,39857632,39859279,39860747,39862184,39863646,39865148,39866615,39868067,39869502,39871094,39872568,39874022,39875452,39876906,39878405,39879861,39881307,39882738,39884377,39885783,39887202,39888621,39890137,39891577,39893010,39894432,39896037,39897442,39898870,39900256,39901683,39903178,39904641,39906068,39907459,39909056,39910469,39911834,39913259,39914746,39916189,39917604,39918997,39920534,39922015,39923392,39924772,39926231,39927681,39929099,39930511,39931907,39933544,39934958,39936335,39937796,39939269,39940737,39942191,39943618,39945081,39946716,39948192,39949633,39951116,39952605,39954125,39955606,39956987,39958599,39959942,39961271,39962630,39964017,39965358,39966701,39968042,39969326,39970867,39972215,39973544,39974916,39976279,39977615,39978918,39980183,39981735,39983069,39984348,39985643,39987010,39988316,39989666,39991023,39992289,39993941,39995387,39996825,39998301,39999789,40001288,40002739,40004156,40005725,40007184,40008575,40010030,40011527,40012987,40014462,40015905,40017331,40018938,40020343,40021710,40023167,40024598,40026098,40027501,40028895,40030376,40031930,40033297,40034661,40036131,40037592,40039044,40040416,40041840,40043439,40044853,40046234,40047640,40049067,40050551,40051974,40053384,40054767,40056421,40057848,40059246,40060660,40062147,40063608,40065026,40066431,40068103,40069759,40071594,40073367,40075123,40076965,40078608,40080402,40082238,40084062,40085886,40087644,40089208,40091068,40092798,40094585,40096272,40098096,40099910,40101763,40103644,40105452,40107382,40109282,40111109,40113013,40114945,40116782,40118604,40120378,40122225,40124006,40125792,40127555,40129427,40131267,40133054,40134807,40136532,40138318,40140051,40141773,40143514,40145408,40147222,40149042,40150762,40152548,40154304,40156041,40157773,40159552,40161530,40163384,40165207,40167019,40168820,40170635,40172458,40174272,40176164,40177893,40179634,40181424,40183153,40184894,40186605,40188372,40190127,40192003,40193880,40195735,40197574,40199387,40201195,40202943,40204732,40206515,40208365,40210042,40211789,40213573,40215070,40216811,40218561,40220230,40221965,40223764,40225536,40227272,40229050,40230658,40232320,40233922,40235718,40237519,40239292,40240983,40242584,40244213,40245907,40247595,40249284,40250940,40252713,40254379,40256017,40257668,40259330,40261038,40262714,40264416,40266079,40267920,40269731,40271448,40273233,40275057,40276851,40278656,40280455,40282305,40284056,40285821,40287524,40289285,40291083,40292838,40294645,40296374,40298224,40300029,40301912,40303779,40305663,40307571,40309539,40311367,40313215,40314933,40316599,40318340,40320062,40321807,40323574,40325317,40327055,40328846,40330526,40332234,40334070,40335857,40337640,40339513,40341248,40342997,40344574,40346015,40347536,40349086,40350584,40352113,40353655,40355108,40356920,40358935,40360874,40362822,40364836,40366813,40368769,40370755,40372648,40374595,40376580,40378584,40380577,40382497,40384465,40386461,40388458,40390422,40391752,40391792,40391830,40391870,40391930,40392196,40392236,40392274,40392314,40393786,40395569,40397402,40399221,40401069,40402903,40404715,40406519,40408418,40409922,40411385,40412814,40414268,40415704,40417134,40418574,40420027,40421832,40423677,40425492,40427248,40429044,40430810,40432621,40434362,40436170,40436944,40437393,40437433,40437471,40437511,40437830,40437868,40437908,40437946,40438324,40439502,40440775,40442567,40444289,40446033,40447796,40449543,40451262,40452986,40454735,40456513,40457818,40459156,40460549,40462069,40462718,40464068,40465602,40466926,40468033,40469548,40471311,40472904,40474358,40474398,40474436,40474476,40474540,40474804,40474844,40474882,40474922,40475945,40477232,40478433,40479566,40480789,40482513,40484121,40485754,40487454,40489113,40490775,40492453,40494083,40495027,40495067,40495105,40495145,40495821,40496752,40496835,40497277,40498945,40500818,40502825,40504473,40506114,40507766,40509404,40511046,40512736,40514465,40516191,40517890,40519650,40521369,40523146,40524858,40526563,40528238,40529904,40531628,40532495,40533648,40533687,40535490,40537299,40538999,40540712,40542468,40544208,40545962,40547691,40549511,40551398,40553235,40555120,40557011,40558845,40560712,40562517,40564321,40566306,40568066,40569644,40571355,40573057,40574798,40576583,40578376,40580098,40581964,40583816,40585748,40587581,40589504,40591308,40593270,40595059,40597034,40598679,40599884,40601078,40602163,40603173,40604524,40605927,40607260,40608639,40610052,40611408,40612551,40613680,40614793,40615912,40617115,40618392,40619775,40620493,40621376,40622334,40623486,40625051,40626656,40627506,40628175,40628926,40629885,40631476,40633183,40634912,40636166,40637117,40638501,40640208,40641475,40642617,40643413,40644345,40645264,40645866,40646529,40647572,40648862,40650154,40651305,40652618,40654000,40655373,40656723,40658003,40659710,40661631,40663542,40665451,40667281,40669129,40671049,40672911,40674868,40676707,40678626,40680536,40682483,40684326,40686193,40688108,40689947,40690899,40691805,40692737,40693669,40695632,40697593,40699200,40701175,40702747,40703889,40705128,40706288,40707856,40709846,40711850,40713891,40715941,40717785,40719717,40721601,40723459,40725479,40727530,40729577,40731607,40733549,40735355,40737077,40738969,40740784,40742610,40744365,40746151,40747906,40749912,40751871,40753814,40755716,40757709,40759018,40760315,40761663,40763433,40764636,40765872,40767119,40768504,40769710,40770919,40772148,40773430,40775239,40776412,40777611,40778977,40780329,40781473,40782205,40783190,40784804,40786356,40787092,40787946,40789608,40791349,40792192,40792952,40794398,40795840,40797168,40798572,40799953,40801907,40803669,40805419,40807250,40809059,40810827,40812642,40814516,40816296,40818069,40819739,40821413,40823068,40824854,40826607,40828409,40830220,40832005,40833465,40834859,40836312,40837789,40839328,40840733,40842162,40843651,40845251,40846743,40848189,40849694,40851334,40852855,40854326,40855828,40857489,40859464,40861442,40863373,40865301,40867321,40869311,40871270,40873292,40875246,40877013,40878789,40880523,40882357,40884013,40885577,40887124,40888719,40890675,40892573,40894365,40896278,40898154,40899957,40901773,40903597,40905539,40907446,40909293,40911176,40913122,40914900,40916724,40918485,40920318,40922056,40923572,40925071,40926575,40927825,40929057,40930238,40931938,40933070,40934302,40935533,40936829,40938399,40939507,40940731,40942289,40944130,40945924,40947691,40949463,40951381,40953156,40954933,40956703,40958572,40960374,40962202,40964011,40965813,40966884,40967740,40968564,40969297,40970438,40971605,40972778,40973929,40975211,40976398,40977608,40978822,40980103,40981387,40982787,40984153,40985467,40987280,40989116,40990981,40992818,40994710,40996539,40998391,41000248,41002161,41004055,41005993,41007918,41009806,41011754,41013666,41015597,41017551,41019420,41021254,41023126,41024920,41026705,41028544,41030283,41031940,41033595,41035181,41037094,41038892,41040733,41042645,41044526,41046373,41048297,41050046,41051521,41052925,41054383,41055942,41057427,41059115,41060870,41062391,41063983,41065682,41067309,41069020,41070716,41072485,41074230,41075997,41077832,41079798,41081846,41083891,41085761,41087765,41089752,41091746,41093678,41095709,41097668,41099607,41101482,41103117,41104244,41105648,41106919,41108184,41109943,41111721,41113468,41115209,41116881,41118378,41119928,41121542,41123264,41125070,41126861,41128655,41130452,41132259,41134096,41135893,41137671,41139380,41141056,41142770,41144410,41146036,41147805,41149624,41151371,41152886,41153902,41155041,41155946,41157444,41158505,41159414,41160265,41161349,41162595,41163615,41164749,41165679,41166746,41167316,41167904,41168432,41169165,41169859,41170599,41171297,41172202,41173050,41174289,41175462,41176509,41177817,41179153,41180610,41181957,41183313,41184744,41186196,41187918,41189442,41190690,41192243,41193893,41195251,41196890,41198606,41200201,41201872,41202793,41203011,41203244,41203457,41204236,41204737,41205178,41205636,41206442,41208490,41210510,41212551,41214586,41216608,41218647,41220689,41222728,41224766,41226739,41228665,41230642,41232537,41234454,41236421,41238329,41240212,41241682,41243070,41244486,41245955,41247282,41248441,41249600,41250738,41251976,41253429,41254774,41256315,41257777,41259622,41261448,41263283,41265158,41267034,41268851,41270639,41272437,41274327,41276101,41277847,41279606,41281410,41283095,41284783,41286530,41288226,41289672,41291108,41292624,41294072,41295506,41296957,41298483,41299968,41301536,41303434,41305327,41307181,41309112,41310334,41311589,41312822,41314095,41315938,41317755,41319533,41321329,41323024,41324494,41325852,41327384,41328913,41330944,41332972,41335004,41337019,41339039,41341024,41342995,41344990,41346757,41348271,41349777,41351234,41352945,41354650,41356299,41357984,41359688,41361677,41363665,41365636,41367647,41369497,41371201,41372944,41374674,41376638,41378686,41380728,41382779,41384765,41386050,41387281,41388059,41388598,41389144,41389676,41390575,41392005,41393429,41394848,41395979,41397243,41398851,41400471,41401702,41403056,41404613,41406151,41407636,41409116,41410658,41412387,41414025,41415939,41417784,41419110,41420311,41421643,41422885,41424094,41425029,41426046,41427008,41428318,41429212,41430214,41431149,41431992,41433657,41435630,41437592,41439555,41441525,41443552,41445559,41447528,41449531,41451359,41452858,41454372,41455978,41457783,41459413,41461109,41462727,41464491,41466126,41467598,41469190,41470865,41472592,41474272,41475994,41477612,41479226,41480871,41482533,41484008,41485506,41487026,41488634,41490118,41491668,41493559,41495459,41497321,41499176,41501079,41502974,41504847,41506693,41508582,41510091,41511577,41513031,41514926,41516876,41518847,41520830,41522828,41524674,41526473,41528281,41530073,41531919,41533820,41535739,41537645,41539351,41540743,41542217,41543606,41545053,41546534,41548060,41549563,41551000,41552547,41554208,41555922,41557563,41559092,41560625,41562193,41563727,41565334,41567067,41568694,41570445,41572193,41573861,41575612,41577274,41579005,41580670,41582332,41583844,41585567,41587212,41588870,41590368,41592032,41593784,41595219,41596796,41598344,41599902,41601339,41602921,41604525,41606254,41607765,41609258,41610817,41612326,41613827,41615281,41616839,41618562,41620054,41621349,41622604,41624137,41625650,41627261,41629006,41630448,41632121,41633613,41635151,41636912,41638633,41640197,41641846,41643289,41644515,41645657,41646948,41648227,41649577,41650790,41652168,41653957,41655275,41656667,41658048,41659269,41660421,41661546,41662852,41664048,41665437,41666902,41668289,41669636,41671212,41672580,41673774,41675130,41676985,41678690,41680471,41682036,41683306,41684333,41685365,41686234,41687169,41688245,41689443,41690751,41692012,41693605,41695225,41696779,41698481,41700431,41701486,41702729,41703677,41704690,41705528,41706151,41707342,41708464,41709849,41711062,41712337,41713579,41714911,41716475,41718207,41719986,41721976,41723676,41725466,41727251,41728859,41730141,41731405,41732631,41733937,41735218,41736565,41737925,41739174,41740398,41741694,41742957,41744173,41745813,41747471,41749160,41750845,41752364,41753792,41755365,41757127,41758676,41760333,41761570,41762791,41764013,41765249,41766544,41767850,41769298,41770854,41772519,41773933,41775240,41776611,41777833,41779007,41780224,41781547,41783020,41784735,41786458,41788133,41789694,41791069,41792523,41793881,41795323,41797013,41798562,41799855,41801123,41802310,41803565,41804717,41805972,41807490,41809229,41810874,41812641,41814254,41815791,41817482,41819120,41820565,41822257,41823879,41824278,41824551,41826099,41827701,41828144,41828407,41829883,41831447,41831911,41832174,41833663,41835260,41835731,41835988,41837485,41839057,41839553,41839820,41841227,41842802,41843321,41843571,41844771,41846051,41847317,41848562,41850014,41851277,41852565,41853900,41855301,41856605,41857826,41859150,41860460,41861893,41863203,41864547,41865844,41867253,41868782,41870039,41871293,41872574,41873793,41875053,41876297,41877573,41878799,41880305,41881480,41882669,41883855,41885047,41886247,41887472,41888713,41890221,41891468,41892722,41894033,41895326,41896596,41897872,41899168,41900436,41902306,41904033,41905801,41907491,41909165,41910798,41912622,41914449,41915961,41917231,41918596,41919929,41921283,41922635,41923982,41925242,41926644,41927973,41929383,41930699,41932061,41933431,41934872,41936186,41937657,41939478,41941120,41942702,41944282,41945921,41947507,41949048,41950446,41951737,41953127,41954510,41956014,41957534,41959073,41960494,41962054,41963787,41965653,41967320,41968900,41970488,41972118,41973691,41975204,41976629,41977914,41979306,41980675,41982153,41983700,41985226,41986671,41988206,41989930,41991802,41993492,41995059,41996652,41998324,41999904,42001406,42002867,42004128,42005489,42006885,42008364,42009933,42011457,42012896,42014388,42016123,42017995,42019665,42021265,42022852,42024520,42026086,42027609,42029089,42030351,42031735,42033130,42034590,42036158,42037688,42039129,42040625,42042322,42044216,42045390,42046620,42047711,42048601,42049490,42050522,42051525,42052531,42053644,42054944,42056171,42057356,42058295,42059253,42060338,42061368,42062929,42064126,42065347,42066433,42067347,42068238,42069279,42070311,42071280,42072397,42073682,42074908,42076132,42077087,42078064,42079146,42080165,42081603,42083585,42085503,42087420,42089383,42091346,42093299,42095247,42097156,42099018,42100815,42102612,42104471,42106346,42108284,42110208,42112168,42113909,42115604,42117597,42119532,42121512,42123534,42125521,42127433,42129405,42131411,42133184,42134925,42136672,42138439,42140220,42141968,42143831,42145598,42147320,42149098,42150868,42152635,42154439,42155968,42157885,42159884,42161837,42163709,42165588,42167549,42169433,42170523,42171322,42172783,42174717,42176699,42178684,42180663,42182602,42184604,42186568,42188512,42190557,42192512,42194493,42196460,42198401,42200399,42202357,42204318,42206324,42207896,42209451,42211016,42212595,42214157,42215714,42217293,42218868,42220651,42222366,42223991,42225682,42227230,42229081,42230891,42232728,42234504,42236344,42237828,42239397,42240920,42242452,42244158,42245821,42247534,42249142,42250915,42252524,42254246,42255953,42257810,42259612,42261468,42263304,42265199,42266859,42268543,42270231,42271815,42273686,42275481,42277318,42279131,42280940,42282483,42284119,42285664,42287295,42288917,42290620,42292321,42293996,42295738,42297451,42299226,42300978,42302717,42304256,42305982,42307674,42309456,42310960,42312638,42314452,42316061,42317757,42319550,42321312,42322936,42324623,42326207,42327964,42329590,42331182,42332743,42334483,42336106,42337824,42338871,42340743,42342651,42344231,42345751,42347690,42349551,42351058,42352609,42354325,42356320,42358329,42360297,42361983,42363315,42364279,42365382,42366706,42367852,42369599,42371188,42372746,42374173,42375579,42377072,42378551,42380069,42381813,42382966,42384081,42384927,42385898,42387221,42388277,42389247,42390308,42391425,42392730,42394561,42396342,42398230,42400037,42401880,42403683,42405557,42407339,42409187,42410862,42412490,42414269,42415871,42417662,42419380,42421067,42422914,42424809,42426581,42428459,42430270,42432117,42433955,42435811,42437590,42439465,42441219,42442815,42444580,42446221,42447977,42449724,42451438,42453230,42455022,42456890,42458746,42460604,42462487,42464311,42466211,42468033,42469993,42471918,42473828,42475812,42477694,42479642,42481591,42483624,42485553,42487491,42489272,42490997,42492795,42494545,42496369,42498193,42500029,42501801,42503478,42504918,42506186,42507722,42509273,42511005,42512443,42513542,42514780,42515870,42516655,42516919,42517654,42518983,42520204,42521573,42522826,42524255,42525598,42526866,42528247,42529557,42531001,42532319,42533617,42534971,42536284,42537748,42539093,42540426,42541783,42543138,42544628,42546274,42547145,42548807,42550245,42552107,42554033,42556043,42558097,42560099,42562113,42564085,42566003,42567907,42569549,42571098,42572599,42574156,42575809,42577461,42579187,42580944,42582761,42584487,42586215,42587864,42589569,42591128,42592732,42594380,42595743,42597406,42599228,42601170,42603030,42604769,42606429,42608195,42610127,42612114,42614040,42615830,42617487,42619311,42621201,42623132,42624917,42626616,42628274,42630195,42632105,42633990,42635755,42637331,42639253,42641186,42643122,42645048,42646921,42648524,42650345,42652208,42654084,42655951,42657651,42658595,42659562,42660566,42661532,42663167,42664660,42666364,42667934,42669597,42671208,42672901,42674547,42676088,42677925,42679620,42681304,42683048,42684737,42686394,42688055,42689688,42691368,42693023,42694775,42696709,42698443,42700214,42701919,42703569,42705368,42707064,42708681,42710460,42712090,42713914,42715522,42717167,42718822,42720459,42722193,42724091,42725994,42727908,42729794,42731744,42733670,42735478,42737170,42738926,42740562,42742250,42744150,42746109,42747983,42749882,42751813,42753754,42755743,42757663,42759615,42761553,42763438,42765225,42767002,42768784,42770581,42772542,42774457,42776354,42778234,42780144,42782000,42783883,42785792,42787199,42788484,42789800,42791380,42792980,42794625,42796224,42797938,42799835,42801674,42803550,42805389,42807262,42809084,42810943,42812848,42814670,42816568,42818461,42820221,42820839,42821330,42821954,42823201,42824189,42825260,42826633,42827882,42829028,42830543,42832242,42833876,42835497,42837163,42838928,42840427,42842107,42843823,42845142,42846820,42848351,42849712,42850958,42852425,42854055,42855729,42857450,42859219,42860882,42862613,42864286,42865882,42867473,42868832,42870329,42871820,42873328,42874757,42876199,42877724,42879149,42880626,42882000,42883506,42884933,42886732,42888531,42890373,42892282,42894131,42895973,42897812,42899667,42901572,42903397,42905215,42907088,42908994,42910879,42912757,42914618,42916542,42918500,42920495,42922424,42924315,42926221,42928136,42930065,42931992,42933881,42935831,42937759,42939652,42941510,42943365,42945252,42947155,42949033,42950631,42952023,42953478,42955262,42956900,42958478,42960117,42961711,42963336,42964991,42966613,42968301,42969978,42971637,42973265,42974930,42976570,42978202,42979830,42981463,42983218,42984871,42986518,42988173,42989806,42991438,42993082,42994732,42996372,42998333,43000199,43002065,43003922,43005807,43007664,43009528,43011382,43013306,43015135,43016975,43018784,43020629,43022477,43024311,43026152,43027993,43029980,43031829,43033700,43035573,43037423,43039264,43041119,43042981,43044924,43046248,43047677,43049132,43050516,43051856,43053301,43054912,43056286,43057651,43059026,43060540,43061983,43063452,43064954,43066872,43068771,43070577,43072328,43074125,43075977,43077827,43079727,43081594,43083214,43084970,43086752,43088412,43090088,43091795,43093527,43095136,43096830,43098524,43100252,43101909,43103688,43105394,43107184,43108792,43110504,43112205,43114086,43115888,43117769,43119500,43121153,43123046,43124909,43126861,43128689,43130539,43132166,43133945,43135691,43137473,43139300,43140949,43142579,43144315,43145988,43147746,43149493,43151062,43152891,43154615,43156402,43158141,43159960,43161570,43163306,43164922,43166527,43168284,43169945,43171097,43172359,43173605,43174855,43176134,43177417,43178454,43180124,43181738,43183238,43184803,43186428,43188007,43189551,43191142,43192710,43194290,43195835,43197413,43199178,43200997,43202906,43204837,43206695,43208284,43210188,43211625,43213023,43214796,43216576,43218418,43220170,43221871,43223511,43224980,43226691,43228390,43230170,43231855,43233252,43234547,43236313,43238143,43239975,43241453,43242929,43244417,43245841,43247522,43249090,43250496,43252086,43253620,43255142,43256629,43258155,43259649,43261207,43262626,43264009,43265564,43267081,43268675,43270141,43271591,43273074,43274778,43276316,43277846,43279299,43280663,43282138,43283633,43285345,43287147,43289028,43290852,43292673,43294528,43296317,43298063,43299759,43301392,43303045,43304853,43306531,43308330,43310057,43311788,43313586,43315324,43317037,43318914,43320854,43322673,43324539,43326363,43328213,43330061,43331790,43333467,43335158,43336861,43338572,43340343,43342068,43343748,43345446,43347265,43349036,43350640,43352478,43354181,43355906,43357609,43359350,43360965,43362666,43364335,43366078,43367894,43369565,43371269,43372912,43374705,43376408,43378168,43379848,43381451,43383248,43385006,43386389,43387860,43389626,43391396,43393059,43394736,43396480,43397912,43399417,43400975,43402499,43403983,43405409,43407004,43408528,43410006,43411781,43413556,43415215,43416954,43418698,43420344,43422087,43423833,43425453,43427107,43428757,43430427,43432074,43433688,43435311,43436948,43438634,43440300,43441931,43443529,43445222,43446837,43448488,43450126,43451873,43453514,43455162,43456792,43458416,43460137,43461764,43463436,43465079,43466791,43468433,43470088,43471726,43473427,43475033,43476674,43478271,43479974,43481605,43483234,43484953,43486720,43488452,43490095,43491721,43493365,43495086,43496702,43498353,43500008,43501788,43503468,43505083,43506697,43508347,43510071,43511845,43513713,43515408,43517051,43518758,43520567,43522270,43523973,43525732,43527556,43529363,43531100,43533003,43534888,43536752,43538747,43540715,43542671,43544624,43546590,43548480,43550309,43552174,43554129,43556123,43558133,43560121,43562049,43563914,43565852,43567631,43569452,43571452,43573477,43575502,43577497,43579496,43581471,43583403,43585319,43587212,43589122,43591066,43592986,43594933,43596906,43598747,43600572,43602501,43604421,43606316,43608148,43609769,43611407,43613184,43615038,43616859,43618516,43620135,43621752,43623379,43625006,43626657,43628234,43629645,43631012,43632332,43633780,43635233,43636759,43638212,43639611,43641023,43642538,43644070,43645399,43646836,43648378,43649850,43651247,43652888,43654599,43656293,43658045,43659712,43661409,43663111,43664895,43666587,43668280,43669998,43671812,43673509,43675193,43676835,43678523,43680204,43681927,43683596,43685286,43686949,43688672,43690359,43692090,43693733,43695382,43697115,43698739,43700372,43702028,43703953,43705828,43707735,43709652,43711580,43713485,43715384,43717264,43719188,43720987,43722779,43724580,43726392,43728403,43730416,43732420,43734466,43736503,43738535,43740570,43742593,43744632,43746668,43748700,43750756,43752809,43754864,43756915,43758944,43760987,43762981,43764826,43766672,43768583,43770511,43772429,43774301,43776149,43778053,43779526,43780968,43782450,43783956,43785685,43787280,43788834,43790415,43792018,43793581,43795170,43796833,43798283,43799777,43801371,43802958,43804484,43806100,43807686,43809102,43810655,43812035,43813614,43815347,43817275,43819021,43820718,43822425,43824091,43825995,43827860,43829738,43831539,43833315,43835094,43836853,43838673,43840547,43842091,43843977,43845954,43847969,43849942,43851841,43853739,43855566,43857204,43858873,43860614,43862334,43864103,43865868,43867665,43869348,43871030,43872795,43874461,43876164,43877861,43879223,43880715,43882227,43883761,43885242,43886832,43888350,43889874,43891378,43892941,43894452,43895954,43897468,43899022,43900534,43902047,43903566,43905059,43906424,43907720,43909027,43910299,43911852,43913784,43915716,43917623,43919506,43921462,43923390,43925328,43927264,43928866,43930199,43931472,43932793,43934141,43935471,43936795,43938142,43939696,43941204,43942690,43944208,43945860,43947456,43948977,43950631,43952146,43953978,43955607,43957276,43959011,43960344,43962012,43963673,43965326,43967206,43968409,43969641,43970894,43972174,43973472,43974762,43976037,43977262,43978754,43979956,43980936,43982112,43983196,43984471,43985575,43986704,43988027,43989371,43990650,43991913,43993120,43994390,43995636,43997004,43998337,43999945,44001360,44002652,44003976,44005310,44006635,44007950,44009248,44010631,44012624,44014108,44015765,44017517,44019183,44020739,44022211,44023631,44025576,44027490,44028585,44029771,44030897,44032147,44033408,44034532,44036478,44038444,44040368,44041831,44043644,44045478,44047293,44048814,44050701,44052668,44053132,44053753,44054202,44054675,44055267,44055792,44056373,44056789,44057665,44058222,44059557,44060977,44062365,44063619,44064749,44065560,44066196,44066838,44067869,44069249,44070778,44072249,44073682,44075091,44075719,44076957,44077904,44079387,44080827,44081976,44083314,44084579,44085877,44087239,44089185,44090927,44092662,44094444,44095725,44095796,44096272,44097341,44098107,44098568,44099269,44099729,44100424,44100972,44101577,44102327,44103570,44104346,44105545,44106971,44108399,44109819,44111237,44112654,44114336,44115949,44117635,44119232,44120795,44122336,44124082,44125871,44127281,44128369,44129441,44130623,44131916,44133269,44134494,44135759,44137114,44138549,44140147,44141700,44143384,44145064,44146527,44147831,44149297,44150540,44150881,44150906,44150936,44150961,44151847,44152493,44153822,44154649,44156295,44157908,44159582,44161194,44162801,44164035,44165688,44167212,44168763,44170308,44172172,44174088,44176029,44177936,44179876,44181771,44182924,44183783,44185215,44186723,44187742,44188707,44189810,44191069,44192480,44193900,44195396,44196874,44198450,44199968,44201682,44203428,44204999,44206600,44208133,44209682,44211260,44212830,44214333,44215918,44217878,44219934,44221984,44224002,44225942,44227809,44229836,44231835,44233664,44235433,44237376,44239240,44241265,44243265,44245303,44247295,44249324,44251305,44253337,44255310,44257357,44259404,44261261,44262999,44264970,44266969,44269004,44271000,44272773,44274424,44275799,44277010,44278257,44279458,44281271,44283278,44285044,44286761,44288621,44290535,44292370,44294136,44295897,44297652,44299593,44301525,44303504,44305465,44307411,44309419,44311396,44313381,44315052,44316598,44318165,44319708,44321244,44322789,44324343,44325878,44327347,44328734,44330103,44331433,44332742,44334037,44335436,44336734,44338618,44340621,44342613,44344589,44346587,44348573,44350525,44352441,44354456,44356438,44358162,44359864,44361525,44363174,44364863,44366520,44367126,44367371,44368244,44369583,44370901,44372129,44373140,44374190,44375078,44376128,44377591,44379296,44380924,44382560,44384309,44386021,44387616,44389116,44390733,44392296,44393914,44395466,44397044,44398508,44399984,44401269,44402445,44403525,44404854,44406107,44407407,44408633,44410057,44411492,44413060,44414627,44416147,44417618,44418994,44420435,44421440,44422439,44423845,44425427,44426635,44427392,44428687,44429968,44431429,44432920,44434397,44435902,44437240,44438400,44439832,44441327,44442887,44444601,44446402,44448261,44450051,44451883,44453580,44455127,44456772,44458371,44460013,44461575,44463170,44464655,44466230,44467742,44469059,44470372,44471871,44473424,44474895,44476250,44477637,44479027,44480426,44481796,44482653,44483153,44483711,44484153,44485411,44486858,44488469,44489981,44491431,44492864,44494395,44495909,44497383,44498761,44500004,44501132,44502383,44503697,44505176,44506684,44507860,44508856,44509388,44509721,44511242,44513028,44514902,44516674,44518327,44519851,44520954,44521987,44523389,44524935,44526505,44528065,44529632,44531205,44532781,44534335,44536153,44537907,44539746,44541475,44543351,44545149,44547004,44548798,44550155,44551522,44552926,44554305,44555743,44557147,44558759,44560438,44562073,44563612,44565133,44566619,44568138,44569655,44571141,44572610,44574444,44576375,44578008,44579542,44580347,44581078,44582012,44582853,44584039,44585535,44587235,44588906,44590528,44591996,44593569,44594920,44596173,44597380,44598187,44598750,44599642,44600467,44601230,44601844,44603023,44604557,44605338,44605839,44606437,44606955,44608508,44610317,44611646,44612741,44613842,44614871,44616206,44617620,44618858,44619913,44620880,44621761,44623125,44624557,44626015,44627446,44628859,44630299,44631979,44633680,44635419,44637062,44638946,44640848,44642515,44644085,44645220,44646248,44647473,44648611,44649682,44650674,44651651,44652498,44653668,44654655,44655903,44657074,44657851,44658338,44658962,44659594,44660205,44660725,44661348,44661962,44662544,44663048,44663698,44664327,44664933,44665443,44666084,44666680,44667252,44667693,44668248,44668797,44670428,44672303,44673597,44674635,44675751,44676781,44677898,44678930,44680094,44681209,44682907,44684672,44686300,44688021,44689696,44691387,44693065,44694763,44696069,44697248,44698795,44700477,44702163,44703885,44705750,44707620,44708223,44708458,44708812,44709117,44709394,44709576,44709948,44710186,44710455,44710510,44710769,44710794,44711008,44711139,44711410,44711655,44711979,44712226,44713415,44714921,44716466,44718153,44719364,44720452,44721527,44722603,44723749,44724997,44726481,44727946,44729438,44730867,44732692,44734542,44736319,44738013,44739626,44741001,44742637,44744231,44745737,44747126,44748532,44749811,44751111,44752871,44754462,44755716,44757222,44758703,44760178,44761686,44763179,44764396,44765782,44767236,44768665,44770119,44771662,44773175,44774667,44775735,44776956,44778269,44779730,44780848,44782134,44783379,44784510,44785578,44786566,44787369,44788197,44788816,44788841,44789028,44790309,44792083,44793968,44795855,44797718,44798843,44800097,44801386,44802571,44803515,44804463,44805535,44806649,44808216,44809853,44811487,44813108,44814822,44816419,44818124,44819813,44821517,44823197,44824842,44826489,44828182,44829891,44831572,44833220,44834922,44836575,44838272,44839942,44841666,44843315,44844871,44846527,44848234,44849928,44851563,44852923,44854066,44855521,44857064,44858720,44860523,44862441,44864352,44866285,44868033,44869200,44870342,44871565,44872683,44874303,44875834,44877175,44877991,44878857,44879750,44881798,44883738,44885743,44887791,44889839,44891887,44893935,44895983,44897916,44899964,44902012,44903962,44906010,44908058,44910059,44912107,44914155,44916203,44918251,44920299,44922347,44924352,44926229,44928171,44930224,44932117,44934096,44936098,44938051,44940012,44942060,44944108,44946156,44948204,44950252,44952149,44954027,44956075,44958123,44960171,44962219,44964225,44966273,44968144,44970192,44972240,44974288,44976286,44978334,44980274,44982322,44984379,44986427,44988475,44990523,44992571,44994619,44996624,44998672,45000720,45002768,45004816,45006864,45008912,45010911,45012959,45014914,45016962,45018839,45020887,45022935,45024983,45027031,45029079,45031127,45033131,45035179,45037227,45039275,45041323,45043265,45045313,45047190,45049238,45051286,45053286,45055176,45057103,45059074,45061003,45062950,45064960,45066876,45068924,45070972,45073020,45075068,45077116,45079164,45081212,45083260,45085241,45087289,45089337,45091338,45093386,45095393,45097357,45099365,45101368,45103314,45105253,45107191,45109076,45111077,45113125,45115173,45117124,45119172,45121220,45123268,45125276,45127324,45129313,45131369,45133417,45135465,45137513,45139561,45141609,45143657,45145705,45147753,45149801,45151849,45153897,45155905,45157953,45160001,45162049,45164097,45166145,45168130,45170178,45172226,45174274,45176322,45178370,45180418,45182391,45184439,45186487,45188535,45190583,45192631,45194679,45196727,45198707,45200711,45202759,45204625,45206673,45208721,45210769,45212817,45214865,45216913,45218961,45221009,45223000,45225048,45227096,45229144,45231142,45233190,45235194,45237197,45239245,45241293,45243341,45245389,45247437,45249485,45251495,45253543,45255591,45257639,45259687,45261735,45263783,45265831,45267879,45269927,45271975,45274023,45276071,45278119,45280167,45282215,45284263,45286311,45288313,45290260,45292116,45294164,45296105,45298065,45300113,45302119,45304068,45305939,45307987,45310035,45312083,45314131,45316136,45318184,45320232,45322280,45324328,45326376,45328424,45330249,45332188,45334190,45336238,45338239,45340060,45341887,45343935,45345983,45348031,45350079,45352127,45354129,45356135,45358183,45360055,45362103,45364151,45366199,45368247,45370295,45372343,45374391,45376439,45378441,45380489,45382537,45384585,45386633,45388681,45390729,45392777,45394825,45396873,45398921,45400969,45402971,45405019,45407067,45409115,45411163,45413211,45415163,45417211,45419259,45421262,45423014,45424594,45426642,45428690,45430738,45432786,45434737,45436785,45438833,45440881,45442887,45444935,45446983,45448929,45450977,45452940,45454988,45456923,45458919,45460869,45462917,45464965,45466714,45468762,45470637,45472685,45474733,45476781,45478829,45480877,45482925,45484888,45486936,45488984,45491032,45493080,45495128,45497176,45499224,45501226,45503274,45505322,45507370,45509418,45511466,45513420,45515468,45517516,45519564,45521612,45523482,45525530,45527578,45529549,45531597,45533491,45535539,45537540,45539537,45541476,45543524,45545530,45547578,45549626,45551674,45553722,45555770,45557818,45559823,45561871,45563875,45565923,45567971,45570019,45572067,45574072,45576120,45578168,45580216,45582264,45584312,45586252,45588300,45590348,45592355,45594403,45596274,45598322,45600370,45602418,45604466,45606474,45608522,45610570,45612618,45614620,45616668,45618716,45620632,45622680,45624643,45626691,45628649,45630591,45632518,45634523,45636571,45638512,45640560,45642608,45644656,45646412,45648396,45650403,45652407,45654455,45656503,45658551,45660599,45662647,45664599,45666647,45668522,45670463,45672411,45674415,45676463,45678511,45680559,45682607,45684655,45686598,45688646,45690599,45692647,45694587,45696472,45698316,45700314,45702362,45704410,45706458,45708506,45710554,45712564,45714459,45716507,45718555,45720603,45722605,45724653,45726701,45728749,45730705,45732753,45734685,45736715,45738712,45740760,45742808,45744809,45746857,45748905,45750953,45752953,45755001,45757049,45759053,45761101,45763149,45765197,45767245,45769255,45771303,45773351,45775399,45777398,45779446,45781494,45783542,45785415,45787463,45789511,45791559,45793607,45795655,45797655,45799703,45801751,45803799,45805798,45807846,45809787,45811835,45813771,45815662,45817606,45819654,45821702,45823508,45825529,45827577,45829625,45831627,45833675,45835723,45837729,45839777,45841775,45843823,45845871,45847919,45849967,45852015,45854063,45856111,45858159,45860100,45862148,45864196,45866244,45868292,45870340,45872338,45874386,45876391,45878439,45880487,45882535,45884583,45886631,45888503,45890551,45892599,45894326,45896261,45898309,45900357,45902405,45904453,45906501,45907924,45909572,45911620,45913668,45915716,45917658,45919706,45921754,45923802,45925801,45927849,45929580,45931628,45933676,45935666,45937527,45939575,45941455,45943503,45945376,45947424,45949472,45951520,45953478,45955347,45957395,45959443,45961491,45963539,45965518,45967557,45969605,45971521,45973569,45975617,45977625,45979568,45981616,45983610,45985658,45987706,45989754,45991711,45993655,45995656,45997704,45999752,46001800,46003848,46005896,46007944,46009942,46011990,46014038,46016086,46018134,46020134,46022182,46024230,46026278,46028277,46030325,46032373,46033591,46035639,46037687,46039735,46041783,46043784,46045832,46047880,46049928,46051932,46053980,46056028,46058076,46060124,46062172,46064179,46066227,46068275,46070323,46072380,46074428,46076476,46078474,46080522,46082570,46084618,46086666,46088669,46090717,46092765,46094813,46096744,46098792,46100840,46102888,46104936,46106945,46108993,46111041,46113089,46115091,46117139,46119082,46121130,46123178,46125226,46127274,46129322,46131008,46132881,46134929,46136929,46138977,46140967,46142967,46144895,46146943,46148991,46151039,46153087,46154965,46157013,46159061,46161109,46163157,46165205,46167253,46169301,46171349,46173397,46175445,46177493,46179541,46181589,46183637,46185685,46187733,46189613,46191661,46193709,46195580,46197628,46199676,46201724,46203598,46205646,46207694,46209742,46211790,46213838,46215886,46217934,46219807,46221685,46223558,46225606,46227477,46228971,46231019,46232944,46234945,46236993,46239041,46240982,46243030,46245078,46247081,46249020,46251068,46252937,46254985,46256986,46258989,46260991,46263018,46264964,46266923,46268971,46270971,46273019,46275067,46277115,46279059,46281107,46283155,46285162,46287210,46289258,46291306,46293249,46295297,46297345,46299200,46301157,46303205,46305253,46307301,46309349,46311350,46313398,46315446,46317494,46319498,46321546,46323594,46325547,46327595,46329643,46331598,46333646,46335599,46337548,46339596,46341644,46343584,46345632,46347680,46349630,46351633,46353681,46355630,46357633,46359681,46361729,46363676,46365687,46367694,46369742,46371790,46373665,46375713,46377761,46379630,46381678,46383726,46385774,46387822,46389870,46391918,46393966,46396014,46398018,46400066,46402114,46404162,46406210,46408210,46410258,46412306,46414354,46416355,46418403,46420313,46422361,46424409,46426457,46428505,46430505,46432446,46434454,46436394,46438442,46440442,46442290,46444338,46446386,46448434,46450482,46452530,46454578,46456626,46458674,46460722,46462770,46464818,46466866,46468923,46470971,46473019,46475016,46477023,46478985,46481033,46483081,46485129,46487177,46489225,46491273,46493216,46495264,46497312,46499360,46501408,46503456,46505504,46507475,46509523,46511571,46513619,46515619,46517667,46519715,46521763,46523811,46525859,46527907,46529955,46532003,46534051,46536099,46538147,46540195,46542198,46544246,46546294,46548342,46550390,46552438,46554486,46556534,46558582,46560630,46562678,46564726,46566774,46568775,46570823,46572871,46574919,46576967,46579015,46581063,46583111,46585159,46587207,46589255,46591257,46593305,46595353,46597401,46599449,46601497,46603545,46605593,46607641,46609689,46611687,46613735,46615783,46617831,46619879,46621927,46623975,46626023,46628071,46630119,46632123,46634171,46636219,46638267,46640315,46642363,46644411,46646415,46648463,46650511,46652559,46654607,46656655,46658703,46660751,46662754,46664802,46666850,46668898,46670946,46672994,46675042,46677049,46679097,46681145,46683193,46685241,46687289,46689337,46691334,46693382,46695430,46697478,46699457,46701505,46703503,46705442,46707490,46709538,46711586,46713460,46715401,46717449,46719420,46721468,46723516,46725564,46727565,46729613,46731661,46733709,46735757,46737805,46739853,46741850,46743898,46745946,46747994,46750042,46751983,46754031,46756079,46758127,46760175,46762127,46764175,46766113,46768161,46770170,46772218,46774266,46776269,46778317,46780365,46782372,46784420,46786468,46788516,46790512,46792560,46794608,46796475,46798523,46800571,46802619,46804667,46806715,46808763,46810811,46812821,46814869,46816917,46818965,46821013,46823061,46825109,46827157,46829205,46831208,46833213,46835219,46837267,46839230,46841278,46843326,46845273,46847321,46849369,46850908,46852956,46854958,46857006,46859054,46861102,46863150,46865198,46867246,46869294,46871342,46873390,46875438,46877486,46879534,46881582,46883638,46885640,46887688,46889736,46891784,46893832,46895880,46897928,46899976,46902024,46904072,46906075,46908123,46910171,46912219,46914267,46916315,46918363,46920411,46922459,46924507,46925869,46927242,46929290,46931258,46933306,46935077,46937125,46939173,46941221,46943269,46945317,46947365,46949338,46951386,46953434,46955482,46957530,46959578,46961626,46963627,46965675,46967723,46969771,46971819,46973867,46975915,46977963,46979961,46982009,46984057,46986105,46988153,46990201,46992213,46994261,46996309,46998357,47000405,47002413,47004461,47006509,47008557,47010567,47012506,47014554,47016602,47018650,47020698,47022746,47024794,47026842,47028890,47030896,47032944,47034992,47037040,47039088,47041136,47043135,47045183,47047231,47049238,47051286,47053334,47055382,47057430,47059478,47061526,47063398,47065446,47067494,47069542,47071590,47073638,47075478,47077526,47079574,47081622,47083670,47085718,47087766,47089814,47091862,47093738,47095786,47097834,47099882,47101755,47103803,47105851,47107899,47109947,47111995,47114043,47116091,47118139,47120187,47122235,47124283,47126331,47128379,47130290,47132209,47134257,47136305,47138353,47140401,47142409,47144457,47146505,47148553,47150601,47152610,47154658,47156706,47158754,47160802,47162800,47164739,47166681,47168729,47170777,47172611,47174659,47176707,47178755,47180803,47182741,47184613,47186122,47188170,47190218,47192266,47194139,47196187,47198235,47200283,47202331,47204379,47206427,47208475,47210476,47212450,47214498,47216502,47218345,47220330,47222378,47224426,47226299,47228347,47230395,47232443,47234491,47236539,47238587,47240590,47242638,47244686,47246734,47248782,47250830,47252833,47254881,47256755,47258803,47260805,47262853,47264725,47266782,47268830,47270878,47272926,47274974,47277022,47279070,47281118,47283166,47285214,47287262,47289262,47291310,47293358,47295406,47297454,47299502,47301550,47303598,47305646,47307654,47309702,47311750,47313798,47315846,47317894,47319942,47321945,47323998,47325895,47327768,47329816,47331864,47333912,47335960,47338008,47340010,47342058,47344106,47346154,47348202,47350250,47352298,47354346,47356350,47358406,47360454,47362502,47364550,47366598,47368646,47370652,47372700,47374748,47376796,47378844,47380892,47382940,47384946,47386994,47389042,47391090,47393138,47395186,47397234,47399234,47401282,47403320,47405359,47407407,47409455,47411503,47413551,47415599,47417647,47419695,47421743,47423791,47425801,47427849,47429897,47431945,47433993,47436041,47438089,47440137,47442185,47444233,47446281,47448285,47450333,47452381,47454429,47456477,47458525,47460573,47462621,47464669,47466717,47468714,47470762,47472810,47474858,47476906,47478954,47481002,47483050,47485098,47487146,47489194,47491242,47493290,47495338,47497338,47499386,47501434,47503482,47505530,47507578,47509578,47511626,47513674,47515722,47517731,47519615,47521488,47523365,47525413,47527461,47529509,47531507,47533555,47535603,47537651,47539699,47541747,47543795,47545843,47547891,47549890,47551938,47553986,47556034,47558082,47560130,47562128,47564176,47566224,47568272,47570320,47572318,47574366,47576414,47578462,47580510,47582510,47584558,47586606,47588546,47590594,47592642,47594581,47596629,47598677,47600725,47602773,47604821,47606869,47608917,47610965,47613013,47615013,47617061,47619109,47621157,47623205,47625253,47627301,47629349,47631397,47633445,47635450,47637498,47639546,47641594,47643642,47645690,47647738,47649786,47651834,47653882,47655930,47657930,47659978,47662026,47664074,47666122,47668170,47670218,47672222,47674270,47676230,47678278,47680326,47682374,47684422,47686420,47688298,47690346,47692403,47694451,47696499,47698547,47700595,47702650,47704698,47706746,47708794,47710842,47712890,47714938,47716986,47719034,47721086,47723023,47725071,47727128,47729176,47731175,47733223,47735228,47737181,47739229,47741277,47743325,47745373,47747421,47749469,47751517,47753574,47755534,47757582,47759630,47761285,47763327,47765375,47767389,47769437,47771485,47773533,47775581,47777629,47779677,47781725,47783773,47785736,47787784,47789832,47791880,47793928,47795976,47797906,47799555,47801603,47803611,47805551,47807599,47809647,47811695,47813743,47815791,47817768,47819769,47821817,47823761,47825809,47827770,47829818,47831866,47833810,47835858,47837906,47839954,47841808,47843856,47845904,47847952,47850000,47851995,47854043,47856047,47858095,47860143,47862033,47863666,47865714,47867712,47869760,47871808,47873865,47875850,47877898,47879946,47881994,47884042,47886028,47888076,47890124,47892172,47894145,47896193,47898241,47900289,47902337,47904385,47906293,47908275,47910323,47912371,47914419,47916467,47918515,47920563,47922611,47924659,47926716,47928764,47930756,47932804,47934852,47936842,47938890,47940891,47942939,47944987,47947035,47949083,47951131,47953179,47955227,47957275,47959323,47961371,47963419,47965467,47967515,47969563,47971611,47973659,47975707,47977755,47979803,47981804,47983852,47985900,47987948,47989996,47992044,47994092,47996140,47998188,48000236,48002284,48004332,48006380,48008428,48010476,48012524,48014572,48016620,48018668,48020716,48022764,48024812,48026860,48028908,48030956,48033004,48035004,48037052,48039100,48041148,48043196,48045244,48047292,48049340,48051388,48053381,48055429,48057477,48059525,48061573,48063621,48065669,48067717,48069765,48071757,48073805,48075853,48077901,48079949,48081997,48084045,48086093,48088141,48090189,48092237,48094285,48096333,48098381,48100429,48102477,48104525,48106573,48108621,48110669,48112717,48114765,48116764,48118812,48120860,48122908,48124904,48126952,48128952,48131000,48133048,48135044,48137092,48139140,48141189,48143075,48145088,48147136,48149027,48151075,48153123,48154958,48156788,48158836,48160884,48162932,48164987,48167032,48169019,48171067,48173115,48175163,48177211,48179207,48181255,48183303,48185351,48187399,48189447,48191495,48193543,48195545,48197593,48199641,48201689,48203737,48205785,48207833,48209886,48211943,48213945,48215993,48218041,48220089,48222137,48224137,48226185,48228233,48230221,48232269,48234265,48236269,48238317,48240365,48242421,48244375,48246423,48248471,48250519,48252567,48254615,48256614,48258662,48260613,48262661,48264655,48266703,48268751,48270799,48272784,48274832,48276880,48278868,48280916,48282907,48284955,48286951,48288999,48291047,48293095,48295143,48297191,48299213,48301265,48303313,48305361,48307409,48309457,48311505,48313553,48315601,48317649,48319697,48321697,48323745,48325796,48327730,48329778,48331826,48333874,48335922,48337970,48339969,48342017,48344065,48346113,48348110,48350158,48352206,48354254,48356302,48358350,48360398,48362446,48364494,48366542,48368590,48370638,48372686,48374734,48376782,48378776,48380824,48382872,48384920,48386915,48388963,48391011,48393059,48395107,48397155,48399203,48401251,48403299,48405347,48407395,48409443,48411491,48413539,48415587,48417550,48419598,48421646,48423694,48425742,48427790,48429838,48431886,48433934,48435936,48437984,48440032,48442080,48444128,48446115,48448163,48450211,48452259,48454307,48456355,48458403,48460451,48462499,48464489,48466537,48468585,48470633,48472681,48474729,48476777,48478775,48480823,48482871,48484919,48486880,48488879,48490927,48492975,48495023,48497071,48499119,48501167,48503215,48505263,48507311,48509359,48511407,48513455,48515503,48517551,48519599,48521647,48523649,48525697,48527745,48529793,48531841,48533889,48535937,48537985,48540033,48542024,48544072,48546120,48548168,48550216,48552264,48554320,48556368,48558319,48560367,48562415,48564463,48566511,48568559,48570607,48572609,48574657,48576705,48578753,48580801,48582849,48584897,48586945,48588993,48590991,48593039,48595087,48597135,48599183,48601231,48603279,48605327,48607375,48609423,48611471,48613519,48615508,48617556,48619604,48621652,48623700,48625748,48627796,48629844,48631892,48633940,48635988,48638036,48640084,48642132,48644180,48646175,48648223,48650271,48652319,48654367,48656415,48658463,48660511,48662559,48664607,48666655,48668711,48670725,48672602,48674650,48676698,48678693,48680741,48682789,48684837,48686885,48688933,48690981,48693029,48695077,48697125,48699173,48701221,48703269,48705317,48707365,48709413,48711461,48713459,48715507,48717555,48719603,48721651,48723699,48725747,48727746,48729794,48731842,48733890,48735882,48737930,48739926,48741974,48744022,48746010,48748058,48750106,48752154,48754196,48756244,48758238,48760286,48762334,48764382,48766439,48768435,48770483,48772531,48774579,48776627,48778675,48780723,48782771,48784819,48786867,48788915,48790963,48793011,48795059,48797107,48799155,48801203,48803256,48805277,48807325,48809373,48811421,48813469,48815517,48817565,48819613,48821661,48823709,48825757,48827805,48829853,48831901,48833949,48835618,48836659,48837763,48838911,48840088,48842021,48842861,48843556,48844661,48846709,48848757,48849973,48850007,48850041,48850075,48850109,48850143,48850177,48850697,48851046,48851545,48852068,48852676,48853399,48854039,48854542,48855141,48855726,48856359,48856910,48857586,48858245,48858861,48859535,48860207,48860890,48861652,48862468,48863200,48863972,48864657,48865747,48866793,48867734,48868646,48869559,48870504,48871458,48872403,48873409,48874420,48875366,48876329,48877143,48878094,48879423,48880608,48881923,48883044,48884377,48885592,48886741,48887881,48889026,48890190,48891331,48892484,48893632,48894807,48895927,48896897,48898371,48900242,48902125,48904016,48905988,48907779,48909670,48911718,48913766,48915814,48917862,48919910,48921958,48924006,48926054,48928102,48930150,48932198,48934246,48936294,48938342,48940390,48942438,48944486,48946534,48948582,48950557,48952605,48954653,48956701,48958749,48960797,48962845,48964893,48966941,48968989,48971037,48973085,48975133,48977181,48979229,48981277,48983325,48985373,48987421,48989403,48991451,48993499,48995547,48997595,48999643,49001691,49003739,49005787,49007835,49009883,49011931,49013979,49016027,49018075,49020123,49022171,49024219,49026267,49028315,49030290,49032338,49034386,49036434,49038482,49040530,49042578,49044626,49046674,49048722,49050770,49052818,49054866,49056914,49058962,49061010,49063058,49065106,49067154,49069202,49071197,49073245,49075293,49077341,49079389,49081437,49083485,49085533,49087581,49089629,49091677,49093725,49095773,49097821,49099869,49101917,49103965,49106013,49108061,49110039,49112087,49114135,49116183,49118231,49120279,49122327,49124375,49126423,49128471,49130519,49132567,49134615,49136663,49138711,49140759,49142807,49144855,49146903,49148951,49150926,49152974,49155022,49157070,49159118,49161166,49163214,49165262,49167310,49169358,49171406,49173454,49175502,49177550,49179598,49181646,49183694,49185742,49187790,49189767,49191815,49193863,49195911,49197959,49200007,49202055,49204103,49206151,49208199,49210247,49212295,49214343,49216391,49218439,49220487,49222535,49224583,49226631,49228679,49230658,49232706,49234754,49236735,49238783,49240762,49242810,49244367,49245695,49247188,49248860,49250028,49251272,49252855,49254226,49255897,49257875,49259851,49261899,49263871,49265849,49267894,49269901,49271881,49273929,49275904,49277952,49279932,49281980,49283955,49286003,49288051,49290021,49292069,49294047,49296095,49298073,49300121,49302100,49304148,49306196,49308168,49310145,49312193,49314164,49316212,49318188,49320236,49322214,49324262,49326310,49328286,49330334,49332306,49334354,49336242,49338290,49340338,49342314,49344362,49346410,49348389,49350367,49352415,49354391,49356439,49358414,49360389,49362367,49364341,49366318,49368366,49370342,49372390,49374364,49376341,49378321,49380369,49382417,49384465,49386439,49388487,49390535,49392509,49394486,49396461,49398509,49400557,49402527,49404575,49406549,49408597,49410572,49412620,49414668,49416655,49418703,49420751,49422729,49424777,49426825,49428802,49430850,49432830,49434878,49436926,49438974,49441022,49442993,49444970,49447018,49449066,49451114,49453162,49455210,49457188,49459236,49461284,49463332,49465380,49467428,49469476,49471524,49473499,49475547,49477521,49479496,49481544,49483515,49485494,49487471,49489449,49491427,49493475,49495451,49497428,49499405,49501381,49503361,49505409,49507391,49509439,49511484,49513495,49515471,49517445,49519493,49521475,49523523,49525497,49527473,49529471,49531527,49533575,49535623,49537671,49539649,49541697,49543674,49545722,49547702,49549750,49551724,49553772,49555748,49557727,49559708,49561756,49563732,49565780,49567750,49569798,49571846,49573823,49575871,49577919,49579901,49581949,49583997,49585970,49588018,49590066,49592046,49594094,49596071,49598049,49600097,49602145,49604193,49606166,49608214,49610262,49612315,49614318,49616366,49618344,49620392,49622440,49624412,49626390,49628374,49630422,49632399,49634447,49636424,49638472,49640452,49642500,49644548,49646524,49648501,49650549,49652525,49654503,49656479,49658527,49660503,49662501,49664553,49666443,49668491,49670482,49672462,49674510,49676488,49678510,49680539,49682517,49684499,49686547,49688595,49690643,49692691,49694675,49696723,49698771,49700819,49702867,49704915,49706891,49708939,49710987,49713035,49715083,49717131,49719111,49721159,49723207,49725255,49727303,49729351,49731399,49733375,49735423,49737471,49739519,49741567,49743548,49745596,49747644,49749692,49751740,49753788,49755836,49757810,49759858,49761906,49763954,49766002,49768050,49770022,49772070,49774118,49776166,49778223,49779833,49781850,49783898,49785946,49787994,49790042,49792090,49793518,49795496,49797544,49799525,49801573,49803546,49805528,49807576,49809624,49811672,49813653,49815701,49817749,49819797,49821835,49823854,49825902,49827950,49829998,49832046,49834026,49836074,49838122,49840170,49842218,49844266,49846314,49848362,49850334,49852382,49854430,49856478,49858526,49860574,49862622,49864670,49866645,49868693,49870741,49872789,49874837,49876885,49878933,49880981,49883029,49885000,49887048,49889096,49891144,49893192,49895240,49897288,49899336,49901384,49903356,49905404,49907452,49909500,49911548,49913596,49915573,49917621,49919669,49921649,49923697,49925745,49927793,49929841,49931812,49933860,49935908,49937890,49939938,49941986,49944034,49946082,49948059,49950107,49952155,49954203,49956251,49958299,49960274,49962322,49964370,49966418,49968466,49970446,49972494,49974542,49976590,49978638,49980686,49982734,49984709,49986757,49988805,49990789,49992837,49994885,49996933,49998981,50001029,50003077,50005125,50007173,50009221,50011269,50013048,50015092,50017063,50018953,50021001,50022977,50024950,50026926,50028906,50030880,50032928,50034913,50036961,50039009,50041057,50043105,50045153,50047201,50049249,50051297,50053271,50055319,50057367,50059415,50061463,50063511,50065559,50067607,50069655,50071635,50073683,50075731,50077779,50079827,50081875,50083923,50085971,50088019,50089995,50092043,50094091,50096139,50098187,50100235,50102283,50104331,50106379,50108427,50110475,50112446,50114494,50116542,50118590,50120638,50122614,50124662,50126710,50128758,50130806,50132854,50134902,50136879,50138927,50140975,50143023,50145071,50147119,50149167,50151215,50153193,50155241,50157289,50159337,50161385,50163433,50165481,50167457,50169505,50171553,50173601,50175649,50177697,50179745,50181793,50183841,50185889,50187861,50189909,50191957,50194005,50196053,50198101,50200149,50202121,50204169,50206217,50208265,50210313,50212361,50214409,50216381,50218429,50220477,50222525,50224573,50226550,50228598,50230646,50232694,50234742,50236790,50238838,50240813,50242861,50244909,50246957,50249005,50251053,50253101,50255149,50257124,50259172,50261170,50263142,50265118,50267091,50269063,50271039,50273018,50274992,50276966,50278938,50280912,50282890,50284872,50286849,50288897,50290872,50292920,50294891,50296866,50298838,50300726,50302703,50304589,50306566,50308544,50310523,50312571,50314541,50316513,50318398,50320446,50322422,50324316,50326294,50328342,50330231,50332279,50334257,50336239,50338223,50340271,50342251,50344299,50346273,50348252,50350300,50352280,50354328,50356303,50358351,50360399,50362447,50364495,50366543,50368591,50370639,50372615,50374663,50376711,50378688,50380736,50382784,50384767,50386815,50388863,50390911,50392959,50394934,50396982,50399030,50401006,50403054,50405102,50407078,50409126,50411105,50413083,50415131,50417179,50419227,50421275,50423323,50425371,50427346,50429394,50431442,50433490,50435538,50437586,50439634,50441609,50443657,50445705,50447753,50449728,50451776,50453753,50455801,50457849,50459897,50461945,50463993,50465970,50468018,50470066,50472114,50474162,50476210,50478258,50480236,50482284,50484332,50486380,50488359,50490407,50492455,50494503,50496479,50498527,50500575,50502623,50504671,50506719,50508767,50510815,50512863,50514837,50516885,50518933,50520981,50523029,50525077,50527125,50529107,50531155,50533203,50535251,50537299,50539347,50541395,50543373,50545421,50547469,50549517,50551565,50553613,50555661,50557709,50559757,50561730,50563778,50565826,50567874,50569922,50571970,50574018,50576066,50578041,50580089,50582137,50584185,50586233,50588281,50590329,50592377,50594425,50596395,50598443,50600414,50602462,50604436,50606484,50608456,50610504,50612552,50614600,50616648,50618696,50620744,50622792,50624840,50626820,50628868,50630916,50632964,50635012,50637060,50639032,50641080,50643128,50645176,50647224,50649272,50651320,50653368,50655416,50657392,50659440,50661488,50663536,50665584,50667563,50669611,50671659,50673707,50675755,50677803,50679851,50681899,50683947,50685925,50687973,50690021,50692069,50694117,50696165,50698213,50700193,50702241,50704289,50706337,50708385,50710433,50712412,50714460,50716508,50718556,50720604,50722652,50724700,50726674,50728722,50730770,50732818,50734866,50736914,50738962,50741010,50742992,50745040,50747088,50749136,50751184,50753232,50755206,50757254,50759302,50761350,50763398,50765446,50767494,50769542,50771520,50773568,50775616,50777664,50779712,50781760,50783741,50785789,50787837,50789814,50791862,50793910,50795958,50798006,50800054,50802102,50804150,50806203,50808202,50810250,50812225,50814273,50816252,50818231,50820210,50822232,50824261,50826155,50828203,50830184,50832164,50834212,50836187,50838167,50840061,50842037,50844085,50846060,50848108,50850156,50852204,50854182,50856230,50858278,50860250,50862298,50864262,50866238,50868286,50870334,50872382,50874363,50876411,50878459,50880439,50882487,50884535,50886583,50888555,50890603,50892572,50894620,50896600,50898648,50900696,50902668,50904716,50906764,50908812,50910789,50912837,50914885,50916864,50918912,50920892,50922940,50924988,50926969,50929017,50931065,50933113,50935161,50937209,50939257,50941229,50943277,50945325,50947373,50949421,50951304,50953169,50954990,50957038,50958988,50961036,50963084,50965057,50967022,50969070,50971050,50973098,50975146,50977194,50979171,50981219,50983267,50985315,50987363,50989411,50991386,50993434,50995379,50997427,50999475,51001523,51003571,51005619,51007667,51009715,51011690,51013738,51015786,51017834,51019882,51021865,51023913,51025961,51028009,51030057,51032035,51034083,51036131,51038179,51040227,51042275,51044251,51046299,51048347,51050395,51052409,51054448,51056496,51058544,51060592,51062640,51064688,51066736,51068784,51070760,51072808,51074856,51076904,51078952,51081000,51082894,51084871,51086852,51088830,51090878,51092926,51094900,51096880,51098928,51100906,51102886,51104934,51106905,51108884,51110859,51112907,51114885,51116933,51118981,51120947,51122995,51125043,51127019,51129067,51131041,51133089,51135061,51137109,51139064,51141044,51143092,51145140,51147119,51149093,51151141,51153189,51155075,51157065,51159113,51161090,51163066,51165114,51167089,51169137,51171105,51173153,51175201,51177249,51179220,51181268,51183316,51185364,51187412,51189460,51191349,51193397,51195445,51197422,51199331,51201379,51203353,51205329,51207377,51209359,51211246,51213220,51215268,51217250,51219228,51221276,51223255,51225237,51227285,51229262,51231310,51233289,51235269,51237317,51239290,51241269,51243243,51245218,51247266,51249246,51251294,51253342,51255325,51257373,51259421,51261469,51263517,51265424,51267472,51269520,51271568,51273616,51275611,51277575,51279623,51281671,51283719,51285767,51287747,51289795,51291772,51293820,51295868,51297833,51299881,51301858,51303906,51305954,51308002,51309980,51312028,51313982,51316030,51317987,51319969,51322017,51323977,51325947,51327995,51329970,51331947,51333995,51335973,51338021,51340069,51342117,51344099,51346147,51348122,51350175,51352174,51354222,51356243,51358190,51360238,51362196,51364244,51366292,51368340,51370312,51372360,51374408,51376456,51378425,51380473,51382521,51384569,51386617,51388665,51390608,51392656,51394704,51396752,51398693,51400741,51402789,51404837,51406755,51408803,51410851,51412899,51414947,51416995,51419043,51421091,51423139,51425113,51427161,51429209,51431257,51433305,51435353,51437401,51439449,51441497,51443545,51445523,51447571,51449455,51451430,51453478,51455363,51457411,51459459,51461507,51463555,51465603,51467578,51469626,51471674,51473722,51475770,51477818,51479866,51481914,51483886,51485934,51487982,51489951,51491999,51494047,51496023,51498071,51500016,51502064,51504112,51506160,51508208,51510256,51512304,51514352,51516400,51518448,51520496,51522481,51524529,51526577,51528557,51530605,51532653,51534701,51536671,51538719,51540767,51542815,51544863,51546911,51548959,51551007,51553055,51555035,51557083,51559131,51561179,51563227,51565275,51567323,51569300,51571348,51573396,51575444,51577492,51579540,51581588,51583636,51585684,51587657,51589705,51591753,51593801,51595849,51597897,51599945,51601993,51604041,51606089,51608016,51610064,51612112,51614160,51616208,51618180,51620228,51622203,51624251,51626299,51628347,51630395,51632443,51634491,51636539,51638587,51640369,51642417,51644465,51646513,51648561,51650609,51652657,51654705,51656753,51658801,51660849,51662897,51664945,51666993,51669041,51671089,51673137,51675185,51677233,51679281,51681338,51683312,51685360,51687408,51689456,51691504,51693552,51695600,51697648,51699696,51701744,51703792,51705840,51707888,51709940,51711876,51713857,51715905,51717953,51719922,51721970,51724018,51726066,51728114,51729984,51732032,51734001,51736049,51738097,51740070,51742118,51744166,51746140,51748188,51750165,51752213,51754261,51756309,51758357,51760405,51762453,51764501,51766549,51768597,51770645,51772693,51774741,51776698,51778746,51780794,51782776,51784824,51786872,51788920,51790968,51792946,51794994,51797042,51799090,51801064,51802545,51803452,51804489,51806013,51807144,51808604,51810652,51812359,51813481,51814729,51816070,51816963,51817998,51819128,51820336,51821591,51822915,51824186,51825482,51826747,51828011,51829352,51830829,51832237,51833649],"sizes":[1547,1268,1399,1129,630,853,757,878,982,1070,853,783,944,1030,874,859,831,914,889,749,828,824,958,1128,967,837,847,904,1173,1131,1107,1251,1000,803,1179,1309,1284,1258,1136,565,567,551,534,506,1064,939,973,836,505,540,836,510,775,1141,684,718,729,672,777,645,805,953,1078,1217,747,708,529,499,559,732,767,812,813,660,679,877,957,1169,883,756,1062,1017,807,1034,693,950,968,772,806,970,956,271,599,865,1025,419,545,844,726,677,574,625,757,956,812,898,654,715,718,1152,2048,1371,954,1128,1254,1234,675,1446,1102,1125,797,1080,1226,1184,1676,1458,1538,1794,982,47,45,84,53,94,47,165,249,394,497,618,619,589,675,785,793,1258,1447,1514,1442,1465,1720,1550,1560,1661,1633,1691,1659,1702,1801,1665,1606,1596,1695,1671,1448,1537,1430,1278,913,892,728,597,571,607,597,556,485,360,367,228,103,83,48,49,45,839,1497,44,48,49,47,45,46,48,49,47,45,101,330,1142,1387,1364,1445,1410,1352,1153,1056,1100,807,609,879,840,798,882,843,963,960,844,811,738,745,967,857,797,774,790,780,730,699,565,402,147,45,48,49,45,45,45,48,49,45,45,45,338,2048,1421,1414,1385,1318,1286,1303,1336,1278,1346,1308,1343,1236,1246,1297,1146,1017,1035,946,948,900,802,885,1074,1109,1172,1363,1471,1674,1574,1554,1632,1561,1393,1386,1091,1188,1339,1360,1516,1406,1305,1029,963,1115,1175,1228,1249,1246,1240,1230,1289,1278,1380,1284,1356,1327,1367,2004,444,45,48,49,46,60,320,663,905,1050,1212,1599,1693,1739,1782,1725,1726,1726,1750,1760,1877,1834,1789,1670,1390,1398,1276,1511,1786,1840,1861,1915,1885,1931,1948,1838,1860,1876,1870,1780,1785,1698,1690,1810,1894,1469,1458,1331,1129,509,79,45,42,49,45,45,45,822,947,1188,1127,1228,959,689,1227,913,886,1039,1861,1647,1430,1477,1494,1504,1522,1526,1491,1519,1509,1587,1764,1834,1946,1985,2003,1997,2012,2015,2007,1961,1904,1810,1784,1877,1930,1860,1979,2012,1926,1836,1820,1807,1746,1731,1721,1834,1830,1918,1960,1987,2005,2018,1990,1882,1637,1528,1481,1515,1529,1517,1516,1493,1469,1452,1440,1437,1815,1763,1277,1285,1294,1265,1233,1287,1378,1305,1218,1289,1231,1259,1391,1394,1427,1428,1454,1429,1420,1523,1521,1497,1555,1529,1549,1637,1639,1576,1624,1557,1592,1540,1515,1513,1662,1727,1547,1700,1584,1417,1368,1396,1291,1240,1250,1295,1250,1183,1185,1220,1153,1195,1173,1226,1332,1254,1530,1855,1107,1081,1152,1107,990,980,1064,1087,1112,1226,1067,1240,1153,1371,1454,1505,1526,1633,1543,1592,1619,1491,1376,1557,1608,1523,1563,1495,1372,1468,1233,1344,1422,1250,1374,1482,1481,1533,1509,1488,1431,1279,1232,1028,995,1020,1104,1150,1175,1094,845,1026,1032,905,946,981,1164,2048,1475,1574,1555,1616,1593,1610,1680,1595,1612,1614,1675,1624,1408,1554,1611,1538,1620,1747,1618,1537,1626,1510,1468,1443,1535,1596,1476,1496,1537,1571,1558,1547,1530,1604,1578,1649,1664,1714,1608,1572,1613,1674,1505,1487,1238,1323,1574,1522,1492,1439,1597,1627,1691,1719,1572,1499,1575,2017,1267,947,1069,1000,1111,1050,1072,1186,1053,1039,1092,1155,1198,1114,1116,1040,1139,1193,1244,1221,1188,1290,1376,1338,1176,1101,1035,1099,1038,998,971,1063,1056,933,964,918,911,1056,1046,1049,961,980,1048,1047,940,967,940,1107,1074,1116,1096,1118,1145,1120,1046,825,849,1600,1766,1278,1287,1305,1289,1243,1290,1365,1291,1217,1288,1239,1157,1294,1321,1340,1331,1349,1325,1382,1501,1622,1638,1613,1382,1292,1427,1562,1567,1736,1667,1615,1441,1264,1357,1425,1488,1435,1505,1465,1408,1362,1402,1284,1256,1248,1295,1229,1172,1165,1212,1161,1179,1163,1229,1313,1264,1547,1969,1568,1610,1587,1594,1586,1557,1560,1610,1538,1572,1624,1740,1743,1808,1826,1739,1500,1702,1645,1768,1872,1824,1748,1915,1820,1785,1919,1806,1769,1776,1709,1732,1774,1679,1671,1762,1648,1864,1813,1800,1324,1364,1411,1251,1394,1498,1483,1479,1528,1535,1495,1548,1556,1467,1437,1483,1552,2048,789,800,757,905,926,737,722,934,806,852,803,784,990,1168,1266,1188,1313,1266,1331,1482,1537,1532,1584,1655,1604,1641,1585,1600,1631,1637,1586,1481,1498,1495,1548,1559,1520,1484,1481,1429,1345,1300,1227,1186,1174,1207,1100,1028,988,1043,1017,952,1000,1007,1042,882,759,1875,1778,1839,1902,1855,1833,1799,1841,1869,1788,1725,1614,1530,1416,1837,1915,1927,1789,1902,1863,1872,1907,1931,1809,1709,1620,1581,1403,1770,1990,1812,1824,1917,1904,1866,1767,1747,1521,1455,1523,1597,1610,1717,1910,1691,2013,1808,1800,2004,1710,1893,2007,1455,1368,1623,1528,1466,1866,1741,1283,1568,1602,1512,1524,1908,1446,1422,1667,1550,1554,1867,1856,1675,1688,1724,1771,1736,1755,1754,1769,1831,1827,1868,1848,1764,1785,1790,1796,1826,1823,1806,1878,1825,1780,1747,1746,1748,1784,1692,1741,1818,1723,1763,1761,1841,1773,1777,1757,1745,1725,1712,1718,1765,1738,1708,1658,1761,1835,1899,1834,1841,1820,1857,1913,1848,1798,1683,1625,1775,2048,1925,1911,1905,1960,1912,1887,1915,1913,1864,1883,1921,1922,1796,1795,1752,1738,1766,1843,1794,1832,1775,1855,1843,1817,1808,1762,1735,1687,1600,1555,1679,1761,1816,1742,1757,1719,1680,1728,1694,1734,1759,1785,1788,1728,1834,1908,1900,1950,1831,1778,1858,1907,1924,1917,1902,1927,1887,2048,1973,1942,1994,2000,1992,2020,1979,1967,1919,1888,1991,2016,1980,1950,1888,1934,1989,1979,1958,1993,2007,2013,1920,1917,1899,1899,1905,1836,1748,1747,1829,1928,1929,1927,1942,1988,1951,1981,1937,1927,1996,1923,1823,1852,1850,1868,1839,1836,1807,1819,1850,1818,1728,1655,1574,1500,1437,833,1888,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1555,1467,1337,1534,1501,1573,1431,1437,1327,1162,1322,1506,1408,1190,1299,1428,1547,1406,1464,1452,1367,1353,1473,1491,1448,1485,1478,1485,1463,1493,1533,1522,1585,1477,1578,1520,1562,1508,1498,1415,1579,1584,1428,1443,1373,1636,1672,1642,1628,1612,1525,1622,1700,1597,1522,1640,1540,1901,1498,1043,1126,1110,1099,970,1051,1111,1068,1125,1111,1156,1222,1315,1355,1468,1500,1572,1582,1533,1628,1571,1403,1405,1593,1583,1520,1549,1431,1431,1390,1316,1321,1383,1231,1398,1450,1516,1523,1501,1501,1343,1207,1170,998,1069,1015,1166,1175,1174,965,879,1047,965,918,947,1014,1528,1725,1090,1131,1142,1099,939,1011,1037,1070,1140,1214,1260,1312,1192,1508,1560,1503,1506,1511,1457,1624,1598,1519,1451,1621,1615,1389,1541,1501,1571,1642,1677,1847,1902,1852,1569,1777,1826,1740,1497,1682,1288,1438,1330,901,1091,1110,1089,1117,1183,1068,890,1042,1019,888,937,1005,1269,2037,1507,1530,1541,1551,1577,1470,1486,1538,1497,1511,1572,1652,1728,1771,1782,1716,1487,1678,1580,1726,1881,1771,1690,1873,1762,1763,1880,1715,1610,1862,1672,1681,1761,1530,1577,1712,1594,1835,1828,1694,1366,1362,1345,1246,1343,1456,1475,1447,1453,1469,1444,1473,1531,1403,1374,1424,1450,2044,1717,1659,1678,1742,1783,1717,1740,1793,1781,1830,1815,1883,1784,1757,1790,1787,1817,1826,1843,1789,1895,1805,1753,1770,1765,1741,1782,1686,1754,1810,1736,1759,1781,1834,1773,1758,1751,1714,1735,1698,1718,1735,1727,1701,1615,1835,1857,1898,1839,1815,1825,1879,1887,1842,1783,1695,1584,918,1877,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1551,1248,1356,1401,1451,1542,1549,1426,1468,1472,1488,1424,1447,1450,1348,1307,653,916,1150,1466,1580,1708,1845,1834,1879,1862,1819,1715,1640,1747,1754,1853,1875,1850,1807,1804,1803,1803,1582,1289,1032,1103,1260,1278,1125,1416,1279,1108,1266,1309,1419,1460,1470,1475,1394,1396,1379,1776,1812,1425,1449,1490,1558,1464,1505,1523,1408,1476,1556,1619,1440,1495,1650,1687,1638,1750,1798,1641,1734,1642,1579,1541,1496,1588,1631,1579,1601,1603,1631,1579,1533,1560,1628,1632,1613,1630,1591,1523,1561,1611,1637,1589,1460,1170,1390,1498,1482,1365,1431,1490,1580,1601,1584,1420,1443,1653,1953,1375,1377,1431,1457,1344,1406,1484,1410,1429,1407,1525,1353,1174,1526,1531,1537,1600,1671,1603,1586,1590,1473,1490,1488,1550,1548,1477,1439,1522,1577,1510,1477,1504,1591,1547,1555,1575,1597,1561,1506,1551,1496,1394,1304,989,1042,1345,1403,1291,1283,1469,1489,1528,1551,1344,1297,1386,2048,1637,1660,1649,1740,1763,1705,1765,1687,1685,1735,1802,1743,1432,1580,1677,1635,1659,1807,1704,1600,1693,1595,1532,1524,1599,1689,1553,1539,1554,1639,1638,1629,1619,1688,1658,1743,1730,1789,1680,1630,1624,1711,1582,1550,1286,1400,1707,1675,1624,1558,1705,1746,1794,1848,1698,1588,1670,1998,1049,572,623,622,662,748,762,944,984,1091,904,1022,1471,1473,1616,1626,1194,1449,1512,1701,1717,1723,1597,1665,1636,1755,1624,1710,1457,1733,1668,1768,1722,1767,1660,1614,1694,1752,1762,1703,1618,1390,1426,1262,1200,1273,1446,1265,1187,1321,1295,1416,1575,1546,1501,1547,1604,1361,1511,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2050,2018,2031,2036,2048,2057,2048,2056,2053,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2055,2042,2014,2035,2045,2048,2056,2048,2047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2049,2018,2029,2050,2053,2048,2056,2047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2057,2047,2010,2027,2047,2057,2048,2048,2051,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1987,1199,1383,1210,1077,1104,1025,1155,1144,1021,1254,1064,1217,1052,1116,1218,1013,1108,1160,1143,1185,1284,1247,907,854,891,996,921,841,851,836,863,972,655,353,372,745,1187,1405,1506,1425,1473,973,1088,1196,910,930,817,1310,1233,1366,1200,1040,1117,1016,1148,1143,1095,1193,1081,1312,1033,1091,1169,1078,1156,1145,1109,1149,1193,1276,875,824,886,962,912,790,880,803,859,994,635,354,374,797,1129,1470,1502,1443,1487,901,1111,1118,902,907,830,1838,1029,45,44,48,69,131,136,195,180,189,275,209,285,700,1011,1031,1022,1193,1483,1579,1598,1690,1617,1780,1749,1773,1575,1571,1578,1616,1670,1680,1776,1767,1595,1645,1643,1611,1632,1525,960,971,918,729,512,246,170,123,115,150,165,106,66,48,49,45,45,797,1597,132,268,243,205,220,447,424,385,389,396,266,433,718,900,914,979,1105,1360,1650,1690,1814,1750,1827,1853,1822,1690,1695,1677,1728,1856,1855,1887,1852,1790,1795,1918,1851,1854,1901,1156,1033,884,867,720,440,386,339,347,381,352,418,171,202,142,241,205,352,2057,1219,1326,1278,1197,1383,1371,1397,1343,1392,1330,1414,1481,1422,1399,1449,1497,1487,1425,1483,1485,1375,1390,1421,1366,1259,1084,1255,1414,1306,1316,1383,1374,1228,1398,1446,1315,1290,1382,1520,1461,1457,1484,1272,1391,1377,1473,1434,1426,1392,1361,1346,1315,1447,1327,1249,1165,1198,1293,1098,825,1633,1176,49,45,45,468,1014,1078,1009,1337,1509,1446,1448,1847,1805,1711,1689,1674,1093,1012,1503,1723,1768,1846,1744,1814,1805,1764,1637,1654,1672,1831,1872,1844,1869,1854,1735,1896,1896,1866,1856,1836,1619,1595,1513,1705,1517,1300,1256,1332,1176,1109,1061,729,679,45,48,49,429,684,1087,768,705,1046,1384,1275,1299,1124,1021,1058,457,887,678,692,698,674,952,860,910,961,877,972,881,927,752,870,965,923,906,746,727,647,692,772,808,788,727,985,711,752,880,823,798,854,764,977,955,864,863,802,844,917,821,837,1542,1507,1466,1503,1653,1633,1544,1570,1645,1436,1511,1527,1641,1598,1401,1794,1328,1481,1500,1665,1577,1447,1647,1387,1709,1867,1427,1484,1312,1107,1242,1321,1353,1102,1098,1229,1049,1140,1251,1252,1245,1119,831,876,807,1797,1513,1375,1464,1389,1277,1390,1188,1251,1371,1340,1226,1126,924,903,634,947,1916,1508,1510,1509,1415,1300,1375,1174,1217,1337,1319,1212,894,866,699,742,1895,1462,1470,1402,1481,1337,1231,1376,1172,1298,1383,1321,1205,1041,964,868,653,995,1888,1446,1476,1428,1460,1539,1483,1364,1192,942,809,761,880,850,826,1716,1495,1492,1426,1482,1303,1228,1347,1154,1309,1336,1300,1152,980,944,768,680,1619,1694,1472,1383,1138,1252,1472,1437,1353,934,1029,1380,1740,1587,1578,1387,1253,1126,1475,1420,1254,1041,1265,1244,1370,965,1148,1747,1758,1784,1829,1690,1612,1378,1852,1912,1800,1728,1914,1817,1307,1264,1303,1354,1453,1459,1895,1333,1398,1289,1343,1467,1527,1380,918,951,1129,1821,991,852,911,1730,1332,1340,1674,1628,1511,1746,1743,1770,1189,1509,1732,1507,1620,1883,1858,1626,1222,1579,1690,1544,1742,1919,1899,1424,1313,1665,1703,1585,1799,1913,1932,1321,1373,1674,1689,1537,1734,1907,1928,1392,1399,1638,1687,1496,1706,1852,1928,1354,1372,1684,1601,1521,1758,1758,1810,1210,1534,1731,1491,1624,1757,1819,1419,1316,1654,1657,1504,1708,1774,1871,1233,1474,1739,1530,1614,1809,1836,1577,1630,1505,1614,1586,1548,1680,1682,1536,1523,1598,1427,1586,1591,1558,1552,1450,1498,1524,1383,1514,1469,1186,1110,1173,1353,1298,1134,1283,1644,1564,1292,1299,1383,1380,1423,1177,1468,1014,1383,1877,48,49,45,45,45,88,409,674,749,828,933,984,976,1055,925,1146,1114,1276,1343,1162,1287,1332,1156,1221,1128,988,1223,1043,1217,1168,1018,943,950,792,628,729,658,345,45,45,48,49,45,1246,923,759,804,1105,1284,1291,1007,1027,1003,1043,750,720,769,973,992,1106,1176,1106,1141,1280,1281,1199,1370,1361,1341,1346,1289,1329,1207,927,804,547,553,548,776,878,781,790,902,1023,962,883,1000,1266,1054,993,1049,768,1098,1286,1048,1097,986,1024,869,1376,709,1063,1147,1647,1195,1259,1350,1468,1482,1461,1626,1781,1786,1845,1824,1784,1716,1734,1625,1680,1767,1606,1656,1600,1658,1586,1479,1653,1690,1598,1570,1579,1613,1572,1446,1199,1079,1366,1614,1503,1583,1566,1450,1344,1430,1460,1978,715,760,1056,1113,1127,1308,1405,1319,1254,1537,1444,1289,767,905,1175,1298,1419,1247,1210,1223,1137,1152,1154,1205,1324,1214,1317,1412,1221,1270,1393,1373,1323,1289,1251,1253,1209,954,978,1197,1135,1318,1135,1468,614,1413,821,1000,1186,1676,1710,829,998,1004,1756,807,890,799,1067,1121,1019,1007,1037,1219,1341,1570,1652,1660,1641,1491,1342,1406,1513,1672,1607,1689,1634,1628,1619,1581,1472,1514,1646,1821,1857,1853,1829,1743,1752,1489,1413,1346,1351,1352,1247,1008,587,983,1163,1109,1207,807,1237,835,1011,1086,924,839,1132,840,1174,1304,1476,616,603,548,694,597,632,600,1063,1098,1042,1081,815,795,809,793,822,997,955,892,994,934,786,934,778,943,999,971,947,939,583,673,714,733,728,973,884,773,936,782,851,855,995,715,1317,1520,1955,1211,1935,2000,1868,1736,1691,1783,1715,1740,1826,1898,1983,1504,45,48,49,45,45,45,48,49,45,45,45,48,531,823,1321,1411,1505,1548,1508,1484,1479,1572,1670,1685,1733,1731,1716,1671,1661,1654,1585,1621,1612,1587,1571,1311,1302,1158,1202,1068,549,383,237,148,111,45,43,49,45,45,45,44,49,45,45,45,329,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1738,1366,1180,1214,1241,1129,1133,1172,1176,1222,1246,1284,1196,1292,1378,1309,1630,1651,1500,1466,1351,1356,1547,1562,1392,1412,1680,1560,1513,1464,1445,1584,1336,1429,1393,1461,1482,1366,1168,1292,1292,1254,1214,1080,1035,937,1069,1049,1089,901,729,672,862,754,622,617,580,1101,1942,1353,1030,1081,1091,1091,1271,1376,1164,1243,1204,1193,1295,1318,1329,1518,1737,1736,1708,1814,1784,1623,1692,1347,1561,1369,1555,1656,1539,1367,1629,1629,1614,1571,1614,1629,1495,1307,1344,1325,1221,1081,1019,996,1050,976,940,1043,1074,1064,998,858,724,740,354,506,417,533,2048,643,642,708,661,666,666,655,740,686,630,639,689,870,1455,1630,1455,1625,1596,1664,1549,1522,1470,1318,947,862,1552,1395,1533,1504,1492,1509,1437,1333,1299,1092,925,1297,1497,1505,1409,1491,1408,1326,1165,755,654,732,700,655,654,655,696,677,651,672,649,693,1898,1017,681,676,657,702,694,687,676,649,669,700,701,713,1025,1611,1576,1613,1720,1709,1596,1569,1479,1450,1356,1307,1365,1309,1286,1218,1347,1355,1307,1155,1396,1692,1675,1594,1654,1635,1586,1473,1258,1073,779,772,714,662,655,644,643,696,678,637,674,689,674,671,1489,1771,300,492,628,637,664,805,889,905,1064,1093,1030,1241,1416,1524,1561,1578,1582,1526,1482,1449,1433,1460,1418,1476,1546,1415,1458,1414,1374,1287,1402,1395,1517,1648,1528,1464,1363,1198,1128,1194,1237,1253,1336,1149,1128,1097,983,997,1039,1035,943,974,897,768,643,499,386,2048,379,410,501,594,699,801,855,925,973,949,1077,1178,1290,1416,1604,1649,1702,1659,1632,1611,1419,1460,1302,1298,1328,1425,1480,1420,1427,1461,1438,1439,1440,1460,1446,1471,1652,1692,1597,1432,1277,1278,1200,1245,1227,1158,1249,1100,1083,1097,1062,950,860,751,712,608,433,1697,833,392,544,653,632,725,874,871,999,1127,1024,1162,1491,1535,1473,1509,1547,1505,1388,1264,1351,1339,1342,1407,1381,1433,1440,1279,1384,1358,1392,1364,1306,1335,1322,1305,1477,1530,1581,1579,1443,1423,1385,1306,1206,1227,1177,1165,1092,1086,992,970,892,905,694,609,391,1240,1959,2001,2048,1967,2048,1961,1963,2048,1964,2048,2057,1750,1713,1777,1724,1776,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1504,926,770,785,833,937,923,1209,923,872,856,953,973,858,909,722,870,932,813,815,850,804,1109,1204,686,948,880,1112,1106,1015,1425,1135,692,561,1148,1265,1282,1255,1340,544,477,562,601,543,707,920,989,789,768,521,624,677,659,763,1197,476,849,623,709,740,644,1158,937,942,1137,809,696,507,563,552,693,689,944,629,741,638,920,1147,829,883,950,945,1023,826,1022,752,890,1080,968,892,685,970,276,618,882,1024,338,580,970,673,703,578,587,714,911,931,865,616,693,755,1008,1883,1664,1572,1458,1419,1377,1460,1550,1996,1745,1788,1588,1423,1454,1382,1487,1546,2048,1620,1599,1710,1670,1621,1613,1741,1745,1811,1752,1714,1740,1425,1201,1217,1265,1617,1603,1654,1777,1767,1740,1704,1694,1765,1736,1692,1706,1690,1768,1745,1749,1713,1744,1743,1769,1717,1780,1699,1583,1597,1542,1317,1323,1294,1489,1516,1562,1642,1622,1582,1693,1505,1520,1648,1621,1589,1973,1598,1459,1481,1543,1511,1464,1505,1505,1427,1507,1595,1636,1415,1562,1680,1672,1690,1796,1750,1642,1735,1582,1571,1554,1526,1609,1616,1592,1604,1622,1628,1592,1545,1545,1608,1666,1574,1645,1553,1569,1596,1657,1609,1582,1362,1156,1451,1500,1440,1349,1479,1518,1581,1616,1514,1381,1484,1829,1722,1235,1203,1226,1240,1243,1278,1245,1271,1260,1301,1301,1533,1289,1291,1285,1318,1309,1312,1306,1224,1281,1272,1264,1247,1293,1224,1238,1273,1263,1229,1220,1182,1228,1228,1214,1242,1223,1256,1242,1260,1243,1274,1295,1307,1534,1317,1262,1295,1317,1316,1306,1281,1239,1292,1282,1253,1466,2038,1713,1769,1796,1786,1783,1788,1775,1755,1784,1783,1720,1736,1682,1727,1659,1614,1647,1594,1644,1659,1652,1612,1658,1723,1710,1720,1773,1729,1800,1753,1784,1740,1751,1733,1625,1661,1705,1637,1724,1607,1654,1697,1704,1713,1704,1757,1720,1781,1754,1756,1738,1752,1741,1749,1781,1741,1771,866,1417,1895,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1016,632,571,612,622,620,611,604,593,562,627,706,1420,505,551,645,592,443,383,414,1067,1639,1582,1053,1012,1379,1299,1056,1523,1184,1096,1717,1499,901,900,1135,351,452,479,496,507,433,502,355,357,251,282,312,974,2044,1572,1818,1497,1726,1322,1112,1130,959,1210,1153,1024,1168,888,1131,1114,537,1186,1219,1082,1066,1225,853,1220,893,938,1186,960,1169,641,1031,916,982,1265,872,1122,929,1152,1061,1112,1317,986,1062,1099,981,1057,729,1069,316,315,489,1166,960,983,881,1652,933,1847,938,1339,1594,1756,1486,1484,1588,1597,1598,1634,1597,1680,1621,1607,1662,1683,1625,1626,1640,1616,1616,1655,1732,1709,1706,1769,1750,1770,1672,1715,1752,1790,1802,1814,1895,1899,1887,1885,1889,1879,1766,1807,1816,1802,1826,1788,1810,1806,1798,1696,1548,1585,1636,1577,1545,1428,1551,1601,1641,1668,1833,1870,1446,1414,1479,1568,1456,1507,1535,1429,1461,1541,1624,1465,1481,1641,1678,1659,1728,1790,1660,1724,1659,1557,1576,1485,1593,1627,1576,1579,1624,1618,1575,1553,1548,1640,1630,1617,1631,1595,1543,1544,1609,1649,1626,1482,1195,1360,1494,1461,1369,1428,1489,1577,1619,1582,1417,1412,1604,1982,527,584,626,577,677,740,702,898,992,986,1109,976,1234,1249,1270,1294,1276,1363,1425,1355,1480,1412,1425,1377,1499,1536,1425,1438,1429,1210,1018,1029,876,1258,1288,1242,1189,1055,992,968,1051,1002,801,964,993,862,677,814,925,757,402,757,707,621,724,592,611,1864,954,750,815,893,958,1075,1095,1128,1111,1136,1059,899,822,711,1165,1332,1368,1439,1457,1508,1491,1529,1275,1555,1560,1609,1504,1559,1623,1723,1710,1631,1486,1524,1537,1588,1496,1494,1412,1262,1284,1191,1016,975,1046,1041,1132,1078,1160,1206,1224,1071,949,785,790,772,810,897,1234,1642,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2057,2048,2048,2048,2048,2024,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1847,1302,1285,1152,805,487,414,1220,823,1069,1081,1053,824,753,1510,1583,1348,1428,1352,1363,1370,1103,1158,1174,1076,1419,1349,1325,1326,1229,1210,1165,1181,1180,1374,1440,1415,1365,1313,1215,1234,1424,1482,1627,1608,1573,1569,1596,1550,1541,1555,1479,1519,1463,1427,1386,1374,1368,2035,2048,2048,2048,2048,2048,2052,1884,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2048,2052,2038,2041,2035,2049,1888,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1730,1352,1431,1431,1405,1406,1406,1485,1452,1634,1694,1558,1421,1455,1335,1438,1657,1732,1759,1686,1634,1533,1451,1499,1631,1642,1660,1629,1619,1563,1502,1542,1841,2049,2048,2041,2034,2031,2037,2048,2021,2033,2048,2004,2048,2028,2017,2048,2040,2051,2048,2039,2038,1998,1877,2048,2039,2045,1637,1400,1608,1598,1608,1568,1019,213,237,213,228,213,724,220,249,220,230,218,573,1869,1375,1251,1333,1244,1161,1124,1239,1164,1276,1182,1187,1196,1125,1722,2048,994,715,1925,1738,742,1128,2048,1565,617,1594,2048,923,755,947,974,917,954,830,979,991,565,987,778,738,1022,718,993,1110,999,919,841,922,902,1197,929,1085,912,834,1198,928,1074,1298,723,736,407,458,1077,951,878,867,518,349,351,419,375,387,545,538,1229,1136,991,1116,1365,1462,1576,1458,1339,1220,1212,1451,1422,1297,1254,1146,1465,1484,1528,1543,1121,1167,1157,1280,1495,1444,1583,1529,1094,1213,1175,1356,1464,1470,1612,1377,1070,1131,1208,1518,1438,1561,1541,1090,1089,1171,1331,1494,1542,1498,1306,1185,1189,1329,1397,1379,1029,584,568,606,605,625,633,586,593,1089,956,889,618,1008,841,820,704,920,843,864,511,632,765,638,672,832,749,824,726,877,538,786,546,561,694,654,868,559,945,540,479,622,759,712,521,423,654,427,450,668,501,738,838,441,562,801,892,1069,759,575,522,560,640,727,589,1011,680,618,640,648,1106,993,1136,924,503,865,791,559,633,659,843,751,351,348,623,699,758,899,705,1083,690,887,787,809,899,878,803,924,874,860,833,850,1031,427,840,928,861,830,947,717,947,956,973,977,969,953,942,950,958,971,966,964,953,962,955,873,1136,818,817,739,828,901,827,809,845,733,779,876,840,885,790,820,643,838,602,678,664,1401,725,756,1587,1753,1843,1767,2009,1868,2048,2048,2057,1749,1354,1687,1767,2050,2047,1867,1806,2048,1875,1755,2052,2048,2048,1974,1838,1936,1923,1801,2004,2006,1805,1920,1314,1171,602,646,493,1828,2057,1932,1572,1400,1221,1124,1306,2011,1846,1236,1254,1065,1106,1691,1463,1394,1033,508,142,449,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2051,2048,2027,1932,1376,2048,2048,2048,2048,2057,2048,2048,2054,622,91,2031,2026,2048,2057,1979,1379,1920,2001,2034,1913,2000,2048,2048,2048,2048,2025,1861,2048,2022,1918,2057,2021,2041,2048,2051,2050,2052,2020,1827,1458,1729,1887,2048,2048,2048,2048,2048,2048,2048,2048,1868,2041,1102,992,1192,1257,1268,1243,1673,1483,997,1512,1165,1326,1050,1106,1073,963,1155,1365,1699,1855,1905,1898,1903,1890,1493,1740,1708,1484,1765,1489,1153,974,1118,1192,1658,1167,1025,1024,1154,1264,1003,1072,1311,1191,1338,1044,1908,2031,2048,1975,2035,1979,2048,1947,2056,2027,1976,2048,1959,2048,2027,1972,2048,2030,1972,2031,2022,2040,2034,1970,2044,2057,1971,2048,2048,1979,2048,2048,1970,2048,2048,1985,2034,2057,1968,2045,2025,2035,2039,1972,2048,2026,2029,2048,2048,2055,1972,2056,2056,2048,2057,2048,2048,2048,2048,2008,2035,2048,2048,2048,2048,2048,2048,2048,2048,2048,1891,2048,2048,2048,2048,2048,2048,2048,2048,1898,2048,2048,2048,2048,2048,2048,2048,1894,2048,2048,2048,2048,2048,2048,1899,2048,2048,2048,2048,2048,2048,2017,1957,2048,2048,2048,2048,2048,2048,2048,1896,2048,2048,2048,2048,2048,2048,2048,2048,2048,1635,1821,1653,1659,1840,1201,990,1922,2021,2051,2048,1997,1983,2050,1848,1971,1998,2031,1965,2020,2032,1332,1398,1433,1543,1327,1933,1159,1169,1138,858,1545,1503,1496,1487,1420,639,699,693,725,722,674,662,590,507,570,530,1352,1854,1683,1697,1698,1698,1914,1724,1746,1762,1183,988,1827,1660,1541,1482,1491,813,519,282,433,417,457,268,604,1743,1697,1682,1698,1829,1780,1803,1509,1481,1618,1473,1478,1517,540,492,500,513,420,370,506,507,478,1112,1833,1673,1670,1673,1751,1838,1797,1730,1220,1648,1671,1478,1472,1490,1489,834,642,649,578,535,520,587,488,617,506,558,426,390,1006,1951,1698,1676,1686,1676,1698,1859,1855,1711,1681,1769,1117,1412,1669,1711,1488,1479,1483,1130,585,590,605,559,573,618,576,550,573,541,561,1431,1851,1673,1671,1664,1686,1743,1880,1711,1704,1698,1136,1064,1754,1660,1515,1495,1487,1315,572,576,554,480,437,577,579,596,477,361,493,1264,1792,1688,1684,1670,1655,1878,1715,1743,1693,1436,845,1875,1664,1514,1480,1154,367,517,415,404,508,513,469,718,1827,1648,1696,1664,1860,1679,1686,1474,1359,1571,1503,1479,1454,1490,1488,1369,661,630,496,582,706,487,654,676,575,593,732,711,606,756,681,596,659,611,605,479,930,1998,1725,1669,1715,1675,1660,1693,1713,1711,1689,1898,1811,1750,1722,1676,1817,1824,1786,882,702,939,1819,1838,1647,1818,1566,1476,1466,1468,1462,826,438,439,534,606,617,605,592,486,460,604,494,542,591,919,2015,1691,1695,1679,1686,1690,1675,1923,1726,1764,1796,1781,1385,668,1290,1963,1688,1703,1539,1483,1495,1465,1455,614,658,668,630,619,547,472,571,678,609,424,522,476,521,475,1878,1799,1683,1685,1699,1702,1705,1754,1937,1693,1707,1793,1816,1516,774,1540,1863,1772,1562,1487,1499,1481,1395,573,550,636,614,637,567,532,261,240,181,232,234,231,1596,1962,1728,1682,1708,1717,1724,1705,2028,1778,1737,1791,1785,1748,998,1682,1621,1575,1458,1038,693,608,681,652,1673,1688,1768,1730,1252,1588,1458,1474,1179,554,573,547,503,456,489,429,513,1167,1793,1661,1681,1653,1864,1685,1682,888,1658,1685,1459,1471,1465,1306,569,597,633,532,567,567,568,339,588,578,570,1807,1686,1679,1680,1684,1686,1872,1689,1756,1720,708,1568,1825,1561,1468,1458,1202,569,599,333,489,527,448,307,295,414,555,1847,1689,1693,1668,1630,1696,1824,1724,1665,1469,816,1854,1684,1462,1446,1431,890,277,367,330,420,447,452,320,305,431,413,394,1722,1652,1630,1644,1674,1646,1842,1733,1630,1592,1183,1687,1539,1486,1501,557,468,500,566,583,634,604,636,482,1399,1735,1674,1656,1682,1870,1675,1696,1730,783,1833,1629,1462,1481,1487,1384,556,501,575,533,610,588,628,416,445,550,448,481,473,1939,1716,1672,1676,1671,1679,1671,1953,1665,1642,1732,1648,780,1556,1765,1722,1417,1484,1491,1465,1487,1499,1495,1489,1480,878,654,747,660,552,646,550,729,536,622,480,648,685,611,651,630,598,626,358,687,659,685,515,423,551,556,259,273,752,2045,2035,1738,1733,1714,1686,1708,1664,1695,1693,1670,1666,1708,1689,2027,1909,1668,1732,1657,1665,1700,1703,1683,1677,1499,749,834,1498,1898,1820,535,731,950,343,1677,1656,1674,1485,1509,1501,1513,1505,1508,1488,1478,1492,1474,988,687,812,673,653,759,654,705,757,667,580,708,688,591,671,661,796,655,649,594,463,550,529,340,274,362,499,555,407,330,244,146,1253,2057,1948,1795,1695,1693,1710,1673,1685,1694,1718,1644,1681,1668,1665,1694,1703,1894,2048,1794,1737,1713,1714,1728,1648,1683,1651,1644,1721,1734,1339,913,1046,1825,1878,1656,1782,1784,1592,1490,1479,1482,1488,485,542,532,547,483,529,447,487,417,539,83,613,594,1130,1924,1659,1692,1671,1687,1700,1884,1702,1734,1675,1716,1218,1208,1764,1737,1440,1458,1461,1479,1507,1500,1478,1467,1391,591,604,645,609,533,622,665,689,709,606,496,716,625,678,574,708,576,474,587,606,573,417,495,571,1374,2025,1825,1693,1668,1684,1696,1696,1710,1691,1658,1703,1807,2028,1710,1657,1662,1690,1724,1721,1745,1584,854,1152,1826,1644,1513,1643,1637,1520,1469,1471,1482,1488,1496,625,522,469,554,719,598,698,574,683,681,571,462,603,730,701,407,400,1566,1955,1672,1663,1661,1676,1715,1690,1672,1928,1778,1695,1701,1815,1756,1743,1069,1553,1747,1839,1571,1483,1502,1478,1509,1486,1486,1484,1498,1503,1513,1505,1495,730,661,706,554,652,636,491,634,650,635,602,584,599,588,553,570,596,499,517,586,612,373,615,609,619,560,538,485,621,567,536,565,585,485,577,398,497,541,456,611,1374,2045,2039,1963,1708,1722,1709,1703,1725,1684,1713,1707,1721,1710,1730,1697,1718,1694,1714,1716,1706,1949,2048,1824,1677,1742,1710,1701,1701,1735,1725,1666,1747,1737,1782,1469,921,916,854,995,1697,1664,1631,1584,1573,1552,1391,1101,655,1733,1771,1776,1651,1477,1478,1484,1486,1254,688,669,592,515,444,362,381,480,234,472,518,385,857,1971,1685,1687,1677,1685,1668,1688,1946,1731,1753,1726,1714,918,1698,1763,1522,1460,1482,855,425,539,388,390,283,430,325,834,1836,1672,1676,1673,1882,1732,1726,1515,1442,1628,1462,1477,1462,1467,979,567,601,612,623,527,538,598,634,326,490,416,518,314,1524,1828,1649,1661,1671,1654,1685,1693,1881,1693,1699,1698,1235,452,1116,1375,1376,1613,1515,1486,1327,394,182,445,332,344,264,247,436,1823,1647,1648,1653,1798,1645,1533,977,1547,1489,1449,1436,568,590,379,480,526,450,920,1779,1666,1663,1827,1742,1087,1647,1494,1491,1466,1480,1455,1474,1484,827,613,654,660,590,488,522,571,609,313,574,479,563,456,475,384,355,515,260,1010,1920,1799,1657,1685,1692,1698,1682,1657,1670,1664,2041,1712,1730,1764,1732,1665,1661,1028,842,1516,1578,1499,1666,1666,1499,1484,1484,1484,693,461,378,533,442,440,312,482,495,477,425,353,342,609,1919,1676,1660,1661,1666,1654,1671,1959,1640,1699,1680,1557,633,1110,1552,1685,1526,1481,1237,519,546,331,172,589,316,696,1760,1710,1694,1842,1795,1740,1060,1680,2035,2057,2053,2051,2050,1655,1614,1527,1370,959,804,841,757,853,864,1483,2006,2008,1904,1957,1541,1124,1335,1250,1442,1244,886,1351,734,849,1125,1172,1006,1082,973,1101,1041,978,917,1092,1121,1089,1029,809,966,991,895,916,915,862,998,909,962,1031,1026,944,1087,1023,954,888,848,924,1001,866,1008,941,933,954,885,1004,1049,978,1063,853,1004,1056,1056,1049,1011,1000,1098,1103,1101,1199,1096,1114,1111,1121,1096,1145,1138,1196,1044,1107,970,640,1072,1182,1078,987,1099,1188,1125,1009,1117,1031,1026,1056,1029,1267,1123,1064,1031,1103,1150,1083,1205,1089,1184,1115,1063,1116,1177,1152,1185,1100,1200,1215,1124,1071,1215,1122,1423,2048,1450,1084,1062,961,952,980,1107,1031,1003,877,1212,1146,819,1071,1009,1012,1010,693,830,760,844,1025,1427,1463,1485,1476,1970,2048,2048,1922,1402,2046,2050,2048,2048,2012,1780,2056,1679,1915,2052,2048,2048,2048,2048,2048,2048,2048,2020,2035,2033,2045,2047,2006,1950,1847,1703,1929,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2007,1955,1830,1821,1458,1625,1935,1907,1810,1884,2048,2050,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2008,1591,993,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2047,1715,1893,2048,2048,2048,1896,1611,1384,1231,1042,720,504,1775,2048,2048,2057,2055,2048,2057,2048,2057,2052,1893,1473,834,1938,2057,2023,1984,1860,1720,1524,1236,907,622,293,151,1881,2048,2048,2053,2052,2057,2056,2048,2057,2048,2056,2051,2039,2022,1832,1627,1508,1266,2029,2056,2048,2048,2048,2048,2048,2048,2048,2057,2055,2044,2022,1940,1732,1510,1058,1070,1794,1872,1997,2048,2056,2055,1971,1708,1336,838,2054,2048,2048,1936,1894,2057,2048,1839,709,50,222,33,563,2048,2048,2048,2056,2056,2056,2054,2053,1928,2032,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2057,2048,1967,1520,1995,1992,1536,1601,2048,2015,1627,1339,1485,1849,2027,2057,2057,2048,2048,2031,1898,1476,469,848,2056,2048,2056,2056,2051,2055,2048,2048,2057,2048,2012,1872,1839,1960,1590,1947,2057,2048,2048,2048,2057,2048,2048,2051,1911,2048,2048,2048,2057,2048,2048,2048,2037,1641,1999,1960,1931,1025,2049,2048,2048,1905,1659,2048,2048,2048,2057,2054,2048,2048,2048,2057,1868,1372,1561,1931,1972,2028,2033,2055,2025,2024,2043,2051,2053,2032,2021,2020,1997,1988,1977,2050,2057,2048,2038,2036,2025,2037,2046,2037,2045,2038,2028,1911,1820,1614,1434,1313,1176,1194,1206,1053,1018,1131,978,1025,920,894,863,811,650,623,464,191,185,141,59,63,1701,2024,2051,2048,2048,1939,1748,1677,1256,752,2048,2048,2048,2048,1909,2048,2048,2048,1962,2048,2048,2048,2048,2010,2048,2048,2048,2052,2030,2048,2048,2051,2035,2048,2056,1979,1927,1842,1705,1758,1667,1861,2054,2048,2050,2050,2048,2053,1891,1897,2051,2055,2057,2057,2056,2048,2053,1912,2057,2044,1952,1625,1803,2048,2053,1613,1757,2048,2057,2048,2048,2048,2048,2054,2055,2033,1959,1712,1476,1484,1274,1216,1413,2048,2048,2048,2048,2040,1914,1749,1158,300,952,1459,1688,1881,1946,1906,1933,1999,1948,1767,1583,1358,1143,649,395,1459,2011,2042,1554,1024,1583,2048,2048,2048,2048,2048,2048,2048,2048,1934,2041,2050,1865,1548,1062,1358,2048,1898,1454,1616,2048,2048,2053,2056,2048,2050,2057,2057,1931,1906,1609,2035,1742,1194,1056,2054,2048,2048,2048,2048,2048,2051,1904,1858,2056,2048,2048,2048,2048,2057,1960,1089,1379,1849,2024,2055,2055,2046,1409,1550,1943,1953,2048,2048,2048,2051,2030,1886,1337,1082,795,503,421,248,112,1681,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1325,2051,2048,2048,2048,2048,2048,2048,2057,1209,237,1271,1684,1944,2052,2048,2048,2057,2048,2048,2048,2048,2048,2052,1909,1646,1508,1394,1189,1101,1003,912,746,806,971,909,782,1565,2040,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1927,1291,773,654,1432,2056,2048,2048,2048,1545,1672,2055,1781,1321,1051,575,799,944,2057,1941,1265,473,1783,1958,1990,2052,2048,2048,2051,2033,2031,1516,1803,1790,1940,1976,2056,2056,2048,2048,2048,2048,2057,2051,2019,1769,1507,933,681,1513,2045,2048,2048,2048,2048,2048,2048,2048,2054,1984,1764,1463,1116,985,208,346,2033,2037,1969,1929,1797,1702,1721,2057,2042,1800,1574,1276,1767,1755,2011,2048,1916,2048,996,2048,1699,1854,1877,2057,1675,1913,1410,1457,1123,1576,2001,2031,1988,1949,1960,2007,1911,2048,2048,2035,1766,1032,1237,2048,2048,2048,2048,2048,1297,1009,2048,2048,2055,2048,1542,382,1794,2057,2050,2048,2057,2053,2048,1950,2050,2048,1493,2034,2048,1748,2048,2048,1613,2025,2048,1456,1311,1893,1582,696,2042,2048,2057,2056,1401,124,124,1304,2038,2057,2048,2057,2056,2057,2054,1909,2048,2048,1947,2047,2056,1952,2048,2023,2048,2050,2044,2019,1918,1829,1780,1801,1556,1748,1190,1656,1713,1561,1322,1287,2028,1923,1891,1931,2048,2048,2048,2027,1505,1033,705,1380,1911,1316,1581,1819,2048,2048,2048,2048,2048,2048,2048,2048,2048,2040,1977,1787,1577,1408,1183,896,1283,2048,2048,2056,2048,2048,1606,665,1984,2048,2053,2012,1878,2033,2056,2055,2048,2056,2048,2056,2048,1967,1801,1444,794,902,2048,2048,2048,2048,1432,211,947,2040,2057,2048,2048,2048,2048,2048,2048,1931,1582,254,526,1393,1949,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2019,1893,1774,1778,1735,1561,1415,1273,1235,1225,1056,808,535,552,519,488,467,414,389,429,489,421,557,529,223,385,844,1166,1192,1207,1152,1088,922,866,737,493,273,148,159,1003,1654,1857,2053,2057,2048,2019,1957,2010,1831,1993,1759,2020,1960,1706,1544,2051,2053,2054,2009,2042,2043,2035,2053,2012,1994,2004,2039,1882,1984,2055,2048,2044,1703,1828,2022,1764,1868,2056,1774,1274,1636,2038,2051,2004,1886,1913,1928,1872,1927,2004,2048,2054,2055,1840,2048,2034,1643,1524,1595,1365,1134,443,592,394,455,738,666,1074,1611,1373,1429,1353,1270,1429,1680,1713,1789,1795,1936,1991,2019,2046,2048,2053,2048,2055,2048,2048,2056,2042,1991,1971,2000,1989,1908,1767,1735,1725,1683,1674,1525,1439,1472,1421,1438,1342,1251,1201,1175,1182,1149,1051,981,951,922,1515,1442,1495,1519,1441,1436,1551,1555,1498,1548,1477,1573,1615,1718,1561,1623,1529,1512,1595,1694,1735,1802,1781,1720,1807,1869,1907,1855,1987,1949,1956,2052,2044,2057,2048,2055,2053,2048,2018,1949,1751,1622,1132,1302,1801,1983,2048,2054,2057,1479,211,912,2048,2048,2057,1386,2048,1157,1944,2053,1658,1461,2056,2048,2048,2057,1591,2048,1996,1574,1238,2048,2048,2048,2048,2048,2048,1997,2020,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,1994,2056,2057,2048,2048,2057,2003,1973,2000,2050,2048,2048,2037,2048,2048,2048,2048,2048,2054,1794,1255,2057,2050,2057,2055,2048,2046,2057,1933,1917,1872,1540,1633,1454,1699,1834,1613,1449,1393,1135,927,402,1399,2048,2048,2048,2048,1984,1686,1184,227,827,2024,2048,1971,1656,1411,1733,1853,1174,200,651,972,378,392,342,370,420,402,378,295,824,879,853,771,510,508,489,443,681,470,660,818,468,607,605,807,1006,231,461,588,338,454,1039,646,716,482,396,880,728,888,680,877,997,830,1083,1013,1286,1231,374,419,477,187,331,383,269,544,621,617,210,294,302,316,135,211,331,193,286,314,271,361,281,216,104,181,198,125,203,809,649,429,403,699,768,901,675,920,1087,822,750,819,357,458,308,335,357,238,409,595,381,308,513,1024,589,1210,656,662,774,898,439,469,630,374,754,1749,1656,1009,1195,1398,1431,1489,859,1052,974,797,901,1248,463,1181,833,1065,609,1051,290,506,576,305,786,374,513,815,754,532,625,535,412,611,1211,1327,933,848,928,1306,935,803,1266,1583,1023,1100,792,1251,1037,1457,922,1173,822,1256,823,938,907,999,1046,1070,999,393,459,258,362,435,202,283,91,316,305,556,468,530,310,581,594,888,779,814,814,624,1049,1362,1086,1260,1394,1102,927,882,485,434,773,975,1065,624,939,443,337,531,623,494,1082,1208,1114,356,575,447,513,539,555,370,538,314,551,435,475,335,609,257,392,725,575,827,298,1437,522,528,571,564,446,708,414,346,545,167,439,544,506,847,765,1129,888,976,547,458,413,202,246,488,672,645,486,649,529,380,377,482,388,412,390,714,215,310,218,334,264,366,137,217,259,371,112,109,125,169,109,97,132,109,97,241,351,452,259,179,847,828,816,625,1016,823,572,620,523,495,240,1382,1329,1092,1083,1132,1225,1417,1602,1692,1348,1165,863,940,956,1355,1711,1663,1241,1531,1425,1144,1000,611,569,709,281,693,601,813,805,434,423,395,342,364,356,324,598,205,421,232,500,422,335,224,257,189,153,179,485,646,1226,892,751,342,198,484,545,655,399,597,603,230,470,682,1059,890,684,691,444,518,752,480,477,428,760,545,581,647,693,478,266,399,395,382,405,134,36,37,135,189,202,221,285,152,221,176,164,136,428,304,305,397,210,47,908,1175,1181,1143,1066,1187,780,1283,794,391,359,1208,1240,550,1053,1814,1451,1443,1492,1538,1425,1532,1386,1483,1450,1547,1420,1448,1466,1583,1468,1540,1401,1502,1395,1352,1358,1545,1512,1619,1397,1563,1623,1533,1706,1654,1679,1711,1579,1032,932,1109,1119,1273,1877,1720,1764,1739,1678,1713,1732,1710,1725,1728,1695,1725,1759,1774,1769,1703,1642,1688,1686,1649,1690,1719,1689,1746,1683,1697,1651,1645,1669,1648,1583,1592,1643,1913,1531,1727,1685,1603,1660,1649,1727,1733,1816,1844,1827,1822,1811,1791,1701,1783,1664,1772,1825,1846,1753,1646,1765,1843,1703,1798,1768,1754,1715,1666,1656,1628,1658,1716,1639,1621,1585,1598,1657,1665,1647,1706,1703,1710,1663,1720,1683,1756,1720,1622,1753,1716,1707,1730,1674,1644,1693,1682,1618,1663,1596,1604,1532,1506,1525,1484,1654,1107,1067,858,632,900,1320,1442,1462,1294,1133,1171,1212,1127,1375,1359,1250,1297,1264,1281,1182,982,885,724,897,898,732,630,857,1039,1094,1067,1200,1606,1555,1402,1436,1385,1626,1417,1492,1541,1572,1361,1297,1260,1262,668,239,214,249,221,221,888,1377,1402,1196,1585,1644,1387,1289,1538,1122,740,1382,1308,787,1426,1549,1451,1629,1566,1613,1497,1356,1318,1625,1258,1446,1561,1719,1408,1411,1399,1476,1399,1626,1157,1542,1685,1555,1731,1484,1560,1699,1180,1728,1276,1645,1451,1136,1549,1509,1678,1510,1389,1469,1499,1356,1557,1631,1585,1428,1220,1596,1487,1541,1599,1352,1368,1477,1690,1266,1661,1204,1451,1508,1678,1241,1345,1518,1659,1577,1667,1119,1558,1339,1614,1035,1556,1403,1700,953,1490,1441,1464,1323,1477,1561,1622,1607,1625,1537,1346,1347,1707,1467,1650,1717,1420,1509,1584,1500,1650,1080,1684,1667,1376,1803,1304,1664,1755,1544,1646,1223,1651,1750,1231,1733,1781,1350,1466,1612,1362,1583,1629,1455,1587,1599,1523,1546,1592,1683,1639,1645,1539,1264,1580,1813,1439,1590,1872,1892,1901,1946,2052,2000,2056,2018,2021,2014,2036,2021,2036,2031,2044,2053,2038,2048,1994,2003,2006,2044,2023,2037,2048,2048,2027,2042,2038,2016,2017,2026,2039,2049,2034,2043,2051,2033,2016,2021,1830,1985,2037,2049,2044,2039,2028,2023,2040,2015,1987,1991,1979,1984,2017,1994,2020,2038,2029,2048,2029,1987,1978,1993,1999,2004,1987,2029,2014,2027,2051,2030,1995,1957,2000,2016,1982,2014,2052,2055,2047,2024,2011,1974,1991,2036,2017,2034,2029,2048,2054,2051,2055,2025,2053,2019,2046,2002,2052,1992,2042,2040,1920,1977,1963,1983,1972,2017,1937,1955,1993,1992,1975,1950,2006,1986,1993,1928,1964,1961,1991,1978,1997,1930,1988,2010,1961,1941,2010,1970,1991,1949,1974,1998,1991,1971,1980,1969,1986,2030,1986,2006,1992,1977,2008,1958,2016,1919,1999,1966,1993,1997,1977,1978,1946,1979,1983,2010,1954,2009,2006,1994,2000,2021,1992,2001,1996,1973,1993,1967,1972,2010,1996,1955,1928,1991,2022,1964,1981,2040,2029,2002,1980,2035,2011,1944,2057,2003,2022,2023,2048,1998,2019,2026,2020,1992,1977,1980,2007,2026,1991,1975,1824,1977,2056,2048,2049,1936,1970,1915,1907,1739,1910,1882,1919,1754,1933,1827,1963,1995,1976,1839,1930,1940,1835,1865,1848,1988,1948,1960,1905,1942,1895,1927,1885,1852,2002,1960,1908,1975,1809,1983,1845,1880,1846,1892,1960,1988,1893,2037,1975,1905,1863,1843,1917,1859,1953,1959,1914,1929,2007,1959,1988,1738,1956,1733,1993,1947,1959,1931,1861,1969,1943,1954,1821,2015,1955,2003,1779,1709,1837,1733,1906,1869,1878,1823,1825,1861,1842,1962,1933,1911,1929,1917,1888,1947,1911,1897,1912,1898,1887,1952,1901,1987,1902,1945,1886,1877,1926,1838,1895,1794,1917,1922,1798,1948,1529,1767,1343,1725,1821,1745,1862,1964,1928,1970,1979,1983,2000,1922,1972,2008,1953,1964,1980,1785,1416,1423,1424,1435,1472,1533,1388,1599,1474,1433,1535,1683,1771,1630,1638,1900,2020,1974,1933,2016,1968,1814,1951,1924,1996,1989,1931,1978,1919,1965,1829,1858,1964,2012,2009,1904,2016,1903,1954,1900,1865,1991,1966,2014,1894,2020,1935,1910,1887,1850,2021,1921,2023,1890,1969,1852,1932,1898,1859,1965,1976,2006,1906,1953,1939,1866,1899,1876,1992,2016,1986,1930,1997,1923,1841,1916,1927,1966,1949,1915,1943,1944,1909,1964,1923,1885,1734,1746,1633,1666,1673,1684,1781,1705,1678,1665,1705,1722,1698,1731,1696,1645,1695,1694,1696,1726,1717,1720,1634,1647,1655,1716,1750,1774,1691,1604,1590,1671,1788,1715,1660,1635,1640,1664,1640,1751,1738,1728,1660,1633,1652,1766,1802,1762,1654,1601,1636,1766,1887,1864,1768,1727,1775,1796,1852,1847,1846,1794,1782,1837,1739,1783,1722,1703,1676,1720,1729,1649,1588,1760,1742,1708,1621,1845,1629,1637,1792,1709,1518,1713,1718,1738,1646,1764,1755,1770,1678,1787,1787,1819,1663,1740,1756,1718,1750,1748,1767,1979,1907,1999,1997,1988,1961,1909,1941,1929,2013,1967,1983,2014,1987,1980,2006,1976,1997,1980,1972,1961,1999,2011,1997,1983,1960,1996,1975,1944,1970,2016,1999,1989,1957,1983,1966,1995,1970,1985,1963,1964,1985,1962,1968,1957,1988,1963,1971,1959,1982,1949,1977,1947,1949,1965,1959,1976,1955,1972,1977,1957,1961,1958,1961,1963,1959,1972,1954,1973,1952,1968,1953,1964,1953,1965,1967,1888,1946,1904,1902,1912,1915,1888,1922,1900,1903,1922,1907,1904,1908,1911,1899,1938,1861,1911,1913,1841,1894,1935,1837,1882,1942,1846,1868,1953,1842,1851,1955,1842,1831,1957,1855,1812,1958,1837,1820,1972,1832,1831,1890,1801,1827,1886,1775,1846,1894,1754,1866,1899,1749,1878,1891,1763,1879,1864,1793,1883,1841,1804,1899,1805,1862,1917,1819,1874,1913,1804,1889,1857,1848,1911,1830,1850,1913,1806,1885,1871,1835,1911,1852,1842,1913,1846,1917,1886,1848,1905,1885,1855,1906,1883,1856,1897,1882,1854,1892,1884,1849,1896,1881,1845,1888,1884,1845,1890,1887,1845,1904,1909,1836,1914,1905,1838,1917,1909,1848,1918,1885,1848,1936,1864,1854,1921,1855,1862,1925,1865,1877,1902,1855,1856,1925,1915,1910,1929,1905,1931,1907,1924,1925,1917,1915,1922,1923,1907,1913,1911,1926,1920,1978,1984,1982,1985,1981,1993,1994,1987,1975,1989,1994,1908,1960,1888,1920,1891,1919,1897,1928,1842,1927,1903,1872,1941,1968,1967,1956,1970,1961,1946,1982,1930,1988,1931,1980,1945,1963,1940,1969,1890,1957,1830,1989,1832,1950,1869,1909,1890,1890,1939,1856,1975,1826,1978,1846,1937,1859,1863,1869,1823,1900,1801,1939,1816,1885,1861,1840,1870,1820,1927,1784,1915,1822,1876,1857,2039,2057,2029,2012,2028,1994,2030,2023,2013,2041,2028,2038,2056,2030,2022,1995,1830,1992,2002,2048,2043,2056,2024,2035,2024,2013,2004,2010,2041,2032,2031,2055,2036,2040,2024,2014,1969,1933,2016,2002,2027,2050,2035,2005,2016,1989,1995,1995,1967,1996,2026,2042,2019,2012,2026,2012,1974,1996,1995,1974,1983,2018,2043,2013,2012,2022,2008,1977,2000,1992,1969,1974,2016,2042,2012,2057,2043,2028,2008,2035,2011,2013,1957,2029,2037,2050,2041,2048,2041,2042,2016,2027,2027,2048,2048,2053,2004,2038,1957,1998,1972,2004,2001,1974,2005,1993,1960,2009,1978,1942,1940,1975,1987,2014,1975,2007,1999,1921,1942,1954,1930,1795,1909,2006,2002,1953,2009,1975,1987,1988,1981,1992,1965,1903,1898,1921,1986,1968,1918,1905,1940,2006,1945,1932,1838,1889,1982,2016,1904,1854,1925,1965,1957,1871,1875,1877,1842,1900,1954,1925,1936,1946,1845,1890,1865,1892,1979,1903,1966,1960,1888,1874,1892,1882,1959,2001,1940,1896,1819,1832,1882,1931,1976,1858,1873,1826,1646,1931,1926,1891,1918,1913,1839,1879,1931,1841,1885,1891,1896,1857,1863,1819,1849,1974,1960,1918,1921,1890,1847,1847,1878,1830,1843,1924,1972,1962,1906,1958,1822,1897,1957,1936,2034,2027,2014,1952,1933,2009,1979,2016,1956,1951,1933,2050,2009,1986,1828,1969,2002,2013,1984,1963,1984,2015,2008,1992,1968,1979,1995,2019,2013,1983,1880,1968,1975,1969,2036,1955,2013,2040,2012,1991,2003,1902,2017,2004,1982,1984,2026,2026,2001,1928,1753,1792,1885,2014,2010,1964,2024,2000,1972,1968,1959,1962,1961,1890,1954,1956,1983,1936,2002,1968,2030,2004,1994,1956,1951,1993,1978,1966,1860,1948,1939,1975,1881,1893,1952,1941,1880,1918,1991,1971,1989,1987,2007,2023,1995,2026,1902,1904,1991,1920,1702,1906,1945,1948,1953,1934,1945,2016,1978,2004,1991,1979,1953,2027,1985,1957,1995,1946,1928,1961,1944,1976,1938,1966,1980,1994,2015,2024,1991,1972,1968,2017,1964,1975,1966,1974,1953,2000,1945,1947,1994,1967,1995,1988,1925,1992,2022,1984,1956,1956,1929,2044,1955,1988,1996,1980,2010,1977,1973,2034,1974,1961,2019,1920,2046,1953,1940,1989,1963,1984,1988,1997,1954,1900,1956,1996,1937,1948,1999,1955,1910,1970,2002,2011,1985,1932,1955,1958,1934,1987,1912,1944,1953,1838,1874,1952,1975,1894,1896,1929,1914,1972,1943,1905,1995,1974,1947,1994,1971,1935,2026,1816,1993,1970,1995,2010,1996,2014,2051,2036,1869,2014,1969,2050,2024,2031,2048,2036,2016,1939,2007,1996,2010,2032,2026,2029,1996,2039,1984,2044,2007,2023,2044,2032,2056,2033,2045,1967,2019,1996,2014,2043,2022,2057,2051,2053,1994,2006,1961,2035,2042,2033,2051,2046,2035,1936,1953,1948,1925,1889,2001,1964,1982,2001,1992,2034,2026,1929,1994,1957,2043,1955,2003,1938,1856,1997,1972,1990,1980,2006,1935,1809,1977,1954,1628,1870,1797,1661,1623,1649,1537,1790,1364,1513,1541,1379,1609,1272,1492,1486,1144,1514,1169,1416,1307,1237,1404,1152,1429,1155,939,1587,1378,1169,1243,1330,1345,958,1262,1377,1129,1611,1114,1367,1166,1518,1259,1280,1432,1525,1167,1638,1438,1466,1582,1346,1614,1308,1493,1537,1178,1636,1164,1436,1163,1564,1231,1368,1372,1039,1188,1512,1459,1126,1270,1337,1339,946,1304,1442,1161,1547,1087,1371,1108,1661,1210,1453,1461,1395,1488,1463,1570,1453,1596,1473,1280,1436,1518,1391,1222,1588,1261,1348,1157,1608,1204,1424,1303,943,1342,1439,1405,1086,1337,1466,1126,996,1280,1392,1167,1502,1127,1392,1128,1604,1246,1498,1479,1356,1503,1430,1531,1482,1529,1572,1216,1510,1488,1189,1381,1486,1318,1382,1147,1561,1150,1402,1335,855,1552,1329,1291,1177,1219,1596,862,1226,1399,1183,1506,1030,1361,1289,1331,1373,1210,1443,1525,1239,1611,1470,1491,1548,1322,1646,1280,1523,1533,1281,1643,1157,1380,1265,1374,1410,1288,1457,1100,973,1614,1407,1180,1233,1352,1503,896,1253,1449,1196,1616,1035,1372,1103,1622,1236,1405,1447,1424,1348,1474,1577,1433,1567,1460,1406,1372,1476,1500,1205,1649,1159,1426,1167,1596,1164,1425,1276,921,1314,1398,1429,1079,1309,1505,1049,1052,1318,1290,1206,1538,1168,1370,1176,1606,1256,1463,1498,1389,1416,1451,1616,1525,1598,1552,1254,1508,1558,1335,1049,1682,1183,1342,1141,1572,1211,1299,1361,993,1184,1485,1441,1070,1313,1519,1021,1029,1366,1237,1089,1511,1140,1398,1145,1635,1120,1400,1518,1446,1429,1536,1575,1495,1562,1605,1321,1449,1556,1376,1114,1710,1211,1365,1145,1592,1199,1264,1389,1099,918,1608,1459,1171,1248,1347,1382,942,1283,1396,1133,1554,1067,1352,1283,1595,1250,1218,1526,1548,1386,1663,1426,1519,1563,1406,1709,1242,1507,1524,1216,1608,1252,1381,1365,1259,1505,1213,1486,1205,882,1677,1296,1243,1215,1203,1654,828,1251,1457,1255,1633,1050,1334,1216,1421,1478,1313,1443,1522,1243,1688,1487,1532,1605,1401,1684,1297,1571,1520,1187,1649,1231,1420,1362,1225,1519,1227,1506,1216,851,1663,1291,1270,1239,1212,1617,908,1176,1419,1423,1431,1317,1260,1365,1289,1638,1214,1516,1564,1292,1644,1548,1652,1559,1562,1595,1402,1214,1237,1301,1434,1582,1586,1453,1318,1226,1551,1529,1383,1746,1561,1322,1226,1421,1465,1415,1713,1540,1468,1351,1239,1488,1377,1365,1633,1600,1584,1447,1212,1381,1369,1226,1464,1714,1245,1106,1306,1294,1725,1391,1276,1471,1667,1139,1698,1676,1888,1948,1892,1855,1927,1787,1759,1828,1907,1767,1836,1591,1265,1734,1696,1770,1726,1699,1703,1457,748,1307,2000,1988,1807,1546,1143,1323,1802,1578,1749,1739,1914,1720,1748,1690,1888,1712,1773,1894,1892,1865,1660,1682,1948,1666,1980,1814,1939,1981,1959,1928,1849,1778,1565,1896,1812,1891,1905,1821,1643,1728,1527,1690,1763,1675,1597,1682,1557,1421,1680,1785,2028,2008,1979,1901,1995,2030,1997,1945,2018,2032,2009,1950,2000,2042,1969,1983,1927,1956,1911,1996,1948,1970,1955,2023,2000,2005,2005,2013,2030,2003,1984,1827,2011,2057,2055,2055,1977,1933,1838,1607,1963,1856,1949,1881,1911,1904,1915,1892,1888,1892,1941,1861,1902,1984,1890,1910,1932,1875,1886,1313,1730,1949,1697,1494,1494,1242,1573,1737,1614,1615,1848,1553,1584,1606,1583,1512,1569,1645,1652,1575,1253,1320,1663,1624,1253,1387,1973,1845,1758,1765,1781,1713,1787,1869,1727,1677,1671,1748,1626,1670,1837,1743,1294,1512,1680,1467,1455,1230,1348,1760,1496,1222,1189,1419,1641,1247,1541,1983,2044,1987,1973,1967,1911,1823,1548,1925,1878,1892,1593,1823,1997,1883,1883,1892,1777,1786,1852,1690,1913,1526,1423,1713,1463,1399,1571,1623,1407,1740,1381,1736,1449,1710,1612,1852,1513,1739,1539,1760,1483,1451,1610,1505,1886,1263,1250,1336,1757,1824,1811,1713,1400,1469,1664,1770,1545,1444,1651,1631,1640,1669,1548,1569,1666,1597,1356,1571,1428,1693,1620,1429,1611,1538,1637,1656,1499,1241,1590,1528,1245,1311,1365,1226,1318,1331,1549,1211,1229,1432,1330,1313,1398,1368,1299,1594,1573,1568,1896,1476,1487,1861,1829,1855,1926,1545,1971,1766,1630,1925,1639,1941,1238,1856,1916,1486,1700,1722,1695,1666,1594,1465,1621,1477,1566,1501,1555,1584,1544,1521,1423,1601,1545,1511,1420,1588,1472,1805,1880,1914,1863,1843,1758,1456,1496,1597,1496,1897,1937,1916,1847,1905,1890,1906,1983,1026,536,582,509,735,624,575,573,641,1783,1977,1980,1952,1918,1980,1991,1953,1955,1634,1666,1604,1646,1780,1555,1725,1580,1685,1545,1551,1633,1488,1517,1485,1378,1498,1364,1613,1522,1258,1144,1417,1345,1578,1450,1422,1369,1580,1469,1596,1437,1389,1392,1404,1454,1422,1384,1441,1849,1771,1806,1886,1890,1896,1803,1750,1810,1667,1705,1785,1830,1822,1753,1703,1661,1088,786,798,842,1489,1704,1661,1621,1656,1652,1588,1595,1668,1780,1663,1681,1650,1675,1818,1799,1869,1382,1789,1495,1724,1594,1774,1500,1644,1940,1669,1836,1842,1859,1532,1842,1841,1754,1056,1065,956,1086,1070,1074,975,1066,1666,1561,1601,1528,1580,1565,1565,1520,1659,1427,1556,1609,1645,1259,1089,1018,1032,1333,1424,1588,1764,1612,1446,1104,1432,1553,1137,1264,1510,1521,1447,1592,1605,1535,1569,1630,1517,1297,895,838,1042,528,984,723,1032,1397,1473,763,559,858,561,804,542,665,740,719,865,482,818,709,944,508,524,869,709,866,495,852,703,871,445,444,904,589,764,299,579,202,208,579,174,610,203,611,166,478,173,159,461,38,557,176,578,249,206,1533,1417,1426,1185,1233,1163,1396,971,1010,990,987,987,969,1002,982,1520,1380,1409,1452,1503,1455,1389,1354,1575,1448,1507,1511,1580,1588,1492,1527,1501,1562,1396,1425,1389,1416,1442,1400,1407,1504,1394,1400,1382,1378,1118,942,957,955,1098,937,956,909,1093,910,955,921,971,1418,1383,1415,1414,1138,925,938,944,1455,1611,1572,1559,1514,1528,1544,1610,1609,1551,1345,1351,1305,1226,1321,1336,1342,1549,1553,1527,1318,1518,1311,1272,1233,1559,1642,1694,1571,1603,1499,1812,1708,1807,1600,1214,1177,1502,1416,1494,1209,1294,1395,1449,1642,1421,1574,1444,1445,1682,1693,1641,1675,1558,1672,1651,1638,1756,1621,1704,1650,1608,1594,1646,1639,1517,1739,1661,1615,1697,1480,1645,1619,1637,1672,1590,1701,1676,1653,1601,1661,1648,1545,1803,1640,1624,1625,1786,1707,1615,1628,1635,1832,1676,1679,1677,1764,1701,1667,1679,1652,1226,952,959,956,1366,1497,1542,1490,1592,1325,1311,1374,1285,1315,1170,1247,1262,1323,1190,947,938,1440,1208,1158,1103,1224,1113,910,986,973,1583,1518,1530,1547,1494,1510,1508,1532,1688,1402,1384,1371,1397,1363,1383,1364,1389,1717,1535,1569,1557,1571,1532,1530,1529,1631,1691,1605,1618,1643,1626,1610,1600,1664,1768,1455,1424,1403,1449,1465,1421,1392,1431,1869,1755,1716,1684,1747,1742,1691,1695,1909,1758,1701,1688,1700,1726,1669,1679,1683,1341,1021,1227,1041,1100,1058,1246,1156,1119,1065,934,792,632,711,630,1607,1643,1725,1685,1725,1683,1720,1694,1764,1822,1736,1696,1613,1718,1681,1745,1694,1874,1746,1772,1759,1756,1792,1770,1773,1743,1852,1716,1682,1617,1690,1648,1716,1672,1706,1460,1502,1374,1612,1006,1018,1019,1036,1850,1804,1814,1830,1666,1843,1784,1852,1810,1422,1176,1219,1548,1499,1005,1047,1305,1746,1599,1619,1581,1532,1634,1618,1581,1741,1531,1446,1421,1488,1407,1474,1416,1468,1434,1800,1362,1761,1312,1487,1441,1481,1419,1691,1643,1618,1619,1524,1583,1593,1576,1671,1516,1472,1435,1372,1521,1463,1437,1391,1791,1830,1833,1831,1682,1825,1799,1831,1772,1692,1636,1616,1695,1588,1647,1598,1703,1593,1479,1467,1491,1372,1515,1440,1439,1569,1841,1799,1860,1895,1681,1841,1805,1876,1671,1616,1650,1621,1544,1668,1639,1603,1666,1616,1447,1414,1484,1401,1483,1453,1434,1568,1862,1822,1839,1722,1874,1805,1861,1832,1306,1028,1697,678,689,1179,690,1039,784,693,1482,1069,657,725,1170,1262,997,1215,1380,1278,590,1164,1289,1172,1316,1267,1741,1179,989,964,1629,1581,1573,1746,1651,1727,1553,1762,1497,1484,1268,843,1211,1564,1504,1018,979,1018,1011,1354,1090,1026,1082,1352,1877,2035,2011,2007,2031,2019,2024,1975,2025,2028,2027,2021,1981,2017,2012,2001,1982,2029,2026,2021,1994,2027,1998,2012,1944,2026,2038,2031,1993,1995,2006,2001,1998,1985,2044,1922,1910,1914,1872,1904,1909,1832,1869,1883,1915,1868,1894,1821,1867,1822,1888,1940,1669,1661,1655,1688,1673,1658,1662,1635,1796,1648,1662,1644,1625,1659,1643,1606,1666,1565,1416,1449,1408,1427,1438,1398,1367,1562,1508,1490,1511,1493,1333,1535,1530,1617,1431,1533,1478,1684,1446,1467,1539,1627,1388,1363,1481,1469,2009,1675,1507,1677,1603,1577,1506,1597,1697,1533,1568,1621,1679,1735,1632,1593,1533,1663,1543,1564,1559,1564,1537,1591,1527,1424,1597,1465,1728,1541,1651,1570,1671,1656,1633,1780,1735,1481,1708,1933,1853,1703,1721,1890,1936,1935,1971,1969,1942,1955,1917,1929,1832,1849,1866,1983,1859,1870,1871,1831,1796,1780,1792,1777,2009,1953,1965,1954,1932,1910,1900,1890,1981,1927,1885,1890,1851,1800,1837,1820,1784,2003,1991,1997,1977,1953,1946,1922,1903,1971,1919,1816,1808,1745,1777,1759,1770,1764,1909,1840,1849,1764,1803,1826,1811,1804,1772,1697,1425,1462,1478,1434,1431,1416,1410,1596,1957,1932,1960,1971,1940,1905,1926,1926,1900,1862,1913,1995,1938,1940,1895,1923,1888,1929,1882,1935,1717,1484,1531,1616,1584,1603,1567,1508,1829,1789,1816,1799,1753,1758,1724,1728,1723,1578,1323,1333,1280,1417,1283,1356,1344,1581,1489,1474,1491,1566,1572,1494,1475,1463,1653,1702,1474,1675,1638,1577,1583,1487,1376,1347,1311,1263,1299,1155,1259,1700,1887,1862,1878,1913,1894,1879,1869,1872,1959,1897,1880,1865,1902,1879,1913,1874,1913,1426,1442,1399,1416,1470,1476,1463,1475,1770,1657,1708,1735,1695,1599,1595,1534,1701,1525,1551,1582,1610,1726,1724,1701,1640,1719,1463,1471,1469,1457,1375,1396,1397,1519,1540,1494,1487,1552,1193,1543,1515,1433,1675,1493,1527,1477,1326,1503,1489,1515,1525,1971,1954,1920,1691,1404,1403,1414,819,1405,1397,1414,1594,1188,1164,1110,1126,1057,1078,1141,1187,1501,1427,1422,1894,1906,1887,1907,1897,1908,1899,1926,1701,1610,1527,1506,1461,1389,862,969,784,901,786,988,695,906,885,1021,743,894,902,1006,961,911,1363,1217,1361,1282,847,360,580,465,433,273,495,631,1343,941,844,805,1103,1317,739,1340,802,185,450,262,329,1346,1383,1501,1667,1863,1726,1810,1829,1800,1767,1759,1786,1762,1638,1632,1565,1617,1581,1648,1598,1631,1394,1314,1334,1320,1597,1676,1660,1667,1656,1680,1643,1676,1684,1674,1670,1661,965,1552,1824,1865,1774,1789,1794,1883,1825,1771,1639,1458,1470,1446,1637,1856,1843,1868,1855,1862,1885,1845,1867,1853,1072,1753,1255,1085,1249,1084,1166,2052,2008,1971,1924,1966,1956,1898,1899,1890,1960,1946,1955,1901,1929,1892,1929,2008,1782,1672,1764,1807,1809,1796,1689,1608,1857,2056,2048,2056,2052,2038,2049,2036,2053,2048,2053,2050,2040,2051,2046,2046,2039,2048,1868,1957,1853,1849,1815,1854,1839,1868,1950,1899,1868,1845,1858,1832,1859,1834,1951,1310,1470,792,856,777,710,743,528,810,885,790,391,682,784,872,629,405,746,834,899,480,506,791,818,918,576,462,1255,1042,1107,509,650,1171,1084,1066,374,885,1124,1043,916,392,1070,1147,1086,694,1389,1294,1588,1303,1758,1392,966,1163,1130,1144,1156,1094,1102,1133,1192,1118,1171,1179,1087,1069,1009,1199,1425,1123,1097,1201,1041,1047,1100,1066,988,1013,921,1017,1070,858,846,790,851,1341,428,550,512,562,552,450,562,565,459,519,481,509,503,525,556,511,1433,1478,1498,1494,1557,1505,1514,1522,1501,1110,965,985,1465,1546,1381,1396,1333,1370,1476,1730,1650,1667,1653,1610,1615,1656,1631,1652,1666,1495,1463,1539,1474,1521,1508,1447,1580,1028,1147,1238,1338,1329,1317,1326,1111,1389,1427,1414,1431,1535,1521,1548,1561,1698,1330,993,1124,1169,1137,1123,1085,1117,1091,1161,1104,1219,1196,1100,1068,1075,1233,1345,1111,1084,1168,1060,1036,1128,1018,1004,1006,888,1035,1024,848,833,831,891,1281,422,554,500,554,540,465,567,546,468,497,482,486,510,532,570,525,1746,1812,1795,1807,1804,1780,1729,1755,1399,1425,1397,1386,1636,1236,1225,1218,1527,1444,1344,1305,1509,1310,1020,1013,965,1462,1694,1456,1679,1678,1367,1164,1167,1212,1448,1358,1716,1661,1600,1689,1699,1585,1676,1624,1687,1173,1407,1428,1532,1946,1697,1969,1776,1698,1649,1707,1725,1622,1753,1760,1697,1582,1494,1538,1554,1566,1507,1587,1264,1736,1632,1604,1591,1568,1563,1580,1617,1786,1462,1750,1796,1498,1419,1740,1796,1573,1709,1088,1130,1120,1161,1142,1147,1049,1179,1125,1123,1117,1208,1167,1090,1061,1086,1315,1011,1263,1121,825,707,1108,1195,1084,976,953,1201,1123,956,553,1157,1212,1162,987,923,1262,1123,978,496,1162,1229,1221,948,842,1159,1128,1022,422,1210,1197,1184,979,722,1133,1172,1093,409,1159,1178,1145,915,1340,1121,1078,1210,1037,1076,1106,1020,1007,1010,937,1036,1025,849,840,835,897,987,1160,1213,1197,348,991,1257,1091,918,1264,1141,1231,1181,1223,1165,1086,1234,1186,1336,1125,1106,1180,1201,1290,1115,1158,1237,1121,1321,1191,991,1008,1138,1335,1105,1011,1009,1147,1346,1075,970,1054,1297,1222,1082,970,1104,1487,695,494,559,1247,1555,1737,1870,1877,1820,1609,1371,551,514,512,522,558,911,1311,1047,1281,1513,1191,1072,1448,1362,1072,1257,1500,1206,1079,1412,1753,1865,1729,1730,1994,1680,1808,1890,1694,1882,1803,1836,1707,1857,1750,1767,1891,1750,1730,1887,1750,1814,1792,1752,1942,1757,1826,1721,1899,1733,1862,1754,1739,1885,1661,1823,1886,1754,1748,1811,1826,1713,1861,1867,1724,1898,1722,1750,2028,1744,1755,1815,1767,1876,1824,1830,1677,1896,1730,1846,1787,1748,1897,1754,1831,1815,1798,1745,1822,1886,1711,1742,1884,1703,1913,1767,1753,1410,1201,1241,1204,1272,1162,1206,1133,1043,563,788,874,799,388,715,788,865,630,410,763,860,898,451,535,776,834,935,619,1468,987,1164,1150,1125,1156,1102,1103,1103,1152,1130,1183,1182,1098,1075,1019,1100,1520,1483,1586,1094,1104,1181,1094,1103,1107,1077,1010,1019,846,1017,1014,908,897,782,872,1450,1428,1493,1232,445,571,499,539,547,485,550,534,474,516,493,488,518,521,571,533,1663,1652,1682,1553,1715,1622,1655,1667,1708,1688,1777,1646,1633,1607,1672,1581,1001,484,1003,615,426,311,845,1021,2029,2026,2018,2033,2019,1994,1994,1979,2029,2023,2021,2023,2012,2029,2020,1966,2027,1398,1353,1578,1539,1406,1309,1306,1121,1120,1124,1121,1127,1122,836,70,838,2001,2048,1860,1873,1909,1856,1842,1894,1903,1867,1945,1912,1932,1946,1874,1928,1922,1918,1878,1788,2002,1875,1890,1920,1905,1859,1773,1817,1759,1914,1910,1896,1871,1875,1886,1899,1916,1841,2001,1763,1883,1867,1919,1839,1665,1397,282,567,640,655,628,591,588,729,750,646,783,821,937,627,872,221,1113,324,390,1540,693,996,236,331,332,927,1577,1453,1596,1645,1591,1564,1429,1508,1615,1595,1636,1599,1471,1594,1555,1525,1735,1523,1686,1587,1492,1846,1856,1795,1766,1835,1865,1837,1839,1856,1727,1302,1273,1354,1351,1332,1302,1319,1436,1510,1470,1474,1462,1492,1456,1453,1421,1623,1466,1454,1448,1468,1507,1479,1434,1484,1621,1466,1439,1467,1491,1474,1439,1442,1593,1472,1413,1423,1445,1480,1448,1417,1391,1626,1377,1415,1413,1504,1464,1414,1416,1607,1417,1392,1373,1466,1485,1432,1396,1408,1603,1397,1383,1423,1458,1475,1418,1384,1591,1453,1394,1455,1493,1451,1477,1443,1405,1634,1458,1416,1462,1485,1497,1439,1451,1480,1481,1342,1329,1370,1364,1387,1313,1271,1564,1353,1318,1353,1406,1354,1329,1341,1281,1537,1310,1308,1347,1360,1328,1311,1254,1564,1463,1423,1448,1483,1496,1456,1450,1411,1638,1424,1393,1486,1482,1496,1452,1392,1629,1416,1356,1393,1460,1451,1414,1456,1396,1613,1416,1369,1436,1473,1461,1407,1370,1514,1516,1385,1382,1438,1498,1452,1422,1425,1612,1461,1404,1440,1446,1467,1446,1418,1402,1796,1757,1830,1721,1859,1586,1753,1800,1838,1828,1772,1635,1738,1784,1755,1736,1793,1852,1823,1883,1822,1892,1837,1906,1848,1888,1834,1820,1756,1813,1824,1792,1765,1808,1929,1797,1780,1719,1777,1720,1770,1719,1801,1853,1813,1775,1757,1780,1743,1738,1776,1955,1881,1817,1820,1815,1792,1855,1797,1804,1885,1728,1796,1745,1735,1719,1756,1776,1850,1796,1845,1824,1819,1825,1752,1771,1787,1808,1797,1743,1761,1616,1608,1752,1733,1624,1830,1784,1720,1785,1648,1647,1642,1694,1804,1886,1655,1609,1620,1660,1694,1680,1674,1653,1762,1701,1628,1648,1705,1692,1695,1676,1810,1816,1761,1776,1787,1834,1789,1831,1777,1842,1787,1683,1751,1791,1796,1765,1768,1869,1751,1817,1883,1869,1876,1936,1892,1807,1805,1679,1696,1738,1761,1748,1815,1728,1796,1724,1668,1825,1801,1790,1849,1819,1719,1714,1402,1523,1512,1516,1523,1519,1501,1570,2050,1979,1925,2006,1993,1935,1990,1933,1909,1970,1989,2000,1948,1946,1979,1985,2015,1581,449,38,40,38,319,40,38,40,726,1856,1781,1828,1851,1831,1822,1768,1841,1764,1448,1479,1429,1462,1448,1437,1435,1597,1832,1824,1802,1757,1782,1780,1768,1805,1175,803,40,38,40,310,38,40,38,40,1105,1114,1767,1724,1739,1762,1760,1717,1708,1746,1771,1810,1076,1247,1448,1175,893,1585,1429,1222,1085,1816,1609,1653,461,38,40,38,319,40,38,40,554,1421,1411,1215,1197,1703,1653,1621,1693,1689,1667,1671,1606,1557,40,38,40,38,1115,293,114,1259,1853,2016,1715,1653,1600,1637,1687,1662,1707,1730,1677,1732,1749,1750,1736,1718,1712,1688,1739,1052,1113,340,1115,1822,1754,1722,1737,1725,1811,1668,1744,1865,1854,1838,1883,1776,1927,1786,1854,1890,1842,1680,1645,1741,1678,1819,1786,1710,1883,1780,1973,1773,1966,1803,1949,1866,1880,1935,1248,1175,1123,1011,1222,1433,1326,1344,1367,1415,1152,1169,1091,1142,1153,1267,1651,667,839,927,1039,1413,1705,1102,778,666,809,1499,1609,1739,1554,825,1356,1650,1338,1216,961,785,947,730,505,897,1222,1387,1189,1259,1356,1348,1412,1314,1430,1922,1900,1876,1934,1837,1860,1901,1911,1858,1896,1934,1942,1836,1892,1887,1944,1191,929,950,1003,1574,1960,1702,1917,1881,1140,1223,1181,1225,2001,2021,1997,2038,1940,1916,1886,1890,1946,2046,2034,2031,2048,1757,1810,1783,1830,1810,1796,1709,1810,1848,1951,1939,1938,1975,1577,1289,1311,1646,1289,1165,1268,1291,1312,1170,1273,1206,1618,1410,1213,1190,1725,1589,770,800,1577,1660,854,732,1310,1297,1078,741,963,1560,1604,1383,1408,1607,1820,1753,1797,1781,1838,1756,1861,1840,1815,1658,1667,1673,1746,1766,1798,1816,1739,1616,1430,1413,1436,1566,1439,1433,1432,1599,1528,1448,1503,1546,1572,1501,1466,1549,1915,1982,1952,1919,2017,1974,1981,1970,2002,1764,1778,1749,1760,1790,1568,1546,1585,1894,1914,1799,1900,1935,1767,1834,1768,1836,1924,1863,1836,1905,1883,1816,1785,1826,1902,1429,1487,1577,1588,1221,1220,1586,1281,1176,1246,1203,1720,1125,1241,1298,1884,1776,1793,1765,1803,1803,1801,1785,1783,1880,1830,1802,1811,1447,877,837,814,978,1160,1173,1143,1185,1291,1215,1159,1235,1316,1382,1404,1316,1603,1849,1865,1844,1886,1844,1808,1854,1824,1951,1898,1938,1908,1943,1918,1928,1956,1893,1832,1866,1829,1725,1876,1806,1710,1589,1647,1791,1855,1860,1897,1893,1801,1892,1876,1465,1472,1406,1520,1547,1604,1787,1567,1554,1648,1650,1715,1678,1754,1745,1791,1796,1901,2056,2054,1963,1982,1973,1984,1963,1994,1939,1967,1916,1914,1108,1333,1374,1045,1751,1785,1742,1752,1726,1510,1649,1531,1650,1772,1768,1772,1735,1872,1784,1812,1760,1781,1694,1711,1719,1635,1693,1823,1790,1637,1171,1024,1058,1178,1337,933,887,901,1293,953,1235,919,1290,509,753,446,617,943,723,820,689,764,1186,1198,1214,1022,1310,1376,1433,1426,1306,1441,1594,1633,1350,1445,1644,1500,1485,1725,1617,1659,1471,199,221,197,415,752,502,424,459,1780,2034,2052,2053,2029,2039,2041,2024,2016,1980,1930,1940,1934,1878,1913,1919,1911,1688,1415,1353,1503,1446,1127,1207,1132,1074,1437,1444,1395,1442,1748,1846,1826,1825,1885,1853,1790,1788,1909,1805,1728,1744,1764,1683,1773,1806,1701,1599,1397,1501,1434,1486,1447,1450,1570,1431,1855,1841,1861,1886,1570,1216,1239,1189,1643,1849,1789,1771,1862,1387,1433,1462,1419,1963,2044,2035,2052,2038,2003,2005,1973,1971,1529,1500,1482,1505,1742,1662,1661,1688,1973,1976,1990,1987,1993,1736,1710,1712,1824,2053,2052,2047,2048,1489,1313,1017,527,528,532,775,1219,1456,1476,1160,1238,1501,1391,1393,1307,1552,1494,1613,1455,1406,1685,1725,1814,1848,1612,1211,1328,1229,1344,934,1013,1008,1137,860,908,985,1018,1025,2017,1964,1946,1947,2033,2004,1969,2047,1962,1556,1506,1623,1735,1640,1674,1696,1629,1790,1501,1523,1608,1838,1617,1726,1667,1689,1535,1697,1561,1474,1433,1602,1535,1417,1871,1907,1856,1856,1891,1893,1865,1864,1902,1613,1510,1429,1658,1980,1980,1975,1993,1994,1814,1785,1795,1834,1868,1926,1937,1828,1367,1464,1426,1369,1507,1497,1528,1478,1536,1551,1751,1688,1587,1480,1599,1503,1486,1758,1716,1642,1732,1673,1747,1669,1770,1668,1669,1538,1700,1691,1644,1650,1532,1695,1588,1570,1549,1482,1509,1785,1370,1734,1662,1474,1492,1519,1515,1528,1513,1652,1606,1321,1316,1369,1511,1610,1836,1401,1534,1667,1473,1751,1756,1694,1643,1582,1260,1201,1244,1311,1367,1216,1328,1742,1357,1465,1299,1365,1096,1161,1246,1197,1311,1410,1415,1359,1429,1581,1205,1282,1587,1742,1857,1656,1367,1143,1021,891,892,1073,1177,1257,1291,1421,1645,1581,1645,1858,1463,1174,978,1007,981,706,890,1299,1129,1258,1263,1254,1314,1481,1695,1734,1879,1845,1783,1769,1720,1383,1256,1185,1311,1273,1330,1316,1266,1245,1279,1294,1273,1321,1755,1578,1701,1601,1527,1453,1666,1639,1655,1378,1199,1179,1277,1299,1263,1410,1458,1873,1451,1268,1396,1217,1249,1109,1286,1402,1622,1722,1649,1605,1442,1362,1454,1335,1827,1450,1412,1264,1234,1281,1178,1229,1387,1684,1706,1712,1671,1500,1637,1726,1505,1674,1539,961,263,1070,1571,999,257,1003,1563,988,257,1018,1546,995,257,1007,1549,1021,250,959,1536,1023,252,855,1217,1286,1280,1408,1325,1257,1364,1273,1421,1301,1335,1267,1443,1313,1292,1310,1302,1474,1375,1240,1278,1236,1252,1264,1240,1278,1547,1184,1176,1219,1241,1226,1221,1209,1214,1497,1271,1257,1304,1245,1246,1223,1259,1641,1721,1745,1763,1650,1654,1714,1780,1845,1187,1332,1322,1422,1287,1409,1252,1360,1374,1343,1347,1343,1332,1413,1360,1384,1840,1672,1604,1588,1667,1564,1519,1480,1261,1397,1396,1459,1571,1529,1433,1503,1697,1905,1670,1585,1571,1657,1558,1565,1497,1260,1420,1354,1428,1549,1495,1484,1509,1667,1904,1659,1616,1583,1665,1583,1577,1527,1289,1403,1355,1388,1534,1489,1516,1511,1649,1856,1719,1612,1627,1608,1572,1613,1472,1313,1363,1362,1384,1507,1514,1543,1469,1601,1814,1453,1203,1121,950,843,938,1065,975,1116,1191,1279,1221,1000,957,1042,1073,1171,1592,1204,1175,1046,840,921,1082,1000,1095,1139,1273,1219,1054,897,1040,1023,1091,1989,1925,1894,1945,1968,1995,1926,1945,1871,1821,1778,1805,1895,1904,1964,1942,1957,1469,1971,1915,1966,1995,1976,1951,1976,1980,1901,1749,1765,1783,1776,1751,1827,1775,1728,1774,1761,1787,1751,1705,1737,2011,1944,1883,1884,1903,1975,1497,713,909,1993,1955,2013,1984,1926,1985,1997,1962,2017,1949,1955,1971,1970,1983,1963,1943,1957,1768,1552,1559,1577,1567,1578,1546,1584,1684,1786,1631,1705,1561,1667,1843,1808,1845,1809,1649,1532,1553,1470,1711,1653,1736,1566,1751,1632,1708,1690,1764,1838,1833,1849,1877,1811,1657,1700,1576,1836,1827,1821,1839,1839,1534,1602,1582,1544,1660,1685,1742,1658,1748,1714,1796,1727,1815,1540,1592,1691,1718,1645,1576,1855,1602,1781,1674,1819,1653,1699,1581,1689,1713,1526,1526,1745,1640,1644,1337,1636,1939,1774,1037,1904,1924,1597,1718,1552,2028,2003,2016,1729,1403,1238,1205,1290,1185,1557,1591,1594,1507,1419,1477,1488,1506,1546,1437,1229,952,907,990,1343,1093,984,1161,1065,1794,1828,1870,1882,1803,1845,1774,1792,1980,1736,1554,1647,1663,1708,1771,1757,1693,1856,1833,1891,1866,1781,1874,1767,1807,1958,1803,1620,1654,1645,1751,1779,1800,1681,1845,1790,1898,1799,1930,1775,1957,1785,1925,1982,1869,1995,1975,1894,1946,1997,1918,2022,1837,1680,1768,1820,1788,1824,1851,1845,1668,1595,1283,1340,1670,1576,1629,1115,1222,1090,1065,361,345,1309,1270,1277,1280,1313,1431,1304,1333,1282,1443,1362,1287,1374,1279,1458,1345,1298,1355,1316,1454,1601,1090,1488,1360,1903,1912,1968,2049,2029,2012,1997,1945,1982,1614,1579,1541,1493,1734,1556,1742,1720,1567,1750,1784,1590,1773,1551,1590,1639,1640,1663,1810,1912,1901,1804,1629,1743,1840,1934,1933,1848,1658,1771,1845,1920,1809,1747,1669,1873,1916,1914,1872,1584,1789,1915,1956,1939,1904,1699,1712,1880,1882,1865,1757,1259,974,1007,982,1430,1497,1598,1588,1642,1627,1691,1633,1601,1619,1815,1696,1742,1736,1613,1702,1622,1636,1681,1720,1935,1729,1711,1745,1713,1771,1727,1604,1736,1661,1749,1647,1601,1695,1626,1531,1985,1898,1867,1922,1955,1935,1873,1690,1762,1646,1665,1794,1936,1859,1901,1893,1900,2001,1927,1950,1936,1920,1811,1786,1787,1802,1900,1948,1885,1876,1930,1902,1853,1860,1624,1372,1262,1447,1679,1601,1645,1630,1925,1872,1847,1847,1850,1830,1833,1873,1880,1877,1893,1900,745,599,638,1046,996,963,1322,1266,1317,1009,1802,1690,1638,1559,1776,1579,1646,1686,1563,1509,1632,1452,1308,1294,1593,1679,1672,1729,1723,1714,1681,1605,1703,1362,1367,1538,1444,1545,1463,1522,1461,1504,1374,1369,1321,1862,1804,1829,1877,1873,1840,1864,1805,1893,1819,1813,1846,1909,1903,1875,1856,1868,1994,2029,1956,1899,1907,1882,1957,1913,1933,1900,1934,1893,1871,1848,1883,1895,1874,1745,1478,1462,1610,1633,1601,1609,1613,1614,1630,1634,1606,1744,1652,1646,1664,1652,1636,1661,1646,1742,1646,1640,1629,1652,1626,1628,1644,1638,1920,1867,1874,1831,1863,1853,1842,1884,1854,1906,1861,1816,1840,1842,1852,1843,1856,1954,1872,1839,1854,1861,1843,1837,1876,1864,1544,1394,1414,1423,1298,1452,1404,1584,1372,1329,1501,1487,1420,1423,1876,1882,1836,1812,1801,1842,1836,1923,1949,1620,1744,1716,1679,1715,1629,1849,1562,1723,1604,1716,1753,1722,1726,1776,1710,1627,1648,1891,1837,1844,1853,1617,1843,1851,1857,1842,1874,1638,1755,1764,1764,1799,1735,1669,1775,1689,1694,1827,1587,1741,1750,1790,1738,1782,1698,1687,1692,1625,1687,1721,1331,1212,1269,1214,1241,1269,1167,1417,1663,1537,1484,1649,1672,1543,1576,1601,1537,1563,1540,1582,1883,1877,1919,1864,1882,1663,1597,1410,1659,1756,1800,1788,1711,1760,1470,1482,1709,1708,1777,1459,1370,1530,1865,1912,1471,1463,1611,1419,1551,1552,1436,1676,1503,1460,1522,1528,1489,1594,1448,1466,1550,1478,1607,1468,1502,1499,1657,1543,1451,1549,1349,1476,1431,1535,1899,1862,1838,1780,1816,1810,1757,1728,1709,1582,1795,1692,1765,1790,1609,1773,1779,1628,1885,1934,1860,1873,1897,1753,1926,1704,1746,1749,1620,1747,1744,1775,1607,1756,1760,1769,1679,1806,1644,1855,1688,1658,1674,1651,1712,1714,1835,1640,1687,1662,1797,1685,1733,1662,1710,1728,1776,1503,1428,1677,1750,1678,1735,1776,1574,1457,1579,1527,1494,1409,1516,1506,1560,1659,1792,1681,1768,1769,1663,1679,1743,1624,1609,1701,1623,1705,1602,1611,1636,1729,1642,1638,1594,1704,1637,1644,1649,1637,1703,1620,1648,1628,1685,1612,1640,1621,1715,1630,1643,1646,1670,1681,1624,1617,1603,1761,1637,1711,1713,1788,1632,1623,1636,1743,1612,1619,1704,1688,1800,1599,1602,1644,1712,1671,1884,1750,1667,1636,1791,1772,1640,1729,1818,1797,1697,1930,1856,1872,1950,2003,1949,1952,1958,1995,1705,1866,1944,1994,2009,2010,2022,1814,1954,1812,1808,1921,2007,2038,2005,2000,1966,1918,1942,1909,1874,1909,1916,1949,1948,1953,1801,1877,1901,1891,1860,1722,1602,1633,1958,1773,1808,1551,1628,1628,1623,1553,1800,1409,1404,1321,1379,1370,1502,1524,1309,1445,1543,1456,1405,1468,1480,1520,1469,1454,1685,1763,1796,1644,1736,1704,1758,1715,1677,1710,1690,1749,1644,1673,1661,1669,1663,1693,1681,1658,1637,1745,1693,1645,1636,1734,1623,1650,1652,1767,1922,1883,1907,1934,1883,1927,1878,1905,1920,1774,1779,1799,1944,2004,1971,2057,2048,2038,2045,2018,2022,2040,2046,2041,2042,2054,2056,2026,2043,2038,1828,1846,1877,1916,1922,1888,1863,1887,1705,1452,1502,1374,1690,1604,1634,1528,1577,1645,1556,1620,1526,1440,1553,1605,1569,1533,1686,1409,1398,1556,1442,1767,1869,1771,1727,1657,1628,1856,1826,1865,1830,1796,1779,1667,1820,1842,1777,1656,2029,1989,2011,1902,1904,1928,1590,1671,1743,1728,1721,1759,1800,1739,1653,1770,1696,1680,1684,1589,1535,1524,1519,1514,1544,1516,1523,1497,1557,1525,1500,1535,1491,1555,1535,1509,1496,1476,1340,1316,1283,1224,1955,1938,1912,1874,1943,1949,1946,1928,1846,1340,1280,1294,1329,1325,1317,1287,1440,1610,1459,1475,1613,1656,1474,1588,1555,1740,1683,1653,1697,1617,1697,1630,1659,1731,1592,1244,1241,1305,1276,1336,1261,1182,1492,1234,1070,1048,1107,1221,1173,1010,1399,1500,1273,1301,1221,1257,1237,1290,1368,1361,1497,1307,1295,1376,1347,1322,1293,1327,1760,1575,1633,1740,1700,1605,1506,1211,1942,1991,1438,1067,1265,1163,1370,1082,1617,1963,1934,1568,1763,1827,1806,1740,1587,1953,1077,452,591,485,538,528,517,469,901,457,1165,1314,1429,1332,1183,1120,411,921,624,1419,1475,1508,1521,1403,989,704,1381,1117,1429,1154,1469,1340,1201,1182,1828,1779,1712,1732,1814,197,123,1219,516,630,671,532,471,750,592,529,1298,916,968,1434,1417,1389,1429,1409,1563,1580,1699,1592,1622,1563,1601,1848,1545,1061,1155,1221,1239,1344,1269,1300,1296,1438,1537,1611,1626,1699,1567,1380,1396,1350,789,25,29,25,554,618,1293,624,1522,1633,1681,1606,1628,1148,1689,1489,1591,1529,1736,1910,1949,1910,1957,1899,1656,862,1216,1497,1292,952,982,1273,1329,1423,1432,1488,1542,1561,1640,1711,1735,1547,1600,1497,1572,1604,1510,1557,1740,2056,2057,2034,2004,1881,1959,2027,1936,1746,1942,1881,1954,2001,2044,1998,2037,2002,2035,1986,2034,2041,1993,1716,1871,2006,2018,2002,1917,1668,1557,1238,1224,1178,1494,1994,1894,1718,1763,1889,1876,1749,1787,1770,1865,1945,1974,1962,1974,1966,1984,2012,1856,1529,1552,1560,1509,1502,1580,1510,1499,1388,1376,1337,1339,1284,1341,1335,1579,2024,2011,2003,1970,2011,1950,1944,1948,2010,1817,1722,1658,1668,1712,1660,1195,269,570,1251,1300,1271,959,1048,935,1087,1197,1647,1704,1563,1719,1733,1670,1544,1587,1553,1617,1553,1602,1492,1480,1224,1377,1100,1156,1259,1336,1228,1364,1426,1553,1590,1596,1455,1449,1412,1228,961,1143,1587,1497,692,1206,1250,1403,1506,1460,1510,1463,1157,1326,1434,1521,1720,1738,1851,1821,1788,1781,1561,1637,1598,1642,1581,1613,1487,1565,1511,1458,1229,1406,1514,1570,1375,1364,1379,1404,1355,1210,513,663,450,816,1420,1528,1544,1531,1421,1477,1552,1463,1347,1338,1157,1190,1305,1422,1516,1336,1080,809,283,997,1739,1918,1797,1775,1547,1345,1035,1198,1539,1574,1562,1558,1563,1565,1532,1743,1745,1830,1710,1834,1761,1888,1746,1713,1409,1411,1331,1412,1426,1514,1667,1710,1541,1561,1506,1484,1542,1547,1473,1691,1910,1776,1549,1196,729,852,851,1218,1515,1596,1671,1727,1482,1612,1332,1328,1226,952,568,846,793,856,608,1032,1415,1141,504,550,482,1080,1764,1617,1091,1126,1004,1204,1401,1343,1096,1131,947,1107,1450,1490,1450,1450,1430,1578,1683,1774,1640,1817,1866,1818,1554,1353,1007,1191,1141,1192,963,1021,853,1148,988,1192,1231,1102,447,572,623,670,485,546,598,656,466,566,609,694,515,590,611,651,412,501,560,1154,1862,1627,1036,1140,1028,1135,1026,1086,1103,1391,1789,1628,1696,1711,1645,1671,1725,1516,1129,1393,1659,1670,1699,1766,1873,1325,222,353,283,367,197,309,240,363,51,270,25,190,151,280,280,296,227,738,1475,1502,1654,1458,1088,1132,1094,1166,1155,1357,1494,1533,1451,1680,1855,1880,1696,1711,1367,1631,1633,1624,1381,1432,1248,1274,1664,1555,1530,1239,1610,1461,1487,1477,1355,1265,1444,1459,1416,1522,1519,1513,1255,1148,1306,1352,1344,1225,1333,1068,1132,1035,1516,1503,1499,1482,1536,1533,1525,1516,992,783,573,544,767,702,765,676,620,550,534,699,713,670,714,702,736,680,762,810,766,661,623,466,1062,2030,1954,1758,1761,1696,1674,1698,1717,1711,1698,1698,1686,1905,1932,1813,1776,1691,1704,1768,1707,1751,986,991,1334,1802,1450,1721,1838,1549,1445,1475,1484,1474,1469,1494,1474,1499,1219,595,533,588,648,589,437,576,611,566,591,582,628,565,516,300,408,567,371,247,486,624,334,348,412,397,435,1376,1932,1829,1670,1656,1684,1672,1673,1674,1659,1699,1687,1691,1686,1922,1831,1646,1698,1670,1761,1777,1665,1682,1004,700,707,1415,1891,1643,1743,1560,1769,1805,1555,1531,1476,1514,1483,1487,1502,1503,1503,1491,1506,1501,1488,1486,1502,1484,1508,1499,1495,1465,1411,624,316,560,597,659,518,575,673,567,282,636,468,423,447,483,268,376,643,655,634,648,726,546,677,627,517,679,429,549,295,580,481,486,322,464,480,440,467,505,433,440,497,550,538,578,524,355,566,363,572,423,388,378,558,403,535,509,230,337,547,1998,1992,2033,1993,2007,2039,1705,1676,1697,1687,1708,1709,1714,1682,1692,1670,1689,1692,1680,1695,1689,1699,1696,1706,1736,1715,1695,1686,1705,1710,1684,1693,1665,1967,2048,2048,1824,1571,1697,1745,1676,1731,1758,1648,1691,1728,1716,1660,1677,1654,1738,1757,1694,1658,1673,1700,1597,946,941,928,798,697,985,1088,1055,997,1236,1133,1165,892,1131,890,1082,790,957,1261,891,1992,1962,1877,1756,1574,1459,1572,1481,1520,1535,1485,1460,1520,1501,1486,1404,515,526,377,434,427,397,492,345,661,671,539,553,592,505,558,259,244,150,393,497,674,474,511,504,420,446,506,372,206,288,1894,2055,1910,1707,1711,1667,1704,1702,1708,1687,1699,1682,1783,1707,1671,1720,2048,1825,1751,1643,1699,1778,1737,1673,1798,1815,1631,1549,1009,1172,1394,1519,1925,1668,1468,1560,1481,1501,1498,1478,1492,1494,1485,1449,1473,274,257,226,218,499,448,209,265,357,443,288,432,344,324,109,223,103,408,276,449,513,269,296,397,514,545,307,365,1602,1997,2023,1677,1679,1725,1664,1698,1690,1661,1659,1692,1711,1709,1722,1891,2048,1770,1860,1744,1796,1719,1672,1752,1807,1811,1877,1341,591,517,876,1078,799,1417,1705,1711,1742,1468,1481,1505,1498,1479,1466,731,419,387,344,330,476,311,419,450,468,313,463,369,271,230,442,478,1318,1963,1744,1684,1701,1667,1676,1694,1687,1711,2001,1790,1745,1648,1716,1774,1825,1815,856,1266,1385,1561,1623,1551,1488,1501,1357,568,518,444,465,544,508,552,539,336,409,322,1054,1919,1658,1657,1648,1678,1667,1977,1701,1612,1706,1389,1406,1625,1612,1556,1451,1518,1490,1498,1502,1487,1495,1484,1514,1491,1522,1484,1492,1500,1490,1331,521,466,500,315,276,479,484,367,248,519,486,491,431,384,420,402,465,386,477,306,170,202,434,253,295,201,195,331,312,305,353,266,376,231,361,429,389,413,316,424,341,478,318,423,309,278,364,399,300,456,516,444,763,1986,1935,1955,1982,1908,1651,1672,1679,1681,1686,1686,1666,1678,1721,1721,1678,1681,1664,1680,1673,1681,1673,1687,1664,1683,1669,1681,1674,1936,2048,2004,1620,1619,1633,1643,1643,1708,1811,1694,1731,1680,1688,1592,1625,1668,1704,1691,1648,922,637,677,600,641,585,1026,1340,1543,1153,1155,990,1452,1490,1498,1252,1508,1402,1454,1884,1814,1828,1789,1580,1550,1473,1469,1483,1496,1471,1513,1507,1484,1496,1503,1173,527,495,655,686,538,520,430,479,382,160,492,278,460,471,602,432,275,445,593,580,698,600,587,324,545,290,387,536,696,720,662,398,359,397,565,319,183,1404,1987,1978,1982,1705,1719,1661,1715,1688,1691,1686,1707,1699,1698,1711,1750,1694,1720,1701,1721,2037,2048,1776,1739,1742,1755,1795,1777,1754,1759,1731,1801,1766,1774,1767,1525,952,884,1227,1395,1610,1478,1561,1953,1768,1583,1573,1695,1535,1490,1483,1504,1495,1491,1497,1491,1482,1487,1498,1508,1493,1488,1464,1487,1467,1476,1482,1508,1497,1294,592,669,681,553,618,568,518,640,630,552,521,356,431,544,565,459,427,489,562,465,693,426,574,607,370,418,578,482,511,590,341,567,366,419,484,508,364,306,391,499,455,551,532,353,263,483,414,293,473,355,242,328,340,441,492,478,430,212,599,470,300,305,358,494,414,296,311,594,504,405,446,447,348,619,599,670,2056,2053,2049,2053,2056,2053,2021,1746,1725,1745,1745,1786,1763,1751,1702,1742,1727,1737,1734,1692,1739,1749,1747,1769,1740,1760,1759,1743,1767,1713,1716,1720,1774,1755,1782,1749,1728,1758,1769,1722,1752,1830,2048,2048,2048,2048,1941,1704,1794,1826,1861,1886,1768,1805,1793,1826,1776,1697,1783,1835,1802,1816,1823,1803,1816,1847,1847,1803,1762,1834,1852,1875,1832,1839,1839,1844,1877,1857,1804,1383,867,790,858,694,924,1372,1303,1423,1109,1219,1488,1212,923,817,874,1213,1324,1528,1272,1985,1947,1855,1758,1634,1455,1635,1572,1597,1530,1485,1500,1508,1520,1516,1503,1438,1474,1497,1502,1460,1497,1482,1527,1502,1488,1504,1504,1484,1492,853,523,677,604,496,451,337,587,580,602,647,565,612,693,497,501,449,595,592,467,383,453,491,580,589,369,517,439,380,585,427,215,238,398,431,406,333,408,205,492,378,490,292,287,456,370,528,267,353,161,468,404,324,173,208,197,272,294,565,491,458,561,426,489,542,2046,1989,1939,1979,1978,1929,1641,1676,1688,1684,1659,1714,1715,1691,1684,1682,1642,1656,1694,1716,1696,1680,1709,1709,1695,1675,1677,1692,1659,1685,1668,1673,1666,1718,2048,2048,1993,1600,1695,1709,1736,1779,1776,1672,1633,1683,1786,1729,1787,1706,1736,1725,1718,1700,1718,1691,1756,1408,841,692,592,520,752,736,989,1056,918,700,739,621,741,712,665,758,681,721,398,341,774,649,955,695,568,521,739,1571,614,1611,1674,1793,1784,1770,1666,1669,1509,1634,1618,1532,1481,1484,1484,1479,1478,1479,1487,1477,1457,1483,1493,1462,1483,1465,1472,1466,1484,1481,1459,1472,1492,1488,1482,1476,1487,1502,1468,1474,1449,1479,1442,1474,1466,1463,1471,1484,1446,1457,1474,1465,1490,1490,1487,1464,1458,1471,1487,1438,1454,1425,1411,1432,1477,1498,1475,1432,1453,1481,1460,1484,1462,1486,1487,1457,1487,1427,1470,1472,1473,1494,1476,1469,1440,1359,562,489,420,632,468,470,287,490,501,247,301,603,570,472,623,430,493,638,621,490,683,428,613,540,382,533,627,610,560,444,456,459,506,547,512,446,497,552,498,528,626,563,702,511,341,283,523,479,462,584,582,653,524,530,570,460,580,373,395,544,448,471,417,529,515,345,462,478,389,578,381,546,360,601,616,600,658,600,614,531,550,542,498,601,530,274,423,332,523,448,500,508,344,298,493,414,313,469,494,507,341,394,519,591,508,529,583,377,254,463,384,208,201,395,559,543,532,349,364,482,315,344,293,361,334,569,400,447,518,451,574,634,502,545,550,574,499,419,433,455,561,578,544,501,459,534,538,317,263,473,476,421,571,531,480,549,461,319,346,556,528,526,425,462,483,438,451,624,585,450,482,488,468,470,580,625,519,392,346,544,483,377,517,596,357,368,416,315,303,264,378,397,340,335,221,583,534,611,538,494,302,356,598,516,504,465,523,489,476,495,501,465,539,313,343,376,366,637,544,521,421,412,523,506,380,602,556,464,496,469,482,520,504,404,487,505,151,185,518,537,529,605,462,561,528,496,520,380,743,1909,1939,1951,1914,1926,1949,2002,1951,1983,1978,1941,1992,1939,1949,2000,1966,1933,2013,2052,1874,1673,1623,1638,1677,1686,1717,1721,1722,1694,1666,1696,1669,1707,1679,1693,1674,1684,1686,1681,1671,1674,1692,1687,1697,1687,1690,1666,1695,1673,1675,1690,1686,1676,1679,1682,1682,1697,1670,1695,1687,1664,1659,1649,1674,1705,1651,1691,1665,1679,1638,1664,1685,1672,1656,1675,1705,1692,1683,1686,1685,1673,1664,1685,1672,1646,1717,1722,1682,1672,1669,1655,1666,1693,1646,1662,1680,1643,1639,1666,1670,1687,1662,1670,1679,1659,1685,1720,1677,1707,1695,1688,1727,1671,1663,1699,1723,1696,1681,1673,1696,1672,1677,1682,1699,1693,1669,1898,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1866,1623,1581,1710,1757,1782,1747,1723,1754,1738,1661,1658,1668,1690,1710,1666,1737,1752,1667,1719,1707,1746,1731,1710,1669,1589,1730,1715,1720,1639,1723,1601,1696,1656,1708,1678,1605,1728,1717,1731,1768,1772,1712,1656,1714,1703,1709,1756,1742,1692,1610,1716,1778,1679,1529,1457,1578,1620,1715,1749,1651,1789,1823,1705,1733,1698,1659,1791,1767,1682,1646,1744,1730,1770,1786,1713,1716,1027,872,733,923,878,703,804,740,594,724,564,605,594,694,218,349,675,667,775,653,893,636,640,776,784,788,788,718,786,867,671,850,861,770,781,795,887,696,764,699,738,769,688,760,747,685,830,637,849,844,590,610,305,430,646,557,852,589,387,719,563,843,845,935,757,606,453,512,619,622,830,574,537,645,515,606,513,620,757,797,629,738,887,529,488,939,483,534,492,916,766,889,647,700,736,622,769,614,747,741,549,663,719,554,799,578,480,555,441,817,786,878,943,595,724,797,750,283,864,818,667,626,690,781,671,630,651,781,713,576,721,477,622,717,790,423,374,338,290,322,275,391,422,283,298,306,275,303,438,486,501,732,497,327,545,715,530,759,680,534,721,789,551,678,696,940,553,425,381,492,463,307,476,356,200,541,329,309,311,246,202,585,578,472,659,728,691,381,218,209,240,254,152,182,226,588,1280,1891,1311,1915,1887,1947,1917,1913,1932,1941,1940,1916,1973,1909,1910,1864,1808,1901,1837,1884,1517,1527,1466,1488,1476,1493,1486,1475,1500,1493,1358,467,481,483,524,455,430,518,461,473,245,502,438,520,430,460,600,245,404,437,296,428,344,330,357,394,302,481,273,280,391,432,744,1985,1946,1968,1687,1680,1714,1707,1694,1722,1674,1720,1718,1693,1679,1675,1672,1676,1800,2048,1839,1797,1707,1817,1754,1711,1768,1809,1772,1729,1687,1720,1219,767,814,1095,1565,1324,1335,1174,1614,1651,1744,1529,1449,1529,1499,1468,1442,1503,1495,1506,1491,1477,390,306,457,463,371,706,539,583,531,600,531,484,407,353,265,453,457,370,296,401,322,444,557,336,306,514,260,222,1241,2001,2055,1699,1684,1712,1712,1737,1711,1711,1674,1712,1698,1687,1711,1683,1883,2048,1667,1621,1797,1848,1850,1735,1735,1788,1851,1762,1783,1782,948,742,872,1146,996,1373,1318,1581,1678,1709,1591,1596,1591,1498,1487,1490,1486,1485,1502,1486,1492,1470,1471,1464,1497,1468,1451,1482,1491,1487,1480,1480,1472,1449,1471,1467,1501,1472,1473,1489,1478,1483,1480,1485,1486,1505,1488,1461,1496,752,638,585,649,675,658,633,530,582,549,574,645,565,621,609,629,615,610,556,546,649,642,597,571,529,670,604,599,613,576,514,475,497,674,607,528,542,516,541,579,550,552,553,646,562,413,375,211,352,427,357,516,466,416,445,536,685,534,342,180,191,374,131,215,344,463,458,507,472,528,678,492,589,609,617,626,561,502,546,403,570,477,646,581,570,278,496,489,531,502,295,259,346,600,560,610,567,479,407,601,613,480,572,590,627,550,559,458,589,1604,2011,1984,1987,2047,1900,1973,1948,1981,1992,1718,1711,1708,1712,1705,1704,1693,1698,1718,1667,1715,1690,1691,1698,1712,1695,1692,1680,1701,1704,1636,1665,1658,1653,1680,1671,1674,1689,1704,1676,1683,1671,1696,1691,1695,1693,1662,1663,1672,1697,1674,1666,1659,1694,1662,1663,2015,2048,2048,2048,1995,1751,1771,1706,1668,1659,1712,1725,1789,1748,1746,1741,1667,1720,1715,1622,1743,1632,1707,1710,1746,1732,1704,1753,1752,1716,1599,1608,1702,1739,1711,1723,1673,1049,916,879,870,739,817,858,786,895,769,1049,990,938,816,992,902,1332,1024,1146,1184,1078,1134,1250,1088,1170,1220,1446,1370,1377,963,1077,1278,745,821,750,500,766,507,426,761,937,942,1135,1125,1133,889,562,512,848,1267,992,935,1115,1465,1856,1854,1855,1867,1916,1933,1901,1951,1845,1569,1518,1486,1481,1491,1484,1495,1467,1467,1488,1495,1489,944,406,215,472,547,332,409,515,475,355,157,171,248,309,260,383,491,338,500,413,312,386,392,444,426,250,375,328,333,429,245,447,344,360,929,1984,1977,2023,1644,1705,1647,1707,1686,1679,1698,1702,1714,1684,1695,1716,1702,1688,1714,2048,1936,1675,1705,1774,1744,1740,1780,1807,1774,1736,1747,1713,1662,631,799,1352,1484,719,766,1086,1626,1828,1803,1533,1616,1494,1485,1499,1494,1508,1496,640,493,566,626,487,413,574,485,339,439,440,451,171,335,379,486,404,293,414,393,385,310,759,1928,1949,1702,1708,1715,1687,1715,1660,1663,1685,1694,1713,2048,1733,1783,1800,1755,1733,1722,1754,1846,1515,766,787,1632,1741,1509,1377,1574,1670,1468,1469,1350,1489,1486,1478,1505,1461,1477,1471,1478,1511,1510,1480,1491,1488,1254,574,395,556,615,446,601,416,504,541,490,475,670,561,567,289,418,362,316,450,446,565,379,500,319,219,231,590,605,649,568,611,526,464,580,354,471,567,414,669,581,430,452,516,290,632,1986,1970,2011,2028,1691,1733,1708,1701,1691,1678,1679,1660,1710,1730,1665,1675,1670,1721,1719,1715,1724,1730,1726,1702,1990,2048,1911,1729,1684,1747,1753,1696,1683,1690,1637,1685,1728,1781,1743,1771,1764,1781,1206,900,738,1004,1627,1602,1356,1527,1412,1632,1424,1805,1832,1755,1629,1417,1443,1489,1481,1489,1465,1493,1482,1482,1472,1475,1483,1498,1477,1477,1429,499,514,597,525,511,399,541,570,573,360,425,485,358,403,238,428,462,553,569,411,519,566,399,445,203,237,200,469,434,346,220,68,210,353,263,245,342,539,389,440,429,239,309,342,248,1768,1959,1913,2028,1743,1703,1682,1674,1685,1678,1690,1721,1675,1655,1668,1670,1702,1687,1671,1672,1677,1668,1683,1682,1936,2048,1974,1708,1709,1667,1775,1723,1775,1727,1661,1687,1706,1611,1766,1636,1674,1801,1335,691,727,503,953,888,666,855,837,800,774,505,1227,1285,1777,1711,1607,1644,1666,1487,1480,1496,1498,1508,1493,1478,1451,1490,1489,1507,1482,1518,1482,1517,1491,1493,1428,1475,1502,1535,1522,639,557,605,345,400,502,511,585,550,423,435,453,568,473,116,547,564,537,463,430,410,320,192,170,512,580,532,526,577,507,489,433,346,400,525,526,517,465,309,316,515,347,354,201,110,248,574,495,466,514,387,318,455,434,380,374,294,167,342,411,424,365,451,493,383,307,465,428,455,393,1348,2009,2036,1983,2000,2050,1877,1720,1680,1637,1662,1692,1703,1642,1687,1716,1673,1713,1697,1685,1672,1691,1683,1689,1698,1705,1701,1688,1662,1670,1689,1714,1696,1674,1694,1709,1705,1720,2022,2048,2048,1986,1665,1724,1606,1650,1755,1517,1811,1735,1784,1751,1722,1701,1735,1704,1704,1762,1709,1691,1720,1754,1854,1625,1778,1795,1832,1046,623,525,633,544,718,705,724,651,401,215,499,729,697,381,519,427,266,512,443,333,235,342,1086,1240,494,1622,1696,1770,1790,1789,1733,1537,1424,1487,1492,1515,1506,1126,493,239,232,261,429,286,152,255,250,205,515,427,349,383,480,523,1604,1968,1668,1670,1700,1702,1673,1665,1680,1887,1829,1773,1740,1775,1693,1620,960,853,1168,1277,1661,1661,1624,1521,1512,1500,1497,1472,1498,1474,1498,1487,1474,1478,1491,1503,1489,1483,1487,1477,1509,718,618,625,561,553,527,524,525,560,525,529,562,416,614,595,473,633,390,462,605,575,539,507,599,610,300,501,597,497,385,319,518,448,552,545,390,401,441,552,460,447,644,346,598,579,611,667,436,348,640,506,429,513,595,382,621,564,591,609,605,1441,2050,2021,2040,2032,1841,1708,1712,1713,1702,1691,1703,1710,1711,1696,1678,1679,1692,1680,1716,1674,1727,1681,1711,1672,1670,1679,1661,1710,1711,1722,1813,2048,2048,1841,1750,1772,1734,1748,1643,1721,1684,1760,1821,1786,1840,1826,1667,1643,1752,1800,1795,1427,731,769,860,701,925,1687,1594,1275,1332,1728,1663,1537,1399,1076,1713,1837,1852,1739,1847,1587,1534,1544,1505,1485,1484,1478,1479,1491,1475,1473,1476,1499,1462,1493,1487,1486,1506,1522,1483,1497,1493,1507,1376,508,72,279,182,482,550,505,451,448,505,623,635,244,401,465,346,436,301,555,563,553,322,383,167,425,335,205,555,356,617,542,459,481,516,533,286,304,558,397,493,603,594,553,505,241,227,448,387,457,501,441,546,591,541,625,585,498,509,453,328,462,477,173,120,461,368,494,312,327,1597,2035,1996,2029,2046,1981,1657,1702,1689,1679,1647,1693,1666,1644,1662,1692,1688,1673,1686,1698,1715,1671,1712,1676,1675,1704,1697,1695,1696,1719,1709,1674,1696,1676,1655,1765,2048,2048,2048,1738,1728,1760,1733,1762,1704,1631,1729,1725,1670,1690,1806,1769,1805,1697,1748,1724,1653,1772,1719,1644,1576,1730,984,836,705,781,801,719,715,718,575,720,793,1010,1012,1059,828,721,872,1001,1169,984,928,1015,1005,886,823,951,836,546,622,703,72,621,1192,1480,1753,1866,1820,1831,1772,1574,1519,1547,1497,1489,1491,1500,1498,1506,1483,1497,1520,941,396,378,225,320,559,566,329,486,403,485,486,381,285,504,372,289,551,411,329,312,537,407,357,384,368,197,382,205,282,355,527,353,234,269,224,1687,1985,1951,1831,1698,1677,1690,1691,1635,1697,1669,1684,1659,1664,1694,1696,1708,1688,1676,2048,2046,1721,1742,1746,1775,1638,1764,1706,1628,1671,1776,1726,1761,1651,1116,604,680,801,1200,1151,906,1160,1725,1893,1886,1636,1517,1526,1494,1499,1491,1491,1500,1512,1494,1485,1499,1505,1486,1508,1532,1494,1484,1486,1492,1499,1515,1477,1492,1499,1491,1474,1522,1513,1511,1469,1524,1495,1481,1462,575,538,544,463,514,535,533,648,598,586,600,486,427,445,536,457,426,560,581,614,609,562,510,611,478,433,510,581,599,530,305,500,429,546,493,445,507,491,501,561,422,523,541,421,301,304,373,438,381,287,298,528,381,421,482,436,634,546,471,303,521,601,632,591,555,565,371,532,430,561,491,405,459,535,360,472,524,481,417,374,429,527,479,354,470,457,351,396,229,551,538,357,422,403,333,334,611,312,458,454,252,206,322,425,369,320,367,348,211,410,284,1373,2000,2044,1991,1979,2014,2023,1993,2042,2054,1736,1678,1693,1684,1688,1689,1676,1696,1728,1701,1702,1735,1729,1731,1709,1729,1726,1757,1734,1731,1709,1694,1691,1693,1686,1687,1671,1680,1698,1681,1719,1710,1653,1665,1688,1688,1692,1713,1713,1742,1745,1743,1729,1659,1689,1716,1696,1665,1655,1679,1909,2048,2048,2048,2048,1999,1687,1727,1686,1694,1613,1666,1760,1720,1787,1737,1770,1769,1749,1682,1711,1697,1714,1709,1728,1632,1655,1614,1627,1759,1739,1645,1741,1600,1673,1638,1733,1769,1762,1691,1814,1612,1549,1599,1010,766,727,796,876,542,764,738,621,873,875,966,967,975,478,573,636,669,931,795,655,737,644,667,804,632,599,571,438,187,858,864,840,950,1021,1116,824,1032,940,794,709,518,1306,1405,1727,1864,1824,1871,1838,1789,1822,1901,1650,1672,1574,1490,1510,1484,1489,1504,1476,1486,1482,1483,1242,467,495,511,412,531,444,506,362,438,344,271,346,122,55,451,566,604,561,600,540,598,326,170,59,322,432,233,368,372,168,60,345,1975,2053,2053,1692,1673,1697,1699,1697,1730,1720,1712,1677,1660,1709,1709,1707,1734,2023,2048,1802,1842,1817,1793,1778,1726,1806,1763,1717,1811,1827,1859,902,764,716,879,925,567,1439,668,1352,1571,1644,1610,1505,1569,1535,1483,1519,1498,1508,1485,1489,1490,1491,1479,1497,1478,1496,1484,824,398,242,272,361,448,377,399,418,240,244,613,473,567,578,426,486,419,285,264,421,405,264,448,502,368,278,388,443,362,404,246,444,410,461,450,475,269,757,2025,2011,2029,1705,1653,1653,1697,1708,1689,1690,1693,1708,1706,1692,1688,1660,1649,1662,1654,1674,2048,2046,1607,1648,1806,1892,1897,1812,1816,1812,1839,1827,1695,1679,1603,946,671,592,740,578,290,350,457,362,375,409,482,512,1614,1156,468,718,1502,1529,1491,1502,1715,1667,1594,1640,1501,1526,1509,1531,1518,1535,1520,1529,1495,1515,1519,1513,1505,1513,1503,1519,1531,1507,1518,1498,1508,1520,1515,1509,1504,1541,1494,1511,1540,1532,1538,1541,1519,1520,1520,1515,1515,1514,1494,1499,1495,1493,1474,1482,1499,1490,1502,1479,527,542,468,480,514,495,573,438,517,675,674,646,726,674,685,720,683,640,657,741,741,734,588,528,599,335,613,547,608,686,714,617,654,658,658,598,670,591,621,629,481,602,654,561,593,573,588,517,511,591,588,613,624,522,557,639,592,511,549,530,623,507,404,517,566,516,569,627,547,611,600,575,645,515,611,532,667,597,511,504,554,530,477,534,502,607,584,469,420,570,597,541,695,562,744,770,685,651,673,655,676,702,593,556,626,664,644,634,551,522,515,613,594,641,637,612,543,612,570,598,577,563,565,547,275,601,558,542,529,542,524,501,546,491,511,599,612,513,390,361,607,510,520,547,389,432,484,538,584,521,499,361,1342,2057,2054,2047,2041,2042,2055,2039,2048,2056,2056,2017,2054,1969,1710,1731,1679,1701,1712,1728,1705,1678,1711,1696,1711,1692,1701,1700,1693,1703,1739,1728,1698,1726,1724,1732,1745,1730,1760,1762,1758,1756,1739,1707,1691,1720,1718,1693,1686,1667,1705,1735,1686,1682,1709,1705,1697,1718,1711,1748,1741,1758,1745,1754,1708,1719,1723,1737,1721,1741,1728,1761,1736,1727,1747,1763,1750,1744,1728,1755,2054,2048,2048,2048,2048,2048,2048,1968,1704,1638,1746,1740,1691,1675,1727,1781,1702,1779,1798,1762,1842,1782,1828,1819,1791,1799,1793,1754,1775,1794,1606,1575,1699,1727,1679,1636,1627,1800,1666,1721,1700,1692,1730,1848,1835,1809,1811,1816,1820,1676,1716,1592,1661,1785,1825,1799,1792,1849,1857,1815,1781,1064,941,909,928,958,914,745,788,899,884,1162,1299,1388,1226,1175,1231,1232,1284,1308,1295,1195,1087,1241,766,722,737,917,958,941,1077,1328,969,474,644,1596,1352,1790,1968,1694,1817,1881,1912,1806,1815,1824,1831,1889,1864,1525,1480,1554,1495,1503,1484,1500,1511,1491,1460,1456,163,118,285,117,114,274,260,431,245,318,316,288,147,367,260,150,165,183,503,390,280,197,551,414,385,438,270,159,1225,2024,2056,1743,1699,1689,1693,1727,1700,1677,1708,1718,1741,1700,1661,1686,1855,2048,1843,1797,1661,1634,1815,1709,1776,1825,1775,1883,1742,1708,722,837,1799,1424,1625,1601,1628,1529,1445,1163,1517,1490,466,417,498,547,554,476,449,1726,1734,1695,1684,1853,1802,1661,639,793,1423,1557,1488,1502,1486,1057,198,460,437,536,460,112,214,586,355,292,269,519,684,1943,1723,1671,1692,1682,1679,1644,1953,1606,1735,1774,1679,1257,859,1671,1776,1660,1473,1475,1497,1506,1485,1005,479,449,376,405,477,298,284,503,509,445,361,500,461,449,558,986,2023,1656,1664,1658,1696,1682,1679,1679,1963,1663,1706,1738,1767,1354,556,964,1262,891,1292,1627,1917,2053,2047,2041,2053,1852,1608,1589,1478,1124,800,815,757,827,919,1093,2014,2016,1969,1931,1851,496,998,1115,1466,1130,1455,1372,1334,1145,797,673,1110,1092,1216,1092,1048,777,978,848,1088,1027,1024,1071,1106,1141,824,739,730,825,1010,704,917,771,774,1279,2048,1345,1092,1074,944,952,993,1128,993,998,923,1218,1094,841,1061,985,986,1022,723,796,723,845,1143,1420,1516,1415,1605,1989,2048,2056,1868,1445,2028,2057,2048,2048,1974,1831,2057,1654,1945,2055,2048,2048,2048,2048,2048,2048,2055,2039,2031,2033,2029,2031,2001,1941,1797,1679,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2004,1935,1831,1783,1331,1814,1928,1893,1760,1947,2055,2052,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1957,1462,1091,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2027,1553,2056,2048,2048,2057,1860,1550,1367,1203,979,693,485,2038,2056,2048,2048,2057,2048,2048,2055,2055,2056,1811,1427,828,2048,2055,2015,1937,1871,1686,1480,1150,862,552,248,413,1952,2048,2048,2048,2049,2048,2048,2048,2048,2048,2048,2057,2045,1971,1810,1611,1465,1369,2053,2048,2048,2057,2057,2048,2048,2048,2048,2048,2050,2038,2018,1885,1688,1431,1023,1231,1822,1886,2020,2048,2052,2049,1927,1679,1256,1039,2048,2046,2048,1762,2041,2048,2052,1752,457,91,186,34,903,2048,2048,2057,2048,2048,2048,2056,2032,1899,2054,2048,2048,2048,2012,2057,2048,2048,2048,2048,2048,2055,2048,2056,1914,1536,1981,1983,1618,1635,2048,1999,1544,1265,1599,1894,2039,2051,2048,2056,2046,2028,1856,1405,295,1189,2048,2048,2048,2048,2056,2057,2057,2048,2048,2042,2005,1836,1869,1946,1539,2032,2048,2056,2048,2057,2048,2048,2048,1984,1985,2048,2048,2048,2057,2048,2048,2056,1933,1714,1992,1974,1820,1126,2054,2048,2012,1841,1741,2048,2048,2048,2048,2055,2048,2048,2048,2055,1766,1311,1697,1928,1974,2024,2037,2048,2041,2026,2041,2053,2047,2049,2019,2042,1994,1961,1985,2049,2046,2048,2041,2049,2014,2044,2039,2039,2041,2040,2025,1911,1808,1598,1389,1279,1214,1182,1182,1038,997,1108,1005,1001,886,883,875,782,627,570,425,188,164,107,46,61,2040,2022,2050,2048,2056,1919,1736,1611,1181,941,2048,2048,2048,2048,1907,2048,2048,2048,1971,2048,2048,2048,1997,2055,2056,2055,2056,2053,2033,2048,2057,2047,2049,2048,2029,1962,1892,1833,1731,1756,1612,1934,2057,2048,2051,2050,2053,2051,1826,1982,2055,2056,2055,2048,2056,2048,2044,1922,2057,2033,1922,1492,1952,2055,2054,1514,1846,2048,2048,2048,2048,2048,2048,2056,2050,2012,1908,1720,1522,1383,1302,1127,1571,2048,2048,2048,2041,2026,1882,1676,1024,312,1011,1505,1717,1892,1958,1900,1929,1983,1918,1742,1552,1348,1095,583,424,1633,2025,2053,1398,860,1900,2048,2048,2048,2048,2048,2048,2048,2023,1977,2044,2031,1794,1490,973,1602,2053,1830,1443,1729,2048,2048,2053,2048,2048,2057,2048,2049,1945,1861,1687,2048,1481,1132,1380,2056,2048,2048,2048,2048,2048,2042,1848,1892,2048,2048,2048,2048,2048,2048,1889,1031,1479,1901,2030,2054,2048,2042,1318,1630,1838,2051,2048,2048,2048,2047,2009,1824,1285,983,775,502,350,247,119,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2050,1303,2048,2048,2048,2048,2048,2048,2048,2048,931,341,1357,1709,1970,2057,2048,2048,2048,2048,2048,2048,2048,2048,2054,1868,1637,1468,1357,1191,1105,1014,893,697,840,1009,822,915,1680,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1793,1217,766,677,1624,2048,2048,2048,2052,1381,1860,2019,1749,1249,954,571,720,1215,2055,1851,1073,647,1818,1945,2012,2048,2054,2056,2048,2030,1926,1616,1752,1855,1935,1972,2056,2055,2048,2048,2057,2048,2048,2057,2026,1757,1425,737,793,1740,2056,2048,2048,2048,2048,2048,2048,2048,2054,1973,1714,1421,1011,941,185,615,2048,2039,1957,1918,1794,1713,1804,2048,2010,1739,1604,1332,1710,1801,2038,2048,1929,2016,1082,2051,1687,1815,1953,2048,1650,1891,1327,1433,1159,1713,1962,2033,1986,1990,2021,1987,1910,2048,2053,2031,1623,941,1498,2048,2048,2048,2048,2048,993,1319,2057,2048,2048,2057,1333,382,1986,2057,2035,2048,2048,2048,2048,1943,2055,2032,1511,2048,2027,1813,2057,2016,1690,2027,2026,1382,1318,2013,1385,867,2048,2048,2048,2043,1093,117,205,1525,2053,2056,2048,2057,2056,2056,2043,1947,2048,2048,1894,2048,2014,2024,2057,2018,2048,2050,2056,1958,2013,1702,1898,1608,1722,1606,1267,1655,1717,1500,1307,1374,2057,1900,1812,2001,2048,2048,2048,1988,1397,1089,700,1636,1828,1387,1919,1804,2057,2048,2048,2048,2048,2048,2048,2048,2054,2034,1947,1768,1578,1385,1131,855,1515,2048,2048,2048,2048,2048,1297,891,2031,2047,2056,1964,1910,2030,2053,2048,2048,2048,2048,2048,2045,1943,1749,1358,607,1242,2048,2048,2048,2048,1166,164,1243,2052,2048,2048,2048,2048,2056,2048,2048,1871,1358,256,648,1476,1990,2048,2048,2048,2048,2048,2048,2048,2055,2048,2053,2000,1861,1794,1802,1702,1511,1415,1245,1268,1210,1016,718,542,547,508,445,476,384,415,454,473,458,586,449,201,420,979,1159,1163,1227,1129,1025,907,902,657,451,277,108,217,1233,1637,1893,2048,2048,2057,2005,1962,1950,1849,2023,1766,2001,1993,1551,1688,2056,2053,2048,2009,2033,2046,2028,2043,2021,1946,2048,1986,1894,2020,2049,2048,2033,1680,1868,1981,1743,1909,2039,1694,1301,1704,2057,2054,1977,1916,1907,1848,1942,1875,2055,2048,2055,2038,1855,2057,2017,1554,1562,1562,1360,998,446,591,371,537,686,741,1153,1637,1371,1435,1295,1279,1473,1696,1782,1805,1791,1937,2014,2028,2044,2057,2051,2054,2057,2048,2048,2055,2040,1986,2000,2000,1987,1871,1739,1719,1733,1701,1644,1527,1455,1436,1422,1444,1298,1256,1199,1228,1172,1104,1049,943,955,972,1531,1417,1513,1545,1387,1486,1537,1556,1439,1594,1430,1577,1623,1714,1532,1692,1484,1502,1656,1641,1794,1731,1771,1781,1828,1868,1917,1870,1976,1937,1973,2051,2056,2056,2048,2057,2052,2035,2022,1909,1740,1568,1054,1442,1785,2028,2052,2057,2053,1184,156,1252,2048,2048,2019,1435,2054,1050,2054,2057,1511,1625,2057,2048,2048,2048,1530,2056,1947,1521,1378,2048,2048,2048,2048,2048,2056,1970,2048,2048,2057,2048,2057,2048,2048,2048,2048,2048,2048,2053,2009,2052,2048,2057,2048,2057,2017,1949,2023,2057,2048,2052,2053,2048,2048,2048,2048,2048,2048,1671,1390,2048,2049,2056,2057,2057,2050,2054,1899,1925,1790,1563,1607,1440,1744,1817,1566,1438,1332,1141,901,291,1738,2048,2048,2048,2048,1960,1588,992,204,1085,2057,2048,1952,1665,1471,1766,1861,850,202,854,942,370,429,341,417,342,371,296,426,685,901,803,634,516,668,1125,848,591,1467,1420,1427,1269,1200,1381,645,613,817,373,260,503,429,336,993,940,339,336,408,616,801,515,515,646,372,382,641,753,839,774,532,1055,802,621,965,792,603,902,414,597,627,811,900,576,282,322,227,307,464,357,320,245,159,434,580,771,731,591,436,179,475,568,495,541,455,471,483,146,671,818,274,269,474,366,866,888,588,120,194,271,399,806,307,408,288,447,190,748,272,333,991,709,186,279,409,412,290,237,311,313,852,623,511,408,724,405,562,426,335,751,507,325,611,665,953,218,203,368,373,770,362,570,454,515,533,552,382,595,336,512,497,499,581,218,783,480,569,237,638,790,597,869,1215,1107,1118,1083,1080,1065,398,435,1151,1089,987,685,591,1419,269,456,335,152,346,232,210,139,250,288,414,133,133,133,311,445,641,316,707,546,416,885,554,570,143,351,617,299,350,270,717,414,565,488,284,296,276,275,563,172,356,192,256,335,158,488,289,319,189,281,176,211,527,344,451,369,697,1110,282,439,461,493,675,627,347,571,1094,825,814,605,540,358,355,362,337,357,450,273,225,270,141,203,770,814,864,796,575,607,532,284,489,295,457,762,187,388,345,586,798,858,758,499,400,544,285,365,212,297,243,566,384,587,390,652,502,563,752,560,66,329,460,572,820,436,426,403,341,369,343,331,1231,1276,1223,1342,1133,1361,1963,1805,522,122,159,453,576,161,194,123,481,215,389,594,480,1154,804,654,216,234,413,220,371,278,174,338,198,506,365,589,500,457,683,735,913,195,634,202,334,366,408,457,266,221,502,303,341,259,284,297,272,560,231,405,193,470,413,404,119,423,593,556,539,167,275,448,410,462,223,451,677,296,748,434,473,683,344,554,883,163,178,151,239,155,190,441,179,162,154,169,186,321,143,274,324,298,349,682,89,204,289,203,343,452,368,571,498,178,192,185,494,282,383,663,220,364,209,174,213,370,107,448,557,166,235,291,157,316,145,138,673,508,475,418,392,432,217,250,294,450,312,268,921,367,352,392,418,370,604,994,739,1005,800,734,1597,1009,1128,1307,1395,1442,1470,1432,1539,1530,1549,1574,1484,1520,1483,1501,1599,1486,1566,1476,1517,1494,1465,1301,1327,1200,1263,1378,1358,1239,1188,1125,1080,1418,1321,1660,1923,1719,1764,1733,1661,1712,1733,1721,1714,1743,1700,1712,1756,1774,1769,1701,1687,1680,1678,1651,1670,1724,1693,1755,1690,1707,1639,1638,1668,1635,1584,1586,1637,1899,1563,1725,1696,1599,1647,1651,1728,1730,1815,1832,1819,1826,1823,1799,1709,1781,1671,1777,1820,1853,1752,1638,1752,1839,1709,1775,1768,1761,1728,1656,1621,1652,1645,1748,1655,1627,1565,1583,1657,1648,1643,1717,1688,1716,1646,1722,1683,1759,1714,1627,1760,1713,1696,1718,1663,1637,1680,1691,1627,1673,1596,1604,1557,1514,1516,1466,1699,1108,1085,855,702,875,1313,1408,1469,1302,1132,1152,1198,1147,1372,1374,1228,1310,1292,1292,1143,986,866,720,868,943,730,633,855,1043,1087,1066,1197,1585,1560,1413,1463,1380,1614,1430,1470,1554,1539,1369,1298,1284,1238,735,238,212,249,222,222,895,1418,1435,1197,1585,1644,1407,1226,1487,1090,737,1371,1307,845,1453,1603,1414,1640,1568,1593,1428,1347,1321,1636,1297,1447,1586,1698,1426,1418,1371,1586,1403,1656,1186,1603,1703,1576,1735,1482,1506,1762,1205,1721,1259,1683,1442,1163,1543,1517,1680,1503,1375,1494,1436,1388,1559,1645,1593,1427,1252,1621,1441,1569,1607,1366,1381,1503,1686,1249,1618,1158,1459,1504,1624,1217,1419,1480,1658,1591,1662,1127,1564,1335,1563,1024,1612,1448,1696,994,1510,1484,1467,1366,1476,1543,1605,1595,1621,1546,1348,1409,1704,1501,1748,1255,1805,1270,1840,1378,1584,1223,1796,1670,1527,1506,1464,1885,1401,1394,1775,1673,1220,1616,1707,1723,1845,1410,1681,1761,1745,1539,1717,1755,1273,1685,1313,1598,1567,1742,1327,1714,1687,1570,1588,1596,1569,1838,1472,1802,1529,1892,1879,1910,1947,2052,2000,2051,2018,2033,2010,2036,2022,2039,2020,2050,2057,2038,2042,1990,2031,2000,2028,2024,2034,2048,2048,2029,2040,2049,2017,2022,2025,2040,2043,2041,2041,2048,2028,2019,2020,1831,1989,2034,2040,2044,2039,2032,2028,2040,2013,1988,1990,1981,1982,2018,1994,2025,2040,2026,2046,2055,1989,1968,1993,2000,2005,1981,2029,2019,2029,2049,2030,1994,1958,2001,2017,1984,2014,2050,2046,2050,2029,2013,1982,1981,2031,2016,2040,2027,2048,2052,2046,2056,2025,2053,2025,2029,1997,2051,1992,2041,2005,1935,1974,1960,1981,1971,2021,1940,1940,2001,1992,1975,1946,2010,1987,1994,1923,1965,1967,2008,1978,2000,1926,1985,2013,1959,1944,2010,1967,1987,1951,1973,1996,1990,1963,1980,1969,1984,2024,1992,2010,1992,1975,2010,1956,2016,1918,1999,1967,1994,1994,1979,1988,1947,1980,1978,2002,1957,2006,2009,1992,2005,2019,1993,2001,1997,1973,1991,1967,1980,2010,2005,1950,1932,1991,2033,1961,1982,2043,2024,2014,1982,2035,2022,1949,2046,2002,2011,2025,2031,1997,2020,2035,2009,1999,1973,1983,2011,2022,1990,1971,1820,1991,2056,2046,2051,1963,1970,1915,1903,1746,1914,1878,1914,1747,1934,1826,1965,1992,1977,1838,1927,1941,1841,1872,1848,1982,1945,1962,1902,1934,1912,1925,1887,1838,2004,1964,1901,1964,1813,1970,1853,1882,1848,1890,1960,1987,1889,2030,1978,1901,1861,1843,1918,1858,1953,1970,1903,1942,2006,1959,1976,1760,1946,1732,1987,1945,1958,1926,1877,1967,1943,1957,1822,2019,1959,1987,1791,1715,1827,1736,1903,1872,1876,1817,1835,1855,1843,1965,1932,1910,1936,1915,1888,1934,1915,1889,1914,1897,1894,1946,1891,1993,1897,1955,1890,1874,1929,1838,1899,1804,1903,1923,1795,1950,1520,1776,1331,1733,1825,1740,1879,1967,1935,1969,1980,1973,1999,1922,1973,2008,1958,1956,1978,1773,1428,1432,1422,1441,1481,1530,1382,1614,1482,1437,1555,1673,1771,1612,1633,1902,2018,1983,1932,2013,1975,1816,1940,1930,2009,1985,1923,1983,1919,1961,1833,1857,1963,2010,2011,1896,2019,1903,1933,1904,1876,1990,1961,2013,1894,2057,1934,1915,1886,1849,2007,1923,2021,1891,1966,1853,1903,1899,1862,1970,1977,2051,1912,1952,1940,1867,1896,1874,1995,2018,1983,1939,2000,1920,1848,1918,1924,1965,1944,1915,1945,1936,1904,1960,1916,1884,1743,1755,1629,1663,1674,1686,1788,1702,1681,1658,1705,1724,1706,1726,1702,1651,1692,1675,1705,1730,1712,1731,1637,1647,1658,1712,1737,1755,1684,1609,1579,1667,1776,1709,1667,1623,1652,1654,1662,1760,1740,1717,1660,1633,1667,1767,1792,1767,1657,1600,1639,1760,1889,1859,1757,1742,1770,1790,1868,1837,1843,1798,1781,1846,1733,1791,1726,1717,1678,1716,1730,1634,1594,1758,1732,1719,1611,1855,1641,1635,1798,1700,1535,1723,1717,1730,1643,1767,1750,1761,1686,1785,1787,1813,1645,1749,1752,1727,1751,1756,1771,1957,1909,2003,2006,1991,1955,1912,1936,1921,2015,1974,1989,2012,1981,1975,2001,1967,1996,1980,1976,1966,1991,2000,1991,1984,1961,1991,1974,1949,1972,2021,1998,1997,1963,1982,1963,1985,1976,1974,1966,1960,1990,1962,1965,1961,1997,1964,1963,1955,1983,1946,1972,1955,1951,1971,1955,1971,1964,1968,1977,1963,1959,1972,1954,1973,1952,1968,1953,1964,1953,1965,1952,1970,1952,1972,1966,1884,1935,1896,1903,1905,1920,1886,1928,1901,1907,1928,1902,1898,1917,1910,1909,1937,1856,1917,1903,1839,1898,1924,1832,1888,1938,1838,1877,1949,1845,1855,1953,1838,1849,1959,1851,1816,1960,1837,1813,1974,1829,1825,1886,1791,1830,1890,1768,1842,1888,1750,1867,1897,1753,1878,1887,1779,1879,1861,1779,1890,1833,1814,1894,1792,1870,1917,1819,1872,1908,1808,1893,1858,1859,1912,1828,1853,1914,1803,1886,1866,1839,1914,1844,1847,1909,1851,1906,1883,1856,1897,1882,1854,1892,1884,1849,1896,1881,1845,1888,1884,1845,1890,1887,1846,1888,1893,1847,1889,1892,1841,1900,1913,1837,1910,1907,1839,1918,1907,1846,1915,1890,1847,1922,1874,1858,1924,1861,1859,1920,1862,1880,1908,1856,1863,1924,1919,1914,1919,1906,1929,1912,1918,1927,1917,1914,1921,1917,1909,1914,1902,1925,1931,1980,1973,1997,1987,1977,1987,1998,1989,1978,1982,2001,1910,1965,1883,1926,1886,1918,1897,1925,1833,1932,1907,1883,1930,1969,1966,1955,1968,1962,1944,1986,1922,1989,1931,1981,1936,1977,1942,1974,1891,1950,1829,1992,1833,1960,1869,1910,1890,1885,1917,1851,1973,1826,1986,1843,1940,1841,1878,1862,1828,1895,1799,1932,1803,1883,1859,1839,1861,1820,1918,1784,1921,1822,1874,1854,2049,2045,2025,2008,2041,1997,2026,2020,2013,2043,2022,2039,2057,2049,2019,2002,1833,1990,2006,2045,2054,2054,2020,2031,2027,2008,2011,2013,2035,2033,2036,2048,2035,2038,2045,2026,1968,1954,2006,2002,2026,2051,2036,2005,2018,1989,1992,1991,1973,1991,2029,2037,2016,2012,2014,2018,1982,2004,1994,1978,1984,2031,2045,2011,2020,2018,2003,1977,2002,1987,1966,1976,2016,2039,2012,2049,2055,2026,2006,2035,2014,2006,1967,2048,2046,2050,2038,2053,2050,2049,2017,2026,2022,2050,2047,2053,1999,2017,1966,1999,1973,2005,2001,1967,2011,1991,1960,2007,1979,1944,1942,1969,1984,2004,1982,2011,1996,1922,1950,1941,1928,1798,1911,2014,1995,1958,2010,1983,1991,1978,1992,1998,1971,1894,1897,1918,2028,1961,1914,1903,1936,2001,1948,1931,1844,1888,1979,2001,1906,1857,1928,1967,1952,1875,1884,1874,1855,1916,1953,1928,1940,1953,1851,1884,1859,1888,1979,1901,1970,1966,1885,1875,1887,1894,1957,1998,1938,1893,1817,1833,1889,1933,1974,1853,1877,1823,1657,1942,1921,1894,1915,1912,1842,1874,1938,1833,1893,1878,1860,1863,1859,1817,1854,1971,1965,1918,1920,1884,1840,1853,1886,1838,1843,1931,1957,1966,1911,1950,1820,1894,1955,1933,2038,2034,2018,1950,1949,2003,1981,2010,1959,1944,1935,2054,2008,1987,1809,1973,1998,2012,2005,1964,1989,2016,2005,1999,1965,1986,1995,2021,2014,1968,1864,1968,1979,1970,2035,1971,2013,2040,2006,1993,2002,1903,2015,2006,1982,1987,2026,2021,1996,1927,1746,1790,1884,2016,2009,1960,2023,2003,1972,1966,1966,1963,1957,1887,1960,1956,1975,1938,2002,1958,2028,1997,1993,1954,1954,1991,1976,1965,1856,1942,1940,1971,1877,1895,1941,1948,1871,1916,1994,1969,1981,1989,2007,2027,1996,2014,1900,1902,1990,1924,1722,1907,1955,1949,1955,1934,1942,2023,1988,2000,1984,1976,1962,2026,1983,1956,2004,1942,1931,1960,1946,1969,1936,1968,1971,1991,2010,2016,1992,1977,1968,2031,1965,1988,1972,1982,1945,2003,1948,1948,1986,1972,1994,1984,1930,1988,2019,1985,1953,1957,1927,2041,1954,1991,2013,1985,2017,1974,1965,2028,1985,1965,2020,1924,2039,1948,1951,1980,1966,1988,1990,1993,1953,1897,1959,1994,1933,1954,1992,1968,1919,1966,1987,2009,1987,1933,1950,1972,1936,1996,1911,1942,1955,1845,1881,1958,1973,1896,1898,1924,1914,1967,1944,1909,2002,1978,1944,1994,1976,1937,2032,1809,1986,1961,1995,2012,1986,2018,2050,2055,1864,2016,1968,2024,2024,2028,2057,2033,2019,1942,2006,1998,2023,2033,2030,2029,1994,2038,1980,2035,1993,2035,2044,2026,2054,2033,2044,1964,2020,1990,2022,2039,2023,2049,2050,2027,1977,2007,1975,2035,2042,2028,2043,2042,2036,1935,1946,1949,1924,1899,2005,1963,1983,2001,1994,2035,2023,1921,2001,1959,2024,1961,2008,1934,1837,1993,1977,1971,1983,2007,1939,1790,1963,1959,1642,1864,1789,1664,1613,1630,1554,1805,1356,1514,1537,1373,1592,1283,1493,1461,1156,1514,1170,1403,1309,1267,1385,1151,1413,1149,951,1582,1418,1147,1253,1339,1321,945,1283,1388,1117,1615,1104,1382,1172,1525,1231,1293,1431,1513,1137,1634,1465,1462,1587,1362,1597,1306,1506,1538,1154,1627,1165,1446,1156,1592,1208,1389,1373,1015,1221,1509,1432,1097,1278,1360,1312,942,1321,1421,1159,1553,1091,1367,1096,1657,1217,1463,1464,1372,1491,1461,1567,1441,1593,1496,1274,1450,1497,1393,1249,1573,1268,1349,1158,1607,1229,1428,1307,950,1354,1432,1408,1091,1315,1495,1102,1004,1274,1385,1184,1483,1131,1386,1150,1604,1225,1515,1483,1346,1515,1415,1539,1487,1502,1583,1211,1495,1486,1185,1406,1472,1325,1370,1151,1577,1158,1406,1342,854,1572,1317,1294,1216,1211,1603,853,1237,1383,1178,1509,1033,1355,1286,1348,1355,1214,1412,1512,1239,1613,1481,1477,1563,1318,1645,1284,1518,1516,1272,1653,1153,1390,1249,1398,1392,1306,1446,1100,988,1588,1414,1148,1256,1365,1475,904,1263,1441,1183,1609,1048,1373,1082,1652,1246,1392,1459,1421,1359,1454,1586,1427,1572,1464,1379,1392,1479,1485,1223,1672,1187,1412,1159,1611,1155,1438,1286,928,1349,1390,1441,1092,1323,1515,1025,1055,1327,1273,1211,1523,1172,1367,1181,1607,1259,1481,1494,1380,1438,1442,1593,1531,1589,1572,1241,1524,1558,1321,1048,1690,1215,1349,1141,1577,1227,1298,1368,988,1213,1479,1435,1087,1315,1527,995,1048,1367,1248,1088,1491,1134,1398,1144,1631,1122,1401,1518,1456,1426,1529,1597,1499,1553,1607,1310,1460,1553,1362,1097,1727,1178,1382,1134,1602,1181,1260,1405,1095,929,1590,1463,1162,1263,1359,1356,922,1307,1380,1135,1545,1070,1367,1284,1597,1239,1230,1522,1539,1369,1669,1437,1514,1578,1406,1709,1244,1511,1532,1201,1629,1234,1377,1320,1284,1492,1214,1464,1191,916,1658,1299,1243,1251,1202,1663,815,1254,1453,1248,1655,1060,1330,1223,1435,1456,1315,1431,1495,1243,1693,1502,1530,1588,1406,1692,1313,1565,1505,1182,1647,1252,1423,1349,1243,1509,1249,1500,1226,851,1668,1300,1261,1222,1195,1629,893,1195,1411,1431,1434,1302,1283,1357,1294,1650,1198,1523,1560,1300,1632,1549,1653,1574,1544,1614,1382,1216,1231,1303,1432,1605,1588,1439,1317,1213,1561,1514,1373,1756,1544,1309,1226,1435,1467,1416,1720,1524,1471,1348,1247,1492,1400,1372,1652,1585,1589,1440,1200,1391,1359,1223,1466,1731,1236,1116,1303,1293,1732,1378,1281,1456,1672,1163,1706,1674,1883,1943,1888,1865,1928,1782,1754,1836,1908,1764,1841,1589,1271,1742,1695,1779,1707,1708,1689,1451,718,1326,1999,1993,1809,1547,1151,1360,1801,1618,1756,1738,1907,1721,1732,1678,1888,1707,1797,1894,1890,1856,1667,1676,1943,1695,1982,1805,1937,1969,1951,1921,1863,1750,1556,1908,1820,1889,1904,1813,1647,1734,1549,1713,1755,1666,1596,1683,1548,1407,1697,1793,2016,2010,1980,1902,1999,2022,1996,1941,2018,2035,2006,1947,2000,2042,1969,1984,1920,1958,1920,2009,1956,1969,1959,2025,2005,2000,2007,2017,2024,2001,1986,1818,2002,2056,2052,2048,1989,1964,1852,1632,1963,1867,1953,1891,1917,1908,1910,1895,1899,1887,1944,1859,1904,1977,1897,1910,1930,1876,1899,1327,1739,1958,1703,1488,1487,1243,1595,1717,1615,1627,1850,1544,1584,1596,1589,1503,1549,1643,1649,1563,1301,1276,1669,1603,1302,1370,1980,1846,1768,1761,1793,1704,1802,1868,1727,1662,1680,1747,1611,1673,1854,1746,1305,1496,1700,1469,1456,1243,1370,1757,1501,1241,1175,1456,1621,1236,1543,1980,1993,1973,1975,1970,1911,1822,1531,1914,1880,1884,1589,1820,1986,1880,1877,1891,1781,1791,1815,1701,1907,1514,1441,1721,1463,1377,1558,1617,1415,1751,1383,1736,1430,1712,1606,1853,1501,1742,1531,1767,1465,1460,1606,1500,1887,1277,1268,1316,1790,1835,1805,1713,1394,1473,1676,1755,1554,1444,1645,1629,1634,1655,1558,1553,1665,1604,1352,1572,1426,1708,1616,1400,1612,1528,1618,1663,1496,1242,1589,1536,1227,1309,1371,1226,1340,1344,1529,1203,1237,1446,1345,1356,1379,1371,1311,1601,1586,1564,1898,1459,1477,1849,1840,1853,1926,1558,1975,1761,1675,1958,1638,1970,1225,1853,1914,1525,1715,1714,1696,1655,1574,1467,1625,1486,1564,1475,1568,1584,1536,1522,1436,1602,1578,1501,1430,1587,1473,1806,1859,1917,1864,1833,1737,1470,1496,1598,1514,1913,1938,1916,1859,1881,1883,1905,1966,989,552,599,478,714,655,571,578,629,1820,1971,1983,1961,1919,1962,1977,1950,1946,1651,1653,1608,1645,1775,1566,1723,1583,1700,1544,1548,1619,1498,1510,1485,1378,1497,1377,1601,1524,1225,1143,1436,1345,1579,1452,1407,1384,1573,1446,1599,1430,1387,1384,1404,1452,1417,1361,1449,1845,1764,1815,1884,1884,1885,1794,1763,1809,1654,1712,1786,1826,1824,1747,1719,1659,1073,796,791,877,1497,1716,1667,1627,1671,1638,1599,1595,1660,1771,1658,1689,1651,1676,1839,1802,1879,1355,1787,1488,1730,1579,1790,1504,1674,1916,1689,1835,1847,1856,1561,1847,1854,1733,1077,1056,960,1102,1047,1094,962,1067,1698,1539,1603,1525,1575,1590,1541,1528,1664,1429,1567,1586,1663,1254,1028,1036,1017,1333,1416,1605,1765,1599,1421,1096,1442,1533,1129,1288,1510,1531,1454,1596,1628,1534,1573,1634,1510,1335,873,851,1033,553,982,718,1062,1383,1469,760,573,868,596,814,537,693,714,725,861,481,820,694,940,515,523,862,684,882,498,871,709,891,442,451,904,580,740,296,590,263,191,570,160,597,253,606,190,512,186,154,473,40,565,149,575,230,239,1537,1442,1437,1178,1232,1159,1376,998,1008,982,1005,968,990,1001,993,1530,1377,1402,1455,1497,1471,1379,1361,1559,1446,1492,1523,1583,1601,1492,1539,1512,1564,1404,1434,1398,1420,1447,1390,1425,1486,1396,1402,1377,1376,1096,945,963,931,1122,908,934,934,1057,924,932,906,1006,1402,1410,1393,1399,1137,915,952,930,1459,1610,1582,1566,1521,1524,1531,1622,1596,1576,1336,1332,1315,1217,1329,1314,1344,1540,1553,1526,1331,1512,1330,1266,1259,1562,1656,1707,1566,1610,1518,1797,1706,1808,1597,1198,1163,1500,1417,1480,1225,1314,1380,1439,1662,1417,1576,1436,1464,1643,1699,1637,1665,1564,1664,1640,1639,1752,1633,1699,1664,1611,1602,1654,1629,1505,1736,1675,1628,1700,1473,1644,1617,1642,1650,1615,1704,1683,1662,1605,1665,1650,1553,1810,1635,1624,1614,1799,1702,1614,1634,1636,1860,1675,1679,1670,1767,1694,1654,1699,1647,1212,970,940,959,1395,1489,1556,1493,1602,1316,1330,1378,1274,1299,1159,1252,1257,1340,1161,949,959,1449,1197,1142,1078,1220,1146,891,978,988,1589,1520,1525,1549,1494,1514,1512,1545,1704,1392,1374,1381,1367,1377,1373,1342,1435,1713,1548,1542,1559,1556,1543,1544,1514,1643,1662,1605,1630,1654,1636,1597,1612,1663,1761,1468,1435,1396,1425,1469,1409,1405,1444,1862,1753,1717,1681,1745,1742,1691,1704,1893,1753,1707,1696,1693,1727,1663,1685,1698,1320,991,1227,1031,1112,1062,1242,1141,1112,1066,968,754,640,734,648,1635,1637,1737,1695,1728,1676,1728,1702,1774,1800,1734,1690,1611,1716,1683,1735,1697,1880,1753,1772,1755,1767,1786,1772,1773,1749,1845,1718,1679,1618,1689,1654,1719,1654,1701,1457,1509,1382,1622,1004,1022,1020,1036,1851,1827,1814,1822,1667,1839,1799,1852,1806,1408,1165,1212,1573,1489,1002,1036,1329,1749,1596,1624,1582,1537,1645,1606,1591,1751,1522,1461,1421,1454,1399,1464,1443,1463,1427,1792,1352,1754,1291,1490,1440,1493,1411,1683,1632,1610,1617,1531,1596,1610,1567,1668,1519,1469,1446,1352,1538,1445,1437,1397,1795,1806,1834,1845,1674,1835,1805,1826,1733,1699,1641,1620,1687,1610,1643,1602,1711,1584,1486,1442,1474,1398,1516,1479,1441,1581,1836,1809,1859,1904,1691,1833,1810,1873,1672,1617,1632,1629,1544,1658,1639,1591,1685,1607,1441,1425,1493,1411,1484,1442,1450,1568,1841,1820,1862,1702,1869,1806,1856,1805,1322,1058,1670,671,691,1175,702,1075,754,688,1497,1053,650,709,1188,1259,993,1254,1390,1293,602,1149,1262,1189,1313,1285,1739,1223,953,952,1644,1586,1573,1729,1659,1716,1554,1759,1488,1476,1281,880,1186,1579,1502,1009,997,1005,1028,1336,1080,1046,1086,1376,1891,2032,2033,2020,2025,2033,2017,1978,2017,2029,2020,2019,1989,2014,2002,1989,1976,2025,2023,2033,1997,2026,2003,2005,1946,2015,2039,2038,1980,2007,2009,2008,1999,1982,2047,1934,1913,1905,1890,1895,1910,1844,1868,1880,1916,1871,1885,1830,1872,1831,1888,1952,1678,1676,1667,1688,1672,1649,1657,1617,1801,1646,1659,1652,1623,1667,1646,1604,1675,1542,1440,1435,1408,1433,1422,1399,1398,1566,1500,1495,1530,1503,1336,1545,1537,1632,1415,1552,1463,1686,1432,1467,1533,1629,1366,1385,1477,1480,1985,1680,1525,1659,1586,1589,1516,1600,1715,1532,1575,1624,1688,1738,1621,1595,1532,1649,1544,1562,1548,1552,1521,1585,1533,1429,1584,1472,1718,1538,1654,1595,1662,1650,1647,1796,1697,1485,1721,1927,1849,1710,1735,1894,1934,1929,1937,1975,1947,1929,1919,1931,1827,1826,1874,1982,1853,1848,1864,1827,1792,1771,1784,1778,2016,1956,1961,1961,1921,1904,1905,1888,1981,1923,1882,1892,1854,1810,1839,1820,1786,2011,1978,1981,1987,1944,1941,1923,1900,1970,1911,1814,1802,1737,1780,1755,1764,1764,1922,1849,1847,1768,1799,1825,1820,1807,1766,1683,1426,1464,1454,1421,1431,1383,1408,1617,1960,1929,1961,1972,1935,1900,1896,1925,1904,1861,1920,1990,1937,1963,1890,1905,1891,1934,1878,1946,1706,1496,1523,1600,1584,1601,1577,1517,1843,1788,1814,1798,1755,1747,1738,1734,1722,1566,1345,1295,1287,1392,1282,1372,1354,1555,1488,1474,1490,1573,1590,1503,1474,1455,1659,1687,1478,1676,1638,1564,1570,1479,1370,1355,1314,1253,1276,1182,1260,1709,1893,1860,1874,1909,1886,1873,1871,1881,1961,1905,1874,1858,1889,1878,1885,1881,1900,1428,1408,1376,1416,1459,1459,1458,1485,1783,1666,1710,1737,1674,1599,1587,1545,1662,1532,1555,1584,1621,1724,1725,1694,1639,1711,1439,1465,1462,1439,1386,1386,1402,1513,1555,1497,1498,1540,1220,1537,1512,1453,1667,1489,1533,1493,1279,1503,1501,1516,1538,1979,1951,1924,1679,1416,1418,1418,797,1429,1387,1397,1593,1188,1126,1134,1147,1074,1066,1163,1185,1490,1424,1427,1913,1898,1889,1905,1898,1912,1896,1941,1692,1603,1514,1534,1442,1380,879,951,793,890,798,960,703,916,894,1032,748,931,887,1037,941,934,1378,1246,1355,1289,863,358,607,488,392,278,485,662,1346,918,859,832,1093,1314,757,1337,793,195,433,266,314,1363,1397,1490,1677,1856,1731,1816,1824,1799,1762,1753,1791,1757,1641,1648,1566,1612,1602,1648,1570,1659,1380,1298,1329,1333,1599,1689,1663,1669,1666,1669,1642,1679,1673,1686,1664,1674,961,1564,1822,1857,1774,1793,1812,1888,1809,1764,1645,1449,1472,1449,1636,1862,1849,1849,1852,1862,1888,1849,1877,1856,1070,1750,1212,1086,1276,1092,1183,2041,2015,1983,1915,1979,1939,1897,1896,1892,1962,1944,1953,1918,1920,1885,1928,2010,1770,1657,1777,1799,1816,1801,1679,1613,1874,2048,2048,2048,2053,2041,2049,2036,2050,2055,2054,2056,2040,2051,2053,2041,2041,2053,1876,1932,1861,1857,1815,1867,1836,1860,1951,1904,1871,1854,1863,1831,1855,1850,1945,1304,1449,788,868,746,688,744,565,793,874,798,388,707,791,851,630,409,755,854,898,455,532,777,833,935,611,444,1242,1035,1109,498,665,1180,1091,1050,383,901,1118,1033,898,405,1064,1149,1119,660,1402,1300,1576,1314,1765,1374,992,1170,1123,1143,1150,1089,1104,1116,1162,1131,1179,1209,1065,1046,1027,1211,1403,1112,1091,1196,1039,1069,1133,1046,1035,1021,895,1031,1044,844,841,817,859,1335,413,565,517,554,563,450,565,545,465,526,479,502,497,537,566,502,1457,1478,1481,1488,1556,1516,1510,1516,1503,1102,970,988,1473,1536,1363,1397,1329,1368,1491,1734,1643,1664,1655,1609,1618,1664,1640,1661,1651,1485,1457,1536,1457,1524,1511,1462,1565,1021,1153,1226,1347,1315,1298,1293,1120,1392,1420,1398,1422,1549,1533,1552,1544,1718,1313,990,1134,1168,1129,1138,1091,1110,1101,1147,1114,1194,1196,1080,1039,1081,1249,1321,1150,1090,1200,1045,1061,1085,1007,1010,1018,914,1042,1057,847,830,819,889,1255,435,566,493,556,544,479,549,534,474,512,484,491,517,525,582,529,1764,1805,1800,1796,1797,1784,1732,1757,1398,1409,1392,1401,1642,1228,1196,1234,1542,1442,1321,1304,1513,1300,1033,1010,983,1474,1694,1439,1672,1665,1362,1192,1173,1205,1436,1375,1710,1661,1601,1696,1703,1586,1666,1640,1686,1123,1440,1437,1534,1915,1702,1964,1769,1698,1656,1713,1719,1620,1744,1775,1688,1581,1504,1547,1543,1565,1525,1571,1241,1752,1626,1602,1581,1569,1569,1594,1618,1775,1475,1750,1783,1502,1421,1730,1788,1549,1713,1035,1099,1127,1147,1166,1146,1064,1181,1126,1125,1106,1193,1130,1071,1017,1069,1296,1045,1232,1153,799,708,1128,1150,1103,963,970,1238,1098,925,586,1131,1246,1147,981,920,1264,1139,940,492,1161,1238,1219,957,846,1170,1125,991,413,1199,1211,1162,999,726,1129,1156,1104,417,1164,1186,1147,912,1324,1155,1089,1205,1054,1046,1117,1011,1013,999,941,1021,1074,851,829,821,917,963,1162,1228,1227,359,1004,1231,1124,880,1253,1137,1258,1207,1238,1157,1115,1220,1169,1308,1136,1145,1188,1201,1278,1105,1150,1236,1137,1288,1191,980,1039,1141,1344,1107,1000,994,1179,1326,1059,987,1060,1285,1216,1062,972,1117,1494,656,509,559,1267,1561,1757,1867,1870,1829,1592,1380,514,527,523,525,546,949,1292,1038,1280,1511,1190,1105,1464,1340,1048,1268,1503,1197,1074,1433,1742,1858,1737,1733,1994,1684,1802,1887,1707,1835,1805,1827,1709,1853,1753,1766,1891,1748,1736,1991,1749,1806,1800,1754,1956,1792,1828,1685,1894,1741,1859,1785,1745,1886,1662,1823,1890,1782,1759,1817,1829,1704,1841,1878,1714,1911,1732,1765,1898,1738,1750,1807,1809,1786,1821,1824,1678,1904,1699,1835,1790,1761,1875,1785,1825,1796,1798,1747,1802,1886,1713,1740,1887,1719,1882,1772,1751,1400,1204,1227,1232,1276,1153,1202,1131,1020,562,788,880,766,403,731,799,892,610,412,783,853,909,454,534,770,853,907,660,1443,1001,1181,1158,1128,1152,1078,1091,1114,1158,1118,1193,1190,1087,1086,1001,1122,1480,1508,1576,1124,1109,1189,1095,1080,1080,1051,1039,1024,854,1014,1035,865,882,766,858,1470,1433,1508,1195,442,568,503,546,554,490,543,531,481,526,497,477,522,522,577,526,1681,1655,1688,1560,1720,1630,1649,1654,1696,1687,1776,1642,1629,1598,1688,1590,962,502,1002,580,424,305,845,1059,2029,2024,2018,2011,2028,1990,1998,1974,2030,2038,2014,2031,2014,2025,2018,1966,2023,1386,1346,1590,1533,1379,1356,1282,1121,1121,1124,1121,1119,1122,820,68,858,1989,2048,1855,1881,1911,1855,1846,1888,1899,1854,1939,1927,1924,1955,1856,1902,1922,1923,1877,1797,2011,1878,1896,1929,1929,1842,1768,1821,1763,1917,1905,1893,1872,1866,1898,1894,1914,1832,2004,1756,1870,1872,1917,1845,1650,1837,1452,1508,1618,1629,1577,1533,1455,1570,1608,1639,1644,1530,1518,1575,1596,1522,1887,1644,1584,1502,1620,1958,1816,1777,1763,1868,1855,1847,1839,1913,1455,1278,1324,1354,1303,1361,1316,1258,1600,1461,1462,1450,1476,1482,1469,1445,1441,1647,1468,1437,1462,1502,1467,1452,1435,1592,1474,1454,1430,1454,1499,1456,1446,1431,1639,1406,1419,1419,1516,1440,1433,1422,1605,1405,1428,1386,1427,1495,1463,1427,1391,1597,1413,1365,1425,1487,1443,1415,1393,1537,1481,1377,1380,1459,1450,1418,1412,1396,1637,1414,1377,1461,1473,1468,1454,1427,1463,1635,1476,1441,1483,1489,1520,1481,1381,1612,1343,1329,1359,1387,1341,1343,1341,1284,1541,1348,1329,1372,1363,1336,1303,1265,1552,1334,1279,1295,1367,1306,1350,1357,1266,1652,1446,1438,1476,1488,1499,1451,1417,1569,1459,1391,1455,1497,1460,1475,1443,1426,1607,1405,1367,1457,1431,1500,1403,1394,1481,1554,1367,1364,1470,1461,1452,1372,1424,1599,1414,1381,1406,1427,1484,1423,1410,1383,1654,1427,1398,1414,1487,1461,1418,1405,1672,1656,1835,1773,1756,1842,1643,1794,1836,1824,1824,1758,1564,1860,1730,1787,1687,1824,1814,1853,1881,1808,1930,1900,1827,1904,1932,1837,1822,1774,1847,1781,1786,1763,1872,1840,1787,1753,1725,1786,1733,1722,1741,1894,1814,1820,1720,1786,1756,1737,1732,1779,1978,1854,1823,1812,1801,1815,1823,1814,1892,1729,1741,1790,1729,1741,1711,1767,1755,1876,1877,1855,1839,1813,1808,1748,1789,1783,1850,1677,1747,1784,1497,1741,1750,1669,1735,1799,1772,1736,1778,1608,1662,1602,1796,1801,1773,1691,1601,1629,1694,1688,1689,1656,1773,1666,1638,1651,1662,1708,1676,1702,1663,1841,1811,1717,1785,1824,1794,1805,1799,1850,1751,1765,1703,1761,1798,1755,1807,1729,1850,1805,1883,1867,1884,1908,1968,1828,1848,1718,1666,1741,1722,1745,1767,1743,1738,1791,1680,1708,1836,1787,1783,1873,1735,1749,1577,1441,1521,1550,1498,1529,1542,1453,1812,2015,1939,1948,2014,1977,1956,1986,1893,1947,1985,2004,1993,1920,1968,1996,1997,1964,1330,40,38,40,60,266,40,38,40,1472,1783,1833,1819,1848,1834,1812,1804,1899,1504,1463,1429,1454,1436,1430,1440,1453,1805,1845,1815,1756,1796,1766,1811,1741,1808,774,449,40,38,40,319,38,40,38,378,1178,1273,1792,1722,1744,1763,1747,1719,1724,1749,1778,1305,1338,1393,1520,649,1350,1534,1324,1107,1515,1763,1593,1454,40,38,40,64,264,40,38,40,1023,1287,1201,1133,1223,1724,1608,1633,1700,1659,1662,1678,1630,944,40,38,40,676,931,83,442,1668,1873,2007,1648,1641,1652,1638,1642,1690,1729,1726,1699,1760,1719,1777,1712,1705,1675,1666,1724,867,1153,39,1803,1809,1700,1713,1756,1740,1754,1729,1820,1887,1837,1885,1891,1834,1867,1805,1804,1985,1760,1578,1711,1702,1741,1785,1793,1722,1866,1852,1932,1833,1923,1804,1962,1789,1975,1645,1205,1194,1085,1010,1351,1403,1333,1379,1413,1356,1143,1129,1113,1119,1203,1277,1383,718,883,958,1152,1565,1605,850,669,751,959,1591,1707,1729,1254,951,1384,1707,1267,1142,796,932,919,602,663,1043,1290,1292,1151,1313,1382,1373,1350,1280,1707,1921,1911,1909,1830,1848,1920,1862,1957,1839,1919,1910,1947,1843,1867,1915,1839,952,906,932,932,1963,1961,1607,1975,1572,1142,1239,1160,1568,1990,2004,2041,2050,1844,1932,1884,1858,2020,2051,2047,2030,1942,1806,1722,1892,1815,1826,1755,1786,1755,2006,1959,1943,1902,1993,1309,1297,1348,1770,1203,1236,1247,1385,1206,1209,1229,1282,1809,1173,1199,1366,1352,1144,732,985,1614,1552,736,854,1662,1741,843,760,1446,1442,1328,1404,1381,1954,1762,1750,1831,1809,1768,1815,1874,1780,1773,1670,1674,1655,1786,1753,1802,1811,1785,1460,1394,1453,1477,1539,1405,1429,1489,1600,1492,1446,1505,1640,1521,1471,1502,1661,1975,1978,1931,1928,2020,1990,1959,2022,1954,1767,1776,1734,1834,1656,1564,1547,1595,1956,1898,1792,1913,1876,1803,1816,1824,1942,1907,1847,1883,1946,1778,1824,1761,1833,1738,1516,1499,1504,1250,1232,1181,1700,1132,1232,1231,1296,1570,1108,1224,1558,1841,1794,1767,1772,1918,1775,1777,1770,1869,1802,1828,1809,1802,1071,856,824,733,1141,1167,1173,1151,1282,1187,1210,1214,1281,1284,1400,1366,1314,1813,1836,1865,1837,1892,1829,1852,1857,1913,1894,1938,1925,1888,1948,1912,1931,1954,1869,1834,1872,1794,1785,1839,1739,1657,1655,1586,1913,1798,1841,1912,1881,1847,1924,1749,1475,1404,1458,1559,1485,1688,1755,1521,1592,1699,1627,1711,1696,1769,1745,1767,1835,1966,2048,2045,1870,2004,1987,1994,1932,2031,1959,1939,1875,1635,1127,1404,1271,1265,1759,1778,1747,1741,1672,1497,1550,1614,1722,1806,1791,1794,1797,1807,1837,1797,1778,1709,1676,1714,1640,1626,1769,1819,1747,1515,1016,1139,905,1498,1061,909,851,1084,1246,1020,1134,930,1067,570,588,528,733,694,740,698,905,848,1239,1173,1047,1308,1336,1457,1347,1356,1431,1452,1722,1524,1248,1553,1650,1358,1639,1716,1595,1671,921,218,233,213,779,501,441,458,806,2048,2020,2041,2035,2022,2039,2042,2039,2038,1973,1926,1977,1895,1917,1967,1908,1883,1470,1388,1416,1469,1327,1159,1159,1138,1238,1453,1345,1541,1462,1845,1826,1835,1875,1876,1817,1788,1798,1890,1774,1746,1759,1804,1685,1688,1747,1696,1446,1436,1516,1448,1434,1451,1526,1485,1568,1898,1893,1854,1931,1222,1255,1233,1273,1843,1817,1778,1796,1695,1470,1358,1532,1529,2031,2028,2032,2015,2020,1985,1971,1995,1767,1514,1506,1457,1711,1705,1649,1685,1704,1989,1988,1971,2011,1850,1704,1743,1730,1964,2048,2042,2051,1986,1285,1231,778,539,546,532,899,1430,1424,1419,1131,1264,1608,1620,1231,1354,1557,1538,1485,1480,1542,1729,1638,1914,1845,1326,1201,1332,1242,1209,935,1017,962,1310,894,1002,935,843,1665,1973,1962,1963,1970,2027,2007,1969,2003,1828,1499,1514,1606,1805,1630,1696,1618,1764,1635,1472,1592,1675,1727,1680,1722,1618,1614,1645,1662,1475,1498,1520,1608,1484,1550,1891,1900,1862,1855,1903,1895,1873,1846,1889,1509,1486,1454,1895,1950,1971,1983,1998,1846,1799,1808,1792,1846,1901,1919,1906,1706,1392,1474,1389,1447,1481,1526,1503,1437,1547,1661,1714,1641,1529,1533,1568,1534,1607,1733,1627,1751,1748,1668,1751,1662,1731,1665,1662,1512,1723,1645,1658,1498,1664,1752,1435,1577,1548,1558,1437,1582,1604,1729,1511,1493,1559,1509,1501,1454,1558,1723,1492,1295,1255,1533,1513,1611,1745,1442,1673,1492,1538,1761,1721,1564,1649,1443,1226,1142,1291,1279,1350,1213,1378,1789,1318,1392,1381,1221,1152,1125,1306,1196,1389,1465,1387,1347,1576,1368,1194,1356,1855,1705,1781,1565,1270,1027,1032,869,935,1076,1198,1308,1261,1593,1620,1554,1702,1950,1055,1243,948,1013,838,623,1191,1122,1385,1213,1275,1242,1332,1564,1732,1779,1990,1700,1790,1785,1608,1282,1264,1226,1306,1281,1347,1360,1249,1224,1296,1263,1216,1640,1658,1689,1685,1519,1428,1573,1762,1549,1657,1237,1221,1222,1236,1295,1306,1448,1556,1665,1414,1307,1371,1222,1174,1217,1323,1473,1715,1723,1675,1561,1375,1454,1358,1442,1690,1549,1293,1268,1187,1255,1152,1255,1518,1739,1645,1767,1613,1537,1691,1638,1445,1692,1622,399,273,1548,1602,443,263,1476,1564,464,263,1489,1597,471,257,1497,1572,496,267,1407,1575,519,250,1200,1280,1266,1245,1452,1263,1288,1335,1401,1304,1221,1324,1310,1433,1310,1344,1297,1409,1529,1257,1254,1281,1219,1260,1244,1276,1226,1506,1175,1189,1186,1192,1200,1225,1241,1508,1247,1254,1311,1293,1270,1276,1296,1268,1870,1727,1768,1690,1674,1633,1824,1827,1512,1270,1365,1333,1354,1352,1347,1260,1402,1329,1410,1316,1362,1370,1441,1314,1471,1821,1642,1582,1580,1639,1586,1541,1398,1291,1390,1383,1504,1520,1539,1421,1560,1733,1866,1667,1580,1588,1630,1573,1513,1425,1285,1392,1369,1478,1547,1526,1445,1535,1724,1872,1690,1567,1593,1672,1580,1502,1461,1261,1361,1396,1479,1569,1524,1439,1492,1735,1872,1670,1600,1587,1668,1566,1523,1480,1262,1384,1395,1460,1568,1530,1441,1496,1697,1894,1174,1230,1091,890,889,1032,1003,1006,1113,1300,1227,1185,939,958,1085,1030,1561,1197,1221,1086,914,891,1041,1032,969,1117,1285,1226,1224,955,977,1082,1019,1438,1982,1918,1917,1963,1963,1953,1948,1909,1862,1797,1797,1859,1875,1938,1924,1960,1741,1695,1993,1935,1980,2022,1987,1912,1972,2006,1773,1741,1747,1767,1781,1748,1863,1767,1722,1778,1770,1767,1804,1529,1917,1999,1953,1872,1879,1961,1884,1090,799,1461,1934,1982,1985,1979,1939,2002,1964,1944,2045,1955,1981,1967,1941,1998,1958,1961,2006,1572,1555,1565,1579,1562,1557,1579,1575,1783,1715,1625,1691,1548,1851,1810,1837,1776,1840,1484,1569,1523,1532,1706,1663,1713,1608,1773,1609,1722,1707,1857,1802,1856,1836,1895,1660,1684,1688,1584,1871,1795,1837,1813,1809,1543,1636,1545,1631,1622,1703,1701,1675,1742,1713,1775,1752,1739,1539,1726,1692,1782,1504,1678,1814,1609,1696,1793,1762,1624,1687,1584,1757,1626,1592,1561,1740,1623,1718,1047,1872,1908,1580,1520,1939,1861,1507,1551,1716,1995,2009,1968,1686,1332,964,1103,1324,1146,1747,1589,1558,1427,1406,1493,1479,1518,1744,1153,1115,846,971,1323,1056,970,1061,1117,1305,1831,1781,1888,1807,1843,1803,1874,1782,1848,1675,1628,1779,1602,1791,1718,1687,1847,1895,1772,1878,1811,1847,1838,1856,1779,1875,1754,1596,1765,1641,1756,1747,1714,1792,1792,1868,1856,1858,1883,1824,1900,1822,1960,1925,1910,1984,1882,1948,1949,2033,1929,1938,1781,1725,1798,1750,1824,1824,1836,1772,1677,1440,1268,1536,1551,1732,1438,1099,1238,1090,785,264,735,1329,1221,1369,1253,1429,1343,1268,1381,1310,1444,1318,1298,1354,1313,1464,1345,1333,1357,1355,1490,1646,871,1662,1438,1862,1926,2010,2054,2002,2014,1972,1918,1904,1642,1549,1501,1557,1653,1652,1726,1757,1817,1726,1728,1649,1705,1559,1604,1648,1363,1663,1822,1942,1860,1739,1660,1766,1932,1987,1926,1790,1657,1824,1890,1931,1785,1699,1658,1921,1910,1885,1765,1576,1922,1933,1936,1926,1873,1603,1821,1863,1876,1867,1700,944,967,1004,966,1635,1493,1704,1570,1663,1611,1693,1646,1541,1837,1695,1684,1744,1689,1657,1661,1633,1680,1655,1752,1934,1734,1771,1705,1650,1799,1696,1617,1779,1630,1824,1608,1645,1655,1637,1734,1898,1903,1914,1886,1950,1926,1808,1692,1756,1636,1688,1900,1959,1874,1899,1931,1941,1989,1920,1952,1938,1885,1787,1777,1782,1797,1961,1915,1897,1880,1910,1856,1883,1909,1407,1285,1316,1580,1600,1645,1599,1714,1897,1839,1876,1839,1873,1822,1859,1905,1822,1898,1893,1760,618,491,624,1247,988,1071,1373,1249,1146,1515,1699,1634,1621,1666,1765,1499,1680,1716,1319,1678,1531,1361,1246,1467,1630,1674,1721,1769,1663,1731,1673,1596,1591,1359,1497,1491,1508,1429,1442,1525,1425,1477,1374,1506,1427,1799,1799,1842,1909,1849,1842,1839,1855,1905,1825,1818,1873,1906,1885,1878,1861,1924,1958,1995,1929,1891,1906,1915,1929,1927,1889,1950,1928,1893,1858,1855,1887,1903,1878,1598,1392,1455,1784,1638,1578,1639,1594,1625,1655,1622,1688,1677,1659,1628,1665,1640,1632,1628,1633,1755,1653,1647,1655,1633,1632,1644,1650,1640,1961,1866,1866,1857,1885,1857,1864,1854,1924,1829,1840,1809,1845,1848,1834,1841,1841,1987,1849,1871,1873,1850,1841,1855,1862,1943,1324,1429,1455,1384,1340,1445,1611,1374,1365,1375,1514,1443,1469,1502,1918,1899,1806,1751,1797,1852,1850,1900,1867,1620,1756,1782,1660,1676,1707,1732,1609,1694,1694,1728,1657,1779,1706,1790,1608,1712,1701,1881,1802,1881,1731,1653,1893,1863,1952,1828,1850,1627,1779,1746,1782,1827,1649,1630,1736,1673,1758,1747,1569,1829,1724,1787,1739,1819,1610,1736,1616,1605,1757,1661,1152,1262,1246,1250,1279,1283,1037,1670,1614,1500,1565,1625,1579,1544,1591,1568,1580,1545,1578,1765,1819,1909,1931,1858,1589,1904,1437,1398,1773,1780,1842,1752,1701,1640,1469,1711,1699,1780,1685,1397,1295,1766,1830,1832,1478,1476,1488,1424,1681,1568,1406,1590,1534,1522,1487,1526,1494,1558,1419,1383,1555,1517,1594,1466,1450,1483,1704,1538,1530,1453,1364,1475,1495,1712,1802,1881,1824,1821,1855,1789,1746,1696,1633,1653,1808,1678,1799,1727,1731,1798,1738,1713,1877,1940,1819,1866,1824,1850,1848,1729,1677,1691,1703,1711,1771,1725,1680,1698,1819,1771,1604,1838,1703,1725,1703,1741,1615,1701,1669,1743,1816,1671,1704,1643,1793,1703,1760,1680,1603,1797,1758,1383,1471,1766,1770,1663,1677,1744,1432,1505,1558,1524,1484,1426,1595,1524,1478,1775,1775,1659,1739,1744,1646,1743,1746,1620,1654,1650,1670,1647,1614,1623,1637,1686,1666,1631,1598,1693,1615,1651,1638,1747,1641,1648,1630,1624,1721,1627,1672,1643,1712,1642,1655,1638,1701,1606,1641,1597,1703,1631,1629,1719,1767,1732,1643,1626,1644,1721,1616,1651,1655,1780,1680,1615,1614,1650,1724,1774,1868,1695,1643,1707,1809,1703,1703,1759,1824,1807,1737,1903,1885,1864,1995,1968,1956,1953,1966,1890,1829,1865,1955,1994,2010,1988,1928,1865,1938,1779,1821,2000,2025,2025,1995,1999,1975,1932,1916,1893,1910,1944,1920,1947,1973,1841,1825,1929,1920,1895,1832,1621,1638,1777,1854,1821,1657,1619,1617,1627,1627,1651,1577,1411,1367,1320,1448,1453,1526,1453,1399,1412,1515,1532,1329,1437,1542,1472,1397,1641,1711,1694,1752,1667,1697,1702,1784,1692,1693,1718,1814,1697,1684,1642,1688,1681,1723,1669,1690,1663,1723,1687,1731,1643,1649,1733,1624,1633,1656,1925,1875,1907,1917,1928,1905,1899,1880,1924,1799,1792,1801,1812,2011,2013,2004,2046,2037,2032,2035,2023,2039,2036,2032,2056,2053,2055,2051,2029,2043,1994,1845,1846,1911,1928,1918,1872,1848,1904,1473,1442,1482,1506,1729,1595,1554,1581,1603,1563,1589,1663,1450,1494,1594,1587,1526,1616,1586,1416,1553,1380,1579,1733,1928,1746,1697,1707,1666,1904,1865,1878,1801,1776,1779,1759,1820,1874,1544,1886,1977,2015,1973,1899,1898,1827,1638,1669,1741,1720,1769,1765,1797,1683,1682,1765,1666,1703,1697,1362,1492,1512,1534,1481,1590,1518,1524,1504,1563,1511,1502,1514,1554,1512,1513,1519,1493,1365,1296,1307,1272,1553,1932,1932,1907,1883,1956,1928,1938,1936,1602,1333,1273,1321,1348,1330,1324,1347,1554,1508,1486,1518,1652,1596,1521,1654,1515,1832,1629,1669,1735,1333,1668,1661,1653,1880,1203,1232,1253,1280,1298,1290,1275,1225,1492,1202,980,1176,1084,1275,1104,1129,1323,1344,1279,1263,1207,1270,1246,1368,1333,1608,1415,1292,1324,1334,1325,1315,1298,1383,1993,1484,1657,1752,1666,1556,1472,1420,1945,1914,1095,1186,1126,1250,1261,1124,1946,1966,1924,1463,1813,1834,1815,1521,1887,1967,464,621,449,473,592,525,581,416,876,557,1335,1420,1388,1254,1130,811,636,642,1031,1380,1529,1471,1433,1409,628,1238,947,1483,1440,1149,1338,1265,1298,1362,1946,1742,1735,1782,1281,71,476,1069,766,461,701,460,695,548,605,750,1243,776,1199,1426,1428,1420,1418,1417,1682,1613,1686,1597,1563,1541,1746,1789,1410,1088,1072,1182,1293,1353,1225,1265,1355,1435,1598,1553,1684,1680,1463,1304,1466,1243,341,25,30,25,886,646,1329,827,1646,1613,1674,1612,1607,1234,1653,1524,1551,1545,1864,1916,1941,1907,1940,1895,1153,859,1432,1508,1019,965,1103,1259,1411,1420,1496,1478,1576,1518,1714,1746,1571,1601,1533,1549,1578,1570,1503,1585,1960,2056,2050,2018,1940,1867,2027,1999,1829,1769,1943,1864,2025,2000,2038,1992,2029,1981,2032,1973,2047,2047,1857,1738,1971,1999,2035,1996,1773,1651,1375,1211,1247,1201,1813,2007,1766,1717,1860,1914,1835,1766,1761,1755,1941,1932,1979,1961,1946,2008,1977,1985,1671,1546,1567,1543,1536,1545,1554,1535,1469,1387,1369,1330,1309,1295,1399,1298,1884,2003,1992,1976,1998,1986,1952,1916,2015,1982,1724,1702,1661,1649,1689,1657,606,245,873,1339,1318,1228,1011,1050,888,1050,1463,1705,1628,1636,1749,1712,1595,1500,1617,1563,1618,1552,1578,1464,1476,1285,1176,1080,1329,1253,1300,1226,1424,1435,1568,1567,1520,1471,1376,1441,1005,999,1406,1582,1208,757,1295,1281,1461,1491,1477,1505,1338,1160,1432,1495,1560,1714,1801,1859,1790,1832,1697,1547,1645,1599,1642,1562,1595,1485,1575,1512,1317,1313,1499,1553,1471,1355,1387,1390,1399,1370,857,500,558,442,1258,1447,1611,1512,1450,1433,1531,1514,1474,1378,1243,1128,1251,1314,1479,1508,1176,996,532,333,1521,1786,1874,1772,1653,1524,1103,1033,1402,1546,1570,1560,1567,1573,1576,1554,1818,1754,1839,1729,1876,1798,1855,1794,1357,1367,1404,1379,1438,1404,1612,1679,1635,1539,1521,1486,1519,1517,1486,1469,1834,1931,1633,1534,805,731,934,841,1186,1496,1700,1671,1622,1468,1573,1351,1253,1207,807,563,892,825,763,614,1179,1534,781,501,598,518,1553,1809,1329,1095,1101,1029,1335,1414,1238,1055,967,881,1364,1432,1458,1431,1413,1440,1680,1701,1739,1643,1884,1902,1667,1570,1135,1028,1225,1138,1071,992,977,847,1170,987,1248,1171,777,487,624,632,611,520,623,614,582,504,650,629,606,510,641,596,572,441,555,549,1631,1875,1294,1038,1116,1030,1117,1032,1164,1115,1698,1765,1628,1721,1675,1691,1678,1698,1306,1179,1547,1682,1686,1722,1865,1870,603,235,354,305,277,182,372,238,269,55,259,25,214,131,271,245,324,247,1189,1506,1545,1687,1211,1088,1075,1076,1146,1248,1484,1465,1492,1429,1825,1850,1777,1694,1613,1375,1636,1594,1506,1389,1406,1279,1300,1760,1591,1254,1506,1481,1475,1508,1493,1217,1386,1454,1429,1454,1543,1513,1492,1068,1221,1313,1461,1118,1286,1245,1131,1068,988,803,828,619,25,187,1281,1774,1885,1887,1863,1125,1254,1289,1185,944,948,1072,1114,1567,1637,1634,1621,1714,1597,1705,1689,1704,1680,1645,1647,1693,1709,1681,1648,1702,1653,1697,1670,1724,1649,1556,1656,1707,1694,1635,1360,1143,1455,1543,1656,1803,1918,1911,1933,1748,1167,1142,1223,1118,1620,1531,1341,816,866,893,2048,1940,2005,2048,2048,2048,2048,2048,1933,2048,2048,1950,2048,2048,2001,2048,2048,2048,2048,2048,2048,2005,1877,1942,2053,1893,1979,2002,1953,1961,2048,2048,2048,2048,2048,1897,1878,2048,2048,2048,2048,2006,2048,1871,2048,2048,2048,1998,2048,1940,2048,2057,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,1999,2048,1955,2048,1877,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,1942,2048,1877,2048,2048,2000,1890,1927,1971,1929,1947,2010,1916,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2001,2048,2007,1964,2008,2003,1946,1939,1938,1885,2001,2048,2048,1951,2048,2048,2048,2008,2048,1989,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,1985,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,1980,2004,2048,1866,2048,2048,2048,2048,2048,2048,2048,2048,1991,2048,2048,2048,1998,2048,2004,2003,2048,2048,2048,2048,2048,2048,2010,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,1947,1856,2048,1941,1960,2048,2006,1949,1871,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,1825,1939,2002,2048,2001,1821,1827,2048,2048,2048,2048,2048,2002,2006,2048,1872,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,1952,2048,2048,2003,1752,1580,2048,2048,2048,2048,1951,2048,2048,2048,2006,2048,2048,1946,2048,1963,2048,1935,1996,1950,2048,2048,1749,2048,1875,2048,2048,2048,2048,2048,2048,1963,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,1954,2048,2048,2048,2048,1870,2048,2048,1971,2048,1894,2048,2001,1997,1939,2048,2006,2048,2048,2048,2048,2048,2048,2005,2048,2004,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,1940,2048,2048,2007,2048,1871,2048,2048,2048,2048,2008,2048,2048,2048,2002,2048,2048,1916,2048,1963,2048,1958,1942,1927,2005,2048,1941,2048,2048,2048,1756,1984,2007,2004,2048,2048,2048,2048,2048,1952,2048,1875,1941,1948,2004,2048,2048,2048,2048,2048,1943,2048,1953,2048,1940,1885,1844,1998,2048,2048,2048,2048,2048,2010,1895,2048,2048,2048,2002,2048,2048,2048,1956,2048,1932,2030,1997,2048,2048,2001,2048,2048,2048,2000,2048,2048,2004,2048,2048,2048,2048,2010,2048,2048,2048,1999,2048,2048,2048,1873,2048,2048,2048,2048,2048,2000,2048,2048,2048,1999,2048,1941,2048,1936,1891,1944,2048,2048,1806,2021,2048,2048,2002,2048,2048,2006,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,1941,2048,2048,2048,2048,2048,1998,2048,2005,2048,2048,2048,2048,2048,1872,2048,2048,1727,1935,2048,2048,2048,2048,2048,1423,1648,2048,2048,2048,1942,2048,2048,2048,1999,2048,1731,2048,2048,1990,1861,2048,1880,2048,1873,2048,2048,2048,1958,1869,2048,2048,2048,2048,1979,2039,2048,1916,2048,2048,2008,1943,2048,1994,2048,2048,2048,1957,1944,2001,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2000,2048,2048,2048,1999,2048,2048,1218,2048,2048,2048,2048,2001,2048,2048,2048,2004,2048,2048,2048,2048,2048,2007,2048,2048,2048,2057,2048,2048,1998,2048,2048,2048,2048,2003,2048,2048,2048,1931,2048,2048,2048,2048,2009,2048,2048,2048,2002,2048,1943,2048,2048,2048,2048,2048,1686,1873,2048,2000,2048,1990,2000,1928,2048,2048,2048,2048,1878,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1880,2048,2048,1871,2048,2048,2048,1874,2048,2048,2048,2048,2048,2048,2048,1873,1878,1873,2048,1871,1494,2048,1925,2001,2048,2048,1941,2048,2048,2003,1939,2048,1869,2048,2001,2003,2002,2027,1946,1959,2048,2000,2048,2048,2048,1944,2048,2048,2007,2048,2048,2048,1943,2048,2048,1855,1957,2048,2048,2048,2048,2001,2048,2048,2048,2004,2048,2048,1953,2048,2048,1955,2048,1953,1949,2048,2048,1940,2048,2048,1950,2003,2048,1949,2003,2048,2048,1947,2011,2007,2048,2048,1875,2048,2048,1869,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2000,2048,2048,2048,2001,2048,1910,2048,2048,2048,2048,2000,1941,2008,1940,2048,2000,1848,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,1997,2007,1962,2048,2048,2048,2048,2048,2048,1943,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,1979,2048,1998,1939,2048,2048,2048,1874,1941,2048,1971,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,1941,2048,2048,2048,2048,1952,2048,1938,2048,2009,2048,2048,2003,2048,2048,2007,2048,2048,2048,1996,2048,2048,1867,2048,2048,2048,2048,2048,2048,2048,2010,2048,2048,2048,2048,2048,2048,2048,2048,2003,2005,2006,2048,1963,2048,2048,1947,2048,2048,1539,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,1362,1373,2048,1968,2048,1771,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2012,2048,2048,2048,2048,2008,2048,2048,2048,2010,1939,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,1999,2048,2048,2007,2048,2048,2048,2048,2048,2048,1872,2048,2048,2048,2048,2048,1840,2048,2048,2048,2048,2048,2048,2048,2048,1876,2048,2048,2048,1873,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1911,1919,2048,2048,2048,2048,2008,2048,2048,2048,2048,2009,2048,2048,2048,2048,1998,1939,1942,2048,2048,1834,2048,2048,2048,2048,1938,1872,1509,2048,2048,2048,1873,2048,2048,2048,2048,2048,2048,2048,2001,1974,2048,2004,1843,1985,2048,2048,1873,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2003,2048,1874,2048,2002,2048,1872,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2003,2053,1897,1873,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2004,2056,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2000,2048,2038,2039,2048,2048,2048,2048,2048,2048,2048,2048,2048,2010,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2000,2048,2048,2048,2009,1884,1873,1877,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,1998,2048,2048,2048,2048,2000,2048,2048,1940,2048,2048,1939,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2004,2048,1960,2048,2048,2048,2048,1998,1878,2048,2057,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2052,1937,2048,2057,2048,1999,2048,2005,1953,2048,2048,2048,2048,2048,2048,2048,2057,1960,2048,2048,1655,2042,2048,2014,2048,2048,2048,2048,2048,2048,2048,2048,1963,2048,2048,2048,2048,2048,1930,1649,2048,2008,1940,2048,2048,2048,2048,2048,1977,2001,2048,1944,2048,1961,2048,2048,1944,2048,2048,2048,1854,2048,2048,2048,2048,1995,2048,2004,2048,2048,1890,1633,2048,1998,2048,2048,2057,1985,2048,2048,2048,2048,1986,2048,2048,2048,1973,2048,2048,2048,2048,2048,1908,1982,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,1992,2048,2048,1990,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,2048,2048,1992,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,1996,2048,2000,2048,2048,1996,2048,2048,2049,1886,2013,2048,1891,2048,2048,1835,1830,2048,2048,2048,2055,2045,1987,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2053,2057,2002,2048,2048,2048,2048,2000,2048,2048,1988,2048,1996,2004,2048,2048,2056,1954,2048,2048,2048,2048,2048,1999,2048,1951,2048,1994,2048,2048,2048,1985,2048,2048,1988,2048,1991,2048,1996,2048,2048,2048,2048,2048,2022,2052,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2051,1934,2048,2048,2048,2048,2048,1999,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1963,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,1987,2048,2048,2048,2048,2048,2048,2048,2048,1990,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,1961,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,1991,2048,2048,2048,2048,2048,2056,2048,1951,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1989,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2014,1877,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,1992,2048,1996,2048,2048,1988,2048,2048,2048,2042,2048,1994,2048,2048,2048,2057,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2021,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1669,1041,1104,1148,1177,1933,840,695,1105,2048,2048,1216,34,34,34,34,34,34,520,349,499,523,608,723,640,503,599,585,633,551,676,659,616,674,672,683,762,816,732,772,685,1090,1046,941,912,913,945,954,945,1006,1011,946,963,814,951,1329,1185,1315,1121,1333,1215,1149,1140,1145,1164,1141,1153,1148,1175,1120,970,1474,1871,1883,1891,1972,1791,1891,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,1981,2048,1979,2048,1557,1328,1493,1672,1168,1244,1583,1371,1671,1978,1976,2048,1972,1978,2045,2007,1980,2048,1975,2048,1980,2048,1975,2048,2048,1970,2048,1978,2048,1978,2048,1979,2048,2048,1972,1977,2048,1971,2048,1976,2048,1978,2048,2048,1976,2048,1972,2048,1888,2048,2048,1976,2048,2048,1979,1978,2048,1976,2048,1975,1975,1978,1974,1977,2048,1976,2048,1974,1977,1980,2048,2048,2048,1974,2048,2048,1974,1977,1975,2048,2048,1970,2048,1974,2048,1975,2048,2048,1987,2048,2048,1978,2048,2048,1977,2048,1980,2048,2048,2048,2048,1971,1977,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,1975,2048,1974,1975,2048,1971,1979,1977,1978,1978,2048,1976,1977,1977,1976,1980,2048,1982,2048,2045,2011,1976,1974,2048,1982,2048,1974,1976,1998,2056,2048,2048,2048,1978,2048,1977,2048,1980,2048,1974,2048,1976,1979,1981,2048,1976,2048,1970,2048,2048,1977,2048,2048,1982,2048,2048,1973,2048,2048,1980,2048,1977,1978,2048,2048,2048,1973,2048,2048,2053,2003,2048,1978,2048,2048,1972,1978,1984,2048,1977,2048,1977,2048,1980,2048,2048,1976,1977,2048,1976,1978,1976,2048,1976,1998,2052,1890,2048,1991,1980,2048,1978,2022,2029,1978,1982,2048,2048,2048,2048,1984,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,1972,2048,2048,2048,2057,1610,2017,2048,2048,2048,2048,2048,1428,1978,2048,1981,2048,1973,1982,2048,2048,2048,1981,2048,2048,2048,2038,2019,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,1977,2048,2048,1980,2048,2048,2048,2048,1971,2048,2048,1982,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,1975,2048,2048,1984,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1779,2044,1971,1890,2048,1976,1973,1976,1980,1974,2048,1985,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,1975,2048,1998,1972,1976,1973,1972,1976,1979,1974,1974,1972,1974,1978,1982,1977,2048,1975,2048,1971,1975,1972,1888,1977,1886,1977,1978,1979,2048,1970,1972,1885,2048,1976,1894,1978,2048,1889,2048,1978,1982,1984,2048,1980,2048,1974,1979,2048,1980,2048,1975,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,1977,2048,2048,1983,2048,2048,2048,2048,1975,2048,2048,1976,2048,2048,1976,2048,1979,1978,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,1975,2048,1977,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,1979,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,1970,2048,1971,2048,1974,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,1981,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2053,1999,2048,1975,2048,1979,1979,1979,2022,2029,1894,2048,1981,1980,2048,1975,1980,1894,1976,2048,1975,2048,2048,2048,1978,2048,2048,1972,2048,1964,1976,2048,2048,2048,1981,2048,2048,1980,2048,2048,2048,1972,2048,1969,2048,1980,2048,2048,1972,2048,2048,2048,1977,2048,2048,1979,2048,1980,2048,2048,1981,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,1883,1865,1821,2048,1950,2048,2048,1973,1965,2048,1980,2048,2048,2048,1977,2048,2048,2048,2048,2048,1975,2048,1945,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,1983,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,1976,2048,2048,2048,2014,2039,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,1894,1977,1981,1978,2048,2048,1974,1980,2048,1978,1980,2048,1971,1979,1975,2048,1978,2048,2048,1966,2048,2048,1976,2048,1974,2048,1972,2048,1955,1980,2048,2048,1979,1974,2048,2048,1886,1990,2048,1977,1976,2048,1975,2048,1968,2048,2048,2048,1971,2048,2048,2048,2048,2048,1889,2048,2048,1977,1909,2048,1974,1976,2048,1982,1887,1974,2048,1982,1978,2048,1979,1982,2048,1977,2048,1979,1980,2048,1973,1979,1974,1975,2048,1980,2048,2048,1983,2048,2048,2048,2048,1907,2048,2048,2048,2048,1995,1964,2048,2048,2048,2048,1980,2048,1977,2048,2048,1965,2048,1977,2048,2048,2048,1978,2048,1954,2048,1957,1982,2048,1960,1970,2048,1975,1977,2048,1978,2048,2048,2048,1982,2048,1975,2053,1999,2048,2021,1947,2048,1958,2048,2048,2048,1972,2048,2048,2048,1969,2048,2048,2048,2048,2048,1943,2048,2048,2048,1941,2048,2048,2048,1918,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,1884,1975,2048,1885,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,1969,2048,2048,1976,2048,1945,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1985,2048,2048,1980,2048,2048,2048,1970,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,1927,2048,2048,2048,2048,1972,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,1782,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,1936,1981,2048,2048,1969,2048,2048,2048,2048,1870,2048,1969,2048,2048,1973,2048,2048,1974,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1957,2048,2048,1982,2048,2048,2048,2048,1978,2048,2048,2048,1974,1481,907,1037,1524,1131,1460,2048,1707,1122,1248,1341,893,1035,1130,1208,1255,1324,1271,1296,1265,1264,1341,1477,1408,1412,439],"successes":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,1,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,1,1,0,0,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,0,0,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,0,0,1,0,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,0,1,0,0,0,1,1,0,0,0,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,0,1,0,1,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,1,1,1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,1,1,1,0,1,0,0,0,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,1,0,1,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,1,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,1,0,0,1,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0,1,1,0,1,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,1,0,1,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,1,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,1,0,0,1,1,0,1,1,0,0,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,1,0,0,0,0,0,0,0,1,1,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,1,1,0,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,1,1,0,1,0,0,1,1,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,0,1,0,1,1,0,0,1,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,1,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,0,0,0,1,0,0,1,1,1,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,1,1,1,0,1,0,1,1,1,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,0,1,0,0,1,1,0,1,0,0,1,1,1,0,1,0,1,0,1,0,0,1,1,0,1,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,1,1,0,1,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1,0,0,0,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1,1,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,1,0,0,1,1,0,0,1,1,0,1,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,1,0,1,1,0,1,1,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,1,0,1,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,1,1,1,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]};compressedData['data']=byteArray;assert(_typeof(Module['LZ4'])==='object','LZ4 not present - was your app build with -sLZ4?');Module['LZ4'].loadPackage({'metadata':metadata,'compressedData':compressedData},false);Module['removeRunDependency']('datafile_/home/jenge/Dev_WSL/EDGE-classic/web/site/edge-classic.data');};Module['addRunDependency']('datafile_/home/jenge/Dev_WSL/EDGE-classic/web/site/edge-classic.data');if(!Module.preloadResults)Module.preloadResults={};function preloadFallback(error){console.error(error);console.error('falling back to default preload behavior');fetchRemotePackage(REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE,processPackageData,handleError);};openDatabase(function(db){checkCachedPackage(db,PACKAGE_PATH+PACKAGE_NAME,function(useCached,metadata){Module.preloadResults[PACKAGE_NAME]={fromCache:useCached};if(useCached){fetchCachedPackage(db,PACKAGE_PATH+PACKAGE_NAME,metadata,processPackageData,preloadFallback);}else{fetchRemotePackage(REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE,function(packageData){cacheRemotePackage(db,PACKAGE_PATH+PACKAGE_NAME,packageData,{uuid:PACKAGE_UUID},processPackageData,function(error){console.error(error);processPackageData(packageData);});},preloadFallback);}},preloadFallback);},preloadFallback);if(Module['setStatus'])Module['setStatus']('Downloading...');}if(Module['calledRun']){runWithFS();}else{if(!Module['preRun'])Module['preRun']=[];Module["preRun"].push(runWithFS);// FS is not initialized yet, wait for it
}};loadPackage({"files":[{"filename":"/.gitkeep","start":0,"end":0},{"filename":"/edge_base/blasphemer/graphics/NULL.png","start":0,"end":1160},{"filename":"/edge_base/blasphemer/graphics/STBARL.lmp","start":1160,"end":3871},{"filename":"/edge_base/blasphemer/graphics/STBARR.lmp","start":3871,"end":6582},{"filename":"/edge_base/blasphemer/scripts/anims.ddf","start":6582,"end":8046},{"filename":"/edge_base/blasphemer/scripts/attacks.ddf","start":8046,"end":47325},{"filename":"/edge_base/blasphemer/scripts/coal_hud.ec","start":47325,"end":63973},{"filename":"/edge_base/blasphemer/scripts/colmap.ddf","start":63973,"end":64256},{"filename":"/edge_base/blasphemer/scripts/flats.ddf","start":64256,"end":64780},{"filename":"/edge_base/blasphemer/scripts/fonts.ddf","start":64780,"end":65761},{"filename":"/edge_base/blasphemer/scripts/games.ddf","start":65761,"end":68610},{"filename":"/edge_base/blasphemer/scripts/images.ddf","start":68610,"end":70440},{"filename":"/edge_base/blasphemer/scripts/language.ldf","start":70440,"end":78694},{"filename":"/edge_base/blasphemer/scripts/levels.ddf","start":78694,"end":90905},{"filename":"/edge_base/blasphemer/scripts/lines.ddf","start":90905,"end":95476},{"filename":"/edge_base/blasphemer/scripts/playlist.ddf","start":95476,"end":97555},{"filename":"/edge_base/blasphemer/scripts/rscript.rts","start":97555,"end":110342},{"filename":"/edge_base/blasphemer/scripts/sectors.ddf","start":110342,"end":114112},{"filename":"/edge_base/blasphemer/scripts/sounds.ddf","start":114112,"end":125027},{"filename":"/edge_base/blasphemer/scripts/styles.ddf","start":125027,"end":129892},{"filename":"/edge_base/blasphemer/scripts/switch.ddf","start":129892,"end":130277},{"filename":"/edge_base/blasphemer/scripts/things.ddf","start":130277,"end":214238},{"filename":"/edge_base/blasphemer/scripts/weapons.ddf","start":214238,"end":224443},{"filename":"/edge_base/chex/graphics/M_SKULL1.png","start":224443,"end":225010},{"filename":"/edge_base/chex/graphics/M_SKULL2.png","start":225010,"end":225758},{"filename":"/edge_base/chex/graphics/STBAR.lmp","start":225758,"end":249300},{"filename":"/edge_base/chex/graphics/chex_font/FONT033.lmp","start":249300,"end":249417},{"filename":"/edge_base/chex/graphics/chex_font/FONT034.lmp","start":249417,"end":249550},{"filename":"/edge_base/chex/graphics/chex_font/FONT035.lmp","start":249550,"end":249801},{"filename":"/edge_base/chex/graphics/chex_font/FONT036.lmp","start":249801,"end":250128},{"filename":"/edge_base/chex/graphics/chex_font/FONT037.lmp","start":250128,"end":250391},{"filename":"/edge_base/chex/graphics/chex_font/FONT038.lmp","start":250391,"end":250483},{"filename":"/edge_base/chex/graphics/chex_font/FONT039.lmp","start":250483,"end":250641},{"filename":"/edge_base/chex/graphics/chex_font/FONT040.lmp","start":250641,"end":250799},{"filename":"/edge_base/chex/graphics/chex_font/FONT041.lmp","start":250799,"end":250959},{"filename":"/edge_base/chex/graphics/chex_font/FONT042.lmp","start":250959,"end":251079},{"filename":"/edge_base/chex/graphics/chex_font/FONT043.lmp","start":251079,"end":251154},{"filename":"/edge_base/chex/graphics/chex_font/FONT044.lmp","start":251154,"end":251232},{"filename":"/edge_base/chex/graphics/chex_font/FONT045.lmp","start":251232,"end":251306},{"filename":"/edge_base/chex/graphics/chex_font/FONT046.lmp","start":251306,"end":251497},{"filename":"/edge_base/chex/graphics/chex_font/FONT047.lmp","start":251497,"end":251724},{"filename":"/edge_base/chex/graphics/chex_font/FONT048.lmp","start":251724,"end":251862},{"filename":"/edge_base/chex/graphics/chex_font/FONT049.lmp","start":251862,"end":252106},{"filename":"/edge_base/chex/graphics/chex_font/FONT050.lmp","start":252106,"end":252353},{"filename":"/edge_base/chex/graphics/chex_font/FONT051.lmp","start":252353,"end":252559},{"filename":"/edge_base/chex/graphics/chex_font/FONT052.lmp","start":252559,"end":252803},{"filename":"/edge_base/chex/graphics/chex_font/FONT053.lmp","start":252803,"end":253042},{"filename":"/edge_base/chex/graphics/chex_font/FONT054.lmp","start":253042,"end":253240},{"filename":"/edge_base/chex/graphics/chex_font/FONT055.lmp","start":253240,"end":253467},{"filename":"/edge_base/chex/graphics/chex_font/FONT056.lmp","start":253467,"end":253706},{"filename":"/edge_base/chex/graphics/chex_font/FONT057.lmp","start":253706,"end":253794},{"filename":"/edge_base/chex/graphics/chex_font/FONT058.lmp","start":253794,"end":253900},{"filename":"/edge_base/chex/graphics/chex_font/FONT059.lmp","start":253900,"end":254061},{"filename":"/edge_base/chex/graphics/chex_font/FONT060.lmp","start":254061,"end":254153},{"filename":"/edge_base/chex/graphics/chex_font/FONT061.lmp","start":254153,"end":254314},{"filename":"/edge_base/chex/graphics/chex_font/FONT062.lmp","start":254314,"end":254508},{"filename":"/edge_base/chex/graphics/chex_font/FONT063.lmp","start":254508,"end":254729},{"filename":"/edge_base/chex/graphics/chex_font/FONT064.lmp","start":254729,"end":254930},{"filename":"/edge_base/chex/graphics/chex_font/FONT065.lmp","start":254930,"end":255133},{"filename":"/edge_base/chex/graphics/chex_font/FONT066.lmp","start":255133,"end":255359},{"filename":"/edge_base/chex/graphics/chex_font/FONT067.lmp","start":255359,"end":255555},{"filename":"/edge_base/chex/graphics/chex_font/FONT068.lmp","start":255555,"end":255713},{"filename":"/edge_base/chex/graphics/chex_font/FONT069.lmp","start":255713,"end":255938},{"filename":"/edge_base/chex/graphics/chex_font/FONT070.lmp","start":255938,"end":256165},{"filename":"/edge_base/chex/graphics/chex_font/FONT071.lmp","start":256165,"end":256276},{"filename":"/edge_base/chex/graphics/chex_font/FONT072.lmp","start":256276,"end":256467},{"filename":"/edge_base/chex/graphics/chex_font/FONT073.lmp","start":256467,"end":256673},{"filename":"/edge_base/chex/graphics/chex_font/FONT074.lmp","start":256673,"end":256835},{"filename":"/edge_base/chex/graphics/chex_font/FONT075.lmp","start":256835,"end":257123},{"filename":"/edge_base/chex/graphics/chex_font/FONT076.lmp","start":257123,"end":257346},{"filename":"/edge_base/chex/graphics/chex_font/FONT077.lmp","start":257346,"end":257569},{"filename":"/edge_base/chex/graphics/chex_font/FONT078.lmp","start":257569,"end":257739},{"filename":"/edge_base/chex/graphics/chex_font/FONT079.lmp","start":257739,"end":257968},{"filename":"/edge_base/chex/graphics/chex_font/FONT080.lmp","start":257968,"end":258182},{"filename":"/edge_base/chex/graphics/chex_font/FONT081.lmp","start":258182,"end":258386},{"filename":"/edge_base/chex/graphics/chex_font/FONT082.lmp","start":258386,"end":258545},{"filename":"/edge_base/chex/graphics/chex_font/FONT083.lmp","start":258545,"end":258766},{"filename":"/edge_base/chex/graphics/chex_font/FONT084.lmp","start":258766,"end":258962},{"filename":"/edge_base/chex/graphics/chex_font/FONT085.lmp","start":258962,"end":259279},{"filename":"/edge_base/chex/graphics/chex_font/FONT086.lmp","start":259279,"end":259481},{"filename":"/edge_base/chex/graphics/chex_font/FONT087.lmp","start":259481,"end":259651},{"filename":"/edge_base/chex/graphics/chex_font/FONT088.lmp","start":259651,"end":259851},{"filename":"/edge_base/chex/graphics/chex_font/FONT089.lmp","start":259851,"end":260069},{"filename":"/edge_base/chex/graphics/chex_font/FONT090.lmp","start":260069,"end":260260},{"filename":"/edge_base/chex/graphics/chex_font/FONT091.lmp","start":260260,"end":260478},{"filename":"/edge_base/chex/graphics/chex_font/FONT092.lmp","start":260478,"end":260661},{"filename":"/edge_base/chex/graphics/chex_font/FONT093.lmp","start":260661,"end":260741},{"filename":"/edge_base/chex/graphics/chex_font/FONT094.lmp","start":260741,"end":260833},{"filename":"/edge_base/chex/graphics/credit.lmp","start":260833,"end":380121},{"filename":"/edge_base/chex/graphics/help1.lmp","start":380121,"end":499409},{"filename":"/edge_base/chex/graphics/titlepic.lmp","start":499409,"end":618697},{"filename":"/edge_base/chex/graphics/wimap0.lmp","start":618697,"end":737985},{"filename":"/edge_base/chex/scripts/attacks.ddf","start":737985,"end":741187},{"filename":"/edge_base/chex/scripts/fonts.ddf","start":741187,"end":741791},{"filename":"/edge_base/chex/scripts/games.ddf","start":741791,"end":743007},{"filename":"/edge_base/chex/scripts/language.ldf","start":743007,"end":747941},{"filename":"/edge_base/chex/scripts/levels.ddf","start":747941,"end":750925},{"filename":"/edge_base/chex/scripts/styles.ddf","start":750925,"end":753099},{"filename":"/edge_base/chex/scripts/things.ddf","start":753099,"end":760174},{"filename":"/edge_base/doom/graphics/CREDIT.lmp","start":760174,"end":879462},{"filename":"/edge_base/doom/graphics/ENDPIC.lmp","start":879462,"end":998750},{"filename":"/edge_base/doom/graphics/HELP1.lmp","start":998750,"end":1118038},{"filename":"/edge_base/doom/graphics/INTERPIC.lmp","start":1118038,"end":1237326},{"filename":"/edge_base/doom/graphics/PFUB1.lmp","start":1237326,"end":1356614},{"filename":"/edge_base/doom/graphics/PFUB2.lmp","start":1356614,"end":1475902},{"filename":"/edge_base/doom/graphics/TITLEPIC.lmp","start":1475902,"end":1595190},{"filename":"/edge_base/doom/graphics/VICTORY2.lmp","start":1595190,"end":1714478},{"filename":"/edge_base/doom/graphics/WIA20000.lmp","start":1714478,"end":1743598},{"filename":"/edge_base/doom/graphics/WIA20001.lmp","start":1743598,"end":1772718},{"filename":"/edge_base/doom/graphics/WIA20002.lmp","start":1772718,"end":1801838},{"filename":"/edge_base/doom/graphics/WIA20400.lmp","start":1801838,"end":1807436},{"filename":"/edge_base/doom/graphics/WIA20401.lmp","start":1807436,"end":1813034},{"filename":"/edge_base/doom/graphics/WIA20402.lmp","start":1813034,"end":1818632},{"filename":"/edge_base/doom/graphics/WIA20500.lmp","start":1818632,"end":1831840},{"filename":"/edge_base/doom/graphics/WIA20501.lmp","start":1831840,"end":1845048},{"filename":"/edge_base/doom/graphics/WIA20502.lmp","start":1845048,"end":1858256},{"filename":"/edge_base/doom/graphics/WIMAP0.lmp","start":1858256,"end":1977544},{"filename":"/edge_base/doom/graphics/WIMAP1.lmp","start":1977544,"end":2096832},{"filename":"/edge_base/doom/graphics/WIMAP2.lmp","start":2096832,"end":2216120},{"filename":"/edge_base/doom/scripts/games.ddf","start":2216120,"end":2216531},{"filename":"/edge_base/doom/scripts/images.ddf","start":2216531,"end":2218254},{"filename":"/edge_base/doom/textures/SKY1_B.png","start":2218254,"end":2232897},{"filename":"/edge_base/doom/textures/SKY1_E.png","start":2232897,"end":2256076},{"filename":"/edge_base/doom/textures/SKY1_N.png","start":2256076,"end":2278963},{"filename":"/edge_base/doom/textures/SKY1_S.png","start":2278963,"end":2301588},{"filename":"/edge_base/doom/textures/SKY1_T.png","start":2301588,"end":2328780},{"filename":"/edge_base/doom/textures/SKY1_W.png","start":2328780,"end":2351623},{"filename":"/edge_base/doom/textures/SKY2_B.png","start":2351623,"end":2368490},{"filename":"/edge_base/doom/textures/SKY2_E.png","start":2368490,"end":2395059},{"filename":"/edge_base/doom/textures/SKY2_N.png","start":2395059,"end":2421915},{"filename":"/edge_base/doom/textures/SKY2_S.png","start":2421915,"end":2449415},{"filename":"/edge_base/doom/textures/SKY2_T.png","start":2449415,"end":2473769},{"filename":"/edge_base/doom/textures/SKY2_W.png","start":2473769,"end":2499956},{"filename":"/edge_base/doom/textures/SKY3_B.png","start":2499956,"end":2511939},{"filename":"/edge_base/doom/textures/SKY3_E.png","start":2511939,"end":2531505},{"filename":"/edge_base/doom/textures/SKY3_N.png","start":2531505,"end":2551206},{"filename":"/edge_base/doom/textures/SKY3_S.png","start":2551206,"end":2571540},{"filename":"/edge_base/doom/textures/SKY3_T.png","start":2571540,"end":2595983},{"filename":"/edge_base/doom/textures/SKY3_W.png","start":2595983,"end":2615028},{"filename":"/edge_base/doom/textures/SKY4_B.png","start":2615028,"end":2653364},{"filename":"/edge_base/doom/textures/SKY4_E.png","start":2653364,"end":2665973},{"filename":"/edge_base/doom/textures/SKY4_N.png","start":2665973,"end":2677689},{"filename":"/edge_base/doom/textures/SKY4_S.png","start":2677689,"end":2689405},{"filename":"/edge_base/doom/textures/SKY4_T.png","start":2689405,"end":2727741},{"filename":"/edge_base/doom/textures/SKY4_W.png","start":2727741,"end":2740350},{"filename":"/edge_base/doom1/graphics/CREDIT.lmp","start":2740350,"end":2859638},{"filename":"/edge_base/doom1/graphics/HELP1.lmp","start":2859638,"end":2978926},{"filename":"/edge_base/doom1/graphics/HELP2.lmp","start":2978926,"end":3098214},{"filename":"/edge_base/doom1/graphics/TITLEPIC.lmp","start":3098214,"end":3217502},{"filename":"/edge_base/doom1/graphics/WIMAP0.lmp","start":3217502,"end":3336790},{"filename":"/edge_base/doom1/scripts/images.ddf","start":3336790,"end":3338522},{"filename":"/edge_base/doom1/textures/SKY1_B.png","start":3338522,"end":3353165},{"filename":"/edge_base/doom1/textures/SKY1_E.png","start":3353165,"end":3376344},{"filename":"/edge_base/doom1/textures/SKY1_N.png","start":3376344,"end":3399231},{"filename":"/edge_base/doom1/textures/SKY1_S.png","start":3399231,"end":3421856},{"filename":"/edge_base/doom1/textures/SKY1_T.png","start":3421856,"end":3449048},{"filename":"/edge_base/doom1/textures/SKY1_W.png","start":3449048,"end":3471891},{"filename":"/edge_base/doom2/graphics/BOSSBACK.lmp","start":3471891,"end":3591179},{"filename":"/edge_base/doom2/graphics/CREDIT.lmp","start":3591179,"end":3710467},{"filename":"/edge_base/doom2/graphics/HELP.lmp","start":3710467,"end":3829755},{"filename":"/edge_base/doom2/graphics/INTERPIC.lmp","start":3829755,"end":3949043},{"filename":"/edge_base/doom2/graphics/TITLEPIC.lmp","start":3949043,"end":4068331},{"filename":"/edge_base/doom2/scripts/games.ddf","start":4068331,"end":4068762},{"filename":"/edge_base/doom2/scripts/images.ddf","start":4068762,"end":4070100},{"filename":"/edge_base/doom2/textures/SKY1_B.png","start":4070100,"end":4091380},{"filename":"/edge_base/doom2/textures/SKY1_E.png","start":4091380,"end":4109060},{"filename":"/edge_base/doom2/textures/SKY1_N.png","start":4109060,"end":4126740},{"filename":"/edge_base/doom2/textures/SKY1_S.png","start":4126740,"end":4144420},{"filename":"/edge_base/doom2/textures/SKY1_T.png","start":4144420,"end":4165700},{"filename":"/edge_base/doom2/textures/SKY1_W.png","start":4165700,"end":4183380},{"filename":"/edge_base/doom2/textures/SKY2_B.png","start":4183380,"end":4197303},{"filename":"/edge_base/doom2/textures/SKY2_E.png","start":4197303,"end":4222522},{"filename":"/edge_base/doom2/textures/SKY2_N.png","start":4222522,"end":4247754},{"filename":"/edge_base/doom2/textures/SKY2_S.png","start":4247754,"end":4272957},{"filename":"/edge_base/doom2/textures/SKY2_T.png","start":4272957,"end":4297709},{"filename":"/edge_base/doom2/textures/SKY2_W.png","start":4297709,"end":4322913},{"filename":"/edge_base/doom2/textures/SKY3_B.png","start":4322913,"end":4406483},{"filename":"/edge_base/doom2/textures/SKY3_E.png","start":4406483,"end":4501292},{"filename":"/edge_base/doom2/textures/SKY3_N.png","start":4501292,"end":4600063},{"filename":"/edge_base/doom2/textures/SKY3_S.png","start":4600063,"end":4698834},{"filename":"/edge_base/doom2/textures/SKY3_T.png","start":4698834,"end":4885325},{"filename":"/edge_base/doom2/textures/SKY3_W.png","start":4885325,"end":4980134},{"filename":"/edge_base/freedoom1/graphics/STBARL.lmp","start":4980134,"end":4983545},{"filename":"/edge_base/freedoom1/graphics/STBARR.lmp","start":4983545,"end":4986956},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT033.png","start":4986956,"end":4987301},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT034.png","start":4987301,"end":4987648},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT035.png","start":4987648,"end":4988079},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT036.png","start":4988079,"end":4988488},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT037.png","start":4988488,"end":4988909},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT038.png","start":4988909,"end":4989356},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT039.png","start":4989356,"end":4989677},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT040.png","start":4989677,"end":4990067},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT041.png","start":4990067,"end":4990456},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT042.png","start":4990456,"end":4990907},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT043.png","start":4990907,"end":4991266},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT044.png","start":4991266,"end":4991590},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT045.png","start":4991590,"end":4991903},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT046.png","start":4991903,"end":4992199},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT047.png","start":4992199,"end":4992622},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT048.png","start":4992622,"end":4993027},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT049.png","start":4993027,"end":4993407},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT050.png","start":4993407,"end":4993815},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT051.png","start":4993815,"end":4994278},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT052.png","start":4994278,"end":4994697},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT053.png","start":4994697,"end":4995105},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT054.png","start":4995105,"end":4995513},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT055.png","start":4995513,"end":4995917},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT056.png","start":4995917,"end":4996389},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT057.png","start":4996389,"end":4996804},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT058.png","start":4996804,"end":4997152},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT059.png","start":4997152,"end":4997513},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT060.png","start":4997513,"end":4997882},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT061.png","start":4997882,"end":4998223},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT062.png","start":4998223,"end":4998644},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT063.png","start":4998644,"end":4999047},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT064.png","start":4999047,"end":4999465},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT065.png","start":4999465,"end":4999968},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT066.png","start":4999968,"end":5000393},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT067.png","start":5000393,"end":5000796},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT068.png","start":5000796,"end":5001229},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT069.png","start":5001229,"end":5001645},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT070.png","start":5001645,"end":5002050},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT071.png","start":5002050,"end":5002469},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT072.png","start":5002469,"end":5002894},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT073.png","start":5002894,"end":5003296},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT074.png","start":5003296,"end":5003765},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT075.png","start":5003765,"end":5004199},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT076.png","start":5004199,"end":5004588},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT077.png","start":5004588,"end":5005043},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT078.png","start":5005043,"end":5005553},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT079.png","start":5005553,"end":5005963},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT080.png","start":5005963,"end":5006370},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT081.png","start":5006370,"end":5006787},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT082.png","start":5006787,"end":5007206},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT083.png","start":5007206,"end":5007632},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT084.png","start":5007632,"end":5008017},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT085.png","start":5008017,"end":5008432},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT086.png","start":5008432,"end":5008856},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT087.png","start":5008856,"end":5009301},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT088.png","start":5009301,"end":5009727},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT089.png","start":5009727,"end":5010192},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT090.png","start":5010192,"end":5010610},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT091.png","start":5010610,"end":5010997},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT092.png","start":5010997,"end":5011431},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT093.png","start":5011431,"end":5011827},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT094.png","start":5011827,"end":5012178},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT095.png","start":5012178,"end":5012491},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT096.png","start":5012491,"end":5012811},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT097.png","start":5012811,"end":5013269},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT098.png","start":5013269,"end":5013669},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT099.png","start":5013669,"end":5014103},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT100.png","start":5014103,"end":5014510},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT101.png","start":5014510,"end":5014906},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT102.png","start":5014906,"end":5015297},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT103.png","start":5015297,"end":5015741},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT104.png","start":5015741,"end":5016143},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT105.png","start":5016143,"end":5016523},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT106.png","start":5016523,"end":5016967},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT107.png","start":5016967,"end":5017436},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT108.png","start":5017436,"end":5017810},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT109.png","start":5017810,"end":5018231},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT110.png","start":5018231,"end":5018647},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT111.png","start":5018647,"end":5019096},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT112.png","start":5019096,"end":5019486},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT113.png","start":5019486,"end":5019944},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT114.png","start":5019944,"end":5020341},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT115.png","start":5020341,"end":5020752},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT116.png","start":5020752,"end":5021186},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT117.png","start":5021186,"end":5021588},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT118.png","start":5021588,"end":5022049},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT119.png","start":5022049,"end":5022466},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT120.png","start":5022466,"end":5022910},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT121.png","start":5022910,"end":5023303},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT122.png","start":5023303,"end":5023738},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT123.png","start":5023738,"end":5024128},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT124.png","start":5024128,"end":5024489},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT125.png","start":5024489,"end":5024877},{"filename":"/edge_base/freedoom1/graphics/freedoom_font/FONT126.png","start":5024877,"end":5025267},{"filename":"/edge_base/freedoom1/scripts/attacks.ddf","start":5025267,"end":5045540},{"filename":"/edge_base/freedoom1/scripts/fonts.ddf","start":5045540,"end":5046178},{"filename":"/edge_base/freedoom1/scripts/games.ddf","start":5046178,"end":5046589},{"filename":"/edge_base/freedoom1/scripts/images.ddf","start":5046589,"end":5053785},{"filename":"/edge_base/freedoom1/scripts/language.ldf","start":5053785,"end":5065055},{"filename":"/edge_base/freedoom1/scripts/styles.ddf","start":5065055,"end":5070027},{"filename":"/edge_base/freedoom1/scripts/things.ddf","start":5070027,"end":5078345},{"filename":"/edge_base/freedoom2/graphics/STBARL.lmp","start":5078345,"end":5081756},{"filename":"/edge_base/freedoom2/graphics/STBARR.lmp","start":5081756,"end":5085167},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT033.png","start":5085167,"end":5085512},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT034.png","start":5085512,"end":5085859},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT035.png","start":5085859,"end":5086290},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT036.png","start":5086290,"end":5086699},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT037.png","start":5086699,"end":5087120},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT038.png","start":5087120,"end":5087567},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT039.png","start":5087567,"end":5087888},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT040.png","start":5087888,"end":5088278},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT041.png","start":5088278,"end":5088667},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT042.png","start":5088667,"end":5089118},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT043.png","start":5089118,"end":5089477},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT044.png","start":5089477,"end":5089801},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT045.png","start":5089801,"end":5090114},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT046.png","start":5090114,"end":5090410},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT047.png","start":5090410,"end":5090833},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT048.png","start":5090833,"end":5091238},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT049.png","start":5091238,"end":5091618},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT050.png","start":5091618,"end":5092026},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT051.png","start":5092026,"end":5092489},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT052.png","start":5092489,"end":5092908},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT053.png","start":5092908,"end":5093316},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT054.png","start":5093316,"end":5093724},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT055.png","start":5093724,"end":5094128},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT056.png","start":5094128,"end":5094600},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT057.png","start":5094600,"end":5095015},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT058.png","start":5095015,"end":5095363},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT059.png","start":5095363,"end":5095724},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT060.png","start":5095724,"end":5096093},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT061.png","start":5096093,"end":5096434},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT062.png","start":5096434,"end":5096855},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT063.png","start":5096855,"end":5097258},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT064.png","start":5097258,"end":5097676},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT065.png","start":5097676,"end":5098179},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT066.png","start":5098179,"end":5098604},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT067.png","start":5098604,"end":5099007},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT068.png","start":5099007,"end":5099440},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT069.png","start":5099440,"end":5099856},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT070.png","start":5099856,"end":5100261},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT071.png","start":5100261,"end":5100680},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT072.png","start":5100680,"end":5101105},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT073.png","start":5101105,"end":5101507},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT074.png","start":5101507,"end":5101976},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT075.png","start":5101976,"end":5102410},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT076.png","start":5102410,"end":5102799},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT077.png","start":5102799,"end":5103254},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT078.png","start":5103254,"end":5103764},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT079.png","start":5103764,"end":5104174},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT080.png","start":5104174,"end":5104581},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT081.png","start":5104581,"end":5104998},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT082.png","start":5104998,"end":5105417},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT083.png","start":5105417,"end":5105843},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT084.png","start":5105843,"end":5106228},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT085.png","start":5106228,"end":5106643},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT086.png","start":5106643,"end":5107067},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT087.png","start":5107067,"end":5107512},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT088.png","start":5107512,"end":5107938},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT089.png","start":5107938,"end":5108403},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT090.png","start":5108403,"end":5108821},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT091.png","start":5108821,"end":5109208},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT092.png","start":5109208,"end":5109642},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT093.png","start":5109642,"end":5110038},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT094.png","start":5110038,"end":5110389},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT095.png","start":5110389,"end":5110702},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT096.png","start":5110702,"end":5111022},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT097.png","start":5111022,"end":5111480},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT098.png","start":5111480,"end":5111880},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT099.png","start":5111880,"end":5112314},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT100.png","start":5112314,"end":5112721},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT101.png","start":5112721,"end":5113117},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT102.png","start":5113117,"end":5113508},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT103.png","start":5113508,"end":5113952},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT104.png","start":5113952,"end":5114354},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT105.png","start":5114354,"end":5114734},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT106.png","start":5114734,"end":5115178},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT107.png","start":5115178,"end":5115647},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT108.png","start":5115647,"end":5116021},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT109.png","start":5116021,"end":5116442},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT110.png","start":5116442,"end":5116858},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT111.png","start":5116858,"end":5117307},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT112.png","start":5117307,"end":5117697},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT113.png","start":5117697,"end":5118155},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT114.png","start":5118155,"end":5118552},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT115.png","start":5118552,"end":5118963},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT116.png","start":5118963,"end":5119397},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT117.png","start":5119397,"end":5119799},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT118.png","start":5119799,"end":5120260},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT119.png","start":5120260,"end":5120677},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT120.png","start":5120677,"end":5121121},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT121.png","start":5121121,"end":5121514},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT122.png","start":5121514,"end":5121949},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT123.png","start":5121949,"end":5122339},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT124.png","start":5122339,"end":5122700},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT125.png","start":5122700,"end":5123088},{"filename":"/edge_base/freedoom2/graphics/freedoom_font/FONT126.png","start":5123088,"end":5123478},{"filename":"/edge_base/freedoom2/scripts/attacks.ddf","start":5123478,"end":5143751},{"filename":"/edge_base/freedoom2/scripts/fonts.ddf","start":5143751,"end":5144389},{"filename":"/edge_base/freedoom2/scripts/games.ddf","start":5144389,"end":5144820},{"filename":"/edge_base/freedoom2/scripts/images.ddf","start":5144820,"end":5152016},{"filename":"/edge_base/freedoom2/scripts/language.ldf","start":5152016,"end":5163150},{"filename":"/edge_base/freedoom2/scripts/styles.ddf","start":5163150,"end":5167763},{"filename":"/edge_base/freedoom2/scripts/things.ddf","start":5167763,"end":5176076},{"filename":"/edge_base/hacx/graphics/CREDIT.lmp","start":5176076,"end":5295364},{"filename":"/edge_base/hacx/graphics/HELP.lmp","start":5295364,"end":5414652},{"filename":"/edge_base/hacx/graphics/INTERPIC.lmp","start":5414652,"end":5533940},{"filename":"/edge_base/hacx/graphics/STBARL.lmp","start":5533940,"end":5537351},{"filename":"/edge_base/hacx/graphics/STBARR.lmp","start":5537351,"end":5540762},{"filename":"/edge_base/hacx/graphics/TITLEPIC.lmp","start":5540762,"end":5660050},{"filename":"/edge_base/hacx/scripts/anims.ddf","start":5660050,"end":5662985},{"filename":"/edge_base/hacx/scripts/attacks.ddf","start":5662985,"end":5670144},{"filename":"/edge_base/hacx/scripts/colmap.ddf","start":5670144,"end":5670412},{"filename":"/edge_base/hacx/scripts/flats.ddf","start":5670412,"end":5670792},{"filename":"/edge_base/hacx/scripts/fonts.ddf","start":5670792,"end":5671419},{"filename":"/edge_base/hacx/scripts/games.ddf","start":5671419,"end":5671850},{"filename":"/edge_base/hacx/scripts/language.ldf","start":5671850,"end":5677684},{"filename":"/edge_base/hacx/scripts/lines.ddf","start":5677684,"end":5678532},{"filename":"/edge_base/hacx/scripts/playlist.ddf","start":5678532,"end":5679965},{"filename":"/edge_base/hacx/scripts/styles.ddf","start":5679965,"end":5682422},{"filename":"/edge_base/hacx/scripts/switch.ddf","start":5682422,"end":5685443},{"filename":"/edge_base/hacx/scripts/things.ddf","start":5685443,"end":5769230},{"filename":"/edge_base/hacx/scripts/weapons.ddf","start":5769230,"end":5774236},{"filename":"/edge_base/hacx/sprites/CHGFA0.lmp","start":5774236,"end":5789040},{"filename":"/edge_base/hacx/sprites/CHGFB0.lmp","start":5789040,"end":5804066},{"filename":"/edge_base/hacx/sprites/CHGGA0.lmp","start":5804066,"end":5818640},{"filename":"/edge_base/hacx/sprites/CHGGB0.lmp","start":5818640,"end":5824997},{"filename":"/edge_base/hacx/sprites/MISFA0.lmp","start":5824997,"end":5865269},{"filename":"/edge_base/hacx/sprites/MISFB0.lmp","start":5865269,"end":5900435},{"filename":"/edge_base/hacx/sprites/MISFC0.lmp","start":5900435,"end":5933588},{"filename":"/edge_base/hacx/sprites/MISFD0.lmp","start":5933588,"end":5969971},{"filename":"/edge_base/hacx/sprites/MISGA0.lmp","start":5969971,"end":6001501},{"filename":"/edge_base/hacx/sprites/MISGB0.lmp","start":6001501,"end":6036607},{"filename":"/edge_base/hacx/sprites/PISGD0.lmp","start":6036607,"end":6060750},{"filename":"/edge_base/hacx/sprites/PISGE0.lmp","start":6060750,"end":6090416},{"filename":"/edge_base/hacx/sprites/PLSGA0.lmp","start":6090416,"end":6101280},{"filename":"/edge_base/hacx/sprites/PLSGB0.lmp","start":6101280,"end":6114674},{"filename":"/edge_base/hacx/sprites/SAWGA0.lmp","start":6114674,"end":6129123},{"filename":"/edge_base/hacx/sprites/SAWGB0.lmp","start":6129123,"end":6143231},{"filename":"/edge_base/hacx/sprites/SAWGC0.lmp","start":6143231,"end":6152316},{"filename":"/edge_base/hacx/sprites/SAWGD0.lmp","start":6152316,"end":6161401},{"filename":"/edge_base/hacx/sprites/SHT2A0.lmp","start":6161401,"end":6176912},{"filename":"/edge_base/hacx/sprites/SHT2B0.lmp","start":6176912,"end":6192653},{"filename":"/edge_base/hacx/sprites/SHT2C0.lmp","start":6192653,"end":6208686},{"filename":"/edge_base/hacx/sprites/SHT2D0.lmp","start":6208686,"end":6224813},{"filename":"/edge_base/hacx/sprites/SHT2E0.lmp","start":6224813,"end":6241099},{"filename":"/edge_base/hacx/sprites/SHT2F0.lmp","start":6241099,"end":6257253},{"filename":"/edge_base/hacx/sprites/SHT2G0.lmp","start":6257253,"end":6273069},{"filename":"/edge_base/hacx/sprites/SHT2H0.lmp","start":6273069,"end":6288580},{"filename":"/edge_base/hacx/sprites/SHT2I0.lmp","start":6288580,"end":6304263},{"filename":"/edge_base/hacx/sprites/SHT2J0.lmp","start":6304263,"end":6320468},{"filename":"/edge_base/hacx/sprites/SHTFA0.lmp","start":6320468,"end":6329530},{"filename":"/edge_base/hacx/sprites/SHTFB0.lmp","start":6329530,"end":6339021},{"filename":"/edge_base/hacx/sprites/SHTGA0.lmp","start":6339021,"end":6347680},{"filename":"/edge_base/hacx/sprites/SHTGB0.lmp","start":6347680,"end":6360762},{"filename":"/edge_base/hacx/sprites/SHTGC0.lmp","start":6360762,"end":6380001},{"filename":"/edge_base/hacx/sprites/SHTGD0.lmp","start":6380001,"end":6398248},{"filename":"/edge_base/harmony/ENDOOM.bin","start":6398248,"end":6402248},{"filename":"/edge_base/harmony/graphics/BOSSBACK.lmp","start":6402248,"end":6492994},{"filename":"/edge_base/harmony/graphics/CREDIT.lmp","start":6492994,"end":6583740},{"filename":"/edge_base/harmony/graphics/CWILV00.lmp","start":6583740,"end":6585790},{"filename":"/edge_base/harmony/graphics/CWILV01.lmp","start":6585790,"end":6587942},{"filename":"/edge_base/harmony/graphics/CWILV02.lmp","start":6587942,"end":6589720},{"filename":"/edge_base/harmony/graphics/CWILV03.lmp","start":6589720,"end":6592320},{"filename":"/edge_base/harmony/graphics/CWILV04.lmp","start":6592320,"end":6594411},{"filename":"/edge_base/harmony/graphics/CWILV05.lmp","start":6594411,"end":6598277},{"filename":"/edge_base/harmony/graphics/CWILV06.lmp","start":6598277,"end":6601865},{"filename":"/edge_base/harmony/graphics/CWILV07.lmp","start":6601865,"end":6604360},{"filename":"/edge_base/harmony/graphics/CWILV08.lmp","start":6604360,"end":6607199},{"filename":"/edge_base/harmony/graphics/CWILV09.lmp","start":6607199,"end":6611034},{"filename":"/edge_base/harmony/graphics/CWILV10.lmp","start":6611034,"end":6612652},{"filename":"/edge_base/harmony/graphics/CWILV11.lmp","start":6612652,"end":6614381},{"filename":"/edge_base/harmony/graphics/HELP.lmp","start":6614381,"end":6703423},{"filename":"/edge_base/harmony/graphics/INTERPIC.lmp","start":6703423,"end":6794169},{"filename":"/edge_base/harmony/graphics/M_EPISOD.lmp","start":6794169,"end":6797366},{"filename":"/edge_base/harmony/graphics/M_JKILL.lmp","start":6797366,"end":6798784},{"filename":"/edge_base/harmony/graphics/M_NEWG.lmp","start":6798784,"end":6801158},{"filename":"/edge_base/harmony/graphics/M_NGAME.lmp","start":6801158,"end":6802108},{"filename":"/edge_base/harmony/graphics/M_RDTHIS.lmp","start":6802108,"end":6803967},{"filename":"/edge_base/harmony/graphics/M_SAVEG.lmp","start":6803967,"end":6804980},{"filename":"/edge_base/harmony/graphics/M_THERML.png","start":6804980,"end":6805920},{"filename":"/edge_base/harmony/graphics/M_THERMM.png","start":6805920,"end":6806849},{"filename":"/edge_base/harmony/graphics/M_THERMO.png","start":6806849,"end":6807764},{"filename":"/edge_base/harmony/graphics/M_THERMR.png","start":6807764,"end":6808702},{"filename":"/edge_base/harmony/graphics/STBARL.lmp","start":6808702,"end":6812113},{"filename":"/edge_base/harmony/graphics/STBARR.lmp","start":6812113,"end":6815524},{"filename":"/edge_base/harmony/graphics/TITLEPIC.lmp","start":6815524,"end":6904566},{"filename":"/edge_base/harmony/graphics/WICOLON.lmp","start":6904566,"end":6904668},{"filename":"/edge_base/harmony/graphics/WIF.lmp","start":6904668,"end":6904716},{"filename":"/edge_base/harmony/graphics/WIFRGS.lmp","start":6904716,"end":6905847},{"filename":"/edge_base/harmony/graphics/WIKILRS.lmp","start":6905847,"end":6906320},{"filename":"/edge_base/harmony/graphics/WIMINUS.lmp","start":6906320,"end":6906440},{"filename":"/edge_base/harmony/graphics/WIMSTT.lmp","start":6906440,"end":6907540},{"filename":"/edge_base/harmony/graphics/WINUM0.lmp","start":6907540,"end":6907790},{"filename":"/edge_base/harmony/graphics/WINUM1.lmp","start":6907790,"end":6907936},{"filename":"/edge_base/harmony/graphics/WINUM2.lmp","start":6907936,"end":6908222},{"filename":"/edge_base/harmony/graphics/WINUM3.lmp","start":6908222,"end":6908475},{"filename":"/edge_base/harmony/graphics/WINUM4.lmp","start":6908475,"end":6908699},{"filename":"/edge_base/harmony/graphics/WINUM5.lmp","start":6908699,"end":6908954},{"filename":"/edge_base/harmony/graphics/WINUM6.lmp","start":6908954,"end":6909216},{"filename":"/edge_base/harmony/graphics/WINUM7.lmp","start":6909216,"end":6909433},{"filename":"/edge_base/harmony/graphics/WINUM8.lmp","start":6909433,"end":6909695},{"filename":"/edge_base/harmony/graphics/WINUM9.lmp","start":6909695,"end":6909954},{"filename":"/edge_base/harmony/graphics/WIOSTF.lmp","start":6909954,"end":6910194},{"filename":"/edge_base/harmony/graphics/WIOSTI.lmp","start":6910194,"end":6911642},{"filename":"/edge_base/harmony/graphics/WIOSTK.lmp","start":6911642,"end":6912987},{"filename":"/edge_base/harmony/graphics/WIOSTS.lmp","start":6912987,"end":6914156},{"filename":"/edge_base/harmony/graphics/WIPAR.lmp","start":6914156,"end":6915133},{"filename":"/edge_base/harmony/graphics/WIPCNT.lmp","start":6915133,"end":6915382},{"filename":"/edge_base/harmony/graphics/WISCRT2.lmp","start":6915382,"end":6917157},{"filename":"/edge_base/harmony/graphics/WISUCKS.lmp","start":6917157,"end":6918866},{"filename":"/edge_base/harmony/graphics/WITIME.lmp","start":6918866,"end":6919713},{"filename":"/edge_base/harmony/graphics/WIVCTMS.lmp","start":6919713,"end":6920513},{"filename":"/edge_base/harmony/scripts/attacks.ddf","start":6920513,"end":6928036},{"filename":"/edge_base/harmony/scripts/coal_hud.ec","start":6928036,"end":6931762},{"filename":"/edge_base/harmony/scripts/colmap.ddf","start":6931762,"end":6932061},{"filename":"/edge_base/harmony/scripts/flats.ddf","start":6932061,"end":6932382},{"filename":"/edge_base/harmony/scripts/games.ddf","start":6932382,"end":6932813},{"filename":"/edge_base/harmony/scripts/language.ldf","start":6932813,"end":6936458},{"filename":"/edge_base/harmony/scripts/levels.ddf","start":6936458,"end":6951838},{"filename":"/edge_base/harmony/scripts/playlist.ddf","start":6951838,"end":6953267},{"filename":"/edge_base/harmony/scripts/styles.ddf","start":6953267,"end":6955499},{"filename":"/edge_base/harmony/scripts/things.ddf","start":6955499,"end":7022430},{"filename":"/edge_base/harmony/scripts/weapons.ddf","start":7022430,"end":7026003},{"filename":"/edge_base/harmony/sprites/CELLA0.png","start":7026003,"end":7027745},{"filename":"/edge_base/harmony/sprites/CLIPA0.png","start":7027745,"end":7030431},{"filename":"/edge_base/harmony/sprites/ROCKA0.png","start":7030431,"end":7031862},{"filename":"/edge_base/harmony/sprites/SHELA0.png","start":7031862,"end":7034046},{"filename":"/edge_base/heretic/graphics/BARBACK.lmp","start":7034046,"end":7054560},{"filename":"/edge_base/heretic/graphics/CREDIT.lmp","start":7054560,"end":7173848},{"filename":"/edge_base/heretic/graphics/E2END.png","start":7173848,"end":7230272},{"filename":"/edge_base/heretic/graphics/FINAL1.lmp","start":7230272,"end":7349560},{"filename":"/edge_base/heretic/graphics/FINAL2.lmp","start":7349560,"end":7468848},{"filename":"/edge_base/heretic/graphics/HELP1.lmp","start":7468848,"end":7588136},{"filename":"/edge_base/heretic/graphics/HELP2.lmp","start":7588136,"end":7707424},{"filename":"/edge_base/heretic/graphics/LTFCTOP.lmp","start":7707424,"end":7708115},{"filename":"/edge_base/heretic/graphics/MAPE1.lmp","start":7708115,"end":7827403},{"filename":"/edge_base/heretic/graphics/MAPE2.lmp","start":7827403,"end":7946691},{"filename":"/edge_base/heretic/graphics/MAPE3.lmp","start":7946691,"end":8065979},{"filename":"/edge_base/heretic/graphics/M_SKL00.png","start":8065979,"end":8067155},{"filename":"/edge_base/heretic/graphics/M_SKL01.png","start":8067155,"end":8068364},{"filename":"/edge_base/heretic/graphics/M_SKL02.png","start":8068364,"end":8069629},{"filename":"/edge_base/heretic/graphics/M_SKL03.png","start":8069629,"end":8070941},{"filename":"/edge_base/heretic/graphics/M_SKL04.png","start":8070941,"end":8072355},{"filename":"/edge_base/heretic/graphics/M_SKL05.png","start":8072355,"end":8073669},{"filename":"/edge_base/heretic/graphics/M_SKL06.png","start":8073669,"end":8075056},{"filename":"/edge_base/heretic/graphics/M_SKL07.png","start":8075056,"end":8076330},{"filename":"/edge_base/heretic/graphics/M_SKL08.png","start":8076330,"end":8077384},{"filename":"/edge_base/heretic/graphics/M_SKL09.png","start":8077384,"end":8078382},{"filename":"/edge_base/heretic/graphics/M_SKL10.png","start":8078382,"end":8079474},{"filename":"/edge_base/heretic/graphics/M_SKL11.png","start":8079474,"end":8080731},{"filename":"/edge_base/heretic/graphics/M_SKL12.png","start":8080731,"end":8082214},{"filename":"/edge_base/heretic/graphics/M_SKL13.png","start":8082214,"end":8083564},{"filename":"/edge_base/heretic/graphics/M_SKL14.png","start":8083564,"end":8085168},{"filename":"/edge_base/heretic/graphics/M_SKL15.png","start":8085168,"end":8086669},{"filename":"/edge_base/heretic/graphics/M_SKL16.png","start":8086669,"end":8087947},{"filename":"/edge_base/heretic/graphics/M_SKL17.png","start":8087947,"end":8089179},{"filename":"/edge_base/heretic/graphics/NULL.png","start":8089179,"end":8090339},{"filename":"/edge_base/heretic/graphics/RTFCTOP.lmp","start":8090339,"end":8091088},{"filename":"/edge_base/heretic/graphics/STBARL.lmp","start":8091088,"end":8095329},{"filename":"/edge_base/heretic/graphics/STBARR.lmp","start":8095329,"end":8099570},{"filename":"/edge_base/heretic/graphics/TITLE.png","start":8099570,"end":8150193},{"filename":"/edge_base/heretic/graphics/WIENTER.png","start":8150193,"end":8151092},{"filename":"/edge_base/heretic/graphics/WIF.png","start":8151092,"end":8151838},{"filename":"/edge_base/heretic/scripts/anims.ddf","start":8151838,"end":8153474},{"filename":"/edge_base/heretic/scripts/attacks.ddf","start":8153474,"end":8197373},{"filename":"/edge_base/heretic/scripts/coal_hud.ec","start":8197373,"end":8213857},{"filename":"/edge_base/heretic/scripts/colmap.ddf","start":8213857,"end":8214139},{"filename":"/edge_base/heretic/scripts/flats.ddf","start":8214139,"end":8214802},{"filename":"/edge_base/heretic/scripts/fonts.ddf","start":8214802,"end":8215783},{"filename":"/edge_base/heretic/scripts/games.ddf","start":8215783,"end":8218559},{"filename":"/edge_base/heretic/scripts/images.ddf","start":8218559,"end":8221618},{"filename":"/edge_base/heretic/scripts/language.ldf","start":8221618,"end":8230089},{"filename":"/edge_base/heretic/scripts/levels.ddf","start":8230089,"end":8242996},{"filename":"/edge_base/heretic/scripts/lines.ddf","start":8242996,"end":8247567},{"filename":"/edge_base/heretic/scripts/playlist.ddf","start":8247567,"end":8249646},{"filename":"/edge_base/heretic/scripts/rscript.rts","start":8249646,"end":8262433},{"filename":"/edge_base/heretic/scripts/sectors.ddf","start":8262433,"end":8266203},{"filename":"/edge_base/heretic/scripts/sounds.ddf","start":8266203,"end":8277118},{"filename":"/edge_base/heretic/scripts/styles.ddf","start":8277118,"end":8282369},{"filename":"/edge_base/heretic/scripts/switch.ddf","start":8282369,"end":8282794},{"filename":"/edge_base/heretic/scripts/things.ddf","start":8282794,"end":8366755},{"filename":"/edge_base/heretic/scripts/weapons.ddf","start":8366755,"end":8377939},{"filename":"/edge_base/heretic/sprites/STFFC0.lmp","start":8377939,"end":8395069},{"filename":"/edge_base/heretic/sprites/STFFH0.lmp","start":8395069,"end":8413115},{"filename":"/edge_base/plutonia/graphics/BOSSBACK.lmp","start":8413115,"end":8532403},{"filename":"/edge_base/plutonia/graphics/CREDIT.lmp","start":8532403,"end":8651691},{"filename":"/edge_base/plutonia/graphics/INTERPIC.lmp","start":8651691,"end":8770979},{"filename":"/edge_base/plutonia/graphics/TITLEPIC.lmp","start":8770979,"end":8890267},{"filename":"/edge_base/plutonia/scripts/games.ddf","start":8890267,"end":8890698},{"filename":"/edge_base/plutonia/scripts/images.ddf","start":8890698,"end":8892033},{"filename":"/edge_base/plutonia/scripts/language.ldf","start":8892033,"end":8895413},{"filename":"/edge_base/plutonia/textures/SKY1_B.png","start":8895413,"end":8910444},{"filename":"/edge_base/plutonia/textures/SKY1_E.png","start":8910444,"end":8925440},{"filename":"/edge_base/plutonia/textures/SKY1_N.png","start":8925440,"end":8938519},{"filename":"/edge_base/plutonia/textures/SKY1_S.png","start":8938519,"end":8951598},{"filename":"/edge_base/plutonia/textures/SKY1_T.png","start":8951598,"end":8966629},{"filename":"/edge_base/plutonia/textures/SKY1_W.png","start":8966629,"end":8981625},{"filename":"/edge_base/plutonia/textures/SKY2_B.png","start":8981625,"end":9009560},{"filename":"/edge_base/plutonia/textures/SKY2_E.png","start":9009560,"end":9021200},{"filename":"/edge_base/plutonia/textures/SKY2_N.png","start":9021200,"end":9033109},{"filename":"/edge_base/plutonia/textures/SKY2_S.png","start":9033109,"end":9045018},{"filename":"/edge_base/plutonia/textures/SKY2_T.png","start":9045018,"end":9072953},{"filename":"/edge_base/plutonia/textures/SKY2_W.png","start":9072953,"end":9084593},{"filename":"/edge_base/plutonia/textures/SKY3_B.png","start":9084593,"end":9283343},{"filename":"/edge_base/plutonia/textures/SKY3_E.png","start":9283343,"end":9373936},{"filename":"/edge_base/plutonia/textures/SKY3_N.png","start":9373936,"end":9457320},{"filename":"/edge_base/plutonia/textures/SKY3_S.png","start":9457320,"end":9540704},{"filename":"/edge_base/plutonia/textures/SKY3_T.png","start":9540704,"end":9739454},{"filename":"/edge_base/plutonia/textures/SKY3_W.png","start":9739454,"end":9830047},{"filename":"/edge_base/rekkr/graphics/M_DOOM.lmp","start":9830047,"end":9855338},{"filename":"/edge_base/rekkr/graphics/M_EPISOD.lmp","start":9855338,"end":9872808},{"filename":"/edge_base/rekkr/graphics/M_HURT.lmp","start":9872808,"end":9874947},{"filename":"/edge_base/rekkr/graphics/M_JKILL.lmp","start":9874947,"end":9877706},{"filename":"/edge_base/rekkr/graphics/M_LGTTL.lmp","start":9877706,"end":9879893},{"filename":"/edge_base/rekkr/graphics/M_LOADG.lmp","start":9879893,"end":9882010},{"filename":"/edge_base/rekkr/graphics/M_NEWG.lmp","start":9882010,"end":9885285},{"filename":"/edge_base/rekkr/graphics/M_NGAME.lmp","start":9885285,"end":9887333},{"filename":"/edge_base/rekkr/graphics/M_NMARE.lmp","start":9887333,"end":9889767},{"filename":"/edge_base/rekkr/graphics/M_OPTION.lmp","start":9889767,"end":9891604},{"filename":"/edge_base/rekkr/graphics/M_QUITG.lmp","start":9891604,"end":9893672},{"filename":"/edge_base/rekkr/graphics/M_RDTHIS.lmp","start":9893672,"end":9894917},{"filename":"/edge_base/rekkr/graphics/M_ROUGH.lmp","start":9894917,"end":9897486},{"filename":"/edge_base/rekkr/graphics/M_SAVEG.lmp","start":9897486,"end":9899706},{"filename":"/edge_base/rekkr/graphics/M_SGTTL.lmp","start":9899706,"end":9901926},{"filename":"/edge_base/rekkr/graphics/M_SKILL.lmp","start":9901926,"end":9930018},{"filename":"/edge_base/rekkr/graphics/M_SKULL1.png","start":9930018,"end":9930606},{"filename":"/edge_base/rekkr/graphics/M_SKULL2.png","start":9930606,"end":9931188},{"filename":"/edge_base/rekkr/graphics/M_SKULL3.png","start":9931188,"end":9931783},{"filename":"/edge_base/rekkr/graphics/M_SKULL4.png","start":9931783,"end":9932371},{"filename":"/edge_base/rekkr/graphics/M_ULTRA.lmp","start":9932371,"end":9934745},{"filename":"/edge_base/rekkr/graphics/STBARL.lmp","start":9934745,"end":9938156},{"filename":"/edge_base/rekkr/graphics/STBARR.lmp","start":9938156,"end":9941567},{"filename":"/edge_base/rekkr/graphics/WIENTER.lmp","start":9941567,"end":9943492},{"filename":"/edge_base/rekkr/graphics/WIF.lmp","start":9943492,"end":9945273},{"filename":"/edge_base/rekkr/graphics/WILV00.lmp","start":9945273,"end":9946872},{"filename":"/edge_base/rekkr/graphics/WILV01.lmp","start":9946872,"end":9947888},{"filename":"/edge_base/rekkr/graphics/WILV02.lmp","start":9947888,"end":9949915},{"filename":"/edge_base/rekkr/graphics/WILV03.lmp","start":9949915,"end":9952482},{"filename":"/edge_base/rekkr/graphics/WILV04.lmp","start":9952482,"end":9954197},{"filename":"/edge_base/rekkr/graphics/WILV05.lmp","start":9954197,"end":9955925},{"filename":"/edge_base/rekkr/graphics/WILV06.lmp","start":9955925,"end":9959309},{"filename":"/edge_base/rekkr/graphics/WILV07.lmp","start":9959309,"end":9962813},{"filename":"/edge_base/rekkr/graphics/WILV08.lmp","start":9962813,"end":9965656},{"filename":"/edge_base/rekkr/graphics/WILV10.lmp","start":9965656,"end":9967035},{"filename":"/edge_base/rekkr/graphics/WILV11.lmp","start":9967035,"end":9968671},{"filename":"/edge_base/rekkr/graphics/WILV12.lmp","start":9968671,"end":9970991},{"filename":"/edge_base/rekkr/graphics/WILV13.lmp","start":9970991,"end":9972201},{"filename":"/edge_base/rekkr/graphics/WILV14.lmp","start":9972201,"end":9974898},{"filename":"/edge_base/rekkr/graphics/WILV15.lmp","start":9974898,"end":9977985},{"filename":"/edge_base/rekkr/graphics/WILV16.lmp","start":9977985,"end":9979626},{"filename":"/edge_base/rekkr/graphics/WILV17.lmp","start":9979626,"end":9981514},{"filename":"/edge_base/rekkr/graphics/WILV18.lmp","start":9981514,"end":9982701},{"filename":"/edge_base/rekkr/graphics/WILV20.lmp","start":9982701,"end":9984662},{"filename":"/edge_base/rekkr/graphics/WILV21.lmp","start":9984662,"end":9987778},{"filename":"/edge_base/rekkr/graphics/WILV22.lmp","start":9987778,"end":9989539},{"filename":"/edge_base/rekkr/graphics/WILV23.lmp","start":9989539,"end":9992398},{"filename":"/edge_base/rekkr/graphics/WILV24.lmp","start":9992398,"end":9994111},{"filename":"/edge_base/rekkr/graphics/WILV25.lmp","start":9994111,"end":9996375},{"filename":"/edge_base/rekkr/graphics/WILV26.lmp","start":9996375,"end":9997608},{"filename":"/edge_base/rekkr/graphics/WILV27.lmp","start":9997608,"end":9998351},{"filename":"/edge_base/rekkr/graphics/WILV28.lmp","start":9998351,"end":10002129},{"filename":"/edge_base/rekkr/graphics/WILV30.lmp","start":10002129,"end":10003981},{"filename":"/edge_base/rekkr/graphics/WILV31.lmp","start":10003981,"end":10005619},{"filename":"/edge_base/rekkr/graphics/WILV32.lmp","start":10005619,"end":10006741},{"filename":"/edge_base/rekkr/graphics/WILV33.lmp","start":10006741,"end":10009080},{"filename":"/edge_base/rekkr/graphics/WILV34.lmp","start":10009080,"end":10011083},{"filename":"/edge_base/rekkr/graphics/WILV35.lmp","start":10011083,"end":10013217},{"filename":"/edge_base/rekkr/graphics/WILV36.lmp","start":10013217,"end":10016283},{"filename":"/edge_base/rekkr/graphics/WILV37.lmp","start":10016283,"end":10018278},{"filename":"/edge_base/rekkr/graphics/WILV38.lmp","start":10018278,"end":10020138},{"filename":"/edge_base/rekkr/graphics/WIOSTF.lmp","start":10020138,"end":10020400},{"filename":"/edge_base/rekkr/graphics/WIOSTI.lmp","start":10020400,"end":10021606},{"filename":"/edge_base/rekkr/graphics/WIOSTK.lmp","start":10021606,"end":10022671},{"filename":"/edge_base/rekkr/graphics/WIOSTS.lmp","start":10022671,"end":10023701},{"filename":"/edge_base/rekkr/graphics/WIPAR.lmp","start":10023701,"end":10024463},{"filename":"/edge_base/rekkr/graphics/WISCRT2.lmp","start":10024463,"end":10026030},{"filename":"/edge_base/rekkr/graphics/WITIME.lmp","start":10026030,"end":10026944},{"filename":"/edge_base/rekkr/scripts/anims.ddf","start":10026944,"end":10027078},{"filename":"/edge_base/rekkr/scripts/attacks.ddf","start":10027078,"end":10027771},{"filename":"/edge_base/rekkr/scripts/games.ddf","start":10027771,"end":10028182},{"filename":"/edge_base/rekkr/scripts/images.ddf","start":10028182,"end":10034980},{"filename":"/edge_base/rekkr/scripts/language.ldf","start":10034980,"end":10035714},{"filename":"/edge_base/rekkr/scripts/styles.ddf","start":10035714,"end":10039866},{"filename":"/edge_base/rekkr/scripts/things.ddf","start":10039866,"end":10042036},{"filename":"/edge_base/rekkr/scripts/weapons.ddf","start":10042036,"end":10043901},{"filename":"/edge_base/rekkr/sprites/SSWVA1.lmp","start":10043901,"end":10044526},{"filename":"/edge_base/rekkr/sprites/SSWVA2A8.lmp","start":10044526,"end":10045501},{"filename":"/edge_base/rekkr/sprites/SSWVA3A7.lmp","start":10045501,"end":10046476},{"filename":"/edge_base/rekkr/sprites/SSWVA4A6.lmp","start":10046476,"end":10047451},{"filename":"/edge_base/rekkr/sprites/SSWVA5.lmp","start":10047451,"end":10048082},{"filename":"/edge_base/rekkr/sprites/SSWVB1.lmp","start":10048082,"end":10048665},{"filename":"/edge_base/rekkr/sprites/SSWVB2B8.lmp","start":10048665,"end":10049632},{"filename":"/edge_base/rekkr/sprites/SSWVB3B7.lmp","start":10049632,"end":10050599},{"filename":"/edge_base/rekkr/sprites/SSWVB4B6.lmp","start":10050599,"end":10051566},{"filename":"/edge_base/rekkr/sprites/SSWVB5.lmp","start":10051566,"end":10052148},{"filename":"/edge_base/strife/games.ddf","start":10052148,"end":10053061},{"filename":"/edge_base/strife/images.ddf","start":10053061,"end":10053397},{"filename":"/edge_base/strife/playlist.ddf","start":10053397,"end":10054371},{"filename":"/edge_base/tnt/graphics/BOSSBACK.lmp","start":10054371,"end":10173659},{"filename":"/edge_base/tnt/graphics/CREDIT.lmp","start":10173659,"end":10292947},{"filename":"/edge_base/tnt/graphics/INTERPIC.lmp","start":10292947,"end":10412235},{"filename":"/edge_base/tnt/graphics/TITLEPIC.lmp","start":10412235,"end":10531523},{"filename":"/edge_base/tnt/scripts/games.ddf","start":10531523,"end":10531954},{"filename":"/edge_base/tnt/scripts/images.ddf","start":10531954,"end":10533291},{"filename":"/edge_base/tnt/scripts/language.ldf","start":10533291,"end":10536958},{"filename":"/edge_base/tnt/textures/SKY1_B.png","start":10536958,"end":10552951},{"filename":"/edge_base/tnt/textures/SKY1_E.png","start":10552951,"end":10572417},{"filename":"/edge_base/tnt/textures/SKY1_N.png","start":10572417,"end":10589843},{"filename":"/edge_base/tnt/textures/SKY1_S.png","start":10589843,"end":10605750},{"filename":"/edge_base/tnt/textures/SKY1_T.png","start":10605750,"end":10645868},{"filename":"/edge_base/tnt/textures/SKY1_W.png","start":10645868,"end":10665192},{"filename":"/edge_base/tnt/textures/SKY2_B.png","start":10665192,"end":10666503},{"filename":"/edge_base/tnt/textures/SKY2_E.png","start":10666503,"end":10671026},{"filename":"/edge_base/tnt/textures/SKY2_N.png","start":10671026,"end":10672255},{"filename":"/edge_base/tnt/textures/SKY2_S.png","start":10672255,"end":10678472},{"filename":"/edge_base/tnt/textures/SKY2_T.png","start":10678472,"end":10682599},{"filename":"/edge_base/tnt/textures/SKY2_W.png","start":10682599,"end":10684141},{"filename":"/edge_base/tnt/textures/SKY3_B.png","start":10684141,"end":10708612},{"filename":"/edge_base/tnt/textures/SKY3_E.png","start":10708612,"end":10716314},{"filename":"/edge_base/tnt/textures/SKY3_N.png","start":10716314,"end":10724193},{"filename":"/edge_base/tnt/textures/SKY3_S.png","start":10724193,"end":10731541},{"filename":"/edge_base/tnt/textures/SKY3_T.png","start":10731541,"end":10756012},{"filename":"/edge_base/tnt/textures/SKY3_W.png","start":10756012,"end":10763353},{"filename":"/edge_defs/colormaps/AUTOMAPS.dat","start":10763353,"end":10763865},{"filename":"/edge_defs/colormaps/LAVAMAP.cmp","start":10763865,"end":10772569},{"filename":"/edge_defs/colormaps/NITEVMAP.cmp","start":10772569,"end":10772825},{"filename":"/edge_defs/colormaps/PLYRMAPS.dat","start":10772825,"end":10776665},{"filename":"/edge_defs/colormaps/SARGMAPS.dat","start":10776665,"end":10778201},{"filename":"/edge_defs/colormaps/SHADEMAP.cmp","start":10778201,"end":10778457},{"filename":"/edge_defs/colormaps/SKINMAPS.dat","start":10778457,"end":10779737},{"filename":"/edge_defs/colormaps/SLIMEMAP.cmp","start":10779737,"end":10788441},{"filename":"/edge_defs/colormaps/TEXTMAPS.dat","start":10788441,"end":10790233},{"filename":"/edge_defs/colormaps/TXTBLUES.dat","start":10790233,"end":10791513},{"filename":"/edge_defs/colormaps/TXTBRNS1.dat","start":10791513,"end":10792793},{"filename":"/edge_defs/colormaps/TXTBRNS2.dat","start":10792793,"end":10794073},{"filename":"/edge_defs/colormaps/TXTGREYS.dat","start":10794073,"end":10795353},{"filename":"/edge_defs/colormaps/TXTGRNS.dat","start":10795353,"end":10796633},{"filename":"/edge_defs/colormaps/TXTORANS.dat","start":10796633,"end":10797913},{"filename":"/edge_defs/colormaps/TXTPNKS1.dat","start":10797913,"end":10799193},{"filename":"/edge_defs/colormaps/TXTPNKS2.dat","start":10799193,"end":10800473},{"filename":"/edge_defs/colormaps/TXTPURPS.dat","start":10800473,"end":10801753},{"filename":"/edge_defs/colormaps/TXTREDS.dat","start":10801753,"end":10803033},{"filename":"/edge_defs/colormaps/TXTYLWS1.dat","start":10803033,"end":10804313},{"filename":"/edge_defs/colormaps/TXTYLWS2.dat","start":10804313,"end":10805593},{"filename":"/edge_defs/colormaps/WATERMAP.cmp","start":10805593,"end":10814297},{"filename":"/edge_defs/graphics/CREDIT2.lmp","start":10814297,"end":10881185},{"filename":"/edge_defs/graphics/DLITEXPN.png","start":10881185,"end":10895528},{"filename":"/edge_defs/graphics/EDGECBG1.jpg","start":10895528,"end":10958895},{"filename":"/edge_defs/graphics/EDGECRED.png","start":10958895,"end":11126494},{"filename":"/edge_defs/graphics/EDGETTL.lmp","start":11126494,"end":11193382},{"filename":"/edge_defs/graphics/ENDFONT.png","start":11193382,"end":11200486},{"filename":"/edge_defs/graphics/FONTVERD.png","start":11200486,"end":11245117},{"filename":"/edge_defs/graphics/MOUSE.lmp","start":11245117,"end":11245300},{"filename":"/edge_defs/graphics/M_EPI5.lmp","start":11245300,"end":11246444},{"filename":"/edge_defs/graphics/M_EPI6.lmp","start":11246444,"end":11249474},{"filename":"/edge_defs/graphics/STBARL.lmp","start":11249474,"end":11252885},{"filename":"/edge_defs/graphics/STBARR.lmp","start":11252885,"end":11256296},{"filename":"/edge_defs/graphics/STCFN000.lmp","start":11256296,"end":11256440},{"filename":"/edge_defs/graphics/STCFN132.lmp","start":11256440,"end":11256582},{"filename":"/edge_defs/graphics/STCFN134.lmp","start":11256582,"end":11256709},{"filename":"/edge_defs/graphics/STCFN148.lmp","start":11256709,"end":11256844},{"filename":"/edge_defs/graphics/STDESYNC.lmp","start":11256844,"end":11259441},{"filename":"/edge_defs/graphics/STFB0.lmp","start":11259441,"end":11260849},{"filename":"/edge_defs/graphics/STFB1.lmp","start":11260849,"end":11262257},{"filename":"/edge_defs/graphics/STFB2.lmp","start":11262257,"end":11263665},{"filename":"/edge_defs/graphics/STFB3.lmp","start":11263665,"end":11265073},{"filename":"/edge_defs/graphics/STFB4.lmp","start":11265073,"end":11266481},{"filename":"/edge_defs/graphics/STFB5.lmp","start":11266481,"end":11267889},{"filename":"/edge_defs/graphics/STFB6.lmp","start":11267889,"end":11269297},{"filename":"/edge_defs/graphics/STFB7.lmp","start":11269297,"end":11270705},{"filename":"/edge_defs/graphics/STKEYS6.lmp","start":11270705,"end":11270825},{"filename":"/edge_defs/graphics/STKEYS7.lmp","start":11270825,"end":11270945},{"filename":"/edge_defs/graphics/STKEYS8.lmp","start":11270945,"end":11271065},{"filename":"/edge_defs/graphics/STKEYS9.PNG","start":11271065,"end":11271249},{"filename":"/edge_defs/graphics/STKEYSA.PNG","start":11271249,"end":11271501},{"filename":"/edge_defs/graphics/STPB0.lmp","start":11271501,"end":11272979},{"filename":"/edge_defs/graphics/STPB1.lmp","start":11272979,"end":11274457},{"filename":"/edge_defs/graphics/STPB2.lmp","start":11274457,"end":11275935},{"filename":"/edge_defs/graphics/STPB3.lmp","start":11275935,"end":11277413},{"filename":"/edge_defs/graphics/STPB4.lmp","start":11277413,"end":11278891},{"filename":"/edge_defs/graphics/STPB5.lmp","start":11278891,"end":11280369},{"filename":"/edge_defs/graphics/STPB6.lmp","start":11280369,"end":11281847},{"filename":"/edge_defs/graphics/STPB7.lmp","start":11281847,"end":11283325},{"filename":"/edge_defs/graphics/crosshairs/CROSSHR1.png","start":11283325,"end":11283518},{"filename":"/edge_defs/graphics/crosshairs/CROSSHR2.png","start":11283518,"end":11283703},{"filename":"/edge_defs/graphics/crosshairs/CROSSHR3.png","start":11283703,"end":11283888},{"filename":"/edge_defs/graphics/crosshairs/CROSSHR4.png","start":11283888,"end":11284075},{"filename":"/edge_defs/graphics/crosshairs/CROSSHR5.png","start":11284075,"end":11284341},{"filename":"/edge_defs/graphics/crosshairs/CROSSHR6.png","start":11284341,"end":11284682},{"filename":"/edge_defs/graphics/crosshairs/CROSSHR7.png","start":11284682,"end":11284976},{"filename":"/edge_defs/graphics/crosshairs/CROSSHR8.png","start":11284976,"end":11286360},{"filename":"/edge_defs/graphics/crosshairs/CROSSHR9.png","start":11286360,"end":11286779},{"filename":"/edge_defs/graphics/edge1_font/ED1FN001.png","start":11286779,"end":11287136},{"filename":"/edge_defs/graphics/edge1_font/ED1FN002.png","start":11287136,"end":11287481},{"filename":"/edge_defs/graphics/edge1_font/ED1FN003.png","start":11287481,"end":11287837},{"filename":"/edge_defs/graphics/edge1_font/ED1FN004.png","start":11287837,"end":11288185},{"filename":"/edge_defs/graphics/edge1_font/ED1FN005.png","start":11288185,"end":11288524},{"filename":"/edge_defs/graphics/edge1_font/ED1FN006.png","start":11288524,"end":11288842},{"filename":"/edge_defs/graphics/edge1_font/ED1FN007.png","start":11288842,"end":11289192},{"filename":"/edge_defs/graphics/edge1_font/ED1FN008.png","start":11289192,"end":11289548},{"filename":"/edge_defs/graphics/edge1_font/ED1FN009.png","start":11289548,"end":11289827},{"filename":"/edge_defs/graphics/edge1_font/ED1FN010.png","start":11289827,"end":11290152},{"filename":"/edge_defs/graphics/edge1_font/ED1FN011.png","start":11290152,"end":11290521},{"filename":"/edge_defs/graphics/edge1_font/ED1FN012.png","start":11290521,"end":11290845},{"filename":"/edge_defs/graphics/edge1_font/ED1FN013.png","start":11290845,"end":11291211},{"filename":"/edge_defs/graphics/edge1_font/ED1FN014.png","start":11291211,"end":11291567},{"filename":"/edge_defs/graphics/edge1_font/ED1FN015.png","start":11291567,"end":11291940},{"filename":"/edge_defs/graphics/edge1_font/ED1FN016.png","start":11291940,"end":11292274},{"filename":"/edge_defs/graphics/edge1_font/ED1FN017.png","start":11292274,"end":11292649},{"filename":"/edge_defs/graphics/edge1_font/ED1FN018.png","start":11292649,"end":11293007},{"filename":"/edge_defs/graphics/edge1_font/ED1FN019.png","start":11293007,"end":11293358},{"filename":"/edge_defs/graphics/edge1_font/ED1FN020.png","start":11293358,"end":11293677},{"filename":"/edge_defs/graphics/edge1_font/ED1FN021.png","start":11293677,"end":11294023},{"filename":"/edge_defs/graphics/edge1_font/ED1FN022.png","start":11294023,"end":11294352},{"filename":"/edge_defs/graphics/edge1_font/ED1FN023.png","start":11294352,"end":11294707},{"filename":"/edge_defs/graphics/edge1_font/ED1FN024.png","start":11294707,"end":11295058},{"filename":"/edge_defs/graphics/edge1_font/ED1FN025.png","start":11295058,"end":11295407},{"filename":"/edge_defs/graphics/edge1_font/ED1FN026.png","start":11295407,"end":11295745},{"filename":"/edge_defs/graphics/edge1_font/ED1FN027.png","start":11295745,"end":11296034},{"filename":"/edge_defs/graphics/edge1_font/ED1FN028.png","start":11296034,"end":11296348},{"filename":"/edge_defs/graphics/edge1_font/ED1FN029.png","start":11296348,"end":11296591},{"filename":"/edge_defs/graphics/edge1_font/ED1FN030.png","start":11296591,"end":11296834},{"filename":"/edge_defs/graphics/edge1_font/ED1FN031.png","start":11296834,"end":11297100},{"filename":"/edge_defs/graphics/edge1_font/ED1FN032.png","start":11297100,"end":11297333},{"filename":"/edge_defs/graphics/edge1_font/ED1FN033.png","start":11297333,"end":11297671},{"filename":"/edge_defs/graphics/edge1_font/ED1FN034.png","start":11297671,"end":11297964},{"filename":"/edge_defs/graphics/edge1_font/ED1FN035.png","start":11297964,"end":11298302},{"filename":"/edge_defs/graphics/edge1_font/ED1FN036.png","start":11298302,"end":11298631},{"filename":"/edge_defs/graphics/edge1_font/ED1FN037.png","start":11298631,"end":11298960},{"filename":"/edge_defs/graphics/edge1_font/ED1FN038.png","start":11298960,"end":11299293},{"filename":"/edge_defs/graphics/edge1_font/ED1FN039.png","start":11299293,"end":11299629},{"filename":"/edge_defs/graphics/edge1_font/ED1FN040.png","start":11299629,"end":11299926},{"filename":"/edge_defs/graphics/edge1_font/ED1FN041.png","start":11299926,"end":11300266},{"filename":"/edge_defs/graphics/edge1_font/ED1FN042.png","start":11300266,"end":11300606},{"filename":"/edge_defs/graphics/edge1_font/ED1FN043.png","start":11300606,"end":11300841},{"filename":"/edge_defs/graphics/edge1_font/ED1FN044.png","start":11300841,"end":11301161},{"filename":"/edge_defs/graphics/edge1_font/ED1FN045.png","start":11301161,"end":11301445},{"filename":"/edge_defs/graphics/edge1_font/ED1FN046.png","start":11301445,"end":11301775},{"filename":"/edge_defs/graphics/edge1_font/ED1FN047.png","start":11301775,"end":11302113},{"filename":"/edge_defs/graphics/edge1_font/ED1FN048.png","start":11302113,"end":11302428},{"filename":"/edge_defs/graphics/edge1_font/ED1FN049.png","start":11302428,"end":11302757},{"filename":"/edge_defs/graphics/edge1_font/ED1FN050.png","start":11302757,"end":11303079},{"filename":"/edge_defs/graphics/edge1_font/ED1FN051.png","start":11303079,"end":11303396},{"filename":"/edge_defs/graphics/edge1_font/ED1FN052.png","start":11303396,"end":11303735},{"filename":"/edge_defs/graphics/edge1_font/ED1FN053.png","start":11303735,"end":11304055},{"filename":"/edge_defs/graphics/edge1_font/ED1FN054.png","start":11304055,"end":11304329},{"filename":"/edge_defs/graphics/edge1_font/ED1FN055.png","start":11304329,"end":11304636},{"filename":"/edge_defs/graphics/edge1_font/ED1FN056.png","start":11304636,"end":11304981},{"filename":"/edge_defs/graphics/edge1_font/ED1FN057.png","start":11304981,"end":11305279},{"filename":"/edge_defs/graphics/edge1_font/ED1FN058.png","start":11305279,"end":11305633},{"filename":"/edge_defs/graphics/edge1_font/ED1FN059.png","start":11305633,"end":11305972},{"filename":"/edge_defs/graphics/edge1_font/ED1FN060.png","start":11305972,"end":11306311},{"filename":"/edge_defs/graphics/edge1_font/ED1FN061.png","start":11306311,"end":11306635},{"filename":"/edge_defs/graphics/edge1_font/ED1FN062.png","start":11306635,"end":11306975},{"filename":"/edge_defs/graphics/edge1_font/ED1FN063.png","start":11306975,"end":11307300},{"filename":"/edge_defs/graphics/edge1_font/ED1FN064.png","start":11307300,"end":11307639},{"filename":"/edge_defs/graphics/edge1_font/ED1FN065.png","start":11307639,"end":11307945},{"filename":"/edge_defs/graphics/edge1_font/ED1FN066.png","start":11307945,"end":11308279},{"filename":"/edge_defs/graphics/edge1_font/ED1FN067.png","start":11308279,"end":11308611},{"filename":"/edge_defs/graphics/edge1_font/ED1FN068.png","start":11308611,"end":11308959},{"filename":"/edge_defs/graphics/edge1_font/ED1FN069.png","start":11308959,"end":11309300},{"filename":"/edge_defs/graphics/edge1_font/ED1FN070.png","start":11309300,"end":11309625},{"filename":"/edge_defs/graphics/edge1_font/ED1FN071.png","start":11309625,"end":11309957},{"filename":"/edge_defs/graphics/edge1_font/ED1FN072.png","start":11309957,"end":11310286},{"filename":"/edge_defs/graphics/edge1_font/ED1FN073.png","start":11310286,"end":11310520},{"filename":"/edge_defs/graphics/edge1_font/ED1FN074.png","start":11310520,"end":11310766},{"filename":"/edge_defs/graphics/edge1_font/ED1FN075.png","start":11310766,"end":11311092},{"filename":"/edge_defs/graphics/edge1_font/ED1FN076.png","start":11311092,"end":11311379},{"filename":"/edge_defs/graphics/edge1_font/ED1FN077.png","start":11311379,"end":11311697},{"filename":"/edge_defs/graphics/edge1_font/ED1FN078.png","start":11311697,"end":11312017},{"filename":"/edge_defs/graphics/edge1_font/ED1FN079.png","start":11312017,"end":11312328},{"filename":"/edge_defs/graphics/edge1_font/ED1FN080.png","start":11312328,"end":11312645},{"filename":"/edge_defs/graphics/edge1_font/ED1FN081.png","start":11312645,"end":11312960},{"filename":"/edge_defs/graphics/edge1_font/ED1FN082.png","start":11312960,"end":11313262},{"filename":"/edge_defs/graphics/edge1_font/ED1FN083.png","start":11313262,"end":11313590},{"filename":"/edge_defs/graphics/edge1_font/ED1FN084.png","start":11313590,"end":11313922},{"filename":"/edge_defs/graphics/edge1_font/ED1FN085.png","start":11313922,"end":11314170},{"filename":"/edge_defs/graphics/edge1_font/ED1FN086.png","start":11314170,"end":11314421},{"filename":"/edge_defs/graphics/overlays/overlay_grill_1x.png","start":11314421,"end":11321757},{"filename":"/edge_defs/graphics/overlays/overlay_grill_2x.png","start":11321757,"end":11329146},{"filename":"/edge_defs/graphics/overlays/overlay_lines_1x.png","start":11329146,"end":11329310},{"filename":"/edge_defs/graphics/overlays/overlay_lines_2x.png","start":11329310,"end":11329484},{"filename":"/edge_defs/graphics/overlays/overlay_vertical_1x.png","start":11329484,"end":11336787},{"filename":"/edge_defs/graphics/overlays/overlay_vertical_2x.png","start":11336787,"end":11344122},{"filename":"/edge_defs/scripts/anims.ddf","start":11344122,"end":11346150},{"filename":"/edge_defs/scripts/attacks.ddf","start":11346150,"end":11370452},{"filename":"/edge_defs/scripts/coal_api.ec","start":11370452,"end":11385117},{"filename":"/edge_defs/scripts/coal_hud.ec","start":11385117,"end":11402177},{"filename":"/edge_defs/scripts/colmap.ddf","start":11402177,"end":11406278},{"filename":"/edge_defs/scripts/flats.ddf","start":11406278,"end":11411555},{"filename":"/edge_defs/scripts/fonts.ddf","start":11411555,"end":11413187},{"filename":"/edge_defs/scripts/games.ddf","start":11413187,"end":11417806},{"filename":"/edge_defs/scripts/images.ddf","start":11417806,"end":11436662},{"filename":"/edge_defs/scripts/language.ldf","start":11436662,"end":11552168},{"filename":"/edge_defs/scripts/levels.ddf","start":11552168,"end":11569396},{"filename":"/edge_defs/scripts/lines.ddf","start":11569396,"end":11663353},{"filename":"/edge_defs/scripts/playlist.ddf","start":11663353,"end":11666171},{"filename":"/edge_defs/scripts/rscript.rts","start":11666171,"end":11667774},{"filename":"/edge_defs/scripts/sectors.ddf","start":11667774,"end":11684264},{"filename":"/edge_defs/scripts/sounds.ddf","start":11684264,"end":11695116},{"filename":"/edge_defs/scripts/styles.ddf","start":11695116,"end":11701031},{"filename":"/edge_defs/scripts/switch.ddf","start":11701031,"end":11705082},{"filename":"/edge_defs/scripts/things.ddf","start":11705082,"end":11851883},{"filename":"/edge_defs/scripts/wadfixes.ddf","start":11851883,"end":11852782},{"filename":"/edge_defs/scripts/weapons.ddf","start":11852782,"end":11858266},{"filename":"/edge_defs/sounds/DPBAREXP.lmp","start":11858266,"end":11858349},{"filename":"/edge_defs/sounds/DPBDCLS.lmp","start":11858349,"end":11858395},{"filename":"/edge_defs/sounds/DPBDOPN.lmp","start":11858395,"end":11858436},{"filename":"/edge_defs/sounds/DPBFG.lmp","start":11858436,"end":11858624},{"filename":"/edge_defs/sounds/DPBGACT.lmp","start":11858624,"end":11858723},{"filename":"/edge_defs/sounds/DPBGDTH1.lmp","start":11858723,"end":11858812},{"filename":"/edge_defs/sounds/DPBGDTH2.lmp","start":11858812,"end":11858901},{"filename":"/edge_defs/sounds/DPBGSIT1.lmp","start":11858901,"end":11859012},{"filename":"/edge_defs/sounds/DPBGSIT2.lmp","start":11859012,"end":11859123},{"filename":"/edge_defs/sounds/DPBOSCUB.lmp","start":11859123,"end":11859159},{"filename":"/edge_defs/sounds/DPBOSDTH.lmp","start":11859159,"end":11859438},{"filename":"/edge_defs/sounds/DPBOSPIT.lmp","start":11859438,"end":11859483},{"filename":"/edge_defs/sounds/DPBOSPN.lmp","start":11859483,"end":11859521},{"filename":"/edge_defs/sounds/DPBOSSIT.lmp","start":11859521,"end":11859655},{"filename":"/edge_defs/sounds/DPBRSDTH.lmp","start":11859655,"end":11859767},{"filename":"/edge_defs/sounds/DPBRSSIT.lmp","start":11859767,"end":11859875},{"filename":"/edge_defs/sounds/DPBSPACT.lmp","start":11859875,"end":11859931},{"filename":"/edge_defs/sounds/DPBSPDTH.lmp","start":11859931,"end":11860022},{"filename":"/edge_defs/sounds/DPBSPSIT.lmp","start":11860022,"end":11860161},{"filename":"/edge_defs/sounds/DPBSPWLK.lmp","start":11860161,"end":11860206},{"filename":"/edge_defs/sounds/DPCACDTH.lmp","start":11860206,"end":11860295},{"filename":"/edge_defs/sounds/DPCACSIT.lmp","start":11860295,"end":11860407},{"filename":"/edge_defs/sounds/DPCLAW.lmp","start":11860407,"end":11860453},{"filename":"/edge_defs/sounds/DPCYBDTH.lmp","start":11860453,"end":11860590},{"filename":"/edge_defs/sounds/DPCYBSIT.lmp","start":11860590,"end":11860739},{"filename":"/edge_defs/sounds/DPDBCLS.lmp","start":11860739,"end":11860750},{"filename":"/edge_defs/sounds/DPDBLOAD.lmp","start":11860750,"end":11860761},{"filename":"/edge_defs/sounds/DPDBOPN.lmp","start":11860761,"end":11860772},{"filename":"/edge_defs/sounds/DPDMACT.lmp","start":11860772,"end":11860799},{"filename":"/edge_defs/sounds/DPDMPAIN.lmp","start":11860799,"end":11860840},{"filename":"/edge_defs/sounds/DPDORCLS.lmp","start":11860840,"end":11860911},{"filename":"/edge_defs/sounds/DPDOROPN.lmp","start":11860911,"end":11860984},{"filename":"/edge_defs/sounds/DPDSHTGN.lmp","start":11860984,"end":11861027},{"filename":"/edge_defs/sounds/DPFIRSHT.lmp","start":11861027,"end":11861062},{"filename":"/edge_defs/sounds/DPFIRXPL.lmp","start":11861062,"end":11861079},{"filename":"/edge_defs/sounds/DPFLAME.lmp","start":11861079,"end":11861156},{"filename":"/edge_defs/sounds/DPFLAMST.lmp","start":11861156,"end":11861170},{"filename":"/edge_defs/sounds/DPGETPOW.lmp","start":11861170,"end":11861307},{"filename":"/edge_defs/sounds/DPHOOF.lmp","start":11861307,"end":11861387},{"filename":"/edge_defs/sounds/DPITEMUP.lmp","start":11861387,"end":11861474},{"filename":"/edge_defs/sounds/DPITMBK.lmp","start":11861474,"end":11861559},{"filename":"/edge_defs/sounds/DPKEENDT.lmp","start":11861559,"end":11861665},{"filename":"/edge_defs/sounds/DPKEENPN.lmp","start":11861665,"end":11861721},{"filename":"/edge_defs/sounds/DPKNTDTH.lmp","start":11861721,"end":11861844},{"filename":"/edge_defs/sounds/DPKNTSIT.lmp","start":11861844,"end":11861910},{"filename":"/edge_defs/sounds/DPMANATK.lmp","start":11861910,"end":11861976},{"filename":"/edge_defs/sounds/DPMANDTH.lmp","start":11861976,"end":11862054},{"filename":"/edge_defs/sounds/DPMANSIT.lmp","start":11862054,"end":11862151},{"filename":"/edge_defs/sounds/DPMETAL.lmp","start":11862151,"end":11862170},{"filename":"/edge_defs/sounds/DPMNPAIN.lmp","start":11862170,"end":11862230},{"filename":"/edge_defs/sounds/DPNOWAY.lmp","start":11862230,"end":11862271},{"filename":"/edge_defs/sounds/DPOOF.lmp","start":11862271,"end":11862290},{"filename":"/edge_defs/sounds/DPPDIEHI.lmp","start":11862290,"end":11862368},{"filename":"/edge_defs/sounds/DPPEDTH.lmp","start":11862368,"end":11862477},{"filename":"/edge_defs/sounds/DPPEPAIN.lmp","start":11862477,"end":11862527},{"filename":"/edge_defs/sounds/DPPESIT.lmp","start":11862527,"end":11862644},{"filename":"/edge_defs/sounds/DPPISTOL.lmp","start":11862644,"end":11862662},{"filename":"/edge_defs/sounds/DPPLASMA.lmp","start":11862662,"end":11862704},{"filename":"/edge_defs/sounds/DPPLDETH.lmp","start":11862704,"end":11862853},{"filename":"/edge_defs/sounds/DPPLPAIN.lmp","start":11862853,"end":11862883},{"filename":"/edge_defs/sounds/DPPODTH1.lmp","start":11862883,"end":11862972},{"filename":"/edge_defs/sounds/DPPODTH2.lmp","start":11862972,"end":11863061},{"filename":"/edge_defs/sounds/DPPODTH3.lmp","start":11863061,"end":11863150},{"filename":"/edge_defs/sounds/DPPOPAIN.lmp","start":11863150,"end":11863188},{"filename":"/edge_defs/sounds/DPPOSACT.lmp","start":11863188,"end":11863218},{"filename":"/edge_defs/sounds/DPPOSIT1.lmp","start":11863218,"end":11863329},{"filename":"/edge_defs/sounds/DPPOSIT2.lmp","start":11863329,"end":11863440},{"filename":"/edge_defs/sounds/DPPOSIT3.lmp","start":11863440,"end":11863551},{"filename":"/edge_defs/sounds/DPPSTART.lmp","start":11863551,"end":11863592},{"filename":"/edge_defs/sounds/DPPSTOP.lmp","start":11863592,"end":11863609},{"filename":"/edge_defs/sounds/DPPUNCH.lmp","start":11863609,"end":11863646},{"filename":"/edge_defs/sounds/DPRADIO.lmp","start":11863646,"end":11863698},{"filename":"/edge_defs/sounds/DPRLAUNC.lmp","start":11863698,"end":11863761},{"filename":"/edge_defs/sounds/DPRXPLOD.lmp","start":11863761,"end":11863933},{"filename":"/edge_defs/sounds/DPSAWFUL.lmp","start":11863933,"end":11863961},{"filename":"/edge_defs/sounds/DPSAWHIT.lmp","start":11863961,"end":11863989},{"filename":"/edge_defs/sounds/DPSAWIDL.lmp","start":11863989,"end":11863994},{"filename":"/edge_defs/sounds/DPSAWUP.lmp","start":11863994,"end":11864082},{"filename":"/edge_defs/sounds/DPSGCOCK.lmp","start":11864082,"end":11864145},{"filename":"/edge_defs/sounds/DPSGTATK.lmp","start":11864145,"end":11864219},{"filename":"/edge_defs/sounds/DPSGTDTH.lmp","start":11864219,"end":11864308},{"filename":"/edge_defs/sounds/DPSGTSIT.lmp","start":11864308,"end":11864419},{"filename":"/edge_defs/sounds/DPSHOTGN.lmp","start":11864419,"end":11864461},{"filename":"/edge_defs/sounds/DPSKEACT.lmp","start":11864461,"end":11864501},{"filename":"/edge_defs/sounds/DPSKEATK.lmp","start":11864501,"end":11864560},{"filename":"/edge_defs/sounds/DPSKEDTH.lmp","start":11864560,"end":11864640},{"filename":"/edge_defs/sounds/DPSKEPCH.lmp","start":11864640,"end":11864677},{"filename":"/edge_defs/sounds/DPSKESIT.lmp","start":11864677,"end":11864783},{"filename":"/edge_defs/sounds/DPSKESWG.lmp","start":11864783,"end":11864823},{"filename":"/edge_defs/sounds/DPSKLATK.lmp","start":11864823,"end":11864903},{"filename":"/edge_defs/sounds/DPSKLDTH.lmp","start":11864903,"end":11864920},{"filename":"/edge_defs/sounds/DPSLOP.lmp","start":11864920,"end":11865029},{"filename":"/edge_defs/sounds/DPSPIDTH.lmp","start":11865029,"end":11865142},{"filename":"/edge_defs/sounds/DPSPISIT.lmp","start":11865142,"end":11865290},{"filename":"/edge_defs/sounds/DPSSDTH.lmp","start":11865290,"end":11865379},{"filename":"/edge_defs/sounds/DPSSSIT.lmp","start":11865379,"end":11865490},{"filename":"/edge_defs/sounds/DPSTNMOV.lmp","start":11865490,"end":11865498},{"filename":"/edge_defs/sounds/DPSWTCHN.lmp","start":11865498,"end":11865526},{"filename":"/edge_defs/sounds/DPSWTCHX.lmp","start":11865526,"end":11865555},{"filename":"/edge_defs/sounds/DPTELEPT.lmp","start":11865555,"end":11865657},{"filename":"/edge_defs/sounds/DPTINK.lmp","start":11865657,"end":11865709},{"filename":"/edge_defs/sounds/DPVILACT.lmp","start":11865709,"end":11865764},{"filename":"/edge_defs/sounds/DPVILATK.lmp","start":11865764,"end":11865827},{"filename":"/edge_defs/sounds/DPVILDTH.lmp","start":11865827,"end":11866095},{"filename":"/edge_defs/sounds/DPVILSIT.lmp","start":11866095,"end":11866171},{"filename":"/edge_defs/sounds/DPVIPAIN.lmp","start":11866171,"end":11866282},{"filename":"/edge_defs/sounds/DPWPNUP.lmp","start":11866282,"end":11866326},{"filename":"/edge_defs/sounds/DSACIDFT.ogg","start":11866326,"end":11873876,"audio":1},{"filename":"/edge_defs/sounds/DSCRUSH.lmp","start":11873876,"end":11880894},{"filename":"/edge_defs/sounds/DSDGACT.ogg","start":11880894,"end":11888555,"audio":1},{"filename":"/edge_defs/sounds/DSDGATK.ogg","start":11888555,"end":11895361,"audio":1},{"filename":"/edge_defs/sounds/DSDGDTH.ogg","start":11895361,"end":11906177,"audio":1},{"filename":"/edge_defs/sounds/DSDGPAIN.ogg","start":11906177,"end":11912169,"audio":1},{"filename":"/edge_defs/sounds/DSDGSIT.ogg","start":11912169,"end":11918332,"audio":1},{"filename":"/edge_defs/sounds/DSFSWAT1.wav","start":11918332,"end":11933676,"audio":1},{"filename":"/edge_defs/sounds/DSFSWAT2.wav","start":11933676,"end":11949148,"audio":1},{"filename":"/edge_defs/sounds/DSFSWAT3.wav","start":11949148,"end":11961388,"audio":1},{"filename":"/edge_defs/sounds/DSFSWAT4.wav","start":11961388,"end":11976754,"audio":1},{"filename":"/edge_defs/sounds/DSGLSBRK.wav","start":11976754,"end":12009352,"audio":1},{"filename":"/edge_defs/sounds/DSJPDOWN.lmp","start":12009352,"end":12025940},{"filename":"/edge_defs/sounds/DSJPFLOW.lmp","start":12025940,"end":12029862},{"filename":"/edge_defs/sounds/DSJPIDLE.lmp","start":12029862,"end":12032829},{"filename":"/edge_defs/sounds/DSJPMOVE.lmp","start":12032829,"end":12034246},{"filename":"/edge_defs/sounds/DSJPRISE.lmp","start":12034246,"end":12042066},{"filename":"/edge_defs/sounds/DSMUCKFT.ogg","start":12042066,"end":12048140,"audio":1},{"filename":"/edge_defs/sounds/DSSECRET.ogg","start":12048140,"end":12060981,"audio":1},{"filename":"/edge_defs/sounds/DSWATRFT.ogg","start":12060981,"end":12068642,"audio":1},{"filename":"/edge_defs/sounds/DSWTDIVE.wav","start":12068642,"end":12091118,"audio":1},{"filename":"/edge_defs/sounds/HEARTBT1.ogg","start":12091118,"end":12111473,"audio":1},{"filename":"/edge_defs/sprites/ARM3A0.png","start":12111473,"end":12112223},{"filename":"/edge_defs/sprites/ARM3B0.png","start":12112223,"end":12112901},{"filename":"/edge_defs/sprites/ARM4A0.png","start":12112901,"end":12113695},{"filename":"/edge_defs/sprites/ARM4B0.png","start":12113695,"end":12114396},{"filename":"/edge_defs/sprites/ARM5A0.png","start":12114396,"end":12114899},{"filename":"/edge_defs/sprites/ARM5B0.png","start":12114899,"end":12115414},{"filename":"/edge_defs/sprites/BSPHA0.png","start":12115414,"end":12116630},{"filename":"/edge_defs/sprites/BSPHB0.png","start":12116630,"end":12117851},{"filename":"/edge_defs/sprites/BSPHC0.png","start":12117851,"end":12119061},{"filename":"/edge_defs/sprites/BSPHD0.png","start":12119061,"end":12120262},{"filename":"/edge_defs/sprites/BSPHE0.png","start":12120262,"end":12121543},{"filename":"/edge_defs/sprites/BSPHF0.png","start":12121543,"end":12122886},{"filename":"/edge_defs/sprites/BSPHG0.png","start":12122886,"end":12124290},{"filename":"/edge_defs/sprites/BSPHH0.png","start":12124290,"end":12125635},{"filename":"/edge_defs/sprites/BSPHI0.png","start":12125635,"end":12126942},{"filename":"/edge_defs/sprites/BSPHJ0.png","start":12126942,"end":12128209},{"filename":"/edge_defs/sprites/BSPHK0.png","start":12128209,"end":12129446},{"filename":"/edge_defs/sprites/GLS1A0.lmp","start":12129446,"end":12129540},{"filename":"/edge_defs/sprites/GLS2A0.lmp","start":12129540,"end":12129754},{"filename":"/edge_defs/sprites/GLS3A0.lmp","start":12129754,"end":12130058},{"filename":"/edge_defs/sprites/GLS4A0.lmp","start":12130058,"end":12130426},{"filename":"/edge_defs/sprites/GLS5A0.lmp","start":12130426,"end":12130821},{"filename":"/edge_defs/sprites/GLS6A0.lmp","start":12130821,"end":12131257},{"filename":"/edge_defs/sprites/GLS7A0.lmp","start":12131257,"end":12131727},{"filename":"/edge_defs/sprites/GLS8A0.lmp","start":12131727,"end":12132159},{"filename":"/edge_defs/sprites/GLS9A0.lmp","start":12132159,"end":12132522},{"filename":"/edge_defs/sprites/JPCKA0.lmp","start":12132522,"end":12133338},{"filename":"/edge_defs/sprites/JPCKB0.lmp","start":12133338,"end":12134156},{"filename":"/edge_defs/sprites/JPCKC0.lmp","start":12134156,"end":12134974},{"filename":"/edge_defs/sprites/LVASA0.png","start":12134974,"end":12136272},{"filename":"/edge_defs/sprites/LVASB0.png","start":12136272,"end":12137655},{"filename":"/edge_defs/sprites/LVASC0.png","start":12137655,"end":12139009},{"filename":"/edge_defs/sprites/LVASD0.png","start":12139009,"end":12140309},{"filename":"/edge_defs/sprites/LVASE0.png","start":12140309,"end":12141578},{"filename":"/edge_defs/sprites/LVASF0.png","start":12141578,"end":12142801},{"filename":"/edge_defs/sprites/MUDSA0.png","start":12142801,"end":12144011},{"filename":"/edge_defs/sprites/MUDSB0.png","start":12144011,"end":12145223},{"filename":"/edge_defs/sprites/MUDSC0.png","start":12145223,"end":12146414},{"filename":"/edge_defs/sprites/MUDSD0.png","start":12146414,"end":12147599},{"filename":"/edge_defs/sprites/MUDSE0.png","start":12147599,"end":12148850},{"filename":"/edge_defs/sprites/MUDSF0.png","start":12148850,"end":12150091},{"filename":"/edge_defs/sprites/MUDSG0.png","start":12150091,"end":12151340},{"filename":"/edge_defs/sprites/MUDSH0.png","start":12151340,"end":12152562},{"filename":"/edge_defs/sprites/NVSCA0.lmp","start":12152562,"end":12153166},{"filename":"/edge_defs/sprites/NVSCB0.lmp","start":12153166,"end":12153770},{"filename":"/edge_defs/sprites/PLAYX1.lmp","start":12153770,"end":12154693},{"filename":"/edge_defs/sprites/PLAYX2X8.lmp","start":12154693,"end":12155909},{"filename":"/edge_defs/sprites/PLAYX3X7.lmp","start":12155909,"end":12157304},{"filename":"/edge_defs/sprites/PLAYX4X6.lmp","start":12157304,"end":12158433},{"filename":"/edge_defs/sprites/PLAYX5.lmp","start":12158433,"end":12159235},{"filename":"/edge_defs/sprites/PLAYY1.lmp","start":12159235,"end":12160183},{"filename":"/edge_defs/sprites/PLAYY2Y8.lmp","start":12160183,"end":12161411},{"filename":"/edge_defs/sprites/PLAYY3Y7.lmp","start":12161411,"end":12162797},{"filename":"/edge_defs/sprites/PLAYY4Y6.lmp","start":12162797,"end":12163935},{"filename":"/edge_defs/sprites/PLAYY5.lmp","start":12163935,"end":12164732},{"filename":"/edge_defs/sprites/PLS1A0.lmp","start":12164732,"end":12165117},{"filename":"/edge_defs/sprites/PLS1B0.lmp","start":12165117,"end":12165516},{"filename":"/edge_defs/sprites/PLS1C0.lmp","start":12165516,"end":12165901},{"filename":"/edge_defs/sprites/PLS1D0.lmp","start":12165901,"end":12166300},{"filename":"/edge_defs/sprites/PLS1E0.lmp","start":12166300,"end":12168658},{"filename":"/edge_defs/sprites/PLS1F0.lmp","start":12168658,"end":12171016},{"filename":"/edge_defs/sprites/PLS1G0.lmp","start":12171016,"end":12173243},{"filename":"/edge_defs/sprites/PLS2A0.lmp","start":12173243,"end":12173459},{"filename":"/edge_defs/sprites/PLS2B0.lmp","start":12173459,"end":12173702},{"filename":"/edge_defs/sprites/PLS2C0.lmp","start":12173702,"end":12173914},{"filename":"/edge_defs/sprites/PLS2D0.lmp","start":12173914,"end":12174304},{"filename":"/edge_defs/sprites/PLS2E0.lmp","start":12174304,"end":12174998},{"filename":"/edge_defs/sprites/PRT1A0.png","start":12174998,"end":12175870},{"filename":"/edge_defs/sprites/PRT2A0.png","start":12175870,"end":12176742},{"filename":"/edge_defs/sprites/PRT3A0.png","start":12176742,"end":12176871},{"filename":"/edge_defs/sprites/SLDGA0.png","start":12176871,"end":12178087},{"filename":"/edge_defs/sprites/SLDGB0.png","start":12178087,"end":12179305},{"filename":"/edge_defs/sprites/SLDGC0.png","start":12179305,"end":12180501},{"filename":"/edge_defs/sprites/SLDGD0.png","start":12180501,"end":12181688},{"filename":"/edge_defs/sprites/SLDGE0.png","start":12181688,"end":12182939},{"filename":"/edge_defs/sprites/SLDGF0.png","start":12182939,"end":12184180},{"filename":"/edge_defs/sprites/SLDGG0.png","start":12184180,"end":12185429},{"filename":"/edge_defs/sprites/SLDGH0.png","start":12185429,"end":12186651},{"filename":"/edge_defs/sprites/SLIMA0.png","start":12186651,"end":12187852},{"filename":"/edge_defs/sprites/SLIMB0.png","start":12187852,"end":12189057},{"filename":"/edge_defs/sprites/SLIMC0.png","start":12189057,"end":12190244},{"filename":"/edge_defs/sprites/SLIMD0.png","start":12190244,"end":12191422},{"filename":"/edge_defs/sprites/SLIME0.png","start":12191422,"end":12192667},{"filename":"/edge_defs/sprites/SLIMF0.png","start":12192667,"end":12193903},{"filename":"/edge_defs/sprites/SLIMG0.png","start":12193903,"end":12195148},{"filename":"/edge_defs/sprites/SLIMH0.png","start":12195148,"end":12196364},{"filename":"/edge_defs/sprites/SPSHA0.png","start":12196364,"end":12197581},{"filename":"/edge_defs/sprites/SPSHB0.png","start":12197581,"end":12198801},{"filename":"/edge_defs/sprites/SPSHC0.png","start":12198801,"end":12200012},{"filename":"/edge_defs/sprites/SPSHD0.png","start":12200012,"end":12201213},{"filename":"/edge_defs/sprites/SPSHE0.png","start":12201213,"end":12202493},{"filename":"/edge_defs/sprites/SPSHF0.png","start":12202493,"end":12203844},{"filename":"/edge_defs/sprites/SPSHG0.png","start":12203844,"end":12205251},{"filename":"/edge_defs/sprites/SPSHH0.png","start":12205251,"end":12206603},{"filename":"/edge_defs/sprites/SPSHI0.png","start":12206603,"end":12207914},{"filename":"/edge_defs/sprites/SPSHJ0.png","start":12207914,"end":12209182},{"filename":"/edge_defs/sprites/SPSHK0.png","start":12209182,"end":12210419},{"filename":"/edge_defs/sprites/TSTPA0.png","start":12210419,"end":12211544},{"filename":"/edge_defs/sprites/TSTPB0.lmp","start":12211544,"end":12211886},{"filename":"/edge_defs/sprites/mbf_dog/MBFDA1.png","start":12211886,"end":12213166},{"filename":"/edge_defs/sprites/mbf_dog/MBFDA2.png","start":12213166,"end":12214719},{"filename":"/edge_defs/sprites/mbf_dog/MBFDA3.png","start":12214719,"end":12216350},{"filename":"/edge_defs/sprites/mbf_dog/MBFDA4.png","start":12216350,"end":12217883},{"filename":"/edge_defs/sprites/mbf_dog/MBFDA5.png","start":12217883,"end":12219069},{"filename":"/edge_defs/sprites/mbf_dog/MBFDA6.png","start":12219069,"end":12220585},{"filename":"/edge_defs/sprites/mbf_dog/MBFDA7.png","start":12220585,"end":12222178},{"filename":"/edge_defs/sprites/mbf_dog/MBFDA8.png","start":12222178,"end":12223696},{"filename":"/edge_defs/sprites/mbf_dog/MBFDB1.png","start":12223696,"end":12224926},{"filename":"/edge_defs/sprites/mbf_dog/MBFDB2.png","start":12224926,"end":12226446},{"filename":"/edge_defs/sprites/mbf_dog/MBFDB3.png","start":12226446,"end":12228053},{"filename":"/edge_defs/sprites/mbf_dog/MBFDB4.png","start":12228053,"end":12229586},{"filename":"/edge_defs/sprites/mbf_dog/MBFDB5.png","start":12229586,"end":12230796},{"filename":"/edge_defs/sprites/mbf_dog/MBFDB6.png","start":12230796,"end":12232294},{"filename":"/edge_defs/sprites/mbf_dog/MBFDB7.png","start":12232294,"end":12233886},{"filename":"/edge_defs/sprites/mbf_dog/MBFDB8.png","start":12233886,"end":12235400},{"filename":"/edge_defs/sprites/mbf_dog/MBFDC1.png","start":12235400,"end":12236697},{"filename":"/edge_defs/sprites/mbf_dog/MBFDC2.png","start":12236697,"end":12238203},{"filename":"/edge_defs/sprites/mbf_dog/MBFDC3.png","start":12238203,"end":12239774},{"filename":"/edge_defs/sprites/mbf_dog/MBFDC4.png","start":12239774,"end":12241305},{"filename":"/edge_defs/sprites/mbf_dog/MBFDC5.png","start":12241305,"end":12242642},{"filename":"/edge_defs/sprites/mbf_dog/MBFDC6.png","start":12242642,"end":12244162},{"filename":"/edge_defs/sprites/mbf_dog/MBFDC7.png","start":12244162,"end":12245698},{"filename":"/edge_defs/sprites/mbf_dog/MBFDC8.png","start":12245698,"end":12247187},{"filename":"/edge_defs/sprites/mbf_dog/MBFDD1.png","start":12247187,"end":12248498},{"filename":"/edge_defs/sprites/mbf_dog/MBFDD2.png","start":12248498,"end":12250016},{"filename":"/edge_defs/sprites/mbf_dog/MBFDD3.png","start":12250016,"end":12251604},{"filename":"/edge_defs/sprites/mbf_dog/MBFDD4.png","start":12251604,"end":12253129},{"filename":"/edge_defs/sprites/mbf_dog/MBFDD5.png","start":12253129,"end":12254455},{"filename":"/edge_defs/sprites/mbf_dog/MBFDD6.png","start":12254455,"end":12255997},{"filename":"/edge_defs/sprites/mbf_dog/MBFDD7.png","start":12255997,"end":12257570},{"filename":"/edge_defs/sprites/mbf_dog/MBFDD8.png","start":12257570,"end":12259073},{"filename":"/edge_defs/sprites/mbf_dog/MBFDE1.png","start":12259073,"end":12260435},{"filename":"/edge_defs/sprites/mbf_dog/MBFDE2.png","start":12260435,"end":12261952},{"filename":"/edge_defs/sprites/mbf_dog/MBFDE3.png","start":12261952,"end":12263500},{"filename":"/edge_defs/sprites/mbf_dog/MBFDE4.png","start":12263500,"end":12265098},{"filename":"/edge_defs/sprites/mbf_dog/MBFDE5.png","start":12265098,"end":12266536},{"filename":"/edge_defs/sprites/mbf_dog/MBFDE6.png","start":12266536,"end":12268086},{"filename":"/edge_defs/sprites/mbf_dog/MBFDE7.png","start":12268086,"end":12269640},{"filename":"/edge_defs/sprites/mbf_dog/MBFDE8.png","start":12269640,"end":12271199},{"filename":"/edge_defs/sprites/mbf_dog/MBFDF1.png","start":12271199,"end":12272596},{"filename":"/edge_defs/sprites/mbf_dog/MBFDF2.png","start":12272596,"end":12274167},{"filename":"/edge_defs/sprites/mbf_dog/MBFDF3.png","start":12274167,"end":12275769},{"filename":"/edge_defs/sprites/mbf_dog/MBFDF4.png","start":12275769,"end":12277335},{"filename":"/edge_defs/sprites/mbf_dog/MBFDF5.png","start":12277335,"end":12278738},{"filename":"/edge_defs/sprites/mbf_dog/MBFDF6.png","start":12278738,"end":12280255},{"filename":"/edge_defs/sprites/mbf_dog/MBFDF7.png","start":12280255,"end":12281851},{"filename":"/edge_defs/sprites/mbf_dog/MBFDF8.png","start":12281851,"end":12283459},{"filename":"/edge_defs/sprites/mbf_dog/MBFDG1.png","start":12283459,"end":12284848},{"filename":"/edge_defs/sprites/mbf_dog/MBFDG2.png","start":12284848,"end":12286436},{"filename":"/edge_defs/sprites/mbf_dog/MBFDG3.png","start":12286436,"end":12288080},{"filename":"/edge_defs/sprites/mbf_dog/MBFDG4.png","start":12288080,"end":12289600},{"filename":"/edge_defs/sprites/mbf_dog/MBFDG5.png","start":12289600,"end":12290950},{"filename":"/edge_defs/sprites/mbf_dog/MBFDG6.png","start":12290950,"end":12292471},{"filename":"/edge_defs/sprites/mbf_dog/MBFDG7.png","start":12292471,"end":12294093},{"filename":"/edge_defs/sprites/mbf_dog/MBFDG8.png","start":12294093,"end":12295663},{"filename":"/edge_defs/sprites/mbf_dog/MBFDH1.png","start":12295663,"end":12296973},{"filename":"/edge_defs/sprites/mbf_dog/MBFDH2.png","start":12296973,"end":12298504},{"filename":"/edge_defs/sprites/mbf_dog/MBFDH3.png","start":12298504,"end":12300096},{"filename":"/edge_defs/sprites/mbf_dog/MBFDH4.png","start":12300096,"end":12301579},{"filename":"/edge_defs/sprites/mbf_dog/MBFDH5.png","start":12301579,"end":12302873},{"filename":"/edge_defs/sprites/mbf_dog/MBFDH6.png","start":12302873,"end":12304340},{"filename":"/edge_defs/sprites/mbf_dog/MBFDH7.png","start":12304340,"end":12305918},{"filename":"/edge_defs/sprites/mbf_dog/MBFDH8.png","start":12305918,"end":12307487},{"filename":"/edge_defs/sprites/mbf_dog/MBFDI0.png","start":12307487,"end":12309177},{"filename":"/edge_defs/sprites/mbf_dog/MBFDJ0.png","start":12309177,"end":12310959},{"filename":"/edge_defs/sprites/mbf_dog/MBFDK0.png","start":12310959,"end":12312705},{"filename":"/edge_defs/sprites/mbf_dog/MBFDL0.png","start":12312705,"end":12314425},{"filename":"/edge_defs/sprites/mbf_dog/MBFDM0.png","start":12314425,"end":12316152},{"filename":"/edge_defs/sprites/mbf_dog/MBFDN0.png","start":12316152,"end":12317891},{"filename":"/edge_defs/textures/FUZZMAP8.png","start":12317891,"end":12332691},{"filename":"/edge_defs/textures/PORTAL7A.jpg","start":12332691,"end":12354809},{"filename":"/edge_defs/textures/PORTAL7B.jpg","start":12354809,"end":12373162},{"filename":"/edge_defs/textures/PORTAL7C.jpg","start":12373162,"end":12388653},{"filename":"/edge_defs/textures/PORTAL7D.jpg","start":12388653,"end":12403947},{"filename":"/edge_defs/textures/PORTAL7E.jpg","start":12403947,"end":12418814},{"filename":"/edge_defs/textures/PORTAL7F.jpg","start":12418814,"end":12435815},{"filename":"/edge_defs/textures/PORTAL7G.jpg","start":12435815,"end":12456523},{"filename":"/edge_defs/ttf/ECFONT01.ttf","start":12456523,"end":12520863},{"filename":"/edge_defs/version.txt","start":12520863,"end":12520867},{"filename":"/freedm.wad","start":12520867,"end":34345315},{"filename":"/freedoom2.wad","start":34345315,"end":62889447},{"filename":"/soundfont/Apogee.op2","start":62889447,"end":62901355},{"filename":"/soundfont/ChipFreak.sf2","start":62901355,"end":63010839},{"filename":"/soundfont/DMXOPL.op2","start":63010839,"end":63022747},{"filename":"/soundfont/Default.sf2","start":63022747,"end":67169187},{"filename":"/soundfont/ProtoSquare!.sf2","start":67169187,"end":67533425},{"filename":"/soundfont/microGM.sf2","start":67533425,"end":70163067}],"remote_package_size":51838184,"package_uuid":"sha256-12b8c2278ccd0f77ca93890212c92a9b18367eb92cb47d5caa87b33fa24926ee"});})();// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides=_extends({},Module);var arguments_=[];var thisProgram='./this.program';var quit_=function quit_(status,toThrow){throw toThrow;};// Determine the runtime environment we are in. You can customize this by
// setting the ENVIRONMENT setting at compile time (see settings.js).
var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;// `/` should be present at the end if `scriptDirectory` is not empty
var scriptDirectory='';function locateFile(path){if(Module['locateFile']){return Module['locateFile'](path,scriptDirectory);}return scriptDirectory+path;}// Hooks that are implemented differently in different runtime environments.
var read_,readAsync,readBinary;// Note that this includes Node.js workers when relevant (pthreads is enabled).
// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and
// ENVIRONMENT_IS_NODE.
if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){// Check worker, not web, since window could be polyfilled
scriptDirectory=self.location.href;}else if(typeof document!='undefined'&&document.currentScript){// web
scriptDirectory=document.currentScript.src;}// When MODULARIZE, this JS may be executed later, after document.currentScript
// is gone, so we saved it, and we use it here instead of any other info.
if(_scriptDir){scriptDirectory=_scriptDir;}// blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.
// otherwise, slice off the final part of the url to find the script directory.
// if scriptDirectory does not contain a slash, lastIndexOf will return -1,
// and scriptDirectory will correctly be replaced with an empty string.
// If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),
// they are removed because they could contain a slash.
if(scriptDirectory.indexOf('blob:')!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf('/')+1);}else{scriptDirectory='';}// Differentiate the Web Worker from the Node Worker case, as reading must
// be done differently.
{// include: web_or_worker_shell_read.js
read_=function read_(url){var xhr=new XMLHttpRequest();xhr.open('GET',url,false);xhr.send(null);return xhr.responseText;};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){var xhr=new XMLHttpRequest();xhr.open('GET',url,false);xhr.responseType='arraybuffer';xhr.send(null);return new Uint8Array(/** @type{!ArrayBuffer} */xhr.response);};}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='arraybuffer';xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){// file URLs can return 0
onload(xhr.response);return;}onerror();};xhr.onerror=onerror;xhr.send(null);};// end include: web_or_worker_shell_read.js
}}else{}var out=Module['print']||console.log.bind(console);var err=Module['printErr']||console.error.bind(console);// Merge back in the overrides
_extends(Module,moduleOverrides);// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides=null;// Emit code to handle expected values on the Module object. This applies Module.x
// to the proper local x. This has two benefits: first, we only emit it if it is
// expected to arrive, and second, by using a local everywhere else that can be
// minified.
if(Module['arguments'])arguments_=Module['arguments'];if(Module['thisProgram'])thisProgram=Module['thisProgram'];if(Module['quit'])quit_=Module['quit'];// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message
// end include: shell.js
// include: preamble.js
// === Preamble library stuff ===
// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html
var wasmBinary;if(Module['wasmBinary'])wasmBinary=Module['wasmBinary'];var noExitRuntime=Module['noExitRuntime']||true;if((typeof WebAssembly==="undefined"?"undefined":_typeof(WebAssembly))!='object'){abort('no native wasm support detected');}// Wasm globals
var wasmMemory;//========================================
// Runtime essentials
//========================================
// whether we are quitting the application. no code should run after this.
// set in exit() and abort()
var ABORT=false;// set by exit() and abort().  Passed to 'onExit' handler.
// NOTE: This is also used as the process return code code in shell environments
// but only when noExitRuntime is false.
var EXITSTATUS;/** @type {function(*, string=)} */function assert(condition,text){if(!condition){// This build was created without ASSERTIONS defined.  `assert()` should not
// ever be called in this configuration but in case there are callers in
// the wild leave this simple abort() implemenation here for now.
abort(text);}}// Memory management
var HEAP,/** @type {!Int8Array} */HEAP8,/** @type {!Uint8Array} */HEAPU8,/** @type {!Int16Array} */HEAP16,/** @type {!Uint16Array} */HEAPU16,/** @type {!Int32Array} */HEAP32,/** @type {!Uint32Array} */HEAPU32,/** @type {!Float32Array} */HEAPF32,/** @type {!Float64Array} */HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module['HEAP8']=HEAP8=new Int8Array(b);Module['HEAP16']=HEAP16=new Int16Array(b);Module['HEAPU8']=HEAPU8=new Uint8Array(b);Module['HEAPU16']=HEAPU16=new Uint16Array(b);Module['HEAP32']=HEAP32=new Int32Array(b);Module['HEAPU32']=HEAPU32=new Uint32Array(b);Module['HEAPF32']=HEAPF32=new Float32Array(b);Module['HEAPF64']=HEAPF64=new Float64Array(b);}// include: runtime_stack_check.js
// end include: runtime_stack_check.js
// include: runtime_assertions.js
// end include: runtime_assertions.js
var __ATPRERUN__=[];// functions called before the runtime is initialized
var __ATINIT__=[];// functions called during startup
var __ATMAIN__=[];// functions called when main() is to be run
var __ATEXIT__=[];// functions called during shutdown
var __ATPOSTRUN__=[];// functions called after the main() is called
var runtimeInitialized=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0;}function preRun(){if(Module['preRun']){if(typeof Module['preRun']=='function')Module['preRun']=[Module['preRun']];while(Module['preRun'].length){addOnPreRun(Module['preRun'].shift());}}callRuntimeCallbacks(__ATPRERUN__);}function initRuntime(){runtimeInitialized=true;if(!Module["noFSInit"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__);}function preMain(){callRuntimeCallbacks(__ATMAIN__);}function postRun(){if(Module['postRun']){if(typeof Module['postRun']=='function')Module['postRun']=[Module['postRun']];while(Module['postRun'].length){addOnPostRun(Module['postRun'].shift());}}callRuntimeCallbacks(__ATPOSTRUN__);}function addOnPreRun(cb){__ATPRERUN__.unshift(cb);}function addOnInit(cb){__ATINIT__.unshift(cb);}function addOnPreMain(cb){__ATMAIN__.unshift(cb);}function addOnExit(cb){}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb);}// include: runtime_math.js
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc
// end include: runtime_math.js
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// Module.preRun (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;// overridden to take different actions when all run dependencies are fulfilled
function getUniqueRunDependency(id){return id;}function addRunDependency(id){runDependencies++;if(Module['monitorRunDependencies']){Module['monitorRunDependencies'](runDependencies);}}function removeRunDependency(id){runDependencies--;if(Module['monitorRunDependencies']){Module['monitorRunDependencies'](runDependencies);}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null;}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback();// can add another dependenciesFulfilled
}}}/** @param {string|number=} what */function abort(what){if(Module['onAbort']){Module['onAbort'](what);}what='Aborted('+what+')';// TODO(sbc): Should we remove printing and leave it up to whoever
// catches the exception?
err(what);ABORT=true;EXITSTATUS=1;what+='. Build with -sASSERTIONS for more info.';// Use a wasm runtime error, because a JS error might be seen as a foreign
// exception, which means we'd run destructors on it. We need the error to
// simply make the program stop.
// FIXME This approach does not work in Wasm EH because it currently does not assume
// all RuntimeErrors are from traps; it decides whether a RuntimeError is from
// a trap or not based on a hidden field within the object. So at the moment
// we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that
// allows this in the wasm spec.
// Suppress closure compiler warning here. Closure compiler's builtin extern
// defintion for WebAssembly.RuntimeError claims it takes no arguments even
// though it can.
// TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.
/** @suppress {checkTypes} */var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);// Throw the error whether or not MODULARIZE is set because abort is used
// in code paths apart from instantiation where an exception is expected
// to be thrown when abort is called.
throw e;}// include: memoryprofiler.js
// end include: memoryprofiler.js
// include: URIUtils.js
// Prefix of data URIs emitted by SINGLE_FILE and related options.
var dataURIPrefix='data:application/octet-stream;base64,';// Indicates whether filename is a base64 data URI.
function isDataURI(filename){// Prefix of data URIs emitted by SINGLE_FILE and related options.
return filename.startsWith(dataURIPrefix);}// Indicates whether filename is delivered via file protocol (as opposed to http/https)
function isFileURI(filename){return filename.startsWith('file://');}// end include: URIUtils.js
// include: runtime_exceptions.js
// end include: runtime_exceptions.js
var wasmBinaryFile;wasmBinaryFile='edge-classic.wasm';if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile);}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary);}if(readBinary){return readBinary(file);}throw"both async and sync fetching of the wasm failed";}function getBinaryPromise(binaryFile){// If we don't have the binary yet, try to load it asynchronously.
// Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.
// See https://github.com/github/fetch/pull/92#issuecomment-140665932
// Cordova or Electron apps are typically loaded from a file:// url.
// So use fetch if it is available and the url is not a file, otherwise fall back to XHR.
if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch=='function'){return fetch(binaryFile,{credentials:'same-origin'}).then(function(response){if(!response['ok']){throw"failed to load wasm binary file at '"+binaryFile+"'";}return response['arrayBuffer']();}).catch(function(){return getBinarySync(binaryFile);});}}// Otherwise, getBinarySync should be able to get it synchronously
return Promise.resolve().then(function(){return getBinarySync(binaryFile);});}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(function(binary){return WebAssembly.instantiate(binary,imports);}).then(function(instance){return instance;}).then(receiver,function(reason){err("failed to asynchronously prepare wasm: ".concat(reason));abort(reason);});}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming=='function'&&!isDataURI(binaryFile)&&typeof fetch=='function'){return fetch(binaryFile,{credentials:'same-origin'}).then(function(response){// Suppress closure warning here since the upstream definition for
// instantiateStreaming only allows Promise<Repsponse> rather than
// an actual Response.
// TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.
/** @suppress {checkTypes} */var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){// We expect the most common failure cause to be a bad MIME type for the binary,
// in which case falling back to ArrayBuffer instantiation should work.
err("wasm streaming compile failed: ".concat(reason));err('falling back to ArrayBuffer instantiation');return instantiateArrayBuffer(binaryFile,imports,callback);});});}return instantiateArrayBuffer(binaryFile,imports,callback);}// Create the wasm instance.
// Receives the wasm imports, returns the exports.
function createWasm(){// prepare imports
var info={'env':wasmImports,'wasi_snapshot_preview1':wasmImports};// Load the wasm module and create an instance of using native support in the JS engine.
// handle a generated wasm instance, receiving its exports and
// performing other necessary setup
/** @param {WebAssembly.Module=} module*/function receiveInstance(instance,module){wasmExports=instance.exports;wasmExports=Asyncify.instrumentWasmExports(wasmExports);wasmMemory=wasmExports['memory'];updateMemoryViews();wasmTable=wasmExports['__indirect_function_table'];addOnInit(wasmExports['__wasm_call_ctors']);removeRunDependency('wasm-instantiate');return wasmExports;}// wait for the pthread pool (if any)
addRunDependency('wasm-instantiate');// Prefer streaming instantiation if available.
function receiveInstantiationResult(result){// 'result' is a ResultObject object which has both the module and instance.
// receiveInstance() will swap in the exports (to Module.asm) so they can be called
// TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.
// When the regression is fixed, can restore the above PTHREADS-enabled path.
receiveInstance(result['instance']);}// User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback
// to manually instantiate the Wasm module themselves. This allows pages to
// run the instantiation parallel to any other async startup actions they are
// performing.
// Also pthreads and wasm workers initialize the wasm instance through this
// path.
if(Module['instantiateWasm']){try{return Module['instantiateWasm'](info,receiveInstance);}catch(e){err("Module.instantiateWasm callback failed with error: ".concat(e));// If instantiation fails, reject the module ready promise.
readyPromiseReject(e);}}// If instantiation fails, reject the module ready promise.
instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{};// no exports yet; we'll fill them in later
}// Globals used by JS i64 conversions (see makeSetValue)
var tempDouble;var tempI64;// include: runtime_debug.js
// end include: runtime_debug.js
// === Body ===
var ASM_CONSTS={668280:function _(){if(Module.edgePostInit){Module.edgePostInit();}},668336:function _($0,$1){var args=[];for(var _i=0;_i<$0;_i++){args.push(UTF8ToString(HEAP32[($1>>2)+_i]));}console.log("Edge command line: ".concat(args));var homeIndex=args.indexOf("-home");if(homeIndex===-1||homeIndex>=args.length||args[homeIndex+1].startsWith("-")){throw"No home command line option specified";}var homeDir=args[homeIndex+1];if(!FS.analyzePath(homeDir).exists){FS.mkdirTree(homeDir);}FS.mount(IDBFS,{},homeDir);FS.syncfs(true,function(err){if(err){console.error("Error mounting home dir ".concat(err));return;}Module._I_WebMain($0,$1);});},668926:function _(){if(Module.onFullscreen){Module.onFullscreen();}},668982:function _($0){if(Module.edgePreSyncFS){Module.edgePreSyncFS();}FS.syncfs($0,function(err){if(Module.edgePostSyncFS){Module.edgePostSyncFS();}});},669131:function _($0){var str=UTF8ToString($0)+'\n\n'+'Abort/Retry/Ignore/AlwaysIgnore? [ariA] :';var reply=window.prompt(str,"i");if(reply===null){reply="i";}return allocate(intArrayFromString(reply),'i8',ALLOC_NORMAL);},669356:function _(){if(typeof AudioContext!=='undefined'){return true;}else if(typeof webkitAudioContext!=='undefined'){return true;}return false;},669503:function _(){if(typeof navigator.mediaDevices!=='undefined'&&typeof navigator.mediaDevices.getUserMedia!=='undefined'){return true;}else if(typeof navigator.webkitGetUserMedia!=='undefined'){return true;}return false;},669737:function _($0){if(typeof Module['SDL2']==='undefined'){Module['SDL2']={};}var SDL2=Module['SDL2'];if(!$0){SDL2.audio={};}else{SDL2.capture={};}if(!SDL2.audioContext){if(typeof AudioContext!=='undefined'){SDL2.audioContext=new AudioContext();}else if(typeof webkitAudioContext!=='undefined'){SDL2.audioContext=new webkitAudioContext();}if(SDL2.audioContext){autoResumeAudioContext(SDL2.audioContext);}}return SDL2.audioContext===undefined?-1:0;},670230:function _(){var SDL2=Module['SDL2'];return SDL2.audioContext.sampleRate;},670298:function _($0,$1,$2,$3){var SDL2=Module['SDL2'];var have_microphone=function have_microphone(stream){if(SDL2.capture.silenceTimer!==undefined){clearTimeout(SDL2.capture.silenceTimer);SDL2.capture.silenceTimer=undefined;}SDL2.capture.mediaStreamNode=SDL2.audioContext.createMediaStreamSource(stream);SDL2.capture.scriptProcessorNode=SDL2.audioContext.createScriptProcessor($1,$0,1);SDL2.capture.scriptProcessorNode.onaudioprocess=function(audioProcessingEvent){if(SDL2===undefined||SDL2.capture===undefined){return;}audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0);SDL2.capture.currentCaptureBuffer=audioProcessingEvent.inputBuffer;dynCall('vi',$2,[$3]);};SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode);SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination);SDL2.capture.stream=stream;};var no_microphone=function no_microphone(error){};SDL2.capture.silenceBuffer=SDL2.audioContext.createBuffer($0,$1,SDL2.audioContext.sampleRate);SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0);var silence_callback=function silence_callback(){SDL2.capture.currentCaptureBuffer=SDL2.capture.silenceBuffer;dynCall('vi',$2,[$3]);};SDL2.capture.silenceTimer=setTimeout(silence_callback,$1/SDL2.audioContext.sampleRate*1000);if(navigator.mediaDevices!==undefined&&navigator.mediaDevices.getUserMedia!==undefined){navigator.mediaDevices.getUserMedia({audio:true,video:false}).then(have_microphone).catch(no_microphone);}else if(navigator.webkitGetUserMedia!==undefined){navigator.webkitGetUserMedia({audio:true,video:false},have_microphone,no_microphone);}},671950:function _($0,$1,$2,$3){var SDL2=Module['SDL2'];SDL2.audio.scriptProcessorNode=SDL2.audioContext['createScriptProcessor']($1,0,$0);SDL2.audio.scriptProcessorNode['onaudioprocess']=function(e){if(SDL2===undefined||SDL2.audio===undefined){return;}SDL2.audio.currentOutputBuffer=e['outputBuffer'];dynCall('vi',$2,[$3]);};SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']);},672360:function _($0,$1){var SDL2=Module['SDL2'];var numChannels=SDL2.capture.currentCaptureBuffer.numberOfChannels;for(var c=0;c<numChannels;++c){var channelData=SDL2.capture.currentCaptureBuffer.getChannelData(c);if(channelData.length!=$1){throw'Web Audio capture buffer length mismatch! Destination size: '+channelData.length+' samples vs expected '+$1+' samples!';}if(numChannels==1){for(var j=0;j<$1;++j){setValue($0+j*4,channelData[j],'float');}}else{for(var j=0;j<$1;++j){setValue($0+(j*numChannels+c)*4,channelData[j],'float');}}}},672965:function _($0,$1){var SDL2=Module['SDL2'];var numChannels=SDL2.audio.currentOutputBuffer['numberOfChannels'];for(var c=0;c<numChannels;++c){var channelData=SDL2.audio.currentOutputBuffer['getChannelData'](c);if(channelData.length!=$1){throw'Web Audio output buffer length mismatch! Destination size: '+channelData.length+' samples vs expected '+$1+' samples!';}for(var j=0;j<$1;++j){channelData[j]=HEAPF32[$0+(j*numChannels+c<<2)>>2];}}},673445:function _($0){var SDL2=Module['SDL2'];if($0){if(SDL2.capture.silenceTimer!==undefined){clearTimeout(SDL2.capture.silenceTimer);}if(SDL2.capture.stream!==undefined){var tracks=SDL2.capture.stream.getAudioTracks();for(var i=0;i<tracks.length;i++){SDL2.capture.stream.removeTrack(tracks[i]);}SDL2.capture.stream=undefined;}if(SDL2.capture.scriptProcessorNode!==undefined){SDL2.capture.scriptProcessorNode.onaudioprocess=function(audioProcessingEvent){};SDL2.capture.scriptProcessorNode.disconnect();SDL2.capture.scriptProcessorNode=undefined;}if(SDL2.capture.mediaStreamNode!==undefined){SDL2.capture.mediaStreamNode.disconnect();SDL2.capture.mediaStreamNode=undefined;}if(SDL2.capture.silenceBuffer!==undefined){SDL2.capture.silenceBuffer=undefined;}SDL2.capture=undefined;}else{if(SDL2.audio.scriptProcessorNode!=undefined){SDL2.audio.scriptProcessorNode.disconnect();SDL2.audio.scriptProcessorNode=undefined;}SDL2.audio=undefined;}if(SDL2.audioContext!==undefined&&SDL2.audio===undefined&&SDL2.capture===undefined){SDL2.audioContext.close();SDL2.audioContext=undefined;}},674617:function _($0){window.open(UTF8ToString($0),"_blank");},674662:function _($0,$1,$2){var w=$0;var h=$1;var pixels=$2;if(!Module['SDL2'])Module['SDL2']={};var SDL2=Module['SDL2'];if(SDL2.ctxCanvas!==Module['canvas']){SDL2.ctx=Module['createContext'](Module['canvas'],false,true);SDL2.ctxCanvas=Module['canvas'];}if(SDL2.w!==w||SDL2.h!==h||SDL2.imageCtx!==SDL2.ctx){SDL2.image=SDL2.ctx.createImageData(w,h);SDL2.w=w;SDL2.h=h;SDL2.imageCtx=SDL2.ctx;}var data=SDL2.image.data;var src=pixels>>2;var dst=0;var num;if(typeof CanvasPixelArray!=='undefined'&&data instanceof CanvasPixelArray){num=data.length;while(dst<num){var val=HEAP32[src];data[dst]=val&0xff;data[dst+1]=val>>8&0xff;data[dst+2]=val>>16&0xff;data[dst+3]=0xff;src++;dst+=4;}}else{if(SDL2.data32Data!==data){SDL2.data32=new Int32Array(data.buffer);SDL2.data8=new Uint8Array(data.buffer);SDL2.data32Data=data;}var data32=SDL2.data32;num=data32.length;data32.set(HEAP32.subarray(src,src+num));var data8=SDL2.data8;var i=3;var j=i+4*num;if(num%8==0){while(i<j){data8[i]=0xff;i=i+4|0;data8[i]=0xff;i=i+4|0;data8[i]=0xff;i=i+4|0;data8[i]=0xff;i=i+4|0;data8[i]=0xff;i=i+4|0;data8[i]=0xff;i=i+4|0;data8[i]=0xff;i=i+4|0;data8[i]=0xff;i=i+4|0;}}else{while(i<j){data8[i]=0xff;i=i+4|0;}}}SDL2.ctx.putImageData(SDL2.image,0,0);},676131:function _($0,$1,$2,$3,$4){var w=$0;var h=$1;var hot_x=$2;var hot_y=$3;var pixels=$4;var canvas=document.createElement("canvas");canvas.width=w;canvas.height=h;var ctx=canvas.getContext("2d");var image=ctx.createImageData(w,h);var data=image.data;var src=pixels>>2;var dst=0;var num;if(typeof CanvasPixelArray!=='undefined'&&data instanceof CanvasPixelArray){num=data.length;while(dst<num){var val=HEAP32[src];data[dst]=val&0xff;data[dst+1]=val>>8&0xff;data[dst+2]=val>>16&0xff;data[dst+3]=val>>24&0xff;src++;dst+=4;}}else{var data32=new Int32Array(data.buffer);num=data32.length;data32.set(HEAP32.subarray(src,src+num));}ctx.putImageData(image,0,0);var url=hot_x===0&&hot_y===0?"url("+canvas.toDataURL()+"), auto":"url("+canvas.toDataURL()+") "+hot_x+" "+hot_y+", auto";var urlBuf=_malloc2(url.length+1);stringToUTF8(url,urlBuf,url.length+1);return urlBuf;},677120:function _($0){if(Module['canvas']){Module['canvas'].style['cursor']=UTF8ToString($0);}},677203:function _(){if(Module['canvas']){Module['canvas'].style['cursor']='none';}},677272:function _(){return window.innerWidth;},677302:function _(){return window.innerHeight;},677333:function _($0,$1){alert(UTF8ToString($0)+"\n\n"+UTF8ToString($1));}};// end include: preamble.js
/** @constructor */function ExitStatus(status){this.name='ExitStatus';this.message="Program terminated with exit(".concat(status,")");this.status=status;}var listenOnce=function listenOnce(object,event,func){object.addEventListener(event,func,{'once':true});};/** @param {Object=} elements */var autoResumeAudioContext=function autoResumeAudioContext(ctx,elements){if(!elements){elements=[document,document.getElementById('canvas')];}['keydown','mousedown','touchstart'].forEach(function(event){elements.forEach(function(element){if(element){listenOnce(element,event,function(){if(ctx.state==='suspended')ctx.resume();});}});});};var callRuntimeCallbacks=function callRuntimeCallbacks(callbacks){while(callbacks.length>0){// Pass the module as the first argument.
callbacks.shift()(Module);}};var dynCallLegacy=function dynCallLegacy(sig,ptr,args){var f=Module['dynCall_'+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr);};var wasmTableMirror=[];var wasmTable;var getWasmTableEntry=function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr);}return func;};/** @param {Object=} args */var dynCall=function dynCall(sig,ptr,args){var rtn=dynCallLegacy(sig,ptr,args);return rtn;};/**
     * @param {number} ptr
     * @param {string} type
     */function getValue(ptr){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'i8';if(type.endsWith('*'))type='*';switch(type){case'i1':return HEAP8[ptr>>0];case'i8':return HEAP8[ptr>>0];case'i16':return HEAP16[ptr>>1];case'i32':return HEAP32[ptr>>2];case'i64':abort('to do getValue(i64) use WASM_BIGINT');case'float':return HEAPF32[ptr>>2];case'double':return HEAPF64[ptr>>3];case'*':return HEAPU32[ptr>>2];default:abort("invalid type for getValue: ".concat(type));}}/**
     * @param {number} ptr
     * @param {number} value
     * @param {string} type
     */function setValue(ptr,value){var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'i8';if(type.endsWith('*'))type='*';switch(type){case'i1':HEAP8[ptr>>0]=value;break;case'i8':HEAP8[ptr>>0]=value;break;case'i16':HEAP16[ptr>>1]=value;break;case'i32':HEAP32[ptr>>2]=value;break;case'i64':abort('to do setValue(i64) use WASM_BIGINT');case'float':HEAPF32[ptr>>2]=value;break;case'double':HEAPF64[ptr>>3]=value;break;case'*':HEAPU32[ptr>>2]=value;break;default:abort("invalid type for setValue: ".concat(type));}}/** @constructor */function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>2]=type;};this.get_type=function(){return HEAPU32[this.ptr+4>>2];};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>2]=destructor;};this.get_destructor=function(){return HEAPU32[this.ptr+8>>2];};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught;};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0;};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown;};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0;};// Initialize native structure fields. Should be called once after allocated.
this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor);};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr;};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>2];};// Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted
// when the pointer is casted to some of the exception object base classes (e.g. when virtual
// inheritance is used). When a pointer is thrown this method should return the thrown pointer
// itself.
this.get_exception_ptr=function(){// Work around a fastcomp bug, this code is still included for some reason in a build without
// exceptions support.
var isPointer=_cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2];}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr;};}var exceptionLast=0;var uncaughtExceptionCount=0;var ___cxa_throw=function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);// Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.
info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw exceptionLast;};var PATH={isAbs:function isAbs(path){return path.charAt(0)==='/';},splitPath:function splitPath(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1);},normalizeArray:function normalizeArray(parts,allowAboveRoot){// if the path tries to go above the root, `up` ends up > 0
var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==='.'){parts.splice(i,1);}else if(last==='..'){parts.splice(i,1);up++;}else if(up){parts.splice(i,1);up--;}}// if the path is allowed to go above the root, restore leading ..s
if(allowAboveRoot){for(;up;up--){parts.unshift('..');}}return parts;},normalize:function normalize(path){var isAbsolute=PATH.isAbs(path),trailingSlash=path.substr(-1)==='/';// Normalize the path
path=PATH.normalizeArray(path.split('/').filter(function(p){return!!p;}),!isAbsolute).join('/');if(!path&&!isAbsolute){path='.';}if(path&&trailingSlash){path+='/';}return(isAbsolute?'/':'')+path;},dirname:function dirname(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){// No dirname whatsoever
return'.';}if(dir){// It has a dirname, strip trailing slash
dir=dir.substr(0,dir.length-1);}return root+dir;},basename:function basename(path){// EMSCRIPTEN return '/'' for '/', not an empty string
if(path==='/')return'/';path=PATH.normalize(path);path=path.replace(/\/$/,"");var lastSlash=path.lastIndexOf('/');if(lastSlash===-1)return path;return path.substr(lastSlash+1);},join:function join(){var paths=Array.prototype.slice.call(arguments);return PATH.normalize(paths.join('/'));},join2:function join2(l,r){return PATH.normalize(l+'/'+r);}};var initRandomFill=function initRandomFill(){if((typeof crypto==="undefined"?"undefined":_typeof(crypto))=='object'&&typeof crypto['getRandomValues']=='function'){// for modern web browsers
return function(view){return crypto.getRandomValues(view);};}else// we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096
abort("initRandomDevice");};var _randomFill=function randomFill(view){// Lazily init on the first invocation.
return(_randomFill=initRandomFill())(view);};var PATH_FS={resolve:function resolve(){var resolvedPath='',resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();// Skip empty and invalid entries
if(typeof path!='string'){throw new TypeError('Arguments to path.resolve must be strings');}else if(!path){return'';// an invalid portion invalidates the whole thing
}resolvedPath=path+'/'+resolvedPath;resolvedAbsolute=PATH.isAbs(path);}// At this point the path should be resolved to a full absolute path, but
// handle relative paths to be safe (might happen when process.cwd() fails)
resolvedPath=PATH.normalizeArray(resolvedPath.split('/').filter(function(p){return!!p;}),!resolvedAbsolute).join('/');return(resolvedAbsolute?'/':'')+resolvedPath||'.';},relative:function relative(from,to){from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=='')break;}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=='')break;}if(start>end)return[];return arr.slice(start,end-start+1);}var fromParts=trim(from.split('/'));var toParts=trim(to.split('/'));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break;}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push('..');}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join('/');}};var UTF8Decoder=typeof TextDecoder!='undefined'?new TextDecoder('utf8'):undefined;/**
     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given
     * array that contains uint8 values, returns a copy of that string as a
     * Javascript String object.
     * heapOrArray is either a regular array, or a JavaScript typed array view.
     * @param {number} idx
     * @param {number=} maxBytesToRead
     * @return {string}
     */var UTF8ArrayToString=function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;// TextDecoder needs to know the byte length in advance, it doesn't stop on
// null terminator by itself.  Also, use the length info to avoid running tiny
// strings through TextDecoder, since .subarray() allocates garbage.
// (As a tiny code save trick, compare endPtr against endIdx using a negation,
// so that undefined means Infinity)
while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr));}var str='';// If building with TextDecoder, we have already computed the string length
// above, so test loop end condition against that
while(idx<endPtr){// For UTF8 byte structure, see:
// http://en.wikipedia.org/wiki/UTF-8#Description
// https://www.ietf.org/rfc/rfc2279.txt
// https://tools.ietf.org/html/rfc3629
var u0=heapOrArray[idx++];if(!(u0&0x80)){str+=String.fromCharCode(u0);continue;}var u1=heapOrArray[idx++]&63;if((u0&0xE0)==0xC0){str+=String.fromCharCode((u0&31)<<6|u1);continue;}var u2=heapOrArray[idx++]&63;if((u0&0xF0)==0xE0){u0=(u0&15)<<12|u1<<6|u2;}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63;}if(u0<0x10000){str+=String.fromCharCode(u0);}else{var ch=u0-0x10000;str+=String.fromCharCode(0xD800|ch>>10,0xDC00|ch&0x3FF);}}return str;};var FS_stdin_getChar_buffer=[];var lengthBytesUTF8=function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){// Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code
// unit, not a Unicode code point of the character! So decode
// UTF16->UTF32->UTF8.
// See http://unicode.org/faq/utf_bom.html#utf16-3
var c=str.charCodeAt(i);// possibly a lead surrogate
if(c<=0x7F){len++;}else if(c<=0x7FF){len+=2;}else if(c>=0xD800&&c<=0xDFFF){len+=4;++i;}else{len+=3;}}return len;};var stringToUTF8Array=function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){// Parameter maxBytesToWrite is not optional. Negative values, 0, null,
// undefined and false each don't write out any bytes.
if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;// -1 for string null terminator.
for(var i=0;i<str.length;++i){// Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code
// unit, not a Unicode code point of the character! So decode
// UTF16->UTF32->UTF8.
// See http://unicode.org/faq/utf_bom.html#utf16-3
// For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description
// and https://www.ietf.org/rfc/rfc2279.txt
// and https://tools.ietf.org/html/rfc3629
var u=str.charCodeAt(i);// possibly a lead surrogate
if(u>=0xD800&&u<=0xDFFF){var u1=str.charCodeAt(++i);u=0x10000+((u&0x3FF)<<10)|u1&0x3FF;}if(u<=0x7F){if(outIdx>=endIdx)break;heap[outIdx++]=u;}else if(u<=0x7FF){if(outIdx+1>=endIdx)break;heap[outIdx++]=0xC0|u>>6;heap[outIdx++]=0x80|u&63;}else if(u<=0xFFFF){if(outIdx+2>=endIdx)break;heap[outIdx++]=0xE0|u>>12;heap[outIdx++]=0x80|u>>6&63;heap[outIdx++]=0x80|u&63;}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=0xF0|u>>18;heap[outIdx++]=0x80|u>>12&63;heap[outIdx++]=0x80|u>>6&63;heap[outIdx++]=0x80|u&63;}}// Null-terminate the pointer to the buffer.
heap[outIdx]=0;return outIdx-startIdx;};/** @type {function(string, boolean=, number=)} */function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array;}var FS_stdin_getChar=function FS_stdin_getChar(){if(!FS_stdin_getChar_buffer.length){var result=null;if(typeof window!='undefined'&&typeof window.prompt=='function'){// Browser.
result=window.prompt('Input: ');// returns null on cancel
if(result!==null){result+='\n';}}else if(typeof readline=='function'){// Command line.
result=readline();if(result!==null){result+='\n';}}if(!result){return null;}FS_stdin_getChar_buffer=intArrayFromString(result,true);}return FS_stdin_getChar_buffer.shift();};var TTY={ttys:[],init:function init(){// https://github.com/emscripten-core/emscripten/pull/1555
// if (ENVIRONMENT_IS_NODE) {
//   // currently, FS.init does not distinguish if process.stdin is a file or TTY
//   // device, it always assumes it's a TTY device. because of this, we're forcing
//   // process.stdin to UTF8 encoding to at least make stdin reading compatible
//   // with text files until FS.init can be refactored.
//   process.stdin.setEncoding('utf8');
// }
},shutdown:function shutdown(){// https://github.com/emscripten-core/emscripten/pull/1555
// if (ENVIRONMENT_IS_NODE) {
//   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
//   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
//   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
//   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
//   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
//   process.stdin.pause();
// }
},register:function register(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops);},stream_ops:{open:function open(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43);}stream.tty=tty;stream.seekable=false;},close:function close(stream){// flush any pending line data
stream.tty.ops.fsync(stream.tty);},fsync:function fsync(stream){stream.tty.ops.fsync(stream.tty);},read:function read(stream,buffer,offset,length,pos/* ignored */){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60);}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty);}catch(e){throw new FS.ErrnoError(29);}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6);}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result;}if(bytesRead){stream.node.timestamp=Date.now();}return bytesRead;},write:function write(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60);}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i]);}}catch(e){throw new FS.ErrnoError(29);}if(length){stream.node.timestamp=Date.now();}return i;}},default_tty_ops:{get_char:function get_char(tty){return FS_stdin_getChar();},put_char:function put_char(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[];}else{if(val!=0)tty.output.push(val);// val == 0 would cut text output off in the middle.
}},fsync:function fsync(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[];}},ioctl_tcgets:function ioctl_tcgets(tty){// typical setting
return{c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[0x03,0x1c,0x7f,0x15,0x04,0x00,0x01,0x00,0x11,0x13,0x1a,0x00,0x12,0x0f,0x17,0x16,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00]};},ioctl_tcsets:function ioctl_tcsets(tty,optional_actions,data){// currently just ignore
return 0;},ioctl_tiocgwinsz:function ioctl_tiocgwinsz(tty){return[24,80];}},default_tty1_ops:{put_char:function put_char(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[];}else{if(val!=0)tty.output.push(val);}},fsync:function fsync(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[];}}}};var zeroMemory=function zeroMemory(address,size){HEAPU8.fill(0,address,address+size);return address;};var alignMemory=function alignMemory(size,alignment){return Math.ceil(size/alignment)*alignment;};var mmapAlloc=function mmapAlloc(size){abort();};var MEMFS={ops_table:null,mount:function mount(_mount){return MEMFS.createNode(null,'/',16384|511/* 0777 */,0);},createNode:function createNode(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){// no supported
throw new FS.ErrnoError(63);}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}};}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={};}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;// The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.
// When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
// for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
// penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
node.contents=null;}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream;}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream;}node.timestamp=Date.now();// add the new node to the parent
if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp;}return node;},getFileDataAsTypedArray:function getFileDataAsTypedArray(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);// Make sure to not return excess unused bytes.
return new Uint8Array(node.contents);},expandFileStorage:function expandFileStorage(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;// No need to expand, the storage was already large enough.
// Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
// For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
// avoid overshooting the allocation cap by a very large margin.
var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2.0:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);// At minimum allocate 256b for each file when expanding.
var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);// Allocate new storage.
if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);// Copy old data over to the new storage.
},resizeFileStorage:function resizeFileStorage(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;// Fully decommit when requesting a resize to zero.
node.usedBytes=0;}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);// Allocate new storage.
if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)));// Copy old data over to the new storage.
}node.usedBytes=newSize;}},node_ops:{getattr:function getattr(node){var attr={};// device numbers reuse inode numbers.
attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096;}else if(FS.isFile(node.mode)){attr.size=node.usedBytes;}else if(FS.isLink(node.mode)){attr.size=node.link.length;}else{attr.size=0;}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);// NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
//       but this is not required by the standard.
attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr;},setattr:function setattr(node,attr){if(attr.mode!==undefined){node.mode=attr.mode;}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp;}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size);}},lookup:function lookup(parent,name){throw FS.genericErrors[44];},mknod:function mknod(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev);},rename:function rename(old_node,new_dir,new_name){// if we're overwriting a directory at new_name, make sure it's empty.
if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name);}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55);}}}// do the internal rewiring
delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir;},unlink:function unlink(parent,name){delete parent.contents[name];parent.timestamp=Date.now();},rmdir:function rmdir(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55);}delete parent.contents[name];parent.timestamp=Date.now();},readdir:function readdir(node){var entries=['.','..'];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue;}entries.push(key);}return entries;},symlink:function symlink(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511/* 0777 */|40960,0);node.link=oldpath;return node;},readlink:function readlink(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28);}return node.link;}},stream_ops:{read:function read(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){// non-trivial, and typed array
buffer.set(contents.subarray(position,position+size),offset);}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i];}return size;},write:function write(stream,buffer,offset,length,position,canOwn){// If the buffer is located in main memory (HEAP), and if
// memory can grow, we can't hold on to references of the
// memory buffer, as they may get invalidated. That means we
// need to do copy its contents.
if(buffer.buffer===HEAP8.buffer){canOwn=false;}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){// This write is from a typed array to a typed array?
if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length;}else if(node.usedBytes===0&&position===0){// If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length;}else if(position+length<=node.usedBytes){// Writing to an already allocated and used subrange of the file?
node.contents.set(buffer.subarray(offset,offset+length),position);return length;}}// Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){// Use typed array write which is available.
node.contents.set(buffer.subarray(offset,offset+length),position);}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i];// Or fall back to manual write if not.
}}node.usedBytes=Math.max(node.usedBytes,position+length);return length;},llseek:function llseek(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position;}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes;}}if(position<0){throw new FS.ErrnoError(28);}return position;},allocate:function allocate(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length);},mmap:function mmap(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43);}var ptr;var allocated;var contents=stream.node.contents;// Only make a new copy when MAP_PRIVATE is specified.
if(!(flags&2)&&contents.buffer===HEAP8.buffer){// We can't emulate MAP_SHARED when the file is not backed by the
// buffer we're mapping to (e.g. the HEAP buffer).
allocated=false;ptr=contents.byteOffset;}else{// Try to avoid unnecessary slices.
if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length);}else{contents=Array.prototype.slice.call(contents,position,position+length);}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48);}HEAP8.set(contents,ptr);}return{ptr:ptr,allocated:allocated};},msync:function msync(stream,buffer,offset,length,mmapFlags){MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);// should we check if bytesWritten and length are the same?
return 0;}}};/** @param {boolean=} noRunDep */var asyncLoad=function asyncLoad(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency("al ".concat(url)):'';readAsync(url,function(arrayBuffer){assert(arrayBuffer,"Loading data file \"".concat(url,"\" failed (no arrayBuffer)."));onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep);},function(event){if(onerror){onerror();}else{throw"Loading data file \"".concat(url,"\" failed.");}});if(dep)addRunDependency(dep);};var FS_createDataFile=function FS_createDataFile(parent,name,fileData,canRead,canWrite,canOwn){return FS.createDataFile(parent,name,fileData,canRead,canWrite,canOwn);};var preloadPlugins=Module['preloadPlugins']||[];var FS_handledByPreloadPlugin=function FS_handledByPreloadPlugin(byteArray,fullname,finish,onerror){// Ensure plugins are ready.
if(typeof Browser!='undefined')Browser.init();var handled=false;preloadPlugins.forEach(function(plugin){if(handled)return;if(plugin['canHandle'](fullname)){plugin['handle'](byteArray,fullname,finish,onerror);handled=true;}});return handled;};var FS_createPreloadedFile=function FS_createPreloadedFile(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){// TODO we should allow people to just pass in a complete filename instead
// of parent and name being that we just join them anyways
var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency("cp ".concat(fullname));// might have several active requests for the same fullname
function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS_createDataFile(parent,name,byteArray,canRead,canWrite,canOwn);}if(onload)onload();removeRunDependency(dep);}if(FS_handledByPreloadPlugin(byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep);})){return;}finish(byteArray);}addRunDependency(dep);if(typeof url=='string'){asyncLoad(url,function(byteArray){return processData(byteArray);},onerror);}else{processData(url);}};var FS_modeStringToFlags=function FS_modeStringToFlags(str){var flagModes={'r':0,'r+':2,'w':512|64|1,'w+':512|64|2,'a':1024|64|1,'a+':1024|64|2};var flags=flagModes[str];if(typeof flags=='undefined'){throw new Error("Unknown file open mode: ".concat(str));}return flags;};var FS_getMode=function FS_getMode(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode;};var IDBFS={dbs:{},indexedDB:function(_indexedDB){function indexedDB(){return _indexedDB.apply(this,arguments);}indexedDB.toString=function(){return _indexedDB.toString();};return indexedDB;}(function(){if(typeof indexedDB!='undefined')return indexedDB;var ret=null;if((typeof window==="undefined"?"undefined":_typeof(window))=='object')ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,'IDBFS used, but indexedDB not supported');return ret;}),DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function mount(_mount2){// reuse all of the core MEMFS functionality
return MEMFS.mount.apply(null,arguments);},syncfs:function syncfs(mount,populate,callback){IDBFS.getLocalSet(mount,function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback);});});},quit:function quit(){Object.values(IDBFS.dbs).forEach(function(value){return value.close();});IDBFS.dbs={};},getDB:function getDB(name,callback){// check the cache first
var db=IDBFS.dbs[name];if(db){return callback(null,db);}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION);}catch(e){return callback(e);}if(!req){return callback("Unable to connect to IndexedDB");}req.onupgradeneeded=function(e){var db=/** @type {IDBDatabase} */e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME);}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME);}if(!fileStore.indexNames.contains('timestamp')){fileStore.createIndex('timestamp','timestamp',{unique:false});}};req.onsuccess=function(){db=/** @type {IDBDatabase} */req.result;// add to the cache
IDBFS.dbs[name]=db;callback(null,db);};req.onerror=function(e){callback(e.target.error);e.preventDefault();};},getLocalSet:function getLocalSet(mount,callback){var entries={};function isRealDir(p){return p!=='.'&&p!=='..';};function toAbsolute(root){return function(p){return PATH.join2(root,p);};};var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path);}catch(e){return callback(e);}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));}entries[path]={'timestamp':stat.mtime};}return callback(null,{type:'local',entries:entries});},getRemoteSet:function getRemoteSet(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,function(err,db){if(err)return callback(err);try{var transaction=db.transaction([IDBFS.DB_STORE_NAME],'readonly');transaction.onerror=function(e){callback(e.target.error);e.preventDefault();};var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index('timestamp');index.openKeyCursor().onsuccess=function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:'remote',db:db,entries:entries});}entries[cursor.primaryKey]={'timestamp':cursor.key};cursor.continue();};}catch(e){return callback(e);}});},loadLocalEntry:function loadLocalEntry(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path);}catch(e){return callback(e);}if(FS.isDir(stat.mode)){return callback(null,{'timestamp':stat.mtime,'mode':stat.mode});}else if(FS.isFile(stat.mode)){// Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
// Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{'timestamp':stat.mtime,'mode':stat.mode,'contents':node.contents});}else{return callback(new Error('node type not supported'));}},storeLocalEntry:function storeLocalEntry(path,entry,callback){try{if(FS.isDir(entry['mode'])){FS.mkdirTree(path,entry['mode']);}else if(FS.isFile(entry['mode'])){FS.writeFile(path,entry['contents'],{canOwn:true});}else{return callback(new Error('node type not supported'));}FS.chmod(path,entry['mode']);FS.utime(path,entry['timestamp'],entry['timestamp']);}catch(e){return callback(e);}callback(null);},removeLocalEntry:function removeLocalEntry(path,callback){try{var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path);}else if(FS.isFile(stat.mode)){FS.unlink(path);}}catch(e){return callback(e);}callback(null);},loadRemoteEntry:function loadRemoteEntry(store,path,callback){var req=store.get(path);req.onsuccess=function(event){callback(null,event.target.result);};req.onerror=function(e){callback(e.target.error);e.preventDefault();};},storeRemoteEntry:function storeRemoteEntry(store,path,entry,callback){try{var req=store.put(entry,path);}catch(e){callback(e);return;}req.onsuccess=function(){callback(null);};req.onerror=function(e){callback(e.target.error);e.preventDefault();};},removeRemoteEntry:function removeRemoteEntry(store,path,callback){var req=store.delete(path);req.onsuccess=function(){callback(null);};req.onerror=function(e){callback(e.target.error);e.preventDefault();};},reconcile:function reconcile(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach(function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e['timestamp'].getTime()!=e2['timestamp'].getTime()){create.push(key);total++;}});var remove=[];Object.keys(dst.entries).forEach(function(key){if(!src.entries[key]){remove.push(key);total++;}});if(!total){return callback(null);}var errored=false;var db=src.type==='remote'?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],'readwrite');var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err&&!errored){errored=true;return callback(err);}};transaction.onerror=function(e){done(_this.error);e.preventDefault();};transaction.oncomplete=function(e){if(!errored){callback(null);}};// sort paths in ascending order so directory entries are created
// before the files inside them
create.sort().forEach(function(path){if(dst.type==='local'){IDBFS.loadRemoteEntry(store,path,function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done);});}else{IDBFS.loadLocalEntry(path,function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done);});}});// sort paths in descending order so files are deleted before their
// parent directories
remove.sort().reverse().forEach(function(path){if(dst.type==='local'){IDBFS.removeLocalEntry(path,done);}else{IDBFS.removeRemoteEntry(store,path,done);}});}};var LZ4={DIR_MODE:16895,FILE_MODE:33279,CHUNK_SIZE:-1,codec:null,init:function init(){if(LZ4.codec)return;LZ4.codec=function(){/*
  MiniLZ4: Minimal LZ4 block decoding and encoding.
  
  based off of node-lz4, https://github.com/pierrec/node-lz4
  
  ====
  Copyright (c) 2012 Pierre Curto
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
  ====
  
  changes have the same license
  */var MiniLZ4=function(){var exports={};/**
   * Decode a block. Assumptions: input contains all sequences of a 
   * chunk, output is large enough to receive the decoded data.
   * If the output buffer is too small, an error will be thrown.
   * If the returned value is negative, an error occured at the returned offset.
   *
   * @param {ArrayBufferView} input input data
   * @param {ArrayBufferView} output output data
   * @param {number=} sIdx
   * @param {number=} eIdx
   * @return {number} number of decoded bytes
   * @private
   */exports.uncompress=function(input,output,sIdx,eIdx){sIdx=sIdx||0;eIdx=eIdx||input.length-sIdx;// Process each sequence in the incoming data
for(var i=sIdx,n=eIdx,j=0;i<n;){var token=input[i++];// Literals
var literals_length=token>>4;if(literals_length>0){// length of literals
var l=literals_length+240;while(l===255){l=input[i++];literals_length+=l;}// Copy the literals
var end=i+literals_length;while(i<end)output[j++]=input[i++];// End of buffer?
if(i===n)return j;}// Match copy
// 2 bytes offset (little endian)
var offset=input[i++]|input[i++]<<8;// XXX 0 is an invalid offset value
if(offset===0)return j;if(offset>j)return-(i-2);// length of match copy
var match_length=token&0xf;var l=match_length+240;while(l===255){l=input[i++];match_length+=l;}// Copy the match
var pos=j-offset;// position of the match copy in the current output
var end=j+match_length+4;// minmatch = 4
while(j<end)output[j++]=output[pos++];}return j;};var maxInputSize=0x7E000000,minMatch=4// uint32() optimization
,hashLog=16,hashShift=minMatch*8-hashLog,hashSize=1<<hashLog,copyLength=8,lastLiterals=5,mfLimit=copyLength+minMatch,skipStrength=6,mlBits=4,mlMask=(1<<mlBits)-1,runBits=8-mlBits,runMask=(1<<runBits)-1,hasher=/* XXX uint32( */2654435761;/* ) */assert(hashShift===16);var hashTable=new Int16Array(1<<16);var empty=new Int16Array(hashTable.length);// CompressBound returns the maximum length of a lz4 block, given it's uncompressed length
exports.compressBound=function(isize){return isize>maxInputSize?0:isize+isize/255+16|0;};/** @param {number=} sIdx
  	@param {number=} eIdx */exports.compress=function(src,dst,sIdx,eIdx){hashTable.set(empty);return compressBlock(src,dst,0,sIdx||0,eIdx||dst.length);};function compressBlock(src,dst,pos,sIdx,eIdx){// XXX var Hash = uint32() // Reusable unsigned 32 bits integer
var dpos=sIdx;var dlen=eIdx-sIdx;var anchor=0;if(src.length>=maxInputSize)throw new Error("input too large");// Minimum of input bytes for compression (LZ4 specs)
if(src.length>mfLimit){var n=exports.compressBound(src.length);if(dlen<n)throw Error("output too small: "+dlen+" < "+n);var step=1,findMatchAttempts=(1<<skipStrength)+3// Keep last few bytes incompressible (LZ4 specs):
// last 5 bytes must be literals
,srcLength=src.length-mfLimit;while(pos+minMatch<srcLength){// Find a match
// min match of 4 bytes aka sequence
var sequenceLowBits=src[pos+1]<<8|src[pos];var sequenceHighBits=src[pos+3]<<8|src[pos+2];// compute hash for the current sequence
var hash=Math.imul(sequenceLowBits|sequenceHighBits<<16,hasher)>>>hashShift;/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)
  							.multiply(hasher)
  							.shiftr(hashShift)
  							.toNumber() */ // get the position of the sequence matching the hash
// NB. since 2 different sequences may have the same hash
// it is double-checked below
// do -1 to distinguish between initialized and uninitialized values
var ref=hashTable[hash]-1;// save position of current sequence in hash table
hashTable[hash]=pos+1;// first reference or within 64k limit or current sequence !== hashed one: no match
if(ref<0||pos-ref>>>16>0||(src[ref+3]<<8|src[ref+2])!=sequenceHighBits||(src[ref+1]<<8|src[ref])!=sequenceLowBits){// increase step if nothing found within limit
step=findMatchAttempts++>>skipStrength;pos+=step;continue;}findMatchAttempts=(1<<skipStrength)+3;// got a match
var literals_length=pos-anchor;var offset=pos-ref;// minMatch already verified
pos+=minMatch;ref+=minMatch;// move to the end of the match (>=minMatch)
var match_length=pos;while(pos<srcLength&&src[pos]==src[ref]){pos++;ref++;}// match length
match_length=pos-match_length;// token
var token=match_length<mlMask?match_length:mlMask;// encode literals length
if(literals_length>=runMask){// add match length to the token
dst[dpos++]=(runMask<<mlBits)+token;for(var len=literals_length-runMask;len>254;len-=255){dst[dpos++]=255;}dst[dpos++]=len;}else{// add match length to the token
dst[dpos++]=(literals_length<<mlBits)+token;}// write literals
for(var i=0;i<literals_length;i++){dst[dpos++]=src[anchor+i];}// encode offset
dst[dpos++]=offset;dst[dpos++]=offset>>8;// encode match length
if(match_length>=mlMask){match_length-=mlMask;while(match_length>=255){match_length-=255;dst[dpos++]=255;}dst[dpos++]=match_length;}anchor=pos;}}// cannot compress input
if(anchor==0)return 0;// Write last literals
// encode literals length
literals_length=src.length-anchor;if(literals_length>=runMask){// add match length to the token
dst[dpos++]=runMask<<mlBits;for(var ln=literals_length-runMask;ln>254;ln-=255){dst[dpos++]=255;}dst[dpos++]=ln;}else{// add match length to the token
dst[dpos++]=literals_length<<mlBits;}// write literals
pos=anchor;while(pos<src.length){dst[dpos++]=src[pos++];}return dpos;}exports.CHUNK_SIZE=2048;// musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea
exports.compressPackage=function(data,verify){if(verify){var temp=new Uint8Array(exports.CHUNK_SIZE);}// compress the data in chunks
assert(data instanceof ArrayBuffer);data=new Uint8Array(data);console.log('compressing package of size '+data.length);var compressedChunks=[];var successes=[];var offset=0;var total=0;while(offset<data.length){var chunk=data.subarray(offset,offset+exports.CHUNK_SIZE);//console.log('compress a chunk ' + [offset, total, data.length]);
offset+=exports.CHUNK_SIZE;var bound=exports.compressBound(chunk.length);var compressed=new Uint8Array(bound);var compressedSize=exports.compress(chunk,compressed);if(compressedSize>0){assert(compressedSize<=bound);compressed=compressed.subarray(0,compressedSize);compressedChunks.push(compressed);total+=compressedSize;successes.push(1);if(verify){var back=exports.uncompress(compressed,temp);assert(back===chunk.length,[back,chunk.length]);for(var i=0;i<chunk.length;i++){assert(chunk[i]===temp[i]);}}}else{assert(compressedSize===0);// failure to compress :(
compressedChunks.push(chunk);total+=chunk.length;// last chunk may not be the full exports.CHUNK_SIZE size
successes.push(0);}}data=null;// XXX null out pack['data'] too?
var compressedData={'data':new Uint8Array(total+exports.CHUNK_SIZE*2),// store all the compressed data, plus room for two cached decompressed chunk, in one fast array
'cachedOffset':total,'cachedIndexes':[-1,-1],// cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing
'cachedChunks':[null,null],'offsets':[],// chunk# => start in compressed data
'sizes':[],'successes':successes// 1 if chunk is compressed
};offset=0;for(var i=0;i<compressedChunks.length;i++){compressedData['data'].set(compressedChunks[i],offset);compressedData['offsets'][i]=offset;compressedData['sizes'][i]=compressedChunks[i].length;offset+=compressedChunks[i].length;}console.log('compressed package into '+[compressedData['data'].length]);assert(offset===total);return compressedData;};assert(exports.CHUNK_SIZE<1<<15);// we use 16-bit ints as the type of the hash table, chunk size must be smaller
return exports;}();;return MiniLZ4;}();LZ4.CHUNK_SIZE=LZ4.codec.CHUNK_SIZE;},loadPackage:function loadPackage(pack,preloadPlugin){LZ4.init();var compressedData=pack['compressedData'];if(!compressedData)compressedData=LZ4.codec.compressPackage(pack['data']);assert(compressedData['cachedIndexes'].length===compressedData['cachedChunks'].length);for(var i=0;i<compressedData['cachedIndexes'].length;i++){compressedData['cachedIndexes'][i]=-1;compressedData['cachedChunks'][i]=compressedData['data'].subarray(compressedData['cachedOffset']+i*LZ4.CHUNK_SIZE,compressedData['cachedOffset']+(i+1)*LZ4.CHUNK_SIZE);assert(compressedData['cachedChunks'][i].length===LZ4.CHUNK_SIZE);}pack['metadata'].files.forEach(function(file){var dir=PATH.dirname(file.filename);var name=PATH.basename(file.filename);FS.createPath('',dir,true,true);var parent=FS.analyzePath(dir).object;LZ4.createNode(parent,name,LZ4.FILE_MODE,0,{compressedData:compressedData,start:file.start,end:file.end});});// Preload files if necessary. This code is largely similar to
// createPreloadedFile in library_fs.js. However, a main difference here
// is that we only decompress the file if it can be preloaded.
// Abstracting out the common parts seems to be more effort than it is
// worth.
if(preloadPlugin){Browser.init();pack['metadata'].files.forEach(function(file){var handled=false;var fullname=file.filename;preloadPlugins.forEach(function(plugin){if(handled)return;if(plugin['canHandle'](fullname)){var dep=getUniqueRunDependency('fp '+fullname);addRunDependency(dep);var finish=function finish(){return removeRunDependency(dep);};var byteArray=FS.readFile(fullname);plugin['handle'](byteArray,fullname,finish,finish);handled=true;}});});}},createNode:function createNode(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=LZ4.node_ops;node.stream_ops=LZ4.stream_ops;node.timestamp=(mtime||new Date()).getTime();assert(LZ4.FILE_MODE!==LZ4.DIR_MODE);if(mode===LZ4.FILE_MODE){node.size=contents.end-contents.start;node.contents=contents;}else{node.size=4096;node.contents={};}if(parent){parent.contents[name]=node;}return node;},node_ops:{getattr:function getattr(node){return{dev:1,ino:node.id,mode:node.mode,nlink:1,uid:0,gid:0,rdev:0,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)};},setattr:function setattr(node,attr){if(attr.mode!==undefined){node.mode=attr.mode;}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp;}},lookup:function lookup(parent,name){throw new FS.ErrnoError(44);},mknod:function mknod(parent,name,mode,dev){throw new FS.ErrnoError(63);},rename:function rename(oldNode,newDir,newName){throw new FS.ErrnoError(63);},unlink:function unlink(parent,name){throw new FS.ErrnoError(63);},rmdir:function rmdir(parent,name){throw new FS.ErrnoError(63);},readdir:function readdir(node){throw new FS.ErrnoError(63);},symlink:function symlink(parent,newName,oldPath){throw new FS.ErrnoError(63);}},stream_ops:{read:function read(stream,buffer,offset,length,position){//out('LZ4 read ' + [offset, length, position]);
length=Math.min(length,stream.node.size-position);if(length<=0)return 0;var contents=stream.node.contents;var compressedData=contents.compressedData;var written=0;while(written<length){var start=contents.start+position+written;// start index in uncompressed data
var desired=length-written;//out('current read: ' + ['start', start, 'desired', desired]);
var chunkIndex=Math.floor(start/LZ4.CHUNK_SIZE);var compressedStart=compressedData['offsets'][chunkIndex];var compressedSize=compressedData['sizes'][chunkIndex];var currChunk;if(compressedData['successes'][chunkIndex]){var found=compressedData['cachedIndexes'].indexOf(chunkIndex);if(found>=0){currChunk=compressedData['cachedChunks'][found];}else{// decompress the chunk
compressedData['cachedIndexes'].pop();compressedData['cachedIndexes'].unshift(chunkIndex);currChunk=compressedData['cachedChunks'].pop();compressedData['cachedChunks'].unshift(currChunk);if(compressedData['debug']){out('decompressing chunk '+chunkIndex);Module['decompressedChunks']=(Module['decompressedChunks']||0)+1;}var compressed=compressedData['data'].subarray(compressedStart,compressedStart+compressedSize);//var t = Date.now();
var originalSize=LZ4.codec.uncompress(compressed,currChunk);//out('decompress time: ' + (Date.now() - t));
if(chunkIndex<compressedData['successes'].length-1)assert(originalSize===LZ4.CHUNK_SIZE);// all but the last chunk must be full-size
}}else{// uncompressed
currChunk=compressedData['data'].subarray(compressedStart,compressedStart+LZ4.CHUNK_SIZE);}var startInChunk=start%LZ4.CHUNK_SIZE;var endInChunk=Math.min(startInChunk+desired,LZ4.CHUNK_SIZE);buffer.set(currChunk.subarray(startInChunk,endInChunk),offset+written);var currWritten=endInChunk-startInChunk;written+=currWritten;}return written;},write:function write(stream,buffer,offset,length,position){throw new FS.ErrnoError(29);},llseek:function llseek(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position;}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size;}}if(position<0){throw new FS.ErrnoError(28);}return position;}}};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function lookupPath(path){var opts=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};path=PATH_FS.resolve(path);if(!path)return{path:'',node:null};var defaults={follow_mount:true,recurse_count:0};opts=_extends(defaults,opts);if(opts.recurse_count>8){// max recursive lookup of 8
throw new FS.ErrnoError(32);}// split the absolute path
var parts=path.split('/').filter(function(p){return!!p;});// start at the root
var current=FS.root;var current_path='/';for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){// stop resolving
break;}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);// jump to the mount's root node if this is a mountpoint
if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root;}}// by default, lookupPath will not follow a symlink if it is the final path component.
// setting opts.follow = true will override this behavior.
if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1});current=lookup.node;if(count++>40){// limit max consecutive symlinks to 40 (SYMLOOP_MAX).
throw new FS.ErrnoError(32);}}}}return{path:current_path,node:current};},getPath:function getPath(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=='/'?"".concat(mount,"/").concat(path):mount+path;}path=path?"".concat(node.name,"/").concat(path):node.name;node=node.parent;}},hashName:function hashName(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0;}return(parentid+hash>>>0)%FS.nameTable.length;},hashAddNode:function hashAddNode(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node;},hashRemoveNode:function hashRemoveNode(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next;}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break;}current=current.name_next;}}},lookupNode:function lookupNode(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent);}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node;}}// if we failed to find it in the cache, call into the VFS
return FS.lookup(parent,name);},createNode:function createNode(parent,name,mode,rdev){var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node;},destroyNode:function destroyNode(node){FS.hashRemoveNode(node);},isRoot:function isRoot(node){return node===node.parent;},isMountpoint:function isMountpoint(node){return!!node.mounted;},isFile:function isFile(mode){return(mode&61440)===32768;},isDir:function isDir(mode){return(mode&61440)===16384;},isLink:function isLink(mode){return(mode&61440)===40960;},isChrdev:function isChrdev(mode){return(mode&61440)===8192;},isBlkdev:function isBlkdev(mode){return(mode&61440)===24576;},isFIFO:function isFIFO(mode){return(mode&61440)===4096;},isSocket:function isSocket(mode){return(mode&49152)===49152;},flagsToPermissionString:function flagsToPermissionString(flag){var perms=['r','w','rw'][flag&3];if(flag&512){perms+='w';}return perms;},nodePermissions:function nodePermissions(node,perms){if(FS.ignorePermissions){return 0;}// return 0 if any user, group or owner bits are set.
if(perms.includes('r')&&!(node.mode&292)){return 2;}else if(perms.includes('w')&&!(node.mode&146)){return 2;}else if(perms.includes('x')&&!(node.mode&73)){return 2;}return 0;},mayLookup:function mayLookup(dir){var errCode=FS.nodePermissions(dir,'x');if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0;},mayCreate:function mayCreate(dir,name){try{var node=FS.lookupNode(dir,name);return 20;}catch(e){}return FS.nodePermissions(dir,'wx');},mayDelete:function mayDelete(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name);}catch(e){return e.errno;}var errCode=FS.nodePermissions(dir,'wx');if(errCode){return errCode;}if(isdir){if(!FS.isDir(node.mode)){return 54;}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10;}}else{if(FS.isDir(node.mode)){return 31;}}return 0;},mayOpen:function mayOpen(node,flags){if(!node){return 44;}if(FS.isLink(node.mode)){return 32;}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=='r'||// opening for write
flags&512){// TODO: check for O_SEARCH? (== search for dir only)
return 31;}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags));},MAX_OPEN_FDS:4096,nextfd:function nextfd(){for(var fd=0;fd<=FS.MAX_OPEN_FDS;fd++){if(!FS.streams[fd]){return fd;}}throw new FS.ErrnoError(33);},getStreamChecked:function getStreamChecked(fd){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8);}return stream;},getStream:function getStream(fd){return FS.streams[fd];},createStream:function createStream(stream){var fd=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;if(!FS.FSStream){FS.FSStream=/** @constructor */function(){this.shared={};};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{/** @this {FS.FSStream} */get:function get(){return this.node;},/** @this {FS.FSStream} */set:function set(val){this.node=val;}},isRead:{/** @this {FS.FSStream} */get:function get(){return(this.flags&2097155)!==1;}},isWrite:{/** @this {FS.FSStream} */get:function get(){return(this.flags&2097155)!==0;}},isAppend:{/** @this {FS.FSStream} */get:function get(){return this.flags&1024;}},flags:{/** @this {FS.FSStream} */get:function get(){return this.shared.flags;},/** @this {FS.FSStream} */set:function set(val){this.shared.flags=val;}},position:{/** @this {FS.FSStream} */get:function get(){return this.shared.position;},/** @this {FS.FSStream} */set:function set(val){this.shared.position=val;}}});}// clone it, so we can return an instance of FSStream
stream=_extends(new FS.FSStream(),stream);if(fd==-1){fd=FS.nextfd();}stream.fd=fd;FS.streams[fd]=stream;return stream;},closeStream:function closeStream(fd){FS.streams[fd]=null;},chrdev_stream_ops:{open:function open(stream){var device=FS.getDevice(stream.node.rdev);// override node's stream ops with the device's
stream.stream_ops=device.stream_ops;// forward the open call
if(stream.stream_ops.open){stream.stream_ops.open(stream);}},llseek:function llseek(){throw new FS.ErrnoError(70);}},major:function major(dev){return dev>>8;},minor:function minor(dev){return dev&0xff;},makedev:function makedev(ma,mi){return ma<<8|mi;},registerDevice:function registerDevice(dev,ops){FS.devices[dev]={stream_ops:ops};},getDevice:function getDevice(dev){return FS.devices[dev];},getMounts:function getMounts(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts);}return mounts;},syncfs:function syncfs(populate,callback){if(typeof populate=='function'){callback=populate;populate=false;}FS.syncFSRequests++;if(FS.syncFSRequests>1){err("warning: ".concat(FS.syncFSRequests," FS.syncfs operations in flight at once, probably just doing extra work"));}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode);}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode);}return;}if(++completed>=mounts.length){doCallback(null);}};// sync all mounts
mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null);}mount.type.syncfs(mount,populate,done);});},mount:function mount(type,opts,mountpoint){var root=mountpoint==='/';var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10);}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;// use the absolute path
node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10);}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54);}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};// create a root node for the fs
var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot;}else if(node){// set as a mountpoint
node.mounted=mount;// add the new mount to the current mount's children
if(node.mount){node.mount.mounts.push(mount);}}return mountRoot;},unmount:function unmount(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28);}// destroy the nodes for this mount, and all its child mounts
var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current);}current=next;}});// no longer a mountpoint
node.mounted=null;// remove this mount from the child mounts
var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1);},lookup:function lookup(parent,name){return parent.node_ops.lookup(parent,name);},mknod:function mknod(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==='.'||name==='..'){throw new FS.ErrnoError(28);}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode);}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63);}return parent.node_ops.mknod(parent,name,mode,dev);},create:function create(path,mode){mode=mode!==undefined?mode:438/* 0666 */;mode&=4095;mode|=32768;return FS.mknod(path,mode,0);},mkdir:function mkdir(path,mode){mode=mode!==undefined?mode:511/* 0777 */;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0);},mkdirTree:function mkdirTree(path,mode){var dirs=path.split('/');var d='';for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+='/'+dirs[i];try{FS.mkdir(d,mode);}catch(e){if(e.errno!=20)throw e;}}},mkdev:function mkdev(path,mode,dev){if(typeof dev=='undefined'){dev=mode;mode=438/* 0666 */;}mode|=8192;return FS.mknod(path,mode,dev);},symlink:function symlink(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44);}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44);}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode);}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63);}return parent.node_ops.symlink(parent,newname,oldpath);},rename:function rename(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);// parents must exist
var lookup,old_dir,new_dir;// let the errors from non existant directories percolate up
lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);// need to be part of the same mount
if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75);}// source must exist
var old_node=FS.lookupNode(old_dir,old_name);// old path should not be an ancestor of the new path
var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!=='.'){throw new FS.ErrnoError(28);}// new path should not be an ancestor of the old path
relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!=='.'){throw new FS.ErrnoError(55);}// see if the new path already exists
var new_node;try{new_node=FS.lookupNode(new_dir,new_name);}catch(e){// not fatal
}// early out if nothing needs to change
if(old_node===new_node){return;}// we'll need to delete the old entry
var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode);}// need delete permissions if we'll be overwriting.
// need create permissions if new doesn't already exist.
errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode);}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63);}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10);}// if we are going to change the parent, check write permissions
if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,'w');if(errCode){throw new FS.ErrnoError(errCode);}}// remove the node from the lookup hash
FS.hashRemoveNode(old_node);// do the underlying fs rename
try{old_dir.node_ops.rename(old_node,new_dir,new_name);}catch(e){throw e;}finally{// add the node back to the hash (in case node_ops.rename
// changed its name)
FS.hashAddNode(old_node);}},rmdir:function rmdir(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode);}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63);}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10);}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);},readdir:function readdir(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54);}return node.node_ops.readdir(node);},unlink:function unlink(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44);}var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){// According to POSIX, we should map EISDIR to EPERM, but
// we instead do what Linux does (and we must, as we use
// the musl linux libc).
throw new FS.ErrnoError(errCode);}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63);}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10);}parent.node_ops.unlink(parent,name);FS.destroyNode(node);},readlink:function readlink(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44);}if(!link.node_ops.readlink){throw new FS.ErrnoError(28);}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link));},stat:function stat(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44);}if(!node.node_ops.getattr){throw new FS.ErrnoError(63);}return node.node_ops.getattr(node);},lstat:function lstat(path){return FS.stat(path,true);},chmod:function chmod(path,mode,dontFollow){var node;if(typeof path=='string'){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node;}else{node=path;}if(!node.node_ops.setattr){throw new FS.ErrnoError(63);}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()});},lchmod:function lchmod(path,mode){FS.chmod(path,mode,true);},fchmod:function fchmod(fd,mode){var stream=FS.getStreamChecked(fd);FS.chmod(stream.node,mode);},chown:function chown(path,uid,gid,dontFollow){var node;if(typeof path=='string'){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node;}else{node=path;}if(!node.node_ops.setattr){throw new FS.ErrnoError(63);}node.node_ops.setattr(node,{timestamp:Date.now()// we ignore the uid / gid for now
});},lchown:function lchown(path,uid,gid){FS.chown(path,uid,gid,true);},fchown:function fchown(fd,uid,gid){var stream=FS.getStreamChecked(fd);FS.chown(stream.node,uid,gid);},truncate:function truncate(path,len){if(len<0){throw new FS.ErrnoError(28);}var node;if(typeof path=='string'){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;}else{node=path;}if(!node.node_ops.setattr){throw new FS.ErrnoError(63);}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31);}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28);}var errCode=FS.nodePermissions(node,'w');if(errCode){throw new FS.ErrnoError(errCode);}node.node_ops.setattr(node,{size:len,timestamp:Date.now()});},ftruncate:function ftruncate(fd,len){var stream=FS.getStreamChecked(fd);if((stream.flags&2097155)===0){throw new FS.ErrnoError(28);}FS.truncate(stream.node,len);},utime:function utime(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)});},open:function open(path,flags,mode){if(path===""){throw new FS.ErrnoError(44);}flags=typeof flags=='string'?FS_modeStringToFlags(flags):flags;mode=typeof mode=='undefined'?438/* 0666 */:mode;if(flags&64){mode=mode&4095|32768;}else{mode=0;}var node;if(_typeof(path)=='object'){node=path;}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node;}catch(e){// ignore
}}// perhaps we need to create the node
var created=false;if(flags&64){if(node){// if O_CREAT and O_EXCL are set, error out if the node already exists
if(flags&128){throw new FS.ErrnoError(20);}}else{// node doesn't exist, try to create it
node=FS.mknod(path,mode,0);created=true;}}if(!node){throw new FS.ErrnoError(44);}// can't truncate a device
if(FS.isChrdev(node.mode)){flags&=~512;}// if asked only for a directory, then this must be one
if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54);}// check permissions, if this is not a file we just created now (it is ok to
// create and write to a file with read-only permissions; it is read-only
// for later use)
if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode);}}// do truncation if necessary
if(flags&512&&!created){FS.truncate(node,0);}// we've already handled these, don't pass down to the underlying vfs
flags&=~(128|512|131072);// register the stream with the filesystem
var stream=FS.createStream({node:node,path:FS.getPath(node),// we want the absolute path to the node
flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,// used by the file family libc calls (fopen, fwrite, ferror, etc.)
ungotten:[],error:false});// call the new stream's open function
if(stream.stream_ops.open){stream.stream_ops.open(stream);}if(Module['logReadFiles']&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;}}return stream;},close:function close(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if(stream.getdents)stream.getdents=null;// free readdir state
try{if(stream.stream_ops.close){stream.stream_ops.close(stream);}}catch(e){throw e;}finally{FS.closeStream(stream.fd);}stream.fd=null;},isClosed:function isClosed(stream){return stream.fd===null;},llseek:function llseek(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70);}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28);}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position;},read:function read(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28);}if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8);}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31);}if(!stream.stream_ops.read){throw new FS.ErrnoError(28);}var seeking=typeof position!='undefined';if(!seeking){position=stream.position;}else if(!stream.seekable){throw new FS.ErrnoError(70);}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead;},write:function write(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28);}if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8);}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31);}if(!stream.stream_ops.write){throw new FS.ErrnoError(28);}if(stream.seekable&&stream.flags&1024){// seek to the end before writing in append mode
FS.llseek(stream,0,2);}var seeking=typeof position!='undefined';if(!seeking){position=stream.position;}else if(!stream.seekable){throw new FS.ErrnoError(70);}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten;},allocate:function allocate(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if(offset<0||length<=0){throw new FS.ErrnoError(28);}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8);}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43);}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138);}stream.stream_ops.allocate(stream,offset,length);},mmap:function mmap(stream,length,position,prot,flags){// User requests writing to file (prot & PROT_WRITE != 0).
// Checking if we have permissions to write to the file unless
// MAP_PRIVATE flag is set. According to POSIX spec it is possible
// to write to file opened in read-only mode with MAP_PRIVATE flag,
// as all modifications will be visible only in the memory of
// the current process.
if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2);}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2);}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43);}return stream.stream_ops.mmap(stream,length,position,prot,flags);},msync:function msync(stream,buffer,offset,length,mmapFlags){if(!stream.stream_ops.msync){return 0;}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags);},munmap:function munmap(stream){return 0;},ioctl:function ioctl(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59);}return stream.stream_ops.ioctl(stream,cmd,arg);},readFile:function readFile(path){var opts=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};opts.flags=opts.flags||0;opts.encoding=opts.encoding||'binary';if(opts.encoding!=='utf8'&&opts.encoding!=='binary'){throw new Error("Invalid encoding type \"".concat(opts.encoding,"\""));}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==='utf8'){ret=UTF8ArrayToString(buf,0);}else if(opts.encoding==='binary'){ret=buf;}FS.close(stream);return ret;},writeFile:function writeFile(path,data){var opts=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data=='string'){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn);}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn);}else{throw new Error('Unsupported data type');}FS.close(stream);},cwd:function cwd(){return FS.currentPath;},chdir:function chdir(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44);}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54);}var errCode=FS.nodePermissions(lookup.node,'x');if(errCode){throw new FS.ErrnoError(errCode);}FS.currentPath=lookup.path;},createDefaultDirectories:function createDefaultDirectories(){FS.mkdir('/tmp');FS.mkdir('/home');FS.mkdir('/home/web_user');},createDefaultDevices:function createDefaultDevices(){// create /dev
FS.mkdir('/dev');// setup /dev/null
FS.registerDevice(FS.makedev(1,3),{read:function read(){return 0;},write:function write(stream,buffer,offset,length,pos){return length;}});FS.mkdev('/dev/null',FS.makedev(1,3));// setup /dev/tty and /dev/tty1
// stderr needs to print output using err() rather than out()
// so we register a second tty just for it.
TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev('/dev/tty',FS.makedev(5,0));FS.mkdev('/dev/tty1',FS.makedev(6,0));// setup /dev/[u]random
// use a buffer to avoid overhead of individual crypto calls per byte
var randomBuffer=new Uint8Array(1024),randomLeft=0;var randomByte=function randomByte(){if(randomLeft===0){randomLeft=_randomFill(randomBuffer).byteLength;}return randomBuffer[--randomLeft];};FS.createDevice('/dev','random',randomByte);FS.createDevice('/dev','urandom',randomByte);// we're not going to emulate the actual shm device,
// just create the tmp dirs that reside in it commonly
FS.mkdir('/dev/shm');FS.mkdir('/dev/shm/tmp');},createSpecialDirectories:function createSpecialDirectories(){// create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the
// name of the stream for fd 6 (see test_unistd_ttyname)
FS.mkdir('/proc');var proc_self=FS.mkdir('/proc/self');FS.mkdir('/proc/self/fd');FS.mount({mount:function mount(){var node=FS.createNode(proc_self,'fd',16384|511/* 0777 */,73);node.node_ops={lookup:function lookup(parent,name){var fd=+name;var stream=FS.getStreamChecked(fd);var ret={parent:null,mount:{mountpoint:'fake'},node_ops:{readlink:function readlink(){return stream.path;}}};ret.parent=ret;// make it look like a simple root node
return ret;}};return node;}},{},'/proc/self/fd');},createStandardStreams:function createStandardStreams(){// TODO deprecate the old functionality of a single
// input / output callback and that utilizes FS.createDevice
// and instead require a unique set of stream ops
// by default, we symlink the standard streams to the
// default tty devices. however, if the standard streams
// have been overwritten we create a unique device for
// them instead.
if(Module['stdin']){FS.createDevice('/dev','stdin',Module['stdin']);}else{FS.symlink('/dev/tty','/dev/stdin');}if(Module['stdout']){FS.createDevice('/dev','stdout',null,Module['stdout']);}else{FS.symlink('/dev/tty','/dev/stdout');}if(Module['stderr']){FS.createDevice('/dev','stderr',null,Module['stderr']);}else{FS.symlink('/dev/tty1','/dev/stderr');}// open default streams for the stdin, stdout and stderr devices
var stdin=FS.open('/dev/stdin',0);var stdout=FS.open('/dev/stdout',1);var stderr=FS.open('/dev/stderr',1);},ensureErrnoError:function ensureErrnoError(){if(FS.ErrnoError)return;FS.ErrnoError=/** @this{Object} */function ErrnoError(errno,node){// We set the `name` property to be able to identify `FS.ErrnoError`
// - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.
// - when using PROXYFS, an error can come from an underlying FS
// as different FS objects have their own FS.ErrnoError each,
// the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.
// we'll use the reliable test `err.name == "ErrnoError"` instead
this.name='ErrnoError';this.node=node;this.setErrno=/** @this{Object} */function(errno){this.errno=errno;};this.setErrno(errno);this.message='FS error';};FS.ErrnoError.prototype=new Error();FS.ErrnoError.prototype.constructor=FS.ErrnoError;// Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
[44].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack='<generic error, no stack>';});},staticInit:function staticInit(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},'/');FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={'MEMFS':MEMFS,'IDBFS':IDBFS};},init:function init(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();// Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
Module['stdin']=input||Module['stdin'];Module['stdout']=output||Module['stdout'];Module['stderr']=error||Module['stderr'];FS.createStandardStreams();},quit:function quit(){FS.init.initialized=false;// force-flush all streams, so we get musl std streams printed out
// close all of our streams
for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue;}FS.close(stream);}},findObject:function findObject(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(!ret.exists){return null;}return ret.object;},analyzePath:function analyzePath(path,dontResolveLastLink){// operate from within the context of the symlink's target
try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path;}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==='/';}catch(e){ret.error=e.errno;};return ret;},createPath:function createPath(parent,path,canRead,canWrite){parent=typeof parent=='string'?parent:FS.getPath(parent);var parts=path.split('/').reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current);}catch(e){// ignore EEXIST
}parent=current;}return current;},createFile:function createFile(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent=='string'?parent:FS.getPath(parent),name);var mode=FS_getMode(canRead,canWrite);return FS.create(path,mode);},createDataFile:function createDataFile(parent,name,data,canRead,canWrite,canOwn){var path=name;if(parent){parent=typeof parent=='string'?parent:FS.getPath(parent);path=name?PATH.join2(parent,name):parent;}var mode=FS_getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data=='string'){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr;}// make sure we can write to the file
FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode);}return node;},createDevice:function createDevice(parent,name,input,output){var path=PATH.join2(typeof parent=='string'?parent:FS.getPath(parent),name);var mode=FS_getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);// Create a fake device that a set of stream ops to emulate
// the old behavior.
FS.registerDevice(dev,{open:function open(stream){stream.seekable=false;},close:function close(stream){// flush any pending line data
if(output&&output.buffer&&output.buffer.length){output(10);}},read:function read(stream,buffer,offset,length,pos/* ignored */){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input();}catch(e){throw new FS.ErrnoError(29);}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6);}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result;}if(bytesRead){stream.node.timestamp=Date.now();}return bytesRead;},write:function write(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i]);}catch(e){throw new FS.ErrnoError(29);}}if(length){stream.node.timestamp=Date.now();}return i;}});return FS.mkdev(path,mode,dev);},forceLoadFile:function forceLoadFile(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!='undefined'){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");}else if(read_){// Command-line.
try{// WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
//          read() will try to parse UTF8.
obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length;}catch(e){throw new FS.ErrnoError(29);}}else{throw new Error('Cannot load without read() or XMLHttpRequest.');}},createLazyFile:function createLazyFile(parent,name,url,canRead,canWrite){// Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
/** @constructor */function LazyUint8Array(){this.lengthKnown=false;this.chunks=[];// Loaded chunks. Index is the chunk number
}LazyUint8Array.prototype.get=/** @this{Object} */function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined;}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset];};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter;};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){// Find length
var xhr=new XMLHttpRequest();xhr.open('HEAD',url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;// Chunk size in bytes
if(!hasByteServing)chunkSize=datalength;// Function to get a range from the remote URL.
var doXHR=function doXHR(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");// TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
var xhr=new XMLHttpRequest();xhr.open('GET',url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);// Some hints to the browser that we want binary data.
xhr.responseType='arraybuffer';if(xhr.overrideMimeType){xhr.overrideMimeType('text/plain; charset=x-user-defined');}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(/** @type{Array<number>} */xhr.response||[]);}return intArrayFromString(xhr.responseText||'',true);};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;// including this byte
end=Math.min(end,datalength-1);// if datalength-1 is selected, this is the last block
if(typeof lazyArray.chunks[chunkNum]=='undefined'){lazyArray.chunks[chunkNum]=doXHR(start,end);}if(typeof lazyArray.chunks[chunkNum]=='undefined')throw new Error('doXHR failed!');return lazyArray.chunks[chunkNum];});if(usesGzip||!datalength){// if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
chunkSize=datalength=1;// this will force getter(0)/doXHR do download the whole file
datalength=this.getter(0).length;chunkSize=datalength;out("LazyFiles on gzip forces download of the whole file when length is accessed");}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true;};if(typeof XMLHttpRequest!='undefined'){if(!ENVIRONMENT_IS_WORKER)throw'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';var lazyArray=new LazyUint8Array();Object.defineProperties(lazyArray,{length:{get:/** @this{Object} */function get(){if(!this.lengthKnown){this.cacheLength();}return this._length;}},chunkSize:{get:/** @this{Object} */function get(){if(!this.lengthKnown){this.cacheLength();}return this._chunkSize;}}});var properties={isDevice:false,contents:lazyArray};}else{var properties={isDevice:false,url:url};}var node=FS.createFile(parent,name,properties,canRead,canWrite);// This is a total hack, but I want to get this lazy file code out of the
// core of MEMFS. If we want to keep this lazy file concept I feel it should
// be its own thin LAZYFS proxying calls to MEMFS.
if(properties.contents){node.contents=properties.contents;}else if(properties.url){node.contents=null;node.url=properties.url;}// Add a function that defers querying the file size until it is asked the first time.
Object.defineProperties(node,{usedBytes:{get:/** @this {FSNode} */function get(){return this.contents.length;}}});// override each stream op with one that tries to force load the lazy file first
var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments);};});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){// normal array
for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i];}}else{for(var i=0;i<size;i++){// LazyUint8Array from sync binary XHR
buffer[offset+i]=contents.get(position+i);}}return size;}// use a custom read function
stream_ops.read=function(stream,buffer,offset,length,position){FS.forceLoadFile(node);return writeChunks(stream,buffer,offset,length,position);};// use a custom mmap function
stream_ops.mmap=function(stream,length,position,prot,flags){FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48);}writeChunks(stream,HEAP8,ptr,length,position);return{ptr:ptr,allocated:true};};node.stream_ops=stream_ops;return node;}};/**
     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the
     * emscripten HEAP, returns a copy of that string as a Javascript String object.
     *
     * @param {number} ptr
     * @param {number=} maxBytesToRead - An optional length that specifies the
     *   maximum number of bytes to read. You can omit this parameter to scan the
     *   string until the first 0 byte. If maxBytesToRead is passed, and the string
     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the
     *   string will cut short at that byte index (i.e. maxBytesToRead will not
     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing
     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw
     *   JS JIT optimizations off, so it is worth to consider consistently using one
     * @return {string}
     */var UTF8ToString=function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):'';};var SYSCALLS={DEFAULT_POLLMASK:5,calculateAt:function calculateAt(dirfd,path,allowEmpty){if(PATH.isAbs(path)){return path;}// relative path
var dir;if(dirfd===-100){dir=FS.cwd();}else{var dirstream=SYSCALLS.getStreamFromFD(dirfd);dir=dirstream.path;}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44);;}return dir;}return PATH.join2(dir,path);},doStat:function doStat(func,path,buf){try{var stat=func(path);}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){// an error occurred while trying to look up the path; we should just report ENOTDIR
return-54;}throw e;}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=stat.mode;HEAPU32[buf+8>>2]=stat.nlink;HEAP32[buf+12>>2]=stat.uid;HEAP32[buf+16>>2]=stat.gid;HEAP32[buf+20>>2]=stat.rdev;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?+Math.floor(tempDouble/4294967296.0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[buf+24>>2]=tempI64[0],HEAP32[buf+28>>2]=tempI64[1];HEAP32[buf+32>>2]=4096;HEAP32[buf+36>>2]=stat.blocks;var atime=stat.atime.getTime();var mtime=stat.mtime.getTime();var ctime=stat.ctime.getTime();tempI64=[Math.floor(atime/1000)>>>0,(tempDouble=Math.floor(atime/1000),+Math.abs(tempDouble)>=1.0?tempDouble>0.0?+Math.floor(tempDouble/4294967296.0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAPU32[buf+48>>2]=atime%1000*1000;tempI64=[Math.floor(mtime/1000)>>>0,(tempDouble=Math.floor(mtime/1000),+Math.abs(tempDouble)>=1.0?tempDouble>0.0?+Math.floor(tempDouble/4294967296.0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[buf+56>>2]=tempI64[0],HEAP32[buf+60>>2]=tempI64[1];HEAPU32[buf+64>>2]=mtime%1000*1000;tempI64=[Math.floor(ctime/1000)>>>0,(tempDouble=Math.floor(ctime/1000),+Math.abs(tempDouble)>=1.0?tempDouble>0.0?+Math.floor(tempDouble/4294967296.0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[buf+72>>2]=tempI64[0],HEAP32[buf+76>>2]=tempI64[1];HEAPU32[buf+80>>2]=ctime%1000*1000;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?+Math.floor(tempDouble/4294967296.0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[buf+88>>2]=tempI64[0],HEAP32[buf+92>>2]=tempI64[1];return 0;},doMsync:function doMsync(addr,stream,len,flags,offset){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43);}if(flags&2){// MAP_PRIVATE calls need not to be synced back to underlying fs
return 0;}var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags);},varargs:undefined,get:function get(){// the `+` prepended here is necessary to convince the JSCompiler that varargs is indeed a number.
var ret=HEAP32[+SYSCALLS.varargs>>2];SYSCALLS.varargs+=4;return ret;},getp:function getp(){return SYSCALLS.get();},getStr:function getStr(ptr){var ret=UTF8ToString(ptr);return ret;},getStreamFromFD:function getStreamFromFD(fd){var stream=FS.getStreamChecked(fd);return stream;}};function ___syscall_chmod(path,mode){try{path=SYSCALLS.getStr(path);FS.chmod(path,mode);return 0;}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;}}function ___syscall_fchmod(fd,mode){try{FS.fchmod(fd,mode);return 0;}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;}}var setErrNo=function setErrNo(value){HEAP32[_errno_location()>>2]=value;return value;};function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-28;}while(FS.streams[arg]){arg++;}var newStream;newStream=FS.createStream(stream,arg);return newStream.fd;}case 1:case 2:return 0;// FD_CLOEXEC makes no sense for a single process.
case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0;}case 5:{var arg=SYSCALLS.getp();var offset=0;// We're always unlocked.
HEAP16[arg+offset>>1]=2;return 0;}case 6:case 7:return 0;// Pretend that the locking is successful.
case 16:case 8:return-28;// These are for sockets. We don't have them fully implemented yet.
case 9:// musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fcntl() returns that, and we set errno ourselves.
setErrNo(28);return-1;default:{return-28;}}}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;}}function ___syscall_fstat64(fd,buf){try{var stream=SYSCALLS.getStreamFromFD(fd);return SYSCALLS.doStat(FS.stat,stream.path,buf);}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;}}var convertI32PairToI53Checked=function convertI32PairToI53Checked(lo,hi){return hi+0x200000>>>0<0x400001-!!lo?(lo>>>0)+hi*4294967296:NaN;};function ___syscall_ftruncate64(fd,length_low,length_high){var length=convertI32PairToI53Checked(length_low,length_high);;try{if(isNaN(length))return 61;FS.ftruncate(fd,length);return 0;}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;};}var stringToUTF8=function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);};function ___syscall_getcwd(buf,size){try{if(size===0)return-28;var cwd=FS.cwd();var cwdLengthInBytes=lengthBytesUTF8(cwd)+1;if(size<cwdLengthInBytes)return-68;stringToUTF8(cwd,buf,size);return cwdLengthInBytes;}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;}}function ___syscall_getdents64(fd,dirp,count){try{var stream=SYSCALLS.getStreamFromFD(fd);if(!stream.getdents){stream.getdents=FS.readdir(stream.path);}var struct_size=280;var pos=0;var off=FS.llseek(stream,0,1);var idx=Math.floor(off/struct_size);while(idx<stream.getdents.length&&pos+struct_size<=count){var id;var type;var name=stream.getdents[idx];if(name==='.'){id=stream.node.id;type=4;// DT_DIR
}else if(name==='..'){var lookup=FS.lookupPath(stream.path,{parent:true});id=lookup.node.id;type=4;// DT_DIR
}else{var child=FS.lookupNode(stream.node,name);id=child.id;type=FS.isChrdev(child.mode)?2:// DT_CHR, character device.
FS.isDir(child.mode)?4:// DT_DIR, directory.
FS.isLink(child.mode)?10:// DT_LNK, symbolic link.
8;// DT_REG, regular file.
}tempI64=[id>>>0,(tempDouble=id,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?+Math.floor(tempDouble/4294967296.0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[dirp+pos>>2]=tempI64[0],HEAP32[dirp+pos+4>>2]=tempI64[1];tempI64=[(idx+1)*struct_size>>>0,(tempDouble=(idx+1)*struct_size,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?+Math.floor(tempDouble/4294967296.0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[dirp+pos+8>>2]=tempI64[0],HEAP32[dirp+pos+12>>2]=tempI64[1];HEAP16[dirp+pos+16>>1]=280;HEAP8[dirp+pos+18>>0]=type;stringToUTF8(name,dirp+pos+19,256);pos+=struct_size;idx+=1;}FS.llseek(stream,idx*struct_size,0);return pos;}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;}}function ___syscall_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(op){case 21509:{if(!stream.tty)return-59;return 0;}case 21505:{if(!stream.tty)return-59;if(stream.tty.ops.ioctl_tcgets){var termios=stream.tty.ops.ioctl_tcgets(stream);var argp=SYSCALLS.getp();HEAP32[argp>>2]=termios.c_iflag||0;HEAP32[argp+4>>2]=termios.c_oflag||0;HEAP32[argp+8>>2]=termios.c_cflag||0;HEAP32[argp+12>>2]=termios.c_lflag||0;for(var i=0;i<32;i++){HEAP8[argp+i+17>>0]=termios.c_cc[i]||0;}return 0;}return 0;}case 21510:case 21511:case 21512:{if(!stream.tty)return-59;return 0;// no-op, not actually adjusting terminal settings
}case 21506:case 21507:case 21508:{if(!stream.tty)return-59;if(stream.tty.ops.ioctl_tcsets){var argp=SYSCALLS.getp();var c_iflag=HEAP32[argp>>2];var c_oflag=HEAP32[argp+4>>2];var c_cflag=HEAP32[argp+8>>2];var c_lflag=HEAP32[argp+12>>2];var c_cc=[];for(var i=0;i<32;i++){c_cc.push(HEAP8[argp+i+17>>0]);}return stream.tty.ops.ioctl_tcsets(stream.tty,op,{c_iflag:c_iflag,c_oflag:c_oflag,c_cflag:c_cflag,c_lflag:c_lflag,c_cc:c_cc});}return 0;// no-op, not actually adjusting terminal settings
}case 21519:{if(!stream.tty)return-59;var argp=SYSCALLS.getp();HEAP32[argp>>2]=0;return 0;}case 21520:{if(!stream.tty)return-59;return-28;// not supported
}case 21531:{var argp=SYSCALLS.getp();return FS.ioctl(stream,op,argp);}case 21523:{// TODO: in theory we should write to the winsize struct that gets
// passed in, but for now musl doesn't read anything on it
if(!stream.tty)return-59;if(stream.tty.ops.ioctl_tiocgwinsz){var winsize=stream.tty.ops.ioctl_tiocgwinsz(stream.tty);var argp=SYSCALLS.getp();HEAP16[argp>>1]=winsize[0];HEAP16[argp+2>>1]=winsize[1];}return 0;}case 21524:{// TODO: technically, this ioctl call should change the window size.
// but, since emscripten doesn't have any concept of a terminal window
// yet, we'll just silently throw it away as we do TIOCGWINSZ
if(!stream.tty)return-59;return 0;}case 21515:{if(!stream.tty)return-59;return 0;}default:return-28;// not supported
}}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;}}function ___syscall_lstat64(path,buf){try{path=SYSCALLS.getStr(path);return SYSCALLS.doStat(FS.lstat,path,buf);}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;}}function ___syscall_mkdirat(dirfd,path,mode){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);// remove a trailing slash, if one - /a/b/ has basename of '', but
// we want to create b in the context of this function
path=PATH.normalize(path);if(path[path.length-1]==='/')path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0;}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;}}function ___syscall_newfstatat(dirfd,path,buf,flags){try{path=SYSCALLS.getStr(path);var nofollow=flags&256;var allowEmpty=flags&4096;flags=flags&~6400;path=SYSCALLS.calculateAt(dirfd,path,allowEmpty);return SYSCALLS.doStat(nofollow?FS.lstat:FS.stat,path,buf);}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;}}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs;try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);var mode=varargs?SYSCALLS.get():0;return FS.open(path,flags,mode).fd;}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;}}function ___syscall_rmdir(path){try{path=SYSCALLS.getStr(path);FS.rmdir(path);return 0;}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;}}function ___syscall_stat64(path,buf){try{path=SYSCALLS.getStr(path);return SYSCALLS.doStat(FS.stat,path,buf);}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;}}function ___syscall_unlinkat(dirfd,path,flags){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);if(flags===0){FS.unlink(path);}else if(flags===512){FS.rmdir(path);}else{abort('Invalid flags passed to unlinkat');}return 0;}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return-e.errno;}}var nowIsMonotonic=true;;var __emscripten_get_now_is_monotonic=function __emscripten_get_now_is_monotonic(){return nowIsMonotonic;};var isLeapYear=function isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0);};var MONTH_DAYS_LEAP_CUMULATIVE=[0,31,60,91,121,152,182,213,244,274,305,335];var MONTH_DAYS_REGULAR_CUMULATIVE=[0,31,59,90,120,151,181,212,243,273,304,334];var ydayFromDate=function ydayFromDate(date){var leap=isLeapYear(date.getFullYear());var monthDaysCumulative=leap?MONTH_DAYS_LEAP_CUMULATIVE:MONTH_DAYS_REGULAR_CUMULATIVE;var yday=monthDaysCumulative[date.getMonth()]+date.getDate()-1;// -1 since it's days since Jan 1
return yday;};function __localtime_js(time_low,time_high,tmPtr){var time=convertI32PairToI53Checked(time_low,time_high);;var date=new Date(time*1000);HEAP32[tmPtr>>2]=date.getSeconds();HEAP32[tmPtr+4>>2]=date.getMinutes();HEAP32[tmPtr+8>>2]=date.getHours();HEAP32[tmPtr+12>>2]=date.getDate();HEAP32[tmPtr+16>>2]=date.getMonth();HEAP32[tmPtr+20>>2]=date.getFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getDay();var yday=ydayFromDate(date)|0;HEAP32[tmPtr+28>>2]=yday;HEAP32[tmPtr+36>>2]=-(date.getTimezoneOffset()*60);// Attention: DST is in December in South, and some regions don't have DST at all.
var start=new Date(date.getFullYear(),0,1);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dst=(summerOffset!=winterOffset&&date.getTimezoneOffset()==Math.min(winterOffset,summerOffset))|0;HEAP32[tmPtr+32>>2]=dst;;}var __mktime_js=function __mktime_js(tmPtr){var ret=function(){var date=new Date(HEAP32[tmPtr+20>>2]+1900,HEAP32[tmPtr+16>>2],HEAP32[tmPtr+12>>2],HEAP32[tmPtr+8>>2],HEAP32[tmPtr+4>>2],HEAP32[tmPtr>>2],0);// There's an ambiguous hour when the time goes back; the tm_isdst field is
// used to disambiguate it.  Date() basically guesses, so we fix it up if it
// guessed wrong, or fill in tm_isdst with the guess if it's -1.
var dst=HEAP32[tmPtr+32>>2];var guessedOffset=date.getTimezoneOffset();var start=new Date(date.getFullYear(),0,1);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dstOffset=Math.min(winterOffset,summerOffset);// DST is in December in South
if(dst<0){// Attention: some regions don't have DST at all.
HEAP32[tmPtr+32>>2]=Number(summerOffset!=winterOffset&&dstOffset==guessedOffset);}else if(dst>0!=(dstOffset==guessedOffset)){var nonDstOffset=Math.max(winterOffset,summerOffset);var trueOffset=dst>0?dstOffset:nonDstOffset;// Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.
date.setTime(date.getTime()+(trueOffset-guessedOffset)*60000);}HEAP32[tmPtr+24>>2]=date.getDay();var yday=ydayFromDate(date)|0;HEAP32[tmPtr+28>>2]=yday;// To match expected behavior, update fields from date
HEAP32[tmPtr>>2]=date.getSeconds();HEAP32[tmPtr+4>>2]=date.getMinutes();HEAP32[tmPtr+8>>2]=date.getHours();HEAP32[tmPtr+12>>2]=date.getDate();HEAP32[tmPtr+16>>2]=date.getMonth();HEAP32[tmPtr+20>>2]=date.getYear();return date.getTime()/1000;}();return _setTempRet((tempDouble=ret,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?+Math.floor(tempDouble/4294967296.0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)),ret>>>0;};var stringToNewUTF8=function stringToNewUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc2(size);if(ret)stringToUTF8(str,ret,size);return ret;};var __tzset_js=function __tzset_js(timezone,daylight,tzname){// TODO: Use (malleable) environment variables instead of system settings.
var currentYear=new Date().getFullYear();var winter=new Date(currentYear,0,1);var summer=new Date(currentYear,6,1);var winterOffset=winter.getTimezoneOffset();var summerOffset=summer.getTimezoneOffset();// Local standard timezone offset. Local standard time is not adjusted for daylight savings.
// This code uses the fact that getTimezoneOffset returns a greater value during Standard Time versus Daylight Saving Time (DST).
// Thus it determines the expected output during Standard Time, and it compares whether the output of the given date the same (Standard) or less (DST).
var stdTimezoneOffset=Math.max(winterOffset,summerOffset);// timezone is specified as seconds west of UTC ("The external variable
// `timezone` shall be set to the difference, in seconds, between
// Coordinated Universal Time (UTC) and local standard time."), the same
// as returned by stdTimezoneOffset.
// See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html
HEAPU32[timezone>>2]=stdTimezoneOffset*60;HEAP32[daylight>>2]=Number(winterOffset!=summerOffset);function extractZone(date){var match=date.toTimeString().match(/\(([A-Za-z ]+)\)$/);return match?match[1]:"GMT";};var winterName=extractZone(winter);var summerName=extractZone(summer);var winterNamePtr=stringToNewUTF8(winterName);var summerNamePtr=stringToNewUTF8(summerName);if(summerOffset<winterOffset){// Northern hemisphere
HEAPU32[tzname>>2]=winterNamePtr;HEAPU32[tzname+4>>2]=summerNamePtr;}else{HEAPU32[tzname>>2]=summerNamePtr;HEAPU32[tzname+4>>2]=winterNamePtr;}};var _abort=function _abort(){abort('');};var _emscripten_set_main_loop_timing=function _emscripten_set_main_loop_timing(mode,value){Browser.mainLoop.timingMode=mode;Browser.mainLoop.timingValue=value;if(!Browser.mainLoop.func){return 1;// Return non-zero on failure, can't set timing mode when there is no main loop.
}if(!Browser.mainLoop.running){Browser.mainLoop.running=true;}if(mode==0){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setTimeout(){var timeUntilNextTick=Math.max(0,Browser.mainLoop.tickStartTime+value-_emscripten_get_now())|0;setTimeout(Browser.mainLoop.runner,timeUntilNextTick);// doing this each time means that on exception, we stop
};Browser.mainLoop.method='timeout';}else if(mode==1){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_rAF(){Browser.requestAnimationFrame(Browser.mainLoop.runner);};Browser.mainLoop.method='rAF';}else if(mode==2){if(typeof setImmediate=='undefined'){// Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)
var setImmediates=[];var emscriptenMainLoopMessageId='setimmediate';/** @param {Event} event */var Browser_setImmediate_messageHandler=function Browser_setImmediate_messageHandler(event){// When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,
// so check for both cases.
if(event.data===emscriptenMainLoopMessageId||event.data.target===emscriptenMainLoopMessageId){event.stopPropagation();setImmediates.shift()();}};addEventListener("message",Browser_setImmediate_messageHandler,true);setImmediate=/** @type{function(function(): ?, ...?): number} */function Browser_emulated_setImmediate(func){setImmediates.push(func);if(ENVIRONMENT_IS_WORKER){if(Module['setImmediates']===undefined)Module['setImmediates']=[];Module['setImmediates'].push(func);postMessage({target:emscriptenMainLoopMessageId});// In --proxy-to-worker, route the message via proxyClient.js
}else postMessage(emscriptenMainLoopMessageId,"*");// On the main thread, can just send the message to itself.
};}Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setImmediate(){setImmediate(Browser.mainLoop.runner);};Browser.mainLoop.method='immediate';}return 0;};var _emscripten_get_now;// Modern environment where performance.now() is supported:
// N.B. a shorter form "_emscripten_get_now = performance.now;" is
// unfortunately not allowed even in current browsers (e.g. FF Nightly 75).
_emscripten_get_now=function _emscripten_get_now(){return performance.now();};;/**
     * @param {number=} arg
     * @param {boolean=} noSetTiming
     */var setMainLoop=function setMainLoop(browserIterationFunc,fps,simulateInfiniteLoop,arg,noSetTiming){assert(!Browser.mainLoop.func,'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');Browser.mainLoop.func=browserIterationFunc;Browser.mainLoop.arg=arg;// Closure compiler bug(?): Closure does not see that the assignment
//   var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop
// is a value copy of a number (even with the JSDoc @type annotation)
// but optimizeis the code as if the assignment was a reference assignment,
// which results in Browser.mainLoop.pause() not working. Hence use a
// workaround to make Closure believe this is a value copy that should occur:
// (TODO: Minimize this down to a small test case and report - was unable
// to reproduce in a small written test case)
/** @type{number} */var thisMainLoopId=function(){return Browser.mainLoop.currentlyRunningMainloop;}();function checkIsRunning(){if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop){return false;}return true;}// We create the loop runner here but it is not actually running until
// _emscripten_set_main_loop_timing is called (which might happen a
// later time).  This member signifies that the current runner has not
// yet been started so that we can call runtimeKeepalivePush when it
// gets it timing set for the first time.
Browser.mainLoop.running=false;Browser.mainLoop.runner=function Browser_mainLoop_runner(){if(ABORT)return;if(Browser.mainLoop.queue.length>0){var start=Date.now();var blocker=Browser.mainLoop.queue.shift();blocker.func(blocker.arg);if(Browser.mainLoop.remainingBlockers){var remaining=Browser.mainLoop.remainingBlockers;var next=remaining%1==0?remaining-1:Math.floor(remaining);if(blocker.counted){Browser.mainLoop.remainingBlockers=next;}else{// not counted, but move the progress along a tiny bit
next=next+0.5;// do not steal all the next one's progress
Browser.mainLoop.remainingBlockers=(8*remaining+next)/9;}}Browser.mainLoop.updateStatus();// catches pause/resume main loop from blocker execution
if(!checkIsRunning())return;setTimeout(Browser.mainLoop.runner,0);return;}// catch pauses from non-main loop sources
if(!checkIsRunning())return;// Implement very basic swap interval control
Browser.mainLoop.currentFrameNumber=Browser.mainLoop.currentFrameNumber+1|0;if(Browser.mainLoop.timingMode==1&&Browser.mainLoop.timingValue>1&&Browser.mainLoop.currentFrameNumber%Browser.mainLoop.timingValue!=0){// Not the scheduled time to render this frame - skip.
Browser.mainLoop.scheduler();return;}else if(Browser.mainLoop.timingMode==0){Browser.mainLoop.tickStartTime=_emscripten_get_now();}// Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
// VBO double-buffering and reduce GPU stalls.
GL.newRenderingFrameStarted();Browser.mainLoop.runIter(browserIterationFunc);// catch pauses from the main loop itself
if(!checkIsRunning())return;// Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
// to queue the newest produced audio samples.
// TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
//       do not need to be hardcoded into this function, but can be more generic.
if((typeof SDL==="undefined"?"undefined":_typeof(SDL))=='object'&&SDL.audio&&SDL.audio.queueNewAudioData)SDL.audio.queueNewAudioData();Browser.mainLoop.scheduler();};if(!noSetTiming){if(fps&&fps>0){_emscripten_set_main_loop_timing(0,1000.0/fps);}else{// Do rAF by rendering each frame (no decimating)
_emscripten_set_main_loop_timing(1,1);}Browser.mainLoop.scheduler();}if(simulateInfiniteLoop){throw'unwind';}};var handleException=function handleException(e){// Certain exception types we do not treat as errors since they are used for
// internal control flow.
// 1. ExitStatus, which is thrown by exit()
// 2. "unwind", which is thrown by emscripten_unwind_to_js_event_loop() and others
//    that wish to return to JS event loop.
if(e instanceof ExitStatus||e=='unwind'){return EXITSTATUS;}quit_(1,e);};var _proc_exit=function _proc_exit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module['onExit'])Module['onExit'](code);ABORT=true;}quit_(code,new ExitStatus(code));};/** @suppress {duplicate } */ /** @param {boolean|number=} implicit */var exitJS=function exitJS(status,implicit){EXITSTATUS=status;_proc_exit(status);};var _exit=exitJS;var maybeExit=function maybeExit(){if(!keepRuntimeAlive()){try{_exit(EXITSTATUS);}catch(e){handleException(e);}}};var callUserCallback=function callUserCallback(func){if(ABORT){return;}try{func();maybeExit();}catch(e){handleException(e);}};/** @param {number=} timeout */var _safeSetTimeout=function safeSetTimeout(func,timeout){return setTimeout(function(){callUserCallback(func);},timeout);};var warnOnce=function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text);}};var Browser={mainLoop:{running:false,scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function pause(){Browser.mainLoop.scheduler=null;// Incrementing this signals the previous main loop that it's now become old, and it must return.
Browser.mainLoop.currentlyRunningMainloop++;},resume:function resume(){Browser.mainLoop.currentlyRunningMainloop++;var timingMode=Browser.mainLoop.timingMode;var timingValue=Browser.mainLoop.timingValue;var func=Browser.mainLoop.func;Browser.mainLoop.func=null;// do not set timing and call scheduler, we will do it on the next lines
setMainLoop(func,0,false,Browser.mainLoop.arg,true);_emscripten_set_main_loop_timing(timingMode,timingValue);Browser.mainLoop.scheduler();},updateStatus:function updateStatus(){if(Module['setStatus']){var message=Module['statusMessage']||'Please wait...';var remaining=Browser.mainLoop.remainingBlockers;var expected=Browser.mainLoop.expectedBlockers;if(remaining){if(remaining<expected){Module['setStatus'](message+' ('+(expected-remaining)+'/'+expected+')');}else{Module['setStatus'](message);}}else{Module['setStatus']('');}}},runIter:function runIter(func){if(ABORT)return;if(Module['preMainLoop']){var preRet=Module['preMainLoop']();if(preRet===false){return;// |return false| skips a frame
}}callUserCallback(func);if(Module['postMainLoop'])Module['postMainLoop']();}},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function init(){if(Browser.initted)return;Browser.initted=true;// Support for plugins that can process preloaded files. You can add more of these to
// your app by creating and appending to preloadPlugins.
//
// Each plugin is asked if it can handle a file based on the file's name. If it can,
// it is given the file's raw data. When it is done, it calls a callback with the file's
// (possibly modified) data. For example, a plugin might decompress a file, or it
// might create some side data structure for use later (like an Image element, etc.).
var imagePlugin={};imagePlugin['canHandle']=function imagePlugin_canHandle(name){return!Module.noImageDecoding&&/\.(jpg|jpeg|png|bmp)$/i.test(name);};imagePlugin['handle']=function imagePlugin_handle(byteArray,name,onload,onerror){var b=new Blob([byteArray],{type:Browser.getMimetype(name)});if(b.size!==byteArray.length){// Safari bug #118630
// Safari's Blob can only take an ArrayBuffer
b=new Blob([new Uint8Array(byteArray).buffer],{type:Browser.getMimetype(name)});}var url=URL.createObjectURL(b);var img=new Image();img.onload=function(){assert(img.complete,"Image ".concat(name," could not be decoded"));var canvas=/** @type {!HTMLCanvasElement} */document.createElement('canvas');canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext('2d');ctx.drawImage(img,0,0);preloadedImages[name]=canvas;URL.revokeObjectURL(url);if(onload)onload(byteArray);};img.onerror=function(event){err("Image ".concat(url," could not be decoded"));if(onerror)onerror();};img.src=url;};preloadPlugins.push(imagePlugin);var audioPlugin={};audioPlugin['canHandle']=function audioPlugin_canHandle(name){return!Module.noAudioDecoding&&name.substr(-4)in{'.ogg':1,'.wav':1,'.mp3':1};};audioPlugin['handle']=function audioPlugin_handle(byteArray,name,onload,onerror){var done=false;function finish(audio){if(done)return;done=true;preloadedAudios[name]=audio;if(onload)onload(byteArray);}function fail(){if(done)return;done=true;preloadedAudios[name]=new Audio();// empty shim
if(onerror)onerror();}var b=new Blob([byteArray],{type:Browser.getMimetype(name)});var url=URL.createObjectURL(b);// XXX we never revoke this!
var audio=new Audio();audio.addEventListener('canplaythrough',function(){return finish(audio);},false);// use addEventListener due to chromium bug 124926
audio.onerror=function audio_onerror(event){if(done)return;err("warning: browser could not fully decode audio ".concat(name,", trying slower base64 approach"));function encode64(data){var BASE='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';var PAD='=';var ret='';var leftchar=0;var leftbits=0;for(var i=0;i<data.length;i++){leftchar=leftchar<<8|data[i];leftbits+=8;while(leftbits>=6){var curr=leftchar>>leftbits-6&0x3f;leftbits-=6;ret+=BASE[curr];}}if(leftbits==2){ret+=BASE[(leftchar&3)<<4];ret+=PAD+PAD;}else if(leftbits==4){ret+=BASE[(leftchar&0xf)<<2];ret+=PAD;}return ret;}audio.src='data:audio/x-'+name.substr(-3)+';base64,'+encode64(byteArray);finish(audio);// we don't wait for confirmation this worked - but it's worth trying
};audio.src=url;// workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
_safeSetTimeout(function(){finish(audio);// try to use it even though it is not necessarily ready to play
},10000);};preloadPlugins.push(audioPlugin);// Canvas event setup
function pointerLockChange(){Browser.pointerLock=document['pointerLockElement']===Module['canvas']||document['mozPointerLockElement']===Module['canvas']||document['webkitPointerLockElement']===Module['canvas']||document['msPointerLockElement']===Module['canvas'];}var canvas=Module['canvas'];if(canvas){// forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
// Module['forcedAspectRatio'] = 4 / 3;
canvas.requestPointerLock=canvas['requestPointerLock']||canvas['mozRequestPointerLock']||canvas['webkitRequestPointerLock']||canvas['msRequestPointerLock']||function(){};canvas.exitPointerLock=document['exitPointerLock']||document['mozExitPointerLock']||document['webkitExitPointerLock']||document['msExitPointerLock']||function(){};// no-op if function does not exist
canvas.exitPointerLock=canvas.exitPointerLock.bind(document);document.addEventListener('pointerlockchange',pointerLockChange,false);document.addEventListener('mozpointerlockchange',pointerLockChange,false);document.addEventListener('webkitpointerlockchange',pointerLockChange,false);document.addEventListener('mspointerlockchange',pointerLockChange,false);if(Module['elementPointerLock']){canvas.addEventListener("click",function(ev){if(!Browser.pointerLock&&Module['canvas'].requestPointerLock){Module['canvas'].requestPointerLock();ev.preventDefault();}},false);}}},createContext:function createContext(/** @type {HTMLCanvasElement} */canvas,useWebGL,setInModule,webGLContextAttributes){if(useWebGL&&Module.ctx&&canvas==Module.canvas)return Module.ctx;// no need to recreate GL context if it's already been created for this canvas.
var ctx;var contextHandle;if(useWebGL){// For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
var contextAttributes={antialias:false,alpha:false,majorVersion:typeof WebGL2RenderingContext!='undefined'?2:1};if(webGLContextAttributes){for(var attribute in webGLContextAttributes){contextAttributes[attribute]=webGLContextAttributes[attribute];}}// This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not
// actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function
// Browser.createContext() should not even be emitted.
if(typeof GL!='undefined'){contextHandle=GL.createContext(canvas,contextAttributes);if(contextHandle){ctx=GL.getContext(contextHandle).GLctx;}}}else{ctx=canvas.getContext('2d');}if(!ctx)return null;if(setInModule){if(!useWebGL)assert(typeof GLctx=='undefined','cannot set in module if GLctx is used, but we are a non-GL context that would replace it');Module.ctx=ctx;if(useWebGL)GL.makeContextCurrent(contextHandle);Module.useWebGL=useWebGL;Browser.moduleContextCreatedCallbacks.forEach(function(callback){return callback();});Browser.init();}return ctx;},destroyContext:function destroyContext(canvas,useWebGL,setInModule){},fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:function requestFullscreen(lockPointer,resizeCanvas){Browser.lockPointer=lockPointer;Browser.resizeCanvas=resizeCanvas;if(typeof Browser.lockPointer=='undefined')Browser.lockPointer=true;if(typeof Browser.resizeCanvas=='undefined')Browser.resizeCanvas=false;var canvas=Module['canvas'];function fullscreenChange(){Browser.isFullscreen=false;var canvasContainer=canvas.parentNode;if((document['fullscreenElement']||document['mozFullScreenElement']||document['msFullscreenElement']||document['webkitFullscreenElement']||document['webkitCurrentFullScreenElement'])===canvasContainer){canvas.exitFullscreen=Browser.exitFullscreen;if(Browser.lockPointer)canvas.requestPointerLock();Browser.isFullscreen=true;if(Browser.resizeCanvas){Browser.setFullscreenCanvasSize();}else{Browser.updateCanvasDimensions(canvas);}}else{// remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
canvasContainer.parentNode.insertBefore(canvas,canvasContainer);canvasContainer.parentNode.removeChild(canvasContainer);if(Browser.resizeCanvas){Browser.setWindowedCanvasSize();}else{Browser.updateCanvasDimensions(canvas);}}if(Module['onFullScreen'])Module['onFullScreen'](Browser.isFullscreen);if(Module['onFullscreen'])Module['onFullscreen'](Browser.isFullscreen);}if(!Browser.fullscreenHandlersInstalled){Browser.fullscreenHandlersInstalled=true;document.addEventListener('fullscreenchange',fullscreenChange,false);document.addEventListener('mozfullscreenchange',fullscreenChange,false);document.addEventListener('webkitfullscreenchange',fullscreenChange,false);document.addEventListener('MSFullscreenChange',fullscreenChange,false);}// create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
var canvasContainer=document.createElement("div");canvas.parentNode.insertBefore(canvasContainer,canvas);canvasContainer.appendChild(canvas);// use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
canvasContainer.requestFullscreen=canvasContainer['requestFullscreen']||canvasContainer['mozRequestFullScreen']||canvasContainer['msRequestFullscreen']||(canvasContainer['webkitRequestFullscreen']?function(){return canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']);}:null)||(canvasContainer['webkitRequestFullScreen']?function(){return canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']);}:null);canvasContainer.requestFullscreen();},exitFullscreen:function exitFullscreen(){// This is workaround for chrome. Trying to exit from fullscreen
// not in fullscreen state will cause "TypeError: Document not active"
// in chrome. See https://github.com/emscripten-core/emscripten/pull/8236
if(!Browser.isFullscreen){return false;}var CFS=document['exitFullscreen']||document['cancelFullScreen']||document['mozCancelFullScreen']||document['msExitFullscreen']||document['webkitCancelFullScreen']||function(){};CFS.apply(document,[]);return true;},nextRAF:0,fakeRequestAnimationFrame:function fakeRequestAnimationFrame(func){// try to keep 60fps between calls to here
var now=Date.now();if(Browser.nextRAF===0){Browser.nextRAF=now+1000/60;}else{while(now+2>=Browser.nextRAF){// fudge a little, to avoid timer jitter causing us to do lots of delay:0
Browser.nextRAF+=1000/60;}}var delay=Math.max(Browser.nextRAF-now,0);setTimeout(func,delay);},requestAnimationFrame:function(_requestAnimationFrame){function requestAnimationFrame(_x){return _requestAnimationFrame.apply(this,arguments);}requestAnimationFrame.toString=function(){return _requestAnimationFrame.toString();};return requestAnimationFrame;}(function(func){if(typeof requestAnimationFrame=='function'){requestAnimationFrame(func);return;}var RAF=Browser.fakeRequestAnimationFrame;RAF(func);}),safeSetTimeout:function safeSetTimeout(func,timeout){// Legacy function, this is used by the SDL2 port so we need to keep it
// around at least until that is updated.
// See https://github.com/libsdl-org/SDL/pull/6304
return _safeSetTimeout(func,timeout);},safeRequestAnimationFrame:function safeRequestAnimationFrame(func){return Browser.requestAnimationFrame(function(){callUserCallback(func);});},getMimetype:function getMimetype(name){return{'jpg':'image/jpeg','jpeg':'image/jpeg','png':'image/png','bmp':'image/bmp','ogg':'audio/ogg','wav':'audio/wav','mp3':'audio/mpeg'}[name.substr(name.lastIndexOf('.')+1)];},getUserMedia:function getUserMedia(func){if(!window.getUserMedia){window.getUserMedia=navigator['getUserMedia']||navigator['mozGetUserMedia'];}window.getUserMedia(func);},getMovementX:function getMovementX(event){return event['movementX']||event['mozMovementX']||event['webkitMovementX']||0;},getMovementY:function getMovementY(event){return event['movementY']||event['mozMovementY']||event['webkitMovementY']||0;},getMouseWheelDelta:function getMouseWheelDelta(event){var delta=0;switch(event.type){case'DOMMouseScroll':// 3 lines make up a step
delta=event.detail/3;break;case'mousewheel':// 120 units make up a step
delta=event.wheelDelta/120;break;case'wheel':delta=event.deltaY;switch(event.deltaMode){case 0:// DOM_DELTA_PIXEL: 100 pixels make up a step
delta/=100;break;case 1:// DOM_DELTA_LINE: 3 lines make up a step
delta/=3;break;case 2:// DOM_DELTA_PAGE: A page makes up 80 steps
delta*=80;break;default:throw'unrecognized mouse wheel delta mode: '+event.deltaMode;}break;default:throw'unrecognized mouse wheel event: '+event.type;}return delta;},mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function calculateMouseEvent(event){// event should be mousemove, mousedown or mouseup
if(Browser.pointerLock){// When the pointer is locked, calculate the coordinates
// based on the movement of the mouse.
// Workaround for Firefox bug 764498
if(event.type!='mousemove'&&'mozMovementX'in event){Browser.mouseMovementX=Browser.mouseMovementY=0;}else{Browser.mouseMovementX=Browser.getMovementX(event);Browser.mouseMovementY=Browser.getMovementY(event);}// check if SDL is available
if(typeof SDL!="undefined"){Browser.mouseX=SDL.mouseX+Browser.mouseMovementX;Browser.mouseY=SDL.mouseY+Browser.mouseMovementY;}else{// just add the mouse delta to the current absolut mouse position
// FIXME: ideally this should be clamped against the canvas size and zero
Browser.mouseX+=Browser.mouseMovementX;Browser.mouseY+=Browser.mouseMovementY;}}else{// Otherwise, calculate the movement based on the changes
// in the coordinates.
var rect=Module["canvas"].getBoundingClientRect();var cw=Module["canvas"].width;var ch=Module["canvas"].height;// Neither .scrollX or .pageXOffset are defined in a spec, but
// we prefer .scrollX because it is currently in a spec draft.
// (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
var scrollX=typeof window.scrollX!='undefined'?window.scrollX:window.pageXOffset;var scrollY=typeof window.scrollY!='undefined'?window.scrollY:window.pageYOffset;if(event.type==='touchstart'||event.type==='touchend'||event.type==='touchmove'){var touch=event.touch;if(touch===undefined){return;// the "touch" property is only defined in SDL
}var adjustedX=touch.pageX-(scrollX+rect.left);var adjustedY=touch.pageY-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);var coords={x:adjustedX,y:adjustedY};if(event.type==='touchstart'){Browser.lastTouches[touch.identifier]=coords;Browser.touches[touch.identifier]=coords;}else if(event.type==='touchend'||event.type==='touchmove'){var last=Browser.touches[touch.identifier];if(!last)last=coords;Browser.lastTouches[touch.identifier]=last;Browser.touches[touch.identifier]=coords;}return;}var x=event.pageX-(scrollX+rect.left);var y=event.pageY-(scrollY+rect.top);// the canvas might be CSS-scaled compared to its backbuffer;
// SDL-using content will want mouse coordinates in terms
// of backbuffer units.
x=x*(cw/rect.width);y=y*(ch/rect.height);Browser.mouseMovementX=x-Browser.mouseX;Browser.mouseMovementY=y-Browser.mouseY;Browser.mouseX=x;Browser.mouseY=y;}},resizeListeners:[],updateResizeListeners:function updateResizeListeners(){var canvas=Module['canvas'];Browser.resizeListeners.forEach(function(listener){return listener(canvas.width,canvas.height);});},setCanvasSize:function setCanvasSize(width,height,noUpdates){var canvas=Module['canvas'];Browser.updateCanvasDimensions(canvas,width,height);if(!noUpdates)Browser.updateResizeListeners();},windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:function setFullscreenCanvasSize(){// check if SDL is available
if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen>>2];flags=flags|0x00800000;// set SDL_FULLSCREEN flag
HEAP32[SDL.screen>>2]=flags;}Browser.updateCanvasDimensions(Module['canvas']);Browser.updateResizeListeners();},setWindowedCanvasSize:function setWindowedCanvasSize(){// check if SDL is available
if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen>>2];flags=flags&~0x00800000;// clear SDL_FULLSCREEN flag
HEAP32[SDL.screen>>2]=flags;}Browser.updateCanvasDimensions(Module['canvas']);Browser.updateResizeListeners();},updateCanvasDimensions:function updateCanvasDimensions(canvas,wNative,hNative){if(wNative&&hNative){canvas.widthNative=wNative;canvas.heightNative=hNative;}else{wNative=canvas.widthNative;hNative=canvas.heightNative;}var w=wNative;var h=hNative;if(Module['forcedAspectRatio']&&Module['forcedAspectRatio']>0){if(w/h<Module['forcedAspectRatio']){w=Math.round(h*Module['forcedAspectRatio']);}else{h=Math.round(w/Module['forcedAspectRatio']);}}if((document['fullscreenElement']||document['mozFullScreenElement']||document['msFullscreenElement']||document['webkitFullscreenElement']||document['webkitCurrentFullScreenElement'])===canvas.parentNode&&typeof screen!='undefined'){var factor=Math.min(screen.width/w,screen.height/h);w=Math.round(w*factor);h=Math.round(h*factor);}if(Browser.resizeCanvas){if(canvas.width!=w)canvas.width=w;if(canvas.height!=h)canvas.height=h;if(typeof canvas.style!='undefined'){canvas.style.removeProperty("width");canvas.style.removeProperty("height");}}else{if(canvas.width!=wNative)canvas.width=wNative;if(canvas.height!=hNative)canvas.height=hNative;if(typeof canvas.style!='undefined'){if(w!=wNative||h!=hNative){canvas.style.setProperty("width",w+"px","important");canvas.style.setProperty("height",h+"px","important");}else{canvas.style.removeProperty("width");canvas.style.removeProperty("height");}}}}};var EGL={errorCode:12288,defaultDisplayInitialized:false,currentContext:0,currentReadSurface:0,currentDrawSurface:0,contextAttributes:{alpha:false,depth:false,stencil:false,antialias:false},stringCache:{},setErrorCode:function setErrorCode(code){EGL.errorCode=code;},chooseConfig:function chooseConfig(display,attribList,config,config_size,numConfigs){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}if(attribList){// read attribList if it is non-null
for(;;){var param=HEAP32[attribList>>2];if(param==0x3021/*EGL_ALPHA_SIZE*/){var alphaSize=HEAP32[attribList+4>>2];EGL.contextAttributes.alpha=alphaSize>0;}else if(param==0x3025/*EGL_DEPTH_SIZE*/){var depthSize=HEAP32[attribList+4>>2];EGL.contextAttributes.depth=depthSize>0;}else if(param==0x3026/*EGL_STENCIL_SIZE*/){var stencilSize=HEAP32[attribList+4>>2];EGL.contextAttributes.stencil=stencilSize>0;}else if(param==0x3031/*EGL_SAMPLES*/){var samples=HEAP32[attribList+4>>2];EGL.contextAttributes.antialias=samples>0;}else if(param==0x3032/*EGL_SAMPLE_BUFFERS*/){var samples=HEAP32[attribList+4>>2];EGL.contextAttributes.antialias=samples==1;}else if(param==0x3100/*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/){var requestedPriority=HEAP32[attribList+4>>2];EGL.contextAttributes.lowLatency=requestedPriority!=0x3103/*EGL_CONTEXT_PRIORITY_LOW_IMG*/;}else if(param==0x3038/*EGL_NONE*/){break;}attribList+=8;}}if((!config||!config_size)&&!numConfigs){EGL.setErrorCode(0x300C/* EGL_BAD_PARAMETER */);return 0;}if(numConfigs){HEAP32[numConfigs>>2]=1;// Total number of supported configs: 1.
}if(config&&config_size>0){HEAP32[config>>2]=62002;}EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;}};var _eglBindAPI=function _eglBindAPI(api){if(api==0x30A0/* EGL_OPENGL_ES_API */){EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;}// if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {
EGL.setErrorCode(0x300C/* EGL_BAD_PARAMETER */);return 0;};var _eglChooseConfig=function _eglChooseConfig(display,attrib_list,configs,config_size,numConfigs){return EGL.chooseConfig(display,attrib_list,configs,config_size,numConfigs);};var webgl_enable_ANGLE_instanced_arrays=function webgl_enable_ANGLE_instanced_arrays(ctx){// Extension available in WebGL 1 from Firefox 26 and Google Chrome 30 onwards. Core feature in WebGL 2.
var ext=ctx.getExtension('ANGLE_instanced_arrays');if(ext){ctx['vertexAttribDivisor']=function(index,divisor){return ext['vertexAttribDivisorANGLE'](index,divisor);};ctx['drawArraysInstanced']=function(mode,first,count,primcount){return ext['drawArraysInstancedANGLE'](mode,first,count,primcount);};ctx['drawElementsInstanced']=function(mode,count,type,indices,primcount){return ext['drawElementsInstancedANGLE'](mode,count,type,indices,primcount);};return 1;}};var webgl_enable_OES_vertex_array_object=function webgl_enable_OES_vertex_array_object(ctx){// Extension available in WebGL 1 from Firefox 25 and WebKit 536.28/desktop Safari 6.0.3 onwards. Core feature in WebGL 2.
var ext=ctx.getExtension('OES_vertex_array_object');if(ext){ctx['createVertexArray']=function(){return ext['createVertexArrayOES']();};ctx['deleteVertexArray']=function(vao){return ext['deleteVertexArrayOES'](vao);};ctx['bindVertexArray']=function(vao){return ext['bindVertexArrayOES'](vao);};ctx['isVertexArray']=function(vao){return ext['isVertexArrayOES'](vao);};return 1;}};var webgl_enable_WEBGL_draw_buffers=function webgl_enable_WEBGL_draw_buffers(ctx){// Extension available in WebGL 1 from Firefox 28 onwards. Core feature in WebGL 2.
var ext=ctx.getExtension('WEBGL_draw_buffers');if(ext){ctx['drawBuffers']=function(n,bufs){return ext['drawBuffersWEBGL'](n,bufs);};return 1;}};var webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance=function webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(ctx){return(// Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.
!!(ctx.dibvbi=ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance')));};var webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance=function webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(ctx){// Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.
return!!(ctx.mdibvbi=ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));};var webgl_enable_WEBGL_multi_draw=function webgl_enable_WEBGL_multi_draw(ctx){// Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.
return!!(ctx.multiDrawWebgl=ctx.getExtension('WEBGL_multi_draw'));};var GL={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:[],offscreenCanvases:{},queries:[],samplers:[],transformFeedbacks:[],syncs:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],stringCache:{},stringiCache:{},unpackAlignment:4,recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode;}},getNewId:function getNewId(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null;}return ret;},MAX_TEMP_BUFFER_SIZE:16777216,numTempVertexBuffersPerSize:64,log2ceilLookup:function log2ceilLookup(i){return 32-Math.clz32(i===0?0:i-1);},generateTempBuffers:function generateTempBuffers(quads,context){var largestIndex=GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);context.tempVertexBufferCounters1=[];context.tempVertexBufferCounters2=[];context.tempVertexBufferCounters1.length=context.tempVertexBufferCounters2.length=largestIndex+1;context.tempVertexBuffers1=[];context.tempVertexBuffers2=[];context.tempVertexBuffers1.length=context.tempVertexBuffers2.length=largestIndex+1;context.tempIndexBuffers=[];context.tempIndexBuffers.length=largestIndex+1;for(var i=0;i<=largestIndex;++i){context.tempIndexBuffers[i]=null;// Created on-demand
context.tempVertexBufferCounters1[i]=context.tempVertexBufferCounters2[i]=0;var ringbufferLength=GL.numTempVertexBuffersPerSize;context.tempVertexBuffers1[i]=[];context.tempVertexBuffers2[i]=[];var ringbuffer1=context.tempVertexBuffers1[i];var ringbuffer2=context.tempVertexBuffers2[i];ringbuffer1.length=ringbuffer2.length=ringbufferLength;for(var j=0;j<ringbufferLength;++j){ringbuffer1[j]=ringbuffer2[j]=null;// Created on-demand
}}if(quads){// GL_QUAD indexes can be precalculated
context.tempQuadIndexBuffer=GLctx.createBuffer();context.GLctx.bindBuffer(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,context.tempQuadIndexBuffer);var numIndexes=GL.MAX_TEMP_BUFFER_SIZE>>1;var quadIndexes=new Uint16Array(numIndexes);var i=0,v=0;while(1){quadIndexes[i++]=v;if(i>=numIndexes)break;quadIndexes[i++]=v+1;if(i>=numIndexes)break;quadIndexes[i++]=v+2;if(i>=numIndexes)break;quadIndexes[i++]=v;if(i>=numIndexes)break;quadIndexes[i++]=v+2;if(i>=numIndexes)break;quadIndexes[i++]=v+3;if(i>=numIndexes)break;v+=4;}context.GLctx.bufferData(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,quadIndexes,0x88E4/*GL_STATIC_DRAW*/);context.GLctx.bindBuffer(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,null);}},getTempVertexBuffer:function getTempVertexBuffer(sizeBytes){var idx=GL.log2ceilLookup(sizeBytes);var ringbuffer=GL.currentContext.tempVertexBuffers1[idx];var nextFreeBufferIndex=GL.currentContext.tempVertexBufferCounters1[idx];GL.currentContext.tempVertexBufferCounters1[idx]=GL.currentContext.tempVertexBufferCounters1[idx]+1&GL.numTempVertexBuffersPerSize-1;var vbo=ringbuffer[nextFreeBufferIndex];if(vbo){return vbo;}var prevVBO=GLctx.getParameter(0x8894/*GL_ARRAY_BUFFER_BINDING*/);ringbuffer[nextFreeBufferIndex]=GLctx.createBuffer();GLctx.bindBuffer(0x8892/*GL_ARRAY_BUFFER*/,ringbuffer[nextFreeBufferIndex]);GLctx.bufferData(0x8892/*GL_ARRAY_BUFFER*/,1<<idx,0x88E8/*GL_DYNAMIC_DRAW*/);GLctx.bindBuffer(0x8892/*GL_ARRAY_BUFFER*/,prevVBO);return ringbuffer[nextFreeBufferIndex];},getTempIndexBuffer:function getTempIndexBuffer(sizeBytes){var idx=GL.log2ceilLookup(sizeBytes);var ibo=GL.currentContext.tempIndexBuffers[idx];if(ibo){return ibo;}var prevIBO=GLctx.getParameter(0x8895/*ELEMENT_ARRAY_BUFFER_BINDING*/);GL.currentContext.tempIndexBuffers[idx]=GLctx.createBuffer();GLctx.bindBuffer(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,GL.currentContext.tempIndexBuffers[idx]);GLctx.bufferData(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,1<<idx,0x88E8/*GL_DYNAMIC_DRAW*/);GLctx.bindBuffer(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,prevIBO);return GL.currentContext.tempIndexBuffers[idx];},newRenderingFrameStarted:function newRenderingFrameStarted(){if(!GL.currentContext){return;}var vb=GL.currentContext.tempVertexBuffers1;GL.currentContext.tempVertexBuffers1=GL.currentContext.tempVertexBuffers2;GL.currentContext.tempVertexBuffers2=vb;vb=GL.currentContext.tempVertexBufferCounters1;GL.currentContext.tempVertexBufferCounters1=GL.currentContext.tempVertexBufferCounters2;GL.currentContext.tempVertexBufferCounters2=vb;var largestIndex=GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);for(var i=0;i<=largestIndex;++i){GL.currentContext.tempVertexBufferCounters1[i]=0;}},getSource:function getSource(shader,count,string,length){var source='';for(var i=0;i<count;++i){var len=length?HEAP32[length+i*4>>2]:-1;source+=UTF8ToString(HEAP32[string+i*4>>2],len<0?undefined:len);}return source;},calcBufLength:function calcBufLength(size,type,stride,count){if(stride>0){return count*stride;// XXXvlad this is not exactly correct I don't think
}var typeSize=GL.byteSizeByType[type-GL.byteSizeByTypeRoot];return size*typeSize*count;},usedTempBuffers:[],preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count){GL.resetBufferBinding=false;// TODO: initial pass to detect ranges we need to upload, might not need an upload per attrib
for(var i=0;i<GL.currentContext.maxVertexAttribs;++i){var cb=GL.currentContext.clientBuffers[i];if(!cb.clientside||!cb.enabled)continue;GL.resetBufferBinding=true;var size=GL.calcBufLength(cb.size,cb.type,cb.stride,count);var buf=GL.getTempVertexBuffer(size);GLctx.bindBuffer(0x8892/*GL_ARRAY_BUFFER*/,buf);GLctx.bufferSubData(0x8892/*GL_ARRAY_BUFFER*/,0,HEAPU8.subarray(cb.ptr,cb.ptr+size));cb.vertexAttribPointerAdaptor.call(GLctx,i,cb.size,cb.type,cb.normalized,cb.stride,0);}},postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings(){if(GL.resetBufferBinding){GLctx.bindBuffer(0x8892/*GL_ARRAY_BUFFER*/,GL.buffers[GLctx.currentArrayBufferBinding]);}},createContext:function createContext(/** @type {HTMLCanvasElement} */canvas,webGLContextAttributes){// BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL context on a canvas,
// calling .getContext() will always return that context independent of which 'webgl' or 'webgl2'
// context version was passed. See https://bugs.webkit.org/show_bug.cgi?id=222758 and
// https://github.com/emscripten-core/emscripten/issues/13295.
// TODO: Once the bug is fixed and shipped in Safari, adjust the Safari version field in above check.
if(!canvas.getContextSafariWebGL2Fixed){/** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */var fixedGetContext=function fixedGetContext(ver,attrs){var gl=canvas.getContextSafariWebGL2Fixed(ver,attrs);return ver=='webgl'==gl instanceof WebGLRenderingContext?gl:null;};canvas.getContextSafariWebGL2Fixed=canvas.getContext;canvas.getContext=fixedGetContext;}var ctx=webGLContextAttributes.majorVersion>1?canvas.getContext("webgl2",webGLContextAttributes):canvas.getContext("webgl",webGLContextAttributes)// https://caniuse.com/#feat=webgl
;if(!ctx)return 0;var handle=GL.registerContext(ctx,webGLContextAttributes);return handle;},registerContext:function registerContext(ctx,webGLContextAttributes){// without pthreads a context is just an integer ID
var handle=GL.getNewId(GL.contexts);var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes.majorVersion,GLctx:ctx};// Store the created context object so that we can access the context given a canvas without having to pass the parameters again.
if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes.enableExtensionsByDefault=='undefined'||webGLContextAttributes.enableExtensionsByDefault){GL.initExtensions(context);}context.maxVertexAttribs=context.GLctx.getParameter(0x8869/*GL_MAX_VERTEX_ATTRIBS*/);context.clientBuffers=[];for(var i=0;i<context.maxVertexAttribs;i++){context.clientBuffers[i]={enabled:false,clientside:false,size:0,type:0,normalized:0,stride:0,ptr:0,vertexAttribPointerAdaptor:null};}GL.generateTempBuffers(false,context);return handle;},makeContextCurrent:function makeContextCurrent(contextHandle){GL.currentContext=GL.contexts[contextHandle];// Active Emscripten GL layer context object.
Module.ctx=GLctx=GL.currentContext&&GL.currentContext.GLctx;// Active WebGL context object.
return!(contextHandle&&!GLctx);},getContext:function getContext(contextHandle){return GL.contexts[contextHandle];},deleteContext:function deleteContext(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(_typeof(JSEvents)=='object')JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);// Release all JS event handlers on the DOM element that the GL context is associated with since the context is now deleted.
if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;// Make sure the canvas object no longer refers to the context object so there are no GC surprises.
GL.contexts[contextHandle]=null;},initExtensions:function initExtensions(context){// If this function is called without a specific context object, init the extensions of the currently active context.
if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;// Detect the presence of a few extensions manually, ction GL interop layer itself will need to know if they exist.
// Extensions that are only available in WebGL 1 (the calls will be no-ops if called on a WebGL 2 context active)
webgl_enable_ANGLE_instanced_arrays(GLctx);webgl_enable_OES_vertex_array_object(GLctx);webgl_enable_WEBGL_draw_buffers(GLctx);// Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)
webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);// On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative
// that's based on core APIs, and exposes only the queryCounterEXT()
// entrypoint.
if(context.version>=2){GLctx.disjointTimerQueryExt=GLctx.getExtension("EXT_disjoint_timer_query_webgl2");}// However, Firefox exposes the WebGL 1 version on WebGL 2 as well and
// thus we look for the WebGL 1 version again if the WebGL 2 version
// isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882
if(context.version<2||!GLctx.disjointTimerQueryExt){GLctx.disjointTimerQueryExt=GLctx.getExtension("EXT_disjoint_timer_query");}webgl_enable_WEBGL_multi_draw(GLctx);// .getSupportedExtensions() can return null if context is lost, so coerce to empty array.
var exts=GLctx.getSupportedExtensions()||[];exts.forEach(function(ext){// WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders are not enabled by default.
if(!ext.includes('lose_context')&&!ext.includes('debug')){// Call .getExtension() to enable that extension permanently.
GLctx.getExtension(ext);}});}};var _eglCreateContext=function _eglCreateContext(display,config,hmm,contextAttribs){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}// EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.
// So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.
var glesContextVersion=1;for(;;){var param=HEAP32[contextAttribs>>2];if(param==0x3098/*EGL_CONTEXT_CLIENT_VERSION*/){glesContextVersion=HEAP32[contextAttribs+4>>2];}else if(param==0x3038/*EGL_NONE*/){break;}else{/* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */EGL.setErrorCode(0x3004/*EGL_BAD_ATTRIBUTE*/);return 0;}contextAttribs+=8;}if(glesContextVersion<2||glesContextVersion>3){EGL.setErrorCode(0x3005/* EGL_BAD_CONFIG */);return 0;/* EGL_NO_CONTEXT */}EGL.contextAttributes.majorVersion=glesContextVersion-1;// WebGL 1 is GLES 2, WebGL2 is GLES3
EGL.contextAttributes.minorVersion=0;EGL.context=GL.createContext(Module['canvas'],EGL.contextAttributes);if(EGL.context!=0){EGL.setErrorCode(0x3000/* EGL_SUCCESS */);// Run callbacks so that GL emulation works
GL.makeContextCurrent(EGL.context);Module.useWebGL=true;Browser.moduleContextCreatedCallbacks.forEach(function(callback){callback();});// Note: This function only creates a context, but it shall not make it active.
GL.makeContextCurrent(null);return 62004;// Magic ID for Emscripten EGLContext
}else{EGL.setErrorCode(0x3009/* EGL_BAD_MATCH */);// By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.
return 0;/* EGL_NO_CONTEXT */}};var _eglCreateWindowSurface=function _eglCreateWindowSurface(display,config,win,attrib_list){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}if(config!=62002/* Magic ID for the only EGLConfig supported by Emscripten */){EGL.setErrorCode(0x3005/* EGL_BAD_CONFIG */);return 0;}// TODO: Examine attrib_list! Parameters that can be present there are:
// - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)
// - EGL_VG_COLORSPACE (can't be set)
// - EGL_VG_ALPHA_FORMAT (can't be set)
EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 62006;/* Magic ID for Emscripten 'default surface' */};var _eglDestroyContext=function _eglDestroyContext(display,context){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}if(context!=62004/* Magic ID for Emscripten EGLContext */){EGL.setErrorCode(0x3006/* EGL_BAD_CONTEXT */);return 0;}GL.deleteContext(EGL.context);EGL.setErrorCode(0x3000/* EGL_SUCCESS */);if(EGL.currentContext==context){EGL.currentContext=0;}return 1/* EGL_TRUE */;};var _eglDestroySurface=function _eglDestroySurface(display,surface){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}if(surface!=62006/* Magic ID for the only EGLSurface supported by Emscripten */){EGL.setErrorCode(0x300D/* EGL_BAD_SURFACE */);return 1;}if(EGL.currentReadSurface==surface){EGL.currentReadSurface=0;}if(EGL.currentDrawSurface==surface){EGL.currentDrawSurface=0;}EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;/* Magic ID for Emscripten 'default surface' */};var _eglGetConfigAttrib=function _eglGetConfigAttrib(display,config,attribute,value){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}if(config!=62002/* Magic ID for the only EGLConfig supported by Emscripten */){EGL.setErrorCode(0x3005/* EGL_BAD_CONFIG */);return 0;}if(!value){EGL.setErrorCode(0x300C/* EGL_BAD_PARAMETER */);return 0;}EGL.setErrorCode(0x3000/* EGL_SUCCESS */);switch(attribute){case 0x3020:// EGL_BUFFER_SIZE
HEAP32[value>>2]=EGL.contextAttributes.alpha?32:24;return 1;case 0x3021:// EGL_ALPHA_SIZE
HEAP32[value>>2]=EGL.contextAttributes.alpha?8:0;return 1;case 0x3022:// EGL_BLUE_SIZE
HEAP32[value>>2]=8;return 1;case 0x3023:// EGL_GREEN_SIZE
HEAP32[value>>2]=8;return 1;case 0x3024:// EGL_RED_SIZE
HEAP32[value>>2]=8;return 1;case 0x3025:// EGL_DEPTH_SIZE
HEAP32[value>>2]=EGL.contextAttributes.depth?24:0;return 1;case 0x3026:// EGL_STENCIL_SIZE
HEAP32[value>>2]=EGL.contextAttributes.stencil?8:0;return 1;case 0x3027:// EGL_CONFIG_CAVEAT
// We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).
HEAP32[value>>2]=0x3038;return 1;case 0x3028:// EGL_CONFIG_ID
HEAP32[value>>2]=62002;return 1;case 0x3029:// EGL_LEVEL
HEAP32[value>>2]=0;return 1;case 0x302A:// EGL_MAX_PBUFFER_HEIGHT
HEAP32[value>>2]=4096;return 1;case 0x302B:// EGL_MAX_PBUFFER_PIXELS
HEAP32[value>>2]=16777216;return 1;case 0x302C:// EGL_MAX_PBUFFER_WIDTH
HEAP32[value>>2]=4096;return 1;case 0x302D:// EGL_NATIVE_RENDERABLE
HEAP32[value>>2]=0;return 1;case 0x302E:// EGL_NATIVE_VISUAL_ID
HEAP32[value>>2]=0;return 1;case 0x302F:// EGL_NATIVE_VISUAL_TYPE
HEAP32[value>>2]=0x3038;return 1;case 0x3031:// EGL_SAMPLES
HEAP32[value>>2]=EGL.contextAttributes.antialias?4:0;return 1;case 0x3032:// EGL_SAMPLE_BUFFERS
HEAP32[value>>2]=EGL.contextAttributes.antialias?1:0;return 1;case 0x3033:// EGL_SURFACE_TYPE
HEAP32[value>>2]=0x4;return 1;case 0x3034:// EGL_TRANSPARENT_TYPE
// If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.
HEAP32[value>>2]=0x3038;return 1;case 0x3035:// EGL_TRANSPARENT_BLUE_VALUE
case 0x3036:// EGL_TRANSPARENT_GREEN_VALUE
case 0x3037:// EGL_TRANSPARENT_RED_VALUE
// "If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined."
HEAP32[value>>2]=-1;return 1;case 0x3039:// EGL_BIND_TO_TEXTURE_RGB
case 0x303A:// EGL_BIND_TO_TEXTURE_RGBA
HEAP32[value>>2]=0;return 1;case 0x303B:// EGL_MIN_SWAP_INTERVAL
HEAP32[value>>2]=0;return 1;case 0x303C:// EGL_MAX_SWAP_INTERVAL
HEAP32[value>>2]=1;return 1;case 0x303D:// EGL_LUMINANCE_SIZE
case 0x303E:// EGL_ALPHA_MASK_SIZE
HEAP32[value>>2]=0;return 1;case 0x303F:// EGL_COLOR_BUFFER_TYPE
// EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.
HEAP32[value>>2]=0x308E;return 1;case 0x3040:// EGL_RENDERABLE_TYPE
// A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.
HEAP32[value>>2]=0x4;return 1;case 0x3042:// EGL_CONFORMANT
// "EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API."
HEAP32[value>>2]=0;return 1;default:EGL.setErrorCode(0x3004/* EGL_BAD_ATTRIBUTE */);return 0;}};var _eglGetDisplay=function _eglGetDisplay(nativeDisplayType){EGL.setErrorCode(0x3000/* EGL_SUCCESS */);// Note: As a 'conformant' implementation of EGL, we would prefer to init here only if the user
//       calls this function with EGL_DEFAULT_DISPLAY. Other display IDs would be preferred to be unsupported
//       and EGL_NO_DISPLAY returned. Uncomment the following code lines to do this.
// Instead, an alternative route has been preferred, namely that the Emscripten EGL implementation
// "emulates" X11, and eglGetDisplay is expected to accept/receive a pointer to an X11 Display object.
// Therefore, be lax and allow anything to be passed in, and return the magic handle to our default EGLDisplay object.
//    if (nativeDisplayType == 0 /* EGL_DEFAULT_DISPLAY */) {
return 62000;// Magic ID for Emscripten 'default display'
//    }
//    else
//      return 0; // EGL_NO_DISPLAY
};var _eglGetError=function _eglGetError(){return EGL.errorCode;};var _eglInitialize=function _eglInitialize(display,majorVersion,minorVersion){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}if(majorVersion){HEAP32[majorVersion>>2]=1;// Advertise EGL Major version: '1'
}if(minorVersion){HEAP32[minorVersion>>2]=4;// Advertise EGL Minor version: '4'
}EGL.defaultDisplayInitialized=true;EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;};var _eglMakeCurrent=function _eglMakeCurrent(display,draw,read,context){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0/* EGL_FALSE */;}//\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.
if(context!=0&&context!=62004/* Magic ID for Emscripten EGLContext */){EGL.setErrorCode(0x3006/* EGL_BAD_CONTEXT */);return 0;}if(read!=0&&read!=62006||draw!=0&&draw!=62006/* Magic ID for Emscripten 'default surface' */){EGL.setErrorCode(0x300D/* EGL_BAD_SURFACE */);return 0;}GL.makeContextCurrent(context?EGL.context:null);EGL.currentContext=context;EGL.currentDrawSurface=draw;EGL.currentReadSurface=read;EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1/* EGL_TRUE */;};var _eglQueryString=function _eglQueryString(display,name){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}//\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.
EGL.setErrorCode(0x3000/* EGL_SUCCESS */);if(EGL.stringCache[name])return EGL.stringCache[name];var ret;switch(name){case 0x3053/* EGL_VENDOR */:ret=stringToNewUTF8("Emscripten");break;case 0x3054/* EGL_VERSION */:ret=stringToNewUTF8("1.4 Emscripten EGL");break;case 0x3055/* EGL_EXTENSIONS */:ret=stringToNewUTF8("");break;// Currently not supporting any EGL extensions.
case 0x308D/* EGL_CLIENT_APIS */:ret=stringToNewUTF8("OpenGL_ES");break;default:EGL.setErrorCode(0x300C/* EGL_BAD_PARAMETER */);return 0;}EGL.stringCache[name]=ret;return ret;};var _eglSwapBuffers=function _eglSwapBuffers(dpy,surface){if(!EGL.defaultDisplayInitialized){EGL.setErrorCode(0x3001/* EGL_NOT_INITIALIZED */);}else if(!Module.ctx){EGL.setErrorCode(0x3002/* EGL_BAD_ACCESS */);}else if(Module.ctx.isContextLost()){EGL.setErrorCode(0x300E/* EGL_CONTEXT_LOST */);}else{// According to documentation this does an implicit flush.
// Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871
// the flush was removed since this _may_ result in slowing code down.
//_glFlush();
EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1/* EGL_TRUE */;}return 0/* EGL_FALSE */;};var _eglSwapInterval=function _eglSwapInterval(display,interval){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}if(interval==0)_emscripten_set_main_loop_timing(0,0);else _emscripten_set_main_loop_timing(1,interval);EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;};var _eglTerminate=function _eglTerminate(display){if(display!=62000/* Magic ID for Emscripten 'default display' */){EGL.setErrorCode(0x3008/* EGL_BAD_DISPLAY */);return 0;}EGL.currentContext=0;EGL.currentReadSurface=0;EGL.currentDrawSurface=0;EGL.defaultDisplayInitialized=false;EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;};/** @suppress {duplicate } */var _eglWaitClient=function _eglWaitClient(){EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;};var _eglWaitGL=_eglWaitClient;var _eglWaitNative=function _eglWaitNative(nativeEngineId){EGL.setErrorCode(0x3000/* EGL_SUCCESS */);return 1;};var readEmAsmArgsArray=[];var readEmAsmArgs=function readEmAsmArgs(sigPtr,buf){readEmAsmArgsArray.length=0;var ch;// Most arguments are i32s, so shift the buffer pointer so it is a plain
// index into HEAP32.
while(ch=HEAPU8[sigPtr++]){// Floats are always passed as doubles, so all types except for 'i'
// are 8 bytes and require alignment.
var wide=ch!=105;wide&=ch!=112;buf+=wide&&buf%8?4:0;readEmAsmArgsArray.push(// Special case for pointers under wasm64 or CAN_ADDRESS_2GB mode.
ch==112?HEAPU32[buf>>2]:ch==105?HEAP32[buf>>2]:HEAPF64[buf>>3]);buf+=wide?8:4;}return readEmAsmArgsArray;};var runEmAsmFunction=function runEmAsmFunction(code,sigPtr,argbuf){var args=readEmAsmArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args);};var _emscripten_asm_const_int=function _emscripten_asm_const_int(code,sigPtr,argbuf){return runEmAsmFunction(code,sigPtr,argbuf);};var runMainThreadEmAsm=function runMainThreadEmAsm(code,sigPtr,argbuf,sync){var args=readEmAsmArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args);};var _emscripten_asm_const_int_sync_on_main_thread=function _emscripten_asm_const_int_sync_on_main_thread(code,sigPtr,argbuf){return runMainThreadEmAsm(code,sigPtr,argbuf,1);};var _emscripten_date_now=function _emscripten_date_now(){return Date.now();};var withStackSave=function withStackSave(f){var stack=_stackSave();var ret=f();_stackRestore(stack);return ret;};var JSEvents={inEventHandler:0,removeAllEventListeners:function removeAllEventListeners(){for(var i=JSEvents.eventHandlers.length-1;i>=0;--i){JSEvents._removeHandler(i);}JSEvents.eventHandlers=[];JSEvents.deferredCalls=[];},registerRemoveEventListeners:function registerRemoveEventListeners(){if(!JSEvents.removeEventListenersRegistered){__ATEXIT__.push(JSEvents.removeAllEventListeners);JSEvents.removeEventListenersRegistered=true;}},deferredCalls:[],deferCall:function deferCall(targetFunction,precedence,argsList){function arraysHaveEqualContent(arrA,arrB){if(arrA.length!=arrB.length)return false;for(var i in arrA){if(arrA[i]!=arrB[i])return false;}return true;}// Test if the given call was already queued, and if so, don't add it again.
for(var i in JSEvents.deferredCalls){var call=JSEvents.deferredCalls[i];if(call.targetFunction==targetFunction&&arraysHaveEqualContent(call.argsList,argsList)){return;}}JSEvents.deferredCalls.push({targetFunction:targetFunction,precedence:precedence,argsList:argsList});JSEvents.deferredCalls.sort(function(x,y){return x.precedence<y.precedence;});},removeDeferredCalls:function removeDeferredCalls(targetFunction){for(var i=0;i<JSEvents.deferredCalls.length;++i){if(JSEvents.deferredCalls[i].targetFunction==targetFunction){JSEvents.deferredCalls.splice(i,1);--i;}}},canPerformEventHandlerRequests:function canPerformEventHandlerRequests(){if(navigator.userActivation){// Verify against transient activation status from UserActivation API
// whether it is possible to perform a request here without needing to defer. See
// https://developer.mozilla.org/en-US/docs/Web/Security/User_activation#transient_activation
// and https://caniuse.com/mdn-api_useractivation
// At the time of writing, Firefox does not support this API: https://bugzilla.mozilla.org/show_bug.cgi?id=1791079
return navigator.userActivation.isActive;}return JSEvents.inEventHandler&&JSEvents.currentEventHandler.allowsDeferredCalls;},runDeferredCalls:function runDeferredCalls(){if(!JSEvents.canPerformEventHandlerRequests()){return;}for(var i=0;i<JSEvents.deferredCalls.length;++i){var call=JSEvents.deferredCalls[i];JSEvents.deferredCalls.splice(i,1);--i;call.targetFunction.apply(null,call.argsList);}},eventHandlers:[],removeAllHandlersOnTarget:function removeAllHandlersOnTarget(target,eventTypeString){for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==target&&(!eventTypeString||eventTypeString==JSEvents.eventHandlers[i].eventTypeString)){JSEvents._removeHandler(i--);}}},_removeHandler:function _removeHandler(i){var h=JSEvents.eventHandlers[i];h.target.removeEventListener(h.eventTypeString,h.eventListenerFunc,h.useCapture);JSEvents.eventHandlers.splice(i,1);},registerOrRemoveHandler:function registerOrRemoveHandler(eventHandler){if(!eventHandler.target){return-4;}var jsEventHandler=function jsEventHandler(event){// Increment nesting count for the event handler.
++JSEvents.inEventHandler;JSEvents.currentEventHandler=eventHandler;// Process any old deferred calls the user has placed.
JSEvents.runDeferredCalls();// Process the actual event, calls back to user C code handler.
eventHandler.handlerFunc(event);// Process any new deferred calls that were placed right now from this event handler.
JSEvents.runDeferredCalls();// Out of event handler - restore nesting count.
--JSEvents.inEventHandler;};if(eventHandler.callbackfunc){eventHandler.eventListenerFunc=jsEventHandler;eventHandler.target.addEventListener(eventHandler.eventTypeString,jsEventHandler,eventHandler.useCapture);JSEvents.eventHandlers.push(eventHandler);JSEvents.registerRemoveEventListeners();}else{for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==eventHandler.target&&JSEvents.eventHandlers[i].eventTypeString==eventHandler.eventTypeString){JSEvents._removeHandler(i--);}}}return 0;},getNodeNameForTarget:function getNodeNameForTarget(target){if(!target)return'';if(target==window)return'#window';if(target==screen)return'#screen';return target&&target.nodeName?target.nodeName:'';},fullscreenEnabled:function fullscreenEnabled(){return document.fullscreenEnabled// Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.
// TODO: If Safari at some point ships with unprefixed version, update the version check above.
||document.webkitFullscreenEnabled;}};var setLetterbox=function setLetterbox(element,topBottom,leftRight){// Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.
element.style.paddingLeft=element.style.paddingRight=leftRight+'px';element.style.paddingTop=element.style.paddingBottom=topBottom+'px';};var hideEverythingExceptGivenElement=function hideEverythingExceptGivenElement(onlyVisibleElement){var child=onlyVisibleElement;var parent=child.parentNode;var hiddenElements=[];while(child!=document.body){var children=parent.children;for(var i=0;i<children.length;++i){if(children[i]!=child){hiddenElements.push({node:children[i],displayState:children[i].style.display});children[i].style.display='none';}}child=parent;parent=parent.parentNode;}return hiddenElements;};var restoreOldWindowedStyle=null;var maybeCStringToJsString=function maybeCStringToJsString(cString){// "cString > 2" checks if the input is a number, and isn't of the special
// values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).
// In other words, if cString > 2 then it's a pointer to a valid place in
// memory, and points to a C string.
return cString>2?UTF8ToString(cString):cString;};var specialHTMLTargets=[0,document,window];var findEventTarget=function findEventTarget(target){target=maybeCStringToJsString(target);var domElement=specialHTMLTargets[target]||document.querySelector(target);return domElement;};var findCanvasEventTarget=function findCanvasEventTarget(target){return findEventTarget(target);};var _emscripten_get_canvas_element_size=function _emscripten_get_canvas_element_size(target,width,height){var canvas=findCanvasEventTarget(target);if(!canvas)return-4;HEAP32[width>>2]=canvas.width;HEAP32[height>>2]=canvas.height;};var stringToUTF8OnStack=function stringToUTF8OnStack(str){var size=lengthBytesUTF8(str)+1;var ret=_stackAlloc(size);stringToUTF8(str,ret,size);return ret;};var getCanvasElementSize=function getCanvasElementSize(target){return withStackSave(function(){var w=_stackAlloc(8);var h=w+4;var targetInt=stringToUTF8OnStack(target.id);var ret=_emscripten_get_canvas_element_size(targetInt,w,h);var size=[HEAP32[w>>2],HEAP32[h>>2]];return size;});};var _emscripten_set_canvas_element_size=function _emscripten_set_canvas_element_size(target,width,height){var canvas=findCanvasEventTarget(target);if(!canvas)return-4;canvas.width=width;canvas.height=height;return 0;};var setCanvasElementSize=function setCanvasElementSize(target,width,height){if(!target.controlTransferredOffscreen){target.width=width;target.height=height;}else{// This function is being called from high-level JavaScript code instead of asm.js/Wasm,
// and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.
withStackSave(function(){var targetInt=stringToUTF8OnStack(target.id);_emscripten_set_canvas_element_size(targetInt,width,height);});}};var registerRestoreOldStyle=function registerRestoreOldStyle(canvas){var canvasSize=getCanvasElementSize(canvas);var oldWidth=canvasSize[0];var oldHeight=canvasSize[1];var oldCssWidth=canvas.style.width;var oldCssHeight=canvas.style.height;var oldBackgroundColor=canvas.style.backgroundColor;// Chrome reads color from here.
var oldDocumentBackgroundColor=document.body.style.backgroundColor;// IE11 reads color from here.
// Firefox always has black background color.
var oldPaddingLeft=canvas.style.paddingLeft;// Chrome, FF, Safari
var oldPaddingRight=canvas.style.paddingRight;var oldPaddingTop=canvas.style.paddingTop;var oldPaddingBottom=canvas.style.paddingBottom;var oldMarginLeft=canvas.style.marginLeft;// IE11
var oldMarginRight=canvas.style.marginRight;var oldMarginTop=canvas.style.marginTop;var oldMarginBottom=canvas.style.marginBottom;var oldDocumentBodyMargin=document.body.style.margin;var oldDocumentOverflow=document.documentElement.style.overflow;// Chrome, Firefox
var oldDocumentScroll=document.body.scroll;// IE
var oldImageRendering=canvas.style.imageRendering;function restoreOldStyle(){var fullscreenElement=document.fullscreenElement||document.webkitFullscreenElement;if(!fullscreenElement){document.removeEventListener('fullscreenchange',restoreOldStyle);// Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)
// As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.
document.removeEventListener('webkitfullscreenchange',restoreOldStyle);setCanvasElementSize(canvas,oldWidth,oldHeight);canvas.style.width=oldCssWidth;canvas.style.height=oldCssHeight;canvas.style.backgroundColor=oldBackgroundColor;// Chrome
// IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color
// before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user
// had explicitly set so subsequent fullscreen transitions would not set background color properly.
if(!oldDocumentBackgroundColor)document.body.style.backgroundColor='white';document.body.style.backgroundColor=oldDocumentBackgroundColor;// IE11
canvas.style.paddingLeft=oldPaddingLeft;// Chrome, FF, Safari
canvas.style.paddingRight=oldPaddingRight;canvas.style.paddingTop=oldPaddingTop;canvas.style.paddingBottom=oldPaddingBottom;canvas.style.marginLeft=oldMarginLeft;// IE11
canvas.style.marginRight=oldMarginRight;canvas.style.marginTop=oldMarginTop;canvas.style.marginBottom=oldMarginBottom;document.body.style.margin=oldDocumentBodyMargin;document.documentElement.style.overflow=oldDocumentOverflow;// Chrome, Firefox
document.body.scroll=oldDocumentScroll;// IE
canvas.style.imageRendering=oldImageRendering;if(canvas.GLctxObject)canvas.GLctxObject.GLctx.viewport(0,0,oldWidth,oldHeight);if(currentFullscreenStrategy.canvasResizedCallback){(function(a1,a2,a3){return dynCall_iiii.apply(null,[currentFullscreenStrategy.canvasResizedCallback,a1,a2,a3]);})(37,0,currentFullscreenStrategy.canvasResizedCallbackUserData);}}}document.addEventListener('fullscreenchange',restoreOldStyle);// Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)
// As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.
document.addEventListener('webkitfullscreenchange',restoreOldStyle);return restoreOldStyle;};var restoreHiddenElements=function restoreHiddenElements(hiddenElements){for(var i=0;i<hiddenElements.length;++i){hiddenElements[i].node.style.display=hiddenElements[i].displayState;}};var currentFullscreenStrategy={};/** @suppress {checkTypes} */var jstoi_q=function jstoi_q(str){return parseInt(str);};var softFullscreenResizeWebGLRenderTarget=function softFullscreenResizeWebGLRenderTarget(){var dpr=devicePixelRatio;var inHiDPIFullscreenMode=currentFullscreenStrategy.canvasResolutionScaleMode==2;var inAspectRatioFixedFullscreenMode=currentFullscreenStrategy.scaleMode==2;var inPixelPerfectFullscreenMode=currentFullscreenStrategy.canvasResolutionScaleMode!=0;var inCenteredWithoutScalingFullscreenMode=currentFullscreenStrategy.scaleMode==3;var screenWidth=inHiDPIFullscreenMode?Math.round(innerWidth*dpr):innerWidth;var screenHeight=inHiDPIFullscreenMode?Math.round(innerHeight*dpr):innerHeight;var w=screenWidth;var h=screenHeight;var canvas=currentFullscreenStrategy.target;var canvasSize=getCanvasElementSize(canvas);var x=canvasSize[0];var y=canvasSize[1];var topMargin;if(inAspectRatioFixedFullscreenMode){if(w*y<x*h)h=w*y/x|0;else if(w*y>x*h)w=h*x/y|0;topMargin=(screenHeight-h)/2|0;}if(inPixelPerfectFullscreenMode){setCanvasElementSize(canvas,w,h);if(canvas.GLctxObject)canvas.GLctxObject.GLctx.viewport(0,0,w,h);}// Back to CSS pixels.
if(inHiDPIFullscreenMode){topMargin/=dpr;w/=dpr;h/=dpr;// Round to nearest 4 digits of precision.
w=Math.round(w*1e4)/1e4;h=Math.round(h*1e4)/1e4;topMargin=Math.round(topMargin*1e4)/1e4;}if(inCenteredWithoutScalingFullscreenMode){var t=(innerHeight-jstoi_q(canvas.style.height))/2;var b=(innerWidth-jstoi_q(canvas.style.width))/2;setLetterbox(canvas,t,b);}else{canvas.style.width=w+'px';canvas.style.height=h+'px';var b=(innerWidth-w)/2;setLetterbox(canvas,topMargin,b);}if(!inCenteredWithoutScalingFullscreenMode&&currentFullscreenStrategy.canvasResizedCallback){(function(a1,a2,a3){return dynCall_iiii.apply(null,[currentFullscreenStrategy.canvasResizedCallback,a1,a2,a3]);})(37,0,currentFullscreenStrategy.canvasResizedCallbackUserData);}};var getBoundingClientRect=function getBoundingClientRect(e){return specialHTMLTargets.indexOf(e)<0?e.getBoundingClientRect():{'left':0,'top':0};};var JSEvents_resizeCanvasForFullscreen=function JSEvents_resizeCanvasForFullscreen(target,strategy){var restoreOldStyle=registerRestoreOldStyle(target);var cssWidth=strategy.softFullscreen?innerWidth:screen.width;var cssHeight=strategy.softFullscreen?innerHeight:screen.height;var rect=getBoundingClientRect(target);var windowedCssWidth=rect.width;var windowedCssHeight=rect.height;var canvasSize=getCanvasElementSize(target);var windowedRttWidth=canvasSize[0];var windowedRttHeight=canvasSize[1];if(strategy.scaleMode==3){setLetterbox(target,(cssHeight-windowedCssHeight)/2,(cssWidth-windowedCssWidth)/2);cssWidth=windowedCssWidth;cssHeight=windowedCssHeight;}else if(strategy.scaleMode==2){if(cssWidth*windowedRttHeight<windowedRttWidth*cssHeight){var desiredCssHeight=windowedRttHeight*cssWidth/windowedRttWidth;setLetterbox(target,(cssHeight-desiredCssHeight)/2,0);cssHeight=desiredCssHeight;}else{var desiredCssWidth=windowedRttWidth*cssHeight/windowedRttHeight;setLetterbox(target,0,(cssWidth-desiredCssWidth)/2);cssWidth=desiredCssWidth;}}// If we are adding padding, must choose a background color or otherwise Chrome will give the
// padding a default white color. Do it only if user has not customized their own background color.
if(!target.style.backgroundColor)target.style.backgroundColor='black';// IE11 does the same, but requires the color to be set in the document body.
if(!document.body.style.backgroundColor)document.body.style.backgroundColor='black';// IE11
// Firefox always shows black letterboxes independent of style color.
target.style.width=cssWidth+'px';target.style.height=cssHeight+'px';if(strategy.filteringMode==1){target.style.imageRendering='optimizeSpeed';target.style.imageRendering='-moz-crisp-edges';target.style.imageRendering='-o-crisp-edges';target.style.imageRendering='-webkit-optimize-contrast';target.style.imageRendering='optimize-contrast';target.style.imageRendering='crisp-edges';target.style.imageRendering='pixelated';}var dpiScale=strategy.canvasResolutionScaleMode==2?devicePixelRatio:1;if(strategy.canvasResolutionScaleMode!=0){var newWidth=cssWidth*dpiScale|0;var newHeight=cssHeight*dpiScale|0;setCanvasElementSize(target,newWidth,newHeight);if(target.GLctxObject)target.GLctxObject.GLctx.viewport(0,0,newWidth,newHeight);}return restoreOldStyle;};var _emscripten_enter_soft_fullscreen=function _emscripten_enter_soft_fullscreen(target,fullscreenStrategy){target=findEventTarget(target);if(!target)return-4;var strategy={scaleMode:HEAP32[fullscreenStrategy>>2],canvasResolutionScaleMode:HEAP32[fullscreenStrategy+4>>2],filteringMode:HEAP32[fullscreenStrategy+8>>2],canvasResizedCallback:HEAP32[fullscreenStrategy+12>>2],canvasResizedCallbackUserData:HEAP32[fullscreenStrategy+16>>2],target:target,softFullscreen:true};var restoreOldStyle=JSEvents_resizeCanvasForFullscreen(target,strategy);document.documentElement.style.overflow='hidden';// Firefox, Chrome
document.body.scroll="no";// IE11
document.body.style.margin='0px';// Override default document margin area on all browsers.
var hiddenElements=hideEverythingExceptGivenElement(target);function restoreWindowedState(){restoreOldStyle();restoreHiddenElements(hiddenElements);removeEventListener('resize',softFullscreenResizeWebGLRenderTarget);if(strategy.canvasResizedCallback){(function(a1,a2,a3){return dynCall_iiii.apply(null,[strategy.canvasResizedCallback,a1,a2,a3]);})(37,0,strategy.canvasResizedCallbackUserData);}currentFullscreenStrategy=0;}restoreOldWindowedStyle=restoreWindowedState;currentFullscreenStrategy=strategy;addEventListener('resize',softFullscreenResizeWebGLRenderTarget);// Inform the caller that the canvas size has changed.
if(strategy.canvasResizedCallback){(function(a1,a2,a3){return dynCall_iiii.apply(null,[strategy.canvasResizedCallback,a1,a2,a3]);})(37,0,strategy.canvasResizedCallbackUserData);}return 0;};var JSEvents_requestFullscreen=function JSEvents_requestFullscreen(target,strategy){// EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.
if(strategy.scaleMode!=0||strategy.canvasResolutionScaleMode!=0){JSEvents_resizeCanvasForFullscreen(target,strategy);}if(target.requestFullscreen){target.requestFullscreen();}else if(target.webkitRequestFullscreen){target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);}else{return JSEvents.fullscreenEnabled()?-3:-1;}currentFullscreenStrategy=strategy;if(strategy.canvasResizedCallback){(function(a1,a2,a3){return dynCall_iiii.apply(null,[strategy.canvasResizedCallback,a1,a2,a3]);})(37,0,strategy.canvasResizedCallbackUserData);}return 0;};var _emscripten_exit_fullscreen=function _emscripten_exit_fullscreen(){if(!JSEvents.fullscreenEnabled())return-1;// Make sure no queued up calls will fire after this.
JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);var d=specialHTMLTargets[1];if(d.exitFullscreen){d.fullscreenElement&&d.exitFullscreen();}else if(d.webkitExitFullscreen){d.webkitFullscreenElement&&d.webkitExitFullscreen();}else{return-1;}return 0;};var requestPointerLock=function requestPointerLock(target){if(target.requestPointerLock){target.requestPointerLock();}else{// document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,
// or if the whole browser just doesn't support the feature.
if(document.body.requestPointerLock){return-3;}return-1;}return 0;};var _emscripten_exit_pointerlock=function _emscripten_exit_pointerlock(){// Make sure no queued up calls will fire after this.
JSEvents.removeDeferredCalls(requestPointerLock);if(document.exitPointerLock){document.exitPointerLock();}else{return-1;}return 0;};var _emscripten_exit_soft_fullscreen=function _emscripten_exit_soft_fullscreen(){if(restoreOldWindowedStyle)restoreOldWindowedStyle();restoreOldWindowedStyle=null;return 0;};var _emscripten_get_device_pixel_ratio=function _emscripten_get_device_pixel_ratio(){return devicePixelRatio;};var _emscripten_get_element_css_size=function _emscripten_get_element_css_size(target,width,height){target=findEventTarget(target);if(!target)return-4;var rect=getBoundingClientRect(target);HEAPF64[width>>3]=rect.width;HEAPF64[height>>3]=rect.height;return 0;};var fillGamepadEventData=function fillGamepadEventData(eventStruct,e){HEAPF64[eventStruct>>3]=e.timestamp;for(var i=0;i<e.axes.length;++i){HEAPF64[eventStruct+i*8+16>>3]=e.axes[i];}for(var i=0;i<e.buttons.length;++i){if(_typeof(e.buttons[i])=='object'){HEAPF64[eventStruct+i*8+528>>3]=e.buttons[i].value;}else{HEAPF64[eventStruct+i*8+528>>3]=e.buttons[i];}}for(var i=0;i<e.buttons.length;++i){if(_typeof(e.buttons[i])=='object'){HEAP32[eventStruct+i*4+1040>>2]=e.buttons[i].pressed;}else{// Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:
/** @suppress {checkTypes} */HEAP32[eventStruct+i*4+1040>>2]=e.buttons[i]==1;}}HEAP32[eventStruct+1296>>2]=e.connected;HEAP32[eventStruct+1300>>2]=e.index;HEAP32[eventStruct+8>>2]=e.axes.length;HEAP32[eventStruct+12>>2]=e.buttons.length;stringToUTF8(e.id,eventStruct+1304,64);stringToUTF8(e.mapping,eventStruct+1368,64);};var _emscripten_get_gamepad_status=function _emscripten_get_gamepad_status(index,gamepadState){// INVALID_PARAM is returned on a Gamepad index that never was there.
if(index<0||index>=JSEvents.lastGamepadState.length)return-5;// NO_DATA is returned on a Gamepad index that was removed.
// For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.
// This is because gamepads must keep their original position in the array.
// For example, removing the first of two gamepads produces [null/undefined/false, gamepad].
if(!JSEvents.lastGamepadState[index])return-7;fillGamepadEventData(gamepadState,JSEvents.lastGamepadState[index]);return 0;};var _emscripten_get_num_gamepads=function _emscripten_get_num_gamepads(){// N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.
// Otherwise the following line will throw an exception.
return JSEvents.lastGamepadState.length;};var _emscripten_get_screen_size=function _emscripten_get_screen_size(width,height){HEAP32[width>>2]=screen.width;HEAP32[height>>2]=screen.height;};/** @suppress {duplicate } */function _glActiveTexture(x0){GLctx.activeTexture(x0);}var _emscripten_glActiveTexture=_glActiveTexture;/** @suppress {duplicate } */var _glAttachShader=function _glAttachShader(program,shader){GLctx.attachShader(GL.programs[program],GL.shaders[shader]);};var _emscripten_glAttachShader=_glAttachShader;/** @suppress {duplicate } */var _glBeginQuery=function _glBeginQuery(target,id){GLctx.beginQuery(target,GL.queries[id]);};var _emscripten_glBeginQuery=_glBeginQuery;/** @suppress {duplicate } */var _glBeginQueryEXT=function _glBeginQueryEXT(target,id){GLctx.disjointTimerQueryExt['beginQueryEXT'](target,GL.queries[id]);};var _emscripten_glBeginQueryEXT=_glBeginQueryEXT;/** @suppress {duplicate } */function _glBeginTransformFeedback(x0){GLctx.beginTransformFeedback(x0);}var _emscripten_glBeginTransformFeedback=_glBeginTransformFeedback;/** @suppress {duplicate } */var _glBindAttribLocation=function _glBindAttribLocation(program,index,name){GLctx.bindAttribLocation(GL.programs[program],index,UTF8ToString(name));};var _emscripten_glBindAttribLocation=_glBindAttribLocation;/** @suppress {duplicate } */var _glBindBuffer=function _glBindBuffer(target,buffer){if(target==0x8892/*GL_ARRAY_BUFFER*/){GLctx.currentArrayBufferBinding=buffer;}else if(target==0x8893/*GL_ELEMENT_ARRAY_BUFFER*/){GLctx.currentElementArrayBufferBinding=buffer;}if(target==0x88EB/*GL_PIXEL_PACK_BUFFER*/){// In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2 API function call when a buffer is bound to
// GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that binding point is non-null to know what is
// the proper API function to call.
GLctx.currentPixelPackBufferBinding=buffer;}else if(target==0x88EC/*GL_PIXEL_UNPACK_BUFFER*/){// In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to
// use a different WebGL 2 API function call when a buffer is bound to
// GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that
// binding point is non-null to know what is the proper API function to
// call.
GLctx.currentPixelUnpackBufferBinding=buffer;}GLctx.bindBuffer(target,GL.buffers[buffer]);};var _emscripten_glBindBuffer=_glBindBuffer;/** @suppress {duplicate } */var _glBindBufferBase=function _glBindBufferBase(target,index,buffer){GLctx.bindBufferBase(target,index,GL.buffers[buffer]);};var _emscripten_glBindBufferBase=_glBindBufferBase;/** @suppress {duplicate } */var _glBindBufferRange=function _glBindBufferRange(target,index,buffer,offset,ptrsize){GLctx.bindBufferRange(target,index,GL.buffers[buffer],offset,ptrsize);};var _emscripten_glBindBufferRange=_glBindBufferRange;/** @suppress {duplicate } */var _glBindFramebuffer=function _glBindFramebuffer(target,framebuffer){GLctx.bindFramebuffer(target,GL.framebuffers[framebuffer]);};var _emscripten_glBindFramebuffer=_glBindFramebuffer;/** @suppress {duplicate } */var _glBindRenderbuffer=function _glBindRenderbuffer(target,renderbuffer){GLctx.bindRenderbuffer(target,GL.renderbuffers[renderbuffer]);};var _emscripten_glBindRenderbuffer=_glBindRenderbuffer;/** @suppress {duplicate } */var _glBindSampler=function _glBindSampler(unit,sampler){GLctx.bindSampler(unit,GL.samplers[sampler]);};var _emscripten_glBindSampler=_glBindSampler;/** @suppress {duplicate } */var _glBindTexture=function _glBindTexture(target,texture){GLctx.bindTexture(target,GL.textures[texture]);};var _emscripten_glBindTexture=_glBindTexture;/** @suppress {duplicate } */var _glBindTransformFeedback=function _glBindTransformFeedback(target,id){GLctx.bindTransformFeedback(target,GL.transformFeedbacks[id]);};var _emscripten_glBindTransformFeedback=_glBindTransformFeedback;/** @suppress {duplicate } */var _glBindVertexArray=function _glBindVertexArray(vao){GLctx.bindVertexArray(GL.vaos[vao]);var ibo=GLctx.getParameter(0x8895/*ELEMENT_ARRAY_BUFFER_BINDING*/);GLctx.currentElementArrayBufferBinding=ibo?ibo.name|0:0;};var _emscripten_glBindVertexArray=_glBindVertexArray;/** @suppress {duplicate } */var _glBindVertexArrayOES=_glBindVertexArray;var _emscripten_glBindVertexArrayOES=_glBindVertexArrayOES;/** @suppress {duplicate } */function _glBlendColor(x0,x1,x2,x3){GLctx.blendColor(x0,x1,x2,x3);}var _emscripten_glBlendColor=_glBlendColor;/** @suppress {duplicate } */function _glBlendEquation(x0){GLctx.blendEquation(x0);}var _emscripten_glBlendEquation=_glBlendEquation;/** @suppress {duplicate } */function _glBlendEquationSeparate(x0,x1){GLctx.blendEquationSeparate(x0,x1);}var _emscripten_glBlendEquationSeparate=_glBlendEquationSeparate;/** @suppress {duplicate } */function _glBlendFunc(x0,x1){GLctx.blendFunc(x0,x1);}var _emscripten_glBlendFunc=_glBlendFunc;/** @suppress {duplicate } */function _glBlendFuncSeparate(x0,x1,x2,x3){GLctx.blendFuncSeparate(x0,x1,x2,x3);}var _emscripten_glBlendFuncSeparate=_glBlendFuncSeparate;/** @suppress {duplicate } */function _glBlitFramebuffer(x0,x1,x2,x3,x4,x5,x6,x7,x8,x9){GLctx.blitFramebuffer(x0,x1,x2,x3,x4,x5,x6,x7,x8,x9);}var _emscripten_glBlitFramebuffer=_glBlitFramebuffer;/** @suppress {duplicate } */var _glBufferData=function _glBufferData(target,size,data,usage){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
// If size is zero, WebGL would interpret uploading the whole input arraybuffer (starting from given offset), which would
// not make sense in WebAssembly, so avoid uploading if size is zero. However we must still call bufferData to establish a
// backing storage of zero bytes.
if(data&&size){GLctx.bufferData(target,HEAPU8,usage,data,size);}else{GLctx.bufferData(target,size,usage);}}else{// N.b. here first form specifies a heap subarray, second form an integer size, so the ?: code here is polymorphic. It is advised to avoid
// randomly mixing both uses in calling code, to avoid any potential JS engine JIT issues.
GLctx.bufferData(target,data?HEAPU8.subarray(data,data+size):size,usage);}};var _emscripten_glBufferData=_glBufferData;/** @suppress {duplicate } */var _glBufferSubData=function _glBufferSubData(target,offset,size,data){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
size&&GLctx.bufferSubData(target,offset,HEAPU8,data,size);return;}GLctx.bufferSubData(target,offset,HEAPU8.subarray(data,data+size));};var _emscripten_glBufferSubData=_glBufferSubData;/** @suppress {duplicate } */function _glCheckFramebufferStatus(x0){return GLctx.checkFramebufferStatus(x0);}var _emscripten_glCheckFramebufferStatus=_glCheckFramebufferStatus;/** @suppress {duplicate } */function _glClear(x0){GLctx.clear(x0);}var _emscripten_glClear=_glClear;/** @suppress {duplicate } */function _glClearBufferfi(x0,x1,x2,x3){GLctx.clearBufferfi(x0,x1,x2,x3);}var _emscripten_glClearBufferfi=_glClearBufferfi;/** @suppress {duplicate } */var _glClearBufferfv=function _glClearBufferfv(buffer,drawbuffer,value){GLctx.clearBufferfv(buffer,drawbuffer,HEAPF32,value>>2);};var _emscripten_glClearBufferfv=_glClearBufferfv;/** @suppress {duplicate } */var _glClearBufferiv=function _glClearBufferiv(buffer,drawbuffer,value){GLctx.clearBufferiv(buffer,drawbuffer,HEAP32,value>>2);};var _emscripten_glClearBufferiv=_glClearBufferiv;/** @suppress {duplicate } */var _glClearBufferuiv=function _glClearBufferuiv(buffer,drawbuffer,value){GLctx.clearBufferuiv(buffer,drawbuffer,HEAPU32,value>>2);};var _emscripten_glClearBufferuiv=_glClearBufferuiv;/** @suppress {duplicate } */function _glClearColor(x0,x1,x2,x3){GLctx.clearColor(x0,x1,x2,x3);}var _emscripten_glClearColor=_glClearColor;/** @suppress {duplicate } */function _glClearDepthf(x0){GLctx.clearDepth(x0);}var _emscripten_glClearDepthf=_glClearDepthf;/** @suppress {duplicate } */function _glClearStencil(x0){GLctx.clearStencil(x0);}var _emscripten_glClearStencil=_glClearStencil;var convertI32PairToI53=function convertI32PairToI53(lo,hi){return(lo>>>0)+hi*4294967296;};/** @suppress {duplicate } */var _glClientWaitSync=function _glClientWaitSync(sync,flags,timeout_low,timeout_high){// WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.
// In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.
// Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)
// See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15
var timeout=convertI32PairToI53(timeout_low,timeout_high);return GLctx.clientWaitSync(GL.syncs[sync],flags,timeout);};var _emscripten_glClientWaitSync=_glClientWaitSync;/** @suppress {duplicate } */var _glColorMask=function _glColorMask(red,green,blue,alpha){GLctx.colorMask(!!red,!!green,!!blue,!!alpha);};var _emscripten_glColorMask=_glColorMask;/** @suppress {duplicate } */var _glCompileShader=function _glCompileShader(shader){GLctx.compileShader(GL.shaders[shader]);};var _emscripten_glCompileShader=_glCompileShader;/** @suppress {duplicate } */var _glCompressedTexImage2D=function _glCompressedTexImage2D(target,level,internalFormat,width,height,border,imageSize,data){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
if(GLctx.currentPixelUnpackBufferBinding||!imageSize){GLctx.compressedTexImage2D(target,level,internalFormat,width,height,border,imageSize,data);}else{GLctx.compressedTexImage2D(target,level,internalFormat,width,height,border,HEAPU8,data,imageSize);}return;}GLctx.compressedTexImage2D(target,level,internalFormat,width,height,border,data?HEAPU8.subarray(data,data+imageSize):null);};var _emscripten_glCompressedTexImage2D=_glCompressedTexImage2D;/** @suppress {duplicate } */var _glCompressedTexImage3D=function _glCompressedTexImage3D(target,level,internalFormat,width,height,depth,border,imageSize,data){if(GLctx.currentPixelUnpackBufferBinding){GLctx.compressedTexImage3D(target,level,internalFormat,width,height,depth,border,imageSize,data);}else{GLctx.compressedTexImage3D(target,level,internalFormat,width,height,depth,border,HEAPU8,data,imageSize);}};var _emscripten_glCompressedTexImage3D=_glCompressedTexImage3D;/** @suppress {duplicate } */var _glCompressedTexSubImage2D=function _glCompressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,imageSize,data){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
if(GLctx.currentPixelUnpackBufferBinding||!imageSize){GLctx.compressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,imageSize,data);}else{GLctx.compressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,HEAPU8,data,imageSize);}return;}GLctx.compressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,data?HEAPU8.subarray(data,data+imageSize):null);};var _emscripten_glCompressedTexSubImage2D=_glCompressedTexSubImage2D;/** @suppress {duplicate } */var _glCompressedTexSubImage3D=function _glCompressedTexSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,imageSize,data){if(GLctx.currentPixelUnpackBufferBinding){GLctx.compressedTexSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,imageSize,data);}else{GLctx.compressedTexSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,HEAPU8,data,imageSize);}};var _emscripten_glCompressedTexSubImage3D=_glCompressedTexSubImage3D;/** @suppress {duplicate } */function _glCopyBufferSubData(x0,x1,x2,x3,x4){GLctx.copyBufferSubData(x0,x1,x2,x3,x4);}var _emscripten_glCopyBufferSubData=_glCopyBufferSubData;/** @suppress {duplicate } */function _glCopyTexImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx.copyTexImage2D(x0,x1,x2,x3,x4,x5,x6,x7);}var _emscripten_glCopyTexImage2D=_glCopyTexImage2D;/** @suppress {duplicate } */function _glCopyTexSubImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx.copyTexSubImage2D(x0,x1,x2,x3,x4,x5,x6,x7);}var _emscripten_glCopyTexSubImage2D=_glCopyTexSubImage2D;/** @suppress {duplicate } */function _glCopyTexSubImage3D(x0,x1,x2,x3,x4,x5,x6,x7,x8){GLctx.copyTexSubImage3D(x0,x1,x2,x3,x4,x5,x6,x7,x8);}var _emscripten_glCopyTexSubImage3D=_glCopyTexSubImage3D;/** @suppress {duplicate } */var _glCreateProgram=function _glCreateProgram(){var id=GL.getNewId(GL.programs);var program=GLctx.createProgram();// Store additional information needed for each shader program:
program.name=id;// Lazy cache results of glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)
program.maxUniformLength=program.maxAttributeLength=program.maxUniformBlockNameLength=0;program.uniformIdCounter=1;GL.programs[id]=program;return id;};var _emscripten_glCreateProgram=_glCreateProgram;/** @suppress {duplicate } */var _glCreateShader=function _glCreateShader(shaderType){var id=GL.getNewId(GL.shaders);GL.shaders[id]=GLctx.createShader(shaderType);return id;};var _emscripten_glCreateShader=_glCreateShader;/** @suppress {duplicate } */function _glCullFace(x0){GLctx.cullFace(x0);}var _emscripten_glCullFace=_glCullFace;/** @suppress {duplicate } */var _glDeleteBuffers=function _glDeleteBuffers(n,buffers){for(var i=0;i<n;i++){var id=HEAP32[buffers+i*4>>2];var buffer=GL.buffers[id];// From spec: "glDeleteBuffers silently ignores 0's and names that do not
// correspond to existing buffer objects."
if(!buffer)continue;GLctx.deleteBuffer(buffer);buffer.name=0;GL.buffers[id]=null;if(id==GLctx.currentArrayBufferBinding)GLctx.currentArrayBufferBinding=0;if(id==GLctx.currentElementArrayBufferBinding)GLctx.currentElementArrayBufferBinding=0;if(id==GLctx.currentPixelPackBufferBinding)GLctx.currentPixelPackBufferBinding=0;if(id==GLctx.currentPixelUnpackBufferBinding)GLctx.currentPixelUnpackBufferBinding=0;}};var _emscripten_glDeleteBuffers=_glDeleteBuffers;/** @suppress {duplicate } */var _glDeleteFramebuffers=function _glDeleteFramebuffers(n,framebuffers){for(var i=0;i<n;++i){var id=HEAP32[framebuffers+i*4>>2];var framebuffer=GL.framebuffers[id];if(!framebuffer)continue;// GL spec: "glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects".
GLctx.deleteFramebuffer(framebuffer);framebuffer.name=0;GL.framebuffers[id]=null;}};var _emscripten_glDeleteFramebuffers=_glDeleteFramebuffers;/** @suppress {duplicate } */var _glDeleteProgram=function _glDeleteProgram(id){if(!id)return;var program=GL.programs[id];if(!program){// glDeleteProgram actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}GLctx.deleteProgram(program);program.name=0;GL.programs[id]=null;};var _emscripten_glDeleteProgram=_glDeleteProgram;/** @suppress {duplicate } */var _glDeleteQueries=function _glDeleteQueries(n,ids){for(var i=0;i<n;i++){var id=HEAP32[ids+i*4>>2];var query=GL.queries[id];if(!query)continue;// GL spec: "unused names in ids are ignored, as is the name zero."
GLctx.deleteQuery(query);GL.queries[id]=null;}};var _emscripten_glDeleteQueries=_glDeleteQueries;/** @suppress {duplicate } */var _glDeleteQueriesEXT=function _glDeleteQueriesEXT(n,ids){for(var i=0;i<n;i++){var id=HEAP32[ids+i*4>>2];var query=GL.queries[id];if(!query)continue;// GL spec: "unused names in ids are ignored, as is the name zero."
GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);GL.queries[id]=null;}};var _emscripten_glDeleteQueriesEXT=_glDeleteQueriesEXT;/** @suppress {duplicate } */var _glDeleteRenderbuffers=function _glDeleteRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var id=HEAP32[renderbuffers+i*4>>2];var renderbuffer=GL.renderbuffers[id];if(!renderbuffer)continue;// GL spec: "glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects".
GLctx.deleteRenderbuffer(renderbuffer);renderbuffer.name=0;GL.renderbuffers[id]=null;}};var _emscripten_glDeleteRenderbuffers=_glDeleteRenderbuffers;/** @suppress {duplicate } */var _glDeleteSamplers=function _glDeleteSamplers(n,samplers){for(var i=0;i<n;i++){var id=HEAP32[samplers+i*4>>2];var sampler=GL.samplers[id];if(!sampler)continue;GLctx.deleteSampler(sampler);sampler.name=0;GL.samplers[id]=null;}};var _emscripten_glDeleteSamplers=_glDeleteSamplers;/** @suppress {duplicate } */var _glDeleteShader=function _glDeleteShader(id){if(!id)return;var shader=GL.shaders[id];if(!shader){// glDeleteShader actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}GLctx.deleteShader(shader);GL.shaders[id]=null;};var _emscripten_glDeleteShader=_glDeleteShader;/** @suppress {duplicate } */var _glDeleteSync=function _glDeleteSync(id){if(!id)return;var sync=GL.syncs[id];if(!sync){// glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}GLctx.deleteSync(sync);sync.name=0;GL.syncs[id]=null;};var _emscripten_glDeleteSync=_glDeleteSync;/** @suppress {duplicate } */var _glDeleteTextures=function _glDeleteTextures(n,textures){for(var i=0;i<n;i++){var id=HEAP32[textures+i*4>>2];var texture=GL.textures[id];if(!texture)continue;// GL spec: "glDeleteTextures silently ignores 0s and names that do not correspond to existing textures".
GLctx.deleteTexture(texture);texture.name=0;GL.textures[id]=null;}};var _emscripten_glDeleteTextures=_glDeleteTextures;/** @suppress {duplicate } */var _glDeleteTransformFeedbacks=function _glDeleteTransformFeedbacks(n,ids){for(var i=0;i<n;i++){var id=HEAP32[ids+i*4>>2];var transformFeedback=GL.transformFeedbacks[id];if(!transformFeedback)continue;// GL spec: "unused names in ids are ignored, as is the name zero."
GLctx.deleteTransformFeedback(transformFeedback);transformFeedback.name=0;GL.transformFeedbacks[id]=null;}};var _emscripten_glDeleteTransformFeedbacks=_glDeleteTransformFeedbacks;/** @suppress {duplicate } */var _glDeleteVertexArrays=function _glDeleteVertexArrays(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx.deleteVertexArray(GL.vaos[id]);GL.vaos[id]=null;}};var _emscripten_glDeleteVertexArrays=_glDeleteVertexArrays;/** @suppress {duplicate } */var _glDeleteVertexArraysOES=_glDeleteVertexArrays;var _emscripten_glDeleteVertexArraysOES=_glDeleteVertexArraysOES;/** @suppress {duplicate } */function _glDepthFunc(x0){GLctx.depthFunc(x0);}var _emscripten_glDepthFunc=_glDepthFunc;/** @suppress {duplicate } */var _glDepthMask=function _glDepthMask(flag){GLctx.depthMask(!!flag);};var _emscripten_glDepthMask=_glDepthMask;/** @suppress {duplicate } */function _glDepthRangef(x0,x1){GLctx.depthRange(x0,x1);}var _emscripten_glDepthRangef=_glDepthRangef;/** @suppress {duplicate } */var _glDetachShader=function _glDetachShader(program,shader){GLctx.detachShader(GL.programs[program],GL.shaders[shader]);};var _emscripten_glDetachShader=_glDetachShader;/** @suppress {duplicate } */function _glDisable(x0){GLctx.disable(x0);}var _emscripten_glDisable=_glDisable;/** @suppress {duplicate } */var _glDisableVertexAttribArray=function _glDisableVertexAttribArray(index){var cb=GL.currentContext.clientBuffers[index];cb.enabled=false;GLctx.disableVertexAttribArray(index);};var _emscripten_glDisableVertexAttribArray=_glDisableVertexAttribArray;/** @suppress {duplicate } */var _glDrawArrays=function _glDrawArrays(mode,first,count){// bind any client-side buffers
GL.preDrawHandleClientVertexAttribBindings(first+count);GLctx.drawArrays(mode,first,count);GL.postDrawHandleClientVertexAttribBindings();};var _emscripten_glDrawArrays=_glDrawArrays;/** @suppress {duplicate } */var _glDrawArraysInstanced=function _glDrawArraysInstanced(mode,first,count,primcount){GLctx.drawArraysInstanced(mode,first,count,primcount);};var _emscripten_glDrawArraysInstanced=_glDrawArraysInstanced;/** @suppress {duplicate } */var _glDrawArraysInstancedANGLE=_glDrawArraysInstanced;var _emscripten_glDrawArraysInstancedANGLE=_glDrawArraysInstancedANGLE;/** @suppress {duplicate } */var _glDrawArraysInstancedARB=_glDrawArraysInstanced;var _emscripten_glDrawArraysInstancedARB=_glDrawArraysInstancedARB;/** @suppress {duplicate } */var _glDrawArraysInstancedEXT=_glDrawArraysInstanced;var _emscripten_glDrawArraysInstancedEXT=_glDrawArraysInstancedEXT;/** @suppress {duplicate } */var _glDrawArraysInstancedNV=_glDrawArraysInstanced;var _emscripten_glDrawArraysInstancedNV=_glDrawArraysInstancedNV;var tempFixedLengthArray=[];/** @suppress {duplicate } */var _glDrawBuffers=function _glDrawBuffers(n,bufs){var bufArray=tempFixedLengthArray[n];for(var i=0;i<n;i++){bufArray[i]=HEAP32[bufs+i*4>>2];}GLctx.drawBuffers(bufArray);};var _emscripten_glDrawBuffers=_glDrawBuffers;/** @suppress {duplicate } */var _glDrawBuffersEXT=_glDrawBuffers;var _emscripten_glDrawBuffersEXT=_glDrawBuffersEXT;/** @suppress {duplicate } */var _glDrawBuffersWEBGL=_glDrawBuffers;var _emscripten_glDrawBuffersWEBGL=_glDrawBuffersWEBGL;/** @suppress {duplicate } */var _glDrawElements=function _glDrawElements(mode,count,type,indices){var buf;if(!GLctx.currentElementArrayBufferBinding){var size=GL.calcBufLength(1,type,0,count);buf=GL.getTempIndexBuffer(size);GLctx.bindBuffer(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,buf);GLctx.bufferSubData(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,0,HEAPU8.subarray(indices,indices+size));// the index is now 0
indices=0;}// bind any client-side buffers
GL.preDrawHandleClientVertexAttribBindings(count);GLctx.drawElements(mode,count,type,indices);GL.postDrawHandleClientVertexAttribBindings(count);if(!GLctx.currentElementArrayBufferBinding){GLctx.bindBuffer(0x8893/*GL_ELEMENT_ARRAY_BUFFER*/,null);}};var _emscripten_glDrawElements=_glDrawElements;/** @suppress {duplicate } */var _glDrawElementsInstanced=function _glDrawElementsInstanced(mode,count,type,indices,primcount){GLctx.drawElementsInstanced(mode,count,type,indices,primcount);};var _emscripten_glDrawElementsInstanced=_glDrawElementsInstanced;/** @suppress {duplicate } */var _glDrawElementsInstancedANGLE=_glDrawElementsInstanced;var _emscripten_glDrawElementsInstancedANGLE=_glDrawElementsInstancedANGLE;/** @suppress {duplicate } */var _glDrawElementsInstancedARB=_glDrawElementsInstanced;var _emscripten_glDrawElementsInstancedARB=_glDrawElementsInstancedARB;/** @suppress {duplicate } */var _glDrawElementsInstancedEXT=_glDrawElementsInstanced;var _emscripten_glDrawElementsInstancedEXT=_glDrawElementsInstancedEXT;/** @suppress {duplicate } */var _glDrawElementsInstancedNV=_glDrawElementsInstanced;var _emscripten_glDrawElementsInstancedNV=_glDrawElementsInstancedNV;/** @suppress {duplicate } */var _glDrawRangeElements=function _glDrawRangeElements(mode,start,end,count,type,indices){// TODO: This should be a trivial pass-though function registered at the bottom of this page as
// glFuncs[6][1] += ' drawRangeElements';
// but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,
// we work around by ignoring the range.
_glDrawElements(mode,count,type,indices);};var _emscripten_glDrawRangeElements=_glDrawRangeElements;/** @suppress {duplicate } */function _glEnable(x0){GLctx.enable(x0);}var _emscripten_glEnable=_glEnable;/** @suppress {duplicate } */var _glEnableVertexAttribArray=function _glEnableVertexAttribArray(index){var cb=GL.currentContext.clientBuffers[index];cb.enabled=true;GLctx.enableVertexAttribArray(index);};var _emscripten_glEnableVertexAttribArray=_glEnableVertexAttribArray;/** @suppress {duplicate } */function _glEndQuery(x0){GLctx.endQuery(x0);}var _emscripten_glEndQuery=_glEndQuery;/** @suppress {duplicate } */var _glEndQueryEXT=function _glEndQueryEXT(target){GLctx.disjointTimerQueryExt['endQueryEXT'](target);};var _emscripten_glEndQueryEXT=_glEndQueryEXT;/** @suppress {duplicate } */function _glEndTransformFeedback(){GLctx.endTransformFeedback();}var _emscripten_glEndTransformFeedback=_glEndTransformFeedback;/** @suppress {duplicate } */var _glFenceSync=function _glFenceSync(condition,flags){var sync=GLctx.fenceSync(condition,flags);if(sync){var id=GL.getNewId(GL.syncs);sync.name=id;GL.syncs[id]=sync;return id;}return 0;// Failed to create a sync object
};var _emscripten_glFenceSync=_glFenceSync;/** @suppress {duplicate } */function _glFinish(){GLctx.finish();}var _emscripten_glFinish=_glFinish;/** @suppress {duplicate } */function _glFlush(){GLctx.flush();}var _emscripten_glFlush=_glFlush;/** @suppress {duplicate } */var _glFramebufferRenderbuffer=function _glFramebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer){GLctx.framebufferRenderbuffer(target,attachment,renderbuffertarget,GL.renderbuffers[renderbuffer]);};var _emscripten_glFramebufferRenderbuffer=_glFramebufferRenderbuffer;/** @suppress {duplicate } */var _glFramebufferTexture2D=function _glFramebufferTexture2D(target,attachment,textarget,texture,level){GLctx.framebufferTexture2D(target,attachment,textarget,GL.textures[texture],level);};var _emscripten_glFramebufferTexture2D=_glFramebufferTexture2D;/** @suppress {duplicate } */var _glFramebufferTextureLayer=function _glFramebufferTextureLayer(target,attachment,texture,level,layer){GLctx.framebufferTextureLayer(target,attachment,GL.textures[texture],level,layer);};var _emscripten_glFramebufferTextureLayer=_glFramebufferTextureLayer;/** @suppress {duplicate } */function _glFrontFace(x0){GLctx.frontFace(x0);}var _emscripten_glFrontFace=_glFrontFace;var __glGenObject=function __glGenObject(n,buffers,createFunction,objectTable){for(var i=0;i<n;i++){var buffer=GLctx[createFunction]();var id=buffer&&GL.getNewId(objectTable);if(buffer){buffer.name=id;objectTable[id]=buffer;}else{GL.recordError(0x502/* GL_INVALID_OPERATION */);}HEAP32[buffers+i*4>>2]=id;}};/** @suppress {duplicate } */var _glGenBuffers=function _glGenBuffers(n,buffers){__glGenObject(n,buffers,'createBuffer',GL.buffers);};var _emscripten_glGenBuffers=_glGenBuffers;/** @suppress {duplicate } */var _glGenFramebuffers=function _glGenFramebuffers(n,ids){__glGenObject(n,ids,'createFramebuffer',GL.framebuffers);};var _emscripten_glGenFramebuffers=_glGenFramebuffers;/** @suppress {duplicate } */var _glGenQueries=function _glGenQueries(n,ids){__glGenObject(n,ids,'createQuery',GL.queries);};var _emscripten_glGenQueries=_glGenQueries;/** @suppress {duplicate } */var _glGenQueriesEXT=function _glGenQueriesEXT(n,ids){for(var i=0;i<n;i++){var query=GLctx.disjointTimerQueryExt['createQueryEXT']();if(!query){GL.recordError(0x502/* GL_INVALID_OPERATION */);while(i<n)HEAP32[ids+i++*4>>2]=0;return;}var id=GL.getNewId(GL.queries);query.name=id;GL.queries[id]=query;HEAP32[ids+i*4>>2]=id;}};var _emscripten_glGenQueriesEXT=_glGenQueriesEXT;/** @suppress {duplicate } */var _glGenRenderbuffers=function _glGenRenderbuffers(n,renderbuffers){__glGenObject(n,renderbuffers,'createRenderbuffer',GL.renderbuffers);};var _emscripten_glGenRenderbuffers=_glGenRenderbuffers;/** @suppress {duplicate } */var _glGenSamplers=function _glGenSamplers(n,samplers){__glGenObject(n,samplers,'createSampler',GL.samplers);};var _emscripten_glGenSamplers=_glGenSamplers;/** @suppress {duplicate } */var _glGenTextures=function _glGenTextures(n,textures){__glGenObject(n,textures,'createTexture',GL.textures);};var _emscripten_glGenTextures=_glGenTextures;/** @suppress {duplicate } */var _glGenTransformFeedbacks=function _glGenTransformFeedbacks(n,ids){__glGenObject(n,ids,'createTransformFeedback',GL.transformFeedbacks);};var _emscripten_glGenTransformFeedbacks=_glGenTransformFeedbacks;/** @suppress {duplicate } */function _glGenVertexArrays(n,arrays){__glGenObject(n,arrays,'createVertexArray',GL.vaos);}var _emscripten_glGenVertexArrays=_glGenVertexArrays;/** @suppress {duplicate } */var _glGenVertexArraysOES=_glGenVertexArrays;var _emscripten_glGenVertexArraysOES=_glGenVertexArraysOES;/** @suppress {duplicate } */function _glGenerateMipmap(x0){GLctx.generateMipmap(x0);}var _emscripten_glGenerateMipmap=_glGenerateMipmap;var __glGetActiveAttribOrUniform=function __glGetActiveAttribOrUniform(funcName,program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx[funcName](program,index);if(info){// If an error occurs, nothing will be written to length, size and type and name.
var numBytesWrittenExclNull=name&&stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull;if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type;}};/** @suppress {duplicate } */var _glGetActiveAttrib=function _glGetActiveAttrib(program,index,bufSize,length,size,type,name){__glGetActiveAttribOrUniform('getActiveAttrib',program,index,bufSize,length,size,type,name);};var _emscripten_glGetActiveAttrib=_glGetActiveAttrib;/** @suppress {duplicate } */var _glGetActiveUniform=function _glGetActiveUniform(program,index,bufSize,length,size,type,name){__glGetActiveAttribOrUniform('getActiveUniform',program,index,bufSize,length,size,type,name);};var _emscripten_glGetActiveUniform=_glGetActiveUniform;/** @suppress {duplicate } */var _glGetActiveUniformBlockName=function _glGetActiveUniformBlockName(program,uniformBlockIndex,bufSize,length,uniformBlockName){program=GL.programs[program];var result=GLctx.getActiveUniformBlockName(program,uniformBlockIndex);if(!result)return;// If an error occurs, nothing will be written to uniformBlockName or length.
if(uniformBlockName&&bufSize>0){var numBytesWrittenExclNull=stringToUTF8(result,uniformBlockName,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull;}else{if(length)HEAP32[length>>2]=0;}};var _emscripten_glGetActiveUniformBlockName=_glGetActiveUniformBlockName;/** @suppress {duplicate } */var _glGetActiveUniformBlockiv=function _glGetActiveUniformBlockiv(program,uniformBlockIndex,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if params == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}program=GL.programs[program];if(pname==0x8A41/* GL_UNIFORM_BLOCK_NAME_LENGTH */){var name=GLctx.getActiveUniformBlockName(program,uniformBlockIndex);HEAP32[params>>2]=name.length+1;return;}var result=GLctx.getActiveUniformBlockParameter(program,uniformBlockIndex,pname);if(result===null)return;// If an error occurs, nothing should be written to params.
if(pname==0x8A43/*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/){for(var i=0;i<result.length;i++){HEAP32[params+i*4>>2]=result[i];}}else{HEAP32[params>>2]=result;}};var _emscripten_glGetActiveUniformBlockiv=_glGetActiveUniformBlockiv;/** @suppress {duplicate } */var _glGetActiveUniformsiv=function _glGetActiveUniformsiv(program,uniformCount,uniformIndices,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if params == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(uniformCount>0&&uniformIndices==0){GL.recordError(0x501/* GL_INVALID_VALUE */);return;}program=GL.programs[program];var ids=[];for(var i=0;i<uniformCount;i++){ids.push(HEAP32[uniformIndices+i*4>>2]);}var result=GLctx.getActiveUniforms(program,ids,pname);if(!result)return;// GL spec: If an error is generated, nothing is written out to params.
var len=result.length;for(var i=0;i<len;i++){HEAP32[params+i*4>>2]=result[i];}};var _emscripten_glGetActiveUniformsiv=_glGetActiveUniformsiv;/** @suppress {duplicate } */var _glGetAttachedShaders=function _glGetAttachedShaders(program,maxCount,count,shaders){var result=GLctx.getAttachedShaders(GL.programs[program]);var len=result.length;if(len>maxCount){len=maxCount;}HEAP32[count>>2]=len;for(var i=0;i<len;++i){var id=GL.shaders.indexOf(result[i]);HEAP32[shaders+i*4>>2]=id;}};var _emscripten_glGetAttachedShaders=_glGetAttachedShaders;/** @suppress {duplicate } */var _glGetAttribLocation=function _glGetAttribLocation(program,name){return GLctx.getAttribLocation(GL.programs[program],UTF8ToString(name));};var _emscripten_glGetAttribLocation=_glGetAttribLocation;var writeI53ToI64=function writeI53ToI64(ptr,num){HEAPU32[ptr>>2]=num;var lower=HEAPU32[ptr>>2];HEAPU32[ptr+4>>2]=(num-lower)/4294967296;};var emscriptenWebGLGet=function emscriptenWebGLGet(name_,p,type){// Guard against user passing a null pointer.
// Note that GLES2 spec does not say anything about how passing a null pointer should be treated.
// Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but
// better to report an error instead of doing anything random.
if(!p){GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var ret=undefined;switch(name_){// Handle a few trivial GLES values
case 0x8DFA:// GL_SHADER_COMPILER
ret=1;break;case 0x8DF8:// GL_SHADER_BINARY_FORMATS
if(type!=0&&type!=1){GL.recordError(0x500);// GL_INVALID_ENUM
}return;// Do not write anything to the out pointer, since no binary formats are supported.
case 0x87FE:// GL_NUM_PROGRAM_BINARY_FORMATS
case 0x8DF9:// GL_NUM_SHADER_BINARY_FORMATS
ret=0;break;case 0x86A2:// GL_NUM_COMPRESSED_TEXTURE_FORMATS
// WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),
// so implement it ourselves to allow C++ GLES2 code get the length.
var formats=GLctx.getParameter(0x86A3/*GL_COMPRESSED_TEXTURE_FORMATS*/);ret=formats?formats.length:0;break;case 0x821D:// GL_NUM_EXTENSIONS
if(GL.currentContext.version<2){GL.recordError(0x502/* GL_INVALID_OPERATION */);// Calling GLES3/WebGL2 function with a GLES2/WebGL1 context
return;}// .getSupportedExtensions() can return null if context is lost, so coerce to empty array.
var exts=GLctx.getSupportedExtensions()||[];ret=2*exts.length;// each extension is duplicated, first in unprefixed WebGL form, and then a second time with "GL_" prefix.
break;case 0x821B:// GL_MAJOR_VERSION
case 0x821C:// GL_MINOR_VERSION
if(GL.currentContext.version<2){GL.recordError(0x500);// GL_INVALID_ENUM
return;}ret=name_==0x821B?3:0;// return version 3.0
break;}if(ret===undefined){var result=GLctx.getParameter(name_);switch(_typeof(result)){case"number":ret=result;break;case"boolean":ret=result?1:0;break;case"string":GL.recordError(0x500);// GL_INVALID_ENUM
return;case"object":if(result===null){// null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise
// can mean an invalid name_, which we need to report as an error
switch(name_){case 0x8894:// ARRAY_BUFFER_BINDING
case 0x8B8D:// CURRENT_PROGRAM
case 0x8895:// ELEMENT_ARRAY_BUFFER_BINDING
case 0x8CA6:// FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING
case 0x8CA7:// RENDERBUFFER_BINDING
case 0x8069:// TEXTURE_BINDING_2D
case 0x85B5:// WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES
case 0x8F36:// COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER
case 0x8F37:// COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER
case 0x88ED:// PIXEL_PACK_BUFFER_BINDING
case 0x88EF:// PIXEL_UNPACK_BUFFER_BINDING
case 0x8CAA:// READ_FRAMEBUFFER_BINDING
case 0x8919:// SAMPLER_BINDING
case 0x8C1D:// TEXTURE_BINDING_2D_ARRAY
case 0x806A:// TEXTURE_BINDING_3D
case 0x8E25:// TRANSFORM_FEEDBACK_BINDING
case 0x8C8F:// TRANSFORM_FEEDBACK_BUFFER_BINDING
case 0x8A28:// UNIFORM_BUFFER_BINDING
case 0x8514:{// TEXTURE_BINDING_CUBE_MAP
ret=0;break;}default:{GL.recordError(0x500);// GL_INVALID_ENUM
return;}}}else if(result instanceof Float32Array||result instanceof Uint32Array||result instanceof Int32Array||result instanceof Array){for(var i=0;i<result.length;++i){switch(type){case 0:HEAP32[p+i*4>>2]=result[i];break;case 2:HEAPF32[p+i*4>>2]=result[i];break;case 4:HEAP8[p+i>>0]=result[i]?1:0;break;}}return;}else{try{ret=result.name|0;}catch(e){GL.recordError(0x500);// GL_INVALID_ENUM
err('GL_INVALID_ENUM in glGet'+type+'v: Unknown object returned from WebGL getParameter('+name_+')! (error: '+e+')');return;}}break;default:GL.recordError(0x500);// GL_INVALID_ENUM
err('GL_INVALID_ENUM in glGet'+type+'v: Native code calling glGet'+type+'v('+name_+') and it returns '+result+' of type '+_typeof(result)+'!');return;}}switch(type){case 1:writeI53ToI64(p,ret);break;case 0:HEAP32[p>>2]=ret;break;case 2:HEAPF32[p>>2]=ret;break;case 4:HEAP8[p>>0]=ret?1:0;break;}};/** @suppress {duplicate } */var _glGetBooleanv=function _glGetBooleanv(name_,p){emscriptenWebGLGet(name_,p,4);};var _emscripten_glGetBooleanv=_glGetBooleanv;/** @suppress {duplicate } */var _glGetBufferParameteri64v=function _glGetBufferParameteri64v(target,value,data){if(!data){// GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense
// if data == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}writeI53ToI64(data,GLctx.getBufferParameter(target,value));};var _emscripten_glGetBufferParameteri64v=_glGetBufferParameteri64v;/** @suppress {duplicate } */var _glGetBufferParameteriv=function _glGetBufferParameteriv(target,value,data){if(!data){// GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense
// if data == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAP32[data>>2]=GLctx.getBufferParameter(target,value);};var _emscripten_glGetBufferParameteriv=_glGetBufferParameteriv;/** @suppress {duplicate } */var _glGetError=function _glGetError(){var error=GLctx.getError()||GL.lastError;GL.lastError=0/*GL_NO_ERROR*/;return error;};var _emscripten_glGetError=_glGetError;/** @suppress {duplicate } */var _glGetFloatv=function _glGetFloatv(name_,p){emscriptenWebGLGet(name_,p,2);};var _emscripten_glGetFloatv=_glGetFloatv;/** @suppress {duplicate } */var _glGetFragDataLocation=function _glGetFragDataLocation(program,name){return GLctx.getFragDataLocation(GL.programs[program],UTF8ToString(name));};var _emscripten_glGetFragDataLocation=_glGetFragDataLocation;/** @suppress {duplicate } */var _glGetFramebufferAttachmentParameteriv=function _glGetFramebufferAttachmentParameteriv(target,attachment,pname,params){var result=GLctx.getFramebufferAttachmentParameter(target,attachment,pname);if(result instanceof WebGLRenderbuffer||result instanceof WebGLTexture){result=result.name|0;}HEAP32[params>>2]=result;};var _emscripten_glGetFramebufferAttachmentParameteriv=_glGetFramebufferAttachmentParameteriv;var emscriptenWebGLGetIndexed=function emscriptenWebGLGetIndexed(target,index,data,type){if(!data){// GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense
// if data == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var result=GLctx.getIndexedParameter(target,index);var ret;switch(_typeof(result)){case'boolean':ret=result?1:0;break;case'number':ret=result;break;case'object':if(result===null){switch(target){case 0x8C8F:// TRANSFORM_FEEDBACK_BUFFER_BINDING
case 0x8A28:// UNIFORM_BUFFER_BINDING
ret=0;break;default:{GL.recordError(0x500);// GL_INVALID_ENUM
return;}}}else if(result instanceof WebGLBuffer){ret=result.name|0;}else{GL.recordError(0x500);// GL_INVALID_ENUM
return;}break;default:GL.recordError(0x500);// GL_INVALID_ENUM
return;}switch(type){case 1:writeI53ToI64(data,ret);break;case 0:HEAP32[data>>2]=ret;break;case 2:HEAPF32[data>>2]=ret;break;case 4:HEAP8[data>>0]=ret?1:0;break;default:throw'internal emscriptenWebGLGetIndexed() error, bad type: '+type;}};/** @suppress {duplicate } */var _glGetInteger64i_v=function _glGetInteger64i_v(target,index,data){return emscriptenWebGLGetIndexed(target,index,data,1);};var _emscripten_glGetInteger64i_v=_glGetInteger64i_v;/** @suppress {duplicate } */var _glGetInteger64v=function _glGetInteger64v(name_,p){emscriptenWebGLGet(name_,p,1);};var _emscripten_glGetInteger64v=_glGetInteger64v;/** @suppress {duplicate } */var _glGetIntegeri_v=function _glGetIntegeri_v(target,index,data){return emscriptenWebGLGetIndexed(target,index,data,0);};var _emscripten_glGetIntegeri_v=_glGetIntegeri_v;/** @suppress {duplicate } */var _glGetIntegerv=function _glGetIntegerv(name_,p){emscriptenWebGLGet(name_,p,0);};var _emscripten_glGetIntegerv=_glGetIntegerv;/** @suppress {duplicate } */var _glGetInternalformativ=function _glGetInternalformativ(target,internalformat,pname,bufSize,params){if(bufSize<0){GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(!params){// GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense
// if values == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var ret=GLctx.getInternalformatParameter(target,internalformat,pname);if(ret===null)return;for(var i=0;i<ret.length&&i<bufSize;++i){HEAP32[params+i*4>>2]=ret[i];}};var _emscripten_glGetInternalformativ=_glGetInternalformativ;/** @suppress {duplicate } */var _glGetProgramBinary=function _glGetProgramBinary(program,bufSize,length,binaryFormat,binary){GL.recordError(0x502/*GL_INVALID_OPERATION*/);};var _emscripten_glGetProgramBinary=_glGetProgramBinary;/** @suppress {duplicate } */var _glGetProgramInfoLog=function _glGetProgramInfoLog(program,maxLength,length,infoLog){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log='(unknown error)';var numBytesWrittenExclNull=maxLength>0&&infoLog?stringToUTF8(log,infoLog,maxLength):0;if(length)HEAP32[length>>2]=numBytesWrittenExclNull;};var _emscripten_glGetProgramInfoLog=_glGetProgramInfoLog;/** @suppress {duplicate } */var _glGetProgramiv=function _glGetProgramiv(program,pname,p){if(!p){// GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(program>=GL.counter){GL.recordError(0x501/* GL_INVALID_VALUE */);return;}program=GL.programs[program];if(pname==0x8B84){// GL_INFO_LOG_LENGTH
var log=GLctx.getProgramInfoLog(program);if(log===null)log='(unknown error)';HEAP32[p>>2]=log.length+1;}else if(pname==0x8B87/* GL_ACTIVE_UNIFORM_MAX_LENGTH */){if(!program.maxUniformLength){for(var i=0;i<GLctx.getProgramParameter(program,0x8B86/*GL_ACTIVE_UNIFORMS*/);++i){program.maxUniformLength=Math.max(program.maxUniformLength,GLctx.getActiveUniform(program,i).name.length+1);}}HEAP32[p>>2]=program.maxUniformLength;}else if(pname==0x8B8A/* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */){if(!program.maxAttributeLength){for(var i=0;i<GLctx.getProgramParameter(program,0x8B89/*GL_ACTIVE_ATTRIBUTES*/);++i){program.maxAttributeLength=Math.max(program.maxAttributeLength,GLctx.getActiveAttrib(program,i).name.length+1);}}HEAP32[p>>2]=program.maxAttributeLength;}else if(pname==0x8A35/* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */){if(!program.maxUniformBlockNameLength){for(var i=0;i<GLctx.getProgramParameter(program,0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/);++i){program.maxUniformBlockNameLength=Math.max(program.maxUniformBlockNameLength,GLctx.getActiveUniformBlockName(program,i).length+1);}}HEAP32[p>>2]=program.maxUniformBlockNameLength;}else{HEAP32[p>>2]=GLctx.getProgramParameter(program,pname);}};var _emscripten_glGetProgramiv=_glGetProgramiv;/** @suppress {duplicate } */var _glGetQueryObjecti64vEXT=function _glGetQueryObjecti64vEXT(id,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var query=GL.queries[id];var param;if(GL.currentContext.version<2){param=GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query,pname);}else{param=GLctx.getQueryParameter(query,pname);}var ret;if(typeof param=='boolean'){ret=param?1:0;}else{ret=param;}writeI53ToI64(params,ret);};var _emscripten_glGetQueryObjecti64vEXT=_glGetQueryObjecti64vEXT;/** @suppress {duplicate } */var _glGetQueryObjectivEXT=function _glGetQueryObjectivEXT(id,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var query=GL.queries[id];var param=GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query,pname);var ret;if(typeof param=='boolean'){ret=param?1:0;}else{ret=param;}HEAP32[params>>2]=ret;};var _emscripten_glGetQueryObjectivEXT=_glGetQueryObjectivEXT;/** @suppress {duplicate } */var _glGetQueryObjectui64vEXT=_glGetQueryObjecti64vEXT;var _emscripten_glGetQueryObjectui64vEXT=_glGetQueryObjectui64vEXT;/** @suppress {duplicate } */var _glGetQueryObjectuiv=function _glGetQueryObjectuiv(id,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var query=GL.queries[id];var param=GLctx.getQueryParameter(query,pname);var ret;if(typeof param=='boolean'){ret=param?1:0;}else{ret=param;}HEAP32[params>>2]=ret;};var _emscripten_glGetQueryObjectuiv=_glGetQueryObjectuiv;/** @suppress {duplicate } */var _glGetQueryObjectuivEXT=_glGetQueryObjectivEXT;var _emscripten_glGetQueryObjectuivEXT=_glGetQueryObjectuivEXT;/** @suppress {duplicate } */var _glGetQueryiv=function _glGetQueryiv(target,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAP32[params>>2]=GLctx.getQuery(target,pname);};var _emscripten_glGetQueryiv=_glGetQueryiv;/** @suppress {duplicate } */var _glGetQueryivEXT=function _glGetQueryivEXT(target,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAP32[params>>2]=GLctx.disjointTimerQueryExt['getQueryEXT'](target,pname);};var _emscripten_glGetQueryivEXT=_glGetQueryivEXT;/** @suppress {duplicate } */var _glGetRenderbufferParameteriv=function _glGetRenderbufferParameteriv(target,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if params == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAP32[params>>2]=GLctx.getRenderbufferParameter(target,pname);};var _emscripten_glGetRenderbufferParameteriv=_glGetRenderbufferParameteriv;/** @suppress {duplicate } */var _glGetSamplerParameterfv=function _glGetSamplerParameterfv(sampler,pname,params){if(!params){// GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAPF32[params>>2]=GLctx.getSamplerParameter(GL.samplers[sampler],pname);};var _emscripten_glGetSamplerParameterfv=_glGetSamplerParameterfv;/** @suppress {duplicate } */var _glGetSamplerParameteriv=function _glGetSamplerParameteriv(sampler,pname,params){if(!params){// GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAP32[params>>2]=GLctx.getSamplerParameter(GL.samplers[sampler],pname);};var _emscripten_glGetSamplerParameteriv=_glGetSamplerParameteriv;/** @suppress {duplicate } */var _glGetShaderInfoLog=function _glGetShaderInfoLog(shader,maxLength,length,infoLog){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log='(unknown error)';var numBytesWrittenExclNull=maxLength>0&&infoLog?stringToUTF8(log,infoLog,maxLength):0;if(length)HEAP32[length>>2]=numBytesWrittenExclNull;};var _emscripten_glGetShaderInfoLog=_glGetShaderInfoLog;/** @suppress {duplicate } */var _glGetShaderPrecisionFormat=function _glGetShaderPrecisionFormat(shaderType,precisionType,range,precision){var result=GLctx.getShaderPrecisionFormat(shaderType,precisionType);HEAP32[range>>2]=result.rangeMin;HEAP32[range+4>>2]=result.rangeMax;HEAP32[precision>>2]=result.precision;};var _emscripten_glGetShaderPrecisionFormat=_glGetShaderPrecisionFormat;/** @suppress {duplicate } */var _glGetShaderSource=function _glGetShaderSource(shader,bufSize,length,source){var result=GLctx.getShaderSource(GL.shaders[shader]);if(!result)return;// If an error occurs, nothing will be written to length or source.
var numBytesWrittenExclNull=bufSize>0&&source?stringToUTF8(result,source,bufSize):0;if(length)HEAP32[length>>2]=numBytesWrittenExclNull;};var _emscripten_glGetShaderSource=_glGetShaderSource;/** @suppress {duplicate } */var _glGetShaderiv=function _glGetShaderiv(shader,pname,p){if(!p){// GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(pname==0x8B84){// GL_INFO_LOG_LENGTH
var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log='(unknown error)';// The GLES2 specification says that if the shader has an empty info log,
// a value of 0 is returned. Otherwise the log has a null char appended.
// (An empty string is falsey, so we can just check that instead of
// looking at log.length.)
var logLength=log?log.length+1:0;HEAP32[p>>2]=logLength;}else if(pname==0x8B88){// GL_SHADER_SOURCE_LENGTH
var source=GLctx.getShaderSource(GL.shaders[shader]);// source may be a null, or the empty string, both of which are falsey
// values that we report a 0 length for.
var sourceLength=source?source.length+1:0;HEAP32[p>>2]=sourceLength;}else{HEAP32[p>>2]=GLctx.getShaderParameter(GL.shaders[shader],pname);}};var _emscripten_glGetShaderiv=_glGetShaderiv;/** @suppress {duplicate } */var _glGetString=function _glGetString(name_){var ret=GL.stringCache[name_];if(!ret){switch(name_){case 0x1F03/* GL_EXTENSIONS */:var exts=GLctx.getSupportedExtensions()||[];// .getSupportedExtensions() can return null if context is lost, so coerce to empty array.
exts=exts.concat(exts.map(function(e){return"GL_"+e;}));ret=stringToNewUTF8(exts.join(' '));break;case 0x1F00/* GL_VENDOR */:case 0x1F01/* GL_RENDERER */:case 0x9245/* UNMASKED_VENDOR_WEBGL */:case 0x9246/* UNMASKED_RENDERER_WEBGL */:var s=GLctx.getParameter(name_);if(!s){GL.recordError(0x500/*GL_INVALID_ENUM*/);}ret=s&&stringToNewUTF8(s);break;case 0x1F02/* GL_VERSION */:var glVersion=GLctx.getParameter(0x1F02/*GL_VERSION*/);// return GLES version string corresponding to the version of the WebGL context
if(GL.currentContext.version>=2)glVersion='OpenGL ES 3.0 ('+glVersion+')';else{glVersion='OpenGL ES 2.0 ('+glVersion+')';}ret=stringToNewUTF8(glVersion);break;case 0x8B8C/* GL_SHADING_LANGUAGE_VERSION */:var glslVersion=GLctx.getParameter(0x8B8C/*GL_SHADING_LANGUAGE_VERSION*/);// extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'
var ver_re=/^WebGL GLSL ES ([0-9]\.[0-9][0-9]?)(?:$| .*)/;var ver_num=glslVersion.match(ver_re);if(ver_num!==null){if(ver_num[1].length==3)ver_num[1]=ver_num[1]+'0';// ensure minor version has 2 digits
glslVersion='OpenGL ES GLSL ES '+ver_num[1]+' ('+glslVersion+')';}ret=stringToNewUTF8(glslVersion);break;default:GL.recordError(0x500/*GL_INVALID_ENUM*/);// fall through
}GL.stringCache[name_]=ret;}return ret;};var _emscripten_glGetString=_glGetString;/** @suppress {duplicate } */var _glGetStringi=function _glGetStringi(name,index){if(GL.currentContext.version<2){GL.recordError(0x502/* GL_INVALID_OPERATION */);// Calling GLES3/WebGL2 function with a GLES2/WebGL1 context
return 0;}var stringiCache=GL.stringiCache[name];if(stringiCache){if(index<0||index>=stringiCache.length){GL.recordError(0x501/*GL_INVALID_VALUE*/);return 0;}return stringiCache[index];}switch(name){case 0x1F03/* GL_EXTENSIONS */:var exts=GLctx.getSupportedExtensions()||[];// .getSupportedExtensions() can return null if context is lost, so coerce to empty array.
exts=exts.concat(exts.map(function(e){return"GL_"+e;}));exts=exts.map(function(e){return stringToNewUTF8(e);});stringiCache=GL.stringiCache[name]=exts;if(index<0||index>=stringiCache.length){GL.recordError(0x501/*GL_INVALID_VALUE*/);return 0;}return stringiCache[index];default:GL.recordError(0x500/*GL_INVALID_ENUM*/);return 0;}};var _emscripten_glGetStringi=_glGetStringi;/** @suppress {duplicate } */var _glGetSynciv=function _glGetSynciv(sync,pname,bufSize,length,values){if(bufSize<0){// GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,
// so raise GL_INVALID_VALUE here as well.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(!values){// GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense
// if values == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}var ret=GLctx.getSyncParameter(GL.syncs[sync],pname);if(ret!==null){HEAP32[values>>2]=ret;if(length)HEAP32[length>>2]=1;// Report a single value outputted.
}};var _emscripten_glGetSynciv=_glGetSynciv;/** @suppress {duplicate } */var _glGetTexParameterfv=function _glGetTexParameterfv(target,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAPF32[params>>2]=GLctx.getTexParameter(target,pname);};var _emscripten_glGetTexParameterfv=_glGetTexParameterfv;/** @suppress {duplicate } */var _glGetTexParameteriv=function _glGetTexParameteriv(target,pname,params){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if p == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}HEAP32[params>>2]=GLctx.getTexParameter(target,pname);};var _emscripten_glGetTexParameteriv=_glGetTexParameteriv;/** @suppress {duplicate } */var _glGetTransformFeedbackVarying=function _glGetTransformFeedbackVarying(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx.getTransformFeedbackVarying(program,index);if(!info)return;// If an error occurred, the return parameters length, size, type and name will be unmodified.
if(name&&bufSize>0){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull;}else{if(length)HEAP32[length>>2]=0;}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type;};var _emscripten_glGetTransformFeedbackVarying=_glGetTransformFeedbackVarying;/** @suppress {duplicate } */var _glGetUniformBlockIndex=function _glGetUniformBlockIndex(program,uniformBlockName){return GLctx.getUniformBlockIndex(GL.programs[program],UTF8ToString(uniformBlockName));};var _emscripten_glGetUniformBlockIndex=_glGetUniformBlockIndex;/** @suppress {duplicate } */var _glGetUniformIndices=function _glGetUniformIndices(program,uniformCount,uniformNames,uniformIndices){if(!uniformIndices){// GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense
// if uniformIndices == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(uniformCount>0&&(uniformNames==0||uniformIndices==0)){GL.recordError(0x501/* GL_INVALID_VALUE */);return;}program=GL.programs[program];var names=[];for(var i=0;i<uniformCount;i++)names.push(UTF8ToString(HEAP32[uniformNames+i*4>>2]));var result=GLctx.getUniformIndices(program,names);if(!result)return;// GL spec: If an error is generated, nothing is written out to uniformIndices.
var len=result.length;for(var i=0;i<len;i++){HEAP32[uniformIndices+i*4>>2]=result[i];}};var _emscripten_glGetUniformIndices=_glGetUniformIndices;/** @noinline */var webglGetLeftBracePos=function webglGetLeftBracePos(name){return name.slice(-1)==']'&&name.lastIndexOf('[');};var webglPrepareUniformLocationsBeforeFirstUse=function webglPrepareUniformLocationsBeforeFirstUse(program){var uniformLocsById=program.uniformLocsById,// Maps GLuint -> WebGLUniformLocation
uniformSizeAndIdsByName=program.uniformSizeAndIdsByName,// Maps name -> [uniform array length, GLuint]
i,j;// On the first time invocation of glGetUniformLocation on this shader program:
// initialize cache data structures and discover which uniforms are arrays.
if(!uniformLocsById){// maps GLint integer locations to WebGLUniformLocations
program.uniformLocsById=uniformLocsById={};// maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations
program.uniformArrayNamesById={};for(i=0;i<GLctx.getProgramParameter(program,0x8B86/*GL_ACTIVE_UNIFORMS*/);++i){var u=GLctx.getActiveUniform(program,i);var nm=u.name;var sz=u.size;var lb=webglGetLeftBracePos(nm);var arrayName=lb>0?nm.slice(0,lb):nm;// Assign a new location.
var id=program.uniformIdCounter;program.uniformIdCounter+=sz;// Eagerly get the location of the uniformArray[0] base element.
// The remaining indices >0 will be left for lazy evaluation to
// improve performance. Those may never be needed to fetch, if the
// application fills arrays always in full starting from the first
// element of the array.
uniformSizeAndIdsByName[arrayName]=[sz,id];// Store placeholder integers in place that highlight that these
// >0 index locations are array indices pending population.
for(j=0;j<sz;++j){uniformLocsById[id]=j;program.uniformArrayNamesById[id++]=arrayName;}}}};/** @suppress {duplicate } */var _glGetUniformLocation=function _glGetUniformLocation(program,name){name=UTF8ToString(name);if(program=GL.programs[program]){webglPrepareUniformLocationsBeforeFirstUse(program);var uniformLocsById=program.uniformLocsById;// Maps GLuint -> WebGLUniformLocation
var arrayIndex=0;var uniformBaseName=name;// Invariant: when populating integer IDs for uniform locations, we must maintain the precondition that
// arrays reside in contiguous addresses, i.e. for a 'vec4 colors[10];', colors[4] must be at location colors[0]+4.
// However, user might call glGetUniformLocation(program, "colors") for an array, so we cannot discover based on the user
// input arguments whether the uniform we are dealing with is an array. The only way to discover which uniforms are arrays
// is to enumerate over all the active uniforms in the program.
var leftBrace=webglGetLeftBracePos(name);// If user passed an array accessor "[index]", parse the array index off the accessor.
if(leftBrace>0){arrayIndex=jstoi_q(name.slice(leftBrace+1))>>>0;// "index]", coerce parseInt(']') with >>>0 to treat "foo[]" as "foo[0]" and foo[-1] as unsigned out-of-bounds.
uniformBaseName=name.slice(0,leftBrace);}// Have we cached the location of this uniform before?
var sizeAndId=program.uniformSizeAndIdsByName[uniformBaseName];// A pair [array length, GLint of the uniform location]
// If an uniform with this name exists, and if its index is within the array limits (if it's even an array),
// query the WebGLlocation, or return an existing cached location.
if(sizeAndId&&arrayIndex<sizeAndId[0]){arrayIndex+=sizeAndId[1];// Add the base location of the uniform to the array index offset.
if(uniformLocsById[arrayIndex]=uniformLocsById[arrayIndex]||GLctx.getUniformLocation(program,name)){return arrayIndex;}}}else{// N.b. we are currently unable to distinguish between GL program IDs that never existed vs GL program IDs that have been deleted,
// so report GL_INVALID_VALUE in both cases.
GL.recordError(0x501/* GL_INVALID_VALUE */);}return-1;};var _emscripten_glGetUniformLocation=_glGetUniformLocation;var webglGetUniformLocation=function webglGetUniformLocation(location){var p=GLctx.currentProgram;if(p){var webglLoc=p.uniformLocsById[location];// p.uniformLocsById[location] stores either an integer, or a WebGLUniformLocation.
// If an integer, we have not yet bound the location, so do it now. The integer value specifies the array index
// we should bind to.
if(typeof webglLoc=='number'){p.uniformLocsById[location]=webglLoc=GLctx.getUniformLocation(p,p.uniformArrayNamesById[location]+(webglLoc>0?'['+webglLoc+']':''));}// Else an already cached WebGLUniformLocation, return it.
return webglLoc;}else{GL.recordError(0x502/*GL_INVALID_OPERATION*/);}};/** @suppress{checkTypes} */var emscriptenWebGLGetUniform=function emscriptenWebGLGetUniform(program,location,params,type){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if params == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}program=GL.programs[program];webglPrepareUniformLocationsBeforeFirstUse(program);var data=GLctx.getUniform(program,webglGetUniformLocation(location));if(typeof data=='number'||typeof data=='boolean'){switch(type){case 0:HEAP32[params>>2]=data;break;case 2:HEAPF32[params>>2]=data;break;}}else{for(var i=0;i<data.length;i++){switch(type){case 0:HEAP32[params+i*4>>2]=data[i];break;case 2:HEAPF32[params+i*4>>2]=data[i];break;}}}};/** @suppress {duplicate } */var _glGetUniformfv=function _glGetUniformfv(program,location,params){emscriptenWebGLGetUniform(program,location,params,2);};var _emscripten_glGetUniformfv=_glGetUniformfv;/** @suppress {duplicate } */var _glGetUniformiv=function _glGetUniformiv(program,location,params){emscriptenWebGLGetUniform(program,location,params,0);};var _emscripten_glGetUniformiv=_glGetUniformiv;/** @suppress {duplicate } */var _glGetUniformuiv=function _glGetUniformuiv(program,location,params){return emscriptenWebGLGetUniform(program,location,params,0);};var _emscripten_glGetUniformuiv=_glGetUniformuiv;/** @suppress{checkTypes} */var emscriptenWebGLGetVertexAttrib=function emscriptenWebGLGetVertexAttrib(index,pname,params,type){if(!params){// GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense
// if params == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(GL.currentContext.clientBuffers[index].enabled){err("glGetVertexAttrib*v on client-side array: not supported, bad data returned");}var data=GLctx.getVertexAttrib(index,pname);if(pname==0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/){HEAP32[params>>2]=data&&data["name"];}else if(typeof data=='number'||typeof data=='boolean'){switch(type){case 0:HEAP32[params>>2]=data;break;case 2:HEAPF32[params>>2]=data;break;case 5:HEAP32[params>>2]=Math.fround(data);break;}}else{for(var i=0;i<data.length;i++){switch(type){case 0:HEAP32[params+i*4>>2]=data[i];break;case 2:HEAPF32[params+i*4>>2]=data[i];break;case 5:HEAP32[params+i*4>>2]=Math.fround(data[i]);break;}}}};/** @suppress {duplicate } */var _glGetVertexAttribIiv=function _glGetVertexAttribIiv(index,pname,params){// N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),
// otherwise the results are undefined. (GLES3 spec 6.1.12)
emscriptenWebGLGetVertexAttrib(index,pname,params,0);};var _emscripten_glGetVertexAttribIiv=_glGetVertexAttribIiv;/** @suppress {duplicate } */var _glGetVertexAttribIuiv=_glGetVertexAttribIiv;var _emscripten_glGetVertexAttribIuiv=_glGetVertexAttribIuiv;/** @suppress {duplicate } */var _glGetVertexAttribPointerv=function _glGetVertexAttribPointerv(index,pname,pointer){if(!pointer){// GLES2 specification does not specify how to behave if pointer is a null pointer. Since calling this function does not make sense
// if pointer == null, issue a GL error to notify user about it.
GL.recordError(0x501/* GL_INVALID_VALUE */);return;}if(GL.currentContext.clientBuffers[index].enabled){err("glGetVertexAttribPointer on client-side array: not supported, bad data returned");}HEAP32[pointer>>2]=GLctx.getVertexAttribOffset(index,pname);};var _emscripten_glGetVertexAttribPointerv=_glGetVertexAttribPointerv;/** @suppress {duplicate } */var _glGetVertexAttribfv=function _glGetVertexAttribfv(index,pname,params){// N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),
// otherwise the results are undefined. (GLES3 spec 6.1.12)
emscriptenWebGLGetVertexAttrib(index,pname,params,2);};var _emscripten_glGetVertexAttribfv=_glGetVertexAttribfv;/** @suppress {duplicate } */var _glGetVertexAttribiv=function _glGetVertexAttribiv(index,pname,params){// N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),
// otherwise the results are undefined. (GLES3 spec 6.1.12)
emscriptenWebGLGetVertexAttrib(index,pname,params,5);};var _emscripten_glGetVertexAttribiv=_glGetVertexAttribiv;/** @suppress {duplicate } */function _glHint(x0,x1){GLctx.hint(x0,x1);}var _emscripten_glHint=_glHint;/** @suppress {duplicate } */var _glInvalidateFramebuffer=function _glInvalidateFramebuffer(target,numAttachments,attachments){var list=tempFixedLengthArray[numAttachments];for(var i=0;i<numAttachments;i++){list[i]=HEAP32[attachments+i*4>>2];}GLctx.invalidateFramebuffer(target,list);};var _emscripten_glInvalidateFramebuffer=_glInvalidateFramebuffer;/** @suppress {duplicate } */var _glInvalidateSubFramebuffer=function _glInvalidateSubFramebuffer(target,numAttachments,attachments,x,y,width,height){var list=tempFixedLengthArray[numAttachments];for(var i=0;i<numAttachments;i++){list[i]=HEAP32[attachments+i*4>>2];}GLctx.invalidateSubFramebuffer(target,list,x,y,width,height);};var _emscripten_glInvalidateSubFramebuffer=_glInvalidateSubFramebuffer;/** @suppress {duplicate } */var _glIsBuffer=function _glIsBuffer(buffer){var b=GL.buffers[buffer];if(!b)return 0;return GLctx.isBuffer(b);};var _emscripten_glIsBuffer=_glIsBuffer;/** @suppress {duplicate } */function _glIsEnabled(x0){return GLctx.isEnabled(x0);}var _emscripten_glIsEnabled=_glIsEnabled;/** @suppress {duplicate } */var _glIsFramebuffer=function _glIsFramebuffer(framebuffer){var fb=GL.framebuffers[framebuffer];if(!fb)return 0;return GLctx.isFramebuffer(fb);};var _emscripten_glIsFramebuffer=_glIsFramebuffer;/** @suppress {duplicate } */var _glIsProgram=function _glIsProgram(program){program=GL.programs[program];if(!program)return 0;return GLctx.isProgram(program);};var _emscripten_glIsProgram=_glIsProgram;/** @suppress {duplicate } */var _glIsQuery=function _glIsQuery(id){var query=GL.queries[id];if(!query)return 0;return GLctx.isQuery(query);};var _emscripten_glIsQuery=_glIsQuery;/** @suppress {duplicate } */var _glIsQueryEXT=function _glIsQueryEXT(id){var query=GL.queries[id];if(!query)return 0;return GLctx.disjointTimerQueryExt['isQueryEXT'](query);};var _emscripten_glIsQueryEXT=_glIsQueryEXT;/** @suppress {duplicate } */var _glIsRenderbuffer=function _glIsRenderbuffer(renderbuffer){var rb=GL.renderbuffers[renderbuffer];if(!rb)return 0;return GLctx.isRenderbuffer(rb);};var _emscripten_glIsRenderbuffer=_glIsRenderbuffer;/** @suppress {duplicate } */var _glIsSampler=function _glIsSampler(id){var sampler=GL.samplers[id];if(!sampler)return 0;return GLctx.isSampler(sampler);};var _emscripten_glIsSampler=_glIsSampler;/** @suppress {duplicate } */var _glIsShader=function _glIsShader(shader){var s=GL.shaders[shader];if(!s)return 0;return GLctx.isShader(s);};var _emscripten_glIsShader=_glIsShader;/** @suppress {duplicate } */var _glIsSync=function _glIsSync(sync){return GLctx.isSync(GL.syncs[sync]);};var _emscripten_glIsSync=_glIsSync;/** @suppress {duplicate } */var _glIsTexture=function _glIsTexture(id){var texture=GL.textures[id];if(!texture)return 0;return GLctx.isTexture(texture);};var _emscripten_glIsTexture=_glIsTexture;/** @suppress {duplicate } */var _glIsTransformFeedback=function _glIsTransformFeedback(id){return GLctx.isTransformFeedback(GL.transformFeedbacks[id]);};var _emscripten_glIsTransformFeedback=_glIsTransformFeedback;/** @suppress {duplicate } */var _glIsVertexArray=function _glIsVertexArray(array){var vao=GL.vaos[array];if(!vao)return 0;return GLctx.isVertexArray(vao);};var _emscripten_glIsVertexArray=_glIsVertexArray;/** @suppress {duplicate } */var _glIsVertexArrayOES=_glIsVertexArray;var _emscripten_glIsVertexArrayOES=_glIsVertexArrayOES;/** @suppress {duplicate } */function _glLineWidth(x0){GLctx.lineWidth(x0);}var _emscripten_glLineWidth=_glLineWidth;/** @suppress {duplicate } */var _glLinkProgram=function _glLinkProgram(program){program=GL.programs[program];GLctx.linkProgram(program);// Invalidate earlier computed uniform->ID mappings, those have now become stale
program.uniformLocsById=0;// Mark as null-like so that glGetUniformLocation() knows to populate this again.
program.uniformSizeAndIdsByName={};};var _emscripten_glLinkProgram=_glLinkProgram;/** @suppress {duplicate } */function _glPauseTransformFeedback(){GLctx.pauseTransformFeedback();}var _emscripten_glPauseTransformFeedback=_glPauseTransformFeedback;/** @suppress {duplicate } */var _glPixelStorei=function _glPixelStorei(pname,param){if(pname==0xCF5/* GL_UNPACK_ALIGNMENT */){GL.unpackAlignment=param;}GLctx.pixelStorei(pname,param);};var _emscripten_glPixelStorei=_glPixelStorei;/** @suppress {duplicate } */function _glPolygonOffset(x0,x1){GLctx.polygonOffset(x0,x1);}var _emscripten_glPolygonOffset=_glPolygonOffset;/** @suppress {duplicate } */var _glProgramBinary=function _glProgramBinary(program,binaryFormat,binary,length){GL.recordError(0x500/*GL_INVALID_ENUM*/);};var _emscripten_glProgramBinary=_glProgramBinary;/** @suppress {duplicate } */var _glProgramParameteri=function _glProgramParameteri(program,pname,value){GL.recordError(0x500/*GL_INVALID_ENUM*/);};var _emscripten_glProgramParameteri=_glProgramParameteri;/** @suppress {duplicate } */var _glQueryCounterEXT=function _glQueryCounterEXT(id,target){GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id],target);};var _emscripten_glQueryCounterEXT=_glQueryCounterEXT;/** @suppress {duplicate } */function _glReadBuffer(x0){GLctx.readBuffer(x0);}var _emscripten_glReadBuffer=_glReadBuffer;var computeUnpackAlignedImageSize=function computeUnpackAlignedImageSize(width,height,sizePerPixel,alignment){function roundedToNextMultipleOf(x,y){return x+y-1&-y;}var plainRowSize=width*sizePerPixel;var alignedRowSize=roundedToNextMultipleOf(plainRowSize,alignment);return height*alignedRowSize;};var colorChannelsInGlTextureFormat=function colorChannelsInGlTextureFormat(format){// Micro-optimizations for size: map format to size by subtracting smallest enum value (0x1902) from all values first.
// Also omit the most common size value (1) from the list, which is assumed by formats not on the list.
var colorChannels={// 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,
// 0x1906 /* GL_ALPHA */ - 0x1902: 1,
5:3,6:4,// 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,
8:2,29502:3,29504:4,// 0x1903 /* GL_RED */ - 0x1902: 1,
26917:2,26918:2,// 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,
29846:3,29847:4};return colorChannels[format-0x1902]||1;};var heapObjectForWebGLType=function heapObjectForWebGLType(type){// Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare
// smaller values for the heap, for shorter generated code size.
// Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.
// (since most types are HEAPU16)
type-=0x1400;if(type==0)return HEAP8;if(type==1)return HEAPU8;if(type==2)return HEAP16;if(type==4)return HEAP32;if(type==6)return HEAPF32;if(type==5||type==28922||type==28520||type==30779||type==30782)return HEAPU32;return HEAPU16;};var heapAccessShiftForWebGLHeap=function heapAccessShiftForWebGLHeap(heap){return 31-Math.clz32(heap.BYTES_PER_ELEMENT);};var emscriptenWebGLGetTexPixelData=function emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat){var heap=heapObjectForWebGLType(type);var shift=heapAccessShiftForWebGLHeap(heap);var byteSize=1<<shift;var sizePerPixel=colorChannelsInGlTextureFormat(format)*byteSize;var bytes=computeUnpackAlignedImageSize(width,height,sizePerPixel,GL.unpackAlignment);return heap.subarray(pixels>>shift,pixels+bytes>>shift);};/** @suppress {duplicate } */var _glReadPixels=function _glReadPixels(x,y,width,height,format,type,pixels){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
if(GLctx.currentPixelPackBufferBinding){GLctx.readPixels(x,y,width,height,format,type,pixels);}else{var heap=heapObjectForWebGLType(type);GLctx.readPixels(x,y,width,height,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap));}return;}var pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,format);if(!pixelData){GL.recordError(0x500/*GL_INVALID_ENUM*/);return;}GLctx.readPixels(x,y,width,height,format,type,pixelData);};var _emscripten_glReadPixels=_glReadPixels;/** @suppress {duplicate } */var _glReleaseShaderCompiler=function _glReleaseShaderCompiler(){// NOP (as allowed by GLES 2.0 spec)
};var _emscripten_glReleaseShaderCompiler=_glReleaseShaderCompiler;/** @suppress {duplicate } */function _glRenderbufferStorage(x0,x1,x2,x3){GLctx.renderbufferStorage(x0,x1,x2,x3);}var _emscripten_glRenderbufferStorage=_glRenderbufferStorage;/** @suppress {duplicate } */function _glRenderbufferStorageMultisample(x0,x1,x2,x3,x4){GLctx.renderbufferStorageMultisample(x0,x1,x2,x3,x4);}var _emscripten_glRenderbufferStorageMultisample=_glRenderbufferStorageMultisample;/** @suppress {duplicate } */function _glResumeTransformFeedback(){GLctx.resumeTransformFeedback();}var _emscripten_glResumeTransformFeedback=_glResumeTransformFeedback;/** @suppress {duplicate } */var _glSampleCoverage=function _glSampleCoverage(value,invert){GLctx.sampleCoverage(value,!!invert);};var _emscripten_glSampleCoverage=_glSampleCoverage;/** @suppress {duplicate } */var _glSamplerParameterf=function _glSamplerParameterf(sampler,pname,param){GLctx.samplerParameterf(GL.samplers[sampler],pname,param);};var _emscripten_glSamplerParameterf=_glSamplerParameterf;/** @suppress {duplicate } */var _glSamplerParameterfv=function _glSamplerParameterfv(sampler,pname,params){var param=HEAPF32[params>>2];GLctx.samplerParameterf(GL.samplers[sampler],pname,param);};var _emscripten_glSamplerParameterfv=_glSamplerParameterfv;/** @suppress {duplicate } */var _glSamplerParameteri=function _glSamplerParameteri(sampler,pname,param){GLctx.samplerParameteri(GL.samplers[sampler],pname,param);};var _emscripten_glSamplerParameteri=_glSamplerParameteri;/** @suppress {duplicate } */var _glSamplerParameteriv=function _glSamplerParameteriv(sampler,pname,params){var param=HEAP32[params>>2];GLctx.samplerParameteri(GL.samplers[sampler],pname,param);};var _emscripten_glSamplerParameteriv=_glSamplerParameteriv;/** @suppress {duplicate } */function _glScissor(x0,x1,x2,x3){GLctx.scissor(x0,x1,x2,x3);}var _emscripten_glScissor=_glScissor;/** @suppress {duplicate } */var _glShaderBinary=function _glShaderBinary(count,shaders,binaryformat,binary,length){GL.recordError(0x500/*GL_INVALID_ENUM*/);};var _emscripten_glShaderBinary=_glShaderBinary;/** @suppress {duplicate } */var _glShaderSource=function _glShaderSource(shader,count,string,length){var source=GL.getSource(shader,count,string,length);GLctx.shaderSource(GL.shaders[shader],source);};var _emscripten_glShaderSource=_glShaderSource;/** @suppress {duplicate } */function _glStencilFunc(x0,x1,x2){GLctx.stencilFunc(x0,x1,x2);}var _emscripten_glStencilFunc=_glStencilFunc;/** @suppress {duplicate } */function _glStencilFuncSeparate(x0,x1,x2,x3){GLctx.stencilFuncSeparate(x0,x1,x2,x3);}var _emscripten_glStencilFuncSeparate=_glStencilFuncSeparate;/** @suppress {duplicate } */function _glStencilMask(x0){GLctx.stencilMask(x0);}var _emscripten_glStencilMask=_glStencilMask;/** @suppress {duplicate } */function _glStencilMaskSeparate(x0,x1){GLctx.stencilMaskSeparate(x0,x1);}var _emscripten_glStencilMaskSeparate=_glStencilMaskSeparate;/** @suppress {duplicate } */function _glStencilOp(x0,x1,x2){GLctx.stencilOp(x0,x1,x2);}var _emscripten_glStencilOp=_glStencilOp;/** @suppress {duplicate } */function _glStencilOpSeparate(x0,x1,x2,x3){GLctx.stencilOpSeparate(x0,x1,x2,x3);}var _emscripten_glStencilOpSeparate=_glStencilOpSeparate;/** @suppress {duplicate } */var _glTexImage2D=function _glTexImage2D(target,level,internalFormat,width,height,border,format,type,pixels){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
if(GLctx.currentPixelUnpackBufferBinding){GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixels);}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap));}else{GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,null);}return;}GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixels?emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat):null);};var _emscripten_glTexImage2D=_glTexImage2D;/** @suppress {duplicate } */var _glTexImage3D=function _glTexImage3D(target,level,internalFormat,width,height,depth,border,format,type,pixels){if(GLctx.currentPixelUnpackBufferBinding){GLctx.texImage3D(target,level,internalFormat,width,height,depth,border,format,type,pixels);}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx.texImage3D(target,level,internalFormat,width,height,depth,border,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap));}else{GLctx.texImage3D(target,level,internalFormat,width,height,depth,border,format,type,null);}};var _emscripten_glTexImage3D=_glTexImage3D;/** @suppress {duplicate } */function _glTexParameterf(x0,x1,x2){GLctx.texParameterf(x0,x1,x2);}var _emscripten_glTexParameterf=_glTexParameterf;/** @suppress {duplicate } */var _glTexParameterfv=function _glTexParameterfv(target,pname,params){var param=HEAPF32[params>>2];GLctx.texParameterf(target,pname,param);};var _emscripten_glTexParameterfv=_glTexParameterfv;/** @suppress {duplicate } */function _glTexParameteri(x0,x1,x2){GLctx.texParameteri(x0,x1,x2);}var _emscripten_glTexParameteri=_glTexParameteri;/** @suppress {duplicate } */var _glTexParameteriv=function _glTexParameteriv(target,pname,params){var param=HEAP32[params>>2];GLctx.texParameteri(target,pname,param);};var _emscripten_glTexParameteriv=_glTexParameteriv;/** @suppress {duplicate } */function _glTexStorage2D(x0,x1,x2,x3,x4){GLctx.texStorage2D(x0,x1,x2,x3,x4);}var _emscripten_glTexStorage2D=_glTexStorage2D;/** @suppress {duplicate } */function _glTexStorage3D(x0,x1,x2,x3,x4,x5){GLctx.texStorage3D(x0,x1,x2,x3,x4,x5);}var _emscripten_glTexStorage3D=_glTexStorage3D;/** @suppress {duplicate } */var _glTexSubImage2D=function _glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
if(GLctx.currentPixelUnpackBufferBinding){GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels);}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap));}else{GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,null);}return;}var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,0);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixelData);};var _emscripten_glTexSubImage2D=_glTexSubImage2D;/** @suppress {duplicate } */var _glTexSubImage3D=function _glTexSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,pixels){if(GLctx.currentPixelUnpackBufferBinding){GLctx.texSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,pixels);}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx.texSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap));}else{GLctx.texSubImage3D(target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,null);}};var _emscripten_glTexSubImage3D=_glTexSubImage3D;/** @suppress {duplicate } */var _glTransformFeedbackVaryings=function _glTransformFeedbackVaryings(program,count,varyings,bufferMode){program=GL.programs[program];var vars=[];for(var i=0;i<count;i++)vars.push(UTF8ToString(HEAP32[varyings+i*4>>2]));GLctx.transformFeedbackVaryings(program,vars,bufferMode);};var _emscripten_glTransformFeedbackVaryings=_glTransformFeedbackVaryings;/** @suppress {duplicate } */var _glUniform1f=function _glUniform1f(location,v0){GLctx.uniform1f(webglGetUniformLocation(location),v0);};var _emscripten_glUniform1f=_glUniform1f;var miniTempWebGLFloatBuffers=[];/** @suppress {duplicate } */var _glUniform1fv=function _glUniform1fv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform1fv(webglGetUniformLocation(location),HEAPF32,value>>2,count);return;}if(count<=288){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLFloatBuffers[count-1];for(var i=0;i<count;++i){view[i]=HEAPF32[value+4*i>>2];}}else{var view=HEAPF32.subarray(value>>2,value+count*4>>2);}GLctx.uniform1fv(webglGetUniformLocation(location),view);};var _emscripten_glUniform1fv=_glUniform1fv;/** @suppress {duplicate } */var _glUniform1i=function _glUniform1i(location,v0){GLctx.uniform1i(webglGetUniformLocation(location),v0);};var _emscripten_glUniform1i=_glUniform1i;var miniTempWebGLIntBuffers=[];/** @suppress {duplicate } */var _glUniform1iv=function _glUniform1iv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform1iv(webglGetUniformLocation(location),HEAP32,value>>2,count);return;}if(count<=288){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLIntBuffers[count-1];for(var i=0;i<count;++i){view[i]=HEAP32[value+4*i>>2];}}else{var view=HEAP32.subarray(value>>2,value+count*4>>2);}GLctx.uniform1iv(webglGetUniformLocation(location),view);};var _emscripten_glUniform1iv=_glUniform1iv;/** @suppress {duplicate } */var _glUniform1ui=function _glUniform1ui(location,v0){GLctx.uniform1ui(webglGetUniformLocation(location),v0);};var _emscripten_glUniform1ui=_glUniform1ui;/** @suppress {duplicate } */var _glUniform1uiv=function _glUniform1uiv(location,count,value){count&&GLctx.uniform1uiv(webglGetUniformLocation(location),HEAPU32,value>>2,count);};var _emscripten_glUniform1uiv=_glUniform1uiv;/** @suppress {duplicate } */var _glUniform2f=function _glUniform2f(location,v0,v1){GLctx.uniform2f(webglGetUniformLocation(location),v0,v1);};var _emscripten_glUniform2f=_glUniform2f;/** @suppress {duplicate } */var _glUniform2fv=function _glUniform2fv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform2fv(webglGetUniformLocation(location),HEAPF32,value>>2,count*2);return;}if(count<=144){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLFloatBuffers[2*count-1];for(var i=0;i<2*count;i+=2){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];}}else{var view=HEAPF32.subarray(value>>2,value+count*8>>2);}GLctx.uniform2fv(webglGetUniformLocation(location),view);};var _emscripten_glUniform2fv=_glUniform2fv;/** @suppress {duplicate } */var _glUniform2i=function _glUniform2i(location,v0,v1){GLctx.uniform2i(webglGetUniformLocation(location),v0,v1);};var _emscripten_glUniform2i=_glUniform2i;/** @suppress {duplicate } */var _glUniform2iv=function _glUniform2iv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform2iv(webglGetUniformLocation(location),HEAP32,value>>2,count*2);return;}if(count<=144){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLIntBuffers[2*count-1];for(var i=0;i<2*count;i+=2){view[i]=HEAP32[value+4*i>>2];view[i+1]=HEAP32[value+(4*i+4)>>2];}}else{var view=HEAP32.subarray(value>>2,value+count*8>>2);}GLctx.uniform2iv(webglGetUniformLocation(location),view);};var _emscripten_glUniform2iv=_glUniform2iv;/** @suppress {duplicate } */var _glUniform2ui=function _glUniform2ui(location,v0,v1){GLctx.uniform2ui(webglGetUniformLocation(location),v0,v1);};var _emscripten_glUniform2ui=_glUniform2ui;/** @suppress {duplicate } */var _glUniform2uiv=function _glUniform2uiv(location,count,value){count&&GLctx.uniform2uiv(webglGetUniformLocation(location),HEAPU32,value>>2,count*2);};var _emscripten_glUniform2uiv=_glUniform2uiv;/** @suppress {duplicate } */var _glUniform3f=function _glUniform3f(location,v0,v1,v2){GLctx.uniform3f(webglGetUniformLocation(location),v0,v1,v2);};var _emscripten_glUniform3f=_glUniform3f;/** @suppress {duplicate } */var _glUniform3fv=function _glUniform3fv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform3fv(webglGetUniformLocation(location),HEAPF32,value>>2,count*3);return;}if(count<=96){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLFloatBuffers[3*count-1];for(var i=0;i<3*count;i+=3){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];}}else{var view=HEAPF32.subarray(value>>2,value+count*12>>2);}GLctx.uniform3fv(webglGetUniformLocation(location),view);};var _emscripten_glUniform3fv=_glUniform3fv;/** @suppress {duplicate } */var _glUniform3i=function _glUniform3i(location,v0,v1,v2){GLctx.uniform3i(webglGetUniformLocation(location),v0,v1,v2);};var _emscripten_glUniform3i=_glUniform3i;/** @suppress {duplicate } */var _glUniform3iv=function _glUniform3iv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform3iv(webglGetUniformLocation(location),HEAP32,value>>2,count*3);return;}if(count<=96){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLIntBuffers[3*count-1];for(var i=0;i<3*count;i+=3){view[i]=HEAP32[value+4*i>>2];view[i+1]=HEAP32[value+(4*i+4)>>2];view[i+2]=HEAP32[value+(4*i+8)>>2];}}else{var view=HEAP32.subarray(value>>2,value+count*12>>2);}GLctx.uniform3iv(webglGetUniformLocation(location),view);};var _emscripten_glUniform3iv=_glUniform3iv;/** @suppress {duplicate } */var _glUniform3ui=function _glUniform3ui(location,v0,v1,v2){GLctx.uniform3ui(webglGetUniformLocation(location),v0,v1,v2);};var _emscripten_glUniform3ui=_glUniform3ui;/** @suppress {duplicate } */var _glUniform3uiv=function _glUniform3uiv(location,count,value){count&&GLctx.uniform3uiv(webglGetUniformLocation(location),HEAPU32,value>>2,count*3);};var _emscripten_glUniform3uiv=_glUniform3uiv;/** @suppress {duplicate } */var _glUniform4f=function _glUniform4f(location,v0,v1,v2,v3){GLctx.uniform4f(webglGetUniformLocation(location),v0,v1,v2,v3);};var _emscripten_glUniform4f=_glUniform4f;/** @suppress {duplicate } */var _glUniform4fv=function _glUniform4fv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform4fv(webglGetUniformLocation(location),HEAPF32,value>>2,count*4);return;}if(count<=72){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLFloatBuffers[4*count-1];// hoist the heap out of the loop for size and for pthreads+growth.
var heap=HEAPF32;value>>=2;for(var i=0;i<4*count;i+=4){var dst=value+i;view[i]=heap[dst];view[i+1]=heap[dst+1];view[i+2]=heap[dst+2];view[i+3]=heap[dst+3];}}else{var view=HEAPF32.subarray(value>>2,value+count*16>>2);}GLctx.uniform4fv(webglGetUniformLocation(location),view);};var _emscripten_glUniform4fv=_glUniform4fv;/** @suppress {duplicate } */var _glUniform4i=function _glUniform4i(location,v0,v1,v2,v3){GLctx.uniform4i(webglGetUniformLocation(location),v0,v1,v2,v3);};var _emscripten_glUniform4i=_glUniform4i;/** @suppress {duplicate } */var _glUniform4iv=function _glUniform4iv(location,count,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniform4iv(webglGetUniformLocation(location),HEAP32,value>>2,count*4);return;}if(count<=72){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLIntBuffers[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAP32[value+4*i>>2];view[i+1]=HEAP32[value+(4*i+4)>>2];view[i+2]=HEAP32[value+(4*i+8)>>2];view[i+3]=HEAP32[value+(4*i+12)>>2];}}else{var view=HEAP32.subarray(value>>2,value+count*16>>2);}GLctx.uniform4iv(webglGetUniformLocation(location),view);};var _emscripten_glUniform4iv=_glUniform4iv;/** @suppress {duplicate } */var _glUniform4ui=function _glUniform4ui(location,v0,v1,v2,v3){GLctx.uniform4ui(webglGetUniformLocation(location),v0,v1,v2,v3);};var _emscripten_glUniform4ui=_glUniform4ui;/** @suppress {duplicate } */var _glUniform4uiv=function _glUniform4uiv(location,count,value){count&&GLctx.uniform4uiv(webglGetUniformLocation(location),HEAPU32,value>>2,count*4);};var _emscripten_glUniform4uiv=_glUniform4uiv;/** @suppress {duplicate } */var _glUniformBlockBinding=function _glUniformBlockBinding(program,uniformBlockIndex,uniformBlockBinding){program=GL.programs[program];GLctx.uniformBlockBinding(program,uniformBlockIndex,uniformBlockBinding);};var _emscripten_glUniformBlockBinding=_glUniformBlockBinding;/** @suppress {duplicate } */var _glUniformMatrix2fv=function _glUniformMatrix2fv(location,count,transpose,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniformMatrix2fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*4);return;}if(count<=72){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLFloatBuffers[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];}}else{var view=HEAPF32.subarray(value>>2,value+count*16>>2);}GLctx.uniformMatrix2fv(webglGetUniformLocation(location),!!transpose,view);};var _emscripten_glUniformMatrix2fv=_glUniformMatrix2fv;/** @suppress {duplicate } */var _glUniformMatrix2x3fv=function _glUniformMatrix2x3fv(location,count,transpose,value){count&&GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*6);};var _emscripten_glUniformMatrix2x3fv=_glUniformMatrix2x3fv;/** @suppress {duplicate } */var _glUniformMatrix2x4fv=function _glUniformMatrix2x4fv(location,count,transpose,value){count&&GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*8);};var _emscripten_glUniformMatrix2x4fv=_glUniformMatrix2x4fv;/** @suppress {duplicate } */var _glUniformMatrix3fv=function _glUniformMatrix3fv(location,count,transpose,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniformMatrix3fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*9);return;}if(count<=32){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLFloatBuffers[9*count-1];for(var i=0;i<9*count;i+=9){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];view[i+4]=HEAPF32[value+(4*i+16)>>2];view[i+5]=HEAPF32[value+(4*i+20)>>2];view[i+6]=HEAPF32[value+(4*i+24)>>2];view[i+7]=HEAPF32[value+(4*i+28)>>2];view[i+8]=HEAPF32[value+(4*i+32)>>2];}}else{var view=HEAPF32.subarray(value>>2,value+count*36>>2);}GLctx.uniformMatrix3fv(webglGetUniformLocation(location),!!transpose,view);};var _emscripten_glUniformMatrix3fv=_glUniformMatrix3fv;/** @suppress {duplicate } */var _glUniformMatrix3x2fv=function _glUniformMatrix3x2fv(location,count,transpose,value){count&&GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*6);};var _emscripten_glUniformMatrix3x2fv=_glUniformMatrix3x2fv;/** @suppress {duplicate } */var _glUniformMatrix3x4fv=function _glUniformMatrix3x4fv(location,count,transpose,value){count&&GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*12);};var _emscripten_glUniformMatrix3x4fv=_glUniformMatrix3x4fv;/** @suppress {duplicate } */var _glUniformMatrix4fv=function _glUniformMatrix4fv(location,count,transpose,value){if(GL.currentContext.version>=2){// WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.
count&&GLctx.uniformMatrix4fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*16);return;}if(count<=18){// avoid allocation when uploading few enough uniforms
var view=miniTempWebGLFloatBuffers[16*count-1];// hoist the heap out of the loop for size and for pthreads+growth.
var heap=HEAPF32;value>>=2;for(var i=0;i<16*count;i+=16){var dst=value+i;view[i]=heap[dst];view[i+1]=heap[dst+1];view[i+2]=heap[dst+2];view[i+3]=heap[dst+3];view[i+4]=heap[dst+4];view[i+5]=heap[dst+5];view[i+6]=heap[dst+6];view[i+7]=heap[dst+7];view[i+8]=heap[dst+8];view[i+9]=heap[dst+9];view[i+10]=heap[dst+10];view[i+11]=heap[dst+11];view[i+12]=heap[dst+12];view[i+13]=heap[dst+13];view[i+14]=heap[dst+14];view[i+15]=heap[dst+15];}}else{var view=HEAPF32.subarray(value>>2,value+count*64>>2);}GLctx.uniformMatrix4fv(webglGetUniformLocation(location),!!transpose,view);};var _emscripten_glUniformMatrix4fv=_glUniformMatrix4fv;/** @suppress {duplicate } */var _glUniformMatrix4x2fv=function _glUniformMatrix4x2fv(location,count,transpose,value){count&&GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*8);};var _emscripten_glUniformMatrix4x2fv=_glUniformMatrix4x2fv;/** @suppress {duplicate } */var _glUniformMatrix4x3fv=function _glUniformMatrix4x3fv(location,count,transpose,value){count&&GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*12);};var _emscripten_glUniformMatrix4x3fv=_glUniformMatrix4x3fv;/** @suppress {duplicate } */var _glUseProgram=function _glUseProgram(program){program=GL.programs[program];GLctx.useProgram(program);// Record the currently active program so that we can access the uniform
// mapping table of that program.
GLctx.currentProgram=program;};var _emscripten_glUseProgram=_glUseProgram;/** @suppress {duplicate } */var _glValidateProgram=function _glValidateProgram(program){GLctx.validateProgram(GL.programs[program]);};var _emscripten_glValidateProgram=_glValidateProgram;/** @suppress {duplicate } */function _glVertexAttrib1f(x0,x1){GLctx.vertexAttrib1f(x0,x1);}var _emscripten_glVertexAttrib1f=_glVertexAttrib1f;/** @suppress {duplicate } */var _glVertexAttrib1fv=function _glVertexAttrib1fv(index,v){GLctx.vertexAttrib1f(index,HEAPF32[v>>2]);};var _emscripten_glVertexAttrib1fv=_glVertexAttrib1fv;/** @suppress {duplicate } */function _glVertexAttrib2f(x0,x1,x2){GLctx.vertexAttrib2f(x0,x1,x2);}var _emscripten_glVertexAttrib2f=_glVertexAttrib2f;/** @suppress {duplicate } */var _glVertexAttrib2fv=function _glVertexAttrib2fv(index,v){GLctx.vertexAttrib2f(index,HEAPF32[v>>2],HEAPF32[v+4>>2]);};var _emscripten_glVertexAttrib2fv=_glVertexAttrib2fv;/** @suppress {duplicate } */function _glVertexAttrib3f(x0,x1,x2,x3){GLctx.vertexAttrib3f(x0,x1,x2,x3);}var _emscripten_glVertexAttrib3f=_glVertexAttrib3f;/** @suppress {duplicate } */var _glVertexAttrib3fv=function _glVertexAttrib3fv(index,v){GLctx.vertexAttrib3f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2]);};var _emscripten_glVertexAttrib3fv=_glVertexAttrib3fv;/** @suppress {duplicate } */function _glVertexAttrib4f(x0,x1,x2,x3,x4){GLctx.vertexAttrib4f(x0,x1,x2,x3,x4);}var _emscripten_glVertexAttrib4f=_glVertexAttrib4f;/** @suppress {duplicate } */var _glVertexAttrib4fv=function _glVertexAttrib4fv(index,v){GLctx.vertexAttrib4f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2],HEAPF32[v+12>>2]);};var _emscripten_glVertexAttrib4fv=_glVertexAttrib4fv;/** @suppress {duplicate } */var _glVertexAttribDivisor=function _glVertexAttribDivisor(index,divisor){GLctx.vertexAttribDivisor(index,divisor);};var _emscripten_glVertexAttribDivisor=_glVertexAttribDivisor;/** @suppress {duplicate } */var _glVertexAttribDivisorANGLE=_glVertexAttribDivisor;var _emscripten_glVertexAttribDivisorANGLE=_glVertexAttribDivisorANGLE;/** @suppress {duplicate } */var _glVertexAttribDivisorARB=_glVertexAttribDivisor;var _emscripten_glVertexAttribDivisorARB=_glVertexAttribDivisorARB;/** @suppress {duplicate } */var _glVertexAttribDivisorEXT=_glVertexAttribDivisor;var _emscripten_glVertexAttribDivisorEXT=_glVertexAttribDivisorEXT;/** @suppress {duplicate } */var _glVertexAttribDivisorNV=_glVertexAttribDivisor;var _emscripten_glVertexAttribDivisorNV=_glVertexAttribDivisorNV;/** @suppress {duplicate } */function _glVertexAttribI4i(x0,x1,x2,x3,x4){GLctx.vertexAttribI4i(x0,x1,x2,x3,x4);}var _emscripten_glVertexAttribI4i=_glVertexAttribI4i;/** @suppress {duplicate } */var _glVertexAttribI4iv=function _glVertexAttribI4iv(index,v){GLctx.vertexAttribI4i(index,HEAP32[v>>2],HEAP32[v+4>>2],HEAP32[v+8>>2],HEAP32[v+12>>2]);};var _emscripten_glVertexAttribI4iv=_glVertexAttribI4iv;/** @suppress {duplicate } */function _glVertexAttribI4ui(x0,x1,x2,x3,x4){GLctx.vertexAttribI4ui(x0,x1,x2,x3,x4);}var _emscripten_glVertexAttribI4ui=_glVertexAttribI4ui;/** @suppress {duplicate } */var _glVertexAttribI4uiv=function _glVertexAttribI4uiv(index,v){GLctx.vertexAttribI4ui(index,HEAPU32[v>>2],HEAPU32[v+4>>2],HEAPU32[v+8>>2],HEAPU32[v+12>>2]);};var _emscripten_glVertexAttribI4uiv=_glVertexAttribI4uiv;/** @suppress {duplicate } */var _glVertexAttribIPointer=function _glVertexAttribIPointer(index,size,type,stride,ptr){GLctx.vertexAttribIPointer(index,size,type,stride,ptr);};var _emscripten_glVertexAttribIPointer=_glVertexAttribIPointer;/** @suppress {duplicate } */var _glVertexAttribPointer=function _glVertexAttribPointer(index,size,type,normalized,stride,ptr){var cb=GL.currentContext.clientBuffers[index];if(!GLctx.currentArrayBufferBinding){cb.size=size;cb.type=type;cb.normalized=normalized;cb.stride=stride;cb.ptr=ptr;cb.clientside=true;cb.vertexAttribPointerAdaptor=function(index,size,type,normalized,stride,ptr){this.vertexAttribPointer(index,size,type,normalized,stride,ptr);};return;}cb.clientside=false;GLctx.vertexAttribPointer(index,size,type,!!normalized,stride,ptr);};var _emscripten_glVertexAttribPointer=_glVertexAttribPointer;/** @suppress {duplicate } */function _glViewport(x0,x1,x2,x3){GLctx.viewport(x0,x1,x2,x3);}var _emscripten_glViewport=_glViewport;/** @suppress {duplicate } */var _glWaitSync=function _glWaitSync(sync,flags,timeout_low,timeout_high){// See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)
var timeout=convertI32PairToI53(timeout_low,timeout_high);GLctx.waitSync(GL.syncs[sync],flags,timeout);};var _emscripten_glWaitSync=_glWaitSync;var _emscripten_has_asyncify=function _emscripten_has_asyncify(){return 1;};var _emscripten_memcpy_js=function _emscripten_memcpy_js(dest,src,num){return HEAPU8.copyWithin(dest,src,src+num);};var doRequestFullscreen=function doRequestFullscreen(target,strategy){if(!JSEvents.fullscreenEnabled())return-1;target=findEventTarget(target);if(!target)return-4;if(!target.requestFullscreen&&!target.webkitRequestFullscreen){return-3;}var canPerformRequests=JSEvents.canPerformEventHandlerRequests();// Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.
if(!canPerformRequests){if(strategy.deferUntilInEventHandler){JSEvents.deferCall(JSEvents_requestFullscreen,1/* priority over pointer lock */,[target,strategy]);return 1;}return-2;}return JSEvents_requestFullscreen(target,strategy);};var _emscripten_request_fullscreen_strategy=function _emscripten_request_fullscreen_strategy(target,deferUntilInEventHandler,fullscreenStrategy){var strategy={scaleMode:HEAP32[fullscreenStrategy>>2],canvasResolutionScaleMode:HEAP32[fullscreenStrategy+4>>2],filteringMode:HEAP32[fullscreenStrategy+8>>2],deferUntilInEventHandler:deferUntilInEventHandler,canvasResizedCallback:HEAP32[fullscreenStrategy+12>>2],canvasResizedCallbackUserData:HEAP32[fullscreenStrategy+16>>2]};return doRequestFullscreen(target,strategy);};var _emscripten_request_pointerlock=function _emscripten_request_pointerlock(target,deferUntilInEventHandler){target=findEventTarget(target);if(!target)return-4;if(!target.requestPointerLock){return-1;}var canPerformRequests=JSEvents.canPerformEventHandlerRequests();// Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.
if(!canPerformRequests){if(deferUntilInEventHandler){JSEvents.deferCall(requestPointerLock,2/* priority below fullscreen */,[target]);return 1;}return-2;}return requestPointerLock(target);};var getHeapMax=function getHeapMax(){return(// Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate
// full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side
// for any code that deals with heap sizes, which would require special
// casing all heap size related code to treat 0 specially.
2147483648);};var growMemory=function growMemory(size){var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{// round size grow request up to wasm page size (fixed 64KB per spec)
wasmMemory.grow(pages);// .grow() takes a delta compared to the previous size
updateMemoryViews();return 1/*success*/;}catch(e){}// implicit 0 return to save code size (caller will cast "undefined" into 0
// anyhow)
};var _emscripten_resize_heap=function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;// With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.
requestedSize>>>=0;// With multithreaded builds, races can happen (another thread might increase the size
// in between), so return a failure, and let the caller retry.
// Memory resize rules:
// 1.  Always increase heap size to at least the requested size, rounded up
//     to next page multiple.
// 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap
//     geometrically: increase the heap size according to
//     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most
//     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).
// 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap
//     linearly: increase the heap size by at least
//     MEMORY_GROWTH_LINEAR_STEP bytes.
// 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by
//     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest
// 4.  If we were unable to allocate as much memory, it may be due to
//     over-eager decision to excessively reserve due to (3) above.
//     Hence if an allocation fails, cut down on the amount of excess
//     growth, in an attempt to succeed to perform a smaller allocation.
// A limit is set for how much we can grow. We should not exceed that
// (the wasm binary specifies it, so if we tried, we'd fail anyhow).
var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false;}var alignUp=function alignUp(x,multiple){return x+(multiple-x%multiple)%multiple;};// Loop through potential heap size increases. If we attempt a too eager
// reservation that fails, cut down on the attempted size and reserve a
// smaller bump instead. (max 3 times, chosen somewhat arbitrarily)
for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+0.2/cutDown);// ensure geometric growth
// but limit overreserving (default to capping at +96MB overgrowth at most)
overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true;}}return false;};var _emscripten_sample_gamepad_data=function _emscripten_sample_gamepad_data(){return(JSEvents.lastGamepadState=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads():null)?0:-1;};var registerBeforeUnloadEventCallback=function registerBeforeUnloadEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString){var beforeUnloadEventHandlerFunc=function beforeUnloadEventHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;// Note: This is always called on the main browser thread, since it needs synchronously return a value!
var confirmationMessage=function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3]);}(eventTypeId,0,userData);if(confirmationMessage){confirmationMessage=UTF8ToString(confirmationMessage);}if(confirmationMessage){e.preventDefault();e.returnValue=confirmationMessage;return confirmationMessage;}};var eventHandler={target:findEventTarget(target),eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:beforeUnloadEventHandlerFunc,useCapture:useCapture};return JSEvents.registerOrRemoveHandler(eventHandler);};var _emscripten_set_beforeunload_callback_on_thread=function _emscripten_set_beforeunload_callback_on_thread(userData,callbackfunc,targetThread){if(typeof onbeforeunload=='undefined')return-1;// beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,
// and there is no time to start proxying it anywhere.
if(targetThread!==1)return-5;return registerBeforeUnloadEventCallback(2,userData,true,callbackfunc,28,"beforeunload");};var registerFocusEventCallback=function registerFocusEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.focusEvent)JSEvents.focusEvent=_malloc2(256);var focusEventHandlerFunc=function focusEventHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;var nodeName=JSEvents.getNodeNameForTarget(e.target);var id=e.target.id?e.target.id:'';var focusEvent=JSEvents.focusEvent;stringToUTF8(nodeName,focusEvent+0,128);stringToUTF8(id,focusEvent+128,128);if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3]);}(eventTypeId,focusEvent,userData))e.preventDefault();};var eventHandler={target:findEventTarget(target),eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:focusEventHandlerFunc,useCapture:useCapture};return JSEvents.registerOrRemoveHandler(eventHandler);};var _emscripten_set_blur_callback_on_thread=function _emscripten_set_blur_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerFocusEventCallback(target,userData,useCapture,callbackfunc,12,"blur",targetThread);};var _emscripten_set_element_css_size=function _emscripten_set_element_css_size(target,width,height){target=findEventTarget(target);if(!target)return-4;target.style.width=width+"px";target.style.height=height+"px";return 0;};var _emscripten_set_focus_callback_on_thread=function _emscripten_set_focus_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerFocusEventCallback(target,userData,useCapture,callbackfunc,13,"focus",targetThread);};var fillFullscreenChangeEventData=function fillFullscreenChangeEventData(eventStruct){var fullscreenElement=document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||document.msFullscreenElement;var isFullscreen=!!fullscreenElement;// Assigning a boolean to HEAP32 with expected type coercion.
/** @suppress{checkTypes} */HEAP32[eventStruct>>2]=isFullscreen;HEAP32[eventStruct+4>>2]=JSEvents.fullscreenEnabled();// If transitioning to fullscreen, report info about the element that is now fullscreen.
// If transitioning to windowed mode, report info about the element that just was fullscreen.
var reportedElement=isFullscreen?fullscreenElement:JSEvents.previousFullscreenElement;var nodeName=JSEvents.getNodeNameForTarget(reportedElement);var id=reportedElement&&reportedElement.id?reportedElement.id:'';stringToUTF8(nodeName,eventStruct+8,128);stringToUTF8(id,eventStruct+136,128);HEAP32[eventStruct+264>>2]=reportedElement?reportedElement.clientWidth:0;HEAP32[eventStruct+268>>2]=reportedElement?reportedElement.clientHeight:0;HEAP32[eventStruct+272>>2]=screen.width;HEAP32[eventStruct+276>>2]=screen.height;if(isFullscreen){JSEvents.previousFullscreenElement=fullscreenElement;}};var registerFullscreenChangeEventCallback=function registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.fullscreenChangeEvent)JSEvents.fullscreenChangeEvent=_malloc2(280);var fullscreenChangeEventhandlerFunc=function fullscreenChangeEventhandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;var fullscreenChangeEvent=JSEvents.fullscreenChangeEvent;fillFullscreenChangeEventData(fullscreenChangeEvent);if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3]);}(eventTypeId,fullscreenChangeEvent,userData))e.preventDefault();};var eventHandler={target:target,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:fullscreenChangeEventhandlerFunc,useCapture:useCapture};return JSEvents.registerOrRemoveHandler(eventHandler);};var _emscripten_set_fullscreenchange_callback_on_thread=function _emscripten_set_fullscreenchange_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){if(!JSEvents.fullscreenEnabled())return-1;target=findEventTarget(target);if(!target)return-4;// Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)
// As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.
registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,19,"webkitfullscreenchange",targetThread);return registerFullscreenChangeEventCallback(target,userData,useCapture,callbackfunc,19,"fullscreenchange",targetThread);};var registerGamepadEventCallback=function registerGamepadEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.gamepadEvent)JSEvents.gamepadEvent=_malloc2(1432);var gamepadEventHandlerFunc=function gamepadEventHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;var gamepadEvent=JSEvents.gamepadEvent;fillGamepadEventData(gamepadEvent,e["gamepad"]);if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3]);}(eventTypeId,gamepadEvent,userData))e.preventDefault();};var eventHandler={target:findEventTarget(target),allowsDeferredCalls:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:gamepadEventHandlerFunc,useCapture:useCapture};return JSEvents.registerOrRemoveHandler(eventHandler);};var _emscripten_set_gamepadconnected_callback_on_thread=function _emscripten_set_gamepadconnected_callback_on_thread(userData,useCapture,callbackfunc,targetThread){if(!navigator.getGamepads&&!navigator.webkitGetGamepads)return-1;return registerGamepadEventCallback(2,userData,useCapture,callbackfunc,26,"gamepadconnected",targetThread);};var _emscripten_set_gamepaddisconnected_callback_on_thread=function _emscripten_set_gamepaddisconnected_callback_on_thread(userData,useCapture,callbackfunc,targetThread){if(!navigator.getGamepads&&!navigator.webkitGetGamepads)return-1;return registerGamepadEventCallback(2,userData,useCapture,callbackfunc,27,"gamepaddisconnected",targetThread);};var registerKeyEventCallback=function registerKeyEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.keyEvent)JSEvents.keyEvent=_malloc2(176);var keyEventHandlerFunc=function keyEventHandlerFunc(e){var keyEventData=JSEvents.keyEvent;HEAPF64[keyEventData>>3]=e.timeStamp;var idx=keyEventData>>2;HEAP32[idx+2]=e.location;HEAP32[idx+3]=e.ctrlKey;HEAP32[idx+4]=e.shiftKey;HEAP32[idx+5]=e.altKey;HEAP32[idx+6]=e.metaKey;HEAP32[idx+7]=e.repeat;HEAP32[idx+8]=e.charCode;HEAP32[idx+9]=e.keyCode;HEAP32[idx+10]=e.which;stringToUTF8(e.key||'',keyEventData+44,32);stringToUTF8(e.code||'',keyEventData+76,32);stringToUTF8(e.char||'',keyEventData+108,32);stringToUTF8(e.locale||'',keyEventData+140,32);if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3]);}(eventTypeId,keyEventData,userData))e.preventDefault();};var eventHandler={target:findEventTarget(target),allowsDeferredCalls:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:keyEventHandlerFunc,useCapture:useCapture};return JSEvents.registerOrRemoveHandler(eventHandler);};var _emscripten_set_keydown_callback_on_thread=function _emscripten_set_keydown_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerKeyEventCallback(target,userData,useCapture,callbackfunc,2,"keydown",targetThread);};var _emscripten_set_keypress_callback_on_thread=function _emscripten_set_keypress_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerKeyEventCallback(target,userData,useCapture,callbackfunc,1,"keypress",targetThread);};var _emscripten_set_keyup_callback_on_thread=function _emscripten_set_keyup_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerKeyEventCallback(target,userData,useCapture,callbackfunc,3,"keyup",targetThread);};var _emscripten_set_main_loop=function _emscripten_set_main_loop(func,fps,simulateInfiniteLoop){var browserIterationFunc=function browserIterationFunc(){return dynCall_v.call(null,func);};setMainLoop(browserIterationFunc,fps,simulateInfiniteLoop);};var fillMouseEventData=function fillMouseEventData(eventStruct,e,target){HEAPF64[eventStruct>>3]=e.timeStamp;var idx=eventStruct>>2;HEAP32[idx+2]=e.screenX;HEAP32[idx+3]=e.screenY;HEAP32[idx+4]=e.clientX;HEAP32[idx+5]=e.clientY;HEAP32[idx+6]=e.ctrlKey;HEAP32[idx+7]=e.shiftKey;HEAP32[idx+8]=e.altKey;HEAP32[idx+9]=e.metaKey;HEAP16[idx*2+20]=e.button;HEAP16[idx*2+21]=e.buttons;HEAP32[idx+11]=e["movementX"];HEAP32[idx+12]=e["movementY"];var rect=getBoundingClientRect(target);HEAP32[idx+13]=e.clientX-rect.left;HEAP32[idx+14]=e.clientY-rect.top;};var registerMouseEventCallback=function registerMouseEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.mouseEvent)JSEvents.mouseEvent=_malloc2(72);target=findEventTarget(target);var mouseEventHandlerFunc=function mouseEventHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;// TODO: Make this access thread safe, or this could update live while app is reading it.
fillMouseEventData(JSEvents.mouseEvent,e,target);if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3]);}(eventTypeId,JSEvents.mouseEvent,userData))e.preventDefault();};var eventHandler={target:target,allowsDeferredCalls:eventTypeString!='mousemove'&&eventTypeString!='mouseenter'&&eventTypeString!='mouseleave',// Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!
eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:mouseEventHandlerFunc,useCapture:useCapture};return JSEvents.registerOrRemoveHandler(eventHandler);};var _emscripten_set_mousedown_callback_on_thread=function _emscripten_set_mousedown_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerMouseEventCallback(target,userData,useCapture,callbackfunc,5,"mousedown",targetThread);};var _emscripten_set_mouseenter_callback_on_thread=function _emscripten_set_mouseenter_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerMouseEventCallback(target,userData,useCapture,callbackfunc,33,"mouseenter",targetThread);};var _emscripten_set_mouseleave_callback_on_thread=function _emscripten_set_mouseleave_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerMouseEventCallback(target,userData,useCapture,callbackfunc,34,"mouseleave",targetThread);};var _emscripten_set_mousemove_callback_on_thread=function _emscripten_set_mousemove_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerMouseEventCallback(target,userData,useCapture,callbackfunc,8,"mousemove",targetThread);};var _emscripten_set_mouseup_callback_on_thread=function _emscripten_set_mouseup_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerMouseEventCallback(target,userData,useCapture,callbackfunc,6,"mouseup",targetThread);};var fillPointerlockChangeEventData=function fillPointerlockChangeEventData(eventStruct){var pointerLockElement=document.pointerLockElement||document.mozPointerLockElement||document.webkitPointerLockElement||document.msPointerLockElement;var isPointerlocked=!!pointerLockElement;// Assigning a boolean to HEAP32 with expected type coercion.
/** @suppress{checkTypes} */HEAP32[eventStruct>>2]=isPointerlocked;var nodeName=JSEvents.getNodeNameForTarget(pointerLockElement);var id=pointerLockElement&&pointerLockElement.id?pointerLockElement.id:'';stringToUTF8(nodeName,eventStruct+4,128);stringToUTF8(id,eventStruct+132,128);};var registerPointerlockChangeEventCallback=function registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.pointerlockChangeEvent)JSEvents.pointerlockChangeEvent=_malloc2(260);var pointerlockChangeEventHandlerFunc=function pointerlockChangeEventHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;var pointerlockChangeEvent=JSEvents.pointerlockChangeEvent;fillPointerlockChangeEventData(pointerlockChangeEvent);if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3]);}(eventTypeId,pointerlockChangeEvent,userData))e.preventDefault();};var eventHandler={target:target,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:pointerlockChangeEventHandlerFunc,useCapture:useCapture};return JSEvents.registerOrRemoveHandler(eventHandler);};/** @suppress {missingProperties} */var _emscripten_set_pointerlockchange_callback_on_thread=function _emscripten_set_pointerlockchange_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){// TODO: Currently not supported in pthreads or in --proxy-to-worker mode. (In pthreads mode, document object is not defined)
if(!document||!document.body||!document.body.requestPointerLock&&!document.body.mozRequestPointerLock&&!document.body.webkitRequestPointerLock&&!document.body.msRequestPointerLock){return-1;}target=findEventTarget(target);if(!target)return-4;registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"mozpointerlockchange",targetThread);registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"webkitpointerlockchange",targetThread);registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"mspointerlockchange",targetThread);return registerPointerlockChangeEventCallback(target,userData,useCapture,callbackfunc,20,"pointerlockchange",targetThread);};var registerUiEventCallback=function registerUiEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.uiEvent)JSEvents.uiEvent=_malloc2(36);target=findEventTarget(target);var uiEventHandlerFunc=function uiEventHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;if(e.target!=target){// Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that
// was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log
// message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,
// causing a new scroll, etc..
return;}var b=document.body;// Take document.body to a variable, Closure compiler does not outline access to it on its own.
if(!b){// During a page unload 'body' can be null, with "Cannot read property 'clientWidth' of null" being thrown
return;}var uiEvent=JSEvents.uiEvent;HEAP32[uiEvent>>2]=e.detail;HEAP32[uiEvent+4>>2]=b.clientWidth;HEAP32[uiEvent+8>>2]=b.clientHeight;HEAP32[uiEvent+12>>2]=innerWidth;HEAP32[uiEvent+16>>2]=innerHeight;HEAP32[uiEvent+20>>2]=outerWidth;HEAP32[uiEvent+24>>2]=outerHeight;HEAP32[uiEvent+28>>2]=pageXOffset;HEAP32[uiEvent+32>>2]=pageYOffset;if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3]);}(eventTypeId,uiEvent,userData))e.preventDefault();};var eventHandler={target:target,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:uiEventHandlerFunc,useCapture:useCapture};return JSEvents.registerOrRemoveHandler(eventHandler);};var _emscripten_set_resize_callback_on_thread=function _emscripten_set_resize_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerUiEventCallback(target,userData,useCapture,callbackfunc,10,"resize",targetThread);};var registerTouchEventCallback=function registerTouchEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.touchEvent)JSEvents.touchEvent=_malloc2(1696);target=findEventTarget(target);var touchEventHandlerFunc=function touchEventHandlerFunc(e){var t,touches={},et=e.touches;// To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches,
// only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in
// each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.
for(var i=0;i<et.length;++i){t=et[i];// Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any
// changed/target states we may have set from previous frame.
t.isChanged=t.onTarget=0;touches[t.identifier]=t;}// Mark which touches are part of the changedTouches list.
for(var i=0;i<e.changedTouches.length;++i){t=e.changedTouches[i];t.isChanged=1;touches[t.identifier]=t;}// Mark which touches are part of the targetTouches list.
for(var i=0;i<e.targetTouches.length;++i){touches[e.targetTouches[i].identifier].onTarget=1;}var touchEvent=JSEvents.touchEvent;HEAPF64[touchEvent>>3]=e.timeStamp;var idx=touchEvent>>2;// Pre-shift the ptr to index to HEAP32 to save code size
HEAP32[idx+3]=e.ctrlKey;HEAP32[idx+4]=e.shiftKey;HEAP32[idx+5]=e.altKey;HEAP32[idx+6]=e.metaKey;idx+=7;// Advance to the start of the touch array.
var targetRect=getBoundingClientRect(target);var numTouches=0;for(var i in touches){t=touches[i];HEAP32[idx+0]=t.identifier;HEAP32[idx+1]=t.screenX;HEAP32[idx+2]=t.screenY;HEAP32[idx+3]=t.clientX;HEAP32[idx+4]=t.clientY;HEAP32[idx+5]=t.pageX;HEAP32[idx+6]=t.pageY;HEAP32[idx+7]=t.isChanged;HEAP32[idx+8]=t.onTarget;HEAP32[idx+9]=t.clientX-targetRect.left;HEAP32[idx+10]=t.clientY-targetRect.top;idx+=13;if(++numTouches>31){break;}}HEAP32[touchEvent+8>>2]=numTouches;if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3]);}(eventTypeId,touchEvent,userData))e.preventDefault();};var eventHandler={target:target,allowsDeferredCalls:eventTypeString=='touchstart'||eventTypeString=='touchend',eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:touchEventHandlerFunc,useCapture:useCapture};return JSEvents.registerOrRemoveHandler(eventHandler);};var _emscripten_set_touchcancel_callback_on_thread=function _emscripten_set_touchcancel_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerTouchEventCallback(target,userData,useCapture,callbackfunc,25,"touchcancel",targetThread);};var _emscripten_set_touchend_callback_on_thread=function _emscripten_set_touchend_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerTouchEventCallback(target,userData,useCapture,callbackfunc,23,"touchend",targetThread);};var _emscripten_set_touchmove_callback_on_thread=function _emscripten_set_touchmove_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerTouchEventCallback(target,userData,useCapture,callbackfunc,24,"touchmove",targetThread);};var _emscripten_set_touchstart_callback_on_thread=function _emscripten_set_touchstart_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){return registerTouchEventCallback(target,userData,useCapture,callbackfunc,22,"touchstart",targetThread);};var fillVisibilityChangeEventData=function fillVisibilityChangeEventData(eventStruct){var visibilityStates=["hidden","visible","prerender","unloaded"];var visibilityState=visibilityStates.indexOf(document.visibilityState);// Assigning a boolean to HEAP32 with expected type coercion.
/** @suppress{checkTypes} */HEAP32[eventStruct>>2]=document.hidden;HEAP32[eventStruct+4>>2]=visibilityState;};var registerVisibilityChangeEventCallback=function registerVisibilityChangeEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.visibilityChangeEvent)JSEvents.visibilityChangeEvent=_malloc2(8);var visibilityChangeEventHandlerFunc=function visibilityChangeEventHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;var visibilityChangeEvent=JSEvents.visibilityChangeEvent;fillVisibilityChangeEventData(visibilityChangeEvent);if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3]);}(eventTypeId,visibilityChangeEvent,userData))e.preventDefault();};var eventHandler={target:target,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:visibilityChangeEventHandlerFunc,useCapture:useCapture};return JSEvents.registerOrRemoveHandler(eventHandler);};var _emscripten_set_visibilitychange_callback_on_thread=function _emscripten_set_visibilitychange_callback_on_thread(userData,useCapture,callbackfunc,targetThread){return registerVisibilityChangeEventCallback(specialHTMLTargets[1],userData,useCapture,callbackfunc,21,"visibilitychange",targetThread);};var registerWheelEventCallback=function registerWheelEventCallback(target,userData,useCapture,callbackfunc,eventTypeId,eventTypeString,targetThread){if(!JSEvents.wheelEvent)JSEvents.wheelEvent=_malloc2(104);// The DOM Level 3 events spec event 'wheel'
var wheelHandlerFunc=function wheelHandlerFunc(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:event;var wheelEvent=JSEvents.wheelEvent;fillMouseEventData(wheelEvent,e,target);HEAPF64[wheelEvent+72>>3]=e["deltaX"];HEAPF64[wheelEvent+80>>3]=e["deltaY"];HEAPF64[wheelEvent+88>>3]=e["deltaZ"];HEAP32[wheelEvent+96>>2]=e["deltaMode"];if(function(a1,a2,a3){return dynCall_iiii.apply(null,[callbackfunc,a1,a2,a3]);}(eventTypeId,wheelEvent,userData))e.preventDefault();};var eventHandler={target:target,allowsDeferredCalls:true,eventTypeString:eventTypeString,callbackfunc:callbackfunc,handlerFunc:wheelHandlerFunc,useCapture:useCapture};return JSEvents.registerOrRemoveHandler(eventHandler);};var _emscripten_set_wheel_callback_on_thread=function _emscripten_set_wheel_callback_on_thread(target,userData,useCapture,callbackfunc,targetThread){target=findEventTarget(target);if(!target)return-4;if(typeof target.onwheel!='undefined'){return registerWheelEventCallback(target,userData,useCapture,callbackfunc,9,"wheel",targetThread);}else{return-1;}};var _emscripten_set_window_title=function _emscripten_set_window_title(title){return document.title=UTF8ToString(title);};var _emscripten_sleep=function _emscripten_sleep(ms){// emscripten_sleep() does not return a value, but we still need a |return|
// here for stack switching support (ASYNCIFY=2). In that mode this function
// returns a Promise instead of nothing, and that Promise is what tells the
// wasm VM to pause the stack.
return Asyncify.handleSleep(function(wakeUp){return _safeSetTimeout(wakeUp,ms);});};_emscripten_sleep.isAsync=true;var ENV={};var getExecutableName=function getExecutableName(){return thisProgram||'./this.program';};var getEnvStrings=function getEnvStrings(){if(!getEnvStrings.strings){// Default values.
// Browser language detection #8751
var lang=((typeof navigator==="undefined"?"undefined":_typeof(navigator))=='object'&&navigator.languages&&navigator.languages[0]||'C').replace('-','_')+'.UTF-8';var env={'USER':'web_user','LOGNAME':'web_user','PATH':'/','PWD':'/','HOME':'/home/web_user','LANG':lang,'_':getExecutableName()};// Apply the user-provided values, if any.
for(var x in ENV){// x is a key in ENV; if ENV[x] is undefined, that means it was
// explicitly set to be so. We allow user code to do that to
// force variables with default values to remain unset.
if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x];}var strings=[];for(var x in env){strings.push("".concat(x,"=").concat(env[x]));}getEnvStrings.strings=strings;}return getEnvStrings.strings;};var stringToAscii=function stringToAscii(str,buffer){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i);}// Null-terminate the string
HEAP8[buffer>>0]=0;};var _environ_get=function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;stringToAscii(string,ptr);bufSize+=string.length+1;});return 0;};var _environ_sizes_get=function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){return bufSize+=string.length+1;});HEAPU32[penviron_buf_size>>2]=bufSize;return 0;};function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0;}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return e.errno;}}function _fd_fdstat_get(fd,pbuf){try{var rightsBase=0;var rightsInheriting=0;var flags=0;{var stream=SYSCALLS.getStreamFromFD(fd);// All character devices are terminals (other things a Linux system would
// assume is a character device, like the mouse, we have special APIs for).
var type=stream.tty?2:FS.isDir(stream.mode)?3:FS.isLink(stream.mode)?7:4;}HEAP8[pbuf>>0]=type;HEAP16[pbuf+2>>1]=flags;tempI64=[rightsBase>>>0,(tempDouble=rightsBase,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?+Math.floor(tempDouble/4294967296.0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[pbuf+8>>2]=tempI64[0],HEAP32[pbuf+12>>2]=tempI64[1];tempI64=[rightsInheriting>>>0,(tempDouble=rightsInheriting,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?+Math.floor(tempDouble/4294967296.0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[pbuf+16>>2]=tempI64[0],HEAP32[pbuf+20>>2]=tempI64[1];return 0;}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return e.errno;}}/** @param {number=} offset */var doReadv=function doReadv(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break;// nothing more to read
if(typeof offset!=='undefined'){offset+=curr;}}return ret;};function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0;}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return e.errno;}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var offset=convertI32PairToI53Checked(offset_low,offset_high);;try{if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1.0?tempDouble>0.0?+Math.floor(tempDouble/4294967296.0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296.0)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;// reset readdir state
return 0;}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return e.errno;};}/** @param {number=} offset */var doWritev=function doWritev(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(typeof offset!=='undefined'){offset+=curr;}}return ret;};function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doWritev(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0;}catch(e){if(typeof FS=='undefined'||!(e.name==='ErrnoError'))throw e;return e.errno;}}var arraySum=function arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){// no-op
}return sum;};var MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];var addDays=function addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){// we spill over to next month
days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1);}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1);}}else{// we stay in current month
newDate.setDate(newDate.getDate()+days);return newDate;}}return newDate;};var writeArrayToMemory=function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer);};var _strftime=function _strftime(s,maxsize,format,tm){// size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
// http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
var tm_zone=HEAPU32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):''};var pattern=UTF8ToString(format);// expand format
var EXPANSION_RULES_1={'%c':'%a %b %d %H:%M:%S %Y',// Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
'%D':'%m/%d/%y',// Equivalent to %m / %d / %y
'%F':'%Y-%m-%d',// Equivalent to %Y - %m - %d
'%h':'%b',// Equivalent to %b
'%r':'%I:%M:%S %p',// Replaced by the time in a.m. and p.m. notation
'%R':'%H:%M',// Replaced by the time in 24-hour notation
'%T':'%H:%M:%S',// Replaced by the time
'%x':'%m/%d/%y',// Replaced by the locale's appropriate date representation
'%X':'%H:%M:%S',// Replaced by the locale's appropriate time representation
// Modified Conversion Specifiers
'%Ec':'%c',// Replaced by the locale's alternative appropriate date and time representation.
'%EC':'%C',// Replaced by the name of the base year (period) in the locale's alternative representation.
'%Ex':'%m/%d/%y',// Replaced by the locale's alternative date representation.
'%EX':'%H:%M:%S',// Replaced by the locale's alternative time representation.
'%Ey':'%y',// Replaced by the offset from %EC (year only) in the locale's alternative representation.
'%EY':'%Y',// Replaced by the full alternative year representation.
'%Od':'%d',// Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.
'%Oe':'%e',// Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.
'%OH':'%H',// Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.
'%OI':'%I',// Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.
'%Om':'%m',// Replaced by the month using the locale's alternative numeric symbols.
'%OM':'%M',// Replaced by the minutes using the locale's alternative numeric symbols.
'%OS':'%S',// Replaced by the seconds using the locale's alternative numeric symbols.
'%Ou':'%u',// Replaced by the weekday as a number in the locale's alternative representation (Monday=1).
'%OU':'%U',// Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.
'%OV':'%V',// Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.
'%Ow':'%w',// Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.
'%OW':'%W',// Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.
'%Oy':'%y'// Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.
};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,'g'),EXPANSION_RULES_1[rule]);}var WEEKDAYS=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];var MONTHS=['January','February','March','April','May','June','July','August','September','October','November','December'];function leadingSomething(value,digits,character){var str=typeof value=='number'?value.toString():value||'';while(str.length<digits){str=character[0]+str;}return str;}function leadingNulls(value,digits){return leadingSomething(value,digits,'0');}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0;}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate());}}return compare;}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:// Sunday
return new Date(janFourth.getFullYear()-1,11,29);case 1:// Monday
return janFourth;case 2:// Tuesday
return new Date(janFourth.getFullYear(),0,3);case 3:// Wednesday
return new Date(janFourth.getFullYear(),0,2);case 4:// Thursday
return new Date(janFourth.getFullYear(),0,1);case 5:// Friday
return new Date(janFourth.getFullYear()-1,11,31);case 6:// Saturday
return new Date(janFourth.getFullYear()-1,11,30);}}function getWeekBasedYear(date){var thisDate=addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){// this date is after the start of the first week of this year
if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1;}return thisDate.getFullYear();}return thisDate.getFullYear()-1;}var EXPANSION_RULES_2={'%a':function a(date){return WEEKDAYS[date.tm_wday].substring(0,3);},'%A':function A(date){return WEEKDAYS[date.tm_wday];},'%b':function b(date){return MONTHS[date.tm_mon].substring(0,3);},'%B':function B(date){return MONTHS[date.tm_mon];},'%C':function C(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2);},'%d':function d(date){return leadingNulls(date.tm_mday,2);},'%e':function e(date){return leadingSomething(date.tm_mday,2,' ');},'%g':function g(date){// %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.
// In this system, weeks begin on a Monday and week 1 of the year is the week that includes
// January 4th, which is also the week that includes the first Thursday of the year, and
// is also the first week that contains at least four days in the year.
// If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of
// the last week of the preceding year; thus, for Saturday 2nd January 1999,
// %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,
// or 31st is a Monday, it and any following days are part of week 1 of the following year.
// Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
return getWeekBasedYear(date).toString().substring(2);},'%G':function G(date){return getWeekBasedYear(date);},'%H':function H(date){return leadingNulls(date.tm_hour,2);},'%I':function I(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2);},'%j':function j(date){// Day of the year (001-366)
return leadingNulls(date.tm_mday+arraySum(isLeapYear(date.tm_year+1900)?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR,date.tm_mon-1),3);},'%m':function m(date){return leadingNulls(date.tm_mon+1,2);},'%M':function M(date){return leadingNulls(date.tm_min,2);},'%n':function n(){return'\n';},'%p':function p(date){if(date.tm_hour>=0&&date.tm_hour<12){return'AM';}return'PM';},'%S':function S(date){return leadingNulls(date.tm_sec,2);},'%t':function t(){return'\t';},'%u':function u(date){return date.tm_wday||7;},'%U':function U(date){var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2);},'%V':function V(date){// Replaced by the week number of the year (Monday as the first day of the week)
// as a decimal number [01,53]. If the week containing 1 January has four
// or more days in the new year, then it is considered week 1.
// Otherwise, it is the last week of the previous year, and the next week is week 1.
// Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);// If 1 Jan is just 1-3 days past Monday, the previous week
// is also in this year.
if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++;}if(!val){val=52;// If 31 December of prev year a Thursday, or Friday of a
// leap year, then the prev year has 53 weeks.
var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&isLeapYear(date.tm_year%400-1)){val++;}}else if(val==53){// If 1 January is not a Thursday, and not a Wednesday of a
// leap year, then this year has only 52 weeks.
var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!isLeapYear(date.tm_year)))val=1;}return leadingNulls(val,2);},'%w':function w(date){return date.tm_wday;},'%W':function W(date){var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2);},'%y':function y(date){// Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
return(date.tm_year+1900).toString().substring(2);},// Replaced by the year as a decimal number (for example, 1997). [ tm_year]
'%Y':function Y(date){return date.tm_year+1900;},'%z':function z(date){// Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
// For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;// convert from minutes into hhmm format (which means 60 minutes = 100 units)
off=off/60*100+off%60;return(ahead?'+':'-')+String("0000"+off).slice(-4);},'%Z':function Z(date){return date.tm_zone;},'%%':function _(){return'%';}};// Replace %% with a pair of NULLs (which cannot occur in a C string), then
// re-inject them after processing.
pattern=pattern.replace(/%%/g,'\0\0');for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,'g'),EXPANSION_RULES_2[rule](date));}}pattern=pattern.replace(/\0\0/g,'%');var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0;}writeArrayToMemory(bytes,s);return bytes.length-1;};var _strftime_l=function _strftime_l(s,maxsize,format,tm,loc){return _strftime(s,maxsize,format,tm);// no locale support yet
};var runAndAbortIfError=function runAndAbortIfError(func){try{return func();}catch(e){abort(e);}};var sigToWasmTypes=function sigToWasmTypes(sig){var typeNames={'i':'i32','j':'i64','f':'f32','d':'f64','p':'i32'};var type={parameters:[],results:sig[0]=='v'?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]]);}return type;};var runtimeKeepalivePush=function runtimeKeepalivePush(){runtimeKeepaliveCounter+=1;};var runtimeKeepalivePop=function runtimeKeepalivePop(){runtimeKeepaliveCounter-=1;};var Asyncify={instrumentWasmImports:function instrumentWasmImports(imports){var importPattern=/^(invoke_.*|__asyncjs__.*)$/;for(var x in imports){(function(x){var original=imports[x];var sig=original.sig;if(typeof original=='function'){var isAsyncifyImport=original.isAsync||importPattern.test(x);}})(x);}},instrumentWasmExports:function instrumentWasmExports(exports){var ret={};for(var x in exports){(function(x){var original=exports[x];if(typeof original=='function'){ret[x]=function(){Asyncify.exportCallStack.push(x);try{return original.apply(null,arguments);}finally{if(!ABORT){var y=Asyncify.exportCallStack.pop();assert(y===x);Asyncify.maybeStopUnwind();}}};}else{ret[x]=original;}})(x);}return ret;},State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId:function getCallStackId(funcName){var id=Asyncify.callStackNameToId[funcName];if(id===undefined){id=Asyncify.callStackId++;Asyncify.callStackNameToId[funcName]=id;Asyncify.callStackIdToName[id]=funcName;}return id;},maybeStopUnwind:function maybeStopUnwind(){if(Asyncify.currData&&Asyncify.state===Asyncify.State.Unwinding&&Asyncify.exportCallStack.length===0){// We just finished unwinding.
// Be sure to set the state before calling any other functions to avoid
// possible infinite recursion here (For example in debug pthread builds
// the dbg() function itself can call back into WebAssembly to get the
// current pthread_self() pointer).
Asyncify.state=Asyncify.State.Normal;// Keep the runtime alive so that a re-wind can be done later.
runAndAbortIfError(_asyncify_stop_unwind2);if(typeof Fibers!='undefined'){Fibers.trampoline();}}},whenDone:function whenDone(){return new Promise(function(resolve,reject){Asyncify.asyncPromiseHandlers={resolve:resolve,reject:reject};});},allocateData:function allocateData(){// An asyncify data structure has three fields:
//  0  current stack pos
//  4  max stack pos
//  8  id of function at bottom of the call stack (callStackIdToName[id] == name of js function)
//
// The Asyncify ABI only interprets the first two fields, the rest is for the runtime.
// We also embed a stack in the same memory region here, right next to the structure.
// This struct is also defined as asyncify_data_t in emscripten/fiber.h
var ptr=_malloc2(12+Asyncify.StackSize);Asyncify.setDataHeader(ptr,ptr+12,Asyncify.StackSize);Asyncify.setDataRewindFunc(ptr);return ptr;},setDataHeader:function setDataHeader(ptr,stack,stackSize){HEAPU32[ptr>>2]=stack;HEAPU32[ptr+4>>2]=stack+stackSize;},setDataRewindFunc:function setDataRewindFunc(ptr){var bottomOfCallStack=Asyncify.exportCallStack[0];var rewindId=Asyncify.getCallStackId(bottomOfCallStack);HEAP32[ptr+8>>2]=rewindId;},getDataRewindFunc:function getDataRewindFunc(ptr){var id=HEAP32[ptr+8>>2];var name=Asyncify.callStackIdToName[id];var func=wasmExports[name];return func;},doRewind:function doRewind(ptr){var start=Asyncify.getDataRewindFunc(ptr);// Once we have rewound and the stack we no longer need to artificially
// keep the runtime alive.
return start();},handleSleep:function handleSleep(startAsync){if(ABORT)return;if(Asyncify.state===Asyncify.State.Normal){// Prepare to sleep. Call startAsync, and see what happens:
// if the code decided to call our callback synchronously,
// then no async operation was in fact begun, and we don't
// need to do anything.
var reachedCallback=false;var reachedAfterCallback=false;startAsync(function(){var handleSleepReturnValue=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;if(ABORT)return;Asyncify.handleSleepReturnValue=handleSleepReturnValue;reachedCallback=true;if(!reachedAfterCallback){// We are happening synchronously, so no need for async.
return;}Asyncify.state=Asyncify.State.Rewinding;runAndAbortIfError(function(){return _asyncify_start_rewind2(Asyncify.currData);});if(typeof Browser!='undefined'&&Browser.mainLoop.func){Browser.mainLoop.resume();}var asyncWasmReturnValue,isError=false;try{asyncWasmReturnValue=Asyncify.doRewind(Asyncify.currData);}catch(err){asyncWasmReturnValue=err;isError=true;}// Track whether the return value was handled by any promise handlers.
var handled=false;if(!Asyncify.currData){// All asynchronous execution has finished.
// `asyncWasmReturnValue` now contains the final
// return value of the exported async WASM function.
//
// Note: `asyncWasmReturnValue` is distinct from
// `Asyncify.handleSleepReturnValue`.
// `Asyncify.handleSleepReturnValue` contains the return
// value of the last C function to have executed
// `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`
// contains the return value of the exported WASM function
// that may have called C functions that
// call `Asyncify.handleSleep()`.
var asyncPromiseHandlers=Asyncify.asyncPromiseHandlers;if(asyncPromiseHandlers){Asyncify.asyncPromiseHandlers=null;(isError?asyncPromiseHandlers.reject:asyncPromiseHandlers.resolve)(asyncWasmReturnValue);handled=true;}}if(isError&&!handled){// If there was an error and it was not handled by now, we have no choice but to
// rethrow that error into the global scope where it can be caught only by
// `onerror` or `onunhandledpromiserejection`.
throw asyncWasmReturnValue;}});reachedAfterCallback=true;if(!reachedCallback){// A true async operation was begun; start a sleep.
Asyncify.state=Asyncify.State.Unwinding;// TODO: reuse, don't alloc/free every sleep
Asyncify.currData=Asyncify.allocateData();if(typeof Browser!='undefined'&&Browser.mainLoop.func){Browser.mainLoop.pause();}runAndAbortIfError(function(){return _asyncify_start_unwind2(Asyncify.currData);});}}else if(Asyncify.state===Asyncify.State.Rewinding){// Stop a resume.
Asyncify.state=Asyncify.State.Normal;runAndAbortIfError(_asyncify_stop_rewind2);_free2(Asyncify.currData);Asyncify.currData=null;// Call all sleep callbacks now that the sleep-resume is all done.
Asyncify.sleepCallbacks.forEach(function(func){return callUserCallback(func);});}else{abort("invalid state: ".concat(Asyncify.state));}return Asyncify.handleSleepReturnValue;},handleAsync:function handleAsync(startAsync){return Asyncify.handleSleep(function(wakeUp){// TODO: add error handling as a second param when handleSleep implements it.
startAsync().then(wakeUp);});}};var FS_unlink=function FS_unlink(path){return FS.unlink(path);};var FSNode=/** @constructor */function FSNode(parent,name,mode,rdev){if(!parent){parent=this;// root node sets parent to itself
}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev;};var readMode=292/*292*/|73/*73*/;var writeMode=146/*146*/;Object.defineProperties(FSNode.prototype,{read:{get:/** @this{FSNode} */function get(){return(this.mode&readMode)===readMode;},set:/** @this{FSNode} */function set(val){val?this.mode|=readMode:this.mode&=~readMode;}},write:{get:/** @this{FSNode} */function get(){return(this.mode&writeMode)===writeMode;},set:/** @this{FSNode} */function set(val){val?this.mode|=writeMode:this.mode&=~writeMode;}},isFolder:{get:/** @this{FSNode} */function get(){return FS.isDir(this.mode);}},isDevice:{get:/** @this{FSNode} */function get(){return FS.isChrdev(this.mode);}}});FS.FSNode=FSNode;FS.createPreloadedFile=FS_createPreloadedFile;FS.staticInit();Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_unlink"]=FS.unlink;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createDevice"]=FS.createDevice;;// exports
Module["requestFullscreen"]=function(lockPointer,resizeCanvas){return Browser.requestFullscreen(lockPointer,resizeCanvas);};Module["requestAnimationFrame"]=function(func){return Browser.requestAnimationFrame(func);};Module["setCanvasSize"]=function(width,height,noUpdates){return Browser.setCanvasSize(width,height,noUpdates);};Module["pauseMainLoop"]=function(){return Browser.mainLoop.pause();};Module["resumeMainLoop"]=function(){return Browser.mainLoop.resume();};Module["getUserMedia"]=function(){return Browser.getUserMedia();};Module["createContext"]=function(canvas,useWebGL,setInModule,webGLContextAttributes){return Browser.createContext(canvas,useWebGL,setInModule,webGLContextAttributes);};var preloadedImages={};var preloadedAudios={};;var GLctx;;for(var i=0;i<32;++i)tempFixedLengthArray.push(new Array(i));;var miniTempWebGLFloatBuffersStorage=new Float32Array(288);for(/**@suppress{duplicate}*/var i=0;i<288;++i){miniTempWebGLFloatBuffers[i]=miniTempWebGLFloatBuffersStorage.subarray(0,i+1);};var miniTempWebGLIntBuffersStorage=new Int32Array(288);for(/**@suppress{duplicate}*/var i=0;i<288;++i){miniTempWebGLIntBuffers[i]=miniTempWebGLIntBuffersStorage.subarray(0,i+1);};var wasmImports={/** @export */__cxa_throw:___cxa_throw,/** @export */__syscall_chmod:___syscall_chmod,/** @export */__syscall_fchmod:___syscall_fchmod,/** @export */__syscall_fcntl64:___syscall_fcntl64,/** @export */__syscall_fstat64:___syscall_fstat64,/** @export */__syscall_ftruncate64:___syscall_ftruncate64,/** @export */__syscall_getcwd:___syscall_getcwd,/** @export */__syscall_getdents64:___syscall_getdents64,/** @export */__syscall_ioctl:___syscall_ioctl,/** @export */__syscall_lstat64:___syscall_lstat64,/** @export */__syscall_mkdirat:___syscall_mkdirat,/** @export */__syscall_newfstatat:___syscall_newfstatat,/** @export */__syscall_openat:___syscall_openat,/** @export */__syscall_rmdir:___syscall_rmdir,/** @export */__syscall_stat64:___syscall_stat64,/** @export */__syscall_unlinkat:___syscall_unlinkat,/** @export */_emscripten_get_now_is_monotonic:__emscripten_get_now_is_monotonic,/** @export */_localtime_js:__localtime_js,/** @export */_mktime_js:__mktime_js,/** @export */_tzset_js:__tzset_js,/** @export */abort:_abort,/** @export */eglBindAPI:_eglBindAPI,/** @export */eglChooseConfig:_eglChooseConfig,/** @export */eglCreateContext:_eglCreateContext,/** @export */eglCreateWindowSurface:_eglCreateWindowSurface,/** @export */eglDestroyContext:_eglDestroyContext,/** @export */eglDestroySurface:_eglDestroySurface,/** @export */eglGetConfigAttrib:_eglGetConfigAttrib,/** @export */eglGetDisplay:_eglGetDisplay,/** @export */eglGetError:_eglGetError,/** @export */eglInitialize:_eglInitialize,/** @export */eglMakeCurrent:_eglMakeCurrent,/** @export */eglQueryString:_eglQueryString,/** @export */eglSwapBuffers:_eglSwapBuffers,/** @export */eglSwapInterval:_eglSwapInterval,/** @export */eglTerminate:_eglTerminate,/** @export */eglWaitGL:_eglWaitGL,/** @export */eglWaitNative:_eglWaitNative,/** @export */emscripten_asm_const_int:_emscripten_asm_const_int,/** @export */emscripten_asm_const_int_sync_on_main_thread:_emscripten_asm_const_int_sync_on_main_thread,/** @export */emscripten_date_now:_emscripten_date_now,/** @export */emscripten_enter_soft_fullscreen:_emscripten_enter_soft_fullscreen,/** @export */emscripten_exit_fullscreen:_emscripten_exit_fullscreen,/** @export */emscripten_exit_pointerlock:_emscripten_exit_pointerlock,/** @export */emscripten_exit_soft_fullscreen:_emscripten_exit_soft_fullscreen,/** @export */emscripten_get_device_pixel_ratio:_emscripten_get_device_pixel_ratio,/** @export */emscripten_get_element_css_size:_emscripten_get_element_css_size,/** @export */emscripten_get_gamepad_status:_emscripten_get_gamepad_status,/** @export */emscripten_get_now:_emscripten_get_now,/** @export */emscripten_get_num_gamepads:_emscripten_get_num_gamepads,/** @export */emscripten_get_screen_size:_emscripten_get_screen_size,/** @export */emscripten_glActiveTexture:_emscripten_glActiveTexture,/** @export */emscripten_glAttachShader:_emscripten_glAttachShader,/** @export */emscripten_glBeginQuery:_emscripten_glBeginQuery,/** @export */emscripten_glBeginQueryEXT:_emscripten_glBeginQueryEXT,/** @export */emscripten_glBeginTransformFeedback:_emscripten_glBeginTransformFeedback,/** @export */emscripten_glBindAttribLocation:_emscripten_glBindAttribLocation,/** @export */emscripten_glBindBuffer:_emscripten_glBindBuffer,/** @export */emscripten_glBindBufferBase:_emscripten_glBindBufferBase,/** @export */emscripten_glBindBufferRange:_emscripten_glBindBufferRange,/** @export */emscripten_glBindFramebuffer:_emscripten_glBindFramebuffer,/** @export */emscripten_glBindRenderbuffer:_emscripten_glBindRenderbuffer,/** @export */emscripten_glBindSampler:_emscripten_glBindSampler,/** @export */emscripten_glBindTexture:_emscripten_glBindTexture,/** @export */emscripten_glBindTransformFeedback:_emscripten_glBindTransformFeedback,/** @export */emscripten_glBindVertexArray:_emscripten_glBindVertexArray,/** @export */emscripten_glBindVertexArrayOES:_emscripten_glBindVertexArrayOES,/** @export */emscripten_glBlendColor:_emscripten_glBlendColor,/** @export */emscripten_glBlendEquation:_emscripten_glBlendEquation,/** @export */emscripten_glBlendEquationSeparate:_emscripten_glBlendEquationSeparate,/** @export */emscripten_glBlendFunc:_emscripten_glBlendFunc,/** @export */emscripten_glBlendFuncSeparate:_emscripten_glBlendFuncSeparate,/** @export */emscripten_glBlitFramebuffer:_emscripten_glBlitFramebuffer,/** @export */emscripten_glBufferData:_emscripten_glBufferData,/** @export */emscripten_glBufferSubData:_emscripten_glBufferSubData,/** @export */emscripten_glCheckFramebufferStatus:_emscripten_glCheckFramebufferStatus,/** @export */emscripten_glClear:_emscripten_glClear,/** @export */emscripten_glClearBufferfi:_emscripten_glClearBufferfi,/** @export */emscripten_glClearBufferfv:_emscripten_glClearBufferfv,/** @export */emscripten_glClearBufferiv:_emscripten_glClearBufferiv,/** @export */emscripten_glClearBufferuiv:_emscripten_glClearBufferuiv,/** @export */emscripten_glClearColor:_emscripten_glClearColor,/** @export */emscripten_glClearDepthf:_emscripten_glClearDepthf,/** @export */emscripten_glClearStencil:_emscripten_glClearStencil,/** @export */emscripten_glClientWaitSync:_emscripten_glClientWaitSync,/** @export */emscripten_glColorMask:_emscripten_glColorMask,/** @export */emscripten_glCompileShader:_emscripten_glCompileShader,/** @export */emscripten_glCompressedTexImage2D:_emscripten_glCompressedTexImage2D,/** @export */emscripten_glCompressedTexImage3D:_emscripten_glCompressedTexImage3D,/** @export */emscripten_glCompressedTexSubImage2D:_emscripten_glCompressedTexSubImage2D,/** @export */emscripten_glCompressedTexSubImage3D:_emscripten_glCompressedTexSubImage3D,/** @export */emscripten_glCopyBufferSubData:_emscripten_glCopyBufferSubData,/** @export */emscripten_glCopyTexImage2D:_emscripten_glCopyTexImage2D,/** @export */emscripten_glCopyTexSubImage2D:_emscripten_glCopyTexSubImage2D,/** @export */emscripten_glCopyTexSubImage3D:_emscripten_glCopyTexSubImage3D,/** @export */emscripten_glCreateProgram:_emscripten_glCreateProgram,/** @export */emscripten_glCreateShader:_emscripten_glCreateShader,/** @export */emscripten_glCullFace:_emscripten_glCullFace,/** @export */emscripten_glDeleteBuffers:_emscripten_glDeleteBuffers,/** @export */emscripten_glDeleteFramebuffers:_emscripten_glDeleteFramebuffers,/** @export */emscripten_glDeleteProgram:_emscripten_glDeleteProgram,/** @export */emscripten_glDeleteQueries:_emscripten_glDeleteQueries,/** @export */emscripten_glDeleteQueriesEXT:_emscripten_glDeleteQueriesEXT,/** @export */emscripten_glDeleteRenderbuffers:_emscripten_glDeleteRenderbuffers,/** @export */emscripten_glDeleteSamplers:_emscripten_glDeleteSamplers,/** @export */emscripten_glDeleteShader:_emscripten_glDeleteShader,/** @export */emscripten_glDeleteSync:_emscripten_glDeleteSync,/** @export */emscripten_glDeleteTextures:_emscripten_glDeleteTextures,/** @export */emscripten_glDeleteTransformFeedbacks:_emscripten_glDeleteTransformFeedbacks,/** @export */emscripten_glDeleteVertexArrays:_emscripten_glDeleteVertexArrays,/** @export */emscripten_glDeleteVertexArraysOES:_emscripten_glDeleteVertexArraysOES,/** @export */emscripten_glDepthFunc:_emscripten_glDepthFunc,/** @export */emscripten_glDepthMask:_emscripten_glDepthMask,/** @export */emscripten_glDepthRangef:_emscripten_glDepthRangef,/** @export */emscripten_glDetachShader:_emscripten_glDetachShader,/** @export */emscripten_glDisable:_emscripten_glDisable,/** @export */emscripten_glDisableVertexAttribArray:_emscripten_glDisableVertexAttribArray,/** @export */emscripten_glDrawArrays:_emscripten_glDrawArrays,/** @export */emscripten_glDrawArraysInstanced:_emscripten_glDrawArraysInstanced,/** @export */emscripten_glDrawArraysInstancedANGLE:_emscripten_glDrawArraysInstancedANGLE,/** @export */emscripten_glDrawArraysInstancedARB:_emscripten_glDrawArraysInstancedARB,/** @export */emscripten_glDrawArraysInstancedEXT:_emscripten_glDrawArraysInstancedEXT,/** @export */emscripten_glDrawArraysInstancedNV:_emscripten_glDrawArraysInstancedNV,/** @export */emscripten_glDrawBuffers:_emscripten_glDrawBuffers,/** @export */emscripten_glDrawBuffersEXT:_emscripten_glDrawBuffersEXT,/** @export */emscripten_glDrawBuffersWEBGL:_emscripten_glDrawBuffersWEBGL,/** @export */emscripten_glDrawElements:_emscripten_glDrawElements,/** @export */emscripten_glDrawElementsInstanced:_emscripten_glDrawElementsInstanced,/** @export */emscripten_glDrawElementsInstancedANGLE:_emscripten_glDrawElementsInstancedANGLE,/** @export */emscripten_glDrawElementsInstancedARB:_emscripten_glDrawElementsInstancedARB,/** @export */emscripten_glDrawElementsInstancedEXT:_emscripten_glDrawElementsInstancedEXT,/** @export */emscripten_glDrawElementsInstancedNV:_emscripten_glDrawElementsInstancedNV,/** @export */emscripten_glDrawRangeElements:_emscripten_glDrawRangeElements,/** @export */emscripten_glEnable:_emscripten_glEnable,/** @export */emscripten_glEnableVertexAttribArray:_emscripten_glEnableVertexAttribArray,/** @export */emscripten_glEndQuery:_emscripten_glEndQuery,/** @export */emscripten_glEndQueryEXT:_emscripten_glEndQueryEXT,/** @export */emscripten_glEndTransformFeedback:_emscripten_glEndTransformFeedback,/** @export */emscripten_glFenceSync:_emscripten_glFenceSync,/** @export */emscripten_glFinish:_emscripten_glFinish,/** @export */emscripten_glFlush:_emscripten_glFlush,/** @export */emscripten_glFramebufferRenderbuffer:_emscripten_glFramebufferRenderbuffer,/** @export */emscripten_glFramebufferTexture2D:_emscripten_glFramebufferTexture2D,/** @export */emscripten_glFramebufferTextureLayer:_emscripten_glFramebufferTextureLayer,/** @export */emscripten_glFrontFace:_emscripten_glFrontFace,/** @export */emscripten_glGenBuffers:_emscripten_glGenBuffers,/** @export */emscripten_glGenFramebuffers:_emscripten_glGenFramebuffers,/** @export */emscripten_glGenQueries:_emscripten_glGenQueries,/** @export */emscripten_glGenQueriesEXT:_emscripten_glGenQueriesEXT,/** @export */emscripten_glGenRenderbuffers:_emscripten_glGenRenderbuffers,/** @export */emscripten_glGenSamplers:_emscripten_glGenSamplers,/** @export */emscripten_glGenTextures:_emscripten_glGenTextures,/** @export */emscripten_glGenTransformFeedbacks:_emscripten_glGenTransformFeedbacks,/** @export */emscripten_glGenVertexArrays:_emscripten_glGenVertexArrays,/** @export */emscripten_glGenVertexArraysOES:_emscripten_glGenVertexArraysOES,/** @export */emscripten_glGenerateMipmap:_emscripten_glGenerateMipmap,/** @export */emscripten_glGetActiveAttrib:_emscripten_glGetActiveAttrib,/** @export */emscripten_glGetActiveUniform:_emscripten_glGetActiveUniform,/** @export */emscripten_glGetActiveUniformBlockName:_emscripten_glGetActiveUniformBlockName,/** @export */emscripten_glGetActiveUniformBlockiv:_emscripten_glGetActiveUniformBlockiv,/** @export */emscripten_glGetActiveUniformsiv:_emscripten_glGetActiveUniformsiv,/** @export */emscripten_glGetAttachedShaders:_emscripten_glGetAttachedShaders,/** @export */emscripten_glGetAttribLocation:_emscripten_glGetAttribLocation,/** @export */emscripten_glGetBooleanv:_emscripten_glGetBooleanv,/** @export */emscripten_glGetBufferParameteri64v:_emscripten_glGetBufferParameteri64v,/** @export */emscripten_glGetBufferParameteriv:_emscripten_glGetBufferParameteriv,/** @export */emscripten_glGetError:_emscripten_glGetError,/** @export */emscripten_glGetFloatv:_emscripten_glGetFloatv,/** @export */emscripten_glGetFragDataLocation:_emscripten_glGetFragDataLocation,/** @export */emscripten_glGetFramebufferAttachmentParameteriv:_emscripten_glGetFramebufferAttachmentParameteriv,/** @export */emscripten_glGetInteger64i_v:_emscripten_glGetInteger64i_v,/** @export */emscripten_glGetInteger64v:_emscripten_glGetInteger64v,/** @export */emscripten_glGetIntegeri_v:_emscripten_glGetIntegeri_v,/** @export */emscripten_glGetIntegerv:_emscripten_glGetIntegerv,/** @export */emscripten_glGetInternalformativ:_emscripten_glGetInternalformativ,/** @export */emscripten_glGetProgramBinary:_emscripten_glGetProgramBinary,/** @export */emscripten_glGetProgramInfoLog:_emscripten_glGetProgramInfoLog,/** @export */emscripten_glGetProgramiv:_emscripten_glGetProgramiv,/** @export */emscripten_glGetQueryObjecti64vEXT:_emscripten_glGetQueryObjecti64vEXT,/** @export */emscripten_glGetQueryObjectivEXT:_emscripten_glGetQueryObjectivEXT,/** @export */emscripten_glGetQueryObjectui64vEXT:_emscripten_glGetQueryObjectui64vEXT,/** @export */emscripten_glGetQueryObjectuiv:_emscripten_glGetQueryObjectuiv,/** @export */emscripten_glGetQueryObjectuivEXT:_emscripten_glGetQueryObjectuivEXT,/** @export */emscripten_glGetQueryiv:_emscripten_glGetQueryiv,/** @export */emscripten_glGetQueryivEXT:_emscripten_glGetQueryivEXT,/** @export */emscripten_glGetRenderbufferParameteriv:_emscripten_glGetRenderbufferParameteriv,/** @export */emscripten_glGetSamplerParameterfv:_emscripten_glGetSamplerParameterfv,/** @export */emscripten_glGetSamplerParameteriv:_emscripten_glGetSamplerParameteriv,/** @export */emscripten_glGetShaderInfoLog:_emscripten_glGetShaderInfoLog,/** @export */emscripten_glGetShaderPrecisionFormat:_emscripten_glGetShaderPrecisionFormat,/** @export */emscripten_glGetShaderSource:_emscripten_glGetShaderSource,/** @export */emscripten_glGetShaderiv:_emscripten_glGetShaderiv,/** @export */emscripten_glGetString:_emscripten_glGetString,/** @export */emscripten_glGetStringi:_emscripten_glGetStringi,/** @export */emscripten_glGetSynciv:_emscripten_glGetSynciv,/** @export */emscripten_glGetTexParameterfv:_emscripten_glGetTexParameterfv,/** @export */emscripten_glGetTexParameteriv:_emscripten_glGetTexParameteriv,/** @export */emscripten_glGetTransformFeedbackVarying:_emscripten_glGetTransformFeedbackVarying,/** @export */emscripten_glGetUniformBlockIndex:_emscripten_glGetUniformBlockIndex,/** @export */emscripten_glGetUniformIndices:_emscripten_glGetUniformIndices,/** @export */emscripten_glGetUniformLocation:_emscripten_glGetUniformLocation,/** @export */emscripten_glGetUniformfv:_emscripten_glGetUniformfv,/** @export */emscripten_glGetUniformiv:_emscripten_glGetUniformiv,/** @export */emscripten_glGetUniformuiv:_emscripten_glGetUniformuiv,/** @export */emscripten_glGetVertexAttribIiv:_emscripten_glGetVertexAttribIiv,/** @export */emscripten_glGetVertexAttribIuiv:_emscripten_glGetVertexAttribIuiv,/** @export */emscripten_glGetVertexAttribPointerv:_emscripten_glGetVertexAttribPointerv,/** @export */emscripten_glGetVertexAttribfv:_emscripten_glGetVertexAttribfv,/** @export */emscripten_glGetVertexAttribiv:_emscripten_glGetVertexAttribiv,/** @export */emscripten_glHint:_emscripten_glHint,/** @export */emscripten_glInvalidateFramebuffer:_emscripten_glInvalidateFramebuffer,/** @export */emscripten_glInvalidateSubFramebuffer:_emscripten_glInvalidateSubFramebuffer,/** @export */emscripten_glIsBuffer:_emscripten_glIsBuffer,/** @export */emscripten_glIsEnabled:_emscripten_glIsEnabled,/** @export */emscripten_glIsFramebuffer:_emscripten_glIsFramebuffer,/** @export */emscripten_glIsProgram:_emscripten_glIsProgram,/** @export */emscripten_glIsQuery:_emscripten_glIsQuery,/** @export */emscripten_glIsQueryEXT:_emscripten_glIsQueryEXT,/** @export */emscripten_glIsRenderbuffer:_emscripten_glIsRenderbuffer,/** @export */emscripten_glIsSampler:_emscripten_glIsSampler,/** @export */emscripten_glIsShader:_emscripten_glIsShader,/** @export */emscripten_glIsSync:_emscripten_glIsSync,/** @export */emscripten_glIsTexture:_emscripten_glIsTexture,/** @export */emscripten_glIsTransformFeedback:_emscripten_glIsTransformFeedback,/** @export */emscripten_glIsVertexArray:_emscripten_glIsVertexArray,/** @export */emscripten_glIsVertexArrayOES:_emscripten_glIsVertexArrayOES,/** @export */emscripten_glLineWidth:_emscripten_glLineWidth,/** @export */emscripten_glLinkProgram:_emscripten_glLinkProgram,/** @export */emscripten_glPauseTransformFeedback:_emscripten_glPauseTransformFeedback,/** @export */emscripten_glPixelStorei:_emscripten_glPixelStorei,/** @export */emscripten_glPolygonOffset:_emscripten_glPolygonOffset,/** @export */emscripten_glProgramBinary:_emscripten_glProgramBinary,/** @export */emscripten_glProgramParameteri:_emscripten_glProgramParameteri,/** @export */emscripten_glQueryCounterEXT:_emscripten_glQueryCounterEXT,/** @export */emscripten_glReadBuffer:_emscripten_glReadBuffer,/** @export */emscripten_glReadPixels:_emscripten_glReadPixels,/** @export */emscripten_glReleaseShaderCompiler:_emscripten_glReleaseShaderCompiler,/** @export */emscripten_glRenderbufferStorage:_emscripten_glRenderbufferStorage,/** @export */emscripten_glRenderbufferStorageMultisample:_emscripten_glRenderbufferStorageMultisample,/** @export */emscripten_glResumeTransformFeedback:_emscripten_glResumeTransformFeedback,/** @export */emscripten_glSampleCoverage:_emscripten_glSampleCoverage,/** @export */emscripten_glSamplerParameterf:_emscripten_glSamplerParameterf,/** @export */emscripten_glSamplerParameterfv:_emscripten_glSamplerParameterfv,/** @export */emscripten_glSamplerParameteri:_emscripten_glSamplerParameteri,/** @export */emscripten_glSamplerParameteriv:_emscripten_glSamplerParameteriv,/** @export */emscripten_glScissor:_emscripten_glScissor,/** @export */emscripten_glShaderBinary:_emscripten_glShaderBinary,/** @export */emscripten_glShaderSource:_emscripten_glShaderSource,/** @export */emscripten_glStencilFunc:_emscripten_glStencilFunc,/** @export */emscripten_glStencilFuncSeparate:_emscripten_glStencilFuncSeparate,/** @export */emscripten_glStencilMask:_emscripten_glStencilMask,/** @export */emscripten_glStencilMaskSeparate:_emscripten_glStencilMaskSeparate,/** @export */emscripten_glStencilOp:_emscripten_glStencilOp,/** @export */emscripten_glStencilOpSeparate:_emscripten_glStencilOpSeparate,/** @export */emscripten_glTexImage2D:_emscripten_glTexImage2D,/** @export */emscripten_glTexImage3D:_emscripten_glTexImage3D,/** @export */emscripten_glTexParameterf:_emscripten_glTexParameterf,/** @export */emscripten_glTexParameterfv:_emscripten_glTexParameterfv,/** @export */emscripten_glTexParameteri:_emscripten_glTexParameteri,/** @export */emscripten_glTexParameteriv:_emscripten_glTexParameteriv,/** @export */emscripten_glTexStorage2D:_emscripten_glTexStorage2D,/** @export */emscripten_glTexStorage3D:_emscripten_glTexStorage3D,/** @export */emscripten_glTexSubImage2D:_emscripten_glTexSubImage2D,/** @export */emscripten_glTexSubImage3D:_emscripten_glTexSubImage3D,/** @export */emscripten_glTransformFeedbackVaryings:_emscripten_glTransformFeedbackVaryings,/** @export */emscripten_glUniform1f:_emscripten_glUniform1f,/** @export */emscripten_glUniform1fv:_emscripten_glUniform1fv,/** @export */emscripten_glUniform1i:_emscripten_glUniform1i,/** @export */emscripten_glUniform1iv:_emscripten_glUniform1iv,/** @export */emscripten_glUniform1ui:_emscripten_glUniform1ui,/** @export */emscripten_glUniform1uiv:_emscripten_glUniform1uiv,/** @export */emscripten_glUniform2f:_emscripten_glUniform2f,/** @export */emscripten_glUniform2fv:_emscripten_glUniform2fv,/** @export */emscripten_glUniform2i:_emscripten_glUniform2i,/** @export */emscripten_glUniform2iv:_emscripten_glUniform2iv,/** @export */emscripten_glUniform2ui:_emscripten_glUniform2ui,/** @export */emscripten_glUniform2uiv:_emscripten_glUniform2uiv,/** @export */emscripten_glUniform3f:_emscripten_glUniform3f,/** @export */emscripten_glUniform3fv:_emscripten_glUniform3fv,/** @export */emscripten_glUniform3i:_emscripten_glUniform3i,/** @export */emscripten_glUniform3iv:_emscripten_glUniform3iv,/** @export */emscripten_glUniform3ui:_emscripten_glUniform3ui,/** @export */emscripten_glUniform3uiv:_emscripten_glUniform3uiv,/** @export */emscripten_glUniform4f:_emscripten_glUniform4f,/** @export */emscripten_glUniform4fv:_emscripten_glUniform4fv,/** @export */emscripten_glUniform4i:_emscripten_glUniform4i,/** @export */emscripten_glUniform4iv:_emscripten_glUniform4iv,/** @export */emscripten_glUniform4ui:_emscripten_glUniform4ui,/** @export */emscripten_glUniform4uiv:_emscripten_glUniform4uiv,/** @export */emscripten_glUniformBlockBinding:_emscripten_glUniformBlockBinding,/** @export */emscripten_glUniformMatrix2fv:_emscripten_glUniformMatrix2fv,/** @export */emscripten_glUniformMatrix2x3fv:_emscripten_glUniformMatrix2x3fv,/** @export */emscripten_glUniformMatrix2x4fv:_emscripten_glUniformMatrix2x4fv,/** @export */emscripten_glUniformMatrix3fv:_emscripten_glUniformMatrix3fv,/** @export */emscripten_glUniformMatrix3x2fv:_emscripten_glUniformMatrix3x2fv,/** @export */emscripten_glUniformMatrix3x4fv:_emscripten_glUniformMatrix3x4fv,/** @export */emscripten_glUniformMatrix4fv:_emscripten_glUniformMatrix4fv,/** @export */emscripten_glUniformMatrix4x2fv:_emscripten_glUniformMatrix4x2fv,/** @export */emscripten_glUniformMatrix4x3fv:_emscripten_glUniformMatrix4x3fv,/** @export */emscripten_glUseProgram:_emscripten_glUseProgram,/** @export */emscripten_glValidateProgram:_emscripten_glValidateProgram,/** @export */emscripten_glVertexAttrib1f:_emscripten_glVertexAttrib1f,/** @export */emscripten_glVertexAttrib1fv:_emscripten_glVertexAttrib1fv,/** @export */emscripten_glVertexAttrib2f:_emscripten_glVertexAttrib2f,/** @export */emscripten_glVertexAttrib2fv:_emscripten_glVertexAttrib2fv,/** @export */emscripten_glVertexAttrib3f:_emscripten_glVertexAttrib3f,/** @export */emscripten_glVertexAttrib3fv:_emscripten_glVertexAttrib3fv,/** @export */emscripten_glVertexAttrib4f:_emscripten_glVertexAttrib4f,/** @export */emscripten_glVertexAttrib4fv:_emscripten_glVertexAttrib4fv,/** @export */emscripten_glVertexAttribDivisor:_emscripten_glVertexAttribDivisor,/** @export */emscripten_glVertexAttribDivisorANGLE:_emscripten_glVertexAttribDivisorANGLE,/** @export */emscripten_glVertexAttribDivisorARB:_emscripten_glVertexAttribDivisorARB,/** @export */emscripten_glVertexAttribDivisorEXT:_emscripten_glVertexAttribDivisorEXT,/** @export */emscripten_glVertexAttribDivisorNV:_emscripten_glVertexAttribDivisorNV,/** @export */emscripten_glVertexAttribI4i:_emscripten_glVertexAttribI4i,/** @export */emscripten_glVertexAttribI4iv:_emscripten_glVertexAttribI4iv,/** @export */emscripten_glVertexAttribI4ui:_emscripten_glVertexAttribI4ui,/** @export */emscripten_glVertexAttribI4uiv:_emscripten_glVertexAttribI4uiv,/** @export */emscripten_glVertexAttribIPointer:_emscripten_glVertexAttribIPointer,/** @export */emscripten_glVertexAttribPointer:_emscripten_glVertexAttribPointer,/** @export */emscripten_glViewport:_emscripten_glViewport,/** @export */emscripten_glWaitSync:_emscripten_glWaitSync,/** @export */emscripten_has_asyncify:_emscripten_has_asyncify,/** @export */emscripten_memcpy_js:_emscripten_memcpy_js,/** @export */emscripten_request_fullscreen_strategy:_emscripten_request_fullscreen_strategy,/** @export */emscripten_request_pointerlock:_emscripten_request_pointerlock,/** @export */emscripten_resize_heap:_emscripten_resize_heap,/** @export */emscripten_sample_gamepad_data:_emscripten_sample_gamepad_data,/** @export */emscripten_set_beforeunload_callback_on_thread:_emscripten_set_beforeunload_callback_on_thread,/** @export */emscripten_set_blur_callback_on_thread:_emscripten_set_blur_callback_on_thread,/** @export */emscripten_set_canvas_element_size:_emscripten_set_canvas_element_size,/** @export */emscripten_set_element_css_size:_emscripten_set_element_css_size,/** @export */emscripten_set_focus_callback_on_thread:_emscripten_set_focus_callback_on_thread,/** @export */emscripten_set_fullscreenchange_callback_on_thread:_emscripten_set_fullscreenchange_callback_on_thread,/** @export */emscripten_set_gamepadconnected_callback_on_thread:_emscripten_set_gamepadconnected_callback_on_thread,/** @export */emscripten_set_gamepaddisconnected_callback_on_thread:_emscripten_set_gamepaddisconnected_callback_on_thread,/** @export */emscripten_set_keydown_callback_on_thread:_emscripten_set_keydown_callback_on_thread,/** @export */emscripten_set_keypress_callback_on_thread:_emscripten_set_keypress_callback_on_thread,/** @export */emscripten_set_keyup_callback_on_thread:_emscripten_set_keyup_callback_on_thread,/** @export */emscripten_set_main_loop:_emscripten_set_main_loop,/** @export */emscripten_set_mousedown_callback_on_thread:_emscripten_set_mousedown_callback_on_thread,/** @export */emscripten_set_mouseenter_callback_on_thread:_emscripten_set_mouseenter_callback_on_thread,/** @export */emscripten_set_mouseleave_callback_on_thread:_emscripten_set_mouseleave_callback_on_thread,/** @export */emscripten_set_mousemove_callback_on_thread:_emscripten_set_mousemove_callback_on_thread,/** @export */emscripten_set_mouseup_callback_on_thread:_emscripten_set_mouseup_callback_on_thread,/** @export */emscripten_set_pointerlockchange_callback_on_thread:_emscripten_set_pointerlockchange_callback_on_thread,/** @export */emscripten_set_resize_callback_on_thread:_emscripten_set_resize_callback_on_thread,/** @export */emscripten_set_touchcancel_callback_on_thread:_emscripten_set_touchcancel_callback_on_thread,/** @export */emscripten_set_touchend_callback_on_thread:_emscripten_set_touchend_callback_on_thread,/** @export */emscripten_set_touchmove_callback_on_thread:_emscripten_set_touchmove_callback_on_thread,/** @export */emscripten_set_touchstart_callback_on_thread:_emscripten_set_touchstart_callback_on_thread,/** @export */emscripten_set_visibilitychange_callback_on_thread:_emscripten_set_visibilitychange_callback_on_thread,/** @export */emscripten_set_wheel_callback_on_thread:_emscripten_set_wheel_callback_on_thread,/** @export */emscripten_set_window_title:_emscripten_set_window_title,/** @export */emscripten_sleep:_emscripten_sleep,/** @export */environ_get:_environ_get,/** @export */environ_sizes_get:_environ_sizes_get,/** @export */exit:_exit,/** @export */fd_close:_fd_close,/** @export */fd_fdstat_get:_fd_fdstat_get,/** @export */fd_read:_fd_read,/** @export */fd_seek:_fd_seek,/** @export */fd_write:_fd_write,/** @export */glGetFloatv:_glGetFloatv,/** @export */strftime:_strftime,/** @export */strftime_l:_strftime_l};var wasmExports=createWasm();var _wasm_call_ctors=function ___wasm_call_ctors(){return(_wasm_call_ctors=wasmExports['__wasm_call_ctors'])();};var _malloc2=function _malloc(a0){return(_malloc2=wasmExports['malloc'])(a0);};var _free2=function _free(a0){return(_free2=wasmExports['free'])(a0);};var _errno_location=function ___errno_location(){return(_errno_location=wasmExports['__errno_location'])();};var _I_WebSetFullscreen=Module['_I_WebSetFullscreen']=function(a0){return(_I_WebSetFullscreen=Module['_I_WebSetFullscreen']=wasmExports['I_WebSetFullscreen'])(a0);};var _I_WebOpenGameMenu=Module['_I_WebOpenGameMenu']=function(a0){return(_I_WebOpenGameMenu=Module['_I_WebOpenGameMenu']=wasmExports['I_WebOpenGameMenu'])(a0);};var _I_WebSyncScreenSize=Module['_I_WebSyncScreenSize']=function(){return(_I_WebSyncScreenSize=Module['_I_WebSyncScreenSize']=wasmExports['I_WebSyncScreenSize'])();};var _I_WebMain=Module['_I_WebMain']=function(a0,a1){return(_I_WebMain=Module['_I_WebMain']=wasmExports['I_WebMain'])(a0,a1);};var _main=Module['_main']=function(a0,a1){return(_main=Module['_main']=wasmExports['__main_argc_argv'])(a0,a1);};var _setTempRet=function setTempRet0(a0){return(_setTempRet=wasmExports['setTempRet0'])(a0);};var _stackSave=function stackSave(){return(_stackSave=wasmExports['stackSave'])();};var _stackRestore=function stackRestore(a0){return(_stackRestore=wasmExports['stackRestore'])(a0);};var _stackAlloc=function stackAlloc(a0){return(_stackAlloc=wasmExports['stackAlloc'])(a0);};var _cxa_is_pointer_type=function ___cxa_is_pointer_type(a0){return(_cxa_is_pointer_type=wasmExports['__cxa_is_pointer_type'])(a0);};var dynCall_vi=Module['dynCall_vi']=function(a0,a1){return(dynCall_vi=Module['dynCall_vi']=wasmExports['dynCall_vi'])(a0,a1);};var dynCall_viii=Module['dynCall_viii']=function(a0,a1,a2,a3){return(dynCall_viii=Module['dynCall_viii']=wasmExports['dynCall_viii'])(a0,a1,a2,a3);};var dynCall_ii=Module['dynCall_ii']=function(a0,a1){return(dynCall_ii=Module['dynCall_ii']=wasmExports['dynCall_ii'])(a0,a1);};var dynCall_iii=Module['dynCall_iii']=function(a0,a1,a2){return(dynCall_iii=Module['dynCall_iii']=wasmExports['dynCall_iii'])(a0,a1,a2);};var dynCall_vii=Module['dynCall_vii']=function(a0,a1,a2){return(dynCall_vii=Module['dynCall_vii']=wasmExports['dynCall_vii'])(a0,a1,a2);};var dynCall_viiii=Module['dynCall_viiii']=function(a0,a1,a2,a3,a4){return(dynCall_viiii=Module['dynCall_viiii']=wasmExports['dynCall_viiii'])(a0,a1,a2,a3,a4);};var dynCall_v=Module['dynCall_v']=function(a0){return(dynCall_v=Module['dynCall_v']=wasmExports['dynCall_v'])(a0);};var dynCall_viifff=Module['dynCall_viifff']=function(a0,a1,a2,a3,a4,a5){return(dynCall_viifff=Module['dynCall_viifff']=wasmExports['dynCall_viifff'])(a0,a1,a2,a3,a4,a5);};var dynCall_viifffii=Module['dynCall_viifffii']=function(a0,a1,a2,a3,a4,a5,a6,a7){return(dynCall_viifffii=Module['dynCall_viifffii']=wasmExports['dynCall_viifffii'])(a0,a1,a2,a3,a4,a5,a6,a7);};var dynCall_viiiifiiiii=Module['dynCall_viiiifiiiii']=function(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){return(dynCall_viiiifiiiii=Module['dynCall_viiiifiiiii']=wasmExports['dynCall_viiiifiiiii'])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);};var dynCall_viiiiiii=Module['dynCall_viiiiiii']=function(a0,a1,a2,a3,a4,a5,a6,a7){return(dynCall_viiiiiii=Module['dynCall_viiiiiii']=wasmExports['dynCall_viiiiiii'])(a0,a1,a2,a3,a4,a5,a6,a7);};var dynCall_iiii=Module['dynCall_iiii']=function(a0,a1,a2,a3){return(dynCall_iiii=Module['dynCall_iiii']=wasmExports['dynCall_iiii'])(a0,a1,a2,a3);};var dynCall_iiiii=Module['dynCall_iiiii']=function(a0,a1,a2,a3,a4){return(dynCall_iiiii=Module['dynCall_iiiii']=wasmExports['dynCall_iiiii'])(a0,a1,a2,a3,a4);};var dynCall_iiji=Module['dynCall_iiji']=function(a0,a1,a2,a3,a4){return(dynCall_iiji=Module['dynCall_iiji']=wasmExports['dynCall_iiji'])(a0,a1,a2,a3,a4);};var dynCall_iiiiii=Module['dynCall_iiiiii']=function(a0,a1,a2,a3,a4,a5){return(dynCall_iiiiii=Module['dynCall_iiiiii']=wasmExports['dynCall_iiiiii'])(a0,a1,a2,a3,a4,a5);};var dynCall_iiiiiiiii=Module['dynCall_iiiiiiiii']=function(a0,a1,a2,a3,a4,a5,a6,a7,a8){return(dynCall_iiiiiiiii=Module['dynCall_iiiiiiiii']=wasmExports['dynCall_iiiiiiiii'])(a0,a1,a2,a3,a4,a5,a6,a7,a8);};var dynCall_i=Module['dynCall_i']=function(a0){return(dynCall_i=Module['dynCall_i']=wasmExports['dynCall_i'])(a0);};var dynCall_diii=Module['dynCall_diii']=function(a0,a1,a2,a3){return(dynCall_diii=Module['dynCall_diii']=wasmExports['dynCall_diii'])(a0,a1,a2,a3);};var dynCall_viiid=Module['dynCall_viiid']=function(a0,a1,a2,a3,a4){return(dynCall_viiid=Module['dynCall_viiid']=wasmExports['dynCall_viiid'])(a0,a1,a2,a3,a4);};var dynCall_viiiddd=Module['dynCall_viiiddd']=function(a0,a1,a2,a3,a4,a5,a6){return(dynCall_viiiddd=Module['dynCall_viiiddd']=wasmExports['dynCall_viiiddd'])(a0,a1,a2,a3,a4,a5,a6);};var dynCall_vid=Module['dynCall_vid']=function(a0,a1,a2){return(dynCall_vid=Module['dynCall_vid']=wasmExports['dynCall_vid'])(a0,a1,a2);};var dynCall_viiffi=Module['dynCall_viiffi']=function(a0,a1,a2,a3,a4,a5){return(dynCall_viiffi=Module['dynCall_viiffi']=wasmExports['dynCall_viiffi'])(a0,a1,a2,a3,a4,a5);};var dynCall_viiiiii=Module['dynCall_viiiiii']=function(a0,a1,a2,a3,a4,a5,a6){return(dynCall_viiiiii=Module['dynCall_viiiiii']=wasmExports['dynCall_viiiiii'])(a0,a1,a2,a3,a4,a5,a6);};var dynCall_iid=Module['dynCall_iid']=function(a0,a1,a2){return(dynCall_iid=Module['dynCall_iid']=wasmExports['dynCall_iid'])(a0,a1,a2);};var dynCall_dii=Module['dynCall_dii']=function(a0,a1,a2){return(dynCall_dii=Module['dynCall_dii']=wasmExports['dynCall_dii'])(a0,a1,a2);};var dynCall_iijii=Module['dynCall_iijii']=function(a0,a1,a2,a3,a4,a5){return(dynCall_iijii=Module['dynCall_iijii']=wasmExports['dynCall_iijii'])(a0,a1,a2,a3,a4,a5);};var dynCall_vff=Module['dynCall_vff']=function(a0,a1,a2){return(dynCall_vff=Module['dynCall_vff']=wasmExports['dynCall_vff'])(a0,a1,a2);};var dynCall_vf=Module['dynCall_vf']=function(a0,a1){return(dynCall_vf=Module['dynCall_vf']=wasmExports['dynCall_vf'])(a0,a1);};var dynCall_viffff=Module['dynCall_viffff']=function(a0,a1,a2,a3,a4,a5){return(dynCall_viffff=Module['dynCall_viffff']=wasmExports['dynCall_viffff'])(a0,a1,a2,a3,a4,a5);};var dynCall_vffff=Module['dynCall_vffff']=function(a0,a1,a2,a3,a4){return(dynCall_vffff=Module['dynCall_vffff']=wasmExports['dynCall_vffff'])(a0,a1,a2,a3,a4);};var dynCall_vfff=Module['dynCall_vfff']=function(a0,a1,a2,a3){return(dynCall_vfff=Module['dynCall_vfff']=wasmExports['dynCall_vfff'])(a0,a1,a2,a3);};var dynCall_vif=Module['dynCall_vif']=function(a0,a1,a2){return(dynCall_vif=Module['dynCall_vif']=wasmExports['dynCall_vif'])(a0,a1,a2);};var dynCall_viif=Module['dynCall_viif']=function(a0,a1,a2,a3){return(dynCall_viif=Module['dynCall_viif']=wasmExports['dynCall_viif'])(a0,a1,a2,a3);};var dynCall_viiiiiiiii=Module['dynCall_viiiiiiiii']=function(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9){return(dynCall_viiiiiiiii=Module['dynCall_viiiiiiiii']=wasmExports['dynCall_viiiiiiiii'])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);};var dynCall_jiji=Module['dynCall_jiji']=function(a0,a1,a2,a3,a4){return(dynCall_jiji=Module['dynCall_jiji']=wasmExports['dynCall_jiji'])(a0,a1,a2,a3,a4);};var dynCall_ji=Module['dynCall_ji']=function(a0,a1){return(dynCall_ji=Module['dynCall_ji']=wasmExports['dynCall_ji'])(a0,a1);};var dynCall_viiiii=Module['dynCall_viiiii']=function(a0,a1,a2,a3,a4,a5){return(dynCall_viiiii=Module['dynCall_viiiii']=wasmExports['dynCall_viiiii'])(a0,a1,a2,a3,a4,a5);};var dynCall_viiiiiiii=Module['dynCall_viiiiiiii']=function(a0,a1,a2,a3,a4,a5,a6,a7,a8){return(dynCall_viiiiiiii=Module['dynCall_viiiiiiii']=wasmExports['dynCall_viiiiiiii'])(a0,a1,a2,a3,a4,a5,a6,a7,a8);};var dynCall_vfi=Module['dynCall_vfi']=function(a0,a1,a2){return(dynCall_vfi=Module['dynCall_vfi']=wasmExports['dynCall_vfi'])(a0,a1,a2);};var dynCall_viff=Module['dynCall_viff']=function(a0,a1,a2,a3){return(dynCall_viff=Module['dynCall_viff']=wasmExports['dynCall_viff'])(a0,a1,a2,a3);};var dynCall_vifff=Module['dynCall_vifff']=function(a0,a1,a2,a3,a4){return(dynCall_vifff=Module['dynCall_vifff']=wasmExports['dynCall_vifff'])(a0,a1,a2,a3,a4);};var dynCall_viiiiiiiiii=Module['dynCall_viiiiiiiiii']=function(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){return(dynCall_viiiiiiiiii=Module['dynCall_viiiiiiiiii']=wasmExports['dynCall_viiiiiiiiii'])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);};var dynCall_viiiiiiiiiii=Module['dynCall_viiiiiiiiiii']=function(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){return(dynCall_viiiiiiiiiii=Module['dynCall_viiiiiiiiiii']=wasmExports['dynCall_viiiiiiiiiii'])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);};var dynCall_viifi=Module['dynCall_viifi']=function(a0,a1,a2,a3,a4){return(dynCall_viifi=Module['dynCall_viifi']=wasmExports['dynCall_viifi'])(a0,a1,a2,a3,a4);};var dynCall_iidiiii=Module['dynCall_iidiiii']=function(a0,a1,a2,a3,a4,a5,a6){return(dynCall_iidiiii=Module['dynCall_iidiiii']=wasmExports['dynCall_iidiiii'])(a0,a1,a2,a3,a4,a5,a6);};var dynCall_viijii=Module['dynCall_viijii']=function(a0,a1,a2,a3,a4,a5,a6){return(dynCall_viijii=Module['dynCall_viijii']=wasmExports['dynCall_viijii'])(a0,a1,a2,a3,a4,a5,a6);};var dynCall_iiiiiii=Module['dynCall_iiiiiii']=function(a0,a1,a2,a3,a4,a5,a6){return(dynCall_iiiiiii=Module['dynCall_iiiiiii']=wasmExports['dynCall_iiiiiii'])(a0,a1,a2,a3,a4,a5,a6);};var dynCall_iiiiij=Module['dynCall_iiiiij']=function(a0,a1,a2,a3,a4,a5,a6){return(dynCall_iiiiij=Module['dynCall_iiiiij']=wasmExports['dynCall_iiiiij'])(a0,a1,a2,a3,a4,a5,a6);};var dynCall_iiiiid=Module['dynCall_iiiiid']=function(a0,a1,a2,a3,a4,a5){return(dynCall_iiiiid=Module['dynCall_iiiiid']=wasmExports['dynCall_iiiiid'])(a0,a1,a2,a3,a4,a5);};var dynCall_iiiiijj=Module['dynCall_iiiiijj']=function(a0,a1,a2,a3,a4,a5,a6,a7,a8){return(dynCall_iiiiijj=Module['dynCall_iiiiijj']=wasmExports['dynCall_iiiiijj'])(a0,a1,a2,a3,a4,a5,a6,a7,a8);};var dynCall_iiiiiiii=Module['dynCall_iiiiiiii']=function(a0,a1,a2,a3,a4,a5,a6,a7){return(dynCall_iiiiiiii=Module['dynCall_iiiiiiii']=wasmExports['dynCall_iiiiiiii'])(a0,a1,a2,a3,a4,a5,a6,a7);};var dynCall_iiiiiijj=Module['dynCall_iiiiiijj']=function(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9){return(dynCall_iiiiiijj=Module['dynCall_iiiiiijj']=wasmExports['dynCall_iiiiiijj'])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);};var _asyncify_start_unwind2=function _asyncify_start_unwind(a0){return(_asyncify_start_unwind2=wasmExports['asyncify_start_unwind'])(a0);};var _asyncify_stop_unwind2=function _asyncify_stop_unwind(){return(_asyncify_stop_unwind2=wasmExports['asyncify_stop_unwind'])();};var _asyncify_start_rewind2=function _asyncify_start_rewind(a0){return(_asyncify_start_rewind2=wasmExports['asyncify_start_rewind'])(a0);};var _asyncify_stop_rewind2=function _asyncify_stop_rewind(){return(_asyncify_stop_rewind2=wasmExports['asyncify_stop_rewind'])();};// include: postamble.js
// === Auto-generated postamble setup entry stuff ===
// include: base64Utils.js
// Converts a string of base64 into a byte array.
// Throws error on invalid input.
function intArrayFromBase64(s){try{var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i);}return bytes;}catch(_){throw new Error('Converting base64 string to bytes failed.');}}// If filename is a base64 data URI, parses and returns data (Buffer on node,
// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.
function tryParseAsDataURI(filename){if(!isDataURI(filename)){return;}return intArrayFromBase64(filename.slice(dataURIPrefix.length));}// end include: base64Utils.js
Module['addRunDependency']=addRunDependency;Module['removeRunDependency']=removeRunDependency;Module['FS_createPath']=FS.createPath;Module['FS_createLazyFile']=FS.createLazyFile;Module['FS_createDevice']=FS.createDevice;Module['FS_createPreloadedFile']=FS.createPreloadedFile;Module['FS_createDataFile']=FS.createDataFile;Module['FS_unlink']=FS.unlink;Module['LZ4']=LZ4;var calledRun;dependenciesFulfilled=function runCaller(){// If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller;// try this again later, after new deps are fulfilled
};function callMain(){var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var entryFunction=_main;args.unshift(thisProgram);var argc=args.length;var argv=_stackAlloc((argc+1)*4);var argv_ptr=argv;args.forEach(function(arg){HEAPU32[argv_ptr>>2]=stringToUTF8OnStack(arg);argv_ptr+=4;});HEAPU32[argv_ptr>>2]=0;try{var ret=entryFunction(argc,argv);// if we're not running an evented main loop, it's time to exit
exitJS(ret,/* implicit = */true);return ret;}catch(e){return handleException(e);}}function run(){var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:arguments_;if(runDependencies>0){return;}preRun();// a preRun added a dependency, run will be called later
if(runDependencies>0){return;}function doRun(){// run may have just been called through dependencies being fulfilled just in this very frame,
// or while the async setStatus time below was happening
if(calledRun)return;calledRun=true;Module['calledRun']=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module['onRuntimeInitialized'])Module['onRuntimeInitialized']();if(shouldRunNow)callMain(args);postRun();}if(Module['setStatus']){Module['setStatus']('Running...');setTimeout(function(){setTimeout(function(){Module['setStatus']('');},1);doRun();},1);}else{doRun();}}if(Module['preInit']){if(typeof Module['preInit']=='function')Module['preInit']=[Module['preInit']];while(Module['preInit'].length>0){Module['preInit'].pop()();}}// shouldRunNow refers to calling main(), not run().
var shouldRunNow=true;if(Module['noInitialRun'])shouldRunNow=false;run();// end include: postamble.js
return moduleArg.ready;};}();/* harmony default export */ var edge_classic = (createEdgeModule);
// CONCATENATED MODULE: ./components/licenses/style.css
// extracted by mini-css-extract-plugin
/* harmony default export */ var licenses_style = ({"modal":"modal__bCOJk","modal_content":"modal_content__O8DzT","animatetop":"animatetop__1b7Bz","close":"close__jJbSs","modal_header":"modal_header__7dLiC","modal_body":"modal_body__8R0ze","modal_footer":"modal_footer__P6GcC"});
// CONCATENATED MODULE: ./components/licenses/index.tsx


var licenses_LicenseModal = function LicenseModal(_ref) {
  var onClose = _ref.onClose;
  return Object(external_preact_["h"])("div", {
    id: "myModal",
    class: licenses_style.modal
  }, Object(external_preact_["h"])("div", {
    class: licenses_style.modal_content
  }, Object(external_preact_["h"])("div", {
    class: licenses_style.modal_header
  }, Object(external_preact_["h"])("span", {
    class: licenses_style.close,
    onClick: function onClick() {
      return onClose();
    }
  }, "\xD7"), Object(external_preact_["h"])("h2", null, "EDGE-Classic Licenses")), Object(external_preact_["h"])("div", {
    class: licenses_style.modal_body
  }, Object(external_preact_["h"])("div", {
    style: {
      overflowY: "scroll",
      overflowX: "hidden",
      height: "512px"
    }
  }, Object(external_preact_["h"])("div", {
    style: {
      fontFamily: "monospace",
      whiteSpace: "pre",
      fontSize: 11
    }
  }, license))), Object(external_preact_["h"])("div", {
    class: licenses_style.modal_footer
  })));
};
var license = "===========================================================================================\nBSD 2-Clause License\n===========================================================================================\n\nminiz library (gzip support) - Copyright (c) 2015 Wojciech Adam Koszek\n\n===========================================================================================\nBSD 3-Clause License\n===========================================================================================\n\nBlasphemer (various assets) - Copyright (c) 2021 Contributors to the Blasphemer project\n\nFMMIDI library - Copyright (c) 2003-2006 yuno\n\nFreedoom (various assets) - Copyright (c) 2001-2019 Contributors to the Freedoom project\n\nYMFM library - Copyright (c) 2021 Aaron Giles\n\nYMFMIDI library - Copyright (c) 2021-2022 Devin Acker\n\nMod4Play library - Copyright (c) 2022 Olav S\xF8rensen\n\nminivorbis library - Copyright (c) 2020 Eduardo Bart\n                     Copyright (c) 2002-2020 Xiph.org Foundation\n\n===========================================================================================\nCC 1.0 Universal License\n===========================================================================================\n\nminimp3 library - lieff\n\n\"ProtoSquare!\" soundfont - Yingchun Soul\n\n===========================================================================================\nCC-BY-3.0 Unported License\n===========================================================================================\n\nGerman Shepherd Dog Sprites - Copyright (c) 2017 Nash Muhandes\n\n===========================================================================================\nCC-BY-NC-4.0 International License\n===========================================================================================\n\nREKKR (various assets) - Copyright (c) 2021 Mockingbird Softworks\n\n===========================================================================================\nCC-BY-SA-4.0 International License\n===========================================================================================\n\n\"Bonkers for Bits\" soundfont - Copyright (c) Marcel J. Therrien\n\n\"DMXOPL\" and \"DMXPOL3\" instrument banks - Copyright (c) ConSiGno\n\n===========================================================================================\nGPL2 License\n===========================================================================================\n\n\"Adplug\" instrument bank - Copyright (C) 1999, 2000, 2001 Simon Peter, et al.\n\nAJBSP - Copyright (c) 2000-2023 Andrew Apted, et al\n        Copyright (c) 1994-1998 Colin Reed\n        Copyright (c) 1997-1998 Lee Killough\n\nCOAL -  Copyright (c) 2009-2023 Andrew Apted, et al\n        Copyright (c) 1996-1997 Id Software, Inc.\n\nDDF library - Copyright (c) 1999-2023 The EDGE Team\n\nDEHACKED library (formerly DEH_EDGE) - Copyright (c) 2004-2023 The EDGE Team\n\nEC_VOXELIB library - Copyright (c) 2022-2023 The EDGE Team\n\nEDGE-Classic - Copyright (c) 1999-2023 The EDGE Team\n\nEPI library - Copyright (c) 2002-2023 The EDGE Team\n\nFluidlite library - Copyright (c) 2016 Robin Lobel\n\nGame Music Emu - Copyright (c) 2003-2009 Shay Green\n\nSuperFastHash - Copyright (c) 2004-2010 Paul Hsieh\n\nXMIDI library - Copyright (c) 2015-2022 Vitaly Novichkov\n                Copyright (c) 2015-2016 WildMIDI Developers\n                Copyright (c) 2014 Bret Curtis\n                Copyright (c) 2001 Ryan Nunn\n\n===========================================================================================\nMIT License\n===========================================================================================\n\n\"16-Bit Game Station\" soundfont - Copyright (c) 2022 Yingchun Soul\n\nBW_Midi_Sequencer library - Copyright (c) 2015-2022 Vitaly Novichkov\n\ngl4es library - Copyright (c) 2016-2018 Sebastien Chevalier\n\t\t\t\tCopyright (c) 2013-2016 Ryan Hileman\n\nglad library - Copyright (c) 2013-2022 David Herberth\n\nminiz library - Copyright (c) 2013-2014 RAD Game Tools and Valve Software\n\t\t\t\tCopyright (c) 2010-2014 Rich Geldreich and Tenacious Software LLC\n\nPNPOLY algorithm - Copyright (c) 1970-2003 Wm. Randolph Franklin\n\n\"WadSmoosh\" instrument bank - Copyright (c) 2016-2020 JP LeBreton\n\n\"C++ implementation of a fast Gaussian blur algorithm by Ivan Kutskir - Integer Version\"\n    - Copyright (C) 2017 Basile Fraboni\n    - Copyright (C) 2014 Ivan Kutskir\n\n\n===========================================================================================\nPublic Domain\n===========================================================================================\n\nFraction.hpp - Bisqwit\n\n\"GMGSx\" soundfont (renamed to default.sf2) - Kenneth Rundt\n\ndr_wav and dr_flac libraries - David Reid\n\nstb_image, stb_image_write, stb_rect_pack and stb_truetype libraries - Sean Barrett\n\n\"Unicode Processing with C++0x\" Conversion Classes - Andrew Choi\n\n===========================================================================================\nWidePix License\n===========================================================================================\n\nWidePix (various assets) - Copyright (c) 2020-2021 Nash Muhandes\n\n===========================================================================================\nWTF License\n===========================================================================================\n\ncrsid library - Copyright (c) 2022 Hermit (Mihaly Horvath)\n\n===========================================================================================\nzlib License\n===========================================================================================\n\nSDL2 library - Copyright (c) 1997-2020 Sam Lantinga\n";
/* harmony default export */ var licenses = (licenses_LicenseModal);
// CONCATENATED MODULE: ./components/player/index.tsx
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function player_typeof(obj) { "@babel/helpers - typeof"; return player_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, player_typeof(obj); }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return player_typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (player_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (player_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }






var defaultIWad = "freedoom2.wad";
var deathmatchIWad = "freedm.wad";
var player_config = {
  indexDBName: '/edge-classic'
};
function getCookie(cname) {
  var name = cname + "=";
  var ca;
  // prerender guard
  if (typeof window !== 'undefined') {
    ca = document.cookie.split(';');
  }
  if (!ca) {
    return "";
  }
  for (var i = 0; i < ca.length; i++) {
    var c = ca[i];
    while (c.charAt(0) == ' ') {
      c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
      return c.substring(name.length, c.length);
    }
  }
  return "";
}
var player_WadHandler = /*#__PURE__*/function () {
  function WadHandler(config) {
    _classCallCheck(this, WadHandler);
    _defineProperty(this, "wadState", signals_core_module_u(undefined));
    _defineProperty(this, "config", void 0);
    this.config = config;
  }
  _createClass(WadHandler, [{
    key: "error",
    value: function error(message) {
      alert(message);
      console.error(message);
      console.trace();
    }
  }, {
    key: "setWads",
    value: function setWads(wads) {
      this.wadState.value = wads;
    }
  }, {
    key: "uploadWads",
    value: function () {
      var _uploadWads = _asyncToGenerator(function* (files) {
        var _this = this;
        var wads = [];
        var _loop = function* _loop() {
          var file = files[i];
          var database;
          try {
            database = yield _this.openDatabase();
            if (!database) {
              _this.error("Unable to open database");
              return {
                v: void 0
              };
            }
          } catch (e) {
            var _database;
            _this.error(e);
            (_database = database) === null || _database === void 0 ? void 0 : _database.close();
            return {
              v: void 0
            };
          }
          var upload = new Promise(function (resolve, reject) {
            var reader = new FileReader();
            reader.readAsArrayBuffer(file);
            reader.onload = function (e) {
              var bits = e.target.result;
              var contents = new Uint8Array(bits);
              var iwad = contents[0] === 73;
              var trans = database.transaction(['FILE_DATA'], 'readwrite');
              var path = "".concat(_this.config.indexDBName, "/").concat(file.name);
              var addReq = trans.objectStore('FILE_DATA').put({
                timestamp: new Date(),
                mode: 33206,
                contents: contents
              }, path);
              addReq.onerror = function (e) {
                reject("Error storing wad data");
              };
              trans.oncomplete = function (e) {
                resolve({
                  wadName: file.name,
                  isIWAD: iwad
                });
              };
            };
            reader.onerror = function (e) {
              reject("Error reading wad");
            };
          });
          try {
            var _database2;
            var wad = yield upload;
            (_database2 = database) === null || _database2 === void 0 ? void 0 : _database2.close();
            database = undefined;
            wads.push(wad);
          } catch (e) {
            _this.error(e);
          } finally {
            var _database3;
            (_database3 = database) === null || _database3 === void 0 ? void 0 : _database3.close();
          }
        };
        for (var i = 0; i < files.length; i++) {
          var _ret = yield* _loop();
          if (player_typeof(_ret) === "object") return _ret.v;
        }
        this.setWads(wads.length ? wads : undefined);
      });
      function uploadWads(_x) {
        return _uploadWads.apply(this, arguments);
      }
      return uploadWads;
    }()
  }, {
    key: "openDatabase",
    value: function () {
      var _openDatabase = _asyncToGenerator(function* () {
        var _this2 = this;
        return new Promise(function (resolve, reject) {
          // build pre-render guard
          if (typeof window !== 'undefined') {
            var dbrequest = window.indexedDB.open(_this2.config.indexDBName);
            dbrequest.onerror = function (e) {
              reject("unable to load database ".concat(_this2.config.indexDBName));
            };
            dbrequest.onupgradeneeded = function (e) {
              console.log("upgrade needed");
              var db = e.target.result;
              if (!db.objectStoreNames.contains("FILE_DATA")) {
                console.log("Creating FILE_DATA object store");
                var store = db.createObjectStore("FILE_DATA", {});
                store.createIndex("timestamp", "timestamp", {
                  unique: false
                });
              }
            };
            dbrequest.onsuccess = function (e) {
              console.log("db open");
              var db = e.target.result;
              resolve(db);
            };
          }
        });
      });
      function openDatabase() {
        return _openDatabase.apply(this, arguments);
      }
      return openDatabase;
    }()
  }], [{
    key: "singleton",
    get: function get() {
      if (!WadHandler.instance) {
        WadHandler.instance = new WadHandler(player_config);
      }
      return WadHandler.instance;
    }
  }]);
  return WadHandler;
}();
_defineProperty(player_WadHandler, "instance", void 0);
var projects = [{
  name: "Operation: Arctic Wolf Revisited",
  image: "./assets/images/articwolf.png",
  link: "https://www.moddb.com/mods/edge-classic-add-ons/downloads/arctic-wolf-revisited"
}, {
  name: "Astral Pathfinder",
  image: "./assets/images/astralpathfinder.png",
  link: "https://www.moddb.com/mods/edge-classic-add-ons/downloads/astral-pathfinder1"
}, {
  name: "Aliens: Stranded",
  image: "./assets/images/aliensstranded.png",
  link: "https://www.moddb.com/mods/edge-classic-add-ons/downloads/aliens-stranded"
}];
var player_WadChooser = function WadChooser() {
  var _getCookie$trim, _getCookie;
  var _useState = h(false),
    _useState2 = _slicedToArray(_useState, 2),
    showLicense = _useState2[0],
    setShowLicense = _useState2[1];
  var pelements = projects.map(function (p) {
    return Object(external_preact_["h"])("a", {
      href: p.link,
      target: "_blank",
      style: "display:flex;flex:1;flex-direction:column;height:100%;align-items:flex-end"
    }, Object(external_preact_["h"])("div", {
      style: {
        display: "flex",
        flex: 0
      }
    }, Object(external_preact_["h"])("div", {
      style: {
        paddingTop: 12,
        paddingBottom: 4,
        fontSize: 14,
        whiteSpace: "pre",
        fontWeight: "normal"
      }
    }, p.name)), Object(external_preact_["h"])("div", {
      style: {
        display: "flex",
        position: "relative",
        flexGrow: 1,
        width: "100%"
      }
    }, Object(external_preact_["h"])("img", {
      style: "width:100%;height:100%;object-fit:cover;position:absolute",
      src: p.image
    })));
  });
  return Object(external_preact_["h"])("div", {
    style: {
      display: "flex",
      width: "100%",
      maxWidth: "1440px",
      padding: 24,
      paddingLeft: 42
    }
  }, showLicense && Object(external_preact_["h"])(licenses, {
    onClose: function onClose() {
      return setShowLicense(false);
    }
  }), Object(external_preact_["h"])("div", {
    style: {
      display: "flex",
      flexGrow: 1
    }
  }, Object(external_preact_["h"])("div", {
    style: {
      display: "flex",
      width: "80%"
    }
  }, Object(external_preact_["h"])("div", {
    style: {
      display: "flex",
      flexDirection: "column",
      justifyContent: "start"
    }
  }, Object(external_preact_["h"])("div", {
    style: {
      display: "flex"
    }
  }, Object(external_preact_["h"])("div", {
    style: {
      fontSize: 18,
      fontWeight: "normal",
      paddingBottom: 24,
      width: 800
    }
  }, "Play EDGE-Classic in your browser by selecting an option below:")), Object(external_preact_["h"])("div", {
    style: {
      display: "flex",
      alignItems: "center"
    }
  }, Object(external_preact_["h"])("button", {
    style: "font-size:18px;width:292px;height:48px;padding:12px",
    onClick: function onClick() {
      player_WadHandler.singleton.setWads([{
        wadName: defaultIWad,
        isIWAD: true
      }]);
    }
  }, "Play Freedoom")), Object(external_preact_["h"])("div", {
    style: {
      paddingTop: 24
    }
  }), Object(external_preact_["h"])("div", {
    style: {
      display: "flex",
      alignItems: "center"
    }
  }, Object(external_preact_["h"])("button", {
    style: "font-size:18px;width:292px;height:48px;padding:12px",
    onClick: function onClick() {
      player_WadHandler.singleton.setWads([{
        wadName: deathmatchIWad,
        isIWAD: true
      }]);
    }
  }, "Play Bot Death Match")), Object(external_preact_["h"])("div", {
    style: {
      paddingTop: 24
    }
  }), Object(external_preact_["h"])("div", {
    style: {
      display: "flex",
      alignItems: "center"
    }
  }, Object(external_preact_["h"])("button", {
    style: "font-size:18px;width:292px;height:48px;padding:12px",
    onClick: function onClick() {
      document.getElementById('getWadFile').click();
    }
  }, "Play Wad, EPK, or Zip files")), Object(external_preact_["h"])("div", {
    style: {
      paddingTop: 24
    }
  }), Object(external_preact_["h"])("textarea", {
    style: "font-size:12px;width:292px;height:48px",
    placeholder: "Enter custom command line",
    spellcheck: false,
    onChange: function onChange(ev) {
      var _ref, _ev$target, _ev$target$value, _ev$target2;
      var value = (_ref = ev !== null && ev !== void 0 && (_ev$target = ev.target) !== null && _ev$target !== void 0 && (_ev$target$value = _ev$target.value) !== null && _ev$target$value !== void 0 && _ev$target$value.length ? ev === null || ev === void 0 ? void 0 : (_ev$target2 = ev.target) === null || _ev$target2 === void 0 ? void 0 : _ev$target2.value : undefined) === null || _ref === void 0 ? void 0 : _ref.trim().replace("\n", " ");
      if (value !== null && value !== void 0 && value.length) {
        document.cookie = "customCommandLineCookie=".concat(value, "; SameSite=None; Secure");
      } else {
        document.cookie = "customCommandLineCookie=; SameSite=None; Secure";
      }
    }
  }, (_getCookie$trim = (_getCookie = getCookie("customCommandLineCookie")) === null || _getCookie === void 0 ? void 0 : _getCookie.trim()) !== null && _getCookie$trim !== void 0 ? _getCookie$trim : ""), Object(external_preact_["h"])("div", {
    style: {
      paddingTop: 128
    }
  }), Object(external_preact_["h"])("div", {
    style: {
      display: "flex",
      alignItems: "center"
    }
  }, Object(external_preact_["h"])("button", {
    style: "font-size:18px;width:292px;height:48px;padding:12px",
    onClick: function onClick() {
      setShowLicense(true);
    }
  }, "Show Licenses"))), Object(external_preact_["h"])("input", {
    id: "getWadFile",
    style: "display:none",
    type: "file",
    multiple: true,
    onChange: function onChange(e) {
      var files = Array.from(e.target.files);
      if (files.length === 0) {
        e.preventDefault();
        return;
      }
      var badFile = files.find(function (f) {
        var check = f.name.toLowerCase();
        if (!check.endsWith(".wad") && !check.endsWith(".zip") && !check.endsWith(".epk") && !check.endsWith(".7z")) {
          return true;
        }
        return false;
      });
      if (badFile) {
        e.preventDefault();
        alert("Please select wad, epk, or zip files, ".concat(badFile.name, " is invalid"));
        return;
      }
      var wadHandler = player_WadHandler.singleton;
      wadHandler.uploadWads(files);
    }
  }))), Object(external_preact_["h"])("div", {
    style: {
      display: "flex",
      flexGrow: 1,
      width: "50%",
      flexDirection: "column"
    }
  }, Object(external_preact_["h"])("div", {
    style: {
      display: "flex",
      flex: "0 0 24px",
      position: "relative"
    }
  }, Object(external_preact_["h"])("div", {
    style: {
      position: "absolute",
      fontSize: 18,
      fontWeight: 400,
      whiteSpace: "pre"
    }
  }, "Suggested Projects")), Object(external_preact_["h"])("div", {
    style: {
      display: "flex",
      flexShrink: 0,
      flexGrow: 1,
      flexDirection: "column"
    }
  }, pelements)));
};
var player_EdgeClassic = function EdgeClassic() {
  var canvasRef = _(null);
  var canvasContainerRef = _(null);
  var _useState3 = h({
      loading: true
    }),
    _useState4 = _slicedToArray(_useState3, 2),
    state = _useState4[0],
    setState = _useState4[1];
  var wadState = player_WadHandler.singleton.wadState.value;
  var pointerLockChange = function pointerLockChange() {
    var canvas = canvasRef === null || canvasRef === void 0 ? void 0 : canvasRef.current;
    var lock = canvas === document.pointerLockElement;

    // disabled for embedded classic site
    //Module._I_WebSetFullscreen(lock ? 1 : 0);

    /*
    // It feels good to open the menu when releasing pointer lock
    // though, it makes the interaction tricky to close the menu
    if (!lock) {
    	Module._I_WebOpenGameMenu(1);
    }
    */
  };

  hooks_module_p(function () {
    var canvas = canvasRef === null || canvasRef === void 0 ? void 0 : canvasRef.current;
    var canvasContainer = canvasContainerRef === null || canvasContainerRef === void 0 ? void 0 : canvasContainerRef.current;
    var iwad = wadState === null || wadState === void 0 ? void 0 : wadState.find(function (w) {
      return w.isIWAD;
    });
    if (!iwad) {
      iwad = {
        wadName: defaultIWad,
        isIWAD: true
      };
    }
    console.log("WadState", wadState);

    /*
    let iwad = defaultIWad;
    if (wadState.wadName === deathmatchIWad) {
    	iwad = deathmatchIWad;
    }
    		if (wadState.wadName !== iwad && wadState.isIWAD) {
    	iwad = `edge-classic/${wadName}`;
    }
    */

    if (!iwad) {
      throw "Unable to get iwad";
    }
    if (!canvasContainer) {
      throw "Unable to get canvas container";
    }
    if (!canvas) {
      throw "Unable to get canvas";
    }
    var syncCanvasSize = function syncCanvasSize() {
      var w = Math.floor(canvasContainer.offsetWidth);
      var h = Math.floor(canvasContainer.offsetHeight);
      console.log("Setting canvas size", w, h);
      canvas.style.width = "".concat(w, "px");
      canvas.style.height = "".concat(h, "px");
      canvas.width = w;
      canvas.height = h;
    };

    // initial update
    syncCanvasSize();
    var canvasSync = function canvasSync() {
      syncCanvasSize();
      Module._I_WebSyncScreenSize();
    };
    document.addEventListener("pointerlockchange", pointerLockChange, false);
    var doSyncTimeout;
    window.addEventListener("resize", function (ev) {
      clearTimeout(doSyncTimeout);
      doSyncTimeout = setTimeout(canvasSync, 250);
    });
    canvas.addEventListener("webglcontextlost", function (e) {
      alert('FIXME: WebGL context lost, please reload the page');
      e.preventDefault();
    }, false);
    var iwadPath = iwad.wadName;
    if (iwadPath !== defaultIWad && iwadPath !== deathmatchIWad) {
      iwadPath = "edge-classic/".concat(iwadPath);
    }
    var args = ["-home", "edge-classic", "-windowed", "-width", canvas.offsetWidth.toString(), "-height", canvas.offsetHeight.toString(), "-iwad", iwadPath];
    wadState.forEach(function (w) {
      if (w.isIWAD) {
        return;
      }
      args.push("-file");
      args.push("edge-classic/".concat(w.wadName));
    });
    var customCommandLine = getCookie("customCommandLineCookie");
    if (!(customCommandLine !== null && customCommandLine !== void 0 && customCommandLine.length)) {
      if (iwad.wadName === deathmatchIWad) {
        args.push.apply(args, ["-deathmatch", "1", "-nomonsters", "-skill", "2", "-bots", "1", "-warp", "map03"]);
      }
    } else {
      args.push.apply(args, _toConsumableArray(customCommandLine.split(" ")));
    }
    edge_classic({
      edgePostInit: function edgePostInit() {
        console.log("Post-Init!");
        // jump
        if (!args.find(function (a) {
          return a.startsWith("-warp");
        })) {
          Module._I_WebOpenGameMenu(1);
        }
        setState(_objectSpread(_objectSpread({}, state), {}, {
          loading: false
        }));
      },
      onFullscreen: function onFullscreen() {
        /*
        console.log("On fullscreen");
        const elements = document.querySelectorAll(".playercontrols");
        elements?.forEach(e => {
        	(e as any).style.display = "flex";
        });
        */
      },
      preEdgeSyncFS: function preEdgeSyncFS() {},
      postEdgeSyncFS: function postEdgeSyncFS() {},
      arguments: args,
      preInit: function preInit() {
        console.log("Pre-Init");
      },
      preRun: [],
      postRun: [],
      print: function () {
        return function (text) {
          text = Array.prototype.slice.call(arguments).join(' ');
          console.log(text);
        };
      }(),
      printErr: function printErr(text) {
        text = Array.prototype.slice.call(arguments).join(' ');
        console.error(text);
      },
      canvas: canvas,
      setStatus: function setStatus(text) {
        console.log("status", text);
      },
      monitorRunDependencies: function monitorRunDependencies(left) {
        console.log(left);
      }
    }).then(function (module) {
      globalThis.Module = module;
      module.canvas = canvas;
    });
    return function () {};
  }, []);
  return Object(external_preact_["h"])("div", {
    id: "canvas-container",
    ref: canvasContainerRef,
    style: {
      display: "flex",
      width: "100%",
      height: "100%",
      position: "relative"
    }
  }, Object(external_preact_["h"])("canvas", {
    id: "canvas",
    ref: canvasRef,
    style: {
      visibility: state.loading ? "hidden" : "visible"
    },
    onClick: /*#__PURE__*/function () {
      var _ref2 = _asyncToGenerator(function* (ev) {
        var lock = canvasRef.current === document.pointerLockElement;
        if (!lock) {
          try {
            var _canvasRef$current;
            yield (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.requestPointerLock();
          } catch (err) {
            console.error(err);
          }
        }
      });
      return function (_x2) {
        return _ref2.apply(this, arguments);
      };
    }()
  }), !!state.loading && Object(external_preact_["h"])("div", {
    style: {
      position: "absolute",
      display: "flex",
      width: "100%",
      height: "100%",
      justifyContent: "center",
      alignItems: "center"
    }
  }, Object(external_preact_["h"])("div", {
    class: style.loading
  }, Object(external_preact_["h"])("span", {
    style: "--i:1"
  }, "L"), Object(external_preact_["h"])("span", {
    style: "--i:2"
  }, "O"), Object(external_preact_["h"])("span", {
    style: "--i:3"
  }, "A"), Object(external_preact_["h"])("span", {
    style: "--i:4"
  }, "D"), Object(external_preact_["h"])("span", {
    style: "--i:5"
  }, "I"), Object(external_preact_["h"])("span", {
    style: "--i:6"
  }, "N"), Object(external_preact_["h"])("span", {
    style: "--i:7"
  }, "G"), Object(external_preact_["h"])("span", {
    style: "--i:8"
  }, "."), Object(external_preact_["h"])("span", {
    style: "--i:9"
  }, "."), Object(external_preact_["h"])("span", {
    style: "--i:10"
  }, "."))));
};
// floating player controls, not currently used
// {!state.loading && <PlayerControls />}

var player_PlayerControls = function PlayerControls() {
  var _useState5 = h(false),
    _useState6 = _slicedToArray(_useState5, 2),
    fullscreen = _useState6[0],
    setFullscreen = _useState6[1];
  return Object(external_preact_["h"])("div", {
    className: "playercontrols",
    style: {
      display: "flex",
      width: "100%",
      padding: "24px",
      zIndex: 1,
      position: "absolute"
    }
  }, Object(external_preact_["h"])("div", {
    className: "playercontrols",
    style: {
      display: "flex",
      width: "100%"
    }
  }), Object(external_preact_["h"])("div", {
    className: "playercontrols",
    style: {
      display: "flex",
      flexShrink: 1,
      paddingRight: "48px"
    }
  }, Object(external_preact_["h"])("button", {
    style: {
      opacity: 1
    },
    className: "playercontrols",
    onClick: function onClick() {
      Module._I_WebSetFullscreen(fullscreen ? 0 : 1, setFullscreen(!fullscreen));
    }
  }, fullscreen ? "Minimize" : "Maximize")));
};
var player_Player = function Player() {
  var wadHandler = player_WadHandler.singleton;
  var wadState = wadHandler.wadState.value;
  return Object(external_preact_["h"])("div", {
    style: {
      display: "flex",
      width: "100%",
      justifyContent: "center"
    }
  }, !(wadState !== null && wadState !== void 0 && wadState.length) && Object(external_preact_["h"])(player_WadChooser, null), !!(wadState !== null && wadState !== void 0 && wadState.length) && Object(external_preact_["h"])(player_EdgeClassic, null));
};
/* harmony default export */ var player = (player_Player);
// CONCATENATED MODULE: ./components/app.tsx


var app_App = function App() {
  return Object(external_preact_["h"])("div", {
    id: "app"
  }, Object(external_preact_["h"])("main", null, Object(external_preact_["h"])(player, null)));
};
/* harmony default export */ var app = (app_App);
// CONCATENATED MODULE: ./index.ts


/* harmony default export */ var index = __webpack_exports__["default"] = (app);

/***/ })

/******/ });
//# sourceMappingURL=ssr-bundle.js.map