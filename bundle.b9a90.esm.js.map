{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/preact-cli/src/lib/entry.js","webpack:///../node_modules/preact/src/util.js","webpack:///../node_modules/preact/src/create-element.js","webpack:///../node_modules/preact/src/component.js","webpack:///../node_modules/preact/src/diff/children.js","webpack:///../node_modules/preact/src/diff/props.js","webpack:///../node_modules/preact/src/diff/index.js","webpack:///../node_modules/preact/src/render.js","webpack:///../node_modules/preact/src/clone-element.js","webpack:///../node_modules/preact/src/create-context.js","webpack:///../node_modules/preact/src/options.js","webpack:///../node_modules/preact/src/constants.js","webpack:///../node_modules/preact/src/diff/catch-error.js","webpack:///../node_modules/preact/hooks/src/index.js","webpack:///../node_modules/@preact/signals-core/src/index.ts","webpack:///../node_modules/@preact/signals/src/index.ts","webpack:///./components/player/style.css","webpack:///./edge-classic.js","webpack:///./components/player/index.tsx","webpack:///./index.ts","webpack:///./components/app.tsx"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","h","render","hydrate","Preact","interopDefault","default","normalizeURL","url","length","navigator","serviceWorker","register","__webpack_public_path__","require","root","document","getElementById","body","firstElementChild","init","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","innerHTML","CLI_DATA","currentURL","location","pathname","u","v","parentNode","removeChild","y","f","arguments","children","defaultProps","type","props","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","current","_","k","this","context","b","indexOf","g","base","push","w","__r","debounceRendering","e","sort","shift","__P","L","__n","ownerSVGElement","M","x","a","Array","isArray","A","C","$","nextSibling","S","O","P","some","appendChild","insertBefore","I","setProperty","test","T","style","cssText","replace","toLowerCase","slice","addEventListener","z","j","removeEventListener","removeAttribute","setAttribute","event","H","contextType","__E","q","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","diffed","localName","nodeType","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","checked","unmount","componentWillUnmount","B","firstChild","D","E","F","Consumer","Provider","splice","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","resolve","setTimeout","__H","__V","__N","filter","every","clearTimeout","cancelAnimationFrame","requestAnimationFrame","Error","U","useSignal","__$f","__$u","peek","subscribe","valueOf","toString","set","displayName","defineProperties","configurable","__np","_scriptDir","createEdgeModule","currentScript","src","undefined","assert","condition","text","abort","updateMemoryViews","wasmMemory","buffer","Module","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","Uint8Array","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","keepRuntimeAlive","noExitRuntime","runtimeKeepaliveCounter","addRunDependency","runDependencies","removeRunDependency","runDependencyWatcher","clearInterval","dependenciesFulfilled","callback","what","err","ABORT","EXITSTATUS","WebAssembly","RuntimeError","readyPromiseReject","isDataURI","filename","startsWith","dataURIPrefix","getBinary","file","wasmBinaryFile","wasmBinary","readBinary","instantiateArrayBuffer","binaryFile","imports","receiver","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","fetch","credentials","response","catch","getBinaryPromise","binary","instantiate","instance","reason","ExitStatus","status","message","callRuntimeCallbacks","callbacks","dynCall","sig","ptr","args","apply","concat","dynCallLegacy","setValue","endsWith","tempI64","tempDouble","Math","abs","floor","ceil","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","set_adjusted_ptr","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","randomFill","view","crypto","getRandomValues","initRandomFill","lengthBytesUTF8","str","len","charCodeAt","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","endIdx","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","mmapAlloc","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endPtr","UTF8Decoder","decode","subarray","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","convertI32PairToI53Checked","lo","hi","NaN","stringToUTF8","outPtr","isLeapYear","year","ydayFromDate","date","getFullYear","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","getMonth","getDate","stringToNewUTF8","size","ret","_malloc","_emscripten_set_main_loop_timing","Browser","mainLoop","timingMode","timingValue","func","running","scheduler","timeUntilNextTick","max","tickStartTime","_emscripten_get_now","runner","method","setImmediate","setImmediates","emscriptenMainLoopMessageId","target","stopPropagation","postMessage","setMainLoop","browserIterationFunc","fps","simulateInfiniteLoop","arg","noSetTiming","checkIsRunning","thisMainLoopId","currentlyRunningMainloop","queue","start","Date","now","blocker","remainingBlockers","remaining","next","counted","out","updateStatus","currentFrameNumber","GL","newRenderingFrameStarted","runIter","SDL","audio","queueNewAudioData","handleException","quit_","exitJS","code","callUserCallback","_exit","maybeExit","safeSetTimeout","timeout","warnOnce","shown","readEmAsmArgs","sigPtr","buf","readEmAsmArgsArray","withStackSave","stack","stackSave","stackRestore","setLetterbox","element","topBottom","leftRight","paddingLeft","paddingRight","paddingTop","paddingBottom","findEventTarget","cString","specialHTMLTargets","findCanvasEventTarget","stringToUTF8OnStack","stackAlloc","getCanvasElementSize","width","height","canvas","_emscripten_get_canvas_element_size","id","_emscripten_set_canvas_element_size","setCanvasElementSize","controlTransferredOffscreen","jstoi_q","parseInt","softFullscreenResizeWebGLRenderTarget","topMargin","dpr","devicePixelRatio","inHiDPIFullscreenMode","currentFullscreenStrategy","canvasResolutionScaleMode","inAspectRatioFixedFullscreenMode","scaleMode","inPixelPerfectFullscreenMode","inCenteredWithoutScalingFullscreenMode","screenWidth","round","innerWidth","screenHeight","innerHeight","canvasSize","GLctxObject","GLctx","viewport","canvasResizedCallback","dynCall_iiii","canvasResizedCallbackUserData","getBoundingClientRect","JSEvents_resizeCanvasForFullscreen","strategy","restoreOldStyle","fullscreenElement","webkitFullscreenElement","oldWidth","oldHeight","oldCssWidth","oldCssHeight","backgroundColor","oldBackgroundColor","oldDocumentBackgroundColor","oldPaddingLeft","oldPaddingRight","oldPaddingTop","oldPaddingBottom","marginLeft","oldMarginLeft","marginRight","oldMarginRight","marginTop","oldMarginTop","marginBottom","oldMarginBottom","margin","oldDocumentBodyMargin","documentElement","overflow","oldDocumentOverflow","scroll","oldDocumentScroll","imageRendering","oldImageRendering","registerRestoreOldStyle","cssWidth","softFullscreen","screen","cssHeight","rect","windowedCssWidth","windowedCssHeight","windowedRttWidth","windowedRttHeight","desiredCssHeight","desiredCssWidth","filteringMode","dpiScale","newWidth","newHeight","JSEvents_requestFullscreen","requestFullscreen","webkitRequestFullscreen","JSEvents","fullscreenEnabled","Element","ALLOW_KEYBOARD_INPUT","requestPointerLock","fillGamepadEventData","eventStruct","timestamp","axes","buttons","pressed","connected","index","mapping","_glBindVertexArray","vao","bindVertexArray","vaos","ibo","getParameter","currentElementArrayBufferBinding","convertI32PairToI53","_glDeleteVertexArrays","deleteVertexArray","_glDrawArraysInstanced","first","count","primcount","drawArraysInstanced","_glDrawBuffers","bufs","bufArray","tempFixedLengthArray","drawBuffers","_glDrawElements","indices","calcBufLength","getTempIndexBuffer","bindBuffer","bufferSubData","preDrawHandleClientVertexAttribBindings","drawElements","postDrawHandleClientVertexAttribBindings","_glDrawElementsInstanced","drawElementsInstanced","__glGenObject","buffers","createFunction","objectTable","getNewId","recordError","_glGenVertexArrays","arrays","__glGetActiveAttribOrUniform","funcName","program","bufSize","info","programs","numBytesWrittenExclNull","writeI53ToI64","num","emscriptenWebGLGet","name_","formats","currentContext","version","getSupportedExtensions","result","_glGetFloatv","emscriptenWebGLGetIndexed","getIndexedParameter","WebGLBuffer","_glGetQueryObjecti64vEXT","pname","params","param","query","queries","disjointTimerQueryExt","getQueryParameter","_glGetQueryObjectivEXT","webglGetLeftBracePos","lastIndexOf","webglPrepareUniformLocationsBeforeFirstUse","uniformLocsById","uniformSizeAndIdsByName","uniformArrayNamesById","getProgramParameter","getActiveUniform","nm","sz","lb","arrayName","uniformIdCounter","webglGetUniformLocation","currentProgram","webglLoc","getUniformLocation","emscriptenWebGLGetUniform","getUniform","emscriptenWebGLGetVertexAttrib","clientBuffers","enabled","getVertexAttrib","fround","_glGetVertexAttribIiv","_glIsVertexArray","array","isVertexArray","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","clz32","BYTES_PER_ELEMENT","emscriptenWebGLGetTexPixelData","format","pixels","byteSize","sizePerPixel","colorChannelsInGlTextureFormat","bytes","alignment","alignedRowSize","roundedToNextMultipleOf","computeUnpackAlignedImageSize","unpackAlignment","_glVertexAttribDivisor","divisor","vertexAttribDivisor","emscripten_realloc_buffer","grow","byteLength","registerFocusEventCallback","userData","useCapture","callbackfunc","eventTypeId","eventTypeString","focusEvent","eventHandler","handlerFunc","nodeName","getNodeNameForTarget","preventDefault","registerOrRemoveHandler","registerFullscreenChangeEventCallback","fullscreenChangeEvent","mozFullScreenElement","msFullscreenElement","isFullscreen","reportedElement","previousFullscreenElement","clientWidth","clientHeight","fillFullscreenChangeEventData","registerGamepadEventCallback","gamepadEvent","allowsDeferredCalls","registerKeyEventCallback","keyEvent","keyEventData","timeStamp","ctrlKey","shiftKey","altKey","metaKey","repeat","charCode","keyCode","which","char","locale","fillMouseEventData","screenX","screenY","clientX","clientY","button","left","top","registerMouseEventCallback","mouseEvent","registerPointerlockChangeEventCallback","pointerlockChangeEvent","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","msPointerLockElement","fillPointerlockChangeEventData","registerTouchEventCallback","touchEvent","touches","et","isChanged","onTarget","identifier","changedTouches","targetTouches","targetRect","numTouches","pageX","pageY","registerVisibilityChangeEventCallback","visibilityChangeEvent","visibilityState","hidden","_emscripten_sleep","ms","Asyncify","handleSleep","wakeUp","getEnvStrings","strings","env","languages","thisProgram","ENV","_strftime","maxsize","tm","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","getTime","leap","currentMonth","daysInCurrentMonth","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","setDate","setMonth","setFullYear","addDays","tm_year","tm_yday","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_wday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","EXPANSION_RULES_2","substring","twelveHour","sum","arraySum","val","jan1","dec31","off","ahead","includes","runAndAbortIfError","run","arguments_","doRun","calledRun","FS","initialized","ignorePermissions","TTY","__ATINIT__","__ATMAIN__","readyPromiseResolve","shouldRunNow","entryFunction","_main","unshift","argc","argv","argv_ptr","callMain","cb","__ATPOSTRUN__","postRun","__ATPRERUN__","preRun","reject","expectedDataFileDownloads","metadata","fetchRemotePackage","packageName","packageSize","xhr","XMLHttpRequest","open","responseType","onprogress","total","loaded","addedTotal","dataFileDownloads","download","onerror","onload","statusText","responseURL","send","runWithFS","check","msg","processPackageData","arrayBuffer","ArrayBuffer","byteArray","compressedData","loadPackage","preloadFallback","error","console","REMOTE_PACKAGE_NAME","REMOTE_PACKAGE_SIZE","indexedDB","PACKAGE_UUID","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","self","IDB_RO","IDB_RW","DB_NAME","DB_VERSION","METADATA_STORE_NAME","PACKAGE_STORE_NAME","CHUNK_SIZE","preloadResults","errback","openRequest","onupgradeneeded","db","objectStoreNames","contains","deleteObjectStore","createObjectStore","onsuccess","openDatabase","getRequest","transaction","objectStore","checkCachedPackage","PACKAGE_PATH","PACKAGE_NAME","useCached","fromCache","packages","chunksDone","totalSize","chunkCount","chunks","chunkId","tempTyped","byteOffset","fetchCachedPackage","packageData","packageMeta","chunkSliceStart","nextChunkSliceStart","finishedChunks","putPackageRequest","put","putMetadataRequest","uuid","cacheRemotePackage","process","encodeURIComponent","REMOTE_PACKAGE_BASE","read_","readAsync","setWindowTitle","moduleOverrides","_extends","toThrow","scriptDirectory","href","substr","responseText","title","log","warn","path","__ATEXIT__","ASM_CONSTS","edgePostInit","$0","$1","homeIndex","homeDir","analyzePath","exists","mkdirTree","mount","IDBFS","syncfs","_I_WebMain","onFullscreen","edgePreSyncFS","edgePostSyncFS","AudioContext","webkitAudioContext","mediaDevices","getUserMedia","webkitGetUserMedia","ctx","elements","SDL2","capture","audioContext","listenOnce","resume","sampleRate","$2","$3","have_microphone","stream","silenceTimer","mediaStreamNode","createMediaStreamSource","scriptProcessorNode","createScriptProcessor","onaudioprocess","audioProcessingEvent","outputBuffer","getChannelData","fill","currentCaptureBuffer","inputBuffer","connect","destination","no_microphone","silenceBuffer","createBuffer","video","currentOutputBuffer","numChannels","numberOfChannels","channelData","tracks","getAudioTracks","removeTrack","disconnect","close","ctxCanvas","imageCtx","image","createImageData","dst","CanvasPixelArray","data32Data","data32","data8","putImageData","$4","hot_x","hot_y","getContext","toDataURL","urlBuf","alert","PATH","isAbs","charAt","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","normalize","isAbsolute","trailingSlash","split","join","dirname","dir","basename","lastSlash","paths","join2","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","end","fromParts","toParts","min","samePartsLength","outputParts","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","tty","node","rdev","ErrnoError","seekable","fsync","read","offset","get_char","bytesRead","write","put_char","default_tty_ops","prompt","readline","default_tty1_ops","MEMFS","ops_table","createNode","parent","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","prot","flags","allocated","dbs","DB_STORE_NAME","populate","getLocalSet","local","getRemoteSet","remote","reconcile","quit","values","getDB","req","fileStore","indexNames","createIndex","unique","isRealDir","toAbsolute","mountpoint","map","stat","pop","openKeyCursor","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","removeRemoteEntry","delete","done","errored","keys","e2","remove","oncomplete","reverse","LZ4","DIR_MODE","FILE_MODE","codec","MiniLZ4","sIdx","eIdx","token","literals_length","match_length","pos","maxInputSize","minMatch","hashShift","mfLimit","skipStrength","mlBits","mlMask","runMask","hasher","hashTable","empty","compressBound","isize","compress","dpos","dlen","anchor","findMatchAttempts","srcLength","sequenceLowBits","sequenceHighBits","hash","imul","ln","compressBlock","compressPackage","verify","temp","compressedChunks","successes","chunk","bound","compressed","compressedSize","back","uncompress","pack","preloadPlugin","files","createPath","handled","fullname","plugin","finish","readFile","written","currChunk","desired","chunkIndex","compressedStart","found","originalSize","startInChunk","endInChunk","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","opts","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","hashName","parentid","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","shared","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","completed","pseudo","mountRoot","mkdir","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","dontFollow","lstat","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","mmapFlags","munmap","ioctl","cmd","encoding","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","staticInit","getMode","canRead","canWrite","findObject","dontResolveLastLink","parentExists","parentPath","parentObject","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","writeChunks","chunkOffset","chunkSize","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","chunkNum","doXHR","setRequestHeader","overrideMimeType","_length","_chunkSize","fn","createPreloadedFile","dontCreateFile","preFinish","processData","handledByPreloadPlugin","noRunDep","dep","asyncLoad","TextDecoder","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","doMsync","addr","varargs","getStr","nowIsMonotonic","performance","pause","expected","expectedBlockers","pointerLock","moduleContextCreatedCallbacks","workers","pointerLockChange","initted","Blob","hasBlobConstructor","BlobBuilder","MozBlobBuilder","WebKitBlobBuilder","URLObject","URL","webkitURL","noImageDecoding","imagePlugin","getMimetype","bb","append","getBlob","createObjectURL","img","Image","complete","drawImage","preloadedImages","revokeObjectURL","audioPlugin","noAudioDecoding","preloadedAudios","fail","Audio","BASE","leftchar","leftbits","curr","PAD","encode64","exitPointerLock","ev","createContext","useWebGL","setInModule","webGLContextAttributes","contextHandle","contextAttributes","antialias","alpha","majorVersion","WebGL2RenderingContext","attribute","makeContextCurrent","destroyContext","fullscreenHandlersInstalled","lockPointer","resizeCanvas","fullscreenChange","canvasContainer","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","setWindowedCanvasSize","nextRAF","fakeRequestAnimationFrame","delay","RAF","safeRequestAnimationFrame","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","deltaY","deltaMode","mouseX","mouseY","mouseMovementX","mouseMovementY","lastTouches","calculateMouseEvent","cw","scrollX","pageXOffset","scrollY","pageYOffset","touch","adjustedX","adjustedY","coords","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","wNative","hNative","widthNative","heightNative","factor","removeProperty","EGL","errorCode","defaultDisplayInitialized","currentReadSurface","currentDrawSurface","depth","stencil","stringCache","setErrorCode","chooseConfig","display","attribList","config","config_size","numConfigs","lowLatency","counter","framebuffers","renderbuffers","textures","shaders","contexts","offscreenCanvases","samplers","transformFeedbacks","syncs","byteSizeByTypeRoot","byteSizeByType","stringiCache","lastError","table","MAX_TEMP_BUFFER_SIZE","numTempVertexBuffersPerSize","log2ceilLookup","generateTempBuffers","quads","largestIndex","tempVertexBufferCounters1","tempVertexBufferCounters2","tempVertexBuffers1","tempVertexBuffers2","tempIndexBuffers","ringbufferLength","ringbuffer1","ringbuffer2","tempQuadIndexBuffer","numIndexes","quadIndexes","bufferData","getTempVertexBuffer","sizeBytes","ringbuffer","nextFreeBufferIndex","vbo","prevVBO","prevIBO","vb","getSource","shader","string","source","stride","usedTempBuffers","resetBufferBinding","maxVertexAttribs","clientside","vertexAttribPointerAdaptor","normalized","currentArrayBufferBinding","getContextSafariWebGL2Fixed","fixedGetContext","ver","attrs","gl","WebGLRenderingContext","registerContext","handle","enableExtensionsByDefault","initExtensions","deleteContext","removeAllHandlersOnTarget","initExtensionsDone","ext","getExtension","webgl_enable_ANGLE_instanced_arrays","webgl_enable_OES_vertex_array_object","webgl_enable_WEBGL_draw_buffers","dibvbi","mdibvbi","webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance","multiDrawWebgl","webgl_enable_WEBGL_multi_draw","_eglWaitGL","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","runDeferredCalls","eventListenerFunc","jsEventHandler","webkitFullscreenEnabled","restoreOldWindowedStyle","_emscripten_glActiveTexture","x0","activeTexture","_emscripten_glAttachShader","attachShader","_emscripten_glBeginQuery","beginQuery","_emscripten_glBeginQueryEXT","_emscripten_glBeginTransformFeedback","beginTransformFeedback","_emscripten_glBindAttribLocation","bindAttribLocation","_emscripten_glBindBuffer","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","_emscripten_glBindBufferBase","bindBufferBase","_emscripten_glBindBufferRange","ptrsize","bindBufferRange","_emscripten_glBindFramebuffer","framebuffer","bindFramebuffer","_emscripten_glBindRenderbuffer","renderbuffer","bindRenderbuffer","_emscripten_glBindSampler","unit","sampler","bindSampler","_emscripten_glBindTexture","texture","bindTexture","_emscripten_glBindTransformFeedback","bindTransformFeedback","_emscripten_glBindVertexArray","_glBindVertexArrayOES","_emscripten_glBindVertexArrayOES","_emscripten_glBlendColor","x1","x2","x3","blendColor","_emscripten_glBlendEquation","blendEquation","_emscripten_glBlendEquationSeparate","blendEquationSeparate","_emscripten_glBlendFunc","blendFunc","_emscripten_glBlendFuncSeparate","blendFuncSeparate","_emscripten_glBlitFramebuffer","x4","x5","x6","x7","x8","x9","blitFramebuffer","_emscripten_glBufferData","usage","_emscripten_glBufferSubData","_emscripten_glCheckFramebufferStatus","checkFramebufferStatus","_emscripten_glClear","clear","_emscripten_glClearBufferfi","clearBufferfi","_emscripten_glClearBufferfv","drawbuffer","clearBufferfv","_emscripten_glClearBufferiv","clearBufferiv","_emscripten_glClearBufferuiv","clearBufferuiv","_emscripten_glClearColor","clearColor","_emscripten_glClearDepthf","clearDepth","_emscripten_glClearStencil","clearStencil","_emscripten_glClientWaitSync","sync","timeout_low","timeout_high","clientWaitSync","_emscripten_glColorMask","red","green","blue","colorMask","_emscripten_glCompileShader","compileShader","_emscripten_glCompressedTexImage2D","level","internalFormat","border","imageSize","compressedTexImage2D","_emscripten_glCompressedTexImage3D","compressedTexImage3D","_emscripten_glCompressedTexSubImage2D","xoffset","yoffset","compressedTexSubImage2D","_emscripten_glCompressedTexSubImage3D","zoffset","compressedTexSubImage3D","_emscripten_glCopyBufferSubData","copyBufferSubData","_emscripten_glCopyTexImage2D","copyTexImage2D","_emscripten_glCopyTexSubImage2D","copyTexSubImage2D","_emscripten_glCopyTexSubImage3D","copyTexSubImage3D","_emscripten_glCreateProgram","createProgram","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","_emscripten_glCreateShader","shaderType","createShader","_emscripten_glCullFace","cullFace","_emscripten_glDeleteBuffers","deleteBuffer","_emscripten_glDeleteFramebuffers","deleteFramebuffer","_emscripten_glDeleteProgram","deleteProgram","_emscripten_glDeleteQueries","ids","deleteQuery","_emscripten_glDeleteQueriesEXT","_emscripten_glDeleteRenderbuffers","deleteRenderbuffer","_emscripten_glDeleteSamplers","deleteSampler","_emscripten_glDeleteShader","deleteShader","_emscripten_glDeleteSync","deleteSync","_emscripten_glDeleteTextures","deleteTexture","_emscripten_glDeleteTransformFeedbacks","transformFeedback","deleteTransformFeedback","_emscripten_glDeleteVertexArrays","_glDeleteVertexArraysOES","_emscripten_glDeleteVertexArraysOES","_emscripten_glDepthFunc","depthFunc","_emscripten_glDepthMask","depthMask","_emscripten_glDepthRangef","depthRange","_emscripten_glDetachShader","detachShader","_emscripten_glDisable","disable","_emscripten_glDisableVertexAttribArray","disableVertexAttribArray","_emscripten_glDrawArrays","drawArrays","_emscripten_glDrawArraysInstanced","_glDrawArraysInstancedANGLE","_emscripten_glDrawArraysInstancedANGLE","_glDrawArraysInstancedARB","_emscripten_glDrawArraysInstancedARB","_glDrawArraysInstancedEXT","_emscripten_glDrawArraysInstancedEXT","_glDrawArraysInstancedNV","_emscripten_glDrawArraysInstancedNV","_emscripten_glDrawBuffers","_glDrawBuffersEXT","_emscripten_glDrawBuffersEXT","_glDrawBuffersWEBGL","_emscripten_glDrawBuffersWEBGL","_emscripten_glDrawElements","_emscripten_glDrawElementsInstanced","_glDrawElementsInstancedANGLE","_emscripten_glDrawElementsInstancedANGLE","_glDrawElementsInstancedARB","_emscripten_glDrawElementsInstancedARB","_glDrawElementsInstancedEXT","_emscripten_glDrawElementsInstancedEXT","_glDrawElementsInstancedNV","_emscripten_glDrawElementsInstancedNV","_emscripten_glDrawRangeElements","_emscripten_glEnable","enable","_emscripten_glEnableVertexAttribArray","enableVertexAttribArray","_emscripten_glEndQuery","endQuery","_emscripten_glEndQueryEXT","_emscripten_glEndTransformFeedback","endTransformFeedback","_emscripten_glFenceSync","fenceSync","_emscripten_glFinish","_emscripten_glFlush","flush","_emscripten_glFramebufferRenderbuffer","attachment","renderbuffertarget","framebufferRenderbuffer","_emscripten_glFramebufferTexture2D","textarget","framebufferTexture2D","_emscripten_glFramebufferTextureLayer","layer","framebufferTextureLayer","_emscripten_glFrontFace","frontFace","_emscripten_glGenBuffers","_emscripten_glGenFramebuffers","_emscripten_glGenQueries","_emscripten_glGenQueriesEXT","_emscripten_glGenRenderbuffers","_emscripten_glGenSamplers","_emscripten_glGenTextures","_emscripten_glGenTransformFeedbacks","_emscripten_glGenVertexArrays","_emscripten_glGenVertexArraysOES","_emscripten_glGenerateMipmap","generateMipmap","_emscripten_glGetActiveAttrib","_emscripten_glGetActiveUniform","_emscripten_glGetActiveUniformBlockName","uniformBlockIndex","uniformBlockName","getActiveUniformBlockName","_emscripten_glGetActiveUniformBlockiv","getActiveUniformBlockParameter","_emscripten_glGetActiveUniformsiv","uniformCount","uniformIndices","getActiveUniforms","_emscripten_glGetAttachedShaders","maxCount","getAttachedShaders","_emscripten_glGetAttribLocation","getAttribLocation","_emscripten_glGetBooleanv","_emscripten_glGetBufferParameteri64v","getBufferParameter","_emscripten_glGetBufferParameteriv","_emscripten_glGetError","getError","_emscripten_glGetFloatv","_emscripten_glGetFragDataLocation","getFragDataLocation","_emscripten_glGetFramebufferAttachmentParameteriv","getFramebufferAttachmentParameter","WebGLRenderbuffer","WebGLTexture","_emscripten_glGetInteger64i_v","_emscripten_glGetInteger64v","_emscripten_glGetIntegeri_v","_emscripten_glGetIntegerv","_emscripten_glGetInternalformativ","internalformat","getInternalformatParameter","_emscripten_glGetProgramBinary","_emscripten_glGetProgramInfoLog","maxLength","infoLog","getProgramInfoLog","_emscripten_glGetProgramiv","getActiveAttrib","_emscripten_glGetQueryObjecti64vEXT","_emscripten_glGetQueryObjectivEXT","_emscripten_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectuiv","_emscripten_glGetQueryObjectuivEXT","_emscripten_glGetQueryiv","getQuery","_emscripten_glGetQueryivEXT","_emscripten_glGetRenderbufferParameteriv","getRenderbufferParameter","_emscripten_glGetSamplerParameterfv","getSamplerParameter","_emscripten_glGetSamplerParameteriv","_emscripten_glGetShaderInfoLog","getShaderInfoLog","_emscripten_glGetShaderPrecisionFormat","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","_emscripten_glGetShaderSource","getShaderSource","_emscripten_glGetShaderiv","getShaderParameter","_emscripten_glGetString","exts","glVersion","glslVersion","ver_num","match","_emscripten_glGetStringi","_emscripten_glGetSynciv","getSyncParameter","_emscripten_glGetTexParameterfv","getTexParameter","_emscripten_glGetTexParameteriv","_emscripten_glGetTransformFeedbackVarying","getTransformFeedbackVarying","_emscripten_glGetUniformBlockIndex","getUniformBlockIndex","_emscripten_glGetUniformIndices","uniformNames","names","getUniformIndices","_emscripten_glGetUniformLocation","arrayIndex","uniformBaseName","leftBrace","sizeAndId","_emscripten_glGetUniformfv","_emscripten_glGetUniformiv","_emscripten_glGetUniformuiv","_emscripten_glGetVertexAttribIiv","_emscripten_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribPointerv","pointer","getVertexAttribOffset","_emscripten_glGetVertexAttribfv","_emscripten_glGetVertexAttribiv","_emscripten_glHint","hint","_emscripten_glInvalidateFramebuffer","numAttachments","attachments","list","invalidateFramebuffer","_emscripten_glInvalidateSubFramebuffer","invalidateSubFramebuffer","_emscripten_glIsBuffer","isBuffer","_emscripten_glIsEnabled","isEnabled","_emscripten_glIsFramebuffer","fb","isFramebuffer","_emscripten_glIsProgram","isProgram","_emscripten_glIsQuery","isQuery","_emscripten_glIsQueryEXT","_emscripten_glIsRenderbuffer","rb","isRenderbuffer","_emscripten_glIsSampler","isSampler","_emscripten_glIsShader","isShader","_emscripten_glIsSync","isSync","_emscripten_glIsTexture","isTexture","_emscripten_glIsTransformFeedback","isTransformFeedback","_emscripten_glIsVertexArray","_emscripten_glIsVertexArrayOES","_emscripten_glLineWidth","lineWidth","_emscripten_glLinkProgram","linkProgram","_emscripten_glPauseTransformFeedback","pauseTransformFeedback","_emscripten_glPixelStorei","pixelStorei","_emscripten_glPolygonOffset","polygonOffset","_emscripten_glProgramBinary","_emscripten_glProgramParameteri","_emscripten_glQueryCounterEXT","_emscripten_glReadBuffer","readBuffer","_emscripten_glReadPixels","readPixels","pixelData","_emscripten_glReleaseShaderCompiler","_emscripten_glRenderbufferStorage","renderbufferStorage","_emscripten_glRenderbufferStorageMultisample","renderbufferStorageMultisample","_emscripten_glResumeTransformFeedback","resumeTransformFeedback","_emscripten_glSampleCoverage","invert","sampleCoverage","_emscripten_glSamplerParameterf","samplerParameterf","_emscripten_glSamplerParameterfv","_emscripten_glSamplerParameteri","samplerParameteri","_emscripten_glSamplerParameteriv","_emscripten_glScissor","scissor","_emscripten_glShaderBinary","_emscripten_glShaderSource","shaderSource","_emscripten_glStencilFunc","stencilFunc","_emscripten_glStencilFuncSeparate","stencilFuncSeparate","_emscripten_glStencilMask","stencilMask","_emscripten_glStencilMaskSeparate","stencilMaskSeparate","_emscripten_glStencilOp","stencilOp","_emscripten_glStencilOpSeparate","stencilOpSeparate","_emscripten_glTexImage2D","texImage2D","_emscripten_glTexImage3D","texImage3D","_emscripten_glTexParameterf","texParameterf","_emscripten_glTexParameterfv","_emscripten_glTexParameteri","texParameteri","_emscripten_glTexParameteriv","_emscripten_glTexStorage2D","texStorage2D","_emscripten_glTexStorage3D","texStorage3D","_emscripten_glTexSubImage2D","texSubImage2D","_emscripten_glTexSubImage3D","texSubImage3D","_emscripten_glTransformFeedbackVaryings","varyings","bufferMode","vars","transformFeedbackVaryings","_emscripten_glUniform1f","v0","uniform1f","miniTempWebGLFloatBuffers","_emscripten_glUniform1fv","uniform1fv","_emscripten_glUniform1i","uniform1i","miniTempWebGLIntBuffers","_emscripten_glUniform1iv","uniform1iv","_emscripten_glUniform1ui","uniform1ui","_emscripten_glUniform1uiv","uniform1uiv","_emscripten_glUniform2f","v1","uniform2f","_emscripten_glUniform2fv","uniform2fv","_emscripten_glUniform2i","uniform2i","_emscripten_glUniform2iv","uniform2iv","_emscripten_glUniform2ui","uniform2ui","_emscripten_glUniform2uiv","uniform2uiv","_emscripten_glUniform3f","v2","uniform3f","_emscripten_glUniform3fv","uniform3fv","_emscripten_glUniform3i","uniform3i","_emscripten_glUniform3iv","uniform3iv","_emscripten_glUniform3ui","uniform3ui","_emscripten_glUniform3uiv","uniform3uiv","_emscripten_glUniform4f","v3","uniform4f","_emscripten_glUniform4fv","uniform4fv","_emscripten_glUniform4i","uniform4i","_emscripten_glUniform4iv","uniform4iv","_emscripten_glUniform4ui","uniform4ui","_emscripten_glUniform4uiv","uniform4uiv","_emscripten_glUniformBlockBinding","uniformBlockBinding","_emscripten_glUniformMatrix2fv","transpose","uniformMatrix2fv","_emscripten_glUniformMatrix2x3fv","uniformMatrix2x3fv","_emscripten_glUniformMatrix2x4fv","uniformMatrix2x4fv","_emscripten_glUniformMatrix3fv","uniformMatrix3fv","_emscripten_glUniformMatrix3x2fv","uniformMatrix3x2fv","_emscripten_glUniformMatrix3x4fv","uniformMatrix3x4fv","_emscripten_glUniformMatrix4fv","uniformMatrix4fv","_emscripten_glUniformMatrix4x2fv","uniformMatrix4x2fv","_emscripten_glUniformMatrix4x3fv","uniformMatrix4x3fv","_emscripten_glUseProgram","useProgram","_emscripten_glValidateProgram","validateProgram","_emscripten_glVertexAttrib1f","vertexAttrib1f","_emscripten_glVertexAttrib1fv","_emscripten_glVertexAttrib2f","vertexAttrib2f","_emscripten_glVertexAttrib2fv","_emscripten_glVertexAttrib3f","vertexAttrib3f","_emscripten_glVertexAttrib3fv","_emscripten_glVertexAttrib4f","vertexAttrib4f","_emscripten_glVertexAttrib4fv","_emscripten_glVertexAttribDivisor","_emscripten_glVertexAttribDivisorANGLE","_emscripten_glVertexAttribDivisorARB","_emscripten_glVertexAttribDivisorEXT","_emscripten_glVertexAttribDivisorNV","_emscripten_glVertexAttribI4i","vertexAttribI4i","_emscripten_glVertexAttribI4iv","_emscripten_glVertexAttribI4ui","vertexAttribI4ui","_emscripten_glVertexAttribI4uiv","_emscripten_glVertexAttribIPointer","vertexAttribIPointer","_emscripten_glVertexAttribPointer","vertexAttribPointer","_emscripten_glViewport","_emscripten_glWaitSync","waitSync","isAsync","instrumentWasmImports","ASYNCIFY_IMPORTS","original","instrumentWasmExports","exportCallStack","maybeStopUnwind","State","Normal","Unwinding","Rewinding","Disabled","StackSize","currData","handleSleepReturnValue","callStackNameToId","callStackIdToName","callStackId","asyncPromiseHandlers","sleepCallbacks","getCallStackId","_asyncify_stop_unwind","Fibers","trampoline","whenDone","allocateData","setDataHeader","setDataRewindFunc","stackSize","rewindId","getDataRewindFunc","doRewind","startAsync","reachedCallback","reachedAfterCallback","_asyncify_start_rewind","asyncWasmReturnValue","isError","_asyncify_start_unwind","_asyncify_stop_rewind","_free","handleAsync","readMode","writeMode","miniTempWebGLFloatBuffersStorage","miniTempWebGLIntBuffersStorage","atob","wasmImports","___errno_location","length_low","length_high","isNaN","cwdLengthInBytes","dirp","struct_size","child","op","argp","nofollow","time","tmPtr","getSeconds","getMinutes","getHours","yday","getTimezoneOffset","summerOffset","winterOffset","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","timezone","daylight","tzname","extractZone","toTimeString","currentYear","winter","summer","stdTimezoneOffset","winterName","summerName","winterNamePtr","summerNamePtr","api","attrib_list","configs","hmm","contextAttribs","glesContextVersion","minorVersion","surface","draw","isContextLost","interval","argbuf","runEmAsmFunction","runMainThreadEmAsm","fullscreenStrategy","hiddenElements","onlyVisibleElement","displayState","hideEverythingExceptGivenElement","restoreHiddenElements","webkitExitFullscreen","gamepadState","lastGamepadState","dest","copyWithin","deferUntilInEventHandler","doRequestFullscreen","requestedSize","oldSize","maxHeapSize","alignUp","multiple","cutDown","overGrownHeapSize","getGamepads","webkitGetGamepads","targetThread","onbeforeunload","confirmationMessage","returnValue","registerBeforeUnloadEventCallback","dynCall_v","mozRequestPointerLock","webkitRequestPointerLock","msRequestPointerLock","uiEvent","outerWidth","outerHeight","registerUiEventCallback","onwheel","wheelEvent","registerWheelEventCallback","__environ","environ_buf","stringToAscii","penviron_count","penviron_buf_size","pbuf","rightsBase","rightsInheriting","iov","iovcnt","pnum","doReadv","offset_low","offset_high","newOffset","doWritev","receiveInstance","instantiateStreaming","createWasm","runCaller","ready","defaultIWad","deathmatchIWad","indexDBName","WadHandler","_defineProperty","signal","trace","setWad","wadName","isIWAD","wadState","async","database","_database","upload","reader","FileReader","readAsArrayBuffer","iwad","trans","_database2","wad","_database3","dbrequest","singleton","projects","WadChooser","pelements","flex","fontSize","whiteSpace","fontWeight","flexGrow","maxWidth","padding","flexDirection","justifyContent","alignItems","onClick","click","onChange","uploadWad","flexShrink","EdgeClassic","canvasRef","useRef","canvasContainerRef","useState","loading","lock","_I_WebSetFullscreen","useEffect","syncCanvasSize","offsetWidth","offsetHeight","canvasSync","_I_WebSyncScreenSize","doSyncTimeout","find","_I_WebOpenGameMenu","_objectSpread","preEdgeSyncFS","postEdgeSyncFS","preInit","print","printErr","setStatus","monitorRunDependencies","globalThis","visibility","_canvasRef$current","class","Player","App"],"mappings":"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Y,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,4CAA6C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAA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S,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAy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,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,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IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uDAAwD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uDAAwD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yBAA0B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,cAAe,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iBAAkB,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wBAAyB,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yBAA0B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wBAAyB,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0BAA2B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2BAA4B,MAAS,SAAU,IAAO,WAAY,oBAAuB,SAAU,aAAgB,4EAU7o7G,IA0BI6D,GACAC,GACA/pB,GACAgqB,GA7BAC,GAAkBC,EAAc,CAAC,EAAG5sB,IAEpCulB,GAAa,GACbjE,GAAc,iBACd9U,GAAQA,CAAC7I,EAAQkpB,KACnB,MAAMA,CAAO,EAMX9pB,IAAqB,EACrBC,IAAwB,EAKxB8pB,GAAkB,IAiBlB/pB,IAAsBC,MACpBA,GACF8pB,GAAkBvD,KAAKtzB,SAAS82B,KACJ,oBAAZ73B,UAA2BA,SAASoK,gBACpDwtB,GAAkB53B,SAASoK,cAAcC,KAIvCH,KACF0tB,GAAkB1tB,IASlB0tB,GADuC,IAArCA,GAAgB/0B,QAAQ,SACR+0B,GAAgBE,OAAO,EAAGF,GAAgB5yB,QAAQ,SAAU,IAAIgf,YAAY,KAAK,GAEjF,GAOtBsT,GAAS93B,IACH,IAAI0yB,EAAM,IAAIC,eAGd,OAFAD,EAAIE,KAAK,MAAO5yB,GAAK,GACrB0yB,EAAIc,KAAK,MACFd,EAAI6F,YAAY,EAGvBjqB,KACFN,GAAchO,IACV,IAAI0yB,EAAM,IAAIC,eAId,OAHAD,EAAIE,KAAK,MAAO5yB,GAAK,GACrB0yB,EAAIG,aAAe,cACnBH,EAAIc,KAAK,MACF,IAAI1nB,WAAsC4mB,EAAIjkB,SAAU,GAIrEspB,GAAYA,CAAC/3B,EAAKqzB,EAAQD,KACxB,IAAIV,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAO5yB,GAAK,GACrB0yB,EAAIG,aAAe,cACnBH,EAAIW,OAAS,KACO,KAAdX,EAAIzjB,QAAgC,GAAdyjB,EAAIzjB,QAAeyjB,EAAIjkB,SAC/C4kB,EAAOX,EAAIjkB,UAGb2kB,GAAS,EAEXV,EAAIU,QAAUA,EACdV,EAAIc,KAAK,KAAK,EAMhBwE,GAAkBQ,GAAUh4B,SAASg4B,MAAQA,GAK/C,IAmCIzqB,GAnCAqJ,GAAM9L,GAAc,OAAK8oB,QAAQqE,IAAIx5B,KAAKm1B,SAC1ClnB,GAAM5B,GAAiB,UAAK8oB,QAAQsE,KAAKz5B,KAAKm1B,SAGlD8D,EAAc5sB,GAAQ2sB,IAGtBA,GAAkB,KAOd3sB,GAAkB,YAAGulB,GAAavlB,GAAkB,WAEpDA,GAAoB,cAAGshB,GAActhB,GAAoB,aAEzDA,GAAa,OAAGwM,GAAQxM,GAAa,MAkBrCA,GAAmB,aAAGyC,GAAazC,GAAmB,YAC1D,IAQIF,GARAoB,GAAgBlB,GAAsB,gBAAK,EAErB,iBAAf+B,aACTnC,EAAM,mCAaR,IAKIkC,GAgBF7B,GAEAM,GAEAJ,GAEAM,GAEAJ,GAEAM,GAEAE,GAEAE,GAkNEyB,GA7XgB6qB,GAihBhB5oB,GACAD,GA1YA3C,IAAQ,EA4DR+kB,GAAgB,GAChBd,GAAgB,GAChBC,GAAgB,GAChBuH,GAAgB,GAChB5G,GAAgB,GAIhBvlB,GAA0B,EAiF1BE,GAAkB,EAClBE,GAAuB,KACvBE,GAAwB,KA8ExBY,GAAgB,wCAkBbH,EADLM,GAAiB,uBA9XC6qB,GAgYY7qB,GAA5BA,GA/XExC,GAAmB,WACdA,GAAmB,WAAEqtB,GAAMP,IAE7BA,GAAkBO,IAohB3B,IAyuHMljB,GAzuHFojB,GAAa,CACf,OAAQ,KAAYvtB,GAAOwtB,cAAgBxtB,GAAOwtB,cAAgB,EACnE,OAAQ,CAACC,EAAIC,KAAS,MAAMxpB,EAAO,GAAI,IAAK,IAAI/R,EAAI,EAAGA,EAAIs7B,EAAIt7B,IAAO+R,EAAKhM,KAAKkQ,EAAa/H,IAAQqtB,GAAM,GAAKv7B,KAAQ22B,QAAQqE,IAAK,sBAAqBjpB,KAAS,MAAMypB,EAAYzpB,EAAKnM,QAAQ,SAAU,IAAmB,IAAf41B,GAAoBA,GAAazpB,EAAKvP,QAAUuP,EAAKypB,EAAY,GAAGvrB,WAAW,KAAQ,KAAM,wCAA0C,MAAMwrB,EAAU1pB,EAAKypB,EAAY,GAASjI,GAAGmI,YAAYD,GAASE,QAAUpI,GAAGqI,UAAUH,GAAYlI,GAAGsI,MAAMC,GAAO,CAAC,EAAGL,GAAUlI,GAAGwI,QAAO,GAAM,SAAUtsB,GAAWA,EAAOknB,QAAQD,MAAO,2BAA0BjnB,KAAkB5B,GAAOmuB,WAAWV,EAAIC,EAAK,GAAE,EAC9lB,OAAQ,KAAY1tB,GAAOouB,cAAgBpuB,GAAOouB,cAAgB,EAClE,OAASX,IAAaztB,GAAOquB,eAAiBruB,GAAOquB,gBAAmB3I,GAAGwI,OAAOT,GAAI,WAAqBztB,GAAOsuB,gBAAkBtuB,GAAOsuB,gBAAoB,GAAE,EACjK,OAAQ,IAAqC,oBAAlBC,cAAwF,oBAAxBC,mBAC3F,OAAQ,SAAgD,IAA5B55B,UAAU65B,mBAAmF,IAAzC75B,UAAU65B,aAAaC,mBAAmG,IAAlC95B,UAAU+5B,mBAClL,OAASlB,SAAuC,IAApBztB,GAAa,OAAsBA,GAAa,KAAI,CAAC,GAAK,IA+BrD4uB,EAAKC,EA/BoDC,EAAO9uB,GAAa,KAA4V,OAApVytB,EAAgCqB,EAAKC,QAAU,CAAC,EAA1CD,EAAKziB,MAAQ,CAAC,EAAsCyiB,EAAKE,eAA6C,oBAAlBT,aAAiCO,EAAKE,aAAe,IAAIT,aAA0D,oBAAxBC,qBAAuCM,EAAKE,aAAe,IAAIR,oBAA4BM,EAAKE,eA+B1WJ,EA/BiZE,EAAKE,aAgC7aH,IACHA,EAAW,CAAC35B,SAAUA,SAASC,eAAe,YAEhD,CAAC,UAAW,YAAa,cAAcsG,SAASd,IAC9Ck0B,EAASpzB,SAASkS,IACZA,GAVZ,SAAoB9Z,EAAQ8G,EAAOkP,GAC/BhW,EAAOwG,iBAAiBM,EAAOkP,EAAM,CAAE,MAAQ,GACjD,CASQolB,CAAWthB,EAAShT,GAAO,KACP,cAAdi0B,EAAI3zB,OAAuB2zB,EAAIM,QAAQ,GAE/C,GACA,WA1C8d1vB,IAAtBsvB,EAAKE,cAA8B,EAAI,CAAC,EACzf,OAAQ,IAAmBhvB,GAAa,KAAegvB,aAAaG,WACpE,OAAQ,CAAC1B,EAAIC,EAAI0B,EAAIC,KAAS,IAAIP,EAAO9uB,GAAa,KAAOsvB,EAAkB,SAASC,QAA4C/vB,IAA9BsvB,EAAKC,QAAQS,eAA8BrxB,aAAa2wB,EAAKC,QAAQS,cAAeV,EAAKC,QAAQS,kBAAehwB,GAAasvB,EAAKC,QAAQU,gBAAkBX,EAAKE,aAAaU,wBAAwBH,GAAST,EAAKC,QAAQY,oBAAsBb,EAAKE,aAAaY,sBAAsBlC,EAAID,EAAI,GAAIqB,EAAKC,QAAQY,oBAAoBE,eAAiB,SAASC,QAAsCtwB,IAATsvB,QAAyCtvB,IAAjBsvB,EAAKC,UAAoCe,EAAqBC,aAAaC,eAAe,GAAGC,KAAK,GAAMnB,EAAKC,QAAQmB,qBAAuBJ,EAAqBK,YAAapsB,EAAQ,KAAMqrB,EAAI,CAACC,IAAM,EAAGP,EAAKC,QAAQU,gBAAgBW,QAAQtB,EAAKC,QAAQY,qBAAsBb,EAAKC,QAAQY,oBAAoBS,QAAQtB,EAAKE,aAAaqB,aAAcvB,EAAKC,QAAQQ,OAASA,CAAQ,EAAOe,EAAgB,WAAkB,EAAGxB,EAAKC,QAAQwB,cAAgBzB,EAAKE,aAAawB,aAAa/C,EAAIC,EAAIoB,EAAKE,aAAaG,YAAaL,EAAKC,QAAQwB,cAAcP,eAAe,GAAGC,KAAK,GAAsInB,EAAKC,QAAQS,aAAe3xB,YAArI,WAAaixB,EAAKC,QAAQmB,qBAAuBpB,EAAKC,QAAQwB,cAAexsB,EAAQ,KAAMqrB,EAAI,CAACC,GAAM,GAA6D3B,EAAKoB,EAAKE,aAAaG,WAAc,UAAuC3vB,IAA3B5K,UAAU65B,mBAAwEjvB,IAAxC5K,UAAU65B,aAAaC,aAA+B95B,UAAU65B,aAAaC,aAAa,CAAEriB,OAAO,EAAMokB,OAAO,IAAS9yB,KAAK2xB,GAAiBlsB,MAAMktB,QAA4D9wB,IAAjC5K,UAAU+5B,oBAAoC/5B,UAAU+5B,mBAAmB,CAAEtiB,OAAO,EAAMokB,OAAO,GAASnB,EAAiBgB,EAAgB,EAC5oD,OAAQ,CAAC7C,EAAIC,EAAI0B,EAAIC,KAAS,IAAIP,EAAO9uB,GAAa,KAAG8uB,EAAKziB,MAAMsjB,oBAAsBb,EAAKE,aAAoC,sBAAEtB,EAAI,EAAGD,GAAKqB,EAAKziB,MAAMsjB,oBAAoC,eAAI,SAAUr3B,QAAmBkH,IAATsvB,QAAuCtvB,IAAfsvB,EAAKziB,QAAkCyiB,EAAKziB,MAAMqkB,oBAAsBp4B,EAAgB,aAAGyL,EAAQ,KAAMqrB,EAAI,CAACC,IAAM,EAAGP,EAAKziB,MAAMsjB,oBAA6B,QAAEb,EAAKE,aAA0B,YAAE,EAClb,OAAQ,CAACvB,EAAIC,KAA0G,IAAjG,IAAIoB,EAAO9uB,GAAa,KAAO2wB,EAAc7B,EAAKC,QAAQmB,qBAAqBU,iBAA2Bp+B,EAAI,EAAGA,EAAIm+B,IAAen+B,EAAG,CAAE,IAAIq+B,EAAc/B,EAAKC,QAAQmB,qBAAqBF,eAAex9B,GAAI,GAAIq+B,EAAYl8B,QAAU+4B,EAAM,KAAM,+DAAiEmD,EAAYl8B,OAAS,wBAA0B+4B,EAAK,YAAe,GAAmB,GAAfiD,EAAoB,IAAK,IAAIp2B,EAAI,EAAGA,EAAImzB,IAAMnzB,EAAK+J,EAASmpB,EAAU,EAAJlzB,EAAQs2B,EAAYt2B,GAAI,cAAqB,IAASA,EAAI,EAAGA,EAAImzB,IAAMnzB,EAAK+J,EAASmpB,EAAgC,GAAxBlzB,EAAIo2B,EAAen+B,GAASq+B,EAAYt2B,GAAI,QAAc,GAC7mB,OAAQ,CAACkzB,EAAIC,KAA0G,IAAjG,IAAIoB,EAAO9uB,GAAa,KAAO2wB,EAAc7B,EAAKziB,MAAMqkB,oBAAsC,iBAAYl+B,EAAI,EAAGA,EAAIm+B,IAAen+B,EAAG,CAAE,IAAIq+B,EAAc/B,EAAKziB,MAAMqkB,oBAAoC,eAAEl+B,GAAI,GAAIq+B,EAAYl8B,QAAU+4B,EAAM,KAAM,8DAAgEmD,EAAYl8B,OAAS,wBAA0B+4B,EAAK,YAAe,IAAK,IAAInzB,EAAI,EAAGA,EAAImzB,IAAMnzB,EAAKs2B,EAAYt2B,GAAKsG,GAAQ4sB,GAAOlzB,EAAEo2B,EAAcn+B,GAAM,IAAM,EAAM,GAChf,OAASi7B,IAAS,IAAIqB,EAAO9uB,GAAa,KAAG,GAAIytB,EAAI,CAA4F,QAAxDjuB,IAA9BsvB,EAAKC,QAAQS,cAA8BrxB,aAAa2wB,EAAKC,QAAQS,mBAA6ChwB,IAAxBsvB,EAAKC,QAAQQ,OAAsB,CAAqD,IAAnD,IAAIuB,EAAShC,EAAKC,QAAQQ,OAAOwB,iBAA2B5+B,EAAI,EAAGA,EAAI2+B,EAAOn8B,OAAQxC,IAAO28B,EAAKC,QAAQQ,OAAOyB,YAAYF,EAAO3+B,IAAO28B,EAAKC,QAAQQ,YAAS/vB,CAAW,MAA2CA,IAArCsvB,EAAKC,QAAQY,sBAAqCb,EAAKC,QAAQY,oBAAoBE,eAAiB,WAAgC,EAAGf,EAAKC,QAAQY,oBAAoBsB,aAAcnC,EAAKC,QAAQY,yBAAsBnwB,QAAkDA,IAAjCsvB,EAAKC,QAAQU,kBAAiCX,EAAKC,QAAQU,gBAAgBwB,aAAcnC,EAAKC,QAAQU,qBAAkBjwB,QAAgDA,IAA/BsvB,EAAKC,QAAQwB,gBAA+BzB,EAAKC,QAAQwB,mBAAgB/wB,GAAYsvB,EAAKC,aAAUvvB,CAAW,MAA+CA,MAAlCsvB,EAAKziB,MAAMsjB,sBAAoCb,EAAKziB,MAAMsjB,oBAAoBsB,aAAcnC,EAAKziB,MAAMsjB,yBAAsBnwB,GAAasvB,EAAKziB,WAAQ7M,OAAwCA,IAAtBsvB,EAAKE,mBAA+CxvB,IAAfsvB,EAAKziB,YAA0C7M,IAAjBsvB,EAAKC,UAA0BD,EAAKE,aAAakC,QAASpC,EAAKE,kBAAexvB,EAAW,EAChqC,OAAQ,CAACiuB,EAAIC,EAAI0B,KAAS,IAAIj3B,EAAIs1B,EAAQt5B,EAAIu5B,EAAQvS,EAASiU,EAASpvB,GAAa,OAAGA,GAAa,KAAI,CAAC,GAAG,IAAI8uB,EAAO9uB,GAAa,KAAO8uB,EAAKqC,YAAcnxB,GAAe,SAAK8uB,EAAKF,IAAM5uB,GAAsB,cAAEA,GAAe,QAAG,GAAO,GAAO8uB,EAAKqC,UAAYnxB,GAAe,QAAS8uB,EAAK32B,IAAMA,GAAK22B,EAAK36B,IAAMA,GAAK26B,EAAKsC,WAAatC,EAAKF,MAAOE,EAAKuC,MAAQvC,EAAKF,IAAI0C,gBAAgBn5B,EAAGhE,GAAI26B,EAAK32B,EAAIA,EAAG22B,EAAK36B,EAAIA,EAAG26B,EAAKsC,SAAWtC,EAAKF,KAAO,IAAoEhX,EAAhEtb,EAAOwyB,EAAKuC,MAAM/0B,KAAUiD,EAAM4b,GAAU,EAAOoW,EAAM,EAAY,GAAgC,oBAArBC,kBAAoCl1B,aAAgBk1B,iBAAuC,IAAnB5Z,EAAMtb,EAAK3H,OAAe48B,EAAM3Z,GAAK,CAAE,IAAImN,EAAM1kB,GAAOd,GAAMjD,EAAKi1B,GAAc,IAANxM,EAAYzoB,EAAKi1B,EAAI,GAAMxM,GAAO,EAAK,IAAMzoB,EAAKi1B,EAAI,GAAMxM,GAAO,GAAM,IAAMzoB,EAAKi1B,EAAI,GAAK,IAAMhyB,IAAOgyB,GAAO,CAAG,KAAS,CAAMzC,EAAK2C,aAAen1B,IAAQwyB,EAAK4C,OAAS,IAAIpxB,WAAWhE,EAAKyD,QAAS+uB,EAAK6C,MAAQ,IAAInxB,WAAWlE,EAAKyD,QAAS+uB,EAAK2C,WAAan1B,GAAQ,IAAIo1B,EAAS5C,EAAK4C,OAA6BA,EAAO3yB,IAAIsB,GAAOwH,SAAStI,EAAKA,GAArDqY,EAAM8Z,EAAO/8B,UAAqD,IAAIg9B,EAAQ7C,EAAK6C,MAAWx/B,EAAI,EAAOoI,EAAIpI,EAAI,EAAEylB,EAAK,GAAIA,EAAM,GAAK,EAAK,KAAOzlB,EAAIoI,GAAKo3B,EAAMx/B,GAAK,IAAqBw/B,EAAfx/B,EAAIA,EAAI,EAAI,GAAc,IAAqBw/B,EAAfx/B,EAAIA,EAAI,EAAI,GAAc,IAAqBw/B,EAAfx/B,EAAIA,EAAI,EAAI,GAAc,IAAqBw/B,EAAfx/B,EAAIA,EAAI,EAAI,GAAc,IAAqBw/B,EAAfx/B,EAAIA,EAAI,EAAI,GAAc,IAAqBw/B,EAAfx/B,EAAIA,EAAI,EAAI,GAAc,IAAqBw/B,EAAfx/B,EAAIA,EAAI,EAAI,GAAc,IAAMA,EAAIA,EAAI,EAAI,OAAc,KAAOA,EAAIoI,GAAKo3B,EAAMx/B,GAAK,IAAMA,EAAIA,EAAI,EAAI,CAAO,CAAE28B,EAAKF,IAAIgD,aAAa9C,EAAKuC,MAAO,EAAG,EAAE,EACj9C,OAAQ,CAAC5D,EAAIC,EAAI0B,EAAIC,EAAIwC,KAAS,IAAI15B,EAAIs1B,EAAQt5B,EAAIu5B,EAAQoE,EAAQ1C,EAAQ2C,EAAQ1C,EAAQlU,EAAS0W,EAAQljB,EAASzZ,SAASkH,cAAc,UAAWuS,EAAOF,MAAQtW,EAAGwW,EAAOD,OAASva,EAAG,IAAyIyjB,EAArIgX,EAAMjgB,EAAOqjB,WAAW,MAAWX,EAAQzC,EAAI0C,gBAAgBn5B,EAAGhE,GAAQmI,EAAO+0B,EAAM/0B,KAAUiD,EAAM4b,GAAU,EAAOoW,EAAM,EAAY,GAAgC,oBAArBC,kBAAoCl1B,aAAgBk1B,iBAAuC,IAAnB5Z,EAAMtb,EAAK3H,OAAe48B,EAAM3Z,GAAK,CAAE,IAAImN,EAAM1kB,GAAOd,GAAMjD,EAAKi1B,GAAc,IAANxM,EAAYzoB,EAAKi1B,EAAI,GAAMxM,GAAO,EAAK,IAAMzoB,EAAKi1B,EAAI,GAAMxM,GAAO,GAAM,IAAMzoB,EAAKi1B,EAAI,GAAMxM,GAAO,GAAM,IAAMxlB,IAAOgyB,GAAO,CAAG,KAAS,CAAE,IAAIG,EAAS,IAAIpxB,WAAWhE,EAAKyD,QAA8B2xB,EAAO3yB,IAAIsB,GAAOwH,SAAStI,EAAKA,GAArDqY,EAAM8Z,EAAO/8B,SAAqD,CAAEi6B,EAAIgD,aAAaP,EAAO,EAAG,GAAI,IAAI38B,EAAgB,IAAVo9B,GAAyB,IAAVC,EAAc,OAASpjB,EAAOsjB,YAAc,UAAY,OAAStjB,EAAOsjB,YAAc,KAAOH,EAAQ,IAAMC,EAAQ,SAAcG,EAAS3oB,GAAQ7U,EAAIC,OAAS,GAA+C,OAA3C8T,EAAa/T,EAAKw9B,EAAQx9B,EAAIC,OAAS,GAAWu9B,CAAM,EACz/B,OAASzE,IAAaztB,GAAe,SAAKA,GAAe,OAAEhG,MAAc,OAAIoO,EAAaqlB,GAAK,EAC/F,OAAQ,KAAYztB,GAAe,SAAKA,GAAe,OAAEhG,MAAc,OAAI,OAAQ,EACnF,OAAQ,IAAemvB,OAAOnZ,WAC9B,OAAQ,IAAemZ,OAAOjZ,YAC9B,OAAQ,CAACud,EAAIC,KAASyE,MAAM/pB,EAAaqlB,GAAM,OAASrlB,EAAaslB,GAAI,GAwLpE0E,GAAO,CAACC,MAAOhF,GAA4B,MAAnBA,EAAKiF,OAAO,GAAWC,UAAWpwB,GACtC,gEACCqwB,KAAKrwB,GAAU/H,MAAM,GACxCq4B,eAAeA,CAACC,EAAOC,KAGvB,IADA,IAAIC,EAAK,EACAzgC,EAAIugC,EAAM/9B,OAAS,EAAGxC,GAAK,EAAGA,IAAK,CAC1C,IAAI0gC,EAAOH,EAAMvgC,GACJ,MAAT0gC,EACFH,EAAMr1B,OAAOlL,EAAG,GACE,OAAT0gC,GACTH,EAAMr1B,OAAOlL,EAAG,GAChBygC,KACSA,IACTF,EAAMr1B,OAAOlL,EAAG,GAChBygC,IAEJ,CAEA,GAAID,EACF,KAAOC,EAAIA,IACTF,EAAMtM,QAAQ,MAGlB,OAAOsM,CAAK,EACZI,UAAWzF,IACX,IAAI0F,EAAaX,GAAKC,MAAMhF,GACxB2F,EAAoC,MAApB3F,EAAKL,QAAQ,GASjC,OAPAK,EAAO+E,GAAKK,eAAepF,EAAK4F,MAAM,KAAKh1B,QAAQhK,KAAQA,KAAK8+B,GAAYG,KAAK,OACnEH,IACZ1F,EAAO,KAELA,GAAQ2F,IACV3F,GAAQ,MAEF0F,EAAa,IAAM,IAAM1F,CAAI,EACrC8F,QAAS9F,IACT,IAAIlV,EAASia,GAAKG,UAAUlF,GACxBp4B,EAAOkjB,EAAO,GACdib,EAAMjb,EAAO,GACjB,OAAKljB,GAASm+B,GAIVA,IAEFA,EAAMA,EAAIpG,OAAO,EAAGoG,EAAIz+B,OAAS,IAE5BM,EAAOm+B,GANL,GAMQ,EACjBC,SAAUhG,IAEV,GAAa,MAATA,EAAc,MAAO,IAGzB,IAAIiG,GADJjG,GADAA,EAAO+E,GAAKU,UAAUzF,IACVnzB,QAAQ,MAAO,KACNgf,YAAY,KACjC,OAAmB,IAAfoa,EAAyBjG,EACtBA,EAAKL,OAAOsG,EAAU,EAAE,EAC/BJ,KAAK,WACL,IAAIK,EAAQv6B,MAAMjF,UAAUqG,MAAM9H,KAAKmE,WACvC,OAAO27B,GAAKU,UAAUS,EAAML,KAAK,KACnC,EAAEM,MAAMA,CAACphC,EAAGa,IACHm/B,GAAKU,UAAU1gC,EAAI,IAAMa,IAkBlCwgC,GAAU,CAAC71B,QAAQ,WAGjB,IAFA,IAAI81B,EAAe,GACjBC,GAAmB,EACZxhC,EAAIsE,UAAU9B,OAAS,EAAGxC,IAAM,IAAMwhC,EAAkBxhC,IAAK,CACpE,IAAIk7B,EAAQl7B,GAAK,EAAKsE,UAAUtE,GAAKuzB,GAAGkO,MAExC,GAAmB,iBAARvG,EACT,MAAM,IAAIwG,UAAU,6CACf,IAAKxG,EACV,MAAO,GAETqG,EAAerG,EAAO,IAAMqG,EAC5BC,EAAmBvB,GAAKC,MAAMhF,EAChC,CAIA,OAASsG,EAAmB,IAAM,KADlCD,EAAetB,GAAKK,eAAeiB,EAAaT,MAAM,KAAKh1B,QAAQhK,KAAQA,KAAK0/B,GAAkBT,KAAK,OAC9C,GAC3D,EAAEY,SAASA,CAACC,EAAMC,KAGhB,SAASC,EAAKC,GAEZ,IADA,IAAI5oB,EAAQ,EACLA,EAAQ4oB,EAAIv/B,QACE,KAAfu/B,EAAI5oB,GADiBA,KAI3B,IADA,IAAI6oB,EAAMD,EAAIv/B,OAAS,EAChBw/B,GAAO,GACK,KAAbD,EAAIC,GADOA,KAGjB,OAAI7oB,EAAQ6oB,EAAY,GACjBD,EAAI95B,MAAMkR,EAAO6oB,EAAM7oB,EAAQ,EACxC,CAbAyoB,EAAON,GAAQ71B,QAAQm2B,GAAM/G,OAAO,GACpCgH,EAAKP,GAAQ71B,QAAQo2B,GAAIhH,OAAO,GAiBhC,IAJA,IAAIoH,EAAYH,EAAKF,EAAKd,MAAM,MAC5BoB,EAAUJ,EAAKD,EAAGf,MAAM,MACxBt+B,EAAS+P,KAAK4vB,IAAIF,EAAUz/B,OAAQ0/B,EAAQ1/B,QAC5C4/B,EAAkB5/B,EACbxC,EAAI,EAAGA,EAAIwC,EAAQxC,IAC1B,GAAIiiC,EAAUjiC,KAAOkiC,EAAQliC,GAAI,CAC/BoiC,EAAkBpiC,EAClB,KACF,CAEF,IAAIqiC,EAAc,GAClB,IAASriC,EAAIoiC,EAAiBpiC,EAAIiiC,EAAUz/B,OAAQxC,IAClDqiC,EAAYt8B,KAAK,MAGnB,OADAs8B,EAAcA,EAAYpwB,OAAOiwB,EAAQj6B,MAAMm6B,KAC5BrB,KAAK,IAAI,GA8E9BrN,GAAM,CAAC4O,KAAK,GAAGn/B,KAAK,WAQlB,EACAo/B,SAAS,WAST,EACA5/B,SAAS,SAAS6/B,EAAKC,GACvB/O,GAAI4O,KAAKE,GAAO,CAAEE,MAAO,GAAIC,OAAQ,GAAIF,IAAKA,GAC9ClP,GAAGqP,eAAeJ,EAAK9O,GAAImP,WAC7B,EAAEA,WAAW,CAAC1N,KAAK,SAASiI,GACxB,IAAI0F,EAAMpP,GAAI4O,KAAKlF,EAAO2F,KAAKC,MAC/B,IAAKF,EACH,MAAM,IAAIvP,GAAG0P,WAAW,IAE1B7F,EAAO0F,IAAMA,EACb1F,EAAO8F,UAAW,CACpB,EAAEnE,MAAM,SAAS3B,GAEfA,EAAO0F,IAAIL,IAAIU,MAAM/F,EAAO0F,IAC9B,EAAEK,MAAM,SAAS/F,GACfA,EAAO0F,IAAIL,IAAIU,MAAM/F,EAAO0F,IAC9B,EAAEM,KAAK,SAAShG,EAAQxvB,EAAQy1B,EAAQ7gC,GACtC,IAAK46B,EAAO0F,MAAQ1F,EAAO0F,IAAIL,IAAIa,SACjC,MAAM,IAAI/P,GAAG0P,WAAW,IAG1B,IADA,IAAIM,EAAY,EACPvjC,EAAI,EAAGA,EAAIwC,EAAQxC,IAAK,CAC/B,IAAIgmB,EACJ,IACEA,EAASoX,EAAO0F,IAAIL,IAAIa,SAASlG,EAAO0F,IAC1C,CAAE,MAAO38B,GACP,MAAM,IAAIotB,GAAG0P,WAAW,GAC1B,CACA,QAAe51B,IAAX2Y,GAAsC,IAAdud,EAC1B,MAAM,IAAIhQ,GAAG0P,WAAW,GAE1B,GAAIjd,QAAyC,MAC7Cud,IACA31B,EAAOy1B,EAAOrjC,GAAKgmB,CACrB,CAIA,OAHIud,IACFnG,EAAO2F,KAAK5gB,UAAY/I,KAAKC,OAExBkqB,CACT,EAAEC,MAAM,SAASpG,EAAQxvB,EAAQy1B,EAAQ7gC,GACvC,IAAK46B,EAAO0F,MAAQ1F,EAAO0F,IAAIL,IAAIgB,SACjC,MAAM,IAAIlQ,GAAG0P,WAAW,IAE1B,IACE,IAAK,IAAIjjC,EAAI,EAAGA,EAAIwC,EAAQxC,IAC1Bo9B,EAAO0F,IAAIL,IAAIgB,SAASrG,EAAO0F,IAAKl1B,EAAOy1B,EAAOrjC,GAEtD,CAAE,MAAOmG,GACP,MAAM,IAAIotB,GAAG0P,WAAW,GAC1B,CAIA,OAHIzgC,IACF46B,EAAO2F,KAAK5gB,UAAY/I,KAAKC,OAExBrZ,CACT,GAAG0jC,gBAAgB,CAACJ,SAAS,SAASR,GACpC,IAAKA,EAAIJ,MAAMlgC,OAAQ,CACrB,IAAIwjB,EAAS,KAeb,GAdqB,oBAAVgR,QACe,mBAAjBA,OAAO2M,OAGC,QADf3d,EAASgR,OAAO2M,OAAO,cAErB3d,GAAU,MAEgB,mBAAZ4d,UAGD,QADf5d,EAAS4d,cAEP5d,GAAU,OAGTA,EACH,OAAO,KAET8c,EAAIJ,MAAQ7tB,EAAmBmR,GAAQ,EACzC,CACA,OAAO8c,EAAIJ,MAAMr8B,OACnB,EAAEo9B,SAAS,SAASX,EAAKlQ,GACX,OAARA,GAAwB,KAARA,GAClBjZ,GAAIxE,EAAkB2tB,EAAIH,OAAQ,IAClCG,EAAIH,OAAS,IAEF,GAAP/P,GAAUkQ,EAAIH,OAAO58B,KAAK6sB,EAElC,EAAEuQ,MAAM,SAASL,GACXA,EAAIH,QAAUG,EAAIH,OAAOngC,OAAS,IACpCmX,GAAIxE,EAAkB2tB,EAAIH,OAAQ,IAClCG,EAAIH,OAAS,GAEjB,GAAGkB,iBAAiB,CAACJ,SAAS,SAASX,EAAKlQ,GAC9B,OAARA,GAAwB,KAARA,GAClBnjB,GAAI0F,EAAkB2tB,EAAIH,OAAQ,IAClCG,EAAIH,OAAS,IAEF,GAAP/P,GAAUkQ,EAAIH,OAAO58B,KAAK6sB,EAElC,EAAEuQ,MAAM,SAASL,GACXA,EAAIH,QAAUG,EAAIH,OAAOngC,OAAS,IACpCiN,GAAI0F,EAAkB2tB,EAAIH,OAAQ,IAClCG,EAAIH,OAAS,GAEjB,IAcFmB,GAAQ,CAACC,UAAU,KAAKlI,MAAM,WAC5B,OAAOiI,GAAME,WAAW,KAAM,IAAK,MAAwB,EAC7D,EAAEA,WAAW,SAASC,EAAQ1jC,EAAMY,EAAMqhC,GACxC,GAAIjP,GAAG2Q,SAAS/iC,IAASoyB,GAAG4Q,OAAOhjC,GAEjC,MAAM,IAAIoyB,GAAG0P,WAAW,IAErBa,GAAMC,YACTD,GAAMC,UAAY,CAChB9C,IAAK,CACH8B,KAAM,CACJqB,QAASN,GAAMO,SAASD,QACxBE,QAASR,GAAMO,SAASC,QACxBC,OAAQT,GAAMO,SAASE,OACvBC,MAAOV,GAAMO,SAASG,MACtBC,OAAQX,GAAMO,SAASI,OACvBC,OAAQZ,GAAMO,SAASK,OACvBC,MAAOb,GAAMO,SAASM,MACtBC,QAASd,GAAMO,SAASO,QACxBC,QAASf,GAAMO,SAASQ,SAE1BzH,OAAQ,CACN0H,OAAQhB,GAAMjB,WAAWiC,SAG7B10B,KAAM,CACJ2yB,KAAM,CACJqB,QAASN,GAAMO,SAASD,QACxBE,QAASR,GAAMO,SAASC,SAE1BlH,OAAQ,CACN0H,OAAQhB,GAAMjB,WAAWiC,OACzB1B,KAAMU,GAAMjB,WAAWO,KACvBI,MAAOM,GAAMjB,WAAWW,MACxBuB,SAAUjB,GAAMjB,WAAWkC,SAC3BC,KAAMlB,GAAMjB,WAAWmC,KACvBC,MAAOnB,GAAMjB,WAAWoC,QAG5BC,KAAM,CACJnC,KAAM,CACJqB,QAASN,GAAMO,SAASD,QACxBE,QAASR,GAAMO,SAASC,QACxBa,SAAUrB,GAAMO,SAASc,UAE3B/H,OAAQ,CAAC,GAEXgI,OAAQ,CACNrC,KAAM,CACJqB,QAASN,GAAMO,SAASD,QACxBE,QAASR,GAAMO,SAASC,SAE1BlH,OAAQ7J,GAAG8R,qBAIjB,IAAItC,EAAOxP,GAAGyQ,WAAWC,EAAQ1jC,EAAMY,EAAMqhC,GA0B7C,OAzBIjP,GAAG+R,MAAMvC,EAAK5hC,OAChB4hC,EAAKsB,SAAWP,GAAMC,UAAU9C,IAAI8B,KACpCA,EAAKF,WAAaiB,GAAMC,UAAU9C,IAAI7D,OACtC2F,EAAKwC,SAAW,CAAC,GACRhS,GAAGiS,OAAOzC,EAAK5hC,OACxB4hC,EAAKsB,SAAWP,GAAMC,UAAU3zB,KAAK2yB,KACrCA,EAAKF,WAAaiB,GAAMC,UAAU3zB,KAAKgtB,OACvC2F,EAAK0C,UAAY,EAIjB1C,EAAKwC,SAAW,MACPhS,GAAGmS,OAAO3C,EAAK5hC,OACxB4hC,EAAKsB,SAAWP,GAAMC,UAAUmB,KAAKnC,KACrCA,EAAKF,WAAaiB,GAAMC,UAAUmB,KAAK9H,QAC9B7J,GAAGoS,SAAS5C,EAAK5hC,QAC1B4hC,EAAKsB,SAAWP,GAAMC,UAAUqB,OAAOrC,KACvCA,EAAKF,WAAaiB,GAAMC,UAAUqB,OAAOhI,QAE3C2F,EAAK5gB,UAAY/I,KAAKC,MAElB4qB,IACFA,EAAOsB,SAAShlC,GAAQwiC,EACxBkB,EAAO9hB,UAAY4gB,EAAK5gB,WAEnB4gB,CACT,EAAE6C,wBAAwB,SAAS7C,GACjC,OAAKA,EAAKwC,SACNxC,EAAKwC,SAAS7vB,SAAiBqtB,EAAKwC,SAAS7vB,SAAS,EAAGqtB,EAAK0C,WAC3D,IAAIp3B,WAAW00B,EAAKwC,UAFA,IAAIl3B,WAAW,EAG5C,EAAEw3B,kBAAkB,SAAS9C,EAAM+C,GACjC,IAAIC,EAAehD,EAAKwC,SAAWxC,EAAKwC,SAAS/iC,OAAS,EAC1D,KAAIujC,GAAgBD,GAApB,CAKAA,EAAcvzB,KAAKuF,IAAIguB,EAAcC,GAAgBA,EADzB,QACgE,EAAM,SAAY,GAC1F,GAAhBA,IAAmBD,EAAcvzB,KAAKuF,IAAIguB,EAAa,MAC3D,IAAIE,EAAcjD,EAAKwC,SACvBxC,EAAKwC,SAAW,IAAIl3B,WAAWy3B,GAC3B/C,EAAK0C,UAAY,GAAG1C,EAAKwC,SAAS34B,IAAIo5B,EAAYtwB,SAAS,EAAGqtB,EAAK0C,WAAY,EAT5C,CAUzC,EAAEQ,kBAAkB,SAASlD,EAAMmD,GACjC,GAAInD,EAAK0C,WAAaS,EACtB,GAAe,GAAXA,EACFnD,EAAKwC,SAAW,KAChBxC,EAAK0C,UAAY,MACZ,CACL,IAAIO,EAAcjD,EAAKwC,SACvBxC,EAAKwC,SAAW,IAAIl3B,WAAW63B,GAC3BF,GACFjD,EAAKwC,SAAS34B,IAAIo5B,EAAYtwB,SAAS,EAAGnD,KAAK4vB,IAAI+D,EAASnD,EAAK0C,aAEnE1C,EAAK0C,UAAYS,CACnB,CACF,EAAE7B,SAAS,CAACD,QAAQ,SAASrB,GACzB,IAAIoD,EAAO,CAAC,EAyBZ,OAvBAA,EAAK3D,IAAMjP,GAAGoS,SAAS5C,EAAK5hC,MAAQ4hC,EAAKrmB,GAAK,EAC9CypB,EAAKC,IAAMrD,EAAKrmB,GAChBypB,EAAKhlC,KAAO4hC,EAAK5hC,KACjBglC,EAAKE,MAAQ,EACbF,EAAKG,IAAM,EACXH,EAAKI,IAAM,EACXJ,EAAKnD,KAAOD,EAAKC,KAEfmD,EAAKjvB,KADHqc,GAAG+R,MAAMvC,EAAK5hC,MACJ,KACHoyB,GAAGiS,OAAOzC,EAAK5hC,MACZ4hC,EAAK0C,UACRlS,GAAGmS,OAAO3C,EAAK5hC,MACZ4hC,EAAKmC,KAAK1iC,OAEV,EAEd2jC,EAAKK,MAAQ,IAAIptB,KAAK2pB,EAAK5gB,WAC3BgkB,EAAKM,MAAQ,IAAIrtB,KAAK2pB,EAAK5gB,WAC3BgkB,EAAKO,MAAQ,IAAIttB,KAAK2pB,EAAK5gB,WAG3BgkB,EAAKQ,QAAU,KACfR,EAAKS,OAASr0B,KAAKG,KAAKyzB,EAAKjvB,KAAOivB,EAAKQ,SAClCR,CACT,EAAE7B,QAAQ,SAASvB,EAAMoD,QACL94B,IAAd84B,EAAKhlC,OACP4hC,EAAK5hC,KAAOglC,EAAKhlC,WAEIkM,IAAnB84B,EAAKhkB,YACP4gB,EAAK5gB,UAAYgkB,EAAKhkB,gBAEN9U,IAAd84B,EAAKjvB,MACP4sB,GAAMmC,kBAAkBlD,EAAMoD,EAAKjvB,KAEvC,EAAEqtB,OAAO,WACP,MAAMhR,GAAGsT,cAAc,GACzB,EAAErC,MAAM,SAASP,EAAQ1jC,EAAMY,EAAMqhC,GACnC,OAAOsB,GAAME,WAAWC,EAAQ1jC,EAAMY,EAAMqhC,EAC9C,EAAEiC,OAAO,SAASqC,EAAUC,EAASC,GAEnC,GAAIzT,GAAG+R,MAAMwB,EAAS3lC,MAAO,CAC3B,IAAI8lC,EACJ,IACEA,EAAW1T,GAAG2T,WAAWH,EAASC,EACpC,CAAE,MAAO7gC,GACT,CACA,GAAI8gC,EACF,IAAK,IAAIjnC,KAAKinC,EAAS1B,SACrB,MAAM,IAAIhS,GAAG0P,WAAW,GAG9B,QAEO6D,EAAS7C,OAAOsB,SAASuB,EAASvmC,MACzCumC,EAAS7C,OAAO9hB,UAAY/I,KAAKC,MACjCytB,EAASvmC,KAAOymC,EAChBD,EAAQxB,SAASyB,GAAYF,EAC7BC,EAAQ5kB,UAAY2kB,EAAS7C,OAAO9hB,UACpC2kB,EAAS7C,OAAS8C,CACpB,EAAErC,OAAO,SAAST,EAAQ1jC,UACjB0jC,EAAOsB,SAAShlC,GACvB0jC,EAAO9hB,UAAY/I,KAAKC,KAC1B,EAAEsrB,MAAM,SAASV,EAAQ1jC,GACvB,IAAIwiC,EAAOxP,GAAG2T,WAAWjD,EAAQ1jC,GACjC,IAAK,IAAIP,KAAK+iC,EAAKwC,SACjB,MAAM,IAAIhS,GAAG0P,WAAW,WAEnBgB,EAAOsB,SAAShlC,GACvB0jC,EAAO9hB,UAAY/I,KAAKC,KAC1B,EAAEurB,QAAQ,SAAS7B,GACjB,IAAIoE,EAAU,CAAC,IAAK,MACpB,IAAK,IAAI5lC,KAAOwhC,EAAKwC,SACdxC,EAAKwC,SAAS1jC,eAAeN,IAGlC4lC,EAAQphC,KAAKxE,GAEf,OAAO4lC,CACT,EAAEtC,QAAQ,SAASZ,EAAQmD,EAASC,GAClC,IAAItE,EAAOe,GAAME,WAAWC,EAAQmD,EAAS,MAAwB,GAErE,OADArE,EAAKmC,KAAOmC,EACLtE,CACT,EAAEoC,SAAS,SAASpC,GAClB,IAAKxP,GAAGmS,OAAO3C,EAAK5hC,MAClB,MAAM,IAAIoyB,GAAG0P,WAAW,IAE1B,OAAOF,EAAKmC,IACd,GAAGrC,WAAW,CAACO,KAAK,SAAShG,EAAQxvB,EAAQy1B,EAAQ7gC,EAAQ8kC,GAC3D,IAAI/B,EAAWnI,EAAO2F,KAAKwC,SAC3B,GAAI+B,GAAYlK,EAAO2F,KAAK0C,UAAW,OAAO,EAC9C,IAAIvuB,EAAO3E,KAAK4vB,IAAI/E,EAAO2F,KAAK0C,UAAY6B,EAAU9kC,GACtD,GAAI0U,EAAO,GAAKquB,EAAS7vB,SACvB9H,EAAOhB,IAAI24B,EAAS7vB,SAAS4xB,EAAUA,EAAWpwB,GAAOmsB,QAEzD,IAAK,IAAIrjC,EAAI,EAAGA,EAAIkX,EAAMlX,IAAK4N,EAAOy1B,EAASrjC,GAAKulC,EAAS+B,EAAWtnC,GAE1E,OAAOkX,CACT,EAAEssB,MAAM,SAASpG,EAAQxvB,EAAQy1B,EAAQ7gC,EAAQ8kC,EAAUC,GASzD,GAJI35B,EAAOA,SAAWE,GAAMF,SAC1B25B,GAAS,IAGN/kC,EAAQ,OAAO,EACpB,IAAIugC,EAAO3F,EAAO2F,KAGlB,GAFAA,EAAK5gB,UAAY/I,KAAKC,MAElBzL,EAAO8H,YAAcqtB,EAAKwC,UAAYxC,EAAKwC,SAAS7vB,UAAW,CACjE,GAAI6xB,EAGF,OAFAxE,EAAKwC,SAAW33B,EAAO8H,SAAS2tB,EAAQA,EAAS7gC,GACjDugC,EAAK0C,UAAYjjC,EACVA,EACF,GAAuB,IAAnBugC,EAAK0C,WAAgC,IAAb6B,EAGjC,OAFAvE,EAAKwC,SAAW33B,EAAO3F,MAAMo7B,EAAQA,EAAS7gC,GAC9CugC,EAAK0C,UAAYjjC,EACVA,EACF,GAAI8kC,EAAW9kC,GAAUugC,EAAK0C,UAEnC,OADA1C,EAAKwC,SAAS34B,IAAIgB,EAAO8H,SAAS2tB,EAAQA,EAAS7gC,GAAS8kC,GACrD9kC,CAEX,CAIA,GADAshC,GAAM+B,kBAAkB9C,EAAMuE,EAAS9kC,GACnCugC,EAAKwC,SAAS7vB,UAAY9H,EAAO8H,SAEnCqtB,EAAKwC,SAAS34B,IAAIgB,EAAO8H,SAAS2tB,EAAQA,EAAS7gC,GAAS8kC,QAE5D,IAAK,IAAItnC,EAAI,EAAGA,EAAIwC,EAAQxC,IAC3B+iC,EAAKwC,SAAS+B,EAAWtnC,GAAK4N,EAAOy1B,EAASrjC,GAIjD,OADA+iC,EAAK0C,UAAYlzB,KAAKuF,IAAIirB,EAAK0C,UAAW6B,EAAW9kC,GAC9CA,CACT,EAAEsiC,OAAO,SAAS1H,EAAQiG,EAAQmE,GAChC,IAAIF,EAAWjE,EAQf,GAPe,IAAXmE,EACFF,GAAYlK,EAAOkK,SACC,IAAXE,GACLjU,GAAGiS,OAAOpI,EAAO2F,KAAK5hC,QACxBmmC,GAAYlK,EAAO2F,KAAK0C,WAGxB6B,EAAW,EACb,MAAM,IAAI/T,GAAG0P,WAAW,IAE1B,OAAOqE,CACT,EAAEvC,SAAS,SAAS3H,EAAQiG,EAAQ7gC,GAClCshC,GAAM+B,kBAAkBzI,EAAO2F,KAAMM,EAAS7gC,GAC9C46B,EAAO2F,KAAK0C,UAAYlzB,KAAKuF,IAAIslB,EAAO2F,KAAK0C,UAAWpC,EAAS7gC,EACnE,EAAEwiC,KAAK,SAAS5H,EAAQ56B,EAAQ8kC,EAAUG,EAAMC,GAC9C,IAAKnU,GAAGiS,OAAOpI,EAAO2F,KAAK5hC,MACzB,MAAM,IAAIoyB,GAAG0P,WAAW,IAE1B,IAAInxB,EACA61B,EACApC,EAAWnI,EAAO2F,KAAKwC,SAE3B,GAAc,EAARmC,GAAcnC,EAAS33B,SAAWE,GAAMF,OAKvC,CAWL,IATI05B,EAAW,GAAKA,EAAW9kC,EAAS+iC,EAAS/iC,UAE7C+iC,EADEA,EAAS7vB,SACA6vB,EAAS7vB,SAAS4xB,EAAUA,EAAW9kC,GAEvCqE,MAAMjF,UAAUqG,MAAM9H,KAAKolC,EAAU+B,EAAUA,EAAW9kC,IAGzEmlC,GAAY,IACZ71B,EAAMoD,KAEJ,MAAM,IAAIqe,GAAG0P,WAAW,IAE1Bn1B,GAAMlB,IAAI24B,EAAUzzB,EACtB,MAjBE61B,GAAY,EACZ71B,EAAMyzB,EAASjM,WAiBjB,MAAO,CAAExnB,IAAKA,EAAK61B,UAAWA,EAChC,EAAE1C,MAAM,SAAS7H,EAAQxvB,EAAQy1B,EAAQ7gC,GAGvC,OAFAshC,GAAMjB,WAAWW,MAAMpG,EAAQxvB,EAAQ,EAAGpL,EAAQ6gC,GAAQ,GAEnD,CACT,IAwBFvH,GAAQ,CAAC8L,IAAI,CAAC,EAAE9Q,UAAUA,KACxB,GAAwB,oBAAbA,UAA0B,OAAOA,UAC5C,IAAI3f,EAAM,KAGV,MAFqB,iBAAV6f,SAAoB7f,EAAM6f,OAAOF,WAAaE,OAAOC,cAAgBD,OAAOE,iBAAmBF,OAAOG,aACjH7pB,EAAO6J,EAAK,2CACLA,CAAG,EACVqgB,WAAW,GAAGqQ,cAAc,YAAYhM,MAAM,WAE9C,OAAOiI,GAAMjI,MAAM7pB,MAAM,KAAM1N,UACjC,EAAEy3B,OAAOA,CAACF,EAAOiM,EAAUv4B,KACzBusB,GAAMiM,YAAYlM,GAAO,CAACpsB,EAAKu4B,KAC7B,GAAIv4B,EAAK,OAAOF,EAASE,GAEzBqsB,GAAMmM,aAAapM,GAAO,CAACpsB,EAAKy4B,KAC9B,GAAIz4B,EAAK,OAAOF,EAASE,GAKzBqsB,GAAMqM,UAHIL,EAAWI,EAASF,EACpBF,EAAWE,EAAQE,EAEH34B,EAAS,GACnC,GACF,EACF64B,KAAKA,KACL1nC,OAAO2nC,OAAOvM,GAAM8L,KAAKt+B,SAASrI,GAAUA,EAAM89B,UAClDjD,GAAM8L,IAAM,CAAC,CAAC,EACdU,MAAMA,CAAC/nC,EAAMgP,KAEb,IAKIg5B,EALAvQ,EAAK8D,GAAM8L,IAAIrnC,GACnB,GAAIy3B,EACF,OAAOzoB,EAAS,KAAMyoB,GAIxB,IACEuQ,EAAMzM,GAAMhF,YAAY3B,KAAK50B,EAAMu7B,GAAMtE,WAC3C,CAAE,MAAOrxB,GACP,OAAOoJ,EAASpJ,EAClB,CACA,IAAKoiC,EACH,OAAOh5B,EAAS,kCAElBg5B,EAAIxQ,gBAAmB5xB,IACrB,IAGIqiC,EAHAxQ,EAAiC7xB,EAAEmS,OAAO0N,OAC1CwS,EAAcryB,EAAEmS,OAAOkgB,aAKzBgQ,EADExQ,EAAGC,iBAAiBC,SAAS4D,GAAM+L,eACzBrP,EAAYC,YAAYqD,GAAM+L,eAE9B7P,EAAGI,kBAAkB0D,GAAM+L,gBAG1BY,WAAWvQ,SAAS,cACjCsQ,EAAUE,YAAY,YAAa,YAAa,CAAEC,QAAQ,GAC5D,EAEFJ,EAAIlQ,UAAY,KAIdyD,GAAM8L,IAAIrnC,GAHVy3B,EAAiCuQ,EAAIviB,OAIrCzW,EAAS,KAAMyoB,EAAG,EAEpBuQ,EAAI5S,QAAWxvB,IACboJ,EAAS9J,KAAKixB,OACdvwB,EAAEwkB,gBAAgB,CACnB,EACDod,YAAYA,CAAClM,EAAOtsB,KAGpB,SAASq5B,EAAU9mC,GACjB,MAAa,MAANA,GAAmB,OAANA,CACtB,CACA,SAAS+mC,EAAW/lC,GAClB,OAAQhB,GACCm+B,GAAKoB,MAAMv+B,EAAMhB,EAE5B,CAIA,IAbA,IAAIqlC,EAAU,CAAC,EAWXlR,EAAQ1C,GAAGqR,QAAQ/I,EAAMiN,YAAYh9B,OAAO88B,GAAWG,IAAIF,EAAWhN,EAAMiN,aAEzE7S,EAAMzzB,QAAQ,CACnB,IACIwmC,EADA9N,EAAOjF,EAAMgT,MAGjB,IACED,EAAOzV,GAAGyV,KAAK9N,EACjB,CAAE,MAAO/0B,GACP,OAAOoJ,EAASpJ,EAClB,CAEIotB,GAAG+R,MAAM0D,EAAK7nC,OAChB80B,EAAMlwB,KAAKiM,MAAMikB,EAAO1C,GAAGqR,QAAQ1J,GAAMpvB,OAAO88B,GAAWG,IAAIF,EAAW3N,KAG5EiM,EAAQjM,GAAQ,CAAE,UAAa8N,EAAKvC,MACtC,CAEA,OAAOl3B,EAAS,KAAM,CAAE9K,KAAM,QAAS0iC,QAASA,GAAU,EAC1Dc,aAAaA,CAACpM,EAAOtsB,KACrB,IAAI43B,EAAU,CAAC,EAEfrL,GAAMwM,MAAMzM,EAAMiN,YAAY,CAACr5B,EAAKuoB,KAClC,GAAIvoB,EAAK,OAAOF,EAASE,GAEzB,IACE,IAAI+oB,EAAcR,EAAGQ,YAAY,CAACsD,GAAM+L,eAAgB,YACxDrP,EAAY7C,QAAWxvB,IACrBoJ,EAAS9J,KAAKixB,OACdvwB,EAAEwkB,gBAAgB,EAGR6N,EAAYC,YAAYqD,GAAM+L,eACxBrlB,MAAM,aAElB0mB,gBAAgB7Q,UAAa7vB,IACjC,IAAI2gC,EAAS3gC,EAAM8P,OAAO0N,OAE1B,IAAKmjB,EACH,OAAO55B,EAAS,KAAM,CAAE9K,KAAM,SAAUuzB,GAAIA,EAAImP,QAASA,IAG3DA,EAAQgC,EAAOC,YAAc,CAAE,UAAaD,EAAO5nC,KAEnD4nC,EAAOE,UAAU,CAErB,CAAE,MAAOljC,GACP,OAAOoJ,EAASpJ,EAClB,IACA,EACFmjC,eAAeA,CAACpO,EAAM3rB,KACtB,IAAIy5B,EAAMjG,EAEV,IAEEA,EADaxP,GAAGgW,WAAWrO,GACb6H,KACdiG,EAAOzV,GAAGyV,KAAK9N,EACjB,CAAE,MAAO/0B,GACP,OAAOoJ,EAASpJ,EAClB,CAEA,OAAIotB,GAAG+R,MAAM0D,EAAK7nC,MACToO,EAAS,KAAM,CAAE,UAAay5B,EAAKvC,MAAO,KAAQuC,EAAK7nC,OACrDoyB,GAAGiS,OAAOwD,EAAK7nC,OAGxB4hC,EAAKwC,SAAWzB,GAAM8B,wBAAwB7C,GACvCxzB,EAAS,KAAM,CAAE,UAAay5B,EAAKvC,MAAO,KAAQuC,EAAK7nC,KAAM,SAAY4hC,EAAKwC,YAE9Eh2B,EAAS,IAAIpD,MAAM,2BAC5B,EACAq9B,gBAAgBA,CAACtO,EAAMuO,EAAOl6B,KAC9B,IACE,GAAIgkB,GAAG+R,MAAMmE,EAAY,MACvBlW,GAAGqI,UAAUV,EAAMuO,EAAY,UAC1B,KAAIlW,GAAGiS,OAAOiE,EAAY,MAG/B,OAAOl6B,EAAS,IAAIpD,MAAM,4BAF1BonB,GAAGmW,UAAUxO,EAAMuO,EAAgB,SAAG,CAAElC,QAAQ,GAGlD,CAEAhU,GAAGoW,MAAMzO,EAAMuO,EAAY,MAC3BlW,GAAGqW,MAAM1O,EAAMuO,EAAiB,UAAGA,EAAiB,UACtD,CAAE,MAAOtjC,GACP,OAAOoJ,EAASpJ,EAClB,CAEAoJ,EAAS,KAAK,EACds6B,iBAAiBA,CAAC3O,EAAM3rB,KACxB,IACE,IAAIy5B,EAAOzV,GAAGyV,KAAK9N,GAEf3H,GAAG+R,MAAM0D,EAAK7nC,MAChBoyB,GAAGoR,MAAMzJ,GACA3H,GAAGiS,OAAOwD,EAAK7nC,OACxBoyB,GAAGmR,OAAOxJ,EAEd,CAAE,MAAO/0B,GACP,OAAOoJ,EAASpJ,EAClB,CAEAoJ,EAAS,KAAK,EACdu6B,gBAAgBA,CAACC,EAAO7O,EAAM3rB,KAC9B,IAAIg5B,EAAMwB,EAAMlpC,IAAIq6B,GACpBqN,EAAIlQ,UAAa7vB,IAAY+G,EAAS,KAAM/G,EAAM8P,OAAO0N,OAAO,EAChEuiB,EAAI5S,QAAWxvB,IACboJ,EAAS9J,KAAKixB,OACdvwB,EAAEwkB,gBAAgB,CACnB,EACDqf,iBAAiBA,CAACD,EAAO7O,EAAMuO,EAAOl6B,KACtC,IACE,IAAIg5B,EAAMwB,EAAMjQ,IAAI2P,EAAOvO,EAC7B,CAAE,MAAO/0B,GAEP,YADAoJ,EAASpJ,EAEX,CACAoiC,EAAIlQ,UAAY,KAAQ9oB,EAAS,KAAK,EACtCg5B,EAAI5S,QAAWxvB,IACboJ,EAAS9J,KAAKixB,OACdvwB,EAAEwkB,gBAAgB,CACnB,EACDsf,kBAAkBA,CAACF,EAAO7O,EAAM3rB,KAChC,IAAIg5B,EAAMwB,EAAMG,OAAOhP,GACvBqN,EAAIlQ,UAAY,KAAQ9oB,EAAS,KAAK,EACtCg5B,EAAI5S,QAAWxvB,IACboJ,EAAS9J,KAAKixB,OACdvwB,EAAEwkB,gBAAgB,CACnB,EACDwd,UAAUA,CAAC/6B,EAAKgyB,EAAK7vB,KA8BrB,SAAS46B,EAAK16B,GACZ,GAAIA,IAAQ26B,EAEV,OADAA,GAAU,EACH76B,EAASE,EAEpB,CAlCA,IAAI6lB,EAAQ,EAERh0B,EAAS,GACbZ,OAAO2pC,KAAKj9B,EAAI+5B,SAAS79B,SAAQ,SAAU/H,GACzC,IACI+oC,EAAKlL,EAAI+H,QAAQ5lC,GAChB+oC,GAFGl9B,EAAI+5B,QAAQ5lC,GAEI,UAAEivB,WAAa8Z,EAAc,UAAE9Z,YACrDlvB,EAAOyE,KAAKxE,GACZ+zB,IAEJ,IAEA,IAAIiV,EAAS,GAQb,GAPA7pC,OAAO2pC,KAAKjL,EAAI+H,SAAS79B,SAAQ,SAAU/H,GACpC6L,EAAI+5B,QAAQ5lC,KACfgpC,EAAOxkC,KAAKxE,GACZ+zB,IAEJ,KAEKA,EACH,OAAO/lB,EAAS,MAGlB,IAAI66B,GAAU,EAEV5R,GADkB,WAAbprB,EAAI3I,KAAoB2I,EAAI4qB,GAAKoH,EAAIpH,IACzBQ,YAAY,CAACsD,GAAM+L,eAAgB,aACpDkC,EAAQvR,EAAYC,YAAYqD,GAAM+L,eAS1CrP,EAAY7C,QAAWxvB,IACrBgkC,EAAK1kC,KAAKixB,OACVvwB,EAAEwkB,gBAAgB,EAGpB6N,EAAYgS,WAAcrkC,KACnBikC,GACH76B,EAAS,KACX,EAKFjO,EAAO8E,OAAOkD,SAAS4xB,IACJ,UAAbkE,EAAI36B,KACNq3B,GAAMgO,gBAAgBC,EAAO7O,GAAM,CAACzrB,EAAKg6B,KACvC,GAAIh6B,EAAK,OAAO06B,EAAK16B,GACrBqsB,GAAM0N,gBAAgBtO,EAAMuO,EAAOU,EAAK,IAG1CrO,GAAMwN,eAAepO,GAAM,CAACzrB,EAAKg6B,KAC/B,GAAIh6B,EAAK,OAAO06B,EAAK16B,GACrBqsB,GAAMkO,iBAAiBD,EAAO7O,EAAMuO,EAAOU,EAAK,GAEpD,IAKFI,EAAOnkC,OAAOqkC,UAAUnhC,SAAS4xB,IACd,UAAbkE,EAAI36B,KACNq3B,GAAM+N,iBAAiB3O,EAAMiP,GAE7BrO,GAAMmO,kBAAkBF,EAAO7O,EAAMiP,EACvC,GACA,GAGJO,GAAM,CAACC,SAAS,MAAMC,UAAU,MAAMjT,YAAY,EAAEkT,MAAM,KAAK1nC,KAAK,WAErD,IA+Bf2nC,EAhCMJ,GAAIG,QACRH,GAAIG,OA+BNC,EAAW,WAEf,IAAIhrC,EAAU,CAedA,WAAqB,SAAU4iC,EAAOC,EAAQoI,EAAMC,GAInD,IAAK,IAAIhrC,EAHT+qC,EAAOA,GAAQ,EAGItpC,EAFnBupC,EAAOA,GAAStI,EAAMlgC,OAASuoC,EAEF3iC,EAAI,EAAGpI,EAAIyB,GAAI,CAC3C,IAAIwpC,EAAQvI,EAAM1iC,KAGdkrC,EAAmBD,GAAS,EAChC,GAAIC,EAAkB,EAAG,CAGxB,IADA,IAAIjrC,EAAIirC,EAAkB,IACb,MAANjrC,GAENirC,GADAjrC,EAAIyiC,EAAM1iC,KAMX,IADA,IAAIgiC,EAAMhiC,EAAIkrC,EACPlrC,EAAIgiC,GAAKW,EAAOv6B,KAAOs6B,EAAM1iC,KAGpC,GAAIA,IAAMyB,EAAG,OAAO2G,CACrB,CAIA,IAAIi7B,EAASX,EAAM1iC,KAAQ0iC,EAAM1iC,MAAQ,EAGzC,GAAe,IAAXqjC,EAAc,OAAOj7B,EACzB,GAAIi7B,EAASj7B,EAAG,QAASpI,EAAE,GAG3B,IAAImrC,EAAwB,GAARF,EAEpB,IADIhrC,EAAIkrC,EAAe,IACV,MAANlrC,GAENkrC,GADAlrC,EAAIyiC,EAAM1iC,KAKX,IAAIorC,EAAMhjC,EAAIi7B,EAEd,IADIrB,EAAM55B,EAAI+iC,EAAe,EACtB/iC,EAAI45B,GAAKW,EAAOv6B,KAAOu6B,EAAOyI,IACtC,CAEA,OAAOhjC,CACR,GAGCijC,EAAe,WACdC,EAAY,EAGZC,EAAyB,EAAXD,EADF,GAMZE,EAFc,EAEWF,EACzBG,EAAe,EAEfC,EAAY,EACZC,GAAa,GAAKD,GAAU,EAE5BE,GAAa,GADD,EAAIF,GACa,EAE7BG,EAA8B,WAEhCv+B,EAAqB,KAAdi+B,GACP,IAAIO,EAAY,IAAI79B,WAAW,OAC3B89B,EAAQ,IAAI99B,WAAW69B,EAAUtpC,QA8NrC,OA3NA1C,EAAQksC,cAAgB,SAAUC,GACjC,OAAOA,EAAQZ,EACZ,EACCY,EAASA,EAAM,IAAO,GAAM,CACjC,EAIAnsC,EAAQosC,SAAW,SAAU9+B,EAAKgyB,EAAK2L,EAAMC,GAE5C,OADAc,EAAUl/B,IAAIm/B,GAIf,SAAwB3+B,EAAKgyB,EAAKgM,EAAKL,EAAMC,GAE5C,IAAImB,EAAOpB,EACPqB,EAAOpB,EAAOD,EACdsB,EAAS,EAEb,GAAIj/B,EAAI5K,QAAU6oC,EAAc,MAAM,IAAIl/B,MAAM,mBAGhD,GAAIiB,EAAI5K,OAASgpC,EAAS,CACzB,IAAI/pC,EAAI3B,EAAQksC,cAAc5+B,EAAI5K,QAClC,GAAK4pC,EAAO3qC,EAAI,MAAM0K,MAAM,qBAAuBigC,EAAO,MAAQ3qC,GASlE,IAPA,IAEE6qC,EAA0C,GAArB,GAAKb,GAG1Bc,EAAYn/B,EAAI5K,OAASgpC,EAEpBJ,EAAME,EAAWiB,GAAW,CAGlC,IAAIC,EAAkBp/B,EAAIg+B,EAAI,IAAI,EAAIh+B,EAAIg+B,GACtCqB,EAAmBr/B,EAAIg+B,EAAI,IAAI,EAAIh+B,EAAIg+B,EAAI,GAE3CsB,EAAOn6B,KAAKo6B,KAAKH,EAAmBC,GAAoB,GAAKZ,KAAYN,EASzE5mC,EAAMmnC,EAAUY,GAAQ,EAK5B,GAHAZ,EAAUY,GAAQtB,EAAM,EAGnBzmC,EAAM,GACRymC,EAAMzmC,IAAS,GAAM,IAEpByI,EAAIzI,EAAI,IAAI,EAAIyI,EAAIzI,EAAI,KAAO8nC,IAC/Br/B,EAAIzI,EAAI,IAAI,EAAIyI,EAAIzI,KAAS6nC,EAKhCpB,GADOkB,KAAuBb,MAR/B,CAaAa,EAA0C,GAArB,GAAKb,GAG1B,IAAIP,EAAkBE,EAAMiB,EACxBhJ,EAAS+H,EAAMzmC,EAInBA,GAAO2mC,EAIP,IADA,IAAIH,EAJJC,GAAOE,EAKAF,EAAMmB,GAAan/B,EAAIg+B,IAAQh+B,EAAIzI,IACzCymC,IACAzmC,IAOD,IAAIsmC,GAHJE,EAAeC,EAAMD,GAGMQ,EAASR,EAAeQ,EAGnD,GAAIT,GAAmBU,EAAS,CAE/BxM,EAAI+M,MAAWP,GAAWF,GAAUT,EACpC,IAAK,IAAI52B,EAAM62B,EAAkBU,EAASv3B,EAAM,IAAKA,GAAO,IAC3D+qB,EAAI+M,KAAU,IAEf/M,EAAI+M,KAAU93B,CACf,MAEC+qB,EAAI+M,MAAWjB,GAAmBQ,GAAUT,EAI7C,IAAK,IAAIjrC,EAAI,EAAGA,EAAIkrC,EAAiBlrC,IACpCo/B,EAAI+M,KAAU/+B,EAAIi/B,EAAOrsC,GAQ1B,GAJAo/B,EAAI+M,KAAU9I,EACdjE,EAAI+M,KAAW9I,GAAU,EAGrB8H,GAAgBQ,EAAQ,CAE3B,IADAR,GAAgBQ,EACTR,GAAgB,KACtBA,GAAgB,IAChB/L,EAAI+M,KAAU,IAGf/M,EAAI+M,KAAUhB,CACf,CAEAkB,EAASjB,CA1DT,CA2DD,CACD,CAGA,GAAc,GAAViB,EAAa,OAAO,EAKxB,IADAnB,EAAkB99B,EAAI5K,OAAS6pC,IACRT,EAAS,CAE/BxM,EAAI+M,KAAWP,GAAWF,EAC1B,IAAK,IAAIkB,EAAK1B,EAAkBU,EAASgB,EAAK,IAAKA,GAAM,IACxDxN,EAAI+M,KAAU,IAEf/M,EAAI+M,KAAUS,CACf,MAECxN,EAAI+M,KAAWjB,GAAmBQ,EAKnC,IADAN,EAAMiB,EACCjB,EAAMh+B,EAAI5K,QAChB48B,EAAI+M,KAAU/+B,EAAIg+B,KAGnB,OAAOe,CACR,CA7IQU,CAAcz/B,EAAKgyB,EAAK,EAAG2L,GAAQ,EAAGC,GAAQ5L,EAAI58B,OAC1D,EA8IA1C,EAAQ63B,WAAa,KAErB73B,EAAQgtC,gBAAkB,SAAS3iC,EAAM4iC,GACvC,GAAIA,EACF,IAAIC,EAAO,IAAI3+B,WAAWvO,EAAQ63B,YAGpCrqB,EAAOnD,aAAgBksB,aACvBlsB,EAAO,IAAIkE,WAAWlE,GACtBwsB,QAAQqE,IAAI,+BAAiC7wB,EAAK3H,QAKlD,IAJA,IAAIyqC,EAAmB,GACnBC,EAAY,GACZ7J,EAAS,EACT/N,EAAQ,EACL+N,EAASl5B,EAAK3H,QAAQ,CAC3B,IAAI2qC,EAAQhjC,EAAKuL,SAAS2tB,EAAQA,EAASvjC,EAAQ63B,YAEnD0L,GAAUvjC,EAAQ63B,WAClB,IAAIyV,EAAQttC,EAAQksC,cAAcmB,EAAM3qC,QACpC6qC,EAAa,IAAIh/B,WAAW++B,GAC5BE,EAAiBxtC,EAAQosC,SAASiB,EAAOE,GAC7C,GAAIC,EAAiB,GAMnB,GALAhgC,EAAOggC,GAAkBF,GACzBC,EAAaA,EAAW33B,SAAS,EAAG43B,GACpCL,EAAiBlnC,KAAKsnC,GACtB/X,GAASgY,EACTJ,EAAUnnC,KAAK,GACXgnC,EAAQ,CACV,IAAIQ,EAAOztC,EAAQ0tC,WAAWH,EAAYL,GAC1C1/B,EAAOigC,IAASJ,EAAM3qC,OAAQ,CAAC+qC,EAAMJ,EAAM3qC,SAC3C,IAAK,IAAIxC,EAAI,EAAGA,EAAImtC,EAAM3qC,OAAQxC,IAChCsN,EAAO6/B,EAAMntC,KAAOgtC,EAAKhtC,GAE7B,OAEAsN,EAA0B,IAAnBggC,GAEPL,EAAiBlnC,KAAKonC,GACtB7X,GAAS6X,EAAM3qC,OACf0qC,EAAUnnC,KAAK,EAEnB,CACAoE,EAAO,KACP,IAAIosB,EAAiB,CACnB,KAAQ,IAAIloB,WAAWinB,EAA2B,EAAnBx1B,EAAQ63B,YACvC,aAAgBrC,EAChB,cAAiB,EAAE,GAAI,GACvB,aAAgB,CAAC,KAAM,MACvB,QAAW,GACX,MAAS,GACT,UAAa4X,GAGf,IADA7J,EAAS,EACArjC,EAAI,EAAGA,EAAIitC,EAAiBzqC,OAAQxC,IAC3Cu2B,EAAqB,KAAE3pB,IAAIqgC,EAAiBjtC,GAAIqjC,GAChD9M,EAAwB,QAAEv2B,GAAKqjC,EAC/B9M,EAAsB,MAAEv2B,GAAKitC,EAAiBjtC,GAAGwC,OACjD6gC,GAAU4J,EAAiBjtC,GAAGwC,OAIhC,OAFAm0B,QAAQqE,IAAI,2BAA6B,CAACzE,EAAqB,KAAE/zB,SACjE8K,EAAO+1B,IAAW/N,GACXiB,CACT,EAEAjpB,EAAOxN,EAAQ63B,WAAc,OAEtB73B,CAEP,CAzTe,GA4TAgrC,GAETJ,GAAI/S,WAAa+S,GAAIG,MAAMlT,WAC7B,EAAEnB,YAAY,SAAUiX,EAAMC,GAC5BhD,GAAIvnC,OACJ,IAAIozB,EAAiBkX,EAAqB,eACrClX,IAAgBA,EAAiBmU,GAAIG,MAAMiC,gBAAgBW,EAAW,OAC3EngC,EAAOipB,EAA8B,cAAE/zB,SAAW+zB,EAA6B,aAAE/zB,QACjF,IAAK,IAAIxC,EAAI,EAAGA,EAAIu2B,EAA8B,cAAE/zB,OAAQxC,IAC1Du2B,EAA8B,cAAEv2B,IAAM,EACtCu2B,EAA6B,aAAEv2B,GAAKu2B,EAAqB,KAAE7gB,SAAS6gB,EAA6B,aAAIv2B,EAAE0qC,GAAI/S,WAC7CpB,EAA6B,cAAKv2B,EAAE,GAAG0qC,GAAI/S,YACzGrqB,EAAOipB,EAA6B,aAAEv2B,GAAGwC,SAAWkoC,GAAI/S,YAE1D8V,EAAe,SAAEE,MAAMrkC,SAAQ,SAAS8G,GACtC,IAAI6wB,EAAMhB,GAAKe,QAAQ5wB,EAAKJ,UACxBzP,EAAO0/B,GAAKiB,SAAS9wB,EAAKJ,UAC9BujB,GAAGqa,WAAW,GAAI3M,GAAK,GAAM,GAC7B,IAAIgD,EAAS1Q,GAAGmI,YAAYuF,GAAKv/B,OACjCgpC,GAAI1G,WAAWC,EAAQ1jC,EAAMmqC,GAAIE,UAAW,EAAG,CAC7CrU,eAAgBA,EAChBpd,MAAO/I,EAAK+I,MACZ6oB,IAAK5xB,EAAK4xB,KAEd,IAMI0L,IACFp2B,GAAQnU,OACRsqC,EAAe,SAAEE,MAAMrkC,SAAQ,SAAS8G,GACtC,IAAIy9B,GAAU,EACVC,EAAW19B,EAAKJ,SACpBnC,GAAuB,eAAEvE,SAAQ,SAASykC,GACxC,IAAIF,GACAE,EAAkB,UAAED,GAAW,CAEjC7+B,IACA,IAAI++B,EAASA,IAAM7+B,IACfmnB,EAAY/C,GAAG0a,SAASH,GAC5BC,EAAe,OAAEzX,EAAWwX,EAAUE,EAAQA,GAC9CH,GAAU,CACZ,CACF,GACF,IAEJ,EAAE7J,WAAW,SAAUC,EAAQ1jC,EAAMY,EAAMqhC,EAAK+C,EAAUkB,GACxD,IAAI1D,EAAOxP,GAAGyQ,WAAWC,EAAQ1jC,EAAMY,GAgBvC,OAfA4hC,EAAK5hC,KAAOA,EACZ4hC,EAAKsB,SAAWqG,GAAIrG,SACpBtB,EAAKF,WAAa6H,GAAI7H,WACtBE,EAAK5gB,WAAaskB,GAAS,IAAIrtB,MAAMoX,UACrCljB,EAAOo9B,GAAIE,YAAcF,GAAIC,UACzBxpC,IAASupC,GAAIE,WACf7H,EAAK7rB,KAAOquB,EAASvD,IAAMuD,EAASpsB,MACpC4pB,EAAKwC,SAAWA,IAEhBxC,EAAK7rB,KAAO,KACZ6rB,EAAKwC,SAAW,CAAC,GAEftB,IACFA,EAAOsB,SAAShlC,GAAQwiC,GAEnBA,CACT,EAAEsB,SAAS,CAACD,QAAQ,SAASrB,GACzB,MAAO,CACLP,IAAK,EACL4D,IAAKrD,EAAKrmB,GACVvb,KAAM4hC,EAAK5hC,KACXklC,MAAO,EACPC,IAAK,EACLC,IAAK,EACLvD,UAAM31B,EACN6J,KAAM6rB,EAAK7rB,KACXsvB,MAAO,IAAIptB,KAAK2pB,EAAK5gB,WACrBskB,MAAO,IAAIrtB,KAAK2pB,EAAK5gB,WACrBukB,MAAO,IAAIttB,KAAK2pB,EAAK5gB,WACrBwkB,QAAS,KACTC,OAAQr0B,KAAKG,KAAKqwB,EAAK7rB,KAAO,MAElC,EAAEotB,QAAQ,SAASvB,EAAMoD,QACL94B,IAAd84B,EAAKhlC,OACP4hC,EAAK5hC,KAAOglC,EAAKhlC,WAEIkM,IAAnB84B,EAAKhkB,YACP4gB,EAAK5gB,UAAYgkB,EAAKhkB,UAE1B,EAAEoiB,OAAO,WACP,MAAM,IAAIhR,GAAG0P,WAAW,GAC1B,EAAEuB,MAAM,WACN,MAAM,IAAIjR,GAAG0P,WAAW,GAC1B,EAAEwB,OAAO,WACP,MAAM,IAAIlR,GAAG0P,WAAW,GAC1B,EAAEyB,OAAO,WACP,MAAM,IAAInR,GAAG0P,WAAW,GAC1B,EAAE0B,MAAM,WACN,MAAM,IAAIpR,GAAG0P,WAAW,GAC1B,EAAE2B,QAAQ,WACR,MAAM,IAAIrR,GAAG0P,WAAW,GAC1B,EAAE4B,QAAQ,WACR,MAAM,IAAItR,GAAG0P,WAAW,GAC1B,GAAGJ,WAAW,CAACO,KAAK,SAAUhG,EAAQxvB,EAAQy1B,EAAQ7gC,EAAQ8kC,GAG5D,IADA9kC,EAAS+P,KAAK4vB,IAAI3/B,EAAQ46B,EAAO2F,KAAK7rB,KAAOowB,KAC/B,EAAG,OAAO,EAIxB,IAHA,IAAI/B,EAAWnI,EAAO2F,KAAKwC,SACvBhP,EAAiBgP,EAAShP,eAC1B2X,EAAU,EACPA,EAAU1rC,GAAQ,CACvB,IAMI2rC,EANAh1B,EAAQosB,EAASpsB,MAAQmuB,EAAW4G,EACpCE,EAAU5rC,EAAS0rC,EAEnBG,EAAa97B,KAAKE,MAAM0G,EAAQuxB,GAAI/S,YACpC2W,EAAkB/X,EAAwB,QAAE8X,GAC5Cf,EAAiB/W,EAAsB,MAAE8X,GAE7C,GAAI9X,EAA0B,UAAE8X,GAAa,CAC3C,IAAIE,EAAQhY,EAA8B,cAAE3wB,QAAQyoC,GACpD,GAAIE,GAAS,EACXJ,EAAY5X,EAA6B,aAAEgY,OACtC,CAELhY,EAA8B,cAAE0S,MAChC1S,EAA8B,cAAEtC,QAAQoa,GACxCF,EAAY5X,EAA6B,aAAE0S,MAC3C1S,EAA6B,aAAEtC,QAAQka,GACnC5X,EAAsB,QACxB5c,GAAI,uBAAyB00B,GAC7BxgC,GAA2B,oBAAKA,GAA2B,oBAAK,GAAK,GAEvE,IAAIw/B,EAAa9W,EAAqB,KAAE7gB,SAAS44B,EAAiBA,EAAkBhB,GAEhFkB,EAAe9D,GAAIG,MAAM2C,WAAWH,EAAYc,GAEhDE,EAAa9X,EAA0B,UAAE/zB,OAAO,GAAG8K,EAAOkhC,IAAiB9D,GAAI/S,WACrF,CACF,MAEEwW,EAAY5X,EAAqB,KAAE7gB,SAAS44B,EAAiBA,EAAkB5D,GAAI/S,YAErF,IAAI8W,EAAet1B,EAAQuxB,GAAI/S,WAC3B+W,EAAan8B,KAAK4vB,IAAIsM,EAAeL,EAAS1D,GAAI/S,YACtD/pB,EAAOhB,IAAIuhC,EAAUz4B,SAAS+4B,EAAcC,GAAarL,EAAS6K,GAElEA,GADkBQ,EAAaD,CAEjC,CACA,OAAOP,CACT,EAAE1K,MAAM,WACN,MAAM,IAAIjQ,GAAG0P,WAAW,GAC1B,EAAE6B,OAAO,SAAU1H,EAAQiG,EAAQmE,GACjC,IAAIF,EAAWjE,EAQf,GAPe,IAAXmE,EACFF,GAAYlK,EAAOkK,SACC,IAAXE,GACLjU,GAAGiS,OAAOpI,EAAO2F,KAAK5hC,QACxBmmC,GAAYlK,EAAO2F,KAAK7rB,MAGxBowB,EAAW,EACb,MAAM,IAAI/T,GAAG0P,WAAW,IAE1B,OAAOqE,CACT,IACF/T,GAAK,CAACzwB,KAAK,KAAK6rC,OAAO,GAAGC,QAAQ,CAAC,EAAEC,QAAQ,GAAGC,UAAU,EAAEC,UAAU,KAAKC,YAAY,IAAIxb,aAAY,EAAMC,mBAAkB,EAAKwP,WAAW,KAAK4D,cAAc,CAAC,EAAEoI,YAAY,KAAKC,eAAe,EAAE3F,WAAWA,CAACrO,EAAMiU,EAAO,CAAC,KAG/N,KAFAjU,EAAOoG,GAAQ71B,QAAQyvB,IAEZ,MAAO,CAAEA,KAAM,GAAI6H,KAAM,MAQpC,IAFAoM,EAAO1U,EAJQ,CACb2U,cAAc,EACdC,cAAe,GAEcF,IAEtBE,cAAgB,EACvB,MAAM,IAAI9b,GAAG0P,WAAW,IAU1B,IANA,IAAI1C,EAAQrF,EAAK4F,MAAM,KAAKh1B,QAAQhK,KAAQA,IAGxCwD,EAAUiuB,GAAGzwB,KACbwsC,EAAe,IAEVtvC,EAAI,EAAGA,EAAIugC,EAAM/9B,OAAQxC,IAAK,CACrC,IAAIuvC,EAAUvvC,IAAMugC,EAAM/9B,OAAO,EACjC,GAAI+sC,GAAUJ,EAAKlL,OAEjB,MAeF,GAZA3+B,EAAUiuB,GAAG2T,WAAW5hC,EAASi7B,EAAMvgC,IACvCsvC,EAAerP,GAAKoB,MAAMiO,EAAc/O,EAAMvgC,IAG1CuzB,GAAGic,aAAalqC,MACbiqC,GAAWA,GAAUJ,EAAKC,gBAC7B9pC,EAAUA,EAAQmqC,QAAQ3sC,OAMzBysC,GAAUJ,EAAKO,OAElB,IADA,IAAIpsB,EAAQ,EACLiQ,GAAGmS,OAAOpgC,EAAQnE,OAAO,CAC9B,IAAI+jC,EAAO3R,GAAG4R,SAASmK,GAMvB,GALAA,EAAehO,GAAQ71B,QAAQw0B,GAAKe,QAAQsO,GAAepK,GAG3D5/B,EADaiuB,GAAGgW,WAAW+F,EAAc,CAAED,cAAeF,EAAKE,cAAgB,IAC9DtM,KAEbzf,IAAU,GACZ,MAAM,IAAIiQ,GAAG0P,WAAW,GAE5B,CAEJ,CAEA,MAAO,CAAE/H,KAAMoU,EAAcvM,KAAMz9B,EAAS,EAC5CqqC,QAAS5M,IAET,IADA,IAAI7H,IACS,CACX,GAAI3H,GAAGqc,OAAO7M,GAAO,CACnB,IAAIlH,EAAQkH,EAAKlH,MAAMiN,WACvB,OAAK5N,EAC4B,MAA1BW,EAAMA,EAAMr5B,OAAO,GAAaq5B,EAAQ,IAAMX,EAAOW,EAAQX,EADlDW,CAEpB,CACAX,EAAOA,EAAO6H,EAAKxiC,KAAO,IAAM26B,EAAO6H,EAAKxiC,KAC5CwiC,EAAOA,EAAKkB,MACd,GACA4L,SAASA,CAACC,EAAUvvC,KAGpB,IAFA,IAAImsC,EAAO,EAEF1sC,EAAI,EAAGA,EAAIO,EAAKiC,OAAQxC,IAC/B0sC,GAASA,GAAQ,GAAKA,EAAOnsC,EAAK+T,WAAWtU,GAAM,EAErD,OAAS8vC,EAAWpD,IAAU,GAAKnZ,GAAGwb,UAAUvsC,MAAM,EACtDutC,YAAahN,IACb,IAAI2J,EAAOnZ,GAAGsc,SAAS9M,EAAKkB,OAAOvnB,GAAIqmB,EAAKxiC,MAC5CwiC,EAAKiN,UAAYzc,GAAGwb,UAAUrC,GAC9BnZ,GAAGwb,UAAUrC,GAAQ3J,CAAI,EACzBkN,eAAgBlN,IAChB,IAAI2J,EAAOnZ,GAAGsc,SAAS9M,EAAKkB,OAAOvnB,GAAIqmB,EAAKxiC,MAC5C,GAAIgzB,GAAGwb,UAAUrC,KAAU3J,EACzBxP,GAAGwb,UAAUrC,GAAQ3J,EAAKiN,eAG1B,IADA,IAAI1qC,EAAUiuB,GAAGwb,UAAUrC,GACpBpnC,GAAS,CACd,GAAIA,EAAQ0qC,YAAcjN,EAAM,CAC9Bz9B,EAAQ0qC,UAAYjN,EAAKiN,UACzB,KACF,CACA1qC,EAAUA,EAAQ0qC,SACpB,CACF,EACA9I,WAAWA,CAACjD,EAAQ1jC,KACpB,IAAI2vC,EAAU3c,GAAG4c,UAAUlM,GAC3B,GAAIiM,EACF,MAAM,IAAI3c,GAAG0P,WAAWiN,EAASjM,GAGnC,IADA,IAAIyI,EAAOnZ,GAAGsc,SAAS5L,EAAOvnB,GAAInc,GACzBwiC,EAAOxP,GAAGwb,UAAUrC,GAAO3J,EAAMA,EAAOA,EAAKiN,UAEpD,GAAIjN,EAAKkB,OAAOvnB,KAAOunB,EAAOvnB,IADfqmB,EAAKxiC,OAC6BA,EAC/C,OAAOwiC,EAIX,OAAOxP,GAAGgR,OAAON,EAAQ1jC,EAAK,EAC9ByjC,WAAWA,CAACC,EAAQ1jC,EAAMY,EAAM6hC,KAChC,IAAID,EAAO,IAAIxP,GAAG6c,OAAOnM,EAAQ1jC,EAAMY,EAAM6hC,GAI7C,OAFAzP,GAAGwc,YAAYhN,GAERA,CAAI,EACXsN,YAAatN,IACbxP,GAAG0c,eAAelN,EAAK,EACvB6M,OAAQ7M,GACDA,IAASA,EAAKkB,OACrBuL,aAAczM,KACLA,EAAK0M,QACdjK,OAAQrkC,GACkB,QAAX,MAAPA,GACRmkC,MAAOnkC,GACmB,QAAX,MAAPA,GACRukC,OAAQvkC,GACkB,QAAX,MAAPA,GACRwkC,SAAUxkC,GACgB,OAAX,MAAPA,GACR+iC,SAAU/iC,GACgB,QAAX,MAAPA,GACRgjC,OAAQhjC,GACkB,OAAX,MAAPA,GACRmvC,SAAUnvC,GACgB,QAAX,MAAPA,GACRovC,UAAU,CAAC,EAAI,EAAE,KAAK,EAAE,EAAI,IAAI,KAAK,IAAI,EAAI,KAAK,KAAK,MAAMC,kBAAmBp8B,IAChF,IAAIszB,EAAQnU,GAAGgd,UAAUn8B,GACzB,QAAoB,IAATszB,EACT,MAAM,IAAIv7B,MAAM,2BAA6BiI,GAE/C,OAAOszB,CAAK,EACZ+I,wBAAyBC,IACzB,IAAIC,EAAQ,CAAC,IAAK,IAAK,MAAa,EAAPD,GAI7B,OAHY,IAAPA,IACHC,GAAS,KAEJA,CAAK,EACZC,gBAAgBA,CAAC7N,EAAM4N,IACnBpd,GAAGE,qBAIHkd,EAAM1d,SAAS,MAAsB,IAAZ8P,EAAK5hC,SAEvBwvC,EAAM1d,SAAS,MAAsB,IAAZ8P,EAAK5hC,SAE9BwvC,EAAM1d,SAAS,MAAsB,GAAZ8P,EAAK5hC,MAPhC,EAIA,EAOTgvC,UAAWlP,IACX,IAAIiP,EAAU3c,GAAGqd,gBAAgB3P,EAAK,KACtC,OAAIiP,IACCjP,EAAIoD,SAASE,OACX,EAD0B,EACzB,EACRsM,UAAUA,CAAC5P,EAAK1gC,KAChB,IAEE,OADWgzB,GAAG2T,WAAWjG,EAAK1gC,GACvB,EACT,CAAE,MAAO4F,GACT,CACA,OAAOotB,GAAGqd,gBAAgB3P,EAAK,KAAK,EACpC6P,UAAUA,CAAC7P,EAAK1gC,EAAMwwC,KACtB,IAAIhO,EACJ,IACEA,EAAOxP,GAAG2T,WAAWjG,EAAK1gC,EAC5B,CAAE,MAAO4F,GACP,OAAOA,EAAE6qC,KACX,CACA,IAAId,EAAU3c,GAAGqd,gBAAgB3P,EAAK,MACtC,GAAIiP,EACF,OAAOA,EAET,GAAIa,EAAO,CACT,IAAKxd,GAAG+R,MAAMvC,EAAK5hC,MACjB,OAAO,GAET,GAAIoyB,GAAGqc,OAAO7M,IAASxP,GAAGoc,QAAQ5M,KAAUxP,GAAGkO,MAC7C,OAAO,EAEX,MACE,GAAIlO,GAAG+R,MAAMvC,EAAK5hC,MAChB,OAAO,GAGX,OAAO,CAAC,EACR8vC,QAAQA,CAAClO,EAAM2E,IACV3E,EAGDxP,GAAGmS,OAAO3C,EAAK5hC,MACV,GACEoyB,GAAG+R,MAAMvC,EAAK5hC,QACmB,MAAtCoyB,GAAGkd,wBAAwB/I,IAClB,IAARA,GACI,GAGJnU,GAAGqd,gBAAgB7N,EAAMxP,GAAGkd,wBAAwB/I,IAVlD,GAWTwJ,aAAa,KAAKC,OAAOA,CAACC,EAAW,EAAGC,EAAS9d,GAAG2d,gBACpD,IAAK,IAAII,EAAKF,EAAUE,GAAMD,EAAQC,IACpC,IAAK/d,GAAGsb,QAAQyC,GACd,OAAOA,EAGX,MAAM,IAAI/d,GAAG0P,WAAW,GAAG,EAC3BsO,UAAWD,GAAO/d,GAAGsb,QAAQyC,GAAIE,aAAaA,CAACpU,EAAQgU,EAAUC,KAC5D9d,GAAGke,WACNle,GAAGke,SAA+B,WAChChsC,KAAKisC,OAAS,CAAE,CAClB,EACAne,GAAGke,SAAS7vC,UAAY,CAAC,EACzBlB,OAAOoM,iBAAiBymB,GAAGke,SAAS7vC,UAAW,CAC7CF,OAAQ,CAENb,IAAK,WAAa,OAAO4E,KAAKs9B,IAAM,EAEpCn2B,IAAK,SAASgmB,GAAOntB,KAAKs9B,KAAOnQ,CAAK,GAExC+e,OAAQ,CAEN9wC,IAAK,WAAa,OAAkC,IAAb,QAAb4E,KAAKiiC,MAAwB,GAEzDkK,QAAS,CAEP/wC,IAAK,WAAa,OAAkC,IAAb,QAAb4E,KAAKiiC,MAAwB,GAEzDmK,SAAU,CAERhxC,IAAK,WAAa,OAAqB,KAAb4E,KAAKiiC,KAAe,GAEhDA,MAAO,CAEL7mC,IAAK,WAAa,OAAO4E,KAAKisC,OAAOhK,KAAO,EAE5C96B,IAAK,SAASgmB,GAAOntB,KAAKisC,OAAOhK,MAAQ9U,CAAK,GAEhD0U,SAAW,CAETzmC,IAAK,WAAa,OAAO4E,KAAKisC,OAAOpK,QAAU,EAE/C16B,IAAK,SAASgmB,GAAOntB,KAAKisC,OAAOpK,SAAW1U,CAAK,MAKvDwK,EAAS3C,EAAc,IAAIlH,GAAGke,SAAYrU,GAC1C,IAAIkU,EAAK/d,GAAG4d,OAAOC,EAAUC,GAG7B,OAFAjU,EAAOkU,GAAKA,EACZ/d,GAAGsb,QAAQyC,GAAMlU,EACVA,CAAM,EACb0U,YAAaR,IACb/d,GAAGsb,QAAQyC,GAAM,IAAI,EACrBjM,kBAAkB,CAAClQ,KAAMiI,IACvB,IAAI2U,EAASxe,GAAGye,UAAU5U,EAAO2F,KAAKC,MAEtC5F,EAAOyF,WAAakP,EAAOlP,WAEvBzF,EAAOyF,WAAW1N,MACpBiI,EAAOyF,WAAW1N,KAAKiI,EACzB,EACA0H,OAAOA,KACP,MAAM,IAAIvR,GAAG0P,WAAW,GAAG,GAC1BgP,MAAOzP,GAAUA,GAAQ,EAAG0P,MAAO1P,GAAiB,IAAPA,EAAa2P,QAAQA,CAACC,EAAIC,IAASD,GAAO,EAAKC,EAAKzP,eAAeA,CAACJ,EAAKC,KACzHlP,GAAGqb,QAAQpM,GAAO,CAAEK,WAAYJ,EAAK,EACrCuP,UAAWxP,GAAQjP,GAAGqb,QAAQpM,GAAK8P,UAAWzW,IAI9C,IAHA,IAAI8S,EAAS,GACT1Y,EAAQ,CAAC4F,GAEN5F,EAAMzzB,QAAQ,CACnB,IAAIpC,EAAI61B,EAAMgT,MAEd0F,EAAO5oC,KAAK3F,GAEZ61B,EAAMlwB,KAAKiM,MAAMikB,EAAO71B,EAAEuuC,OAC5B,CAEA,OAAOA,CAAM,EACb5S,OAAOA,CAAC+L,EAAUv4B,KAelB,SAASgjC,EAAWrC,GAElB,OADA3c,GAAG2b,iBACI3/B,EAAS2gC,EAClB,CAEA,SAAS/F,EAAK+F,GACZ,GAAIA,EACF,OAAK/F,EAAKC,aAIV,GAHED,EAAKC,SAAU,EACRmI,EAAWrC,MAIhBsC,GAAa7D,EAAOnsC,QACxB+vC,EAAW,KAEf,CA9BuB,mBAAZzK,IACTv4B,EAAWu4B,EACXA,GAAW,GAGbvU,GAAG2b,iBAEC3b,GAAG2b,eAAiB,GACtBz/B,GAAI,YAAc8jB,GAAG2b,eAAiB,2EAGxC,IAAIP,EAASpb,GAAG+e,UAAU/e,GAAGzwB,KAAK+4B,OAC9B2W,EAAY,EAqBhB7D,EAAOrlC,SAASuyB,IACd,IAAKA,EAAMp3B,KAAKs3B,OACd,OAAOoO,EAAK,MAEdtO,EAAMp3B,KAAKs3B,OAAOF,EAAOiM,EAAUqC,EAAK,GACxC,EACFtO,MAAMA,CAACp3B,EAAM0qC,EAAMrG,KACnB,IAEI/F,EAFAjgC,EAAsB,MAAfgmC,EACP2J,GAAU3J,EAGd,GAAIhmC,GAAQywB,GAAGzwB,KACb,MAAM,IAAIywB,GAAG0P,WAAW,IACnB,IAAKngC,IAAS2vC,EAAQ,CAC3B,IAAIlO,EAAShR,GAAGgW,WAAWT,EAAY,CAAEsG,cAAc,IAKvD,GAHAtG,EAAavE,EAAOrJ,KAGhB3H,GAAGic,aAFPzM,EAAOwB,EAAOxB,MAGZ,MAAM,IAAIxP,GAAG0P,WAAW,IAG1B,IAAK1P,GAAG+R,MAAMvC,EAAK5hC,MACjB,MAAM,IAAIoyB,GAAG0P,WAAW,GAE5B,CAEA,IAAIpH,EAAQ,CACVp3B,KAAMA,EACN0qC,KAAMA,EACNrG,WAAYA,EACZ6F,OAAQ,IAIN+D,EAAYjuC,EAAKo3B,MAAMA,GAgB3B,OAfA6W,EAAU7W,MAAQA,EAClBA,EAAM/4B,KAAO4vC,EAET5vC,EACFywB,GAAGzwB,KAAO4vC,EACD3P,IAETA,EAAK0M,QAAU5T,EAGXkH,EAAKlH,OACPkH,EAAKlH,MAAM8S,OAAO5oC,KAAK81B,IAIpB6W,CAAS,EAChBjoC,QAASq+B,IACT,IAAIvE,EAAShR,GAAGgW,WAAWT,EAAY,CAAEsG,cAAc,IAEvD,IAAK7b,GAAGic,aAAajL,EAAOxB,MAC1B,MAAM,IAAIxP,GAAG0P,WAAW,IAI1B,IAAIF,EAAOwB,EAAOxB,KACdlH,EAAQkH,EAAK0M,QACbd,EAASpb,GAAG+e,UAAUzW,GAE1Bn7B,OAAO2pC,KAAK9W,GAAGwb,WAAWzlC,SAASojC,IAGjC,IAFA,IAAIpnC,EAAUiuB,GAAGwb,UAAUrC,GAEpBpnC,GAAS,CACd,IAAImU,EAAOnU,EAAQ0qC,UAEfrB,EAAO1b,SAAS3tB,EAAQu2B,QAC1BtI,GAAG8c,YAAY/qC,GAGjBA,EAAUmU,CACZ,KAIFspB,EAAK0M,QAAU,KAGf,IAAIp6B,EAAM0tB,EAAKlH,MAAM8S,OAAO/oC,QAAQi2B,GACpCkH,EAAKlH,MAAM8S,OAAOzjC,OAAOmK,EAAK,EAAE,EAChCkvB,OAAOA,CAACN,EAAQ1jC,IACT0jC,EAAOI,SAASE,OAAON,EAAQ1jC,GACtCikC,MAAMA,CAACtJ,EAAM/5B,EAAMqhC,KACnB,IACIyB,EADS1Q,GAAGgW,WAAWrO,EAAM,CAAE+I,QAAQ,IACvBlB,KAChBxiC,EAAO0/B,GAAKiB,SAAShG,GACzB,IAAK36B,GAAiB,MAATA,GAAyB,OAATA,EAC3B,MAAM,IAAIgzB,GAAG0P,WAAW,IAE1B,IAAIiN,EAAU3c,GAAGsd,UAAU5M,EAAQ1jC,GACnC,GAAI2vC,EACF,MAAM,IAAI3c,GAAG0P,WAAWiN,GAE1B,IAAKjM,EAAOI,SAASG,MACnB,MAAM,IAAIjR,GAAG0P,WAAW,IAE1B,OAAOgB,EAAOI,SAASG,MAAMP,EAAQ1jC,EAAMY,EAAMqhC,EAAI,EACrDlhC,OAAOA,CAAC45B,EAAM/5B,KACdA,OAAgBkM,IAATlM,EAAqBA,EAAO,IACnCA,GAAQ,KAEDoyB,GAAGiR,MAAMtJ,EADhB/5B,GAAQ,MACoB,IAC5BwxC,MAAMA,CAACzX,EAAM/5B,KACbA,OAAgBkM,IAATlM,EAAqBA,EAAO,IACnCA,GAAQ,KAEDoyB,GAAGiR,MAAMtJ,EADhB/5B,GAAQ,MACoB,IAC5By6B,UAAUA,CAACV,EAAM/5B,KAGjB,IAFA,IAAIyxC,EAAO1X,EAAK4F,MAAM,KAClBxgC,EAAI,GACCN,EAAI,EAAGA,EAAI4yC,EAAKpwC,SAAUxC,EACjC,GAAK4yC,EAAK5yC,GAAV,CACAM,GAAK,IAAMsyC,EAAK5yC,GAChB,IACEuzB,GAAGof,MAAMryC,EAAGa,EACd,CAAE,MAAMgF,GACN,GAAe,IAAXA,EAAE6qC,MAAa,MAAM7qC,CAC3B,CANsB,CAOxB,EACA0sC,MAAMA,CAAC3X,EAAM/5B,EAAMqhC,UACD,IAAPA,IACTA,EAAMrhC,EACNA,EAAO,KAGFoyB,GAAGiR,MAAMtJ,EADhB/5B,GAAQ,KACoBqhC,IAC5BqC,QAAQA,CAACwC,EAASyL,KAClB,IAAKxR,GAAQ71B,QAAQ47B,GACnB,MAAM,IAAI9T,GAAG0P,WAAW,IAE1B,IACIgB,EADS1Q,GAAGgW,WAAWuJ,EAAS,CAAE7O,QAAQ,IAC1BlB,KACpB,IAAKkB,EACH,MAAM,IAAI1Q,GAAG0P,WAAW,IAE1B,IAAImE,EAAUnH,GAAKiB,SAAS4R,GACxB5C,EAAU3c,GAAGsd,UAAU5M,EAAQmD,GACnC,GAAI8I,EACF,MAAM,IAAI3c,GAAG0P,WAAWiN,GAE1B,IAAKjM,EAAOI,SAASQ,QACnB,MAAM,IAAItR,GAAG0P,WAAW,IAE1B,OAAOgB,EAAOI,SAASQ,QAAQZ,EAAQmD,EAASC,EAAQ,EACxD5C,OAAOA,CAACsO,EAAUC,KAClB,IAKYC,EAASlM,EALjBmM,EAAcjT,GAAKe,QAAQ+R,GAC3BI,EAAclT,GAAKe,QAAQgS,GAC3BI,EAAWnT,GAAKiB,SAAS6R,GACzB/L,EAAW/G,GAAKiB,SAAS8R,GAU7B,GAJAC,EADS1f,GAAGgW,WAAWwJ,EAAU,CAAE9O,QAAQ,IAC1BlB,KAEjBgE,EADSxT,GAAGgW,WAAWyJ,EAAU,CAAE/O,QAAQ,IAC1BlB,MAEZkQ,IAAYlM,EAAS,MAAM,IAAIxT,GAAG0P,WAAW,IAElD,GAAIgQ,EAAQpX,QAAUkL,EAAQlL,MAC5B,MAAM,IAAItI,GAAG0P,WAAW,IAG1B,IAYIgE,EAZAH,EAAWvT,GAAG2T,WAAW+L,EAASG,GAElCzR,EAAWL,GAAQK,SAASoR,EAAUI,GAC1C,GAA2B,MAAvBxR,EAASxB,OAAO,GAClB,MAAM,IAAI5M,GAAG0P,WAAW,IAI1B,GAA2B,OAD3BtB,EAAWL,GAAQK,SAASqR,EAAUE,IACzB/S,OAAO,GAClB,MAAM,IAAI5M,GAAG0P,WAAW,IAI1B,IACEgE,EAAW1T,GAAG2T,WAAWH,EAASC,EACpC,CAAE,MAAO7gC,GACP,CAGF,GAAI2gC,IAAaG,EAAjB,CAIA,IAAI8J,EAAQxd,GAAG+R,MAAMwB,EAAS3lC,MAC1B+uC,EAAU3c,GAAGud,UAAUmC,EAASG,EAAUrC,GAC9C,GAAIb,EACF,MAAM,IAAI3c,GAAG0P,WAAWiN,GAO1B,GAHAA,EAAUjJ,EACR1T,GAAGud,UAAU/J,EAASC,EAAU+J,GAChCxd,GAAGsd,UAAU9J,EAASC,GAEtB,MAAM,IAAIzT,GAAG0P,WAAWiN,GAE1B,IAAK+C,EAAQ5O,SAASI,OACpB,MAAM,IAAIlR,GAAG0P,WAAW,IAE1B,GAAI1P,GAAGic,aAAa1I,IAAcG,GAAY1T,GAAGic,aAAavI,GAC5D,MAAM,IAAI1T,GAAG0P,WAAW,IAG1B,GAAI8D,IAAYkM,IACd/C,EAAU3c,GAAGqd,gBAAgBqC,EAAS,MAEpC,MAAM,IAAI1f,GAAG0P,WAAWiN,GAI5B3c,GAAG0c,eAAenJ,GAElB,IACEmM,EAAQ5O,SAASI,OAAOqC,EAAUC,EAASC,EAC7C,CAAE,MAAO7gC,GACP,MAAMA,CACR,CAAC,QAGCotB,GAAGwc,YAAYjJ,EACjB,CAvCA,CAuCA,EACAnC,MAAOzJ,IACP,IACI+I,EADS1Q,GAAGgW,WAAWrO,EAAM,CAAE+I,QAAQ,IACvBlB,KAChBxiC,EAAO0/B,GAAKiB,SAAShG,GACrB6H,EAAOxP,GAAG2T,WAAWjD,EAAQ1jC,GAC7B2vC,EAAU3c,GAAGud,UAAU7M,EAAQ1jC,GAAM,GACzC,GAAI2vC,EACF,MAAM,IAAI3c,GAAG0P,WAAWiN,GAE1B,IAAKjM,EAAOI,SAASM,MACnB,MAAM,IAAIpR,GAAG0P,WAAW,IAE1B,GAAI1P,GAAGic,aAAazM,GAClB,MAAM,IAAIxP,GAAG0P,WAAW,IAE1BgB,EAAOI,SAASM,MAAMV,EAAQ1jC,GAC9BgzB,GAAG8c,YAAYtN,EAAK,EACpB6B,QAAS1J,IACT,IACI6H,EADSxP,GAAGgW,WAAWrO,EAAM,CAAEwU,QAAQ,IACzB3M,KAClB,IAAKA,EAAKsB,SAASO,QACjB,MAAM,IAAIrR,GAAG0P,WAAW,IAE1B,OAAOF,EAAKsB,SAASO,QAAQ7B,EAAK,EAClC2B,OAAQxJ,IACR,IACI+I,EADS1Q,GAAGgW,WAAWrO,EAAM,CAAE+I,QAAQ,IACvBlB,KACpB,IAAKkB,EACH,MAAM,IAAI1Q,GAAG0P,WAAW,IAE1B,IAAI1iC,EAAO0/B,GAAKiB,SAAShG,GACrB6H,EAAOxP,GAAG2T,WAAWjD,EAAQ1jC,GAC7B2vC,EAAU3c,GAAGud,UAAU7M,EAAQ1jC,GAAM,GACzC,GAAI2vC,EAIF,MAAM,IAAI3c,GAAG0P,WAAWiN,GAE1B,IAAKjM,EAAOI,SAASK,OACnB,MAAM,IAAInR,GAAG0P,WAAW,IAE1B,GAAI1P,GAAGic,aAAazM,GAClB,MAAM,IAAIxP,GAAG0P,WAAW,IAE1BgB,EAAOI,SAASK,OAAOT,EAAQ1jC,GAC/BgzB,GAAG8c,YAAYtN,EAAK,EACpBoC,SAAUjK,IACV,IACIgK,EADS3R,GAAGgW,WAAWrO,GACT6H,KAClB,IAAKmC,EACH,MAAM,IAAI3R,GAAG0P,WAAW,IAE1B,IAAKiC,EAAKb,SAASc,SACjB,MAAM,IAAI5R,GAAG0P,WAAW,IAE1B,OAAO3B,GAAQ71B,QAAQ8nB,GAAGoc,QAAQzK,EAAKjB,QAASiB,EAAKb,SAASc,SAASD,GAAM,EAC7E8D,KAAKA,CAAC9N,EAAMmY,KACZ,IACItQ,EADSxP,GAAGgW,WAAWrO,EAAM,CAAEwU,QAAS2D,IAC1BtQ,KAClB,IAAKA,EACH,MAAM,IAAIxP,GAAG0P,WAAW,IAE1B,IAAKF,EAAKsB,SAASD,QACjB,MAAM,IAAI7Q,GAAG0P,WAAW,IAE1B,OAAOF,EAAKsB,SAASD,QAAQrB,EAAK,EAClCuQ,MAAOpY,GACA3H,GAAGyV,KAAK9N,GAAM,GACrByO,MAAMA,CAACzO,EAAM/5B,EAAMkyC,KACnB,IAAItQ,EAOJ,KAJEA,EAFiB,iBAAR7H,EACI3H,GAAGgW,WAAWrO,EAAM,CAAEwU,QAAS2D,IAC9BtQ,KAEP7H,GAECmJ,SAASC,QACjB,MAAM,IAAI/Q,GAAG0P,WAAW,IAE1BF,EAAKsB,SAASC,QAAQvB,EAAM,CAC1B5hC,KAAc,KAAPA,GAA4B,KAAZ4hC,EAAK5hC,KAC5BghB,UAAW/I,KAAKC,OAChB,EACFk6B,OAAOA,CAACrY,EAAM/5B,KACdoyB,GAAGoW,MAAMzO,EAAM/5B,GAAM,EAAK,EAC1BqyC,OAAOA,CAAClC,EAAInwC,KACZ,IAAIi8B,EAAS7J,GAAGge,UAAUD,GAC1B,IAAKlU,EACH,MAAM,IAAI7J,GAAG0P,WAAW,GAE1B1P,GAAGoW,MAAMvM,EAAO2F,KAAM5hC,EAAK,EAC3BsyC,MAAMA,CAACvY,EAAMoL,EAAKC,EAAK8M,KACvB,IAAItQ,EAOJ,KAJEA,EAFiB,iBAAR7H,EACI3H,GAAGgW,WAAWrO,EAAM,CAAEwU,QAAS2D,IAC9BtQ,KAEP7H,GAECmJ,SAASC,QACjB,MAAM,IAAI/Q,GAAG0P,WAAW,IAE1BF,EAAKsB,SAASC,QAAQvB,EAAM,CAC1B5gB,UAAW/I,KAAKC,OAEhB,EACFq6B,OAAOA,CAACxY,EAAMoL,EAAKC,KACnBhT,GAAGkgB,MAAMvY,EAAMoL,EAAKC,GAAK,EAAK,EAC9BoN,OAAOA,CAACrC,EAAIhL,EAAKC,KACjB,IAAInJ,EAAS7J,GAAGge,UAAUD,GAC1B,IAAKlU,EACH,MAAM,IAAI7J,GAAG0P,WAAW,GAE1B1P,GAAGkgB,MAAMrW,EAAO2F,KAAMuD,EAAKC,EAAI,EAC/BqN,SAASA,CAAC1Y,EAAM7mB,KAChB,GAAIA,EAAM,EACR,MAAM,IAAIkf,GAAG0P,WAAW,IAE1B,IAAIF,EAOJ,KAJEA,EAFiB,iBAAR7H,EACI3H,GAAGgW,WAAWrO,EAAM,CAAEwU,QAAQ,IAC7B3M,KAEP7H,GAECmJ,SAASC,QACjB,MAAM,IAAI/Q,GAAG0P,WAAW,IAE1B,GAAI1P,GAAG+R,MAAMvC,EAAK5hC,MAChB,MAAM,IAAIoyB,GAAG0P,WAAW,IAE1B,IAAK1P,GAAGiS,OAAOzC,EAAK5hC,MAClB,MAAM,IAAIoyB,GAAG0P,WAAW,IAE1B,IAAIiN,EAAU3c,GAAGqd,gBAAgB7N,EAAM,KACvC,GAAImN,EACF,MAAM,IAAI3c,GAAG0P,WAAWiN,GAE1BnN,EAAKsB,SAASC,QAAQvB,EAAM,CAC1B7rB,KAAM7C,EACN8N,UAAW/I,KAAKC,OAChB,EACFw6B,UAAUA,CAACvC,EAAIj9B,KACf,IAAI+oB,EAAS7J,GAAGge,UAAUD,GAC1B,IAAKlU,EACH,MAAM,IAAI7J,GAAG0P,WAAW,GAE1B,GAAiC,IAAb,QAAf7F,EAAOsK,OACV,MAAM,IAAInU,GAAG0P,WAAW,IAE1B1P,GAAGqgB,SAASxW,EAAO2F,KAAM1uB,EAAI,EAC7Bu1B,MAAMA,CAAC1O,EAAMsL,EAAOC,KACpB,IACI1D,EADSxP,GAAGgW,WAAWrO,EAAM,CAAEwU,QAAQ,IACzB3M,KAClBA,EAAKsB,SAASC,QAAQvB,EAAM,CAC1B5gB,UAAW5P,KAAKuF,IAAI0uB,EAAOC,IAC3B,EACFtR,KAAKA,CAAC+F,EAAMwM,EAAOvmC,KACnB,GAAa,KAAT+5B,EACF,MAAM,IAAI3H,GAAG0P,WAAW,IAS1B,IAAIF,EACJ,GAPA5hC,OAAsB,IAARA,EAAsB,IAAiBA,EAEnDA,EADW,IAFbumC,EAAwB,iBAATA,EAAoBnU,GAAGid,kBAAkB9I,GAASA,GAGhD,KAAPvmC,EAAe,MAEhB,EAGU,iBAAR+5B,EACT6H,EAAO7H,MACF,CACLA,EAAO+E,GAAKU,UAAUzF,GACtB,IAIE6H,EAHaxP,GAAGgW,WAAWrO,EAAM,CAC/BwU,SAAkB,OAARhI,KAEE3E,IAChB,CAAE,MAAO58B,GACP,CAEJ,CAEA,IAAI2tC,GAAU,EACd,GAAa,GAARpM,EACH,GAAI3E,GAEF,GAAa,IAAR2E,EACH,MAAM,IAAInU,GAAG0P,WAAW,SAI1BF,EAAOxP,GAAGiR,MAAMtJ,EAAM/5B,EAAM,GAC5B2yC,GAAU,EAGd,IAAK/Q,EACH,MAAM,IAAIxP,GAAG0P,WAAW,IAO1B,GAJI1P,GAAGoS,SAAS5C,EAAK5hC,QACnBumC,IAAS,KAGE,MAARA,IAAmBnU,GAAG+R,MAAMvC,EAAK5hC,MACpC,MAAM,IAAIoyB,GAAG0P,WAAW,IAK1B,IAAK6Q,EAAS,CACZ,IAAI5D,EAAU3c,GAAG0d,QAAQlO,EAAM2E,GAC/B,GAAIwI,EACF,MAAM,IAAI3c,GAAG0P,WAAWiN,EAE5B,CAEa,IAARxI,IAAiBoM,GACpBvgB,GAAGqgB,SAAS7Q,EAAM,GAGpB2E,IAAS,OAGT,IAAItK,EAAS7J,GAAGie,aAAa,CAC3BzO,KAAMA,EACN7H,KAAM3H,GAAGoc,QAAQ5M,GACjB2E,MAAOA,EACPxE,UAAU,EACVoE,SAAU,EACVzE,WAAYE,EAAKF,WAEjBkR,SAAU,GACVrd,OAAO,IAYT,OATI0G,EAAOyF,WAAW1N,MACpBiI,EAAOyF,WAAW1N,KAAKiI,IAErBvvB,GAAqB,cAAe,EAAR65B,IACzBnU,GAAGygB,YAAWzgB,GAAGygB,UAAY,CAAC,GAC7B9Y,KAAQ3H,GAAGygB,YACfzgB,GAAGygB,UAAU9Y,GAAQ,IAGlBkC,CAAM,EACb2B,MAAO3B,IACP,GAAI7J,GAAG0gB,SAAS7W,GACd,MAAM,IAAI7J,GAAG0P,WAAW,GAEtB7F,EAAO8W,WAAU9W,EAAO8W,SAAW,MACvC,IACM9W,EAAOyF,WAAW9D,OACpB3B,EAAOyF,WAAW9D,MAAM3B,EAE5B,CAAE,MAAOj3B,GACP,MAAMA,CACR,CAAC,QACCotB,GAAGue,YAAY1U,EAAOkU,GACxB,CACAlU,EAAOkU,GAAK,IAAI,EAChB2C,SAAU7W,GACW,OAAdA,EAAOkU,GACdxM,OAAOA,CAAC1H,EAAQiG,EAAQmE,KACxB,GAAIjU,GAAG0gB,SAAS7W,GACd,MAAM,IAAI7J,GAAG0P,WAAW,GAE1B,IAAK7F,EAAO8F,WAAa9F,EAAOyF,WAAWiC,OACzC,MAAM,IAAIvR,GAAG0P,WAAW,IAE1B,GAAc,GAAVuE,GAAyB,GAAVA,GAAyB,GAAVA,EAChC,MAAM,IAAIjU,GAAG0P,WAAW,IAI1B,OAFA7F,EAAOkK,SAAWlK,EAAOyF,WAAWiC,OAAO1H,EAAQiG,EAAQmE,GAC3DpK,EAAO2W,SAAW,GACX3W,EAAOkK,QAAQ,EACtBlE,KAAKA,CAAChG,EAAQxvB,EAAQy1B,EAAQ7gC,EAAQ8kC,KACtC,GAAI9kC,EAAS,GAAK8kC,EAAW,EAC3B,MAAM,IAAI/T,GAAG0P,WAAW,IAE1B,GAAI1P,GAAG0gB,SAAS7W,GACd,MAAM,IAAI7J,GAAG0P,WAAW,GAE1B,GAAiC,IAAb,QAAf7F,EAAOsK,OACV,MAAM,IAAInU,GAAG0P,WAAW,GAE1B,GAAI1P,GAAG+R,MAAMlI,EAAO2F,KAAK5hC,MACvB,MAAM,IAAIoyB,GAAG0P,WAAW,IAE1B,IAAK7F,EAAOyF,WAAWO,KACrB,MAAM,IAAI7P,GAAG0P,WAAW,IAE1B,IAAIkR,OAA6B,IAAZ7M,EACrB,GAAK6M,GAEE,IAAK/W,EAAO8F,SACjB,MAAM,IAAI3P,GAAG0P,WAAW,SAFxBqE,EAAWlK,EAAOkK,SAIpB,IAAI/D,EAAYnG,EAAOyF,WAAWO,KAAKhG,EAAQxvB,EAAQy1B,EAAQ7gC,EAAQ8kC,GAEvE,OADK6M,IAAS/W,EAAOkK,UAAY/D,GAC1BA,CAAS,EAChBC,MAAMA,CAACpG,EAAQxvB,EAAQy1B,EAAQ7gC,EAAQ8kC,EAAUC,KACjD,GAAI/kC,EAAS,GAAK8kC,EAAW,EAC3B,MAAM,IAAI/T,GAAG0P,WAAW,IAE1B,GAAI1P,GAAG0gB,SAAS7W,GACd,MAAM,IAAI7J,GAAG0P,WAAW,GAE1B,GAAiC,IAAb,QAAf7F,EAAOsK,OACV,MAAM,IAAInU,GAAG0P,WAAW,GAE1B,GAAI1P,GAAG+R,MAAMlI,EAAO2F,KAAK5hC,MACvB,MAAM,IAAIoyB,GAAG0P,WAAW,IAE1B,IAAK7F,EAAOyF,WAAWW,MACrB,MAAM,IAAIjQ,GAAG0P,WAAW,IAEtB7F,EAAO8F,UAA2B,KAAf9F,EAAOsK,OAE5BnU,GAAGuR,OAAO1H,EAAQ,EAAG,GAEvB,IAAI+W,OAA6B,IAAZ7M,EACrB,GAAK6M,GAEE,IAAK/W,EAAO8F,SACjB,MAAM,IAAI3P,GAAG0P,WAAW,SAFxBqE,EAAWlK,EAAOkK,SAIpB,IAAI8M,EAAehX,EAAOyF,WAAWW,MAAMpG,EAAQxvB,EAAQy1B,EAAQ7gC,EAAQ8kC,EAAUC,GAErF,OADK4M,IAAS/W,EAAOkK,UAAY8M,GAC1BA,CAAY,EACnBrP,SAASA,CAAC3H,EAAQiG,EAAQ7gC,KAC1B,GAAI+wB,GAAG0gB,SAAS7W,GACd,MAAM,IAAI7J,GAAG0P,WAAW,GAE1B,GAAII,EAAS,GAAK7gC,GAAU,EAC1B,MAAM,IAAI+wB,GAAG0P,WAAW,IAE1B,GAAiC,IAAb,QAAf7F,EAAOsK,OACV,MAAM,IAAInU,GAAG0P,WAAW,GAE1B,IAAK1P,GAAGiS,OAAOpI,EAAO2F,KAAK5hC,QAAUoyB,GAAG+R,MAAMlI,EAAO2F,KAAK5hC,MACxD,MAAM,IAAIoyB,GAAG0P,WAAW,IAE1B,IAAK7F,EAAOyF,WAAWkC,SACrB,MAAM,IAAIxR,GAAG0P,WAAW,KAE1B7F,EAAOyF,WAAWkC,SAAS3H,EAAQiG,EAAQ7gC,EAAO,EAClDwiC,KAAKA,CAAC5H,EAAQ56B,EAAQ8kC,EAAUG,EAAMC,KAOtC,GAAmB,IAAP,EAAPD,IACkB,IAAP,EAARC,IAC4B,IAAb,QAAftK,EAAOsK,OACb,MAAM,IAAInU,GAAG0P,WAAW,GAE1B,GAAiC,IAAb,QAAf7F,EAAOsK,OACV,MAAM,IAAInU,GAAG0P,WAAW,GAE1B,IAAK7F,EAAOyF,WAAWmC,KACrB,MAAM,IAAIzR,GAAG0P,WAAW,IAE1B,OAAO7F,EAAOyF,WAAWmC,KAAK5H,EAAQ56B,EAAQ8kC,EAAUG,EAAMC,EAAM,EACpEzC,MAAMA,CAAC7H,EAAQxvB,EAAQy1B,EAAQ7gC,EAAQ6xC,IAClCjX,EAAOyF,WAAWoC,MAGhB7H,EAAOyF,WAAWoC,MAAM7H,EAAQxvB,EAAQy1B,EAAQ7gC,EAAQ6xC,GAFtD,EAGTC,OAAQlX,IAAW,EAAEmX,MAAMA,CAACnX,EAAQoX,EAAK37B,KACzC,IAAKukB,EAAOyF,WAAW0R,MACrB,MAAM,IAAIhhB,GAAG0P,WAAW,IAE1B,OAAO7F,EAAOyF,WAAW0R,MAAMnX,EAAQoX,EAAK37B,EAAI,EAChDo1B,SAASA,CAAC/S,EAAMiU,EAAO,CAAC,KAGxB,GAFAA,EAAKzH,MAAQyH,EAAKzH,OAAS,EAC3ByH,EAAKsF,SAAWtF,EAAKsF,UAAY,SACX,SAAlBtF,EAAKsF,UAAyC,WAAlBtF,EAAKsF,SACnC,MAAM,IAAItoC,MAAM,0BAA4BgjC,EAAKsF,SAAW,KAE9D,IAAIt9B,EACAimB,EAAS7J,GAAG4B,KAAK+F,EAAMiU,EAAKzH,OAE5BllC,EADO+wB,GAAGyV,KAAK9N,GACDhkB,KACd+D,EAAM,IAAI5M,WAAW7L,GAQzB,OAPA+wB,GAAG6P,KAAKhG,EAAQniB,EAAK,EAAGzY,EAAQ,GACV,SAAlB2sC,EAAKsF,SACPt9B,EAAMhC,EAAkB8F,EAAK,GACF,WAAlBk0B,EAAKsF,WACdt9B,EAAM8D,GAERsY,GAAGwL,MAAM3B,GACFjmB,CAAG,EACVuyB,UAAUA,CAACxO,EAAM/wB,EAAMglC,EAAO,CAAC,KAC/BA,EAAKzH,MAAQyH,EAAKzH,OAAS,IAC3B,IAAItK,EAAS7J,GAAG4B,KAAK+F,EAAMiU,EAAKzH,MAAOyH,EAAKhuC,MAC5C,GAAmB,iBAARgJ,EAAkB,CAC3B,IAAI8Q,EAAM,IAAI5M,WAAW8F,EAAgBhK,GAAM,GAC3CuqC,EAAiBngC,EAAkBpK,EAAM8Q,EAAK,EAAGA,EAAIzY,QACzD+wB,GAAGiQ,MAAMpG,EAAQniB,EAAK,EAAGy5B,OAAgBrnC,EAAW8hC,EAAK5H,OAC3D,KAAO,KAAIlR,YAAYse,OAAOxqC,GAG5B,MAAM,IAAIgC,MAAM,yBAFhBonB,GAAGiQ,MAAMpG,EAAQjzB,EAAM,EAAGA,EAAK4f,gBAAY1c,EAAW8hC,EAAK5H,OAG7D,CACAhU,GAAGwL,MAAM3B,EAAO,EAChBqE,IAAIA,IAAMlO,GAAGyb,YAAY4F,MAAO1Z,IAChC,IAAIqJ,EAAShR,GAAGgW,WAAWrO,EAAM,CAAEwU,QAAQ,IAC3C,GAAoB,OAAhBnL,EAAOxB,KACT,MAAM,IAAIxP,GAAG0P,WAAW,IAE1B,IAAK1P,GAAG+R,MAAMf,EAAOxB,KAAK5hC,MACxB,MAAM,IAAIoyB,GAAG0P,WAAW,IAE1B,IAAIiN,EAAU3c,GAAGqd,gBAAgBrM,EAAOxB,KAAM,KAC9C,GAAImN,EACF,MAAM,IAAI3c,GAAG0P,WAAWiN,GAE1B3c,GAAGyb,YAAczK,EAAOrJ,IAAI,EAC5B2Z,yBAAyBA,KACzBthB,GAAGof,MAAM,QACTpf,GAAGof,MAAM,SACTpf,GAAGof,MAAM,iBAAiB,EAC1BmC,qBAAqBA,KAErBvhB,GAAGof,MAAM,QAETpf,GAAGqP,eAAerP,GAAG4e,QAAQ,EAAG,GAAI,CAClC/O,KAAMA,IAAM,EACZI,MAAOA,CAACpG,EAAQxvB,EAAQy1B,EAAQ7gC,IAAgBA,IAElD+wB,GAAGsf,MAAM,YAAatf,GAAG4e,QAAQ,EAAG,IAIpCze,GAAI/wB,SAAS4wB,GAAG4e,QAAQ,EAAG,GAAIze,GAAIgQ,iBACnChQ,GAAI/wB,SAAS4wB,GAAG4e,QAAQ,EAAG,GAAIze,GAAImQ,kBACnCtQ,GAAGsf,MAAM,WAAYtf,GAAG4e,QAAQ,EAAG,IACnC5e,GAAGsf,MAAM,YAAatf,GAAG4e,QAAQ,EAAG,IAGpC,IAAI4C,EAAe,IAAI1mC,WAAW,MAAO2mC,EAAa,EAClDC,EAAaA,KACI,IAAfD,IACFA,EAAalhC,EAAWihC,GAAchrB,YAEjCgrB,IAAeC,IAExBzhB,GAAG2hB,aAAa,OAAQ,SAAUD,GAClC1hB,GAAG2hB,aAAa,OAAQ,UAAWD,GAGnC1hB,GAAGof,MAAM,YACTpf,GAAGof,MAAM,eAAe,EACxBwC,yBAAyBA,KAGzB5hB,GAAGof,MAAM,SACT,IAAIyC,EAAY7hB,GAAGof,MAAM,cACzBpf,GAAGof,MAAM,iBACTpf,GAAGsI,MAAM,CACPA,MAAOA,KACL,IAAIkH,EAAOxP,GAAGyQ,WAAWoR,EAAW,KAAM,MAAwB,IAelE,OAdArS,EAAKsB,SAAW,CACdE,OAAQA,CAACN,EAAQ1jC,KACf,IACI68B,EAAS7J,GAAGge,WADNhxC,GAEV,IAAK68B,EAAQ,MAAM,IAAI7J,GAAG0P,WAAW,GACrC,IAAI9rB,EAAM,CACR8sB,OAAQ,KACRpI,MAAO,CAAEiN,WAAY,QACrBzE,SAAU,CAAEc,SAAUA,IAAM/H,EAAOlC,OAGrC,OADA/jB,EAAI8sB,OAAS9sB,EACNA,CAAG,GAGP4rB,CAAI,GAEZ,CAAC,EAAG,gBAAgB,EACvBsS,sBAAsBA,KASlBxnC,GAAc,MAChB0lB,GAAG2hB,aAAa,OAAQ,QAASrnC,GAAc,OAE/C0lB,GAAGsR,QAAQ,WAAY,cAErBh3B,GAAe,OACjB0lB,GAAG2hB,aAAa,OAAQ,SAAU,KAAMrnC,GAAe,QAEvD0lB,GAAGsR,QAAQ,WAAY,eAErBh3B,GAAe,OACjB0lB,GAAG2hB,aAAa,OAAQ,SAAU,KAAMrnC,GAAe,QAEvD0lB,GAAGsR,QAAQ,YAAa,eAIdtR,GAAG4B,KAAK,aAAc,GACrB5B,GAAG4B,KAAK,cAAe,GACvB5B,GAAG4B,KAAK,cAAe,EAAE,EACtCmgB,iBAAiBA,KACb/hB,GAAG0P,aACP1P,GAAG0P,WAAkC,SAAoB+N,EAAOjO,GAO9Dt9B,KAAKlF,KAAO,aACZkF,KAAKs9B,KAAOA,EACZt9B,KAAK8vC,SAAgC,SAASvE,GAC5CvrC,KAAKurC,MAAQA,CACf,EACAvrC,KAAK8vC,SAASvE,GACdvrC,KAAKgM,QAAU,UAEjB,EACA8hB,GAAG0P,WAAWrhC,UAAY,IAAIuK,MAC9BonB,GAAG0P,WAAWrhC,UAAUuD,YAAcouB,GAAG0P,WAEzC,CAAC,IAAI35B,SAASiR,IACZgZ,GAAGsT,cAActsB,GAAQ,IAAIgZ,GAAG0P,WAAW1oB,GAC3CgZ,GAAGsT,cAActsB,GAAMa,MAAQ,2BAA2B,IAC1D,EACFo6B,WAAWA,KACXjiB,GAAG+hB,mBAEH/hB,GAAGwb,UAAY,IAAIloC,MAAM,MAEzB0sB,GAAGsI,MAAMiI,GAAO,CAAC,EAAG,KAEpBvQ,GAAGshB,2BACHthB,GAAGuhB,uBACHvhB,GAAG4hB,2BAEH5hB,GAAG0b,YAAc,CACf,MAASnL,GACT,MAAShI,GACV,EACD34B,KAAKA,CAACu/B,EAAOC,EAAQjM,KACrBnD,GAAGpwB,KAAKqwB,aAAc,EAEtBD,GAAG+hB,mBAGHznC,GAAc,MAAI60B,GAAS70B,GAAc,MACzCA,GAAe,OAAI80B,GAAU90B,GAAe,OAC5CA,GAAe,OAAI6oB,GAAS7oB,GAAe,OAE3C0lB,GAAG8hB,uBAAuB,EAC1BjN,KAAKA,KACL7U,GAAGpwB,KAAKqwB,aAAc,EAGtB,IAAK,IAAIxzB,EAAI,EAAGA,EAAIuzB,GAAGsb,QAAQrsC,OAAQxC,IAAK,CAC1C,IAAIo9B,EAAS7J,GAAGsb,QAAQ7uC,GACnBo9B,GAGL7J,GAAGwL,MAAM3B,EACX,GACAqY,QAAQA,CAACC,EAASC,KAClB,IAAIx0C,EAAO,EAGX,OAFIu0C,IAASv0C,GAAQ,KACjBw0C,IAAUx0C,GAAQ,KACfA,CAAI,EACXy0C,WAAWA,CAAC1a,EAAM2a,KAClB,IAAI1+B,EAAMoc,GAAGmI,YAAYR,EAAM2a,GAC/B,OAAK1+B,EAAIwkB,OAGFxkB,EAAIzV,OAFF,IAEQ,EACjBg6B,YAAYA,CAACR,EAAM2a,KAEnB,IAEE3a,GADIqJ,EAAShR,GAAGgW,WAAWrO,EAAM,CAAEwU,QAASmG,KAC9B3a,IAChB,CAAE,MAAO/0B,GACT,CACA,IAAIgR,EAAM,CACRy4B,QAAQ,EAAOjU,QAAQ,EAAOjF,MAAO,EAAGn2B,KAAM,KAAM26B,KAAM,KAAMx5B,OAAQ,KACxEo0C,cAAc,EAAOC,WAAY,KAAMC,aAAc,MAEvD,IACE,IAAIzR,EAAShR,GAAGgW,WAAWrO,EAAM,CAAE+I,QAAQ,IAC3C9sB,EAAI2+B,cAAe,EACnB3+B,EAAI4+B,WAAaxR,EAAOrJ,KACxB/jB,EAAI6+B,aAAezR,EAAOxB,KAC1B5rB,EAAI5W,KAAO0/B,GAAKiB,SAAShG,GACzBqJ,EAAShR,GAAGgW,WAAWrO,EAAM,CAAEwU,QAASmG,IACxC1+B,EAAIwkB,QAAS,EACbxkB,EAAI+jB,KAAOqJ,EAAOrJ,KAClB/jB,EAAIzV,OAAS6iC,EAAOxB,KACpB5rB,EAAI5W,KAAOgkC,EAAOxB,KAAKxiC,KACvB4W,EAAIy4B,OAAyB,MAAhBrL,EAAOrJ,IACtB,CAAE,MAAO/0B,GACPgR,EAAIuf,MAAQvwB,EAAE6qC,KAChB,CACA,OAAO75B,CAAG,EACVy2B,WAAWA,CAAC3J,EAAQ/I,KACpB+I,EAA0B,iBAAVA,EAAqBA,EAAS1Q,GAAGoc,QAAQ1L,GAEzD,IADA,IAAI1D,EAAQrF,EAAK4F,MAAM,KAAK2J,UACrBlK,EAAM/9B,QAAQ,CACnB,IAAIyzC,EAAO1V,EAAM0I,MACjB,GAAKgN,EAAL,CACA,IAAI3wC,EAAU26B,GAAKoB,MAAM4C,EAAQgS,GACjC,IACE1iB,GAAGof,MAAMrtC,EACX,CAAE,MAAOa,GACP,CAEF89B,EAAS3+B,CAPU,CAQrB,CACA,OAAOA,CAAO,EACd4wC,WAAWA,CAACjS,EAAQ1jC,EAAM41C,EAAYT,EAASC,KAC/C,IAAIza,EAAO+E,GAAKoB,MAAuB,iBAAV4C,EAAqBA,EAAS1Q,GAAGoc,QAAQ1L,GAAS1jC,GAC3EY,EAAOoyB,GAAGkiB,QAAQC,EAASC,GAC/B,OAAOpiB,GAAGjyB,OAAO45B,EAAM/5B,EAAK,EAC5Bi1C,eAAeA,CAACnS,EAAQ1jC,EAAM4J,EAAMurC,EAASC,EAAUpO,KACvD,IAAIrM,EAAO36B,EACP0jC,IACFA,EAA0B,iBAAVA,EAAqBA,EAAS1Q,GAAGoc,QAAQ1L,GACzD/I,EAAO36B,EAAO0/B,GAAKoB,MAAM4C,EAAQ1jC,GAAQ0jC,GAE3C,IAAI9iC,EAAOoyB,GAAGkiB,QAAQC,EAASC,GAC3B5S,EAAOxP,GAAGjyB,OAAO45B,EAAM/5B,GAC3B,GAAIgJ,EAAM,CACR,GAAmB,iBAARA,EAAkB,CAE3B,IADA,IAAI43B,EAAM,IAAIl7B,MAAMsD,EAAK3H,QAChBxC,EAAI,EAAGqU,EAAMlK,EAAK3H,OAAQxC,EAAIqU,IAAOrU,EAAG+hC,EAAI/hC,GAAKmK,EAAKmK,WAAWtU,GAC1EmK,EAAO43B,CACT,CAEAxO,GAAGoW,MAAM5G,EAAa,IAAP5hC,GACf,IAAIi8B,EAAS7J,GAAG4B,KAAK4N,EAAM,KAC3BxP,GAAGiQ,MAAMpG,EAAQjzB,EAAM,EAAGA,EAAK3H,OAAQ,EAAG+kC,GAC1ChU,GAAGwL,MAAM3B,GACT7J,GAAGoW,MAAM5G,EAAM5hC,EACjB,CACA,OAAO4hC,CAAI,EACXmS,aAAaA,CAACjR,EAAQ1jC,EAAMmiC,EAAOC,KACnC,IAAIzH,EAAO+E,GAAKoB,MAAuB,iBAAV4C,EAAqBA,EAAS1Q,GAAGoc,QAAQ1L,GAAS1jC,GAC3EY,EAAOoyB,GAAGkiB,UAAU/S,IAASC,GAC5BpP,GAAG2hB,aAAajD,QAAO1e,GAAG2hB,aAAajD,MAAQ,IACpD,IAAIzP,EAAMjP,GAAG4e,QAAQ5e,GAAG2hB,aAAajD,QAAS,GAgD9C,OA7CA1e,GAAGqP,eAAeJ,EAAK,CACrBrN,KAAOiI,IACLA,EAAO8F,UAAW,CAAK,EAEzBnE,MAAQ3B,KAEFuF,GAAUA,EAAO/0B,QAAU+0B,EAAO/0B,OAAOpL,QAC3CmgC,EAAO,GACT,EAEFS,KAAMA,CAAChG,EAAQxvB,EAAQy1B,EAAQ7gC,KAE7B,IADA,IAAI+gC,EAAY,EACPvjC,EAAI,EAAGA,EAAIwC,EAAQxC,IAAK,CAC/B,IAAIgmB,EACJ,IACEA,EAAS0c,GACX,CAAE,MAAOv8B,GACP,MAAM,IAAIotB,GAAG0P,WAAW,GAC1B,CACA,QAAe51B,IAAX2Y,GAAsC,IAAdud,EAC1B,MAAM,IAAIhQ,GAAG0P,WAAW,GAE1B,GAAIjd,QAAyC,MAC7Cud,IACA31B,EAAOy1B,EAAOrjC,GAAKgmB,CACrB,CAIA,OAHIud,IACFnG,EAAO2F,KAAK5gB,UAAY/I,KAAKC,OAExBkqB,CAAS,EAElBC,MAAOA,CAACpG,EAAQxvB,EAAQy1B,EAAQ7gC,KAC9B,IAAK,IAAIxC,EAAI,EAAGA,EAAIwC,EAAQxC,IAC1B,IACE2iC,EAAO/0B,EAAOy1B,EAAOrjC,GACvB,CAAE,MAAOmG,GACP,MAAM,IAAIotB,GAAG0P,WAAW,GAC1B,CAKF,OAHIzgC,IACF46B,EAAO2F,KAAK5gB,UAAY/I,KAAKC,OAExBrZ,CAAC,IAGLuzB,GAAGsf,MAAM3X,EAAM/5B,EAAMqhC,EAAI,EAChC6T,cAAeC,IACf,GAAIA,EAAIC,UAAYD,EAAIE,UAAYF,EAAIpR,MAAQoR,EAAI/Q,SAAU,OAAO,EACrE,GAA6B,oBAAlBrQ,eACT,MAAM,IAAI/oB,MAAM,oMACX,IAAIkuB,GAWT,MAAM,IAAIluB,MAAM,iDAThB,IAGEmqC,EAAI/Q,SAAW1wB,EAAmBwlB,GAAMic,EAAI/zC,MAAM,GAClD+zC,EAAI7Q,UAAY6Q,EAAI/Q,SAAS/iC,MAC/B,CAAE,MAAO2D,GACP,MAAM,IAAIotB,GAAG0P,WAAW,GAC1B,CAGF,EACAwT,eAAeA,CAACxS,EAAQ1jC,EAAMgC,EAAKmzC,EAASC,KAG5C,SAASe,IACPjxC,KAAKkxC,aAAc,EACnBlxC,KAAK0zB,OAAS,EAChB,CA+HA,SAASyd,EAAYxZ,EAAQxvB,EAAQy1B,EAAQ7gC,EAAQ8kC,GACnD,IAAI/B,EAAWnI,EAAO2F,KAAKwC,SAC3B,GAAI+B,GAAY/B,EAAS/iC,OACvB,OAAO,EACT,IAAI0U,EAAO3E,KAAK4vB,IAAIoD,EAAS/iC,OAAS8kC,EAAU9kC,GAChD,GAAI+iC,EAASt9B,MACX,IAAK,IAAIjI,EAAI,EAAGA,EAAIkX,EAAMlX,IACxB4N,EAAOy1B,EAASrjC,GAAKulC,EAAS+B,EAAWtnC,QAG3C,IAASA,EAAI,EAAGA,EAAIkX,EAAMlX,IACxB4N,EAAOy1B,EAASrjC,GAAKulC,EAAS1kC,IAAIymC,EAAWtnC,GAGjD,OAAOkX,CACT,CApEA,GAzEAw/B,EAAe90C,UAAUf,IAA2B,SAA4BwU,GAC9E,KAAIA,EAAM5P,KAAKjD,OAAO,GAAK6S,EAAM,GAAjC,CAGA,IAAIwhC,EAAcxhC,EAAM5P,KAAKqxC,UAE7B,OAAOrxC,KAAKjF,OADI6U,EAAM5P,KAAKqxC,UAAW,GACTD,EAH7B,CAIF,EACAH,EAAe90C,UAAUm1C,cAAgB,SAAsCv2C,GAC7EiF,KAAKjF,OAASA,CAChB,EACAk2C,EAAe90C,UAAUo1C,YAAc,WAErC,IAAI/hB,EAAM,IAAIC,eAGd,GAFAD,EAAIE,KAAK,OAAQ5yB,GAAK,GACtB0yB,EAAIc,KAAK,QACHd,EAAIzjB,QAAU,KAAOyjB,EAAIzjB,OAAS,KAAsB,MAAfyjB,EAAIzjB,QAAiB,MAAM,IAAIrF,MAAM,iBAAmB5J,EAAM,aAAe0yB,EAAIzjB,QAChI,IACIylC,EADAC,EAAaC,OAAOliB,EAAImiB,kBAAkB,mBAE1CC,GAAkBJ,EAAShiB,EAAImiB,kBAAkB,mBAAgC,UAAXH,EACtEK,GAAYL,EAAShiB,EAAImiB,kBAAkB,sBAAmC,SAAXH,EAEnEH,EAAY,QAEXO,IAAgBP,EAAYI,GAGjC,IAsBIK,EAAY9xC,KAChB8xC,EAAUR,eAAeS,IACvB,IAAIr+B,EAAQq+B,EAAWV,EACnB9U,GAAOwV,EAAS,GAAKV,EAAY,EAKrC,GAJA9U,EAAMzvB,KAAK4vB,IAAIH,EAAKkV,EAAW,QACU,IAA9BK,EAAUpe,OAAOqe,KAC1BD,EAAUpe,OAAOqe,GA5BTC,EAAC7V,EAAMC,KACjB,GAAID,EAAOC,EAAI,MAAM,IAAI11B,MAAM,kBAAoBy1B,EAAO,KAAOC,EAAK,4BACtE,GAAIA,EAAKqV,EAAW,EAAG,MAAM,IAAI/qC,MAAM,QAAU+qC,EAAa,uCAG9D,IAAIjiB,EAAM,IAAIC,eAWd,GAVAD,EAAIE,KAAK,MAAO5yB,GAAK,GACjB20C,IAAeJ,GAAW7hB,EAAIyiB,iBAAiB,QAAS,SAAW9V,EAAO,IAAMC,GAGpF5M,EAAIG,aAAe,cACfH,EAAI0iB,kBACN1iB,EAAI0iB,iBAAiB,sCAGvB1iB,EAAIc,KAAK,QACHd,EAAIzjB,QAAU,KAAOyjB,EAAIzjB,OAAS,KAAsB,MAAfyjB,EAAIzjB,QAAiB,MAAM,IAAIrF,MAAM,iBAAmB5J,EAAM,aAAe0yB,EAAIzjB,QAChI,YAAqBnE,IAAjB4nB,EAAIjkB,SACC,IAAI3C,WAAuC4mB,EAAIjkB,UAAY,IAE7D6D,EAAmBogB,EAAI6F,cAAgB,IAAI,EAAK,EAQxB2c,CAAMt+B,EAAO6oB,SAEH,IAA9BuV,EAAUpe,OAAOqe,GAA0B,MAAM,IAAIrrC,MAAM,iBACtE,OAAOorC,EAAUpe,OAAOqe,EAAS,KAG/BF,GAAaJ,IAEfJ,EAAYI,EAAa,EACzBA,EAAazxC,KAAKjF,OAAO,GAAGgC,OAC5Bs0C,EAAYI,EACZv9B,GAAI,gFAGNlU,KAAKmyC,QAAUV,EACfzxC,KAAKoyC,WAAaf,EAClBrxC,KAAKkxC,aAAc,CACrB,EAC6B,oBAAlBzhB,eAA+B,CACxC,IAAKrkB,GAAuB,KAAM,sHAClC,IAAI0mC,EAAY,IAAIb,EACpBh2C,OAAOoM,iBAAiByqC,EAAW,CACjC/0C,OAAQ,CACN3B,IAA0B,WAIxB,OAHK4E,KAAKkxC,aACRlxC,KAAKuxC,cAEAvxC,KAAKmyC,OACd,GAEFd,UAAW,CACTj2C,IAA0B,WAIxB,OAHK4E,KAAKkxC,aACRlxC,KAAKuxC,cAEAvxC,KAAKoyC,UACd,KAIJ,IAAI1B,EAAa,CAAEI,UAAU,EAAOhR,SAAUgS,EAChD,MACMpB,EAAa,CAAEI,UAAU,EAAOh0C,IAAKA,GAG3C,IAAIwgC,EAAOxP,GAAG2iB,WAAWjS,EAAQ1jC,EAAM41C,EAAYT,EAASC,GAIxDQ,EAAW5Q,SACbxC,EAAKwC,SAAW4Q,EAAW5Q,SAClB4Q,EAAW5zC,MACpBwgC,EAAKwC,SAAW,KAChBxC,EAAKxgC,IAAM4zC,EAAW5zC,KAGxB7B,OAAOoM,iBAAiBi2B,EAAM,CAC5B0C,UAAW,CACT5kC,IAA2B,WAAa,OAAO4E,KAAK8/B,SAAS/iC,MAAQ,KAIzE,IAAIqgC,EAAa,CAAC,EAyClB,OAxCWniC,OAAO2pC,KAAKtH,EAAKF,YACvBv5B,SAAS/H,IACZ,IAAIu2C,EAAK/U,EAAKF,WAAWthC,GACzBshC,EAAWthC,GAAO,WAEhB,OADAgyB,GAAG8iB,cAActT,GACV+U,EAAG9lC,MAAM,KAAM1N,UACxB,CAAC,IAmBHu+B,EAAWO,KAAO,CAAChG,EAAQxvB,EAAQy1B,EAAQ7gC,EAAQ8kC,KACjD/T,GAAG8iB,cAActT,GACV6T,EAAYxZ,EAAQxvB,EAAQy1B,EAAQ7gC,EAAQ8kC,IAGrDzE,EAAWmC,KAAO,CAAC5H,EAAQ56B,EAAQ8kC,KACjC/T,GAAG8iB,cAActT,GACjB,IAAIjxB,EAAMoD,IACV,IAAKpD,EACH,MAAM,IAAIyhB,GAAG0P,WAAW,IAG1B,OADA2T,EAAYxZ,EAAQtvB,GAAOgE,EAAKtP,EAAQ8kC,GACjC,CAAEx1B,IAAKA,EAAK61B,WAAW,EAAM,EAEtC5E,EAAKF,WAAaA,EACXE,CAAI,EACXgV,oBAAoBA,CAAC9T,EAAQ1jC,EAAMgC,EAAKmzC,EAASC,EAAU/f,EAAQD,EAASqiB,EAAgBzQ,EAAQ0Q,KAKpG,SAASC,EAAY5hB,GACnB,SAAS0X,EAAO1X,GACV2hB,GAAWA,IACVD,GACHzkB,GAAG6iB,eAAenS,EAAQ1jC,EAAM+1B,EAAWof,EAASC,EAAUpO,GAE5D3R,GAAQA,IACZzmB,GACF,CACImI,GAAQ6gC,uBAAuB7hB,EAAWwX,EAAUE,GAAQ,KAC1DrY,GAASA,IACbxmB,GAAwB,KAI1B6+B,EAAO1X,EACT,CAlBA,IAAIwX,EAAWvtC,EAAO+gC,GAAQ71B,QAAQw0B,GAAKoB,MAAM4C,EAAQ1jC,IAAS0jC,EAmBlEh1B,IACkB,iBAAP1M,EA1uEjB,SAAmBA,EAAKqzB,EAAQD,EAASyiB,GACrC,IAAIC,EAAOD,EAAiD,GAAf,MAAQ71C,EACrD+3B,GAAU/3B,GAAM6zB,IACd9oB,EAAO8oB,EAAa,sBAAwB7zB,EAAM,8BAClDqzB,EAAO,IAAIvnB,WAAW+nB,IAClBiiB,GAAKlpC,GAAwB,IAC/B3G,KACF,IAAImtB,EAGF,KAAM,sBAAwBpzB,EAAM,YAFpCozB,GAGF,IAEE0iB,GAAKppC,GACX,CA6tEMqpC,CAAU/1C,GAAM+zB,GAAc4hB,EAAY5hB,IAAYX,GAEtDuiB,EAAY31C,EACd,GAGFiT,GAAoC,oBAAf+iC,YAA6B,IAAIA,YAAY,aAAUlrC,EAwE5EmrC,GAAW,CAACC,iBAAiB,EAAEC,YAAY,SAASC,EAAOzd,EAAM0d,GAC/D,GAAI3Y,GAAKC,MAAMhF,GACb,OAAOA,EAGT,IAAI+F,EAOJ,GALEA,GADa,MAAX0X,EACIplB,GAAGkO,MAEO+W,GAASK,gBAAgBF,GACzBzd,KAEC,GAAfA,EAAK14B,OAAa,CACpB,IAAKo2C,EACH,MAAM,IAAIrlB,GAAG0P,WAAW,IAE1B,OAAOhC,CACT,CACA,OAAOhB,GAAKoB,MAAMJ,EAAK/F,EACzB,EAAE4d,OAAO,SAASphC,EAAMwjB,EAAMjgB,GAC5B,IACE,IAAI+tB,EAAOtxB,EAAKwjB,EAClB,CAAE,MAAO/0B,GACP,GAAIA,GAAKA,EAAE48B,MAAQ9C,GAAKU,UAAUzF,KAAU+E,GAAKU,UAAUpN,GAAGoc,QAAQxpC,EAAE48B,OAEtE,OAAQ,GAEV,MAAM58B,CACR,CACA+H,GAAS+M,GAAM,GAAM+tB,EAAKxG,IAC1Bt0B,GAAU+M,EAAM,GAAK,GAAM+tB,EAAK5C,IAChCl4B,GAAU+M,EAAM,IAAM,GAAM+tB,EAAK7nC,KACjCqN,GAAWyM,EAAM,IAAM,GAAM+tB,EAAK3C,MAClCn4B,GAAU+M,EAAM,IAAM,GAAM+tB,EAAK1C,IACjCp4B,GAAU+M,EAAM,IAAM,GAAM+tB,EAAKzC,IACjCr4B,GAAU+M,EAAM,IAAM,GAAM+tB,EAAKhG,KAChC3wB,GAAU,CAAC22B,EAAK9xB,OAAO,GAAG5E,GAAW02B,EAAK9xB,MAAQ3E,KAAKC,IAAIF,KAAiB,EAAOA,GAAa,GAASC,KAAKE,MAAOH,GAAY,cAAkB,KAAWC,KAAKG,MAAMJ,OAAoBA,KAAgB,IAAI,cAAoB,EAAK,IAAKpE,GAAU+M,EAAM,IAAM,GAAM5I,GAAQ,GAAGnE,GAAU+M,EAAM,IAAM,GAAM5I,GAAQ,GAC3TnE,GAAU+M,EAAM,IAAM,GAAM,KAC5B/M,GAAU+M,EAAM,IAAM,GAAM+tB,EAAKpC,OACjC,IAAIJ,EAAQwC,EAAKxC,MAAMhW,UACnBiW,EAAQuC,EAAKvC,MAAMjW,UACnBkW,EAAQsC,EAAKtC,MAAMlW,UAQvB,OAPCne,GAAU,CAACE,KAAKE,MAAM+zB,EAAQ,OAAQ,GAAGl0B,GAAWC,KAAKE,MAAM+zB,EAAQ,MAASj0B,KAAKC,IAAIF,KAAiB,EAAOA,GAAa,GAASC,KAAKE,MAAOH,GAAY,cAAkB,KAAWC,KAAKG,MAAMJ,OAAoBA,KAAgB,IAAI,cAAoB,EAAK,IAAKpE,GAAU+M,EAAM,IAAM,GAAM5I,GAAQ,GAAGnE,GAAU+M,EAAM,IAAM,GAAM5I,GAAQ,GACzV7D,GAAWyM,EAAM,IAAM,GAAOurB,EAAQ,IAAQ,IAC7Cn0B,GAAU,CAACE,KAAKE,MAAMg0B,EAAQ,OAAQ,GAAGn0B,GAAWC,KAAKE,MAAMg0B,EAAQ,MAASl0B,KAAKC,IAAIF,KAAiB,EAAOA,GAAa,GAASC,KAAKE,MAAOH,GAAY,cAAkB,KAAWC,KAAKG,MAAMJ,OAAoBA,KAAgB,IAAI,cAAoB,EAAK,IAAKpE,GAAU+M,EAAM,IAAM,GAAM5I,GAAQ,GAAGnE,GAAU+M,EAAM,IAAM,GAAM5I,GAAQ,GACzV7D,GAAWyM,EAAM,IAAM,GAAOwrB,EAAQ,IAAQ,IAC7Cp0B,GAAU,CAACE,KAAKE,MAAMi0B,EAAQ,OAAQ,GAAGp0B,GAAWC,KAAKE,MAAMi0B,EAAQ,MAASn0B,KAAKC,IAAIF,KAAiB,EAAOA,GAAa,GAASC,KAAKE,MAAOH,GAAY,cAAkB,KAAWC,KAAKG,MAAMJ,OAAoBA,KAAgB,IAAI,cAAoB,EAAK,IAAKpE,GAAU+M,EAAM,IAAM,GAAM5I,GAAQ,GAAGnE,GAAU+M,EAAM,IAAM,GAAM5I,GAAQ,GACzV7D,GAAWyM,EAAM,IAAM,GAAOyrB,EAAQ,IAAQ,IAC7Cr0B,GAAU,CAAC22B,EAAK5C,MAAM,GAAG9zB,GAAW02B,EAAK5C,KAAO7zB,KAAKC,IAAIF,KAAiB,EAAOA,GAAa,GAASC,KAAKE,MAAOH,GAAY,cAAkB,KAAWC,KAAKG,MAAMJ,OAAoBA,KAAgB,IAAI,cAAoB,EAAK,IAAKpE,GAAU+M,EAAM,KAAO,GAAM5I,GAAQ,GAAGnE,GAAU+M,EAAM,KAAO,GAAM5I,GAAQ,GACpT,CACT,EAAE0mC,QAAQ,SAASC,EAAM5b,EAAQ/oB,EAAKqzB,EAAOrE,GAC3C,IAAK9P,GAAGiS,OAAOpI,EAAO2F,KAAK5hC,MACzB,MAAM,IAAIoyB,GAAG0P,WAAW,IAE1B,GAAY,EAARyE,EAEF,OAAO,EAET,IAAI95B,EAASQ,GAAOnG,MAAM+wC,EAAMA,EAAO3kC,GACvCkf,GAAG0R,MAAM7H,EAAQxvB,EAAQy1B,EAAQhvB,EAAKqzB,EACxC,EAAEuR,aAAQ5rC,EAAUxM,IAAI,WAGtB,OAFA23C,GAASS,SAAW,EACV/qC,GAAUsqC,GAASS,QAAU,GAAK,EAE9C,EAAEC,OAAO,SAASpnC,GAEhB,OADUmE,EAAanE,EAEzB,EAAE+mC,gBAAgB,SAASvH,GACzB,IAAIlU,EAAS7J,GAAGge,UAAUD,GAC1B,IAAKlU,EAAQ,MAAM,IAAI7J,GAAG0P,WAAW,GACrC,OAAO7F,CACT,GAuVA+b,IAAiB,EAajBtiC,GAA6B,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAErEC,GAAgC,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAmLpDkB,GAAsBA,IAAMohC,YAAY//B,MA+HhE,IAAIoB,GAAQH,EAyCRhD,GAAU,CAACC,SAAS,CAACI,SAAQ,EAAMC,UAAU,KAAKM,OAAO,GAAGe,yBAAyB,EAAEvB,KAAK,KAAKmB,IAAI,EAAErB,WAAW,EAAEC,YAAY,EAAEoC,mBAAmB,EAAEX,MAAM,GAAGmgC,MAAM,WAClK/hC,GAAQC,SAASK,UAAY,KAE7BN,GAAQC,SAAS0B,0BACnB,EAAE8jB,OAAO,WACPzlB,GAAQC,SAAS0B,2BACjB,IAAIzB,EAAaF,GAAQC,SAASC,WAC9BC,EAAcH,GAAQC,SAASE,YAC/BC,EAAOJ,GAAQC,SAASG,KAC5BJ,GAAQC,SAASG,KAAO,KAExBe,EAAYf,EAAM,GAAG,EAAOJ,GAAQC,SAASsB,KAAK,GAClDxB,EAAiCG,EAAYC,GAC7CH,GAAQC,SAASK,WACnB,EAAEgC,aAAa,WACb,GAAI/L,GAAkB,UAAG,CACvB,IAAI4D,EAAU5D,GAAsB,eAAK,iBACrC2L,EAAYlC,GAAQC,SAASgC,kBAC7B+/B,EAAWhiC,GAAQC,SAASgiC,iBAG5B1rC,GAAkB,UAFlB2L,EACEA,EAAY8/B,EACM7nC,EAAU,MAAQ6nC,EAAW9/B,GAAa,IAAM8/B,EAAW,IAE3D7nC,EAGF,GAExB,CACF,EAAEuI,QAAQ,SAAStC,GACjB,IAAIhI,GAAJ,CACA,GAAI7B,GAAoB,cAEP,IADFA,GAAoB,cAE/B,OAGJ2M,EAAiB9C,GACb7J,GAAqB,cAAGA,GAAqB,cARhC,CASnB,GAAGod,cAAa,EAAMuuB,aAAY,EAAMC,8BAA8B,GAAGC,QAAQ,GAAGv2C,KAAK,WA6IzF,SAASw2C,IACPriC,GAAQkiC,YAAcz2C,SAA6B,qBAAM8K,GAAe,QAClD9K,SAAgC,wBAAM8K,GAAe,QACrD9K,SAAmC,2BAAM8K,GAAe,QACxD9K,SAA+B,uBAAM8K,GAAe,MAC5E,CA/IA,GAFKA,GAAuB,iBAAGA,GAAuB,eAAI,KAEtDyJ,GAAQsiC,QAAZ,CACAtiC,GAAQsiC,SAAU,EAElB,IACE,IAAIC,KACJviC,GAAQwiC,oBAAqB,CAC/B,CAAE,MAAM3zC,GACNmR,GAAQwiC,oBAAqB,EAC7BrqC,GAAI,mEACN,CACA6H,GAAQyiC,YAAuC,oBAAlBC,eAAgCA,eAA8C,oBAArBC,kBAAmCA,kBAAsB3iC,GAAQwiC,mBAAsD,KAAjCrqC,GAAI,2BAChL6H,GAAQ4iC,UAA6B,oBAAVljB,OAAyBA,OAAOmjB,IAAMnjB,OAAOmjB,IAAMnjB,OAAOojB,eAAa/sC,EAC7FQ,GAAOwsC,sBAA+C,IAArB/iC,GAAQ4iC,YAC5CzqC,GAAI,kHACJ5B,GAAOwsC,iBAAkB,GAW3B,IAAIC,EAAc,CAClBA,UAA2B,SAA+B/5C,GACxD,OAAQsN,GAAOwsC,iBAAmB,yBAAyB1yC,KAAKpH,EAClE,EACA+5C,OAAwB,SAA4BhkB,EAAW/1B,EAAMq1B,EAAQD,GAC3E,IAAIhwB,EAAI,KACR,GAAI2R,GAAQwiC,mBACV,KACEn0C,EAAI,IAAIk0C,KAAK,CAACvjB,GAAY,CAAE7xB,KAAM6S,GAAQijC,YAAYh6C,MAChD2W,OAASof,EAAU9zB,SAEvBmD,EAAI,IAAIk0C,KAAK,CAAE,IAAIxrC,WAAWioB,GAAY1oB,QAAS,CAAEnJ,KAAM6S,GAAQijC,YAAYh6C,KAEnF,CAAE,MAAM4F,GACN0U,EAAS,uCAAyC1U,EAAI,iCACxD,CAEF,IAAKR,EAAG,CACN,IAAI60C,EAAK,IAAIljC,GAAQyiC,YACrBS,EAAGC,OAAQ,IAAIpsC,WAAWioB,GAAY1oB,QACtCjI,EAAI60C,EAAGE,SACT,CACA,IAAIn4C,EAAM+U,GAAQ4iC,UAAUS,gBAAgBh1C,GACxCi1C,EAAM,IAAIC,MACdD,EAAIhlB,OAAS,KACXtoB,EAAOstC,EAAIE,SAAU,SAAWv6C,EAAO,yBACvC,IAAIic,EAA4CzZ,SAASkH,cAAc,UACvEuS,EAAOF,MAAQs+B,EAAIt+B,MACnBE,EAAOD,OAASq+B,EAAIr+B,OACVC,EAAOqjB,WAAW,MACxBkb,UAAUH,EAAK,EAAG,GACtBI,GAAgBz6C,GAAQic,EACxBlF,GAAQ4iC,UAAUe,gBAAgB14C,GAC9BqzB,GAAQA,EAAOU,EAAU,EAE/BskB,EAAIjlB,QAAWntB,KACbmR,GAAI,SAAWpX,EAAM,yBACjBozB,GAASA,GAAS,EAExBilB,EAAIxtC,IAAM7K,CACZ,GACAsL,GAAuB,eAAE9H,KAAKu0C,GAE9B,IAAIY,EAAc,CAClBA,UAA2B,SAA+B36C,GACxD,OAAQsN,GAAOstC,iBAAmB56C,EAAKs6B,QAAQ,IAAM,CAAE,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EACvF,EACAqgB,OAAwB,SAA4B5kB,EAAW/1B,EAAMq1B,EAAQD,GAE3E,SAASqY,EAAO9zB,GACViwB,IACJA,GAAO,EACPiR,GAAgB76C,GAAQ2Z,EACpB0b,GAAQA,EAAOU,GACrB,CACA,SAAS+kB,IACHlR,IACJA,GAAO,EACPiR,GAAgB76C,GAAQ,IAAI+6C,MACxB3lB,GAASA,IACf,CAZA,IAAIwU,GAAO,EAaX,IAAI7yB,GAAQwiC,mBA6CV,OAAOuB,IA5CP,IACE,IAAI11C,EAAI,IAAIk0C,KAAK,CAACvjB,GAAY,CAAE7xB,KAAM6S,GAAQijC,YAAYh6C,IAC5D,CAAE,MAAM4F,GACN,OAAOk1C,GACT,CACA,IAAI94C,EAAM+U,GAAQ4iC,UAAUS,gBAAgBh1C,GACxCuU,EAAQ,IAAIohC,MAChBphC,EAAMhS,iBAAiB,kBAAkB,IAAM8lC,EAAO9zB,KAAQ,GAC9DA,EAAMyb,QAAU,WACVwU,IACJ16B,GAAI,iDAAmDlP,EAAO,mCAyB9D2Z,EAAM9M,IAAM,gBAAkB7M,EAAKs6B,QAAQ,GAAK,WAxBhD,SAAkB1wB,GAMhB,IALA,IAAIoxC,EAAO,mEAEPpkC,EAAM,GACNqkC,EAAW,EACXC,EAAW,EACNz7C,EAAI,EAAGA,EAAImK,EAAK3H,OAAQxC,IAG/B,IAFAw7C,EAAYA,GAAY,EAAKrxC,EAAKnK,GAClCy7C,GAAY,EACLA,GAAY,GAAG,CACpB,IAAIC,EAAQF,GAAaC,EAAS,EAAM,GACxCA,GAAY,EACZtkC,GAAOokC,EAAKG,EACd,CASF,OAPgB,GAAZD,GACFtkC,GAAOokC,GAAe,EAATC,IAAe,GAC5BrkC,GAAOwkC,MACc,GAAZF,IACTtkC,GAAOokC,GAAe,GAATC,IAAiB,GAC9BrkC,GAlBQ,KAoBHA,CACT,CAC6DykC,CAAStlB,GACtE0X,EAAO9zB,GACT,EACAA,EAAM9M,IAAM7K,EAEZoY,GAAe,KACbqzB,EAAO9zB,EAAM,GACZ,IAIP,GACArM,GAAuB,eAAE9H,KAAKm1C,GAU9B,IAAI1+B,EAAS3O,GAAe,OACxB2O,IAIFA,EAAOwF,mBAAqBxF,EAA2B,oBAC3BA,EAA8B,uBAC9BA,EAAiC,0BACjCA,EAA6B,sBAAC,MACrB,GACrCA,EAAOq/B,gBAAkB94C,SAA0B,iBAC1BA,SAA6B,oBAC7BA,SAAgC,uBAChCA,SAA4B,mBAAC,MACpB,GAClCyZ,EAAOq/B,gBAAkBr/B,EAAOq/B,gBAAgBr6C,KAAKuB,UAErDA,SAASmF,iBAAiB,oBAAqByxC,GAAmB,GAClE52C,SAASmF,iBAAiB,uBAAwByxC,GAAmB,GACrE52C,SAASmF,iBAAiB,0BAA2ByxC,GAAmB,GACxE52C,SAASmF,iBAAiB,sBAAuByxC,GAAmB,GAEhE9rC,GAA2B,oBAC7B2O,EAAOtU,iBAAiB,SAAU4zC,KAC3BxkC,GAAQkiC,aAAe3rC,GAAe,OAAEmU,qBAC3CnU,GAAe,OAAEmU,qBACjB85B,EAAGnxB,iBACL,IACC,GA5KoB,CA+K7B,EAAEwtB,uBAAuB,SAAS7hB,EAAWwX,EAAUE,EAAQrY,GAE7Dre,GAAQnU,OAER,IAAI0qC,GAAU,EAQd,OAPAhgC,GAAuB,eAAEvE,SAASykC,IAC5BF,GACAE,EAAkB,UAAED,KACtBC,EAAe,OAAEzX,EAAWwX,EAAUE,EAAQrY,GAC9CkY,GAAU,EACZ,IAEKA,CACT,EAAEkO,cAAc,SAA0Cv/B,EAAQw/B,EAAUC,EAAaC,GACvF,GAAIF,GAAYnuC,GAAO4uB,KAAOjgB,GAAU3O,GAAO2O,OAAQ,OAAO3O,GAAO4uB,IAErE,IAAIA,EACA0f,EACJ,GAAIH,EAAU,CAEZ,IAAII,EAAoB,CACtBC,WAAW,EACXC,OAAO,EACPC,aAAgD,oBAA1BC,uBAAyC,EAAI,GAGrE,GAAIN,EACF,IAAK,IAAIO,KAAaP,EACpBE,EAAkBK,GAAaP,EAAuBO,QAOzC,IAAN3iC,KACTqiC,EAAgBriC,GAAGiiC,cAAcv/B,EAAQ4/B,MAEvC3f,EAAM3iB,GAAG+lB,WAAWsc,GAAej+B,MAGzC,MACEue,EAAMjgB,EAAOqjB,WAAW,MAG1B,OAAKpD,GAEDwf,IACGD,GAAU1uC,OAAuB,IAAT4Q,GAAsB,4FAEnDrQ,GAAO4uB,IAAMA,EACTuf,GAAUliC,GAAG4iC,mBAAmBP,GACpCtuC,GAAOmuC,SAAWA,EAClB1kC,GAAQmiC,8BAA8BnwC,SAASiG,GAAaA,MAC5D+H,GAAQnU,QAEHs5B,GAXU,IAYnB,EAAEkgB,eAAe,WAAyC,EAAEC,6BAA4B,EAAMC,iBAAYxvC,EAAUyvC,kBAAazvC,EAAUqU,kBAAkB,SAASm7B,EAAaC,GAOjL,SAASC,IACPzlC,GAAQ2T,cAAe,EACvB,IAAI+xB,EAAkBxgC,EAAOtY,YACxBnB,SAA4B,mBAAKA,SAA+B,sBAChEA,SAA8B,qBAAKA,SAAkC,yBACrEA,SAAyC,kCAAOi6C,GACnDxgC,EAAOygC,eAAiB3lC,GAAQ2lC,eAC5B3lC,GAAQulC,aAAargC,EAAOwF,qBAChC1K,GAAQ2T,cAAe,EACnB3T,GAAQwlC,aACVxlC,GAAQ4lC,0BAER5lC,GAAQ6lC,uBAAuB3gC,KAIjCwgC,EAAgB94C,WAAWsD,aAAagV,EAAQwgC,GAChDA,EAAgB94C,WAAWC,YAAY64C,GAEnC1lC,GAAQwlC,aACVxlC,GAAQ8lC,wBAER9lC,GAAQ6lC,uBAAuB3gC,IAG/B3O,GAAqB,cAAGA,GAAqB,aAAEyJ,GAAQ2T,cACvDpd,GAAqB,cAAGA,GAAqB,aAAEyJ,GAAQ2T,aAC7D,CAjCA3T,GAAQulC,YAAcA,EACtBvlC,GAAQwlC,aAAeA,OACW,IAAvBxlC,GAAQulC,cAA4BvlC,GAAQulC,aAAc,QAClC,IAAxBvlC,GAAQwlC,eAA6BxlC,GAAQwlC,cAAe,GAEvE,IAAItgC,EAAS3O,GAAe,OA8BvByJ,GAAQslC,8BACXtlC,GAAQslC,6BAA8B,EACtC75C,SAASmF,iBAAiB,mBAAoB60C,GAAkB,GAChEh6C,SAASmF,iBAAiB,sBAAuB60C,GAAkB,GACnEh6C,SAASmF,iBAAiB,yBAA0B60C,GAAkB,GACtEh6C,SAASmF,iBAAiB,qBAAsB60C,GAAkB,IAIpE,IAAIC,EAAkBj6C,SAASkH,cAAc,OAC7CuS,EAAOtY,WAAWsD,aAAaw1C,EAAiBxgC,GAChDwgC,EAAgBz1C,YAAYiV,GAG5BwgC,EAAgBt7B,kBAAoBs7B,EAAmC,mBACnCA,EAAsC,sBACtCA,EAAqC,sBACrCA,EAAyC,wBAAI,IAAMA,EAAyC,wBAAEl7B,QAA8B,sBAAK,QACjIk7B,EAAyC,wBAAI,IAAMA,EAAyC,wBAAEl7B,QAA8B,sBAAK,MAErKk7B,EAAgBt7B,mBAClB,EAAEu7B,eAAe,WAIf,QAAK3lC,GAAQ2T,gBAIHloB,SAAyB,gBACzBA,SAA2B,kBAC3BA,SAA8B,qBAC9BA,SAA2B,kBAC3BA,SAAiC,wBAAC,MAC/B,IACTiP,MAAMjP,SAAU,KACb,EACT,EAAEs6C,QAAQ,EAAEC,0BAA0B,SAAS5lC,GAE7C,IAAI2B,EAAMD,KAAKC,MACf,GAAwB,IAApB/B,GAAQ+lC,QACV/lC,GAAQ+lC,QAAUhkC,EAAM,IAAK,QAE7B,KAAOA,EAAM,GAAK/B,GAAQ+lC,SACxB/lC,GAAQ+lC,SAAW,IAAK,GAG5B,IAAIE,EAAQhrC,KAAKuF,IAAIR,GAAQ+lC,QAAUhkC,EAAK,GAC5C3N,WAAWgM,EAAM6lC,EACnB,EAAErxC,sBAAsB,SAASwL,GACK,mBAAzBxL,uBAKXsxC,EADUlmC,GAAQgmC,2BACd5lC,GAJFxL,sBAAsBwL,EAK1B,EAAEiD,eAAe,SAASjD,EAAMkD,GAI9B,OAAOD,EAAejD,EAAMkD,EAC9B,EAAE6iC,0BAA0B,SAAS/lC,GAEnC,OAAOJ,GAAQpL,uBAAsB,KAEnCsO,EAAiB9C,EAAK,GAE1B,EAAE6iC,YAAY,SAASh6C,GACrB,MAAO,CACL,IAAO,aACP,KAAQ,aACR,IAAO,YACP,IAAO,YACP,IAAO,YACP,IAAO,YACP,IAAO,cACPA,EAAKs6B,OAAOt6B,EAAKwmB,YAAY,KAAK,GACtC,EAAEwV,aAAa,SAAS7kB,GACjBsf,OAAOuF,eACVvF,OAAOuF,aAAe95B,UAAwB,cACxBA,UAA2B,iBAEnDu0B,OAAOuF,aAAa7kB,EACtB,EAAEgmC,aAAa,SAASl1C,GACtB,OAAOA,EAAiB,WACjBA,EAAoB,cACpBA,EAAuB,iBACvB,CACT,EAAEm1C,aAAa,SAASn1C,GACtB,OAAOA,EAAiB,WACjBA,EAAoB,cACpBA,EAAuB,iBACvB,CACT,EAAEo1C,mBAAmB,SAASp1C,GAC5B,IAAIq1C,EAAQ,EACZ,OAAQr1C,EAAM/D,MACZ,IAAK,iBAEHo5C,EAAQr1C,EAAMs1C,OAAS,EACvB,MACF,IAAK,aAEHD,EAAQr1C,EAAMu1C,WAAa,IAC3B,MACF,IAAK,QAEH,OADAF,EAAQr1C,EAAMw1C,OACNx1C,EAAMy1C,WACZ,KAAK,EAEHJ,GAAS,IACT,MACF,KAAK,EAEHA,GAAS,EACT,MACF,KAAK,EAEHA,GAAS,GACT,MACF,QACE,KAAM,wCAA0Cr1C,EAAMy1C,UAE1D,MACF,QACE,KAAM,mCAAqCz1C,EAAM/D,KAErD,OAAOo5C,CACT,EAAEK,OAAO,EAAEC,OAAO,EAAEC,eAAe,EAAEC,eAAe,EAAE1wB,QAAQ,CAAC,EAAE2wB,YAAY,CAAC,EAAEC,oBAAoB,SAAS/1C,GAC3G,GAAI8O,GAAQkiC,YAIQ,aAAdhxC,EAAM/D,MACL,iBAAkB+D,EACrB8O,GAAQ8mC,eAAiB9mC,GAAQ+mC,eAAiB,GAElD/mC,GAAQ8mC,eAAiB9mC,GAAQomC,aAAal1C,GAC9C8O,GAAQ+mC,eAAiB/mC,GAAQqmC,aAAan1C,IAI9B,oBAAPyR,KACT3C,GAAQ4mC,OAASjkC,IAAIikC,OAAS5mC,GAAQ8mC,eACtC9mC,GAAQ6mC,OAASlkC,IAAIkkC,OAAS7mC,GAAQ+mC,iBAItC/mC,GAAQ4mC,QAAU5mC,GAAQ8mC,eAC1B9mC,GAAQ6mC,QAAU7mC,GAAQ+mC,oBAEvB,CAGL,IAAIv9B,EAAOjT,GAAe,OAAE0Q,wBACxBigC,EAAK3wC,GAAe,OAAEyO,MACtBtG,EAAKnI,GAAe,OAAE0O,OAKtBkiC,OAAqC,IAAlBznB,OAAOynB,QAA0BznB,OAAOynB,QAAUznB,OAAO0nB,YAC5EC,OAAqC,IAAlB3nB,OAAO2nB,QAA0B3nB,OAAO2nB,QAAU3nB,OAAO4nB,YAEhF,GAAmB,eAAfp2C,EAAM/D,MAAwC,aAAf+D,EAAM/D,MAAsC,cAAf+D,EAAM/D,KAAsB,CAC1F,IAAIo6C,EAAQr2C,EAAMq2C,MAClB,QAAcxxC,IAAVwxC,EACF,OAGF,IAAIC,EAAYD,EAAMzwB,OAASqwB,EAAU39B,EAAKgM,MAC1CiyB,EAAYF,EAAMxwB,OAASswB,EAAU79B,EAAKiM,KAK1CiyB,EAAS,CAAEr4C,EAHfm4C,GAAyBN,EAAK19B,EAAKxE,MAGNlY,EAF7B26C,GAAyB/oC,EAAK8K,EAAKvE,QAInC,GAAmB,eAAf/T,EAAM/D,KACR6S,GAAQgnC,YAAYO,EAAM9wB,YAAcixB,EACxC1nC,GAAQqW,QAAQkxB,EAAM9wB,YAAcixB,OAC/B,GAAmB,aAAfx2C,EAAM/D,MAAsC,cAAf+D,EAAM/D,KAAsB,CAClE,IAAIi8B,EAAOppB,GAAQqW,QAAQkxB,EAAM9wB,YAC5B2S,IAAMA,EAAOse,GAClB1nC,GAAQgnC,YAAYO,EAAM9wB,YAAc2S,EACxCppB,GAAQqW,QAAQkxB,EAAM9wB,YAAcixB,CACtC,CACA,MACF,CAEA,IAAIr4C,EAAI6B,EAAM4lB,OAASqwB,EAAU39B,EAAKgM,MAClC1oB,EAAIoE,EAAM6lB,OAASswB,EAAU79B,EAAKiM,KAMtC3oB,GAAS4R,EAAK8K,EAAKvE,OAEnBjF,GAAQ8mC,gBAHRz3C,GAAS63C,EAAK19B,EAAKxE,OAGUhF,GAAQ4mC,OACrC5mC,GAAQ+mC,eAAiBj6C,EAAIkT,GAAQ6mC,OACrC7mC,GAAQ4mC,OAASv3C,EACjB2Q,GAAQ6mC,OAAS/5C,CACnB,CACF,EAAE66C,gBAAgB,GAAGC,sBAAsB,WACzC,IAAI1iC,EAAS3O,GAAe,OAC5ByJ,GAAQ2nC,gBAAgB31C,SAAS61C,GAAaA,EAAS3iC,EAAOF,MAAOE,EAAOD,SAC9E,EAAE6iC,cAAc,SAAS9iC,EAAOC,EAAQ8iC,GAEtC/nC,GAAQ6lC,uBADKtvC,GAAe,OACWyO,EAAOC,GACzC8iC,GAAW/nC,GAAQ4nC,uBAC1B,EAAEI,cAAc,EAAEC,eAAe,EAAErC,wBAAwB,WAEzD,GAAkB,oBAAPjjC,IAAoB,CAC7B,IAAIytB,EAAQl5B,GAAUyL,IAAI2G,QAAS,GACnC8mB,GAAgB,QAChBx5B,GAAS+L,IAAI2G,QAAS,GAAM8mB,CAC9B,CACApwB,GAAQ6lC,uBAAuBtvC,GAAe,QAC9CyJ,GAAQ4nC,uBACV,EAAE9B,sBAAsB,WAEtB,GAAkB,oBAAPnjC,IAAoB,CAC7B,IAAIytB,EAAQl5B,GAAUyL,IAAI2G,QAAS,GACnC8mB,IAAgB,QAChBx5B,GAAS+L,IAAI2G,QAAS,GAAM8mB,CAC9B,CACApwB,GAAQ6lC,uBAAuBtvC,GAAe,QAC9CyJ,GAAQ4nC,uBACV,EAAE/B,uBAAuB,SAAS3gC,EAAQgjC,EAASC,GAC7CD,GAAWC,GACbjjC,EAAOkjC,YAAcF,EACrBhjC,EAAOmjC,aAAeF,IAEtBD,EAAUhjC,EAAOkjC,YACjBD,EAAUjjC,EAAOmjC,cAEnB,IAAI35C,EAAIw5C,EACJx9C,EAAIy9C,EAQR,GAPI5xC,GAA0B,mBAAKA,GAA0B,kBAAI,IAC3D7H,EAAEhE,EAAI6L,GAA0B,kBAClC7H,EAAIuM,KAAKqL,MAAM5b,EAAI6L,GAA0B,mBAE7C7L,EAAIuQ,KAAKqL,MAAM5X,EAAI6H,GAA0B,qBAG3C9K,SAA4B,mBAAKA,SAA+B,sBACjEA,SAA8B,qBAAKA,SAAkC,yBACrEA,SAAyC,kCAAOyZ,EAAOtY,YAAiC,oBAAV0c,OAAwB,CACxG,IAAIg/B,EAASrtC,KAAK4vB,IAAIvhB,OAAOtE,MAAQtW,EAAG4a,OAAOrE,OAASva,GACxDgE,EAAIuM,KAAKqL,MAAM5X,EAAI45C,GACnB59C,EAAIuQ,KAAKqL,MAAM5b,EAAI49C,EACtB,CACItoC,GAAQwlC,cACNtgC,EAAOF,OAAUtW,IAAGwW,EAAOF,MAAStW,GACpCwW,EAAOD,QAAUva,IAAGwa,EAAOD,OAASva,QACb,IAAhBwa,EAAO3U,QAChB2U,EAAO3U,MAAMg4C,eAAgB,SAC7BrjC,EAAO3U,MAAMg4C,eAAe,aAG1BrjC,EAAOF,OAAUkjC,IAAShjC,EAAOF,MAASkjC,GAC1ChjC,EAAOD,QAAUkjC,IAASjjC,EAAOD,OAASkjC,QACnB,IAAhBjjC,EAAO3U,QACZ7B,GAAKw5C,GAAWx9C,GAAKy9C,GACvBjjC,EAAO3U,MAAMH,YAAa,QAAS1B,EAAI,KAAM,aAC7CwW,EAAO3U,MAAMH,YAAY,SAAU1F,EAAI,KAAM,eAE7Cwa,EAAO3U,MAAMg4C,eAAgB,SAC7BrjC,EAAO3U,MAAMg4C,eAAe,YAIpC,GAEAC,GAAM,CAACC,UAAU,MAAMC,2BAA0B,EAAMn6B,eAAe,EAAEo6B,mBAAmB,EAAEC,mBAAmB,EAAE9D,kBAAkB,CAACE,OAAM,EAAM6D,OAAM,EAAMC,SAAQ,EAAM/D,WAAU,GAAOgE,YAAY,CAAC,EAAEC,aAAa,SAAS/lC,GAC/NulC,GAAIC,UAAYxlC,CAClB,EAAEgmC,aAAa,SAASC,EAASC,EAAYC,EAAQC,EAAaC,GAChE,GAAe,MAAXJ,EAEF,OADAV,GAAIQ,aAAa,OACV,EAGT,GAAIG,EAEF,OAAS,CACP,IAAIj6B,EAAQtY,GAASuyC,GAAa,GAClC,GAAa,OAATj6B,EAEFs5B,GAAI1D,kBAAkBE,MADNpuC,GAAUuyC,EAAa,GAAK,GACD,OACtC,GAAa,OAATj6B,EAETs5B,GAAI1D,kBAAkB+D,MADNjyC,GAAUuyC,EAAa,GAAK,GACD,OACtC,GAAa,OAATj6B,EAETs5B,GAAI1D,kBAAkBgE,QADJlyC,GAAUuyC,EAAa,GAAK,GACC,OAC1C,GAAa,OAATj6B,EAETs5B,GAAI1D,kBAAkBC,UADRnuC,GAAUuyC,EAAa,GAAK,GACG,OACxC,GAAa,OAATj6B,EAETs5B,GAAI1D,kBAAkBC,UAAwB,GADhCnuC,GAAUuyC,EAAa,GAAK,QAErC,GAAa,OAATj6B,EAETs5B,GAAI1D,kBAAkByE,WAAmC,OADjC3yC,GAAUuyC,EAAa,GAAK,QAE/C,GAAa,OAATj6B,EACP,MAEJi6B,GAAc,CAChB,CAGF,OAAMC,GAAWC,GAAiBC,GAI9BA,IACF1yC,GAAS0yC,GAAa,GAAM,GAE1BF,GAAUC,EAAc,IAC1BzyC,GAASwyC,GAAS,GAAM,OAG1BZ,GAAIQ,aAAa,OACV,IAXLR,GAAIQ,aAAa,OACV,EAWX,GA+DAxmC,GAAK,CAACgnC,QAAQ,EAAEp8B,QAAQ,GAAGY,SAAS,GAAGy7B,aAAa,GAAGC,cAAc,GAAGC,SAAS,GAAGC,QAAQ,GAAGr+B,KAAK,GAAGs+B,SAAS,GAAGC,kBAAkB,CAAC,EAAE16B,QAAQ,GAAG26B,SAAS,GAAGC,mBAAmB,GAAGC,MAAM,GAAGC,mBAAmB,KAAKC,eAAe,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGpB,YAAY,CAAC,EAAEqB,aAAa,CAAC,EAAEj4B,gBAAgB,EAAE3E,YAAY,SAAqBi7B,GACxUjmC,GAAG6nC,YACN7nC,GAAG6nC,UAAY5B,EAEnB,EAAEl7B,SAAS,SAAS+8B,GAElB,IADA,IAAIzqC,EAAM2C,GAAGgnC,UACJ9gD,EAAI4hD,EAAMp/C,OAAQxC,EAAImX,EAAKnX,IAClC4hD,EAAM5hD,GAAK,KAEb,OAAOmX,CACT,EAAE0qC,qBAAqB,QAAQC,4BAA4B,GAAGC,eAAe,SAAS/hD,GACpF,OAAO,GAAKuS,KAAKqW,MAAY,IAAN5oB,EAAU,EAAIA,EAAI,EAC3C,EAAEgiD,oBAAoB,SAASC,EAAOv8C,GACpC,IAAIw8C,EAAepoC,GAAGioC,eAAejoC,GAAG+nC,sBACxCn8C,EAAQy8C,0BAA4B,GACpCz8C,EAAQ08C,0BAA4B,GACpC18C,EAAQy8C,0BAA0B3/C,OAASkD,EAAQ08C,0BAA0B5/C,OAAS0/C,EAAa,EACnGx8C,EAAQ28C,mBAAqB,GAC7B38C,EAAQ48C,mBAAqB,GAC7B58C,EAAQ28C,mBAAmB7/C,OAASkD,EAAQ48C,mBAAmB9/C,OAAS0/C,EAAa,EACrFx8C,EAAQ68C,iBAAmB,GAC3B78C,EAAQ68C,iBAAiB//C,OAAS0/C,EAAa,EAC/C,IAAK,IAAIliD,EAAI,EAAGA,GAAKkiD,IAAgBliD,EAAG,CACtC0F,EAAQ68C,iBAAiBviD,GAAK,KAC9B0F,EAAQy8C,0BAA0BniD,GAAK0F,EAAQ08C,0BAA0BpiD,GAAK,EAC9E,IAAIwiD,EAAmB1oC,GAAGgoC,4BAC1Bp8C,EAAQ28C,mBAAmBriD,GAAK,GAChC0F,EAAQ48C,mBAAmBtiD,GAAK,GAChC,IAAIyiD,EAAc/8C,EAAQ28C,mBAAmBriD,GACzC0iD,EAAch9C,EAAQ48C,mBAAmBtiD,GAC7CyiD,EAAYjgD,OAASkgD,EAAYlgD,OAASggD,EAC1C,IAAK,IAAIp6C,EAAI,EAAGA,EAAIo6C,IAAoBp6C,EACtCq6C,EAAYr6C,GAAKs6C,EAAYt6C,GAAK,IAEtC,CAEA,GAAI65C,EAAO,CAETv8C,EAAQi9C,oBAAsBzkC,GAAMmgB,eACpC34B,EAAQwY,MAAMgG,WAAW,MAAoCxe,EAAQi9C,qBAIrE,IAHA,IAAIC,EAAa9oC,GAAG+nC,sBAAwB,EACxCgB,EAAc,IAAIt0C,YAAYq0C,GACvB3+C,GAAPjE,EAAI,EAAO,GAEb6iD,EAAY7iD,KAAOiE,IACfjE,GAAK4iD,IACTC,EAAY7iD,KAAOiE,EAAE,EACjBjE,GAAK4iD,KACTC,EAAY7iD,KAAOiE,EAAE,EACjBjE,GAAK4iD,KACTC,EAAY7iD,KAAOiE,EACfjE,GAAK4iD,KACTC,EAAY7iD,KAAOiE,EAAE,EACjBjE,GAAK4iD,KACTC,EAAY7iD,KAAOiE,EAAE,EACjBjE,GAAK4iD,KACT3+C,GAAK,EAEPyB,EAAQwY,MAAM4kC,WAAW,MAAoCD,EAAa,OAC1En9C,EAAQwY,MAAMgG,WAAW,MAAoC,KAC/D,CACF,EAAE6+B,oBAAoB,SAA6BC,GACjD,IAAI3tC,EAAMyE,GAAGioC,eAAeiB,GACxBC,EAAanpC,GAAG+L,eAAew8B,mBAAmBhtC,GAClD6tC,EAAsBppC,GAAG+L,eAAes8B,0BAA0B9sC,GACtEyE,GAAG+L,eAAes8B,0BAA0B9sC,GAAQyE,GAAG+L,eAAes8B,0BAA0B9sC,GAAK,EAAMyE,GAAGgoC,4BAA4B,EAC1I,IAAIqB,EAAMF,EAAWC,GACrB,GAAIC,EACF,OAAOA,EAET,IAAIC,EAAUllC,GAAM6E,aAAa,OAKjC,OAJAkgC,EAAWC,GAAuBhlC,GAAMmgB,eACxCngB,GAAMgG,WAAW,MAA4B++B,EAAWC,IACxDhlC,GAAM4kC,WAAW,MAA4B,GAAKztC,EAAK,OACvD6I,GAAMgG,WAAW,MAA4Bk/B,GACtCH,EAAWC,EACpB,EAAEj/B,mBAAmB,SAA4B++B,GAC/C,IAAI3tC,EAAMyE,GAAGioC,eAAeiB,GACxBlgC,EAAMhJ,GAAG+L,eAAe08B,iBAAiBltC,GAC7C,GAAIyN,EACF,OAAOA,EAET,IAAIugC,EAAUnlC,GAAM6E,aAAa,OAKjC,OAJAjJ,GAAG+L,eAAe08B,iBAAiBltC,GAAO6I,GAAMmgB,eAChDngB,GAAMgG,WAAW,MAAoCpK,GAAG+L,eAAe08B,iBAAiBltC,IACxF6I,GAAM4kC,WAAW,MAAoC,GAAKztC,EAAK,OAC/D6I,GAAMgG,WAAW,MAAoCm/B,GAC9CvpC,GAAG+L,eAAe08B,iBAAiBltC,EAC5C,EAAE0E,yBAAyB,WACzB,GAAKD,GAAG+L,eAAR,CAGA,IAAIy9B,EAAKxpC,GAAG+L,eAAew8B,mBAC3BvoC,GAAG+L,eAAew8B,mBAAqBvoC,GAAG+L,eAAey8B,mBACzDxoC,GAAG+L,eAAey8B,mBAAqBgB,EACvCA,EAAKxpC,GAAG+L,eAAes8B,0BACvBroC,GAAG+L,eAAes8B,0BAA4BroC,GAAG+L,eAAeu8B,0BAChEtoC,GAAG+L,eAAeu8B,0BAA4BkB,EAE9C,IADA,IAAIpB,EAAepoC,GAAGioC,eAAejoC,GAAG+nC,sBAC/B7hD,EAAI,EAAGA,GAAKkiD,IAAgBliD,EACnC8Z,GAAG+L,eAAes8B,0BAA0BniD,GAAK,CATnD,CAWF,EAAEujD,UAAU,SAASC,EAAQlgC,EAAOmgC,EAAQjhD,GAE1C,IADA,IAAIkhD,EAAS,GACJ1jD,EAAI,EAAGA,EAAIsjB,IAAStjB,EAAG,CAC9B,IAAIqU,EAAM7R,EAAS0L,GAAU1L,EAAW,EAAFxC,GAAO,IAAO,EACpD0jD,GAAUztC,EAAa/H,GAAUu1C,EAAW,EAAFzjD,GAAO,GAAKqU,EAAM,OAAIhH,EAAYgH,EAC9E,CACA,OAAOqvC,CACT,EAAE1/B,cAAc,SAAuB9M,EAAMzS,EAAMk/C,EAAQrgC,GACzD,OAAIqgC,EAAS,EACJrgC,EAAQqgC,EAGVzsC,EADQ4C,GAAG2nC,eAAeh9C,EAAOqV,GAAG0nC,oBAClBl+B,CAC3B,EAAEsgC,gBAAgB,GAAGx/B,wCAAwC,SAAiDd,GAC5GxJ,GAAG+pC,oBAAqB,EAGxB,IAAK,IAAI7jD,EAAI,EAAGA,EAAI8Z,GAAG+L,eAAei+B,mBAAoB9jD,EAAG,CAC3D,IAAIs0B,EAAKxa,GAAG+L,eAAeqC,cAAcloB,GACzC,GAAKs0B,EAAGyvB,YAAezvB,EAAGnM,QAA1B,CAEArO,GAAG+pC,oBAAqB,EAExB,IAAI3sC,EAAO4C,GAAGkK,cAAcsQ,EAAGpd,KAAMod,EAAG7vB,KAAM6vB,EAAGqvB,OAAQrgC,GACrDrI,EAAMnB,GAAGipC,oBAAoB7rC,GACjCgH,GAAMgG,WAAW,MAA4BjJ,GAC7CiD,GAAMiG,cAAc,MACK,EACA/V,GAAOsH,SAAS4e,EAAGxiB,IAAKwiB,EAAGxiB,IAAMoF,IAC1Dod,EAAG0vB,2BAA2B7jD,KAAK+d,GAAOle,EAAGs0B,EAAGpd,KAAMod,EAAG7vB,KAAM6vB,EAAG2vB,WAAY3vB,EAAGqvB,OAAQ,EAV9C,CAW7C,CACF,EAAEr/B,yCAAyC,WACrCxK,GAAG+pC,oBACL3lC,GAAMgG,WAAW,MAA4BpK,GAAG4K,QAAQxG,GAAMgmC,2BAElE,EAAEnI,cAAc,SAA0Cv/B,EAAQ0/B,GAOhE,IAAK1/B,EAAO2nC,4BAA6B,CAGvC,SAASC,EAAgBC,EAAKC,GAC5B,IAAIC,EAAK/nC,EAAO2nC,4BAA4BE,EAAKC,GACjD,MAAgB,SAAPD,GAAoBE,aAAcC,sBAA0BD,EAAK,IAC5E,CALA/nC,EAAO2nC,4BAA8B3nC,EAAOqjB,WAM5CrjB,EAAOqjB,WAAaukB,CACtB,CAEA,IAAI3nB,EAGAjgB,EAAOqjB,WAFRqc,EAAuBK,aAAe,EAEnB,SAED,QAFWL,GAMhC,OAAKzf,EAEQ3iB,GAAG2qC,gBAAgBhoB,EAAKyf,GAFpB,CAKnB,EAAEuI,gBAAgB,SAAShoB,EAAKyf,GAE9B,IAAIwI,EAAS5qC,GAAG+K,SAAS/K,GAAGqnC,UAExBz7C,EAAU,CACZg/C,OAAQA,EACRp6C,WAAY4xC,EACZp2B,QAASo2B,EAAuBK,aAChCr+B,MAAOue,GAILA,EAAIjgB,SAAQigB,EAAIjgB,OAAOyB,YAAcvY,GACzCoU,GAAGqnC,SAASuD,GAAUh/C,QACyC,IAApDw2C,EAAuByI,2BAA4CzI,EAAuByI,4BACnG7qC,GAAG8qC,eAAel/C,GAGpBA,EAAQo+C,iBAAmBp+C,EAAQwY,MAAM6E,aAAa,OACtDrd,EAAQwiB,cAAgB,GACxB,IAAK,IAAIloB,EAAI,EAAGA,EAAI0F,EAAQo+C,iBAAkB9jD,IAC5C0F,EAAQwiB,cAAcloB,GAAK,CAAEmoB,SAAS,EAAO47B,YAAY,EAAO7sC,KAAM,EAAGzS,KAAM,EAAGw/C,WAAY,EAAGN,OAAQ,EAAG7xC,IAAK,EAAGkyC,2BAA4B,MAKlJ,OAFAlqC,GAAGkoC,qBAAoB,EAAOt8C,GAEvBg/C,CACT,EAAEhI,mBAAmB,SAASP,GAI5B,OAFAriC,GAAG+L,eAAiB/L,GAAGqnC,SAAShF,GAChCtuC,GAAO4uB,IAAMve,GAAQpE,GAAG+L,gBAAkB/L,GAAG+L,eAAe3H,QACnDi+B,IAAkBj+B,GAC7B,EAAE2hB,WAAW,SAASsc,GACpB,OAAOriC,GAAGqnC,SAAShF,EACrB,EAAE0I,cAAc,SAAS1I,GACnBriC,GAAG+L,iBAAmB/L,GAAGqnC,SAAShF,KAAgBriC,GAAG+L,eAAiB,MACnD,iBAAZjE,IAAsBA,GAASkjC,0BAA0BhrC,GAAGqnC,SAAShF,GAAej+B,MAAM1B,QACjG1C,GAAGqnC,SAAShF,IAAkBriC,GAAGqnC,SAAShF,GAAej+B,MAAM1B,SAAQ1C,GAAGqnC,SAAShF,GAAej+B,MAAM1B,OAAOyB,iBAAc5Q,GACjIyM,GAAGqnC,SAAShF,GAAiB,IAC/B,EAAEyI,eAAe,SAASl/C,GAIxB,GAFKA,IAASA,EAAUoU,GAAG+L,iBAEvBngB,EAAQq/C,mBAAZ,CACAr/C,EAAQq/C,oBAAqB,EAE7B,IAtO+DtoB,EAsO3Dve,EAAQxY,EAAQwY,OAtQ1B,SAA6Cue,GAEzC,IAAIuoB,EAAMvoB,EAAIwoB,aAAa,0BACvBD,IACFvoB,EAAyB,oBAAI,SAASja,EAAOmH,GAAWq7B,EAA8B,yBAAExiC,EAAOmH,EAAU,EACzG8S,EAAyB,oBAAI,SAASt7B,EAAMkiB,EAAOC,EAAOC,GAAayhC,EAA8B,yBAAE7jD,EAAMkiB,EAAOC,EAAOC,EAAY,EACvIkZ,EAA2B,sBAAI,SAASt7B,EAAMmiB,EAAO7e,EAAMsf,EAASR,GAAayhC,EAAgC,2BAAE7jD,EAAMmiB,EAAO7e,EAAMsf,EAASR,EAAY,EAG/J,CAkQI2hC,CAAoChnC,GAhQ1C,SAA8Cue,GAE1C,IAAIuoB,EAAMvoB,EAAIwoB,aAAa,2BACvBD,IACFvoB,EAAuB,kBAAI,WAAa,OAAOuoB,EAA0B,sBAAK,EAC9EvoB,EAAuB,kBAAI,SAAS9Z,GAAOqiC,EAA0B,qBAAEriC,EAAM,EAC7E8Z,EAAqB,gBAAI,SAAS9Z,GAAOqiC,EAAwB,mBAAEriC,EAAM,EACzE8Z,EAAmB,cAAI,SAAS9Z,GAAO,OAAOqiC,EAAsB,iBAAEriC,EAAM,EAGhF,CAuPIwiC,CAAqCjnC,GArP3C,SAAyCue,GAErC,IAAIuoB,EAAMvoB,EAAIwoB,aAAa,sBACvBD,IACFvoB,EAAiB,YAAI,SAASh7B,EAAGiiB,GAAQshC,EAAsB,iBAAEvjD,EAAGiiB,EAAO,EAG/E,CA+OI0hC,CAAgClnC,IA7O+Bue,EA+OHve,GA7OhDmnC,OAAS5oB,EAAIwoB,aAAa,kDAG5C,SAA2ExoB,GAE7DA,EAAI6oB,QAAU7oB,EAAIwoB,aAAa,uDAC3C,CAwOIM,CAAkErnC,GAK9DxY,EAAQogB,SAAW,IACrB5H,EAAMyI,sBAAwBzI,EAAM+mC,aAAa,qCAM/Cv/C,EAAQogB,QAAU,IAAM5H,EAAMyI,yBAEhCzI,EAAMyI,sBAAwBzI,EAAM+mC,aAAa,6BApPzD,SAAuCxoB,GAEzBA,EAAI+oB,eAAiB/oB,EAAIwoB,aAAa,mBAClD,CAoPIQ,CAA8BvnC,IAGnBA,EAAM6H,0BAA4B,IACxCzc,SAAQ,SAAS07C,GAEfA,EAAI/xB,SAAS,iBAAoB+xB,EAAI/xB,SAAS,UAEjD/U,EAAM+mC,aAAaD,EAEvB,GAxCsC,CAyCxC,GAoWAU,GAJJ,WAEI,OADA5F,GAAIQ,aAAa,OACV,CACT,EAQEplC,GAAqB,GA6CrB0G,GAAW,CAAC+jC,eAAe,EAAEC,wBAAwB,WACnD,IAAK,IAAI5lD,EAAI4hB,GAASikC,cAAcrjD,OAAO,EAAGxC,GAAK,IAAKA,EACtD4hB,GAASkkC,eAAe9lD,GAE1B4hB,GAASikC,cAAgB,GACzBjkC,GAASmkC,cAAgB,EAC3B,EAAEC,6BAA6B,WACxBpkC,GAASqkC,iCACZ9qB,GAAWp1B,KAAK6b,GAASgkC,yBACzBhkC,GAASqkC,gCAAiC,EAE9C,EAAEF,cAAc,GAAGG,UAAU,SAASC,EAAgBC,EAAYC,GAChE,SAASC,EAAuBC,EAAMC,GACpC,GAAID,EAAK/jD,QAAUgkD,EAAKhkD,OAAQ,OAAO,EAEvC,IAAK,IAAIxC,KAAKumD,EACZ,GAAIA,EAAKvmD,IAAMwmD,EAAKxmD,GAAI,OAAO,EAEjC,OAAO,CACT,CAEA,IAAK,IAAIA,KAAK4hB,GAASmkC,cAAe,CACpC,IAAI5lD,EAAOyhB,GAASmkC,cAAc/lD,GAClC,GAAIG,EAAKgmD,gBAAkBA,GAAkBG,EAAuBnmD,EAAKkmD,SAAUA,GACjF,MAEJ,CACAzkC,GAASmkC,cAAchgD,KAAK,CAC1BogD,eAAgBA,EAChBC,WAAYA,EACZC,SAAUA,IAGZzkC,GAASmkC,cAAc3/C,MAAK,SAASO,EAAEvC,GAAK,OAAOuC,EAAEy/C,WAAahiD,EAAEgiD,UAAY,GAClF,EAAEK,oBAAoB,SAASN,GAC7B,IAAK,IAAInmD,EAAI,EAAGA,EAAI4hB,GAASmkC,cAAcvjD,SAAUxC,EAC/C4hB,GAASmkC,cAAc/lD,GAAGmmD,gBAAkBA,IAC9CvkC,GAASmkC,cAAc76C,OAAOlL,EAAG,KAC/BA,EAGR,EAAE0mD,+BAA+B,WAC/B,OAAO9kC,GAAS+jC,gBAAkB/jC,GAAS+kC,oBAAoBl7B,mBACjE,EAAEm7B,iBAAiB,WACjB,GAAKhlC,GAAS8kC,iCAGd,IAAK,IAAI1mD,EAAI,EAAGA,EAAI4hB,GAASmkC,cAAcvjD,SAAUxC,EAAG,CACtD,IAAIG,EAAOyhB,GAASmkC,cAAc/lD,GAClC4hB,GAASmkC,cAAc76C,OAAOlL,EAAG,KAC/BA,EACFG,EAAKgmD,eAAen0C,MAAM,KAAM7R,EAAKkmD,SACvC,CACF,EAAER,cAAc,GAAGf,0BAA0B,SAASxsC,EAAQ+R,GAC5D,IAAK,IAAIrqB,EAAI,EAAGA,EAAI4hB,GAASikC,cAAcrjD,SAAUxC,EAC/C4hB,GAASikC,cAAc7lD,GAAGsY,QAAUA,GACpC+R,GAAmBA,GAAmBzI,GAASikC,cAAc7lD,GAAGqqB,iBACjEzI,GAASkkC,eAAe9lD,IAG/B,EAAE8lD,eAAe,SAAS9lD,GACxB,IAAIgC,EAAI4f,GAASikC,cAAc7lD,GAC/BgC,EAAEsW,OAAOjQ,oBAAoBrG,EAAEqoB,gBAAiBroB,EAAE6kD,kBAAmB7kD,EAAEkoB,YACvEtI,GAASikC,cAAc36C,OAAOlL,EAAG,EACnC,EAAE4qB,wBAAwB,SAASL,GACjC,IAAIu8B,EAAiB,SAAwBt+C,KAEzCoZ,GAAS+jC,eACX/jC,GAAS+kC,oBAAsBp8B,EAE/B3I,GAASglC,mBAETr8B,EAAaC,YAAYhiB,GAEzBoZ,GAASglC,qBAEPhlC,GAAS+jC,cACb,EAEA,GAAIp7B,EAAaJ,aACfI,EAAas8B,kBAAoBC,EACjCv8B,EAAajS,OAAOpQ,iBAAiBqiB,EAAaF,gBAAiBy8B,EAAgBv8B,EAAaL,YAChGtI,GAASikC,cAAc9/C,KAAKwkB,GAC5B3I,GAASokC,oCAET,IAAK,IAAIhmD,EAAI,EAAGA,EAAI4hB,GAASikC,cAAcrjD,SAAUxC,EAC/C4hB,GAASikC,cAAc7lD,GAAGsY,QAAUiS,EAAajS,QACjDsJ,GAASikC,cAAc7lD,GAAGqqB,iBAAmBE,EAAaF,iBAC3DzI,GAASkkC,eAAe9lD,IAIjC,EAAE0qB,qBAAqB,SAASpS,GAC9B,OAAKA,EACDA,GAAU0e,OAAe,UACzB1e,GAAUsI,OAAe,UACrBtI,GAAUA,EAAOmS,SAAYnS,EAAOmS,SAAW,GAHnC,EAItB,EAAE5I,kBAAkB,WAClB,OAAO9e,SAAS8e,mBAGb9e,SAASgkD,uBAEd,GA0BAC,GAA0B,KAY1B/qC,GAAqB,CAAC,EAAGlZ,SAAUi0B,QAoInC3Z,GAA4B,CAAC,EAsU7B4pC,GADJ,SAA0BC,GAAMhpC,GAAMipC,cAAcD,EAAI,EAOpDE,GAHJ,SAAyBjiC,EAASq+B,GAC9BtlC,GAAMmpC,aAAavtC,GAAGwL,SAASH,GAAUrL,GAAGonC,QAAQsC,GACtD,EAOE8D,GAHJ,SAAuBhvC,EAAQoE,GAC3BwB,GAAMqpC,WAAWjvC,EAAQwB,GAAG4M,QAAQhK,GACtC,EAOE8qC,GAHJ,SAA0BlvC,EAAQoE,GAC9BwB,GAAMyI,sBAAqC,cAAErO,EAAQwB,GAAG4M,QAAQhK,GAClE,EAKE+qC,GADJ,SAAmCP,GAAMhpC,GAAMwpC,uBAAuBR,EAAI,EAQtES,GAHJ,SAA+BxiC,EAAS3C,EAAOjiB,GAC3C2d,GAAM0pC,mBAAmB9tC,GAAGwL,SAASH,GAAU3C,EAAOvM,EAAa1V,GACrE,EA0BEsnD,GAtBJ,SAAuBvvC,EAAQ1K,GACb,OAAV0K,EACF4F,GAAMgmC,0BAA4Bt2C,EACf,OAAV0K,IACT4F,GAAM8E,iCAAmCpV,GAG7B,OAAV0K,EAIF4F,GAAM4pC,8BAAgCl6C,EACnB,OAAV0K,IAMT4F,GAAM6pC,gCAAkCn6C,GAE1CsQ,GAAMgG,WAAW5L,EAAQwB,GAAG4K,QAAQ9W,GACtC,EAOEo6C,GAHJ,SAA2B1vC,EAAQkK,EAAO5U,GACtCsQ,GAAM+pC,eAAe3vC,EAAQkK,EAAO1I,GAAG4K,QAAQ9W,GACjD,EAOEs6C,GAHJ,SAA4B5vC,EAAQkK,EAAO5U,EAAQy1B,EAAQ8kB,GACvDjqC,GAAMkqC,gBAAgB9vC,EAAQkK,EAAO1I,GAAG4K,QAAQ9W,GAASy1B,EAAQ8kB,EACnE,EASEE,GALJ,SAA4B/vC,EAAQgwC,GAEhCpqC,GAAMqqC,gBAAgBjwC,EAAQwB,GAAGinC,aAAauH,GAEhD,EAOEE,GAHJ,SAA6BlwC,EAAQmwC,GACjCvqC,GAAMwqC,iBAAiBpwC,EAAQwB,GAAGknC,cAAcyH,GAClD,EAOEE,GAHJ,SAAwBC,EAAMC,GAC1B3qC,GAAM4qC,YAAYF,EAAM9uC,GAAGunC,SAASwH,GACtC,EAOEE,GAHJ,SAAwBzwC,EAAQ0wC,GAC5B9qC,GAAM+qC,YAAY3wC,EAAQwB,GAAGmnC,SAAS+H,GACxC,EAOEE,GAHJ,SAAkC5wC,EAAQoE,GACtCwB,GAAMirC,sBAAsB7wC,EAAQwB,GAAGwnC,mBAAmB5kC,GAC5D,EASE0sC,GAAgC1mC,EAIhC2mC,GAAwB3mC,EACxB4mC,GAAmCD,GAInCE,GADJ,SAAuBrC,EAAIsC,EAAIC,EAAIC,GAAMxrC,GAAMyrC,WAAWzC,EAAIsC,EAAIC,EAAIC,EAAI,EAKtEE,GADJ,SAA0B1C,GAAMhpC,GAAM2rC,cAAc3C,EAAI,EAKpD4C,GADJ,SAAkC5C,EAAIsC,GAAMtrC,GAAM6rC,sBAAsB7C,EAAIsC,EAAI,EAK5EQ,GADJ,SAAsB9C,EAAIsC,GAAMtrC,GAAM+rC,UAAU/C,EAAIsC,EAAI,EAKpDU,GADJ,SAA8BhD,EAAIsC,EAAIC,EAAIC,GAAMxrC,GAAMisC,kBAAkBjD,EAAIsC,EAAIC,EAAIC,EAAI,EAKpFU,GADJ,SAA4BlD,EAAIsC,EAAIC,EAAIC,EAAIW,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAAMxsC,GAAMysC,gBAAgBzD,EAAIsC,EAAIC,EAAIC,EAAIW,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAI,EAqBhIE,GAjBJ,SAAuBtyC,EAAQpB,EAAM/M,EAAM0gD,GAEnC/wC,GAAG+L,eAAeC,SAAW,EAI3B3b,GAAQ+M,EACVgH,GAAM4kC,WAAWxqC,EAAQlK,GAAQy8C,EAAO1gD,EAAM+M,GAE9CgH,GAAM4kC,WAAWxqC,EAAQpB,EAAM2zC,GAKjC3sC,GAAM4kC,WAAWxqC,EAAQnO,EAAOiE,GAAOsH,SAASvL,EAAMA,EAAK+M,GAAQA,EAAM2zC,EAE7E,EAWEC,GAPJ,SAA0BxyC,EAAQ+qB,EAAQnsB,EAAM/M,GACxC2P,GAAG+L,eAAeC,SAAW,EAC/B5O,GAAQgH,GAAMiG,cAAc7L,EAAQ+qB,EAAQj1B,GAAQjE,EAAM+M,GAG5DgH,GAAMiG,cAAc7L,EAAQ+qB,EAAQj1B,GAAOsH,SAASvL,EAAMA,EAAK+M,GACjE,EAKE6zC,GADJ,SAAmC7D,GAAM,OAAOhpC,GAAM8sC,uBAAuB9D,EAAI,EAK7E+D,GADJ,SAAkB/D,GAAMhpC,GAAMgtC,MAAMhE,EAAI,EAKpCiE,GADJ,SAA0BjE,EAAIsC,EAAIC,EAAIC,GAAMxrC,GAAMktC,cAAclE,EAAIsC,EAAIC,EAAIC,EAAI,EAQ5E2B,GAJJ,SAA0Bz9C,EAAQ09C,EAAYrqD,GAE1Cid,GAAMqtC,cAAc39C,EAAQ09C,EAAY58C,GAASzN,GAAO,EAC1D,EAQEuqD,GAJJ,SAA0B59C,EAAQ09C,EAAYrqD,GAE1Cid,GAAMutC,cAAc79C,EAAQ09C,EAAYp9C,GAAQjN,GAAO,EACzD,EAQEyqD,GAJJ,SAA2B99C,EAAQ09C,EAAYrqD,GAE3Cid,GAAMytC,eAAe/9C,EAAQ09C,EAAY98C,GAASvN,GAAO,EAC3D,EAKE2qD,GADJ,SAAuB1E,EAAIsC,EAAIC,EAAIC,GAAMxrC,GAAM2tC,WAAW3E,EAAIsC,EAAIC,EAAIC,EAAI,EAKtEoC,GADJ,SAAwB5E,GAAMhpC,GAAM6tC,WAAW7E,EAAI,EAK/C8E,GADJ,SAAyB9E,GAAMhpC,GAAM+tC,aAAa/E,EAAI,EAelDgF,GARJ,SAA2BC,EAAMzkB,EAAO0kB,EAAaC,GAKjD,IAAIzxC,EAAUqI,EAAoBmpC,EAAaC,GAC/C,OAAOnuC,GAAMouC,eAAexyC,GAAGynC,MAAM4K,GAAOzkB,EAAO9sB,EACrD,EAOE2xC,GAHJ,SAAsBC,EAAKC,EAAOC,EAAMpQ,GACpCp+B,GAAMyuC,YAAYH,IAAOC,IAASC,IAAQpQ,EAC5C,EAOEsQ,GAHJ,SAA0BpJ,GACtBtlC,GAAM2uC,cAAc/yC,GAAGonC,QAAQsC,GACjC,EAeEsJ,GAXJ,SAAiCx0C,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ0wC,EAAQC,EAAW/iD,GAC1F2P,GAAG+L,eAAeC,SAAW,EAC3B5H,GAAM6pC,kCAAoCmF,EAC5ChvC,GAAMivC,qBAAqB70C,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ0wC,EAAQC,EAAW/iD,GAE5F+T,GAAMivC,qBAAqB70C,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ0wC,EAAQ7+C,GAAQjE,EAAM+iD,GAInGhvC,GAAMivC,qBAAqB70C,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ0wC,EAAQ9iD,EAAOiE,GAAOsH,SAAUvL,EAAQA,EAAK+iD,GAAc,KACtI,EAWEE,GAPJ,SAAiC90C,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ4jC,EAAO8M,EAAQC,EAAW/iD,GACjG+T,GAAM6pC,gCACR7pC,GAAMmvC,qBAAqB/0C,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ4jC,EAAO8M,EAAQC,EAAW/iD,GAEnG+T,GAAMmvC,qBAAqB/0C,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ4jC,EAAO8M,EAAQ7+C,GAAQjE,EAAM+iD,EAE1G,EAeEI,GAXJ,SAAoCh1C,EAAQy0C,EAAOQ,EAASC,EAASlxC,EAAOC,EAAQwM,EAAQmkC,EAAW/iD,GAC/F2P,GAAG+L,eAAeC,SAAW,EAC3B5H,GAAM6pC,kCAAoCmF,EAC5ChvC,GAAMuvC,wBAAwBn1C,EAAQy0C,EAAOQ,EAASC,EAASlxC,EAAOC,EAAQwM,EAAQmkC,EAAW/iD,GAEjG+T,GAAMuvC,wBAAwBn1C,EAAQy0C,EAAOQ,EAASC,EAASlxC,EAAOC,EAAQwM,EAAQ3a,GAAQjE,EAAM+iD,GAIxGhvC,GAAMuvC,wBAAwBn1C,EAAQy0C,EAAOQ,EAASC,EAASlxC,EAAOC,EAAQwM,EAAQ5e,EAAOiE,GAAOsH,SAAUvL,EAAQA,EAAK+iD,GAAc,KAC3I,EAWEQ,GAPJ,SAAoCp1C,EAAQy0C,EAAOQ,EAASC,EAASG,EAASrxC,EAAOC,EAAQ4jC,EAAOp3B,EAAQmkC,EAAW/iD,GAC/G+T,GAAM6pC,gCACR7pC,GAAM0vC,wBAAwBt1C,EAAQy0C,EAAOQ,EAASC,EAASG,EAASrxC,EAAOC,EAAQ4jC,EAAOp3B,EAAQmkC,EAAW/iD,GAEjH+T,GAAM0vC,wBAAwBt1C,EAAQy0C,EAAOQ,EAASC,EAASG,EAASrxC,EAAOC,EAAQ4jC,EAAOp3B,EAAQ3a,GAAQjE,EAAM+iD,EAExH,EAKEW,GADJ,SAA8B3G,EAAIsC,EAAIC,EAAIC,EAAIW,GAAMnsC,GAAM4vC,kBAAkB5G,EAAIsC,EAAIC,EAAIC,EAAIW,EAAI,EAK5F0D,GADJ,SAA2B7G,EAAIsC,EAAIC,EAAIC,EAAIW,EAAIC,EAAIC,EAAIC,GAAMtsC,GAAM8vC,eAAe9G,EAAIsC,EAAIC,EAAIC,EAAIW,EAAIC,EAAIC,EAAIC,EAAI,EAK9GyD,GADJ,SAA8B/G,EAAIsC,EAAIC,EAAIC,EAAIW,EAAIC,EAAIC,EAAIC,GAAMtsC,GAAMgwC,kBAAkBhH,EAAIsC,EAAIC,EAAIC,EAAIW,EAAIC,EAAIC,EAAIC,EAAI,EAKpH2D,GADJ,SAA8BjH,EAAIsC,EAAIC,EAAIC,EAAIW,EAAIC,EAAIC,EAAIC,EAAIC,GAAMvsC,GAAMkwC,kBAAkBlH,EAAIsC,EAAIC,EAAIC,EAAIW,EAAIC,EAAIC,EAAIC,EAAIC,EAAI,EAe5H4D,GAXJ,WACI,IAAI3xC,EAAK5C,GAAG+K,SAAS/K,GAAGwL,UACpBH,EAAUjH,GAAMowC,gBAOpB,OALAnpC,EAAQ5kB,KAAOmc,EAEfyI,EAAQopC,iBAAmBppC,EAAQqpC,mBAAqBrpC,EAAQspC,0BAA4B,EAC5FtpC,EAAQuC,iBAAmB,EAC3B5N,GAAGwL,SAAS5I,GAAMyI,EACXzI,CACT,EAUEgyC,GANJ,SAAyBC,GACrB,IAAIjyC,EAAK5C,GAAG+K,SAAS/K,GAAGonC,SAGxB,OAFApnC,GAAGonC,QAAQxkC,GAAMwB,GAAM0wC,aAAaD,GAE7BjyC,CACT,EAKEmyC,GADJ,SAAqB3H,GAAMhpC,GAAM4wC,SAAS5H,EAAI,EAuB1C6H,GAnBJ,SAA0BttD,EAAGijB,GACzB,IAAK,IAAI1kB,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI0c,EAAKxO,GAAUwW,EAAY,EAAF1kB,GAAO,GAChC4N,EAASkM,GAAG4K,QAAQhI,GAInB9O,IAELsQ,GAAM8wC,aAAaphD,GACnBA,EAAOrN,KAAO,EACduZ,GAAG4K,QAAQhI,GAAM,KAEbA,GAAMwB,GAAMgmC,4BAA2BhmC,GAAMgmC,0BAA4B,GACzExnC,GAAMwB,GAAM8E,mCAAkC9E,GAAM8E,iCAAmC,GACvFtG,GAAMwB,GAAM4pC,gCAA+B5pC,GAAM4pC,8BAAgC,GACjFprC,GAAMwB,GAAM6pC,kCAAiC7pC,GAAM6pC,gCAAkC,GAC3F,CACF,EAcEkH,GAVJ,SAA+BxtD,EAAGs/C,GAC9B,IAAK,IAAI/gD,EAAI,EAAGA,EAAIyB,IAAKzB,EAAG,CAC1B,IAAI0c,EAAKxO,GAAU6yC,EAAiB,EAAF/gD,GAAO,GACrCsoD,EAAcxuC,GAAGinC,aAAarkC,GAC7B4rC,IACLpqC,GAAMgxC,kBAAkB5G,GACxBA,EAAY/nD,KAAO,EACnBuZ,GAAGinC,aAAarkC,GAAM,KACxB,CACF,EAeEyyC,GAXJ,SAA0BzyC,GACtB,GAAKA,EAAL,CACA,IAAIyI,EAAUrL,GAAGwL,SAAS5I,GACrByI,GAILjH,GAAMkxC,cAAcjqC,GACpBA,EAAQ5kB,KAAO,EACfuZ,GAAGwL,SAAS5I,GAAM,MALhB5C,GAAGgL,YAAY,KAHF,CASjB,EAaEuqC,GATJ,SAA0B5tD,EAAG6tD,GACzB,IAAK,IAAItvD,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI0c,EAAKxO,GAAUohD,EAAQ,EAAFtvD,GAAO,GAC5BymB,EAAQ3M,GAAG4M,QAAQhK,GAClB+J,IACLvI,GAAMqxC,YAAY9oC,GAClB3M,GAAG4M,QAAQhK,GAAM,KACnB,CACF,EAaE8yC,GATJ,SAA6B/tD,EAAG6tD,GAC5B,IAAK,IAAItvD,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI0c,EAAKxO,GAAUohD,EAAQ,EAAFtvD,GAAO,GAC5BymB,EAAQ3M,GAAG4M,QAAQhK,GAClB+J,IACLvI,GAAMyI,sBAAsC,eAAEF,GAC9C3M,GAAG4M,QAAQhK,GAAM,KACnB,CACF,EAcE+yC,GAVJ,SAAgChuD,EAAGu/C,GAC/B,IAAK,IAAIhhD,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI0c,EAAKxO,GAAU8yC,EAAkB,EAAFhhD,GAAO,GACtCyoD,EAAe3uC,GAAGknC,cAActkC,GAC/B+rC,IACLvqC,GAAMwxC,mBAAmBjH,GACzBA,EAAaloD,KAAO,EACpBuZ,GAAGknC,cAActkC,GAAM,KACzB,CACF,EAcEizC,GAVJ,SAA2BluD,EAAG4/C,GAC1B,IAAK,IAAIrhD,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI0c,EAAKxO,GAAUmzC,EAAa,EAAFrhD,GAAO,GACjC6oD,EAAU/uC,GAAGunC,SAAS3kC,GACrBmsC,IACL3qC,GAAM0xC,cAAc/G,GACpBA,EAAQtoD,KAAO,EACfuZ,GAAGunC,SAAS3kC,GAAM,KACpB,CACF,EAcEmzC,GAVJ,SAAyBnzC,GACrB,GAAKA,EAAL,CACA,IAAI8mC,EAAS1pC,GAAGonC,QAAQxkC,GACnB8mC,GAILtlC,GAAM4xC,aAAatM,GACnB1pC,GAAGonC,QAAQxkC,GAAM,MAJf5C,GAAGgL,YAAY,KAHF,CAQjB,EAeEirC,GAXJ,SAAuBrzC,GACnB,GAAKA,EAAL,CACA,IAAIyvC,EAAOryC,GAAGynC,MAAM7kC,GACfyvC,GAILjuC,GAAM8xC,WAAW7D,GACjBA,EAAK5rD,KAAO,EACZuZ,GAAGynC,MAAM7kC,GAAM,MALb5C,GAAGgL,YAAY,KAHF,CASjB,EAcEmrC,GAVJ,SAA2BxuD,EAAGw/C,GAC1B,IAAK,IAAIjhD,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI0c,EAAKxO,GAAU+yC,EAAa,EAAFjhD,GAAO,GACjCgpD,EAAUlvC,GAAGmnC,SAASvkC,GACrBssC,IACL9qC,GAAMgyC,cAAclH,GACpBA,EAAQzoD,KAAO,EACfuZ,GAAGmnC,SAASvkC,GAAM,KACpB,CACF,EAcEyzC,GAVJ,SAAqC1uD,EAAG6tD,GACpC,IAAK,IAAItvD,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI0c,EAAKxO,GAAUohD,EAAQ,EAAFtvD,GAAO,GAC5BowD,EAAoBt2C,GAAGwnC,mBAAmB5kC,GACzC0zC,IACLlyC,GAAMmyC,wBAAwBD,GAC9BA,EAAkB7vD,KAAO,EACzBuZ,GAAGwnC,mBAAmB5kC,GAAM,KAC9B,CACF,EAWE4zC,GAAmCptC,EAInCqtC,GAA2BrtC,EAC3BstC,GAAsCD,GAItCE,GADJ,SAAsBvJ,GAAMhpC,GAAMwyC,UAAUxJ,EAAI,EAO5CyJ,GAHJ,SAAsBjgB,GAClBxyB,GAAM0yC,YAAYlgB,EACpB,EAKEmgB,GADJ,SAAwB3J,EAAIsC,GAAMtrC,GAAM4yC,WAAW5J,EAAIsC,EAAI,EAOvDuH,GAHJ,SAAyB5rC,EAASq+B,GAC9BtlC,GAAM8yC,aAAal3C,GAAGwL,SAASH,GAAUrL,GAAGonC,QAAQsC,GACtD,EAKEyN,GADJ,SAAoB/J,GAAMhpC,GAAMgzC,QAAQhK,EAAI,EASxCiK,GALJ,SAAqC3uC,GACxB1I,GAAG+L,eAAeqC,cAAc1F,GACtC2F,SAAU,EACbjK,GAAMkzC,yBAAyB5uC,EACjC,EAYE6uC,GARJ,SAAuBlwD,EAAMkiB,EAAOC,GAEhCxJ,GAAGsK,wCAAwCf,EAAQC,GAEnDpF,GAAMozC,WAAWnwD,EAAMkiB,EAAOC,GAE9BxJ,GAAGwK,0CACL,EAOEitC,GAAoCnuC,GAIpCouC,GAA8BpuC,GAC9BquC,GAAyCD,GAIzCE,GAA4BtuC,GAC5BuuC,GAAuCD,GAIvCE,GAA4BxuC,GAC5ByuC,GAAuCD,GAIvCE,GAA2B1uC,GAC3B2uC,GAAsCD,GAEtCluC,GAAuB,GAYvBouC,GAA4BvuC,GAI5BwuC,GAAoBxuC,GACpByuC,GAA+BD,GAI/BE,GAAsB1uC,GACtB2uC,GAAiCD,GA2BjCE,GAA6BvuC,GAM7BwuC,GAAsC/tC,GAItCguC,GAAgChuC,GAChCiuC,GAA2CD,GAI3CE,GAA8BluC,GAC9BmuC,GAAyCD,GAIzCE,GAA8BpuC,GAC9BquC,GAAyCD,GAIzCE,GAA6BtuC,GAC7BuuC,GAAwCD,GAUxCE,GAPJ,SAA8B5xD,EAAMgY,EAAO6oB,EAAK1e,EAAO7e,EAAMsf,GAKzDD,GAAgB3iB,EAAMmiB,EAAO7e,EAAMsf,EACrC,EAKEivC,GADJ,SAAmB9L,GAAMhpC,GAAM+0C,OAAO/L,EAAI,EAStCgM,GALJ,SAAoC1wC,GACvB1I,GAAG+L,eAAeqC,cAAc1F,GACtC2F,SAAU,EACbjK,GAAMi1C,wBAAwB3wC,EAChC,EAKE4wC,GADJ,SAAqBlM,GAAMhpC,GAAMm1C,SAASnM,EAAI,EAO1CoM,GAHJ,SAAwBh7C,GACpB4F,GAAMyI,sBAAmC,YAAErO,EAC7C,EAKEi7C,GADJ,WAAqCr1C,GAAMs1C,sBAAuB,EAc9DC,GAVJ,SAAsBlmD,EAAWm6B,GAC7B,IAAIykB,EAAOjuC,GAAMw1C,UAAUnmD,EAAWm6B,GACtC,GAAIykB,EAAM,CACR,IAAIzvC,EAAK5C,GAAG+K,SAAS/K,GAAGynC,OAGxB,OAFA4K,EAAK5rD,KAAOmc,EACZ5C,GAAGynC,MAAM7kC,GAAMyvC,EACRzvC,CACT,CACA,OAAO,CACT,EAKEi3C,GADJ,WAAuBz1C,GAAM8vB,QAAS,EAKlC4lB,GADJ,WAAsB11C,GAAM21C,OAAQ,EAQhCC,GAJJ,SAAoCx7C,EAAQy7C,EAAYC,EAAoBvL,GACxEvqC,GAAM+1C,wBAAwB37C,EAAQy7C,EAAYC,EACfl6C,GAAGknC,cAAcyH,GACtD,EAQEyL,GAJJ,SAAiC57C,EAAQy7C,EAAYI,EAAWnL,EAAS+D,GACrE7uC,GAAMk2C,qBAAqB97C,EAAQy7C,EAAYI,EACfr6C,GAAGmnC,SAAS+H,GAAU+D,EACxD,EAOEsH,GAHJ,SAAoC/7C,EAAQy7C,EAAY/K,EAAS+D,EAAOuH,GACpEp2C,GAAMq2C,wBAAwBj8C,EAAQy7C,EAAYj6C,GAAGmnC,SAAS+H,GAAU+D,EAAOuH,EACjF,EAKEE,GADJ,SAAsBtN,GAAMhpC,GAAMu2C,UAAUvN,EAAI,EAuB5CwN,GAJJ,SAAuBjzD,EAAGijB,GACtBD,GAAchjB,EAAGijB,EAAS,eAAgB5K,GAAG4K,QAE/C,EASEiwC,GAJJ,SAA4BlzD,EAAG6tD,GAC3B7qC,GAAchjB,EAAG6tD,EAAK,oBAAqBx1C,GAAGinC,aAEhD,EAQE6T,GAJJ,SAAuBnzD,EAAG6tD,GACtB7qC,GAAchjB,EAAG6tD,EAAK,cAAex1C,GAAG4M,QAE1C,EAkBEmuC,GAdJ,SAA0BpzD,EAAG6tD,GACzB,IAAK,IAAItvD,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAIymB,EAAQvI,GAAMyI,sBAAsC,iBACxD,IAAKF,EAAO,CAEV,IADA3M,GAAGgL,YAAY,MACR9kB,EAAIyB,GAAGyM,GAAUohD,EAAU,EAAJtvD,KAAS,GAAM,EAC7C,MACF,CACA,IAAI0c,EAAK5C,GAAG+K,SAAS/K,GAAG4M,SACxBD,EAAMlmB,KAAOmc,EACb5C,GAAG4M,QAAQhK,GAAM+J,EACjBvY,GAAUohD,EAAQ,EAAFtvD,GAAO,GAAM0c,CAC/B,CACF,EASEo4C,GAJJ,SAA6BrzD,EAAGu/C,GAC5Bv8B,GAAchjB,EAAGu/C,EAAe,qBAAsBlnC,GAAGknC,cAE3D,EAQE+T,GAJJ,SAAwBtzD,EAAG4/C,GACvB58B,GAAchjB,EAAG4/C,EAAU,gBAAiBvnC,GAAGunC,SAEjD,EASE2T,GAJJ,SAAwBvzD,EAAGw/C,GACvBx8B,GAAchjB,EAAGw/C,EAAU,gBAAiBnnC,GAAGmnC,SAEjD,EAQEgU,GAJJ,SAAkCxzD,EAAG6tD,GACjC7qC,GAAchjB,EAAG6tD,EAAK,0BAA2Bx1C,GAAGwnC,mBAEtD,EASE4T,GAAgCnwC,GAKhCowC,GADwBpwC,GAKxBqwC,GADJ,SAA2BlO,GAAMhpC,GAAMm3C,eAAenO,EAAI,EAmBtDoO,GAHJ,SAA4BnwC,EAAS3C,EAAO4C,EAAS5iB,EAAQ0U,EAAMzS,EAAMlE,GACrE0kB,GAA6B,kBAAmBE,EAAS3C,EAAO4C,EAAS5iB,EAAQ0U,EAAMzS,EAAMlE,EAC/F,EAQEg1D,GAHJ,SAA6BpwC,EAAS3C,EAAO4C,EAAS5iB,EAAQ0U,EAAMzS,EAAMlE,GACtE0kB,GAA6B,mBAAoBE,EAAS3C,EAAO4C,EAAS5iB,EAAQ0U,EAAMzS,EAAMlE,EAChG,EAgBEi1D,GAZJ,SAAsCrwC,EAASswC,EAAmBrwC,EAAS5iB,EAAQkzD,GAG/E,IAAI1vC,EAAS9H,GAAMy3C,0BAFnBxwC,EAAUrL,GAAGwL,SAASH,GAEgCswC,GACtD,GAAKzvC,EACL,GAAI0vC,GAAoBtwC,EAAU,EAAG,CACnC,IAAIG,EAA0BjP,EAAa0P,EAAQ0vC,EAAkBtwC,GACjE5iB,IAAQ0L,GAAS1L,GAAS,GAAM+iB,EACtC,MACM/iB,IAAQ0L,GAAS1L,GAAS,GAAM,EAExC,EA6BEozD,GAzBJ,SAAoCzwC,EAASswC,EAAmBnvC,EAAOC,GACnE,GAAKA,EAQL,GAFApB,EAAUrL,GAAGwL,SAASH,GAET,OAATmB,EAAJ,CAMA,IAAIN,EAAS9H,GAAM23C,+BAA+B1wC,EAASswC,EAAmBnvC,GAC9E,GAAe,OAAXN,EACJ,GAAa,OAATM,EACF,IAAK,IAAItmB,EAAI,EAAGA,EAAIgmB,EAAOxjB,OAAQxC,IACjCkO,GAAUqY,EAAW,EAAFvmB,GAAO,GAAMgmB,EAAOhmB,QAGzCkO,GAASqY,GAAS,GAAMP,CAT1B,KAJA,CACE,IAAIzlB,EAAO2d,GAAMy3C,0BAA0BxwC,EAASswC,GACpDvnD,GAASqY,GAAS,GAAMhmB,EAAKiC,OAAO,CAEtC,MATEsX,GAAGgL,YAAY,KAoBnB,EA6BEgxC,GAzBJ,SAAgC3wC,EAAS4wC,EAAcC,EAAgB1vC,EAAOC,GAC1E,GAAKA,EAML,GAAIwvC,EAAe,GAAuB,GAAlBC,EACtBl8C,GAAGgL,YAAY,UADjB,CAIAK,EAAUrL,GAAGwL,SAASH,GAEtB,IADA,IAAImqC,EAAM,GACDtvD,EAAI,EAAGA,EAAI+1D,EAAc/1D,IAChCsvD,EAAIvpD,KAAKmI,GAAU8nD,EAAmB,EAAFh2D,GAAO,IAG7C,IAAIgmB,EAAS9H,GAAM+3C,kBAAkB9wC,EAASmqC,EAAKhpC,GACnD,GAAKN,EAEL,KAAI3R,EAAM2R,EAAOxjB,OACjB,IAASxC,EAAI,EAAGA,EAAIqU,EAAKrU,IACvBkO,GAAUqY,EAAW,EAAFvmB,GAAO,GAAMgmB,EAAOhmB,EAFlB,CAVvB,MANE8Z,GAAGgL,YAAY,KAoBnB,EAgBEoxC,GAZJ,SAA+B/wC,EAASgxC,EAAU7yC,EAAO49B,GACrD,IAAIl7B,EAAS9H,GAAMk4C,mBAAmBt8C,GAAGwL,SAASH,IAC9C9Q,EAAM2R,EAAOxjB,OACb6R,EAAM8hD,IACR9hD,EAAM8hD,GAERjoD,GAASoV,GAAQ,GAAMjP,EACvB,IAAK,IAAIrU,EAAI,EAAGA,EAAIqU,IAAOrU,EAAG,CAC5B,IAAI0c,EAAK5C,GAAGonC,QAAQt7C,QAAQogB,EAAOhmB,IACnCkO,GAAUgzC,EAAY,EAAFlhD,GAAO,GAAM0c,CACnC,CACF,EAQE25C,GAHJ,SAA8BlxC,EAAS5kB,GACnC,OAAO2d,GAAMo4C,kBAAkBx8C,GAAGwL,SAASH,GAAUlP,EAAa1V,GACpE,EA8IEg2D,GAHJ,SAAwB5wC,EAAO7jB,GAC3B4jB,GAAmBC,EAAO7jB,EAAG,EAC/B,EAaE00D,GATJ,SAAmCl+C,EAAQrX,EAAOkJ,GACzCA,EAMLqb,GAAcrb,EAAM+T,GAAMu4C,mBAAmBn+C,EAAQrX,IAHnD6Y,GAAGgL,YAAY,KAInB,EAaE4xC,GATJ,SAAiCp+C,EAAQrX,EAAOkJ,GACvCA,EAML+D,GAAS/D,GAAO,GAAM+T,GAAMu4C,mBAAmBn+C,EAAQrX,GAHrD6Y,GAAGgL,YAAY,KAInB,EASE6xC,GALJ,WACI,IAAIjgC,EAAQxY,GAAM04C,YAAc98C,GAAG6nC,UAEnC,OADA7nC,GAAG6nC,UAAY,EACRjrB,CACT,EAQEmgC,GAA0B5wC,GAM1B6wC,GAHJ,SAAgC3xC,EAAS5kB,GACrC,OAAO2d,GAAM64C,oBAAoBj9C,GAAGwL,SAASH,GAAUlP,EAAa1V,GACtE,EAYEy2D,GARJ,SAAgD1+C,EAAQy7C,EAAYztC,EAAOC,GACvE,IAAIP,EAAS9H,GAAM+4C,kCAAkC3+C,EAAQy7C,EAAYztC,IACrEN,aAAkBkxC,mBAClBlxC,aAAkBmxC,gBACpBnxC,EAAuB,EAAdA,EAAOzlB,MAElB2N,GAASqY,GAAS,GAAMP,CAC1B,EAuDEoxC,GAHJ,SAA4B9+C,EAAQkK,EAAOrY,GACvC+b,GAA0B5N,EAAQkK,EAAOrY,EAAM,EACjD,EAOEktD,GAHJ,SAA0B1xC,EAAO7jB,GAC7B4jB,GAAmBC,EAAO7jB,EAAG,EAC/B,EAOEw1D,GAHJ,SAA0Bh/C,EAAQkK,EAAOrY,GACrC+b,GAA0B5N,EAAQkK,EAAOrY,EAAM,EACjD,EAQEotD,GAHJ,SAAwB5xC,EAAO7jB,GAC3B4jB,GAAmBC,EAAO7jB,EAAG,EAC/B,EAqBE01D,GAjBJ,SAAgCl/C,EAAQm/C,EAAgBnxC,EAAOlB,EAASmB,GACpE,GAAInB,EAAU,EACZtL,GAAGgL,YAAY,WAGjB,GAAKyB,EAAL,CAMA,IAAIpP,EAAM+G,GAAMw5C,2BAA2Bp/C,EAAQm/C,EAAgBnxC,GACnE,GAAY,OAARnP,EACJ,IAAK,IAAInX,EAAI,EAAGA,EAAImX,EAAI3U,QAAUxC,EAAIolB,IAAWplB,EAC/CkO,GAAUqY,EAAW,EAAFvmB,GAAO,GAAMmX,EAAInX,EAJtC,MAFE8Z,GAAGgL,YAAY,KAQnB,EAOE6yC,GAHJ,WACI79C,GAAGgL,YAAY,KACjB,EAUE8yC,GANJ,SAA8BzyC,EAAS0yC,EAAWr1D,EAAQs1D,GACtD,IAAI98B,EAAM9c,GAAM65C,kBAAkBj+C,GAAGwL,SAASH,IAClC,OAAR6V,IAAcA,EAAM,mBACxB,IAAIzV,EAA2BsyC,EAAY,GAAKC,EAAWxhD,EAAa0kB,EAAK88B,EAASD,GAAa,EAC/Fr1D,IAAQ0L,GAAS1L,GAAS,GAAM+iB,EACtC,EAgDEyyC,GA5CJ,SAAyB7yC,EAASmB,EAAOxkB,GACrC,GAAKA,EAOL,GAAIqjB,GAAWrL,GAAGgnC,QAChBhnC,GAAGgL,YAAY,WAMjB,GAFAK,EAAUrL,GAAGwL,SAASH,GAET,OAATmB,EAAiB,CACnB,IAAI0U,EAAM9c,GAAM65C,kBAAkB5yC,GACtB,OAAR6V,IAAcA,EAAM,mBACxB9sB,GAASpM,GAAI,GAAMk5B,EAAIx4B,OAAS,CAClC,MAAO,GAAa,OAAT8jB,EAAoD,CAC7D,IAAKnB,EAAQopC,iBACX,IAAK,IAAIvuD,EAAI,EAAGA,EAAIke,GAAMkJ,oBAAoBjC,EAAS,SAAiCnlB,EACtFmlB,EAAQopC,iBAAmBh8C,KAAKuF,IAAIqN,EAAQopC,iBAAkBrwC,GAAMmJ,iBAAiBlC,EAASnlB,GAAGO,KAAKiC,OAAO,GAGjH0L,GAASpM,GAAI,GAAMqjB,EAAQopC,gBAC7B,MAAO,GAAa,OAATjoC,EAAsD,CAC/D,IAAKnB,EAAQqpC,mBACX,IAASxuD,EAAI,EAAGA,EAAIke,GAAMkJ,oBAAoBjC,EAAS,SAAmCnlB,EACxFmlB,EAAQqpC,mBAAqBj8C,KAAKuF,IAAIqN,EAAQqpC,mBAAoBtwC,GAAM+5C,gBAAgB9yC,EAASnlB,GAAGO,KAAKiC,OAAO,GAGpH0L,GAASpM,GAAI,GAAMqjB,EAAQqpC,kBAC7B,MAAO,GAAa,OAATloC,EAA+D,CACxE,IAAKnB,EAAQspC,0BACX,IAASzuD,EAAI,EAAGA,EAAIke,GAAMkJ,oBAAoBjC,EAAS,SAAuCnlB,EAC5FmlB,EAAQspC,0BAA4Bl8C,KAAKuF,IAAIqN,EAAQspC,0BAA2BvwC,GAAMy3C,0BAA0BxwC,EAASnlB,GAAGwC,OAAO,GAGvI0L,GAASpM,GAAI,GAAMqjB,EAAQspC,yBAC7B,MACEvgD,GAASpM,GAAI,GAAMoc,GAAMkJ,oBAAoBjC,EAASmB,QArCtDxM,GAAGgL,YAAY,KAuCnB,EA6BEozC,GAAsC7xC,GAoBtC8xC,GAAoCtxC,GAKpCuxC,GAD4B/xC,GAqB5BgyC,GAjBJ,SAA8B37C,EAAI4J,EAAOC,GACrC,GAAKA,EAAL,CAMA,IACIC,EAAQtI,GAAM0I,kBADN9M,GAAG4M,QAAQhK,GACoB4J,GAO3CpY,GAASqY,GAAS,GALE,kBAATC,EACHA,EAAQ,EAAI,EAEZA,CAPR,MAFE1M,GAAGgL,YAAY,KAYnB,EAMEwzC,GAD0BzxC,GAa1B0xC,GATJ,SAAuBjgD,EAAQgO,EAAOC,GAC7BA,EAMLrY,GAASqY,GAAS,GAAMrI,GAAMs6C,SAASlgD,EAAQgO,GAH7CxM,GAAGgL,YAAY,KAInB,EAaE2zC,GATJ,SAA0BngD,EAAQgO,EAAOC,GAChCA,EAMLrY,GAASqY,GAAS,GAAMrI,GAAMyI,sBAAmC,YAAErO,EAAQgO,GAHzExM,GAAGgL,YAAY,KAInB,EAaE4zC,GATJ,SAAuCpgD,EAAQgO,EAAOC,GAC7CA,EAMLrY,GAASqY,GAAS,GAAMrI,GAAMy6C,yBAAyBrgD,EAAQgO,GAH7DxM,GAAGgL,YAAY,KAInB,EAaE8zC,GATJ,SAAkC/P,EAASviC,EAAOC,GACzCA,EAML7X,GAAU6X,GAAS,GAAMrI,GAAM26C,oBAAoB/+C,GAAGunC,SAASwH,GAAUviC,GAHvExM,GAAGgL,YAAY,KAInB,EAaEg0C,GATJ,SAAkCjQ,EAASviC,EAAOC,GACzCA,EAMLrY,GAASqY,GAAS,GAAMrI,GAAM26C,oBAAoB/+C,GAAGunC,SAASwH,GAAUviC,GAHtExM,GAAGgL,YAAY,KAInB,EAWEi0C,GANJ,SAA6BvV,EAAQqU,EAAWr1D,EAAQs1D,GACpD,IAAI98B,EAAM9c,GAAM86C,iBAAiBl/C,GAAGonC,QAAQsC,IAChC,OAARxoB,IAAcA,EAAM,mBACxB,IAAIzV,EAA2BsyC,EAAY,GAAKC,EAAWxhD,EAAa0kB,EAAK88B,EAASD,GAAa,EAC/Fr1D,IAAQ0L,GAAS1L,GAAS,GAAM+iB,EACtC,EAUE0zC,GANJ,SAAqCtK,EAAYuK,EAAeC,EAAOC,GACnE,IAAIpzC,EAAS9H,GAAMm7C,yBAAyB1K,EAAYuK,GACxDhrD,GAASirD,GAAQ,GAAMnzC,EAAOszC,SAC9BprD,GAAUirD,EAAQ,GAAK,GAAMnzC,EAAOuzC,SACpCrrD,GAASkrD,GAAY,GAAMpzC,EAAOozC,SACpC,EAUEI,GANJ,SAA4BhW,EAAQp+B,EAAS5iB,EAAQkhD,GACjD,IAAI19B,EAAS9H,GAAMu7C,gBAAgB3/C,GAAGonC,QAAQsC,IAC9C,GAAKx9B,EAAL,CACA,IAAIT,EAA2BH,EAAU,GAAKs+B,EAAUptC,EAAa0P,EAAQ09B,EAAQt+B,GAAW,EAC5F5iB,IAAQ0L,GAAS1L,GAAS,GAAM+iB,EAFjB,CAGrB,EA8BEm0C,GA1BJ,SAAwBlW,EAAQl9B,EAAOxkB,GACnC,GAAKA,EAML,GAAa,OAATwkB,EAAiB,CACnB,IAAI0U,EAAM9c,GAAM86C,iBAAiBl/C,GAAGonC,QAAQsC,IAChC,OAARxoB,IAAcA,EAAM,mBAMxB9sB,GAASpM,GAAI,GADGk5B,EAAMA,EAAIx4B,OAAS,EAAI,CAEzC,MAAO,GAAa,OAAT8jB,EAAiB,CAC1B,IAAIo9B,EAASxlC,GAAMu7C,gBAAgB3/C,GAAGonC,QAAQsC,IAI9Ct1C,GAASpM,GAAI,GADM4hD,EAASA,EAAOlhD,OAAS,EAAI,CAElD,MACE0L,GAASpM,GAAI,GAAMoc,GAAMy7C,mBAAmB7/C,GAAGonC,QAAQsC,GAASl9B,QAnBhExM,GAAGgL,YAAY,KAqBnB,EAsDE80C,GAjDJ,SAAsBj0C,GAClB,IAAIxO,EAAM2C,GAAGumC,YAAY16B,GACzB,IAAKxO,EAAK,CACR,OAAQwO,GACN,KAAK,KACH,IAAIk0C,EAAO37C,GAAM6H,0BAA4B,GAE7C5O,EAAMF,GADN4iD,EAAOA,EAAK5nD,OAAO4nD,EAAK9wB,KAAI,SAAS5iC,GAAK,MAAO,MAAQA,CAAG,MACjC46B,KAAK,MAChC,MACF,KAAK,KACL,KAAK,KACL,KAAK,MACL,KAAK,MACH,IAAIh/B,EAAImc,GAAM6E,aAAa4C,GACtB5jB,GACH+X,GAAGgL,YAAY,MAEjB3N,EAAMpV,GAAKkV,EAAgBlV,GAC3B,MAEF,KAAK,KACH,IAAI+3D,EAAY57C,GAAM6E,aAAa,MAOnC5L,EAAMF,EAL8B6iD,EAAhChgD,GAAG+L,eAAeC,SAAW,EAAe,kBAAoBg0C,EAAY,IAGlE,kBAAoBA,EAAY,KAG9C,MACF,KAAK,MACH,IAAIC,EAAc77C,GAAM6E,aAAa,OAGjCi3C,EAAUD,EAAYE,MADb,gDAEG,OAAZD,IACuB,GAArBA,EAAQ,GAAGx3D,SAAaw3D,EAAQ,GAAKA,EAAQ,GAAK,KACtDD,EAAc,qBAAuBC,EAAQ,GAAK,KAAOD,EAAc,KAEzE5iD,EAAMF,EAAgB8iD,GACtB,MACF,QACEjgD,GAAGgL,YAAY,MAGnBhL,GAAGumC,YAAY16B,GAASxO,CAC1B,CACA,OAAOA,CACT,EAkCE+iD,GA9BJ,SAAuB35D,EAAMiiB,GACzB,GAAI1I,GAAG+L,eAAeC,QAAU,EAE9B,OADAhM,GAAGgL,YAAY,MACR,EAET,IAAI48B,EAAe5nC,GAAG4nC,aAAanhD,GACnC,GAAImhD,EACF,OAAIl/B,EAAQ,GAAKA,GAASk/B,EAAal/C,QACrCsX,GAAGgL,YAAY,MACR,GAEF48B,EAAal/B,GAEtB,GACO,OADCjiB,EACN,CACE,IAAIs5D,EAAO37C,GAAM6H,0BAA4B,GAK7C,OAHA8zC,GADAA,EAAOA,EAAK5nD,OAAO4nD,EAAK9wB,KAAI,SAAS5iC,GAAK,MAAO,MAAQA,CAAG,MAChD4iC,KAAI,SAAS5iC,GAAK,OAAO8Q,EAAgB9Q,EAAI,IAEzDu7C,EAAe5nC,GAAG4nC,aAAanhD,GAAQs5D,EACnCr3C,EAAQ,GAAKA,GAASk/B,EAAal/C,QACrCsX,GAAGgL,YAAY,MACR,GAEF48B,EAAal/B,EAAM,CAG1B,OADA1I,GAAGgL,YAAY,MACR,CAEb,EAuBEq1C,GAnBJ,SAAsBhO,EAAM7lC,EAAOlB,EAAS5iB,EAAQ6lC,GAChD,GAAIjjB,EAAU,EAGZtL,GAAGgL,YAAY,WAGjB,GAAKujB,EAAL,CAMA,IAAIlxB,EAAM+G,GAAMk8C,iBAAiBtgD,GAAGynC,MAAM4K,GAAO7lC,GACrC,OAARnP,IACFjJ,GAASm6B,GAAS,GAAMlxB,EACpB3U,IAAQ0L,GAAS1L,GAAS,GAAM,GAJtC,MAFEsX,GAAGgL,YAAY,KAQnB,EAaEu1C,GATJ,SAA8B/hD,EAAQgO,EAAOC,GACpCA,EAML7X,GAAU6X,GAAS,GAAMrI,GAAMo8C,gBAAgBhiD,EAAQgO,GAHrDxM,GAAGgL,YAAY,KAInB,EAaEy1C,GATJ,SAA8BjiD,EAAQgO,EAAOC,GACpCA,EAMLrY,GAASqY,GAAS,GAAMrI,GAAMo8C,gBAAgBhiD,EAAQgO,GAHpDxM,GAAGgL,YAAY,KAInB,EAmBE01C,GAfJ,SAAwCr1C,EAAS3C,EAAO4C,EAAS5iB,EAAQ0U,EAAMzS,EAAMlE,GAEjF,IAAI8kB,EAAOnH,GAAMu8C,4BADjBt1C,EAAUrL,GAAGwL,SAASH,GACgC3C,GACtD,GAAK6C,EAAL,CAEA,GAAI9kB,GAAQ6kB,EAAU,EAAG,CACvB,IAAIG,EAA0BjP,EAAa+O,EAAK9kB,KAAMA,EAAM6kB,GACxD5iB,IAAQ0L,GAAS1L,GAAS,GAAM+iB,EACtC,MACM/iB,IAAQ0L,GAAS1L,GAAS,GAAM,GAGlC0U,IAAMhJ,GAASgJ,GAAO,GAAMmO,EAAKnO,MACjCzS,IAAMyJ,GAASzJ,GAAO,GAAM4gB,EAAK5gB,KAVpB,CAWnB,EAOEi2D,GAHJ,SAAiCv1C,EAASuwC,GACtC,OAAOx3C,GAAMy8C,qBAAqB7gD,GAAGwL,SAASH,GAAUlP,EAAay/C,GACvE,EA4BEkF,GAxBJ,SAA8Bz1C,EAAS4wC,EAAc8E,EAAc7E,GAC/D,GAAKA,EAML,GAAID,EAAe,IAAsB,GAAhB8E,GAAuC,GAAlB7E,GAC5Cl8C,GAAGgL,YAAY,UADjB,CAIAK,EAAUrL,GAAGwL,SAASH,GAEtB,IADA,IAAI21C,EAAQ,GACH96D,EAAI,EAAGA,EAAI+1D,EAAc/1D,IAChC86D,EAAM/0D,KAAKkQ,EAAa/H,GAAU2sD,EAAiB,EAAF76D,GAAO,KAE1D,IAAIgmB,EAAS9H,GAAM68C,kBAAkB51C,EAAS21C,GAC9C,GAAK90C,EAEL,KAAI3R,EAAM2R,EAAOxjB,OACjB,IAASxC,EAAI,EAAGA,EAAIqU,EAAKrU,IACvBkO,GAAU8nD,EAAmB,EAAFh2D,GAAO,GAAMgmB,EAAOhmB,EAF1B,CATvB,MANE8Z,GAAGgL,YAAY,KAmBnB,EA8FEk2C,GA1CJ,SAA+B71C,EAAS5kB,GAIpC,GAFAA,EAAO0V,EAAa1V,GAEhB4kB,EAAUrL,GAAGwL,SAASH,GAAU,CAClC6B,GAA2C7B,GAC3C,IAAI8B,EAAkB9B,EAAQ8B,gBAC1Bg0C,EAAa,EACbC,EAAkB36D,EAOlB46D,EAAYr0C,GAAqBvmB,GAGjC46D,EAAY,IACdF,EAAan+C,EAAQvc,EAAK0H,MAAMkzD,EAAY,MAAQ,EACpDD,EAAkB36D,EAAK0H,MAAM,EAAGkzD,IAIlC,IAAIC,EAAYj2C,EAAQ+B,wBAAwBg0C,GAIhD,GAAIE,GAAaH,EAAaG,EAAU,KAEjCn0C,EADLg0C,GAAcG,EAAU,IACWn0C,EAAgBg0C,IAAe/8C,GAAM4J,mBAAmB3C,EAAS5kB,IAClG,OAAO06D,CAGb,MAIEnhD,GAAGgL,YAAY,MAEjB,OAAQ,CACV,EAqDEu2C,GAHJ,SAAyBl2C,EAASrhB,EAAUyiB,GACxCwB,GAA0B5C,EAASrhB,EAAUyiB,EAAQ,EACvD,EAQE+0C,GAHJ,SAAyBn2C,EAASrhB,EAAUyiB,GACxCwB,GAA0B5C,EAASrhB,EAAUyiB,EAAQ,EACvD,EAOEg1C,GAHJ,SAA0Bp2C,EAASrhB,EAAUyiB,GACzCwB,GAA0B5C,EAASrhB,EAAUyiB,EAAQ,EACvD,EAuCEi1C,GAAmClzC,GAKnCmzC,GADyBnzC,GAgBzBozC,GAZJ,SAAoCl5C,EAAO8D,EAAOq1C,GACzCA,GAMD7hD,GAAG+L,eAAeqC,cAAc1F,GAAO2F,SACzC1Y,GAAI,mFAENvB,GAASytD,GAAU,GAAMz9C,GAAM09C,sBAAsBp5C,EAAO8D,IAN1DxM,GAAGgL,YAAY,KAOnB,EAUE+2C,GALJ,SAA8Br5C,EAAO8D,EAAOC,GAGxC0B,GAA+BzF,EAAO8D,EAAOC,EAAQ,EACvD,EAUEu1C,GALJ,SAA8Bt5C,EAAO8D,EAAOC,GAGxC0B,GAA+BzF,EAAO8D,EAAOC,EAAQ,EACvD,EAKEw1C,GADJ,SAAiB7U,EAAIsC,GAAMtrC,GAAM89C,KAAK9U,EAAIsC,EAAI,EAY1CyS,GARJ,SAAkC3jD,EAAQ4jD,EAAgBC,GAEtD,IADA,IAAIC,EAAOx4C,GAAqBs4C,GACvBl8D,EAAI,EAAGA,EAAIk8D,EAAgBl8D,IAClCo8D,EAAKp8D,GAAKkO,GAAUiuD,EAAgB,EAAFn8D,GAAO,GAG3Cke,GAAMm+C,sBAAsB/jD,EAAQ8jD,EACtC,EAYEE,GARJ,SAAqChkD,EAAQ4jD,EAAgBC,EAAax1D,EAAGvC,EAAGkY,EAAOC,GAEnF,IADA,IAAI6/C,EAAOx4C,GAAqBs4C,GACvBl8D,EAAI,EAAGA,EAAIk8D,EAAgBl8D,IAClCo8D,EAAKp8D,GAAKkO,GAAUiuD,EAAgB,EAAFn8D,GAAO,GAG3Cke,GAAMq+C,yBAAyBjkD,EAAQ8jD,EAAMz1D,EAAGvC,EAAGkY,EAAOC,EAC5D,EASEigD,GALJ,SAAqB5uD,GACjB,IAAIjI,EAAImU,GAAG4K,QAAQ9W,GACnB,OAAKjI,EACEuY,GAAMu+C,SAAS92D,GADP,CAEjB,EAKE+2D,GADJ,SAAsBxV,GAAM,OAAOhpC,GAAMy+C,UAAUzV,EAAI,EASnD0V,GALJ,SAA0BtU,GACtB,IAAIuU,EAAK/iD,GAAGinC,aAAauH,GACzB,OAAKuU,EACE3+C,GAAM4+C,cAAcD,GADX,CAElB,EASEE,GALJ,SAAsB53C,GAElB,OADAA,EAAUrL,GAAGwL,SAASH,IAEfjH,GAAM8+C,UAAU73C,GADF,CAEvB,EASE83C,GALJ,SAAoBvgD,GAChB,IAAI+J,EAAQ3M,GAAG4M,QAAQhK,GACvB,OAAK+J,EACEvI,GAAMg/C,QAAQz2C,GADF,CAErB,EASE02C,GALJ,SAAuBzgD,GACnB,IAAI+J,EAAQ3M,GAAG4M,QAAQhK,GACvB,OAAK+J,EACEvI,GAAMyI,sBAAkC,WAAEF,GAD9B,CAErB,EASE22C,GALJ,SAA2B3U,GACvB,IAAI4U,EAAKvjD,GAAGknC,cAAcyH,GAC1B,OAAK4U,EACEn/C,GAAMo/C,eAAeD,GADZ,CAElB,EASEE,GALJ,SAAsB7gD,GAClB,IAAImsC,EAAU/uC,GAAGunC,SAAS3kC,GAC1B,OAAKmsC,EACE3qC,GAAMs/C,UAAU3U,GADF,CAEvB,EASE4U,GALJ,SAAqBja,GACjB,IAAIzhD,EAAI+X,GAAGonC,QAAQsC,GACnB,OAAKzhD,EACEmc,GAAMw/C,SAAS37D,GADP,CAEjB,EAOE47D,GAHJ,SAAmBxR,GACf,OAAOjuC,GAAM0/C,OAAO9jD,GAAGynC,MAAM4K,GAC/B,EASE0R,GALJ,SAAsBnhD,GAClB,IAAIssC,EAAUlvC,GAAGmnC,SAASvkC,GAC1B,OAAKssC,EACE9qC,GAAM4/C,UAAU9U,GADF,CAEvB,EAOE+U,GAHJ,SAAgCrhD,GAC5B,OAAOwB,GAAM8/C,oBAAoBlkD,GAAGwnC,mBAAmB5kC,GACzD,EAUEuhD,GAA8B11C,GAK9B21C,GADsB31C,GAKtB41C,GADJ,SAAsBjX,GAAMhpC,GAAMkgD,UAAUlX,EAAI,EAY5CmX,GARJ,SAAwBl5C,GAEpBjH,GAAMogD,YADNn5C,EAAUrL,GAAGwL,SAASH,IAGtBA,EAAQ8B,gBAAkB,EAC1B9B,EAAQ+B,wBAA0B,CAAC,CAErC,EAKEq3C,GADJ,WAAuCrgD,GAAMsgD,wBAAyB,EAUlEC,GANJ,SAAwBn4C,EAAOE,GACd,MAATF,IACFxM,GAAG2P,gBAAkBjD,GAEvBtI,GAAMwgD,YAAYp4C,EAAOE,EAC3B,EAKEm4C,GADJ,SAA0BzX,EAAIsC,GAAMtrC,GAAM0gD,cAAc1X,EAAIsC,EAAI,EAO5DqV,GAHJ,WACI/kD,GAAGgL,YAAY,KACjB,EAOEg6C,GAHJ,WACIhlD,GAAGgL,YAAY,KACjB,EAOEi6C,GAHJ,SAA4BriD,EAAIpE,GAC5B4F,GAAMyI,sBAAuC,gBAAE7M,GAAG4M,QAAQhK,GAAKpE,EACjE,EAKE0mD,GADJ,SAAuB9X,GAAMhpC,GAAM+gD,WAAW/X,EAAI,EA8F9CgY,GAjBJ,SAAuBv4D,EAAGvC,EAAGkY,EAAOC,EAAQwM,EAAQtkB,EAAMukB,GACtD,GAAIlP,GAAG+L,eAAeC,SAAW,EAC/B,GAAI5H,GAAM4pC,8BACR5pC,GAAMihD,WAAWx4D,EAAGvC,EAAGkY,EAAOC,EAAQwM,EAAQtkB,EAAMukB,OAC/C,CACL,IAAIxU,EAAOkU,GAAuBjkB,GAClCyZ,GAAMihD,WAAWx4D,EAAGvC,EAAGkY,EAAOC,EAAQwM,EAAQtkB,EAAM+P,EAAMwU,GAAUL,GAA4BnU,GAClG,KANF,CASA,IAAI4qD,EAAYt2C,GAA+BrkB,EAAMskB,EAAQzM,EAAOC,EAAQyM,GACvEo2C,EAILlhD,GAAMihD,WAAWx4D,EAAGvC,EAAGkY,EAAOC,EAAQwM,EAAQtkB,EAAM26D,GAHlDtlD,GAAGgL,YAAY,KAHjB,CAOF,EAOEu6C,GAHJ,WACI,EAMAC,GADJ,SAAgCpY,EAAIsC,EAAIC,EAAIC,GAAMxrC,GAAMqhD,oBAAoBrY,EAAIsC,EAAIC,EAAIC,EAAI,EAKxF8V,GADJ,SAA2CtY,EAAIsC,EAAIC,EAAIC,EAAIW,GAAMnsC,GAAMuhD,+BAA+BvY,EAAIsC,EAAIC,EAAIC,EAAIW,EAAI,EAKtHqV,GADJ,WAAwCxhD,GAAMyhD,yBAA0B,EAOpEC,GAHJ,SAA2B3+D,EAAO4+D,GAC9B3hD,GAAM4hD,eAAe7+D,IAAS4+D,EAChC,EAOEE,GAHJ,SAA8BlX,EAASviC,EAAOE,GAC1CtI,GAAM8hD,kBAAkBlmD,GAAGunC,SAASwH,GAAUviC,EAAOE,EACvD,EAQEy5C,GAJJ,SAA+BpX,EAASviC,EAAOC,GAE3CrI,GAAM8hD,kBAAkBlmD,GAAGunC,SAASwH,GAAUviC,EADlC5X,GAAU6X,GAAS,GAEjC,EAOE25C,GAHJ,SAA8BrX,EAASviC,EAAOE,GAC1CtI,GAAMiiD,kBAAkBrmD,GAAGunC,SAASwH,GAAUviC,EAAOE,EACvD,EAQE45C,GAJJ,SAA+BvX,EAASviC,EAAOC,GAE3CrI,GAAMiiD,kBAAkBrmD,GAAGunC,SAASwH,GAAUviC,EADlCpY,GAASqY,GAAS,GAEhC,EAKE85C,GADJ,SAAoBnZ,EAAIsC,EAAIC,EAAIC,GAAMxrC,GAAMoiD,QAAQpZ,EAAIsC,EAAIC,EAAIC,EAAI,EAOhE6W,GAHJ,WACIzmD,GAAGgL,YAAY,KACjB,EASE07C,GALJ,SAAyBhd,EAAQlgC,EAAOmgC,EAAQjhD,GAC5C,IAAIkhD,EAAS5pC,GAAGypC,UAAUC,EAAQlgC,EAAOmgC,EAAQjhD,GAEjD0b,GAAMuiD,aAAa3mD,GAAGonC,QAAQsC,GAASE,EACzC,EAKEgd,GADJ,SAAwBxZ,EAAIsC,EAAIC,GAAMvrC,GAAMyiD,YAAYzZ,EAAIsC,EAAIC,EAAI,EAKhEmX,GADJ,SAAgC1Z,EAAIsC,EAAIC,EAAIC,GAAMxrC,GAAM2iD,oBAAoB3Z,EAAIsC,EAAIC,EAAIC,EAAI,EAKxFoX,GADJ,SAAwB5Z,GAAMhpC,GAAM6iD,YAAY7Z,EAAI,EAKhD8Z,GADJ,SAAgC9Z,EAAIsC,GAAMtrC,GAAM+iD,oBAAoB/Z,EAAIsC,EAAI,EAKxE0X,GADJ,SAAsBha,EAAIsC,EAAIC,GAAMvrC,GAAMijD,UAAUja,EAAIsC,EAAIC,EAAI,EAK5D2X,GADJ,SAA8Bla,EAAIsC,EAAIC,EAAIC,GAAMxrC,GAAMmjD,kBAAkBna,EAAIsC,EAAIC,EAAIC,EAAI,EAsBpF4X,GAfJ,SAAuBhpD,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ0wC,EAAQlkC,EAAQtkB,EAAMukB,GACvF,GAAIlP,GAAG+L,eAAeC,SAAW,EAE/B,GAAI5H,GAAM6pC,gCACR7pC,GAAMqjD,WAAWjpD,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ0wC,EAAQlkC,EAAQtkB,EAAMukB,QAChF,GAAIA,EAAQ,CACjB,IAAIxU,EAAOkU,GAAuBjkB,GAClCyZ,GAAMqjD,WAAWjpD,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ0wC,EAAQlkC,EAAQtkB,EAAM+P,EAAMwU,GAAUL,GAA4BnU,GACnI,MACE0J,GAAMqjD,WAAWjpD,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ0wC,EAAQlkC,EAAQtkB,EAAM,WAIzFyZ,GAAMqjD,WAAWjpD,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ0wC,EAAQlkC,EAAQtkB,EAAMukB,EAASF,GAA+BrkB,EAAMskB,EAAQzM,EAAOC,EAAQyM,GAA0B,KACtL,EAeEw4C,GAVJ,SAAuBlpD,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ4jC,EAAO8M,EAAQlkC,EAAQtkB,EAAMukB,GAC9F,GAAI9K,GAAM6pC,gCACR7pC,GAAMujD,WAAWnpD,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ4jC,EAAO8M,EAAQlkC,EAAQtkB,EAAMukB,QACvF,GAAIA,EAAQ,CACjB,IAAIxU,EAAOkU,GAAuBjkB,GAClCyZ,GAAMujD,WAAWnpD,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ4jC,EAAO8M,EAAQlkC,EAAQtkB,EAAM+P,EAAMwU,GAAUL,GAA4BnU,GAC1I,MACE0J,GAAMujD,WAAWnpD,EAAQy0C,EAAOC,EAAgB1wC,EAAOC,EAAQ4jC,EAAO8M,EAAQlkC,EAAQtkB,EAAM,KAEhG,EAKEi9D,GADJ,SAA0Bxa,EAAIsC,EAAIC,GAAMvrC,GAAMyjD,cAAcza,EAAIsC,EAAIC,EAAI,EAQpEmY,GAJJ,SAA2BtpD,EAAQgO,EAAOC,GAEtCrI,GAAMyjD,cAAcrpD,EAAQgO,EADhB5X,GAAU6X,GAAS,GAEjC,EAKEs7C,GADJ,SAA0B3a,EAAIsC,EAAIC,GAAMvrC,GAAM4jD,cAAc5a,EAAIsC,EAAIC,EAAI,EAQpEsY,GAJJ,SAA2BzpD,EAAQgO,EAAOC,GAEtCrI,GAAM4jD,cAAcxpD,EAAQgO,EADhBpY,GAASqY,GAAS,GAEhC,EAKEy7C,GADJ,SAAyB9a,EAAIsC,EAAIC,EAAIC,EAAIW,GAAMnsC,GAAM+jD,aAAa/a,EAAIsC,EAAIC,EAAIC,EAAIW,EAAI,EAKlF6X,GADJ,SAAyBhb,EAAIsC,EAAIC,EAAIC,EAAIW,EAAIC,GAAMpsC,GAAMikD,aAAajb,EAAIsC,EAAIC,EAAIC,EAAIW,EAAIC,EAAI,EAwB1F8X,GAjBJ,SAA0B9pD,EAAQy0C,EAAOQ,EAASC,EAASlxC,EAAOC,EAAQwM,EAAQtkB,EAAMukB,GACpF,GAAIlP,GAAG+L,eAAeC,SAAW,EAE/B,GAAI5H,GAAM6pC,gCACR7pC,GAAMmkD,cAAc/pD,EAAQy0C,EAAOQ,EAASC,EAASlxC,EAAOC,EAAQwM,EAAQtkB,EAAMukB,QAC7E,GAAIA,EAAQ,CACjB,IAAIxU,EAAOkU,GAAuBjkB,GAClCyZ,GAAMmkD,cAAc/pD,EAAQy0C,EAAOQ,EAASC,EAASlxC,EAAOC,EAAQwM,EAAQtkB,EAAM+P,EAAMwU,GAAUL,GAA4BnU,GAChI,MACE0J,GAAMmkD,cAAc/pD,EAAQy0C,EAAOQ,EAASC,EAASlxC,EAAOC,EAAQwM,EAAQtkB,EAAM,UARtF,CAYA,IAAI26D,EAAY,KACZp2C,IAAQo2C,EAAYt2C,GAA+BrkB,EAAMskB,EAAQzM,EAAOC,EAAQyM,IACpF9K,GAAMmkD,cAAc/pD,EAAQy0C,EAAOQ,EAASC,EAASlxC,EAAOC,EAAQwM,EAAQtkB,EAAM26D,EAHlF,CAIF,EAeEkD,GAVJ,SAA0BhqD,EAAQy0C,EAAOQ,EAASC,EAASG,EAASrxC,EAAOC,EAAQ4jC,EAAOp3B,EAAQtkB,EAAMukB,GACpG,GAAI9K,GAAM6pC,gCACR7pC,GAAMqkD,cAAcjqD,EAAQy0C,EAAOQ,EAASC,EAASG,EAASrxC,EAAOC,EAAQ4jC,EAAOp3B,EAAQtkB,EAAMukB,QAC7F,GAAIA,EAAQ,CACjB,IAAIxU,EAAOkU,GAAuBjkB,GAClCyZ,GAAMqkD,cAAcjqD,EAAQy0C,EAAOQ,EAASC,EAASG,EAASrxC,EAAOC,EAAQ4jC,EAAOp3B,EAAQtkB,EAAM+P,EAAMwU,GAAUL,GAA4BnU,GAChJ,MACE0J,GAAMqkD,cAAcjqD,EAAQy0C,EAAOQ,EAASC,EAASG,EAASrxC,EAAOC,EAAQ4jC,EAAOp3B,EAAQtkB,EAAM,KAEtG,EAYE+9D,GARJ,SAAsCr9C,EAAS7B,EAAOm/C,EAAUC,GAC5Dv9C,EAAUrL,GAAGwL,SAASH,GAEtB,IADA,IAAIw9C,EAAO,GACF3iE,EAAI,EAAGA,EAAIsjB,EAAOtjB,IACzB2iE,EAAK58D,KAAKkQ,EAAa/H,GAAUu0D,EAAa,EAAFziE,GAAO,KAErDke,GAAM0kD,0BAA0Bz9C,EAASw9C,EAAMD,EACjD,EAQEG,GAHJ,SAAsB/+D,EAAUg/D,GAC5B5kD,GAAM6kD,UAAUp7C,GAAwB7jB,GAAWg/D,EACrD,EAIEE,GAA4B,GAsB5BC,GAnBJ,SAAuBn/D,EAAUwf,EAAOriB,GAEpC,GAAI6Y,GAAG+L,eAAeC,SAAW,EAC/BxC,GAASpF,GAAMglD,WAAWv7C,GAAwB7jB,GAAW4K,GAASzN,GAAO,EAAGqiB,OADlF,CAKA,GAAIA,GAAS,IAGX,IADA,IAAIvP,EAAOivD,GAA0B1/C,EAAM,GAClCtjB,EAAI,EAAGA,EAAIsjB,IAAStjB,EAC3B+T,EAAK/T,GAAK0O,GAAWzN,EAAQ,EAAEjB,GAAK,QAIlC+T,EAAOrF,GAAQgH,SAAUzU,GAAQ,EAAIA,EAAY,EAANqiB,GAAU,GAE3DpF,GAAMglD,WAAWv7C,GAAwB7jB,GAAWiQ,EAZpD,CAaF,EAQEovD,GAHJ,SAAsBr/D,EAAUg/D,GAC5B5kD,GAAMklD,UAAUz7C,GAAwB7jB,GAAWg/D,EACrD,EAIEO,GAA0B,GAsB1BC,GAnBJ,SAAuBx/D,EAAUwf,EAAOriB,GAEpC,GAAI6Y,GAAG+L,eAAeC,SAAW,EAC/BxC,GAASpF,GAAMqlD,WAAW57C,GAAwB7jB,GAAWoK,GAAQjN,GAAO,EAAGqiB,OADjF,CAKA,GAAIA,GAAS,IAGX,IADA,IAAIvP,EAAOsvD,GAAwB//C,EAAM,GAChCtjB,EAAI,EAAGA,EAAIsjB,IAAStjB,EAC3B+T,EAAK/T,GAAKkO,GAAUjN,EAAQ,EAAEjB,GAAK,QAIjC+T,EAAO7F,GAAOwH,SAAUzU,GAAQ,EAAIA,EAAY,EAANqiB,GAAU,GAE1DpF,GAAMqlD,WAAW57C,GAAwB7jB,GAAWiQ,EAZpD,CAaF,EAOEyvD,GAHJ,SAAuB1/D,EAAUg/D,GAC7B5kD,GAAMulD,WAAW97C,GAAwB7jB,GAAWg/D,EACtD,EAOEY,GAHJ,SAAwB5/D,EAAUwf,EAAOriB,GACrCqiB,GAASpF,GAAMylD,YAAYh8C,GAAwB7jB,GAAW0K,GAASvN,GAAO,EAAGqiB,EACnF,EAQEsgD,GAHJ,SAAsB9/D,EAAUg/D,EAAIe,GAChC3lD,GAAM4lD,UAAUn8C,GAAwB7jB,GAAWg/D,EAAIe,EACzD,EA0BEE,GApBJ,SAAuBjgE,EAAUwf,EAAOriB,GAEpC,GAAI6Y,GAAG+L,eAAeC,SAAW,EAC/BxC,GAASpF,GAAM8lD,WAAWr8C,GAAwB7jB,GAAW4K,GAASzN,GAAO,EAAS,EAANqiB,OADlF,CAKA,GAAIA,GAAS,IAGX,IADA,IAAIvP,EAAOivD,GAA0B,EAAE1/C,EAAM,GACpCtjB,EAAI,EAAGA,EAAI,EAAEsjB,EAAOtjB,GAAK,EAChC+T,EAAK/T,GAAK0O,GAAWzN,EAAQ,EAAEjB,GAAK,GACpC+T,EAAK/T,EAAE,GAAK0O,GAAWzN,GAAQ,EAAEjB,EAAE,IAAK,QAItC+T,EAAOrF,GAAQgH,SAAUzU,GAAQ,EAAIA,EAAY,EAANqiB,GAAU,GAE3DpF,GAAM8lD,WAAWr8C,GAAwB7jB,GAAWiQ,EAbpD,CAcF,EAQEkwD,GAHJ,SAAsBngE,EAAUg/D,EAAIe,GAChC3lD,GAAMgmD,UAAUv8C,GAAwB7jB,GAAWg/D,EAAIe,EACzD,EA0BEM,GApBJ,SAAuBrgE,EAAUwf,EAAOriB,GAEpC,GAAI6Y,GAAG+L,eAAeC,SAAW,EAC/BxC,GAASpF,GAAMkmD,WAAWz8C,GAAwB7jB,GAAWoK,GAAQjN,GAAO,EAAS,EAANqiB,OADjF,CAKA,GAAIA,GAAS,IAGX,IADA,IAAIvP,EAAOsvD,GAAwB,EAAE//C,EAAM,GAClCtjB,EAAI,EAAGA,EAAI,EAAEsjB,EAAOtjB,GAAK,EAChC+T,EAAK/T,GAAKkO,GAAUjN,EAAQ,EAAEjB,GAAK,GACnC+T,EAAK/T,EAAE,GAAKkO,GAAUjN,GAAQ,EAAEjB,EAAE,IAAK,QAIrC+T,EAAO7F,GAAOwH,SAAUzU,GAAQ,EAAIA,EAAY,EAANqiB,GAAU,GAE1DpF,GAAMkmD,WAAWz8C,GAAwB7jB,GAAWiQ,EAbpD,CAcF,EAOEswD,GAHJ,SAAuBvgE,EAAUg/D,EAAIe,GACjC3lD,GAAMomD,WAAW38C,GAAwB7jB,GAAWg/D,EAAIe,EAC1D,EAOEU,GAHJ,SAAwBzgE,EAAUwf,EAAOriB,GACrCqiB,GAASpF,GAAMsmD,YAAY78C,GAAwB7jB,GAAW0K,GAASvN,GAAO,EAAS,EAANqiB,EACnF,EAQEmhD,GAHJ,SAAsB3gE,EAAUg/D,EAAIe,EAAIa,GACpCxmD,GAAMymD,UAAUh9C,GAAwB7jB,GAAWg/D,EAAIe,EAAIa,EAC7D,EA2BEE,GArBJ,SAAuB9gE,EAAUwf,EAAOriB,GAEpC,GAAI6Y,GAAG+L,eAAeC,SAAW,EAC/BxC,GAASpF,GAAM2mD,WAAWl9C,GAAwB7jB,GAAW4K,GAASzN,GAAO,EAAS,EAANqiB,OADlF,CAKA,GAAIA,GAAS,GAGX,IADA,IAAIvP,EAAOivD,GAA0B,EAAE1/C,EAAM,GACpCtjB,EAAI,EAAGA,EAAI,EAAEsjB,EAAOtjB,GAAK,EAChC+T,EAAK/T,GAAK0O,GAAWzN,EAAQ,EAAEjB,GAAK,GACpC+T,EAAK/T,EAAE,GAAK0O,GAAWzN,GAAQ,EAAEjB,EAAE,IAAK,GACxC+T,EAAK/T,EAAE,GAAK0O,GAAWzN,GAAQ,EAAEjB,EAAE,IAAK,QAItC+T,EAAOrF,GAAQgH,SAAUzU,GAAQ,EAAIA,EAAY,GAANqiB,GAAW,GAE5DpF,GAAM2mD,WAAWl9C,GAAwB7jB,GAAWiQ,EAdpD,CAeF,EAQE+wD,GAHJ,SAAsBhhE,EAAUg/D,EAAIe,EAAIa,GACpCxmD,GAAM6mD,UAAUp9C,GAAwB7jB,GAAWg/D,EAAIe,EAAIa,EAC7D,EA2BEM,GArBJ,SAAuBlhE,EAAUwf,EAAOriB,GAEpC,GAAI6Y,GAAG+L,eAAeC,SAAW,EAC/BxC,GAASpF,GAAM+mD,WAAWt9C,GAAwB7jB,GAAWoK,GAAQjN,GAAO,EAAS,EAANqiB,OADjF,CAKA,GAAIA,GAAS,GAGX,IADA,IAAIvP,EAAOsvD,GAAwB,EAAE//C,EAAM,GAClCtjB,EAAI,EAAGA,EAAI,EAAEsjB,EAAOtjB,GAAK,EAChC+T,EAAK/T,GAAKkO,GAAUjN,EAAQ,EAAEjB,GAAK,GACnC+T,EAAK/T,EAAE,GAAKkO,GAAUjN,GAAQ,EAAEjB,EAAE,IAAK,GACvC+T,EAAK/T,EAAE,GAAKkO,GAAUjN,GAAQ,EAAEjB,EAAE,IAAK,QAIrC+T,EAAO7F,GAAOwH,SAAUzU,GAAQ,EAAIA,EAAY,GAANqiB,GAAW,GAE3DpF,GAAM+mD,WAAWt9C,GAAwB7jB,GAAWiQ,EAdpD,CAeF,EAOEmxD,GAHJ,SAAuBphE,EAAUg/D,EAAIe,EAAIa,GACrCxmD,GAAMinD,WAAWx9C,GAAwB7jB,GAAWg/D,EAAIe,EAAIa,EAC9D,EAOEU,GAHJ,SAAwBthE,EAAUwf,EAAOriB,GACrCqiB,GAASpF,GAAMmnD,YAAY19C,GAAwB7jB,GAAW0K,GAASvN,GAAO,EAAS,EAANqiB,EACnF,EAQEgiD,GAHJ,SAAsBxhE,EAAUg/D,EAAIe,EAAIa,EAAIa,GACxCrnD,GAAMsnD,UAAU79C,GAAwB7jB,GAAWg/D,EAAIe,EAAIa,EAAIa,EACjE,EAgCEE,GA1BJ,SAAuB3hE,EAAUwf,EAAOriB,GAEpC,GAAI6Y,GAAG+L,eAAeC,SAAW,EAC/BxC,GAASpF,GAAMwnD,WAAW/9C,GAAwB7jB,GAAW4K,GAASzN,GAAO,EAAS,EAANqiB,OADlF,CAKA,GAAIA,GAAS,GAAI,CAEf,IAAIvP,EAAOivD,GAA0B,EAAE1/C,EAAM,GAEzC9O,EAAO9F,GACXzN,IAAU,EACV,IAAK,IAAIjB,EAAI,EAAGA,EAAI,EAAIsjB,EAAOtjB,GAAK,EAAG,CACrC,IAAIo/B,EAAMn+B,EAAQjB,EAClB+T,EAAK/T,GAAKwU,EAAK4qB,GACfrrB,EAAK/T,EAAI,GAAKwU,EAAK4qB,EAAM,GACzBrrB,EAAK/T,EAAI,GAAKwU,EAAK4qB,EAAM,GACzBrrB,EAAK/T,EAAI,GAAKwU,EAAK4qB,EAAM,EAC3B,CACF,MAEMrrB,EAAOrF,GAAQgH,SAAUzU,GAAQ,EAAIA,EAAY,GAANqiB,GAAW,GAE5DpF,GAAMwnD,WAAW/9C,GAAwB7jB,GAAWiQ,EAnBpD,CAoBF,EAQE4xD,GAHJ,SAAsB7hE,EAAUg/D,EAAIe,EAAIa,EAAIa,GACxCrnD,GAAM0nD,UAAUj+C,GAAwB7jB,GAAWg/D,EAAIe,EAAIa,EAAIa,EACjE,EA4BEM,GAtBJ,SAAuB/hE,EAAUwf,EAAOriB,GAEpC,GAAI6Y,GAAG+L,eAAeC,SAAW,EAC/BxC,GAASpF,GAAM4nD,WAAWn+C,GAAwB7jB,GAAWoK,GAAQjN,GAAO,EAAS,EAANqiB,OADjF,CAKA,GAAIA,GAAS,GAGX,IADA,IAAIvP,EAAOsvD,GAAwB,EAAE//C,EAAM,GAClCtjB,EAAI,EAAGA,EAAI,EAAEsjB,EAAOtjB,GAAK,EAChC+T,EAAK/T,GAAKkO,GAAUjN,EAAQ,EAAEjB,GAAK,GACnC+T,EAAK/T,EAAE,GAAKkO,GAAUjN,GAAQ,EAAEjB,EAAE,IAAK,GACvC+T,EAAK/T,EAAE,GAAKkO,GAAUjN,GAAQ,EAAEjB,EAAE,IAAK,GACvC+T,EAAK/T,EAAE,GAAKkO,GAAUjN,GAAQ,EAAEjB,EAAE,KAAM,QAItC+T,EAAO7F,GAAOwH,SAAUzU,GAAQ,EAAIA,EAAY,GAANqiB,GAAW,GAE3DpF,GAAM4nD,WAAWn+C,GAAwB7jB,GAAWiQ,EAfpD,CAgBF,EAOEgyD,GAHJ,SAAuBjiE,EAAUg/D,EAAIe,EAAIa,EAAIa,GACzCrnD,GAAM8nD,WAAWr+C,GAAwB7jB,GAAWg/D,EAAIe,EAAIa,EAAIa,EAClE,EAOEU,GAHJ,SAAwBniE,EAAUwf,EAAOriB,GACrCqiB,GAASpF,GAAMgoD,YAAYv+C,GAAwB7jB,GAAW0K,GAASvN,GAAO,EAAS,EAANqiB,EACnF,EASE6iD,GALJ,SAAgChhD,EAASswC,EAAmB2Q,GAGxDloD,GAAMkoD,oBAFNjhD,EAAUrL,GAAGwL,SAASH,GAEaswC,EAAmB2Q,EACxD,EA4BEC,GAtBJ,SAA6BviE,EAAUwf,EAAOgjD,EAAWrlE,GAErD,GAAI6Y,GAAG+L,eAAeC,SAAW,EAC/BxC,GAASpF,GAAMqoD,iBAAiB5+C,GAAwB7jB,KAAawiE,EAAW53D,GAASzN,GAAO,EAAS,EAANqiB,OADrG,CAKA,GAAIA,GAAS,GAGX,IADA,IAAIvP,EAAOivD,GAA0B,EAAE1/C,EAAM,GACpCtjB,EAAI,EAAGA,EAAI,EAAEsjB,EAAOtjB,GAAK,EAChC+T,EAAK/T,GAAK0O,GAAWzN,EAAQ,EAAEjB,GAAK,GACpC+T,EAAK/T,EAAE,GAAK0O,GAAWzN,GAAQ,EAAEjB,EAAE,IAAK,GACxC+T,EAAK/T,EAAE,GAAK0O,GAAWzN,GAAQ,EAAEjB,EAAE,IAAK,GACxC+T,EAAK/T,EAAE,GAAK0O,GAAWzN,GAAQ,EAAEjB,EAAE,KAAM,QAIvC+T,EAAOrF,GAAQgH,SAAUzU,GAAQ,EAAIA,EAAY,GAANqiB,GAAW,GAE5DpF,GAAMqoD,iBAAiB5+C,GAAwB7jB,KAAawiE,EAAWvyD,EAfvE,CAgBF,EAOEyyD,GAHJ,SAA+B1iE,EAAUwf,EAAOgjD,EAAWrlE,GACvDqiB,GAASpF,GAAMuoD,mBAAmB9+C,GAAwB7jB,KAAawiE,EAAW53D,GAASzN,GAAO,EAAS,EAANqiB,EACvG,EAOEojD,GAHJ,SAA+B5iE,EAAUwf,EAAOgjD,EAAWrlE,GACvDqiB,GAASpF,GAAMyoD,mBAAmBh/C,GAAwB7jB,KAAawiE,EAAW53D,GAASzN,GAAO,EAAS,EAANqiB,EACvG,EAiCEsjD,GA3BJ,SAA6B9iE,EAAUwf,EAAOgjD,EAAWrlE,GAErD,GAAI6Y,GAAG+L,eAAeC,SAAW,EAC/BxC,GAASpF,GAAM2oD,iBAAiBl/C,GAAwB7jB,KAAawiE,EAAW53D,GAASzN,GAAO,EAAS,EAANqiB,OADrG,CAKA,GAAIA,GAAS,GAGX,IADA,IAAIvP,EAAOivD,GAA0B,EAAE1/C,EAAM,GACpCtjB,EAAI,EAAGA,EAAI,EAAEsjB,EAAOtjB,GAAK,EAChC+T,EAAK/T,GAAK0O,GAAWzN,EAAQ,EAAEjB,GAAK,GACpC+T,EAAK/T,EAAE,GAAK0O,GAAWzN,GAAQ,EAAEjB,EAAE,IAAK,GACxC+T,EAAK/T,EAAE,GAAK0O,GAAWzN,GAAQ,EAAEjB,EAAE,IAAK,GACxC+T,EAAK/T,EAAE,GAAK0O,GAAWzN,GAAQ,EAAEjB,EAAE,KAAM,GACzC+T,EAAK/T,EAAE,GAAK0O,GAAWzN,GAAQ,EAAEjB,EAAE,KAAM,GACzC+T,EAAK/T,EAAE,GAAK0O,GAAWzN,GAAQ,EAAEjB,EAAE,KAAM,GACzC+T,EAAK/T,EAAE,GAAK0O,GAAWzN,GAAQ,EAAEjB,EAAE,KAAM,GACzC+T,EAAK/T,EAAE,GAAK0O,GAAWzN,GAAQ,EAAEjB,EAAE,KAAM,GACzC+T,EAAK/T,EAAE,GAAK0O,GAAWzN,GAAQ,EAAEjB,EAAE,KAAM,QAIvC+T,EAAOrF,GAAQgH,SAAUzU,GAAQ,EAAIA,EAAY,GAANqiB,GAAW,GAE5DpF,GAAM2oD,iBAAiBl/C,GAAwB7jB,KAAawiE,EAAWvyD,EApBvE,CAqBF,EAOE+yD,GAHJ,SAA+BhjE,EAAUwf,EAAOgjD,EAAWrlE,GACvDqiB,GAASpF,GAAM6oD,mBAAmBp/C,GAAwB7jB,KAAawiE,EAAW53D,GAASzN,GAAO,EAAS,EAANqiB,EACvG,EAOE0jD,GAHJ,SAA+BljE,EAAUwf,EAAOgjD,EAAWrlE,GACvDqiB,GAASpF,GAAM+oD,mBAAmBt/C,GAAwB7jB,KAAawiE,EAAW53D,GAASzN,GAAO,EAAS,GAANqiB,EACvG,EA4CE4jD,GAtCJ,SAA6BpjE,EAAUwf,EAAOgjD,EAAWrlE,GAErD,GAAI6Y,GAAG+L,eAAeC,SAAW,EAC/BxC,GAASpF,GAAMipD,iBAAiBx/C,GAAwB7jB,KAAawiE,EAAW53D,GAASzN,GAAO,EAAS,GAANqiB,OADrG,CAKA,GAAIA,GAAS,GAAI,CAEf,IAAIvP,EAAOivD,GAA0B,GAAG1/C,EAAM,GAE1C9O,EAAO9F,GACXzN,IAAU,EACV,IAAK,IAAIjB,EAAI,EAAGA,EAAI,GAAKsjB,EAAOtjB,GAAK,GAAI,CACvC,IAAIo/B,EAAMn+B,EAAQjB,EAClB+T,EAAK/T,GAAKwU,EAAK4qB,GACfrrB,EAAK/T,EAAI,GAAKwU,EAAK4qB,EAAM,GACzBrrB,EAAK/T,EAAI,GAAKwU,EAAK4qB,EAAM,GACzBrrB,EAAK/T,EAAI,GAAKwU,EAAK4qB,EAAM,GACzBrrB,EAAK/T,EAAI,GAAKwU,EAAK4qB,EAAM,GACzBrrB,EAAK/T,EAAI,GAAKwU,EAAK4qB,EAAM,GACzBrrB,EAAK/T,EAAI,GAAKwU,EAAK4qB,EAAM,GACzBrrB,EAAK/T,EAAI,GAAKwU,EAAK4qB,EAAM,GACzBrrB,EAAK/T,EAAI,GAAKwU,EAAK4qB,EAAM,GACzBrrB,EAAK/T,EAAI,GAAKwU,EAAK4qB,EAAM,GACzBrrB,EAAK/T,EAAI,IAAMwU,EAAK4qB,EAAM,IAC1BrrB,EAAK/T,EAAI,IAAMwU,EAAK4qB,EAAM,IAC1BrrB,EAAK/T,EAAI,IAAMwU,EAAK4qB,EAAM,IAC1BrrB,EAAK/T,EAAI,IAAMwU,EAAK4qB,EAAM,IAC1BrrB,EAAK/T,EAAI,IAAMwU,EAAK4qB,EAAM,IAC1BrrB,EAAK/T,EAAI,IAAMwU,EAAK4qB,EAAM,GAC5B,CACF,MAEMrrB,EAAOrF,GAAQgH,SAAUzU,GAAQ,EAAIA,EAAY,GAANqiB,GAAW,GAE5DpF,GAAMipD,iBAAiBx/C,GAAwB7jB,KAAawiE,EAAWvyD,EA/BvE,CAgCF,EAOEqzD,GAHJ,SAA+BtjE,EAAUwf,EAAOgjD,EAAWrlE,GACvDqiB,GAASpF,GAAMmpD,mBAAmB1/C,GAAwB7jB,KAAawiE,EAAW53D,GAASzN,GAAO,EAAS,EAANqiB,EACvG,EAOEgkD,GAHJ,SAA+BxjE,EAAUwf,EAAOgjD,EAAWrlE,GACvDqiB,GAASpF,GAAMqpD,mBAAmB5/C,GAAwB7jB,KAAawiE,EAAW53D,GAASzN,GAAO,EAAS,GAANqiB,EACvG,EAWEkkD,GAPJ,SAAuBriD,GAEnBjH,GAAMupD,WADNtiD,EAAUrL,GAAGwL,SAASH,IAItBjH,GAAM0J,eAAiBzC,CACzB,EAOEuiD,GAHJ,SAA4BviD,GACxBjH,GAAMypD,gBAAgB7tD,GAAGwL,SAASH,GACpC,EAKEyiD,GADJ,SAA2B1gB,EAAIsC,GAAMtrC,GAAM2pD,eAAe3gB,EAAIsC,EAAI,EAQ9Dse,GAJJ,SAA4BtlD,EAAOve,GAE/Bia,GAAM2pD,eAAerlD,EAAO9T,GAAQzK,GAAG,GACzC,EAKE8jE,GADJ,SAA2B7gB,EAAIsC,EAAIC,GAAMvrC,GAAM8pD,eAAe9gB,EAAIsC,EAAIC,EAAI,EAQtEwe,GAJJ,SAA4BzlD,EAAOve,GAE/Bia,GAAM8pD,eAAexlD,EAAO9T,GAAQzK,GAAG,GAAIyK,GAAQzK,EAAE,GAAG,GAC1D,EAKEikE,GADJ,SAA2BhhB,EAAIsC,EAAIC,EAAIC,GAAMxrC,GAAMiqD,eAAejhB,EAAIsC,EAAIC,EAAIC,EAAI,EAQ9E0e,GAJJ,SAA4B5lD,EAAOve,GAE/Bia,GAAMiqD,eAAe3lD,EAAO9T,GAAQzK,GAAG,GAAIyK,GAAQzK,EAAE,GAAG,GAAIyK,GAAQzK,EAAE,GAAG,GAC3E,EAKEokE,GADJ,SAA2BnhB,EAAIsC,EAAIC,EAAIC,EAAIW,GAAMnsC,GAAMoqD,eAAephB,EAAIsC,EAAIC,EAAIC,EAAIW,EAAI,EAQtFke,GAJJ,SAA4B/lD,EAAOve,GAE/Bia,GAAMoqD,eAAe9lD,EAAO9T,GAAQzK,GAAG,GAAIyK,GAAQzK,EAAE,GAAG,GAAIyK,GAAQzK,EAAE,GAAG,GAAIyK,GAAQzK,EAAE,IAAI,GAC7F,EAOEukE,GAAoC9+C,GAKpC++C,GAD8B/+C,GAM9Bg/C,GAD4Bh/C,GAM5Bi/C,GAD4Bj/C,GAM5Bk/C,GAD2Bl/C,GAK3Bm/C,GADJ,SAA4B3hB,EAAIsC,EAAIC,EAAIC,EAAIW,GAAMnsC,GAAM4qD,gBAAgB5hB,EAAIsC,EAAIC,EAAIC,EAAIW,EAAI,EAOxF0e,GAHJ,SAA6BvmD,EAAOve,GAChCia,GAAM4qD,gBAAgBtmD,EAAOtU,GAAOjK,GAAG,GAAIiK,GAAOjK,EAAE,GAAG,GAAIiK,GAAOjK,EAAE,GAAG,GAAIiK,GAAOjK,EAAE,IAAI,GAC1F,EAKE+kE,GADJ,SAA6B9hB,EAAIsC,EAAIC,EAAIC,EAAIW,GAAMnsC,GAAM+qD,iBAAiB/hB,EAAIsC,EAAIC,EAAIC,EAAIW,EAAI,EAO1F6e,GAHJ,SAA8B1mD,EAAOve,GACjCia,GAAM+qD,iBAAiBzmD,EAAOhU,GAAQvK,GAAG,GAAIuK,GAAQvK,EAAE,GAAG,GAAIuK,GAAQvK,EAAE,GAAG,GAAIuK,GAAQvK,EAAE,IAAI,GAC/F,EAOEklE,GAHJ,SAAiC3mD,EAAOtL,EAAMzS,EAAMk/C,EAAQ7xC,GACxDoM,GAAMkrD,qBAAqB5mD,EAAOtL,EAAMzS,EAAMk/C,EAAQ7xC,EACxD,EAqBEu3D,GAjBJ,SAAgC7mD,EAAOtL,EAAMzS,EAAMw/C,EAAYN,EAAQ7xC,GACnE,IAAIwiB,EAAKxa,GAAG+L,eAAeqC,cAAc1F,GACzC,IAAKtE,GAAMgmC,0BAUT,OATA5vB,EAAGpd,KAAOA,EACVod,EAAG7vB,KAAOA,EACV6vB,EAAG2vB,WAAaA,EAChB3vB,EAAGqvB,OAASA,EACZrvB,EAAGxiB,IAAMA,EACTwiB,EAAGyvB,YAAa,OAChBzvB,EAAG0vB,2BAA6B,SAASxhC,EAAOtL,EAAMzS,EAAMw/C,EAAYN,EAAQ7xC,GAC9ErM,KAAK6jE,oBAAoB9mD,EAAOtL,EAAMzS,EAAMw/C,EAAYN,EAAQ7xC,EAClE,GAGFwiB,EAAGyvB,YAAa,EAChB7lC,GAAMorD,oBAAoB9mD,EAAOtL,EAAMzS,IAAQw/C,EAAYN,EAAQ7xC,EACrE,EAKEy3D,GADJ,SAAqBriB,EAAIsC,EAAIC,EAAIC,GAAMxrC,GAAMC,SAAS+oC,EAAIsC,EAAIC,EAAIC,EAAI,EASlE8f,GALJ,SAAqBrd,EAAMzkB,EAAO0kB,EAAaC,GAE3C,IAAIzxC,EAAUqI,EAAoBmpC,EAAaC,GAC/CnuC,GAAMurD,SAAS3vD,GAAGynC,MAAM4K,GAAOzkB,EAAO9sB,EACxC,EAwvBF8T,GAAkBg7C,SAAU,EAE5B,IAAIt6C,GAAM,CAAC,EAqMPwB,GAAkB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAEpDC,GAAqB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAiXvDjC,GAAW,CAAC+6C,sBAAsB,SAASj5D,GACzC,IAAIk5D,EAAmB,CAAC,WAAW,UAAU,iBAAiB,eAAe,sBAAsB,uBAAuB,wBAAwB,wBAAwB,2BAA2B,4BAA4B,mBAAmB,kBAAkB,uBAAuB,4BAA4B,4BAA4B,yBAAyB,yBAC9W,IAAK,IAAIjjE,KAAK+J,GACZ,SAAU/J,GACR,IAAIkjE,EAAWn5D,EAAQ/J,GAEA,mBAAZkjE,IACcA,EAASH,SACTE,EAAiBhkE,QAAQe,IAAM,GAC/BA,EAAEsJ,WAAW,eAEvC,CARD,CAQGtJ,EAEP,EAAEmjE,sBAAsB,SAAShqE,GAC/B,IAAIqX,EAAM,CAAC,EACX,IAAK,IAAIxQ,KAAK7G,GACZ,SAAU6G,GACR,IAAIkjE,EAAW/pE,EAAQ6G,GAErBwQ,EAAIxQ,GADiB,mBAAZkjE,EACA,WACPj7C,GAASm7C,gBAAgBhkE,KAAKY,GAC9B,IACE,OAAOkjE,EAAS73D,MAAM,KAAM1N,UAC9B,CAAC,QACMoL,KAEHpC,EADQshB,GAASm7C,gBAAgB9gC,QACpBtiC,GACbioB,GAASo7C,kBAEb,CACF,EAESH,CAEZ,CAlBD,CAkBGljE,GAEL,OAAOwQ,CACT,EAAE8yD,MAAM,CAACC,OAAO,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,GAAGvhE,MAAM,EAAEwhE,UAAU,KAAKC,SAAS,KAAKC,uBAAuB,EAAET,gBAAgB,GAAGU,kBAAkB,CAAC,EAAEC,kBAAkB,CAAC,EAAEC,YAAY,EAAEC,qBAAqB,KAAKC,eAAe,GAAGC,eAAe,SAAS5lD,GACjQ,IAAIxI,EAAKkS,GAAS67C,kBAAkBvlD,GAMpC,YALW7X,IAAPqP,IACFA,EAAKkS,GAAS+7C,cACd/7C,GAAS67C,kBAAkBvlD,GAAYxI,EACvCkS,GAAS87C,kBAAkBhuD,GAAMwI,GAE5BxI,CACT,EAAEstD,gBAAgB,WACZp7C,GAAS27C,UACT37C,GAAS9lB,QAAU8lB,GAASq7C,MAAME,WACE,IAApCv7C,GAASm7C,gBAAgBvnE,SAM3BosB,GAAS9lB,MAAQ8lB,GAASq7C,MAAMC,OAGhCh3C,GAAmB63C,IACE,oBAAVC,QACTA,OAAOC,aAGb,EAAEC,SAAS,WACT,OAAO,IAAI3/D,SAAQ,CAACE,EAASkpB,KAC3B/F,GAASg8C,qBAAuB,CAC9Bn/D,QAASA,EACTkpB,OAAQA,EACT,GAEL,EAAEw2C,aAAa,WASb,IAAIr5D,EAAMsF,GAAQ,GAAKwX,GAAS07C,WAGhC,OAFA17C,GAASw8C,cAAct5D,EAAKA,EAAM,GAAI8c,GAAS07C,WAC/C17C,GAASy8C,kBAAkBv5D,GACpBA,CACT,EAAEs5D,cAAc,SAASt5D,EAAKsJ,EAAOkwD,GACnCp9D,GAAS4D,GAAM,GAAMsJ,EACrBlN,GAAU4D,EAAM,GAAK,GAAMsJ,EAAQkwD,CACrC,EAAED,kBAAkB,SAASv5D,GAC3B,IACIy5D,EAAW38C,GAASk8C,eADAl8C,GAASm7C,gBAAgB,IAEjD77D,GAAU4D,EAAM,GAAK,GAAMy5D,CAC7B,EAAEC,kBAAkB,SAAS15D,GAI3B,OADWjE,GAAY,IADZ+gB,GAAS87C,kBADXx8D,GAAU4D,EAAM,GAAK,IAIhC,EAAE25D,SAAS,SAAS35D,GAKlB,OAJY8c,GAAS48C,kBAAkB15D,EAIhCqH,EACT,EAAE0V,YAAY,SAAS68C,GACrB,IAAIh8D,GAAJ,CACA,GAAIkf,GAAS9lB,QAAU8lB,GAASq7C,MAAMC,OAAQ,CAK5C,IAAIyB,GAAkB,EAClBC,GAAuB,EAC3BF,GAAW,CAAClB,EAAyB,KACnC,IAAI96D,KACJkf,GAAS47C,uBAAyBA,EAClCmB,GAAkB,EACbC,GAAL,CAIAh9C,GAAS9lB,MAAQ8lB,GAASq7C,MAAMG,UAChCl3C,IAAmB,IAAM24C,GAAuBj9C,GAAS27C,iBACnC,IAAXjzD,IAA0BA,GAAQC,SAASG,MACpDJ,GAAQC,SAASwlB,SAEnB,IAAI+uC,EAAsBC,GAAU,EACpC,IACED,EAAuBl9C,GAAS68C,SAAS78C,GAAS27C,SACpD,CAAE,MAAO96D,GACPq8D,EAAuBr8D,EACvBs8D,GAAU,CACZ,CAEA,IAAIl+B,GAAU,EACd,IAAKjf,GAAS27C,SAAU,CAatB,IAAIK,EAAuBh8C,GAASg8C,qBAChCA,IACFh8C,GAASg8C,qBAAuB,MAC/BmB,EAAUnB,EAAqBj2C,OAASi2C,EAAqBn/D,SAASqgE,GACvEj+B,GAAU,EAEd,CACA,GAAIk+B,IAAYl+B,EAId,MAAMi+B,CAvCR,CAwCA,IAEFF,GAAuB,EAClBD,IAEH/8C,GAAS9lB,MAAQ8lB,GAASq7C,MAAME,UAEhCv7C,GAAS27C,SAAW37C,GAASu8C,oBACP,IAAX7zD,IAA0BA,GAAQC,SAASG,MACpDJ,GAAQC,SAAS8hC,QAEnBnmB,IAAmB,IAAM84C,GAAuBp9C,GAAS27C,YAE7D,MAAW37C,GAAS9lB,QAAU8lB,GAASq7C,MAAMG,WAE3Cx7C,GAAS9lB,MAAQ8lB,GAASq7C,MAAMC,OAChCh3C,GAAmB+4C,IACnBC,GAAMt9C,GAAS27C,UACf37C,GAAS27C,SAAW,KAEpB37C,GAASi8C,eAAevhE,SAASoO,GAAS8C,EAAiB9C,MAE3DjK,EAAM,kBAAoBmhB,GAAS9lB,OAErC,OAAO8lB,GAAS47C,sBA/EC,CAgFnB,EAAE2B,YAAY,SAAST,GACrB,OAAO98C,GAASC,aAAaC,IAE3B48C,IAAalgE,KAAKsjB,EAAO,GAE7B,GAGAshB,GAA6B,SAASnM,EAAQ1jC,EAAMY,EAAM6hC,GACvDiB,IACHA,EAASx+B,MAEXA,KAAKw+B,OAASA,EACdx+B,KAAKo2B,MAAQoI,EAAOpI,MACpBp2B,KAAKgqC,QAAU,KACfhqC,KAAKiX,GAAK6W,GAAGub,YACbrpC,KAAKlF,KAAOA,EACZkF,KAAKtE,KAAOA,EACZsE,KAAK4+B,SAAW,CAAC,EACjB5+B,KAAKo9B,WAAa,CAAC,EACnBp9B,KAAKu9B,KAAOA,CACd,EACIopC,GAAW,IACXC,GAAY,IAChB3rE,OAAOoM,iBAAiBsjC,GAAOxuC,UAAW,CACzCwhC,KAAM,CACLviC,IAAyB,WACxB,OAAQ4E,KAAKtE,KAAOirE,MAAcA,EACnC,EACAx/D,IAAyB,SAASgmB,GACjCA,EAAMntB,KAAKtE,MAAQirE,GAAW3mE,KAAKtE,OAAQ,GAC5C,GAEDqiC,MAAO,CACN3iC,IAAyB,WACxB,OAAQ4E,KAAKtE,KAAOkrE,MAAeA,EACpC,EACAz/D,IAAyB,SAASgmB,GACjCA,EAAMntB,KAAKtE,MAAQkrE,GAAY5mE,KAAKtE,OAAQ,GAC7C,GAEDq1C,SAAU,CACT31C,IAAyB,WACxB,OAAO0yB,GAAG+R,MAAM7/B,KAAKtE,KACtB,GAEDo1C,SAAU,CACT11C,IAAyB,WACxB,OAAO0yB,GAAGoS,SAASlgC,KAAKtE,KACzB,KAGFoyB,GAAG6c,OAASA,GACZ7c,GAAGiiB,aAAa3nC,GAAsB,cAAI0lB,GAAGqa,WAAW//B,GAA0B,kBAAI0lB,GAAG6iB,eAAevoC,GAA+B,uBAAI0lB,GAAGwkB,oBAAoBlqC,GAAkB,UAAI0lB,GAAGmR,OAAO72B,GAA0B,kBAAI0lB,GAAGkjB,eAAe5oC,GAAwB,gBAAI0lB,GAAG2hB,aAG7QrnC,GAA0B,kBAAI,SAAkCgvC,EAAaC,GAAgBxlC,GAAQoK,kBAAkBm7B,EAAaC,EAAc,EAClJjvC,GAA8B,sBAAI,SAAsC6J,GAAQJ,GAAQpL,sBAAsBwL,EAAM,EACpH7J,GAAsB,cAAI,SAA8ByO,EAAOC,EAAQ8iC,GAAa/nC,GAAQ8nC,cAAc9iC,EAAOC,EAAQ8iC,EAAW,EACpIxxC,GAAsB,cAAI,WAAkCyJ,GAAQC,SAAS8hC,OAAQ,EACrFxrC,GAAuB,eAAI,WAAmCyJ,GAAQC,SAASwlB,QAAS,EACxFlvB,GAAqB,aAAI,WAAiCyJ,GAAQilB,cAAe,EACjF1uB,GAAsB,cAAI,SAA8B2O,EAAQw/B,EAAUC,EAAaC,GAA0B,OAAO5kC,GAAQykC,cAAcv/B,EAAQw/B,EAAUC,EAAaC,EAAwB,EAI3M,IAHM,IAEFh+B,GAFM88B,GAAkB,CAAC,EACnBI,GAAkB,CAAC,EAEpBp7C,GAAI,EAAGA,GAAI,KAAMA,GAAG4jB,GAAqB7d,KAAK,IAAIc,MAAM7G,KACjE,IAAIssE,GAAmC,IAAI39D,aAAa,KACtD,IAAkC3O,GAAI,EAAGA,GAAI,MAAOA,GACpDgjE,GAA0BhjE,IAAKssE,GAAiC52D,SAAS,EAAG1V,GAAE,GAGhF,IAAIusE,GAAiC,IAAIp+D,WAAW,KAClD,IAAkCnO,GAAI,EAAGA,GAAI,MAAOA,GACpDqjE,GAAwBrjE,IAAKusE,GAA+B72D,SAAS,EAAG1V,GAAE,GAc1C,mBAARwsE,MAAqBA,KAA/C,IAwzBIl5C,GA7vBAm5C,GAAc,CAChB,YAxpUA,SAAsB36D,EAAKrN,EAAMuO,GAM7B,MALW,IAAIL,EAAcb,GAExB3O,KAAKsB,EAAMuO,GACAlB,CAGlB,EAkpUF,gBA3oOA,SAA0BopB,EAAM/5B,GAChC,IAII,OAFA+5B,EAAOsd,GAASU,OAAOhe,GACvB3H,GAAGoW,MAAMzO,EAAM/5B,GACR,CACT,CAAE,MAAOgF,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CACA,EAkoOA,iBAhoOA,SAA2BM,EAAInwC,GAC/B,IAGI,OADAoyB,GAAGigB,OAAOlC,EAAInwC,GACP,CACT,CAAE,MAAOgF,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CACA,EAwnOA,kBAjnOA,SAA4BM,EAAIkD,EAAKyE,GACrCT,GAASS,QAAUA,EACnB,IAEI,IAAI7b,EAASob,GAASK,gBAAgBvH,GACtC,OAAQkD,GACN,KAAK,EAEH,OADI37B,EAAM2/B,GAAS33C,OACT,GACA,GAGE0yB,GAAGie,aAAapU,EAAQvkB,GACnBy4B,GAEnB,KAAK,EACL,KAAK,EAkBL,KAAK,EACL,KAAK,EAKH,OAAO,EAtBT,KAAK,EACH,OAAOlU,EAAOsK,MAChB,KAAK,EACH,IAAI7uB,EAAM2/B,GAAS33C,MAEnB,OADAu8B,EAAOsK,OAAS7uB,EACT,EAET,KAAK,EAOH,OAJIA,EAAM2/B,GAAS33C,MAGnBmN,GAAU6K,EAFG,GAEa,GAAM,EACzB,EAST,KAAK,GACL,KAAK,EAML,QACE,OAAQ,GALV,KAAK,EAGH,OApDU5X,EAmDD,GAlDbiN,GAASw+D,MAAsB,GAAMzrE,GAmDzB,EAKd,CAAE,MAAOkF,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CA5DA,IAAkB/vC,CA6DlB,EA0jOA,kBAxjOA,SAA4BqwC,EAAIr2B,GAChC,IAEI,IAAImiB,EAASob,GAASK,gBAAgBvH,GACtC,OAAOkH,GAASM,OAAOvlB,GAAGyV,KAAM5L,EAAOlC,KAAMjgB,EAC/C,CAAE,MAAO9U,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CACA,EAgjOA,sBAviOA,SAAgCM,EAAIq7B,EAAYC,GAChD,IAEI,IAAIpqE,EAAS0T,EAA2By2D,EAAYC,GAAc,OAAIC,MAAMrqE,IAAiB,IAC7F+wB,GAAGsgB,UAAUvC,EAAI9uC,GACV,EACT,CAAE,MAAO2D,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CACA,EA8hOA,iBAvhOA,SAA2B/1B,EAAK/D,GAChC,IAEI,GAAa,IAATA,EAAY,OAAQ,GACxB,IAAIuqB,EAAMlO,GAAGkO,MACTqrC,EAAmB34D,EAAgBstB,GAAO,EAC9C,OAAIvqB,EAAO41D,GAA0B,IACrCx2D,EAAamrB,EAAKxmB,EAAK/D,GAChB41D,EACT,CAAE,MAAO3mE,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CACA,EA2gOA,qBAxgOA,SAA+BM,EAAIy7B,EAAMzpD,GACzC,IAEI,IAAI8Z,EAASob,GAASK,gBAAgBvH,GACjClU,EAAO8W,WACV9W,EAAO8W,SAAW3gB,GAAGqR,QAAQxH,EAAOlC,OAStC,IANA,IAAI8xC,EAAc,IACd5hC,EAAM,EACNrY,EAAMQ,GAAGuR,OAAO1H,EAAQ,EAAG,GAE3B/nB,EAAM9C,KAAKE,MAAMsgB,EAAMi6C,GAEpB33D,EAAM+nB,EAAO8W,SAAS1xC,QAAU4oC,EAAM4hC,GAAe1pD,GAAO,CACjE,IAAI5G,EACAjY,EACAlE,EAAO68B,EAAO8W,SAAS7+B,GAC3B,GAAa,MAAT9U,EACFmc,EAAK0gB,EAAO2F,KAAKrmB,GACjBjY,EAAO,OAEJ,GAAa,OAATlE,EAEPmc,EADa6W,GAAGgW,WAAWnM,EAAOlC,KAAM,CAAE+I,QAAQ,IACtClB,KAAKrmB,GACjBjY,EAAO,MAEJ,CACH,IAAIwoE,EAAQ15C,GAAG2T,WAAW9J,EAAO2F,KAAMxiC,GACvCmc,EAAKuwD,EAAMvwD,GACXjY,EAAO8uB,GAAGoS,SAASsnC,EAAM9rE,MAAQ,EAC1BoyB,GAAG+R,MAAM2nC,EAAM9rE,MAAQ,EACvBoyB,GAAGmS,OAAOunC,EAAM9rE,MAAQ,GACxB,CACT,CACCkR,GAAU,CAACqK,IAAK,GAAGpK,GAAWoK,GAAMnK,KAAKC,IAAIF,KAAiB,EAAOA,GAAa,GAASC,KAAKE,MAAOH,GAAY,cAAkB,KAAWC,KAAKG,MAAMJ,OAAoBA,KAAgB,IAAI,cAAoB,EAAK,IAAKpE,GAAS6+D,EAAO3hC,GAAM,GAAM/4B,GAAQ,GAAGnE,GAAU6+D,EAAO3hC,EAAM,GAAK,GAAM/4B,GAAQ,GAClTA,GAAU,EAAEgD,EAAM,GAAK23D,IAAc,GAAG16D,IAAY+C,EAAM,GAAK23D,GAAez6D,KAAKC,IAAIF,KAAiB,EAAOA,GAAa,GAASC,KAAKE,MAAOH,GAAY,cAAkB,KAAWC,KAAKG,MAAMJ,OAAoBA,KAAgB,IAAI,cAAoB,EAAK,IAAKpE,GAAU6+D,EAAO3hC,EAAM,GAAK,GAAM/4B,GAAQ,GAAGnE,GAAU6+D,EAAO3hC,EAAM,IAAM,GAAM/4B,GAAQ,GACpWrE,GAAU++D,EAAO3hC,EAAM,IAAM,GAAM,IACnCt9B,GAASi/D,EAAO3hC,EAAM,IAAM,GAAM3mC,EAClC6R,EAAa/V,EAAMwsE,EAAO3hC,EAAM,GAAI,KACpCA,GAAO4hC,EACP33D,GAAO,CACT,CAEA,OADAke,GAAGuR,OAAO1H,EAAQ/nB,EAAM23D,EAAa,GAC9B5hC,CACT,CAAE,MAAOjlC,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CACA,EAw9NA,gBAt9NA,SAA0BM,EAAI47B,EAAIj0B,GAClCT,GAASS,QAAUA,EACnB,IAEI,IAAI7b,EAASob,GAASK,gBAAgBvH,GACtC,OAAQ47B,GACN,KAAK,MACL,KAAK,MAIL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MAkBL,KAAK,MAML,KAAK,MAIH,OAAK9vC,EAAO0F,IACL,GADkB,GAxB3B,KAAK,MACH,IAAK1F,EAAO0F,IAAK,OAAQ,GACzB,IAAIqqC,EAAO30B,GAAS33C,MAEpB,OADAqN,GAASi/D,GAAO,GAAM,EACf,EAET,KAAK,MACH,OAAK/vC,EAAO0F,KACJ,IADiB,GAG3B,KAAK,MAEH,OADIqqC,EAAO30B,GAAS33C,MACb0yB,GAAGghB,MAAMnX,EAAQ8vC,EAAIC,GAe9B,QAAS,OAAQ,GAErB,CAAE,MAAOhnE,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CACA,EAk6NA,kBAh6NA,SAA4B9V,EAAMjgB,GAClC,IAGI,OADAigB,EAAOsd,GAASU,OAAOhe,GAChBsd,GAASM,OAAOvlB,GAAG+f,MAAOpY,EAAMjgB,EACzC,CAAE,MAAO9U,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CACA,EAw5NA,kBAt5NA,SAA4B2H,EAAOzd,EAAM/5B,GACzC,IASI,OAPA+5B,EAAOsd,GAASU,OAAOhe,GACvBA,EAAOsd,GAASE,YAAYC,EAAOzd,GAIP,OAD5BA,EAAO+E,GAAKU,UAAUzF,IACbA,EAAK14B,OAAO,KAAY04B,EAAOA,EAAKL,OAAO,EAAGK,EAAK14B,OAAO,IACnE+wB,GAAGof,MAAMzX,EAAM/5B,EAAM,GACd,CACT,CAAE,MAAOgF,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CACA,EAw4NA,qBAt4NA,SAA+B2H,EAAOzd,EAAMjgB,EAAKysB,GACjD,IAEIxM,EAAOsd,GAASU,OAAOhe,GACvB,IAAIkyC,EAAmB,IAAR1lC,EACXkR,EAAqB,KAARlR,EAGjB,OAFAA,IAAiB,KACjBxM,EAAOsd,GAASE,YAAYC,EAAOzd,EAAM0d,GAClCJ,GAASM,OAAOs0B,EAAW75C,GAAG+f,MAAQ/f,GAAGyV,KAAM9N,EAAMjgB,EAC9D,CAAE,MAAO9U,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CACA,EA03NA,iBAx3NA,SAA2B2H,EAAOzd,EAAMwM,EAAOuR,GAC/CT,GAASS,QAAUA,EACnB,IAEI/d,EAAOsd,GAASU,OAAOhe,GACvBA,EAAOsd,GAASE,YAAYC,EAAOzd,GACnC,IAAI/5B,EAAO83C,EAAUT,GAAS33C,MAAQ,EACtC,OAAO0yB,GAAG4B,KAAK+F,EAAMwM,EAAOvmC,GAAMmwC,EACpC,CAAE,MAAOnrC,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CACA,EA62NA,gBA32NA,SAA0B9V,GAC1B,IAII,OAFAA,EAAOsd,GAASU,OAAOhe,GACvB3H,GAAGoR,MAAMzJ,GACF,CACT,CAAE,MAAO/0B,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CACA,EAk2NA,iBAh2NA,SAA2B9V,EAAMjgB,GACjC,IAGI,OADAigB,EAAOsd,GAASU,OAAOhe,GAChBsd,GAASM,OAAOvlB,GAAGyV,KAAM9N,EAAMjgB,EACxC,CAAE,MAAO9U,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CACA,EAw1NA,mBAt1NA,SAA6B2H,EAAOzd,EAAMwM,GAC1C,IAWI,OATAxM,EAAOsd,GAASU,OAAOhe,GACvBA,EAAOsd,GAASE,YAAYC,EAAOzd,GACrB,IAAVwM,EACFnU,GAAGmR,OAAOxJ,GACS,MAAVwM,EACTnU,GAAGoR,MAAMzJ,GAETztB,EAAM,oCAED,CACT,CAAE,MAAOtH,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAQA,EAAE6qC,KACZ,CACA,EAs0NA,iCAn0NA,WACI,OAAOmI,EACT,EAk0NF,cA9yNA,SAAwBk0B,EAAMC,GAC1B,IAnBoBx7D,EAmBhB6E,EAAO,IAAIyC,KAA0B,KAlBlC5K,IADasD,EAmBeu7D,IAlBf,GAAwB,WAAnBn/D,GAAO4D,EAAI,GAAG,KAmBvC5D,GAASo/D,GAAQ,GAAM32D,EAAK42D,aAC5Br/D,GAAUo/D,EAAQ,GAAK,GAAM32D,EAAK62D,aAClCt/D,GAAUo/D,EAAQ,GAAK,GAAM32D,EAAK82D,WAClCv/D,GAAUo/D,EAAQ,IAAM,GAAM32D,EAAKK,UACnC9I,GAAUo/D,EAAQ,IAAM,GAAM32D,EAAKI,WACnC7I,GAAUo/D,EAAQ,IAAM,GAAM32D,EAAKC,cAAc,KACjD1I,GAAUo/D,EAAQ,IAAM,GAAM32D,EAAKwZ,SAEnC,IAAIu9C,EAA0B,EAAnBh3D,EAAaC,GACxBzI,GAAUo/D,EAAQ,IAAM,GAAMI,EAC9Bx/D,GAAUo/D,EAAQ,IAAM,IAAmC,GAA3B32D,EAAKg3D,oBAGrC,IAAIx0D,EAAQ,IAAIC,KAAKzC,EAAKC,cAAe,EAAG,GACxCg3D,EAAe,IAAIx0D,KAAKzC,EAAKC,cAAe,EAAG,GAAG+2D,oBAClDE,EAAe10D,EAAMw0D,oBACrBvuC,EAAyG,GAAlGwuC,GAAgBC,GAAgBl3D,EAAKg3D,qBAAuBp7D,KAAK4vB,IAAI0rC,EAAcD,IAC9F1/D,GAAUo/D,EAAQ,IAAM,GAAMluC,CAChC,EA2xNF,WAzxNA,SAAqBkuC,GACjB,IAAI32D,EAAO,IAAIyC,KAAKlL,GAAUo/D,EAAQ,IAAM,GAAM,KAC9Bp/D,GAAUo/D,EAAQ,IAAM,GACxBp/D,GAAUo/D,EAAQ,IAAM,GACxBp/D,GAAUo/D,EAAQ,GAAK,GACvBp/D,GAAUo/D,EAAQ,GAAK,GACvBp/D,GAASo/D,GAAQ,GACjB,GAKhBluC,EAAMlxB,GAAUo/D,EAAQ,IAAM,GAC9BQ,EAAgBn3D,EAAKg3D,oBACrBx0D,EAAQ,IAAIC,KAAKzC,EAAKC,cAAe,EAAG,GACxCg3D,EAAe,IAAIx0D,KAAKzC,EAAKC,cAAe,EAAG,GAAG+2D,oBAClDE,EAAe10D,EAAMw0D,oBACrBI,EAAYx7D,KAAK4vB,IAAI0rC,EAAcD,GACvC,GAAIxuC,EAAM,EAERlxB,GAAUo/D,EAAQ,IAAM,GAAMn2B,OAAOy2B,GAAgBC,GAAgBE,GAAaD,QAC7E,GAAK1uC,EAAM,IAAO2uC,GAAaD,GAAgB,CACpD,IAAIE,EAAez7D,KAAKuF,IAAI+1D,EAAcD,GACtCK,EAAa7uC,EAAM,EAAI2uC,EAAYC,EAEvCr3D,EAAKu3D,QAAQv3D,EAAK6Z,UAAyC,KAA5By9C,EAAaH,GAC9C,CAEA5/D,GAAUo/D,EAAQ,IAAM,GAAM32D,EAAKwZ,SACnC,IAAIu9C,EAA0B,EAAnBh3D,EAAaC,GAUxB,OATAzI,GAAUo/D,EAAQ,IAAM,GAAMI,EAE9Bx/D,GAASo/D,GAAQ,GAAM32D,EAAK42D,aAC5Br/D,GAAUo/D,EAAQ,GAAK,GAAM32D,EAAK62D,aAClCt/D,GAAUo/D,EAAQ,GAAK,GAAM32D,EAAK82D,WAClCv/D,GAAUo/D,EAAQ,IAAM,GAAM32D,EAAKK,UACnC9I,GAAUo/D,EAAQ,IAAM,GAAM32D,EAAKI,WACnC7I,GAAUo/D,EAAQ,IAAM,GAAM32D,EAAKw3D,UAE3Bx3D,EAAK6Z,UAAY,IAAM,CACjC,EAkvNF,UAxuNA,SAAoB49C,EAAUC,EAAUC,GAsBpC,SAASC,EAAY53D,GACnB,IAAIsjD,EAAQtjD,EAAK63D,eAAevU,MAAM,qBACtC,OAAOA,EAAQA,EAAM,GAAK,KAC5B,CAvBA,IAAIwU,GAAc,IAAIr1D,MAAOxC,cACzB83D,EAAS,IAAIt1D,KAAKq1D,EAAa,EAAG,GAClCE,EAAS,IAAIv1D,KAAKq1D,EAAa,EAAG,GAClCZ,EAAea,EAAOf,oBACtBC,EAAee,EAAOhB,oBAKtBiB,EAAoBr8D,KAAKuF,IAAI+1D,EAAcD,GAO/Cp/D,GAAU4/D,GAAW,GAA0B,GAApBQ,EAE3B1gE,GAASmgE,GAAW,GAAMl3B,OAAO02B,GAAgBD,GAMjD,IAAIiB,EAAaN,EAAYG,GACzBI,EAAaP,EAAYI,GACzBI,EAAgB93D,EAAgB43D,GAChCG,EAAgB/3D,EAAgB63D,GAChClB,EAAeC,GAEjBr/D,GAAU8/D,GAAS,GAAMS,EACzBvgE,GAAW8/D,EAAS,GAAK,GAAMU,IAE/BxgE,GAAU8/D,GAAS,GAAMU,EACzBxgE,GAAW8/D,EAAS,GAAK,GAAMS,EAEnC,EAmsNF,MAjsNA,WACIthE,EAAM,GACR,EAgsNF,WAp2LA,SAAqBwhE,GACjB,OAAW,OAAPA,GACFnvB,GAAIQ,aAAa,OACV,IAGTR,GAAIQ,aAAa,OACV,EACT,EA61LF,gBA31LA,SAA0BE,EAAS0uB,EAAaC,EAASxuB,EAAaC,GAClE,OAAOd,GAAIS,aAAaC,EAAS0uB,EAAaC,EAASxuB,EAAaC,EACtE,EA01LF,iBA1iLA,SAA2BJ,EAASE,EAAQ0uB,EAAKC,GAC7C,GAAe,MAAX7uB,EAEF,OADAV,GAAIQ,aAAa,OACV,EAMT,IADA,IAAIgvB,EAAqB,IAChB,CACP,IAAI9oD,EAAQtY,GAASmhE,GAAiB,GACtC,GAAa,OAAT7oD,EAEG,IAAa,OAATA,EACT,MAIA,OADAs5B,GAAIQ,aAAa,OACV,CACT,CAPEgvB,EAAqBphE,GAAUmhE,EAAiB,GAAK,GAQvDA,GAAkB,CACpB,CACA,OAAIC,EAAqB,GAAKA,EAAqB,GACjDxvB,GAAIQ,aAAa,OACV,IAGTR,GAAI1D,kBAAkBG,aAAe+yB,EAAqB,EAC1DxvB,GAAI1D,kBAAkBmzB,aAAe,EAErCzvB,GAAIp6C,QAAUoU,GAAGiiC,cAAcluC,GAAe,OAAGiyC,GAAI1D,mBAElC,GAAf0D,GAAIp6C,SACNo6C,GAAIQ,aAAa,OAGjBxmC,GAAG4iC,mBAAmBoD,GAAIp6C,SAC1BmI,GAAOmuC,UAAW,EAClB1kC,GAAQmiC,8BAA8BnwC,SAAQ,SAASiG,GAAYA,GAAW,IAG9EuK,GAAG4iC,mBAAmB,MACf,QAEPoD,GAAIQ,aAAa,OACV,GAEX,EA4/KF,uBA1/KA,SAAiCE,EAASE,GACtC,OAAe,MAAXF,GACFV,GAAIQ,aAAa,OACV,GAEK,OAAVI,GACFZ,GAAIQ,aAAa,OACV,IAMTR,GAAIQ,aAAa,OACV,MACT,EA4+KF,kBAz+KA,SAA4BE,EAAS96C,GACjC,OAAe,MAAX86C,GACFV,GAAIQ,aAAa,OACV,GAEM,OAAX56C,GACFo6C,GAAIQ,aAAa,OACV,IAGTxmC,GAAG+qC,cAAc/E,GAAIp6C,SACrBo6C,GAAIQ,aAAa,OACbR,GAAIj6B,gBAAkBngB,IACxBo6C,GAAIj6B,eAAiB,GAEhB,EACT,EA09KF,kBAx9KA,SAA4B26B,EAASgvB,GACjC,OAAe,MAAXhvB,GACFV,GAAIQ,aAAa,OACV,GAEM,OAAXkvB,GACF1vB,GAAIQ,aAAa,OACV,IAELR,GAAIG,oBAAsBuvB,IAC5B1vB,GAAIG,mBAAqB,GAEvBH,GAAII,oBAAsBsvB,IAC5B1vB,GAAII,mBAAqB,GAE3BJ,GAAIQ,aAAa,OACV,EACT,EAw8KF,mBAt8KA,SAA6BE,EAASE,EAAQjE,EAAWx7C,GACrD,GAAe,MAAXu/C,EAEF,OADAV,GAAIQ,aAAa,OACV,EAET,GAAc,OAAVI,EAEF,OADAZ,GAAIQ,aAAa,OACV,EAET,IAAKr/C,EAEH,OADA6+C,GAAIQ,aAAa,OACV,EAGT,OADAR,GAAIQ,aAAa,OACT7D,GACR,KAAK,MAEH,OADAvuC,GAASjN,GAAQ,GAAM6+C,GAAI1D,kBAAkBE,MAAQ,GAAK,GACnD,EACT,KAAK,MAEH,OADApuC,GAASjN,GAAQ,GAAM6+C,GAAI1D,kBAAkBE,MAAQ,EAAI,EAClD,EACT,KAAK,MAGL,KAAK,MAGL,KAAK,MAEH,OADApuC,GAASjN,GAAQ,GAAM,EAChB,EACT,KAAK,MAEH,OADAiN,GAASjN,GAAQ,GAAM6+C,GAAI1D,kBAAkB+D,MAAQ,GAAK,EACnD,EACT,KAAK,MAEH,OADAjyC,GAASjN,GAAQ,GAAM6+C,GAAI1D,kBAAkBgE,QAAU,EAAI,EACpD,EACT,KAAK,MAyBL,KAAK,MAYL,KAAK,MAGH,OADAlyC,GAASjN,GAAQ,GAAM,MAChB,EApCT,KAAK,MAEH,OADAiN,GAASjN,GAAQ,GAAM,MAChB,EACT,KAAK,MAYL,KAAK,MAGL,KAAK,MAyBL,KAAK,MACL,KAAK,MAGL,KAAK,MAML,KAAK,MACL,KAAK,MAWL,KAAK,MAGH,OADAiN,GAASjN,GAAQ,GAAM,EAChB,EA9DT,KAAK,MAML,KAAK,MAEH,OADAiN,GAASjN,GAAQ,GAAM,KAChB,EALT,KAAK,MAEH,OADAiN,GAASjN,GAAQ,GAAM,SAChB,EAaT,KAAK,MAEH,OADAiN,GAASjN,GAAQ,GAAM6+C,GAAI1D,kBAAkBC,UAAY,EAAI,EACtD,EACT,KAAK,MAEH,OADAnuC,GAASjN,GAAQ,GAAM6+C,GAAI1D,kBAAkBC,UAAY,EAAI,EACtD,EACT,KAAK,MA+BL,KAAK,MAGH,OADAnuC,GAASjN,GAAQ,GAAM,EAChB,EA3BT,KAAK,MACL,KAAK,MACL,KAAK,MAGH,OADAiN,GAASjN,GAAQ,IAAO,EACjB,EAQT,KAAK,MAEH,OADAiN,GAASjN,GAAQ,GAAM,EAChB,EAKT,KAAK,MAGH,OADAiN,GAASjN,GAAQ,GAAM,MAChB,EAST,QAEE,OADA6+C,GAAIQ,aAAa,OACV,EAEX,EAs1KF,cAp1KA,WAUQ,OATJR,GAAIQ,aAAa,OASN,IAIb,EAu0KF,YAr0KA,WACI,OAAOR,GAAIC,SACb,EAo0KF,cAl0KA,SAAwBS,EAASjE,EAAcgzB,GAC3C,OAAe,MAAX/uB,GACFV,GAAIQ,aAAa,OACV,IAEL/D,IACFruC,GAASquC,GAAe,GAAM,GAE5BgzB,IACFrhE,GAASqhE,GAAe,GAAM,GAEhCzvB,GAAIE,2BAA4B,EAChCF,GAAIQ,aAAa,OACV,EACT,EAqzKF,eAlzKA,SAAyBE,EAASivB,EAAMrsC,EAAM19B,GAC1C,OAAe,MAAX86C,GACFV,GAAIQ,aAAa,OACV,GAGM,GAAX56C,GAA2B,OAAXA,GAClBo6C,GAAIQ,aAAa,OACV,GAEI,GAARld,GAAqB,OAARA,GAA2B,GAARqsC,GAAqB,OAARA,GAChD3vB,GAAIQ,aAAa,OACV,IAGTxmC,GAAG4iC,mBAAmBh3C,EAAUo6C,GAAIp6C,QAAU,MAE9Co6C,GAAIj6B,eAAiBngB,EACrBo6C,GAAII,mBAAqBuvB,EACzB3vB,GAAIG,mBAAqB7c,EACzB0c,GAAIQ,aAAa,OACV,EACT,EA6xKF,eA1xKA,SAAyBE,EAASjgD,GAC9B,GAAe,MAAXigD,EAEF,OADAV,GAAIQ,aAAa,OACV,EAIT,GADAR,GAAIQ,aAAa,OACbR,GAAIO,YAAY9/C,GAAO,OAAOu/C,GAAIO,YAAY9/C,GAClD,IAAI4W,EACJ,OAAQ5W,GACN,KAAK,MAAyB4W,EAAMF,EAAgB,cAAe,MACnE,KAAK,MAA0BE,EAAMF,EAAgB,sBAAuB,MAC5E,KAAK,MAA8BE,EAAMF,EAAgB,IAAK,MAC9D,KAAK,MAA8BE,EAAMF,EAAgB,aAAc,MACvE,QAEE,OADA6oC,GAAIQ,aAAa,OACV,EAGX,OADAR,GAAIO,YAAY9/C,GAAQ4W,EACjBA,CACT,EAuwKF,eArwKA,WAEI,GAAK2oC,GAAIE,0BAEF,GAAKnyC,GAAO4uB,IAEZ,KAAI5uB,GAAO4uB,IAAIizC,gBAQpB,OADA5vB,GAAIQ,aAAa,OACV,EAPPR,GAAIQ,aAAa,MAQnB,MAVER,GAAIQ,aAAa,YAFjBR,GAAIQ,aAAa,OAanB,OAAO,CACT,EAqvKF,gBAlvKA,SAA0BE,EAASmvB,GAC/B,OAAe,MAAXnvB,GACFV,GAAIQ,aAAa,OACV,IAEO,GAAZqvB,EAAet4D,EAAiC,EAA2B,GAC1EA,EAAiC,EAAoBs4D,GAE1D7vB,GAAIQ,aAAa,OACV,EACT,EAyuKF,aAvuKA,SAAuBE,GACnB,OAAe,MAAXA,GACFV,GAAIQ,aAAa,OACV,IAETR,GAAIj6B,eAAiB,EACrBi6B,GAAIG,mBAAqB,EACzBH,GAAII,mBAAqB,EACzBJ,GAAIE,2BAA4B,EAChCF,GAAIQ,aAAa,OACV,EACT,EA6tKF,UAAaoF,GACb,cAptKA,WAEI,OADA5F,GAAIQ,aAAa,OACV,CACT,EAktKF,yBAzrKA,SAAmC/lC,EAAMS,EAAQ40D,GAC7C,OALJ,SAA0Br1D,EAAMS,EAAQ40D,GACpC,IAAI79D,EAAOgJ,EAAcC,EAAQ40D,GACjC,OAAOx0C,GAAW7gB,GAAMvI,MAAM,KAAMD,EACtC,CAES89D,CAAiBt1D,EAAMS,EAAQ40D,EACxC,EAwrKF,6CAlrKA,SAAuDr1D,EAAMS,EAAQ40D,GACjE,OALJ,SAA4Br1D,EAAMS,EAAQ40D,GACtC,IAAI79D,EAAOgJ,EAAcC,EAAQ40D,GACjC,OAAOx0C,GAAW7gB,GAAMvI,MAAM,KAAMD,EACtC,CAES+9D,CAAmBv1D,EAAMS,EAAQ40D,EAC1C,EAirKF,oBA/qKA,WACI,OAAOx2D,KAAKC,KACd,EA8qKF,iCAlxJA,SAA2Cf,EAAQy3D,GAE/C,KADAz3D,EAASyD,EAAgBzD,IACZ,OAAQ,EAErB,IAAImG,EAAW,CACXjB,UAAWtP,GAAS6hE,GAAqB,GACzCzyD,0BAA2BpP,GAAU6hE,EAAqB,GAAK,GAC/D1uD,cAAenT,GAAU6hE,EAAqB,GAAK,GACnD3xD,sBAAuBlQ,GAAU6hE,EAAqB,IAAM,GAC5DzxD,8BAA+BpQ,GAAU6hE,EAAqB,IAAM,GACpEz3D,OAAQA,EACRqI,gBAAgB,GAGhBjC,EAAkBF,EAAmClG,EAAQmG,GAEjE1b,SAASmd,gBAAgBrY,MAAMsY,SAAW,SAC1Cpd,SAASE,KAAKod,OAAS,KACvBtd,SAASE,KAAK4E,MAAMmY,OAAS,MAE7B,IAAIgwD,EAzTR,SAA0CC,GAItC,IAHA,IAAIhD,EAAQgD,EACRhsC,EAASgpC,EAAM/oE,WACf8rE,EAAiB,GACd/C,GAASlqE,SAASE,MAAM,CAE7B,IADA,IAAIsB,EAAW0/B,EAAO1/B,SACbvE,EAAI,EAAGA,EAAIuE,EAAS/B,SAAUxC,EACjCuE,EAASvE,IAAMitE,IACjB+C,EAAejqE,KAAK,CAAEg9B,KAAMx+B,EAASvE,GAAIkwE,aAAc3rE,EAASvE,GAAG6H,MAAM24C,UACzEj8C,EAASvE,GAAG6H,MAAM24C,QAAU,QAGhCysB,EAAQhpC,EACRA,EAASA,EAAO//B,UAClB,CACA,OAAO8rE,CACT,CAySuBG,CAAiC73D,GAoBtD,OATA0uC,GATA,WACEtoC,IAhKN,SAA+BsxD,GAC3B,IAAK,IAAIhwE,EAAI,EAAGA,EAAIgwE,EAAextE,SAAUxC,EAC3CgwE,EAAehwE,GAAG+iC,KAAKl7B,MAAM24C,QAAUwvB,EAAehwE,GAAGkwE,YAE7D,CA6JIE,CAAsBJ,GACtB3nE,oBAAoB,SAAU2U,GAC1ByB,EAASL,uBACMC,GAAarM,MAAM,KAAM,CAACyM,EAASL,sBAAqC,GAAI,EAAGK,EAASH,gCAE3GjB,GAA4B,CAC9B,EAEAA,GAA4BoB,EAC5BvW,iBAAiB,SAAU8U,GAGvByB,EAASL,uBACMC,GAAarM,MAAM,KAAM,CAACyM,EAASL,sBAAqC,GAAI,EAAGK,EAASH,gCAGpG,CACT,EA0uJF,2BA9sJA,WACI,IAAKsD,GAASC,oBAAqB,OAAQ,EAE3CD,GAAS6kC,oBAAoBhlC,GAE7B,IAAInhB,EAAI2b,GAAmB,GAC3B,GAAI3b,EAAE28C,eACJ38C,EAAEqe,mBAAqBre,EAAE28C,qBACpB,KAAI38C,EAAE+vE,qBAGX,OAAQ,EAFR/vE,EAAEse,yBAA2Bte,EAAE+vE,sBAGjC,CAEA,OAAO,CACT,EAgsJF,4BA/qJA,WAII,OAFAzuD,GAAS6kC,oBAAoBzkC,GAEzBjf,SAAS84C,iBACX94C,SAAS84C,kBAIJ,IAFG,CAGZ,EAsqJF,gCApqJA,WAII,OAHImL,IAAyBA,KAC7BA,GAA0B,KAEnB,CACT,EAgqJF,kCA9pJA,WACI,OAAO7pC,gBACT,EA6pJF,gCAzpJA,SAA0C7E,EAAQgE,EAAOC,GAErD,KADAjE,EAASyD,EAAgBzD,IACZ,OAAQ,EAErB,IAAIwI,EAAOvC,EAAsBjG,GAIjC,OAHA1J,GAAU0N,GAAQ,GAAMwE,EAAKxE,MAC7B1N,GAAU2N,GAAS,GAAMuE,EAAKvE,OAEvB,CACT,EAipJF,8BAlnJA,SAAwCiG,EAAO8tD,GAG3C,OAAI9tD,EAAQ,GAAKA,GAASZ,GAAS2uD,iBAAiB/tE,QAAgB,EAM/Dof,GAAS2uD,iBAAiB/tD,IAE/BP,EAAqBquD,EAAc1uD,GAAS2uD,iBAAiB/tD,IACtD,IAHwC,CAIjD,EAsmJF,mBAAsBxK,GACtB,4BApmJA,WAGI,OAAO4J,GAAS2uD,iBAAiB/tE,MACnC,EAimJF,2BA/lJA,SAAqC8Z,EAAOC,GACxCrO,GAASoO,GAAQ,GAAMsE,OAAOtE,MAC9BpO,GAASqO,GAAS,GAAMqE,OAAOrE,MACjC,EA6lJF,2BAA8B0qC,GAC9B,0BAA6BG,GAC7B,wBAA2BE,GAC3B,2BAA8BE,GAC9B,oCAAuCC,GACvC,gCAAmCE,GACnC,wBAA2BE,GAC3B,4BAA+BG,GAC/B,6BAAgCE,GAChC,6BAAgCG,GAChC,8BAAiCG,GACjC,yBAA4BG,GAC5B,yBAA4BI,GAC5B,mCAAsCG,GACtC,6BAAgCE,GAChC,gCAAmCE,GACnC,wBAA2BC,GAC3B,2BAA8BK,GAC9B,mCAAsCE,GACtC,uBAA0BE,GAC1B,+BAAkCE,GAClC,6BAAgCE,GAChC,wBAA2BQ,GAC3B,2BAA8BE,GAC9B,oCAAuCC,GACvC,mBAAsBE,GACtB,2BAA8BE,GAC9B,2BAA8BE,GAC9B,2BAA8BG,GAC9B,4BAA+BE,GAC/B,wBAA2BE,GAC3B,yBAA4BE,GAC5B,0BAA6BE,GAC7B,4BAA+BE,GAC/B,uBAA0BK,GAC1B,2BAA8BK,GAC9B,kCAAqCE,GACrC,kCAAqCM,GACrC,qCAAwCE,GACxC,qCAAwCI,GACxC,+BAAkCG,GAClC,4BAA+BE,GAC/B,+BAAkCE,GAClC,+BAAkCE,GAClC,2BAA8BE,GAC9B,0BAA6BK,GAC7B,sBAAyBG,GACzB,2BAA8BE,GAC9B,gCAAmCE,GACnC,2BAA8BE,GAC9B,2BAA8BE,GAC9B,8BAAiCG,GACjC,iCAAoCC,GACpC,4BAA+BE,GAC/B,0BAA6BE,GAC7B,wBAA2BE,GAC3B,4BAA+BE,GAC/B,sCAAyCE,GACzC,gCAAmCG,GACnC,mCAAsCE,GACtC,uBAA0BC,GAC1B,uBAA0BE,GAC1B,yBAA4BE,GAC5B,0BAA6BE,GAC7B,qBAAwBE,GACxB,sCAAyCE,GACzC,wBAA2BE,GAC3B,iCAAoCE,GACpC,sCAAyCE,GACzC,oCAAuCE,GACvC,oCAAuCE,GACvC,mCAAsCE,GACtC,yBAA4BC,GAC5B,4BAA+BE,GAC/B,8BAAiCE,GACjC,0BAA6BC,GAC7B,mCAAsCC,GACtC,wCAA2CE,GAC3C,sCAAyCE,GACzC,sCAAyCE,GACzC,qCAAwCE,GACxC,+BAAkCC,GAClC,oBAAuBC,GACvB,qCAAwCE,GACxC,sBAAyBE,GACzB,yBAA4BE,GAC5B,kCAAqCC,GACrC,uBAA0BE,GAC1B,oBAAuBE,GACvB,mBAAsBC,GACtB,qCAAwCE,GACxC,kCAAqCI,GACrC,qCAAwCG,GACxC,uBAA0BG,GAC1B,wBAA2BE,GAC3B,6BAAgCC,GAChC,wBAA2BC,GAC3B,2BAA8BC,GAC9B,8BAAiCC,GACjC,yBAA4BC,GAC5B,yBAA4BC,GAC5B,mCAAsCC,GACtC,6BAAgCC,GAChC,gCAAmCC,GACnC,4BAA+BC,GAC/B,6BAAgCE,GAChC,8BAAiCC,GACjC,uCAA0CC,GAC1C,qCAAwCI,GACxC,iCAAoCE,GACpC,gCAAmCI,GACnC,+BAAkCG,GAClC,yBAA4BE,GAC5B,oCAAuCC,GACvC,kCAAqCE,GACrC,sBAAyBC,GACzB,uBAA0BE,GAC1B,iCAAoCC,GACpC,iDAAoDE,GACpD,6BAAgCI,GAChC,2BAA8BC,GAC9B,2BAA8BC,GAC9B,yBAA4BC,GAC5B,iCAAoCC,GACpC,8BAAiCG,GACjC,+BAAkCC,GAClC,0BAA6BI,GAC7B,mCAAsCE,GACtC,iCAAoCC,GACpC,oCAAuCC,GACvC,+BAAkCC,GAClC,kCAAqCC,GACrC,wBAA2BC,GAC3B,2BAA8BE,GAC9B,wCAA2CC,GAC3C,mCAAsCE,GACtC,mCAAsCE,GACtC,8BAAiCC,GACjC,sCAAyCE,GACzC,6BAAgCO,GAChC,yBAA4BE,GAC5B,uBAA0BE,GAC1B,wBAA2BM,GAC3B,uBAA0BC,GAC1B,+BAAkCE,GAClC,+BAAkCE,GAClC,yCAA4CC,GAC5C,kCAAqCE,GACrC,+BAAkCE,GAClC,gCAAmCI,GACnC,0BAA6BK,GAC7B,0BAA6BC,GAC7B,2BAA8BC,GAC9B,gCAAmCC,GACnC,iCAAoCC,GACpC,qCAAwCC,GACxC,+BAAkCG,GAClC,+BAAkCC,GAClC,kBAAqBC,GACrB,mCAAsCE,GACtC,sCAAyCK,GACzC,sBAAyBE,GACzB,uBAA0BE,GAC1B,2BAA8BE,GAC9B,uBAA0BG,GAC1B,qBAAwBE,GACxB,wBAA2BE,GAC3B,4BAA+BC,GAC/B,uBAA0BG,GAC1B,sBAAyBE,GACzB,oBAAuBE,GACvB,uBAA0BE,GAC1B,iCAAoCE,GACpC,2BAA8BE,GAC9B,8BAAiCC,GACjC,uBAA0BC,GAC1B,yBAA4BE,GAC5B,oCAAuCE,GACvC,yBAA4BE,GAC5B,2BAA8BE,GAC9B,2BAA8BE,GAC9B,+BAAkCC,GAClC,6BAAgCC,GAChC,wBAA2BC,GAC3B,wBAA2BE,GAC3B,mCAAsCG,GACtC,iCAAoCC,GACpC,4CAA+CE,GAC/C,qCAAwCE,GACxC,4BAA+BE,GAC/B,+BAAkCG,GAClC,gCAAmCE,GACnC,+BAAkCC,GAClC,gCAAmCE,GACnC,qBAAwBC,GACxB,0BAA6BE,GAC7B,0BAA6BC,GAC7B,yBAA4BE,GAC5B,iCAAoCE,GACpC,yBAA4BE,GAC5B,iCAAoCE,GACpC,uBAA0BE,GAC1B,+BAAkCE,GAClC,wBAA2BE,GAC3B,wBAA2BE,GAC3B,2BAA8BE,GAC9B,4BAA+BE,GAC/B,2BAA8BC,GAC9B,4BAA+BE,GAC/B,0BAA6BC,GAC7B,0BAA6BE,GAC7B,2BAA8BE,GAC9B,2BAA8BE,GAC9B,uCAA0CE,GAC1C,uBAA0BK,GAC1B,wBAA2BI,GAC3B,uBAA0BE,GAC1B,wBAA2BG,GAC3B,wBAA2BE,GAC3B,yBAA4BE,GAC5B,uBAA0BE,GAC1B,wBAA2BG,GAC3B,uBAA0BE,GAC1B,wBAA2BE,GAC3B,wBAA2BE,GAC3B,yBAA4BE,GAC5B,uBAA0BE,GAC1B,wBAA2BG,GAC3B,uBAA0BE,GAC1B,wBAA2BE,GAC3B,wBAA2BE,GAC3B,yBAA4BE,GAC5B,uBAA0BE,GAC1B,wBAA2BG,GAC3B,uBAA0BE,GAC1B,wBAA2BE,GAC3B,wBAA2BE,GAC3B,yBAA4BE,GAC5B,iCAAoCE,GACpC,8BAAiCE,GACjC,gCAAmCG,GACnC,gCAAmCE,GACnC,8BAAiCE,GACjC,gCAAmCE,GACnC,gCAAmCE,GACnC,8BAAiCE,GACjC,gCAAmCE,GACnC,gCAAmCE,GACnC,wBAA2BE,GAC3B,6BAAgCE,GAChC,4BAA+BE,GAC/B,6BAAgCE,GAChC,4BAA+BC,GAC/B,6BAAgCE,GAChC,4BAA+BC,GAC/B,6BAAgCE,GAChC,4BAA+BC,GAC/B,6BAAgCE,GAChC,iCAAoCC,GACpC,sCAAyCC,GACzC,oCAAuCC,GACvC,oCAAuCC,GACvC,mCAAsCC,GACtC,6BAAgCC,GAChC,8BAAiCE,GACjC,8BAAiCC,GACjC,+BAAkCE,GAClC,kCAAqCC,GACrC,iCAAoCE,GACpC,sBAAyBE,GACzB,sBAAyBC,GACzB,wBA17DA,WACI,OAAO,CACT,EAy7DF,sBAv7DA,SAAgCgH,EAAMpjE,EAAKqY,GACvCrX,GAAOqiE,WAAWD,EAAMpjE,EAAKA,EAAMqY,EACrC,EAs7DF,uCAn5DA,SAAiDnN,EAAQo4D,EAA0BX,GAU/E,OApCJ,SAA6Bz3D,EAAQmG,GACjC,OAAKmD,GAASC,qBACdvJ,EAASyD,EAAgBzD,IAGpBA,EAAOoJ,mBACNpJ,EAAOqJ,wBAKYC,GAAS8kC,iCAW3BjlC,EAA2BnJ,EAAQmG,GAPpCA,EAASiyD,0BACX9uD,GAASskC,UAAUzkC,EAA4B,EAAoC,CAACnJ,EAAQmG,IACrF,IAED,GAXA,GALW,GAFsB,CAsB7C,CAaSkyD,CAAoBr4D,EATZ,CACbkF,UAAWtP,GAAS6hE,GAAqB,GACzCzyD,0BAA2BpP,GAAU6hE,EAAqB,GAAK,GAC/D1uD,cAAenT,GAAU6hE,EAAqB,GAAK,GACnDW,yBAA0BA,EAC1BtyD,sBAAuBlQ,GAAU6hE,EAAqB,IAAM,GAC5DzxD,8BAA+BpQ,GAAU6hE,EAAqB,IAAM,IAIxE,EAy4DF,+BAr4DA,SAAyCz3D,EAAQo4D,GAE7C,OADAp4D,EAASyD,EAAgBzD,IAEpBA,EAAO0J,mBAKaJ,GAAS8kC,iCAW3B1kC,EAAmB1J,GAPpBo4D,GACF9uD,GAASskC,UAAUlkC,EAAoB,EAAmC,CAAC1J,IACpE,IAED,GAXA,GAHW,CAkBvB,EAk3DF,uBA51DA,SAAiCs4D,GAC7B,IAAIC,EAAUziE,GAAO5L,OAwBjBsuE,EAxCG,WAyCP,IAxBAF,KAAkC,GAwBdE,EAClB,OAAO,EAGT,IAAIC,EAAUA,CAACpqE,EAAGqqE,IAAarqE,GAAKqqE,EAAWrqE,EAAIqqE,GAAYA,EAK/D,IAAK,IAAIC,EAAU,EAAGA,GAAW,EAAGA,GAAW,EAAG,CAChD,IAAIC,EAAoBL,GAAW,EAAI,GAAMI,GAO7C,GALAC,EAAoB3+D,KAAK4vB,IAAI+uC,EAAmBN,EAAgB,WAI9C/mD,GAFJtX,KAAK4vB,IAAI2uC,EAAaC,EAAQx+D,KAAKuF,IAAI84D,EAAeM,GAAoB,SAKtF,OAAO,CAEX,CACA,OAAO,CACT,EA4yDF,+BA1yDA,WACI,OAAQtvD,GAAS2uD,iBAAoB9tE,UAAU0uE,YAAc1uE,UAAU0uE,cAAiB1uE,UAAU2uE,kBAAoB3uE,UAAU2uE,oBAAsB,MAClJ,GAAK,CACX,EAwyDF,+CA5wDA,SAAyDnnD,EAAUE,EAAcknD,GAC7E,MAA6B,oBAAlBC,gBAAuC,EAG7B,IAAjBD,GAA4B,GA5BpC,SAA2C/4D,EAAQ2R,EAAUC,EAAYC,EAAcC,EAAaC,GAChG,IAcIE,EAAe,CACjBjS,OAAQyD,EAAgBzD,GACxB+R,gBAAiBA,EACjBF,aAAcA,EACdK,YAlBiC,SAASrkB,EAAIqC,OAE9C,IAAI+oE,EAAuClzD,GAAarM,MAAM,KAAM,CAACmY,EAA4BC,EAAa,EAAGH,IAKjH,GAHIsnD,IACFA,EAAsBt7D,EAAas7D,IAEjCA,EAGF,OAFAprE,EAAEwkB,iBACFxkB,EAAEqrE,YAAcD,EACTA,CAEX,EAOErnD,WAAYA,GAEdtI,GAASgJ,wBAAwBL,EACnC,CAMEknD,CAAkC,EAAGxnD,GAAU,EAAME,EAAc,GAAI,gBAChE,EACT,EAswDF,uCA1uDA,SAAiD7R,EAAQ2R,EAAUC,EAAYC,GAE3E,OADAH,GAA2B1R,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,QACpE,CACT,EAwuDF,mCAAsCxN,EACtC,gCAruDA,SAA0CrE,EAAQgE,EAAOC,GAErD,OADAjE,EAASyD,EAAgBzD,KAGzBA,EAAOzQ,MAAMyU,MAAQA,EAAQ,KAC7BhE,EAAOzQ,MAAM0U,OAASA,EAAS,KAExB,IALc,CAMvB,EA8tDF,wCA5tDA,SAAkDjE,EAAQ2R,EAAUC,EAAYC,GAE5E,OADAH,GAA2B1R,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,SACpE,CACT,EA0tDF,mDAvqDA,SAA6D7R,EAAQ2R,EAAUC,EAAYC,GACvF,OAAKvI,GAASC,qBACdvJ,EAASyD,EAAgBzD,KAEzBuS,GAAsCvS,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,oBAItFU,GAAsCvS,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,0BAE/E,IAPc,GAFsB,CAU7C,EA6pDF,mDApoDA,SAA6DF,EAAUC,EAAYC,GAC/E,OAAK1nB,UAAU0uE,aAAgB1uE,UAAU2uE,mBACzC7lD,GAA6B,EAAGtB,EAAUC,EAAYC,EAAc,GAAI,oBACjE,IAF6D,CAGtE,EAioDF,sDA/nDA,SAAgEF,EAAUC,EAAYC,GAClF,OAAK1nB,UAAU0uE,aAAgB1uE,UAAU2uE,mBACzC7lD,GAA6B,EAAGtB,EAAUC,EAAYC,EAAc,GAAI,uBACjE,IAF6D,CAGtE,EA4nDF,0CAllDA,SAAoD7R,EAAQ2R,EAAUC,EAAYC,GAE9E,OADAuB,GAAyBpT,EAAQ2R,EAAUC,EAAYC,EAAc,EAAG,WACjE,CACT,EAglDF,2CA9kDA,SAAqD7R,EAAQ2R,EAAUC,EAAYC,GAE/E,OADAuB,GAAyBpT,EAAQ2R,EAAUC,EAAYC,EAAc,EAAG,YACjE,CACT,EA4kDF,wCA1kDA,SAAkD7R,EAAQ2R,EAAUC,EAAYC,GAE5E,OADAuB,GAAyBpT,EAAQ2R,EAAUC,EAAYC,EAAc,EAAG,SACjE,CACT,EAwkDF,yBArkDA,SAAmCzS,EAAMiB,EAAKC,GAE1CH,GAD4BC,IAAMg5D,GAAUvxE,KAAK,KAAMuX,IACrBiB,EAAKC,EACzC,EAmkDF,4CA9gDA,SAAsDN,EAAQ2R,EAAUC,EAAYC,GAEhF,OADA6C,GAA2B1U,EAAQ2R,EAAUC,EAAYC,EAAc,EAAG,aACnE,CACT,EA4gDF,6CA1gDA,SAAuD7R,EAAQ2R,EAAUC,EAAYC,GAEjF,OADA6C,GAA2B1U,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,cACpE,CACT,EAwgDF,6CAtgDA,SAAuD7R,EAAQ2R,EAAUC,EAAYC,GAEjF,OADA6C,GAA2B1U,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,cACpE,CACT,EAogDF,4CAlgDA,SAAsD7R,EAAQ2R,EAAUC,EAAYC,GAEhF,OADA6C,GAA2B1U,EAAQ2R,EAAUC,EAAYC,EAAc,EAAG,aACnE,CACT,EAggDF,0CA9/CA,SAAoD7R,EAAQ2R,EAAUC,EAAYC,GAE9E,OADA6C,GAA2B1U,EAAQ2R,EAAUC,EAAYC,EAAc,EAAG,WACnE,CACT,EA4/CF,oDAp9CA,SAA8D7R,EAAQ2R,EAAUC,EAAYC,GAExF,OAAKpnB,UAAaA,SAASE,OAAUF,SAASE,KAAK+e,oBAAuBjf,SAASE,KAAK0uE,uBAA0B5uE,SAASE,KAAK2uE,0BAA6B7uE,SAASE,KAAK4uE,uBAI3Kv5D,EAASyD,EAAgBzD,KAEzB4U,GAAuC5U,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,qBACvF+C,GAAuC5U,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,wBACvF+C,GAAuC5U,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,2BACvF+C,GAAuC5U,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,uBAChF,IALc,GAJX,CAUZ,EAw8CF,yCA55CA,SAAmD7R,EAAQ2R,EAAUC,EAAYC,GAE7E,OA1CJ,SAAiC7R,EAAQ2R,EAAUC,EAAYC,EAAcC,EAAaC,GACjFzI,GAASkwD,UAASlwD,GAASkwD,QAAU16D,GAAS,KAInD,IA0BImT,EAAe,CACjBjS,OA7BFA,EAASyD,EAAgBzD,GA8BvB+R,gBAAiBA,EACjBF,aAAcA,EACdK,YA9BuB,SAASrkB,EAAIqC,OACpC,GAAIrC,EAAEmS,QAAUA,EAAhB,CAOA,IAAI3S,EAAI5C,SAASE,KACjB,GAAK0C,EAAL,CAIA,IAAImsE,EAAUlwD,GAASkwD,QACvB5jE,GAAS4jE,GAAU,GAAM3rE,EAAE23C,OAC3B5vC,GAAU4jE,EAAU,GAAK,GAAMnsE,EAAEylB,YACjCld,GAAU4jE,EAAU,GAAK,GAAMnsE,EAAE0lB,aACjCnd,GAAU4jE,EAAU,IAAM,GAAMj0D,WAChC3P,GAAU4jE,EAAU,IAAM,GAAM/zD,YAChC7P,GAAU4jE,EAAU,IAAM,GAAMC,WAChC7jE,GAAU4jE,EAAU,IAAM,GAAME,YAChC9jE,GAAU4jE,EAAU,IAAM,GAAMpzB,YAChCxwC,GAAU4jE,EAAU,IAAM,GAAMlzB,YACXvgC,GAAarM,MAAM,KAAM,CAACmY,EAA4BC,EAAa0nD,EAAS7nD,KAAW9jB,EAAEwkB,gBAX9G,CALA,CAiBF,EAOET,WAAYA,GAEdtI,GAASgJ,wBAAwBL,EACnC,CAEE0nD,CAAwB35D,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,UACjE,CACT,EA05CF,8CA30CA,SAAwD7R,EAAQ2R,EAAUC,EAAYC,GAElF,OADAsD,GAA2BnV,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,eACpE,CACT,EAy0CF,2CAv0CA,SAAqD7R,EAAQ2R,EAAUC,EAAYC,GAE/E,OADAsD,GAA2BnV,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,YACpE,CACT,EAq0CF,4CAn0CA,SAAsD7R,EAAQ2R,EAAUC,EAAYC,GAEhF,OADAsD,GAA2BnV,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,aACpE,CACT,EAi0CF,6CA/zCA,SAAuD7R,EAAQ2R,EAAUC,EAAYC,GAEjF,OADAsD,GAA2BnV,EAAQ2R,EAAUC,EAAYC,EAAc,GAAI,cACpE,CACT,EA6zCF,mDA1xCA,SAA6DF,EAAUC,EAAYC,GAE/E,OADAmE,GAAsCrS,GAAmB,GAAIgO,EAAUC,EAAYC,EAAc,GAAI,oBAC9F,CACT,EAwxCF,wCAzvCA,SAAkD7R,EAAQ2R,EAAUC,EAAYC,GAE5E,YAA6B,KAD7B7R,EAASyD,EAAgBzD,IACP45D,SA3BtB,SAAoC55D,EAAQ2R,EAAUC,EAAYC,EAAcC,EAAaC,GACpFzI,GAASuwD,aAAYvwD,GAASuwD,WAAa/6D,GAAS,MAqBzDwK,GAASgJ,wBARU,CACjBtS,OAAQA,EACRmT,qBAAqB,EACrBpB,gBAAiBA,EACjBF,aAAcA,EACdK,YAfqB,SAASrkB,EAAIqC,OAClC,IAAI2pE,EAAavwD,GAASuwD,WAC1B3lD,GAAmB2lD,EAAYhsE,EAAGmS,GAClC1J,GAAWujE,EAAa,IAAM,GAAMhsE,EAAU,OAC9CyI,GAAWujE,EAAa,IAAM,GAAMhsE,EAAU,OAC9CyI,GAAWujE,EAAa,IAAM,GAAMhsE,EAAU,OAC9C+H,GAAUikE,EAAa,IAAM,GAAMhsE,EAAa,UAC3BkY,GAAarM,MAAM,KAAM,CAACmY,EAA4BC,EAAa+nD,EAAYloD,KAAW9jB,EAAEwkB,gBACnH,EAQET,WAAYA,GAGhB,CAKIkoD,CAA2B95D,EAAQ2R,EAAUC,EAAYC,EAAc,EAAG,SACnE,IAEC,CAEZ,EAkvCF,4BA/uCA,SAAsC4Q,GAClCR,GAAetkB,EAAa8kB,GAC9B,EA8uCF,iBAAoBrM,GACpB,YAxrCA,SAAsB2jD,EAAWC,GAC7B,IAAIltD,EAAU,EAOd,OANA2J,KAAgBzlB,SAAQ,SAASm6C,EAAQzjD,GACvC,IAAI8R,EAAMwgE,EAAcltD,EACxB5W,GAAW6jE,EAAc,EAAFryE,GAAO,GAAM8R,EAZ1C,SAAuBsC,EAAKxG,GACxB,IAAK,IAAI5N,EAAI,EAAGA,EAAIoU,EAAI5R,SAAUxC,EAChC8N,GAAQF,KAAW,GAAMwG,EAAIE,WAAWtU,GAG1C8N,GAAQF,GAAS,GAAM,CACzB,CAOI2kE,CAAc9uB,EAAQ3xC,GACtBsT,GAAWq+B,EAAOjhD,OAAS,CAC7B,IACO,CACT,EAgrCF,kBA7qCA,SAA4BgwE,EAAgBC,GACxC,IAAIzjD,EAAUD,KACdvgB,GAAUgkE,GAAiB,GAAMxjD,EAAQxsB,OACzC,IAAI4iB,EAAU,EAKd,OAJA4J,EAAQ1lB,SAAQ,SAASm6C,GACvBr+B,GAAWq+B,EAAOjhD,OAAS,CAC7B,IACAgM,GAAUikE,GAAoB,GAAMrtD,EAC7B,CACT,EAqqCF,KAAQ3K,GACR,SAnqCA,SAAmB62B,GACnB,IAEI,IAAIlU,EAASob,GAASK,gBAAgBvH,GAEtC,OADA/d,GAAGwL,MAAM3B,GACF,CACT,CAAE,MAAOj3B,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAOA,EAAE6qC,KACX,CACA,EA0pCA,cAxpCA,SAAwBM,EAAIohC,GAC5B,IAEI,IAIMt1C,EAASob,GAASK,gBAAgBvH,GAGlC7sC,EAAO24B,EAAO0F,IAAM,EACbvP,GAAG+R,MAAMlI,EAAOj8B,MAAQ,EACxBoyB,GAAGmS,OAAOtI,EAAOj8B,MAAQ,EACzB,EAMb,OAJA2M,GAAQ4kE,GAAO,GAAMjuE,EACrBuJ,GAAU0kE,EAAO,GAAK,GAXV,EAYXrgE,GAAU,CAACsgE,GAAgBrgE,GAdX,GAcoCC,KAAKC,IAAIF,KAAiB,EAAOA,GAAa,GAASC,KAAKE,MAAOH,GAAY,cAAkB,KAAWC,KAAKG,MAAMJ,OAAoBA,KAAgB,IAAI,cAAoB,EAAK,IAAKpE,GAAUwkE,EAAO,GAAK,GAAMrgE,GAAQ,GAAGnE,GAAUwkE,EAAO,IAAM,GAAMrgE,GAAQ,GAC7TA,GAAU,CAACugE,GAAsBtgE,GAdX,GAc0CC,KAAKC,IAAIF,KAAiB,EAAOA,GAAa,GAASC,KAAKE,MAAOH,GAAY,cAAkB,KAAWC,KAAKG,MAAMJ,OAAoBA,KAAgB,IAAI,cAAoB,EAAK,IAAKpE,GAAUwkE,EAAO,IAAM,GAAMrgE,GAAQ,GAAGnE,GAAUwkE,EAAO,IAAM,GAAMrgE,GAAQ,GACpU,CACT,CAAE,MAAOlM,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAOA,EAAE6qC,KACX,CACA,EAioCA,QA7mCA,SAAkBM,EAAIuhC,EAAKC,EAAQC,GACnC,IAEI,IACIttD,EArBR,SAAiB2X,EAAQy1C,EAAKC,EAAQzvC,GAElC,IADA,IAAIlsB,EAAM,EACDnX,EAAI,EAAGA,EAAI8yE,EAAQ9yE,IAAK,CAC/B,IAAI8R,EAAMtD,GAAUqkE,GAAM,GACtBx+D,EAAM7F,GAAWqkE,EAAM,GAAK,GAChCA,GAAO,EACP,IAAIn3B,EAAOnoB,GAAG6P,KAAKhG,EAAQtvB,GAAMgE,EAAKuC,EAAKgvB,GAC3C,GAAIqY,EAAO,EAAG,OAAQ,EAEtB,GADAvkC,GAAOukC,EACHA,EAAOrnC,EAAK,WACM,IAAXgvB,IACTA,GAAUqY,EAEd,CACA,OAAOvkC,CACT,CAMY67D,CADGx6B,GAASK,gBAAgBvH,GACZuhC,EAAKC,GAE/B,OADAtkE,GAAUukE,GAAO,GAAMttD,EAChB,CACT,CAAE,MAAOtf,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAOA,EAAE6qC,KACX,CACA,EAmmCA,QA7lCA,SAAkBM,EAAI2hC,EAAYC,EAAa1rC,EAAQ2rC,GACvD,IAEI,IAAI9vC,EAASntB,EAA2B+8D,EAAYC,GAAc,GAAIrG,MAAMxpC,GAAS,OAAO,GAC5F,IAAIjG,EAASob,GAASK,gBAAgBvH,GAItC,OAHA/d,GAAGuR,OAAO1H,EAAQiG,EAAQmE,GACzBn1B,GAAU,CAAC+qB,EAAOkK,WAAW,GAAGh1B,GAAW8qB,EAAOkK,UAAY/0B,KAAKC,IAAIF,KAAiB,EAAOA,GAAa,GAASC,KAAKE,MAAOH,GAAY,cAAkB,KAAWC,KAAKG,MAAMJ,OAAoBA,KAAgB,IAAI,cAAoB,EAAK,IAAKpE,GAASilE,GAAY,GAAM9gE,GAAQ,GAAGnE,GAAUilE,EAAY,GAAK,GAAM9gE,GAAQ,GACvU+qB,EAAO8W,UAAuB,IAAX7Q,GAA2B,IAAXmE,IAAcpK,EAAO8W,SAAW,MAChE,CACT,CAAE,MAAO/tC,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAOA,EAAE6qC,KACX,CACA,EAilCA,SA9jCA,SAAmBM,EAAIuhC,EAAKC,EAAQC,GACpC,IAEI,IACIttD,EApBR,SAAkB2X,EAAQy1C,EAAKC,EAAQzvC,GAEnC,IADA,IAAIlsB,EAAM,EACDnX,EAAI,EAAGA,EAAI8yE,EAAQ9yE,IAAK,CAC/B,IAAI8R,EAAMtD,GAAUqkE,GAAM,GACtBx+D,EAAM7F,GAAWqkE,EAAM,GAAK,GAChCA,GAAO,EACP,IAAIn3B,EAAOnoB,GAAGiQ,MAAMpG,EAAQtvB,GAAMgE,EAAKuC,EAAKgvB,GAC5C,GAAIqY,EAAO,EAAG,OAAQ,EACtBvkC,GAAOukC,OACe,IAAXrY,IACTA,GAAUqY,EAEd,CACA,OAAOvkC,CACT,CAMYi8D,CADG56B,GAASK,gBAAgBvH,GACXuhC,EAAKC,GAEhC,OADAtkE,GAAUukE,GAAO,GAAMttD,EAChB,CACT,CAAE,MAAOtf,GACT,QAAiB,IAANotB,IAAkC,eAAXptB,EAAE5F,KAAwB,MAAM4F,EAClE,OAAOA,EAAE6qC,KACX,CACA,EAojCA,YAAe/qB,GACf,SAAYoJ,GACZ,WAtuBA,SAAqBttB,EAAGutB,EAASvG,EAAQwG,GACrC,OAAOF,GAAUttB,EAAGutB,EAASvG,EAAQwG,EACvC,GA6uBA28C,IAvxVJ,WAUE,SAASmH,EAAgBhiE,GACvB,IAAIvR,EAAUuR,EAASvR,QAevB,OAbAA,EAAU8uB,GAASk7C,sBAAsBhqE,GAEzC+N,GAAY,IAAI/N,EAEhB6N,GAAaE,GAAY,IAAU,OACnCH,IAtOFimB,GAAWM,QA0OCpmB,GAAY,IAAqB,mBAE3CsB,IAEOrP,CACT,CAzBA,IAhCwBqR,EAAQV,EAAYC,EAASnB,EAgCjD8V,EAAO,CACT,IAAOonD,GACP,uBAA0BA,IA0C5B,GAjBAx9D,IAiBIpB,GAAwB,gBAE1B,IACE,OAAOA,GAAwB,gBAAEwX,EAAMguD,EACzC,CAAE,MAAMltE,GACNsJ,GAAI,sDAAwDtJ,GAE1D2J,GAAmB3J,EACvB,EApFsBgL,EAwFPb,GAxFeG,EAwFHJ,GAxFeK,EAwFC2U,EAxFQ9V,EA8DrD,SAAoCyW,GAKlCqtD,EAAgBrtD,EAAiB,SACnC,EAnEK7U,GAC0C,mBAApCvB,YAAY0jE,sBAClBvjE,EAAUU,IACK,mBAATK,MAoBFN,EAAuBC,EAAYC,EAASnB,GAnB5CuB,MAAML,EAAY,CAAEM,YAAa,gBAAiBvF,MAAMwF,GAMhDpB,YAAY0jE,qBAAqBtiE,EAAUN,GAE1ClF,KACZ+D,GACA,SAAS+B,GAKP,OAFA7B,GAAI,kCAAoC6B,GACxC7B,GAAI,6CACGe,EAAuBC,EAAYC,EAASnB,EACrD,OAmEyE0B,MAAMnB,GAEvF,CAotVUyjE,GAOE,WACV,OAAQrH,GAAQr+D,GAAY,IAAQ,MAAGmE,MAAM,KAAM1N,UACrD,GAGI8S,GAAU,WACZ,OAAQA,GAAUvJ,GAAY,IAAU,QAAGmE,MAAM,KAAM1N,UACzD,EAGIooE,GAAoB,WACtB,OAAQA,GAAoB7+D,GAAY,IAAoB,kBAAGmE,MAAM,KAAM1N,UAC7E,EAuBI0vB,IApBsBnmB,GAA4B,oBAAI,WACxD,OAA8BA,GAA4B,oBAAIA,GAAY,IAAsB,oBAAGmE,MAAM,KAAM1N,UACjH,EAGyBuJ,GAA2B,mBAAI,WACtD,OAA6BA,GAA2B,mBAAIA,GAAY,IAAqB,mBAAGmE,MAAM,KAAM1N,UAC9G,EAG2BuJ,GAA6B,qBAAI,WAC1D,OAA+BA,GAA6B,qBAAIA,GAAY,IAAuB,qBAAGmE,MAAM,KAAM1N,UACpH,EAGiBuJ,GAAmB,WAAI,WACtC,OAAqBA,GAAmB,WAAIA,GAAY,IAAa,WAAGmE,MAAM,KAAM1N,UACtF,EAGYuJ,GAAc,MAAI,WAC5B,OAAQmmB,GAAQnmB,GAAc,MAAIA,GAAY,IAAoB,kBAAGmE,MAAM,KAAM1N,UACnF,GAkBI+W,GAAY,WACd,OAAQA,GAAYxN,GAAY,IAAa,WAAGmE,MAAM,KAAM1N,UAC9D,EAGIgX,GAAe,WACjB,OAAQA,GAAezN,GAAY,IAAgB,cAAGmE,MAAM,KAAM1N,UACpE,EAGI8X,GAAa,WACf,OAAQA,GAAavO,GAAY,IAAc,YAAGmE,MAAM,KAAM1N,UAChE,EAQIsP,GAAyB,WAC3B,OAAQA,GAAyB/F,GAAY,IAAyB,uBAAGmE,MAAM,KAAM1N,UACvF,EAiCI+Z,IA9BaxQ,GAAmB,WAAI,WACtC,OAAqBA,GAAmB,WAAIA,GAAY,IAAc,YAAGmE,MAAM,KAAM1N,UACvF,EAGiBuJ,GAAmB,WAAI,WACtC,OAAqBA,GAAmB,WAAIA,GAAY,IAAc,YAAGmE,MAAM,KAAM1N,UACvF,EAGkBuJ,GAAoB,YAAI,WACxC,OAAsBA,GAAoB,YAAIA,GAAY,IAAe,aAAGmE,MAAM,KAAM1N,UAC1F,EAGkBuJ,GAAoB,YAAI,WACxC,OAAsBA,GAAoB,YAAIA,GAAY,IAAe,aAAGmE,MAAM,KAAM1N,UAC1F,EAGoBuJ,GAAsB,cAAI,WAC5C,OAAwBA,GAAsB,cAAIA,GAAY,IAAiB,eAAGmE,MAAM,KAAM1N,UAChG,EAGkBuJ,GAAoB,YAAI,WACxC,OAAsBA,GAAoB,YAAIA,GAAY,IAAe,aAAGmE,MAAM,KAAM1N,UAC1F,EAGmBuJ,GAAqB,aAAI,WAC1C,OAAQwQ,GAAexQ,GAAqB,aAAIA,GAAY,IAAgB,cAAGmE,MAAM,KAAM1N,UAC7F,GAaIotE,IAVe7jE,GAAqB,aAAI,WAC1C,OAAuBA,GAAqB,aAAIA,GAAY,IAAgB,cAAGmE,MAAM,KAAM1N,UAC7F,EAGmBuJ,GAAqB,aAAI,WAC1C,OAAuBA,GAAqB,aAAIA,GAAY,IAAgB,cAAGmE,MAAM,KAAM1N,UAC7F,EAGgBuJ,GAAkB,UAAI,WACpC,OAAQ6jE,GAAY7jE,GAAkB,UAAIA,GAAY,IAAa,WAAGmE,MAAM,KAAM1N,UACpF,GAoOI0nE,IAjOiBn+D,GAAuB,eAAI,WAC9C,OAAyBA,GAAuB,eAAIA,GAAY,IAAkB,gBAAGmE,MAAM,KAAM1N,UACnG,EAGoBuJ,GAAsB,cAAI,WAC5C,OAAwBA,GAAsB,cAAIA,GAAY,IAAiB,eAAGmE,MAAM,KAAM1N,UAChG,EAGmBuJ,GAAqB,aAAI,WAC1C,OAAuBA,GAAqB,aAAIA,GAAY,IAAgB,cAAGmE,MAAM,KAAM1N,UAC7F,EAGoBuJ,GAAsB,cAAI,WAC5C,OAAwBA,GAAsB,cAAIA,GAAY,IAAiB,eAAGmE,MAAM,KAAM1N,UAChG,EAGoBuJ,GAAsB,cAAI,WAC5C,OAAwBA,GAAsB,cAAIA,GAAY,IAAiB,eAAGmE,MAAM,KAAM1N,UAChG,EAGiBuJ,GAAmB,WAAI,WACtC,OAAqBA,GAAmB,WAAIA,GAAY,IAAc,YAAGmE,MAAM,KAAM1N,UACvF,EAGyBuJ,GAA2B,mBAAI,WACtD,OAA6BA,GAA2B,mBAAIA,GAAY,IAAsB,oBAAGmE,MAAM,KAAM1N,UAC/G,EAGmBuJ,GAAqB,aAAI,WAC1C,OAAuBA,GAAqB,aAAIA,GAAY,IAAgB,cAAGmE,MAAM,KAAM1N,UAC7F,EAGuBuJ,GAAyB,iBAAI,WAClD,OAA2BA,GAAyB,iBAAIA,GAAY,IAAoB,kBAAGmE,MAAM,KAAM1N,UACzG,EAGkBuJ,GAAoB,YAAI,WACxC,OAAsBA,GAAoB,YAAIA,GAAY,IAAe,aAAGmE,MAAM,KAAM1N,UAC1F,EAGqBuJ,GAAuB,eAAI,WAC9C,OAAyBA,GAAuB,eAAIA,GAAY,IAAkB,gBAAGmE,MAAM,KAAM1N,UACnG,EAGmBuJ,GAAqB,aAAI,WAC1C,OAAuBA,GAAqB,aAAIA,GAAY,IAAgB,cAAGmE,MAAM,KAAM1N,UAC7F,EAGkBuJ,GAAoB,YAAI,WACxC,OAAsBA,GAAoB,YAAIA,GAAY,IAAe,aAAGmE,MAAM,KAAM1N,UAC1F,EAGsBuJ,GAAwB,gBAAI,WAChD,OAA0BA,GAAwB,gBAAIA,GAAY,IAAmB,iBAAGmE,MAAM,KAAM1N,UACtG,EAGsBuJ,GAAwB,gBAAI,WAChD,OAA0BA,GAAwB,gBAAIA,GAAY,IAAmB,iBAAGmE,MAAM,KAAM1N,UACtG,EAGmBuJ,GAAqB,aAAI,WAC1C,OAAuBA,GAAqB,aAAIA,GAAY,IAAgB,cAAGmE,MAAM,KAAM1N,UAC7F,EAGiBuJ,GAAmB,WAAI,WACtC,OAAqBA,GAAmB,WAAIA,GAAY,IAAc,YAAGmE,MAAM,KAAM1N,UACvF,EAGqBuJ,GAAuB,eAAI,WAC9C,OAAyBA,GAAuB,eAAIA,GAAY,IAAkB,gBAAGmE,MAAM,KAAM1N,UACnG,EAGgBuJ,GAAkB,UAAI,WACpC,OAAoBA,GAAkB,UAAIA,GAAY,IAAa,WAAGmE,MAAM,KAAM1N,UACpF,EAGwBuJ,GAA0B,kBAAI,WACpD,OAA4BA,GAA0B,kBAAIA,GAAY,IAAqB,mBAAGmE,MAAM,KAAM1N,UAC5G,EAGkBuJ,GAAoB,YAAI,WACxC,OAAsBA,GAAoB,YAAIA,GAAY,IAAe,aAAGmE,MAAM,KAAM1N,UAC1F,EAGmBuJ,GAAqB,aAAI,WAC1C,OAAuBA,GAAqB,aAAIA,GAAY,IAAgB,cAAGmE,MAAM,KAAM1N,UAC7F,EAGoBuJ,GAAsB,cAAI,WAC5C,OAAwBA,GAAsB,cAAIA,GAAY,IAAiB,eAAGmE,MAAM,KAAM1N,UAChG,EAG0BuJ,GAA4B,oBAAI,WACxD,OAA8BA,GAA4B,oBAAIA,GAAY,IAAuB,qBAAGmE,MAAM,KAAM1N,UAClH,EAG2BuJ,GAA6B,qBAAI,WAC1D,OAA+BA,GAA6B,qBAAIA,GAAY,IAAwB,sBAAGmE,MAAM,KAAM1N,UACrH,EAGoBuJ,GAAsB,cAAI,WAC5C,OAAwBA,GAAsB,cAAIA,GAAY,IAAiB,eAAGmE,MAAM,KAAM1N,UAChG,EAGqBuJ,GAAuB,eAAI,WAC9C,OAAyBA,GAAuB,eAAIA,GAAY,IAAkB,gBAAGmE,MAAM,KAAM1N,UACnG,EAGuBuJ,GAAyB,iBAAI,WAClD,OAA2BA,GAAyB,iBAAIA,GAAY,IAAoB,kBAAGmE,MAAM,KAAM1N,UACzG,EAG0BuJ,GAA4B,oBAAI,WACxD,OAA8BA,GAA4B,oBAAIA,GAAY,IAAuB,qBAAGmE,MAAM,KAAM1N,UAClH,EAGwBuJ,GAA0B,kBAAI,WACpD,OAA4BA,GAA0B,kBAAIA,GAAY,IAAqB,mBAAGmE,MAAM,KAAM1N,UAC5G,EAGmBuJ,GAAqB,aAAI,WAC1C,OAAuBA,GAAqB,aAAIA,GAAY,IAAgB,cAAGmE,MAAM,KAAM1N,UAC7F,EAGoBuJ,GAAsB,cAAI,WAC5C,OAAwBA,GAAsB,cAAIA,GAAY,IAAiB,eAAGmE,MAAM,KAAM1N,UAChG,EAGsBuJ,GAAwB,gBAAI,WAChD,OAA0BA,GAAwB,gBAAIA,GAAY,IAAmB,iBAAGmE,MAAM,KAAM1N,UACtG,EAGkBuJ,GAAoB,YAAI,WACxC,OAAsBA,GAAoB,YAAIA,GAAY,IAAe,aAAGmE,MAAM,KAAM1N,UAC1F,EAGqBuJ,GAAuB,eAAI,WAC9C,OAAyBA,GAAuB,eAAIA,GAAY,IAAkB,gBAAGmE,MAAM,KAAM1N,UACnG,EAGsBuJ,GAAwB,gBAAI,WAChD,OAA0BA,GAAwB,gBAAIA,GAAY,IAAmB,iBAAGmE,MAAM,KAAM1N,UACtG,EAGqBuJ,GAAuB,eAAI,WAC9C,OAAyBA,GAAuB,eAAIA,GAAY,IAAkB,gBAAGmE,MAAM,KAAM1N,UACnG,EAGoBuJ,GAAsB,cAAI,WAC5C,OAAwBA,GAAsB,cAAIA,GAAY,IAAiB,eAAGmE,MAAM,KAAM1N,UAChG,EAGqBuJ,GAAuB,eAAI,WAC9C,OAAyBA,GAAuB,eAAIA,GAAY,IAAkB,gBAAGmE,MAAM,KAAM1N,UACnG,EAGsBuJ,GAAwB,gBAAI,WAChD,OAA0BA,GAAwB,gBAAIA,GAAY,IAAmB,iBAAGmE,MAAM,KAAM1N,UACtG,EAGqBuJ,GAAuB,eAAI,WAC9C,OAAyBA,GAAuB,eAAIA,GAAY,IAAkB,gBAAGmE,MAAM,KAAM1N,UACnG,EAGqBuJ,GAAuB,eAAI,WAC9C,OAAyBA,GAAuB,eAAIA,GAAY,IAAkB,gBAAGmE,MAAM,KAAM1N,UACnG,EAGsBuJ,GAAwB,gBAAI,WAChD,OAA0BA,GAAwB,gBAAIA,GAAY,IAAmB,iBAAGmE,MAAM,KAAM1N,UACtG,EAGuBuJ,GAAyB,iBAAI,WAClD,OAA2BA,GAAyB,iBAAIA,GAAY,IAAoB,kBAAGmE,MAAM,KAAM1N,UACzG,EAGuBuJ,GAAyB,iBAAI,WAClD,OAA2BA,GAAyB,iBAAIA,GAAY,IAAoB,kBAAGmE,MAAM,KAAM1N,UACzG,EAG6B,WAC3B,OAAQ0nE,GAAyBn+D,GAAY,IAAyB,uBAAGmE,MAAM,KAAM1N,UACvF,GAGIymE,GAAwB,WAC1B,OAAQA,GAAwBl9D,GAAY,IAAwB,sBAAGmE,MAAM,KAAM1N,UACrF,EAGIunE,GAAyB,WAC3B,OAAQA,GAAyBh+D,GAAY,IAAyB,uBAAGmE,MAAM,KAAM1N,UACvF,EAGI2nE,GAAwB,WAC1B,OAAQA,GAAwBp+D,GAAY,IAAwB,sBAAGmE,MAAM,KAAM1N,UACrF,EAqGA,GA9FAuJ,GAAyB,iBAAIoB,EAC7BpB,GAA4B,oBAAIsB,EAChCtB,GAAsB,cAAI0lB,GAAGqa,WAC7B//B,GAA0B,kBAAI0lB,GAAG6iB,eACjCvoC,GAA+B,uBAAI0lB,GAAGwkB,oBACtClqC,GAA0B,kBAAI0lB,GAAGkjB,eACjC5oC,GAAwB,gBAAI0lB,GAAG2hB,aAC/BrnC,GAAkB,UAAI0lB,GAAGmR,OACzB72B,GAAY,IAAI68B,GAKhBp7B,GAAwB,SAASkkE,IAE1BlgD,IAAWH,KACXG,KAAWhkB,GAAwBkkE,EAC1C,EA6EI3lE,GAAgB,QAElB,IADgC,mBAArBA,GAAgB,UAAiBA,GAAgB,QAAI,CAACA,GAAgB,UAC1EA,GAAgB,QAAErL,OAAS,GAChCqL,GAAgB,QAAEo7B,KAAlBp7B,GAKJ,IAAIimB,IAAe,EAUjB,OAREjmB,GAAqB,eAAGimB,IAAe,GAE3CX,KAMSjmB,EAAiBumE,KAC1B,GAIevmE,MC/nYf,MAAMwmE,GAAc,gBACdC,GAAiB,aAYjBjzB,GAAuB,CAC5BkzB,YAAa,iBAGd,MAAMC,GAEL1uE,YAAYu7C,GAAsBozB,EAAA,gBA2GLC,EAAO,CAAC,IAAED,EAAA,sBA1GtCruE,KAAKi7C,OAASA,CACf,CAEQhqB,MAAMjlB,GACbuuB,MAAMvuB,GACNklB,QAAQD,MAAMjlB,GACdklB,QAAQq9C,OACT,CAEAC,OAAOC,EAAiBC,GACvB1uE,KAAK2uE,SAASnzE,MAAQ,CAAEizE,QAASA,EAASC,OAAQA,EACnD,CAEAE,gBAAgBjkE,GAEf,IAAIkkE,EAEJ,IAEC,GADAA,QAAiB7uE,KAAK6yB,gBACjBg8C,EAEJ,YADA7uE,KAAKixB,MAAM,0BAGb,CAAE,MAAOvwB,GAAG,IAAAouE,EAGX,OAFA9uE,KAAKixB,MAAMvwB,QACH,QAARouE,EAAAD,SAAQ,IAAAC,GAARA,EAAUx1C,QAEX,CAEA,MAAMy1C,EAAS,IAAIjpE,SAA4C,CAACE,EAASkpB,KAExE,IAAI8/C,EAAS,IAAIC,WACjBD,EAAOE,kBAAkBvkE,GAEzBqkE,EAAO7+C,OAAUzvB,IAEhB,MACMo/B,EAAW,IAAIl3B,WADRlI,EAAEmS,OAAO0N,QAGhB4uD,EAAuB,KAAhBrvC,EAAS,GAEhBsvC,EAAQP,EAAS97C,YAAY,CAAC,aAAc,aAC5C0C,EAAQ,GAAEz1B,KAAKi7C,OAAOkzB,eAAexjE,EAAK7P,OACjCs0E,EAAMp8C,YAAY,aAAaqB,IAAI,CAAE3X,UAAW,IAAI/I,KAAQjY,KAAM,MAAOokC,SAAUA,GAAYrK,GAEvGvF,QAAWxvB,KACjBwuB,EAAO,yBAAyB,EAGjCkgD,EAAMrqC,WAAcrkC,KACnBsF,EAAQ,CAAEyoE,QAAS9jE,EAAK7P,KAAMq0E,KAAMA,GAAO,CAC3C,EAGFH,EAAO9+C,QAAWxvB,KACjBwuB,EAAO,oBAAoB,CAC3B,IAIF,IAAI,IAAAmgD,EACH,MAAMC,QAAYP,EACV,QAARM,EAAAR,SAAQ,IAAAQ,GAARA,EAAU/1C,QACVu1C,OAAWjnE,EACX5H,KAAKwuE,OAAOc,EAAIb,QAASa,EAAIH,KAC9B,CAAE,MAAOzuE,GACRV,KAAKixB,MAAMvwB,EACZ,CAAE,QAAQ,IAAA6uE,EACD,QAARA,EAAAV,SAAQ,IAAAU,GAARA,EAAUj2C,OACX,CAED,CAEA,qBAEC,OAAO,IAAIxzB,SAAiC,CAACE,EAASkpB,KAGrD,GAAsB,oBAAXqC,OAAwB,CAClC,MAAMi+C,EAAYj+C,OAAOF,UAAU3B,KAAK1vB,KAAKi7C,OAAOkzB,aAEpDqB,EAAUt/C,QAAWxvB,KACpBwuB,EAAQ,2BAA0BlvB,KAAKi7C,OAAOkzB,cAAc,EAG7DqB,EAAUl9C,gBAAmB5xB,IAE5BwwB,QAAQqE,IAAI,kBAEZ,MAAMhD,EAAM7xB,EAAEmS,OAA4B0N,OAC1C,IAAKgS,EAAGC,iBAAiBC,SAAS,aAAc,CAC/CvB,QAAQqE,IAAI,mCACEhD,EAAGI,kBAAkB,YAAa,CAAC,GAC3CsQ,YAAY,YAAa,YAAa,CAAEC,QAAQ,GACvD,GAGDssC,EAAU58C,UAAalyB,IACtBwwB,QAAQqE,IAAI,WAEZvvB,EADYtF,EAAEmS,OAA4B0N,OAC/B,CAEb,IAEF,CAMWkvD,uBAIV,OAHKrB,GAAWxiE,WACfwiE,GAAWxiE,SAAW,IAAIwiE,GAAWnzB,KAE/BmzB,GAAWxiE,QACnB,EAGAyiE,EAzHKD,GAAU,mBAiIhB,MAAMsB,GAAsB,CAE3B,CAAE50E,KAAM,mCAAoC2+B,MAAO,gCAAiCgG,KAAM,mFAC1F,CAAE3kC,KAAM,oBAAqB2+B,MAAO,uCAAwCgG,KAAM,gFAClF,CAAE3kC,KAAM,mBAAoB2+B,MAAO,qCAAsCgG,KAAM,8EAG1EkwC,GAAaA,KAElB,MAAMC,EAAYF,GAASpsC,KAAIjnC,GACvBE,YAAA,KAAG44B,KAAM94B,EAAEojC,KAAM5sB,OAAO,SAASzQ,MAAM,8EAC7C7F,YAAA,OAAK6F,MAAO,CAAE24C,QAAS,OAAQ80B,KAAM,IACpCtzE,YAAA,OAAK6F,MAAO,CAAEgU,WAAY,GAAIC,cAAe,EAAGy5D,SAAU,GAAIC,WAAY,MAAOC,WAAY,WAAa3zE,EAAEvB,OAE7GyB,YAAA,OAAK6F,MAAO,CAAE24C,QAAS,OAAQlZ,SAAU,WAAYouC,SAAU,EAAGp5D,MAAO,SACxEta,YAAA,OAAK6F,MAAM,4DAA4DuF,IAAKtL,EAAEo9B,YAKjF,OAAOl9B,YAAA,OAAK6F,MAAO,CAAE24C,QAAS,OAAQlkC,MAAO,OAAQq5D,SAAU,SAAUC,QAAS,GAAIj6D,YAAa,KAClG3Z,YAAA,OAAK6F,MAAO,CAAE24C,QAAS,OAAQk1B,SAAU,IACxC1zE,YAAA,OAAK6F,MAAO,CAAE24C,QAAS,OAAQlkC,MAAO,QACrCta,YAAA,OAAK6F,MAAO,CAAE24C,QAAS,OAAQq1B,cAAe,SAAUC,eAAgB,UACvE9zE,YAAA,OAAK6F,MAAO,CAAE24C,QAAS,SACtBx+C,YAAA,OAAK6F,MAAO,CAAE0tE,SAAU,GAAIE,WAAY,SAAU35D,cAAe,GAAIQ,MAAO,MAAO,mEAIpFta,YAAA,OAAK6F,MAAO,CAAE24C,QAAS,OAAQu1B,WAAY,WAC1C/zE,YAAA,UAAQ6F,MAAM,sDAAsDmuE,QAASA,KAC5EnC,GAAWqB,UAAUjB,OAAOP,IAAa,EAAK,GAC5C,kBAEJ1xE,YAAA,OAAK6F,MAAO,CAAEgU,WAAY,MAC1B7Z,YAAA,OAAK6F,MAAO,CAAE24C,QAAS,OAAQu1B,WAAY,WAC1C/zE,YAAA,UAAQ6F,MAAM,sDAAsDmuE,QAASA,KAC5EnC,GAAWqB,UAAUjB,OAAON,IAAgB,EAAK,GAC/C,yBAEJ3xE,YAAA,OAAK6F,MAAO,CAAEgU,WAAY,MAC1B7Z,YAAA,OAAK6F,MAAO,CAAE24C,QAAS,OAAQu1B,WAAY,WAC1C/zE,YAAA,UAAQ6F,MAAM,sDAAsDmuE,QAASA,KAC5EjzE,SAASC,eAAe,cAAcizE,OAAO,GAC3C,gBAKLj0E,YAAA,SAAO0a,GAAG,aAAa7U,MAAM,eAAepD,KAAK,OAAOyxE,SAAW/vE,IAClE,MAAMwnC,EAASxnC,EAAEmS,OAAeq1B,MAChC,GAAqB,IAAjBA,EAAMnrC,OAGT,OAFA2D,EAAEwkB,sBACFqV,MAAM,mCAIP,MAAM5vB,EAAOu9B,EAAM,GACnB,IAAKv9B,EAAK7P,KAAKyH,cAAcoK,SAAS,QAGrC,OAFAjM,EAAEwkB,sBACFqV,MAAM,mCAIY6zC,GAAWqB,UACnBiB,UAAU/lE,EAAK,MAK7BpO,YAAA,OAAK6F,MAAO,CAAE24C,QAAS,OAAQk1B,SAAU,EAAGp5D,MAAO,MAAOu5D,cAAe,WACxE7zE,YAAA,OAAK6F,MAAO,CAAE24C,QAAS,OAAQ80B,KAAM,WAAYhuC,SAAU,aAC1DtlC,YAAA,OAAK6F,MAAO,CAAEy/B,SAAU,WAAYiuC,SAAU,GAAIE,WAAY,IAAKD,WAAY,QAAS,uBAEzFxzE,YAAA,OAAK6F,MAAO,CAAE24C,QAAS,OAAQ41B,WAAY,EAAGV,SAAU,EAAGG,cAAe,WACxER,IAGE,EAIDgB,GAAcA,KAEnB,MAAMC,EAAYC,EAA0B,MACtCC,EAAqBD,EAAuB,OAC3CztE,EAAOsC,GAAYqrE,EAA+B,CAAEC,SAAS,IAC9DtC,EAAWP,GAAWqB,UAAUd,SAASnzE,MAGzC04C,EAAoBA,KACzB,MACMg9B,GADSL,aAAS,EAATA,EAAWhxE,WACFvC,SAASqqB,mBAEjCvf,OAAO+oE,oBAAoBD,EAAO,EAAI,EAAE,EAoIzC,OAzHAE,GAAU,KAET,MAAMr6D,EAAS85D,aAAS,EAATA,EAAWhxE,QACpB03C,EAAkBw5B,aAAkB,EAAlBA,EAAoBlxE,QAEtC4uE,EAAUE,EAASF,QAEzB,IAAKl3B,EACJ,KAAM,iCAGP,IAAKxgC,EACJ,KAAM,uBAGP,MAAMs6D,EAAiBA,KACtB,MAAM9wE,EAAIuM,KAAKE,MAAMuqC,EAAgB+5B,aAC/B/0E,EAAIuQ,KAAKE,MAAMuqC,EAAgBg6B,cACrCrgD,QAAQqE,IAAI,sBAAuBh1B,EAAGhE,GACtCwa,EAAO3U,MAAMyU,MAAS,GAAEtW,MACxBwW,EAAO3U,MAAM0U,OAAU,GAAEva,MACzBwa,EAAOF,MAAQtW,EACfwW,EAAOD,OAASva,CAAC,EAIlB80E,IAEA,MAAMG,EAAaA,KAClBH,IACAjpE,OAAOqpE,sBAAsB,EAK9B,IAAIC,EAFJp0E,SAASmF,iBAAiB,oBAAqByxC,GAAmB,GAGlE3iB,OAAO9uB,iBAAiB,UAAW4zC,KAElC9vC,aAAamrE,GACbA,EAAgBzrE,WAAWurE,EAAY,IAAI,IAI5Cz6D,EAAOtU,iBAAiB,oBAAoB,SAAU/B,GAAK65B,MAAM,qDAAsD75B,EAAEwkB,gBAAkB,IAAG,GAG9I,IAAIiqD,EAAOlB,GACPU,EAASF,UAAYP,KACxBiB,EAAOjB,IAGJS,EAASF,UAAYU,GAAQR,EAASD,SACzCS,EAAQ,gBAAeV,KAGxB,MAAMniE,EAAO,CAAC,QAAS,eAAgB,YAAa,SAAUyK,EAAOu6D,YAAYpqE,WAAY,UAAW6P,EAAOw6D,aAAarqE,WAAY,QAASioE,GA2DjJ,OAzDIA,IAASjB,IACZ5hE,EAAKhM,KAAS,cAAe,IAAK,cAAe,SAAU,IAAK,QAAS,IAAK,QAAS,SAGnFquE,EAASD,SACbpiE,EAAKhM,KAAK,SACVgM,EAAKhM,KAAM,gBAAemuE,MAG3BhnE,GAAiB,CAChBmuB,aAAcA,KACb1E,QAAQqE,IAAI,cAEPjpB,EAAKqlE,MAAMxwE,GAAKA,EAAEqJ,WAAW,YACjCpC,OAAOwpE,mBAAmB,GAG3BjsE,EAAQksE,IAAC,CAAC,EAAIxuE,GAAK,IAAE4tE,SAAS,IAAQ,EAEvCz6C,aAAcA,OASds7C,cAAeA,OAEfC,eAAgBA,OAEhBlzE,UAAWyN,EACX0lE,QAASA,KACR9gD,QAAQqE,IAAI,WAAW,EAExBtG,OAAQ,GACRF,QAAS,GACTkjD,MACQ,SAAUlqE,GAChBA,EAAO3G,MAAMjF,UAAUqG,MAAM9H,KAAKmE,WAAWy8B,KAAK,KAClDpK,QAAQqE,IAAIxtB,EACb,EAEDmqE,SAAU,SAAUnqE,GACnBA,EAAO3G,MAAMjF,UAAUqG,MAAM9H,KAAKmE,WAAWy8B,KAAK,KAClDpK,QAAQD,MAAMlpB,EACf,EACAgP,OAAQA,EACRo7D,UAAW,SAAUpqE,GAAQmpB,QAAQqE,IAAI,SAAUxtB,EAAM,EACzDqqE,uBAAwB,SAAU/qD,GAAQ6J,QAAQqE,IAAIlO,EAAM,IAC1DthB,MAAKzL,IACP+3E,WAAWjqE,OAAS9N,EACpBA,EAAOyc,OAASA,CAAM,IAIhB,MAEN,GAEC,IAGIxa,YAAA,OAAK0a,GAAG,mBAAmB/X,IAAK6xE,EAAoB3uE,MAAO,CAAE24C,QAAS,OAAQlkC,MAAO,OAAQC,OAAQ,OAAQ+qB,SAAU,aAC7HtlC,YAAA,UAAQ0a,GAAG,SAAS/X,IAAK2xE,EAAWzuE,MAAO,CAAEkwE,WAAYjvE,EAAM4tE,QAAU,SAAW,WACnFV,QAAS3B,UAER,KADaiC,EAAUhxE,UAAYvC,SAASqqB,oBAE3C,IAAI,IAAA4qD,QACoB,QAAvBA,EAAM1B,EAAUhxE,eAAO,IAAA0yE,OAAA,EAAjBA,EAAmBh2D,qBAC1B,CAAE,MAAOvS,GACRknB,QAAQD,MAAMjnB,EACf,CACD,MAGC3G,EAAM4tE,SAAW10E,YAAA,OAAK6F,MAAO,CAAEy/B,SAAU,WAAYkZ,QAAS,OAAQlkC,MAAO,OAAQC,OAAQ,OAAQu5D,eAAgB,SAAUC,WAAY,WAC7I/zE,YAAA,OAAKi2E,MAAOpwE,IACX7F,YAAA,QAAM6F,MAAM,SAAQ,KACpB7F,YAAA,QAAM6F,MAAM,SAAQ,KACpB7F,YAAA,QAAM6F,MAAM,SAAQ,KACpB7F,YAAA,QAAM6F,MAAM,SAAQ,KACpB7F,YAAA,QAAM6F,MAAM,SAAQ,KACpB7F,YAAA,QAAM6F,MAAM,SAAQ,KACpB7F,YAAA,QAAM6F,MAAM,SAAQ,KACpB7F,YAAA,QAAM6F,MAAM,SAAQ,KACpB7F,YAAA,QAAM6F,MAAM,SAAQ,KACpB7F,YAAA,QAAM6F,MAAM,UAAS,OAIlB,EA4BQqwE,OAbAA,KAEd,MACM9D,EADaP,GAAWqB,UACFd,SAASnzE,MAErC,OACCe,YAAA,OAAK6F,MAAO,CAAE24C,QAAS,OAAQlkC,MAAO,OAAQw5D,eAAgB,YAC3D1B,EAASF,SAAWlyE,YAACozE,GAAU,QAC9BhB,EAASF,SAAWlyE,YAACq0E,GAAW,MAC9B,EC3aO8B,UCCHA,IACXn2E,YAAA,OAAK0a,GAAG,OACP1a,YAAA,YACCA,YAACk2E,GAAM,O","file":"bundle.b9a90.esm.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Pq/i\");\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {import('./internal').Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function(p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","function cycleDetected(): never {\n\tthrow new Error(\"Cycle detected\");\n}\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\nfunction batch<T>(callback: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn callback();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\tpeek(): T;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\tconst signal = this;\n\treturn effect(function (this: Effect) {\n\t\tconst value = signal.value;\n\t\tconst flag = this._flags & TRACKING;\n\t\tthis._flags &= ~TRACKING;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tthis._flags |= flag;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.peek = function () {\n\treturn this._value;\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget() {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tcycleDetected();\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\nfunction signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_compute: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(compute: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, compute: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._compute = compute;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._compute();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when the it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nComputed.prototype.peek = function () {\n\tif (!this._refresh()) {\n\t\tcycleDetected();\n\t}\n\tif (this._flags & HAS_ERROR) {\n\t\tthrow this._value;\n\t}\n\treturn this._value;\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget() {\n\t\tif (this._flags & RUNNING) {\n\t\t\tcycleDetected();\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\ninterface ReadonlySignal<T = any> extends Signal<T> {\n\treadonly value: T;\n}\n\nfunction computed<T>(compute: () => T): ReadonlySignal<T> {\n\treturn new Computed(compute);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._compute = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ndeclare class Effect {\n\t_compute?: () => unknown;\n\t_cleanup?: unknown;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(compute: () => void);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, compute: () => void) {\n\tthis._compute = compute;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (!(this._flags & DISPOSED) && this._compute !== undefined) {\n\t\t\tthis._cleanup = this._compute();\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tcycleDetected();\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nfunction effect(compute: () => unknown): () => void {\n\tconst effect = new Effect(compute);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { signal, computed, effect, batch, Signal, ReadonlySignal };\n","import { options, Component } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport { signal, computed, batch, effect, Signal, type ReadonlySignal };\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction Text(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst s = useMemo(() => {\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Replace this component's vdom updater with a direct text one:\n\t\tthis._updater!._callback = () => {\n\t\t\t(this.base as Text).data = s.peek();\n\t\t};\n\n\t\treturn computed(() => {\n\t\t\tlet data = currentSignal.value;\n\t\t\tlet s = data.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\t}, []);\n\n\treturn s.value;\n}\nText.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: Text },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(() => {\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// let reason;\n\t// if (!hasSignals && !hasComputeds.has(this)) {\n\t// \treason = \"no signals or computeds\";\n\t// } else if (hasPendingUpdate.has(this)) {\n\t// \treason = \"has pending update\";\n\t// } else if (hasHookState.has(this)) {\n\t// \treason = \"has hook state\";\n\t// }\n\t// if (reason) {\n\t// \tif (!this) reason += \" (`this` bug)\";\n\t// \tconsole.log(\"not optimizing\", this?.constructor?.name, \": \", reason, {\n\t// \t\tdetails: {\n\t// \t\t\thasSignals,\n\t// \t\t\thasComputeds: hasComputeds.has(this),\n\t// \t\t\thasPendingUpdate: hasPendingUpdate.has(this),\n\t// \t\t\thasHookState: hasHookState.has(this),\n\t// \t\t\tdeps: Array.from(updater._deps),\n\t// \t\t\tupdater,\n\t// \t\t},\n\t// \t});\n\t// }\n\n\t// if this component used no signals or computeds, update:\n\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t// if there is a pending re-render triggered from Signals,\n\t// or if there is hook or class state, update:\n\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T) {\n\treturn useMemo(() => signal<T>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(() => callback.current());\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"loading__O14bA\"};","\r\nvar createEdgeModule = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  \r\n  return (\r\nfunction(createEdgeModule = {})  {\r\n\r\n// include: shell.js\r\n// The Module object: Our interface to the outside world. We import\r\n// and export values on it. There are various ways Module can be used:\r\n// 1. Not defined. We create it here\r\n// 2. A function parameter, function(Module) { ..generated code.. }\r\n// 3. pre-run appended it, var Module = {}; ..generated code..\r\n// 4. External script tag defines var Module.\r\n// We need to check if Module already exists (e.g. case 3 above).\r\n// Substitution will be replaced with actual code on later stage of the build,\r\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\r\n// Note that if you want to run closure, and also to use Module\r\n// after the generated code, you will need to define   var Module = {};\r\n// before the code. Then that object will be used in the code, and you\r\n// can continue to use Module afterwards as well.\r\nvar Module = typeof createEdgeModule != 'undefined' ? createEdgeModule : {};\r\n\r\n// Set up the promise that indicates the Module is initialized\r\nvar readyPromiseResolve, readyPromiseReject;\r\nModule['ready'] = new Promise((resolve, reject) => {\r\n  readyPromiseResolve = resolve;\r\n  readyPromiseReject = reject;\r\n});\r\n\r\n// --pre-jses are emitted after the Module integration code, so that they can\r\n// refer to Module (if they choose; they can also define Module)\r\n\r\n  var Module = typeof Module !== 'undefined' ? Module : {};\r\n\r\n  if (!Module.expectedDataFileDownloads) {\r\n    Module.expectedDataFileDownloads = 0;\r\n  }\r\n\r\n  Module.expectedDataFileDownloads++;\r\n  (function() {\r\n    // Do not attempt to redownload the virtual filesystem data when in a pthread or a Wasm Worker context.\r\n    if (Module['ENVIRONMENT_IS_PTHREAD'] || Module['$ww']) return;\r\n    var loadPackage = function(metadata) {\r\n\r\n      var PACKAGE_PATH = '';\r\n      if (typeof window === 'object') {\r\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');\r\n      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {\r\n        // web worker\r\n        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');\r\n      }\r\n      var PACKAGE_NAME = 'C:/Dev/EDGE-pbdot/web/site/edge-classic.data';\r\n      var REMOTE_PACKAGE_BASE = 'edge-classic.data';\r\n      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {\r\n        Module['locateFile'] = Module['locateFilePackage'];\r\n        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');\r\n      }\r\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\r\nvar REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\r\n\r\n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\r\n        \r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', packageName, true);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.onprogress = function(event) {\r\n          var url = packageName;\r\n          var size = packageSize;\r\n          if (event.total) size = event.total;\r\n          if (event.loaded) {\r\n            if (!xhr.addedTotal) {\r\n              xhr.addedTotal = true;\r\n              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};\r\n              Module.dataFileDownloads[url] = {\r\n                loaded: event.loaded,\r\n                total: size\r\n              };\r\n            } else {\r\n              Module.dataFileDownloads[url].loaded = event.loaded;\r\n            }\r\n            var total = 0;\r\n            var loaded = 0;\r\n            var num = 0;\r\n            for (var download in Module.dataFileDownloads) {\r\n            var data = Module.dataFileDownloads[download];\r\n              total += data.total;\r\n              loaded += data.loaded;\r\n              num++;\r\n            }\r\n            total = Math.ceil(total * Module.expectedDataFileDownloads/num);\r\n            if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');\r\n          } else if (!Module.dataFileDownloads) {\r\n            if (Module['setStatus']) Module['setStatus']('Downloading data...');\r\n          }\r\n        };\r\n        xhr.onerror = function(event) {\r\n          throw new Error(\"NetworkError for: \" + packageName);\r\n        }\r\n        xhr.onload = function(event) {\r\n          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n            var packageData = xhr.response;\r\n            callback(packageData);\r\n          } else {\r\n            throw new Error(xhr.statusText + \" : \" + xhr.responseURL);\r\n          }\r\n        };\r\n        xhr.send(null);\r\n      };\r\n\r\n      function handleError(error) {\r\n        console.error('package error:', error);\r\n      };\r\n\r\n    function runWithFS() {\r\n\r\n      function assert(check, msg) {\r\n        if (!check) throw msg + new Error().stack;\r\n      }\r\nModule['FS_createPath'](\"/\", \"edge_base\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"blasphemer\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom1\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom2\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"freedoom1\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1/graphics\", \"freedoom_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"freedoom2\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2/graphics\", \"freedoom_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"hacx\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"harmony\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony/graphics\", \"harmony_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"heretic\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"plutonia\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"rekkr\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"tnt\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/\", \"edge_defs\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"colormaps\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"crosshairs\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"edge1_font\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"overlays\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"sounds\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/sprites\", \"mbf_dog\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"ttf\", true, true);\r\nModule['FS_createPath'](\"/\", \"soundfont\", true, true);\r\n\r\n        var PACKAGE_UUID = metadata['package_uuid'];\r\n        var indexedDB;\r\n        if (typeof window === 'object') {\r\n          indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        } else if (typeof location !== 'undefined') {\r\n          // worker\r\n          indexedDB = self.indexedDB;\r\n        } else {\r\n          throw 'using IndexedDB to cache data can only be done on a web page or in a web worker';\r\n        }\r\n        var IDB_RO = \"readonly\";\r\n        var IDB_RW = \"readwrite\";\r\n        var DB_NAME = \"EM_PRELOAD_CACHE\";\r\n        var DB_VERSION = 1;\r\n        var METADATA_STORE_NAME = 'METADATA';\r\n        var PACKAGE_STORE_NAME = 'PACKAGES';\r\n        function openDatabase(callback, errback) {\r\n          try {\r\n            var openRequest = indexedDB.open(DB_NAME, DB_VERSION);\r\n          } catch (e) {\r\n            return errback(e);\r\n          }\r\n          openRequest.onupgradeneeded = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n\r\n            if (db.objectStoreNames.contains(PACKAGE_STORE_NAME)) {\r\n              db.deleteObjectStore(PACKAGE_STORE_NAME);\r\n            }\r\n            var packages = db.createObjectStore(PACKAGE_STORE_NAME);\r\n\r\n            if (db.objectStoreNames.contains(METADATA_STORE_NAME)) {\r\n              db.deleteObjectStore(METADATA_STORE_NAME);\r\n            }\r\n            var metadata = db.createObjectStore(METADATA_STORE_NAME);\r\n          };\r\n          openRequest.onsuccess = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n            callback(db);\r\n          };\r\n          openRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        };\r\n\r\n        // This is needed as chromium has a limit on per-entry files in IndexedDB\r\n        // https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177\r\n        // https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60\r\n        // We set the chunk size to 64MB to stay well-below the limit\r\n        var CHUNK_SIZE = 64 * 1024 * 1024;\r\n\r\n        function cacheRemotePackage(\r\n          db,\r\n          packageName,\r\n          packageData,\r\n          packageMeta,\r\n          callback,\r\n          errback\r\n        ) {\r\n          var transactionPackages = db.transaction([PACKAGE_STORE_NAME], IDB_RW);\r\n          var packages = transactionPackages.objectStore(PACKAGE_STORE_NAME);\r\n          var chunkSliceStart = 0;\r\n          var nextChunkSliceStart = 0;\r\n          var chunkCount = Math.ceil(packageData.byteLength / CHUNK_SIZE);\r\n          var finishedChunks = 0;\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            nextChunkSliceStart += CHUNK_SIZE;\r\n            var putPackageRequest = packages.put(\r\n              packageData.slice(chunkSliceStart, nextChunkSliceStart),\r\n              'package/' + packageName + '/' + chunkId\r\n            );\r\n            chunkSliceStart = nextChunkSliceStart;\r\n            putPackageRequest.onsuccess = function(event) {\r\n              finishedChunks++;\r\n              if (finishedChunks == chunkCount) {\r\n                var transaction_metadata = db.transaction(\r\n                  [METADATA_STORE_NAME],\r\n                  IDB_RW\r\n                );\r\n                var metadata = transaction_metadata.objectStore(METADATA_STORE_NAME);\r\n                var putMetadataRequest = metadata.put(\r\n                  {\r\n                    'uuid': packageMeta.uuid,\r\n                    'chunkCount': chunkCount\r\n                  },\r\n                  'metadata/' + packageName\r\n                );\r\n                putMetadataRequest.onsuccess = function(event) {\r\n                  callback(packageData);\r\n                };\r\n                putMetadataRequest.onerror = function(error) {\r\n                  errback(error);\r\n                };\r\n              }\r\n            };\r\n            putPackageRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n        /* Check if there's a cached package, and if so whether it's the latest available */\r\n        function checkCachedPackage(db, packageName, callback, errback) {\r\n          var transaction = db.transaction([METADATA_STORE_NAME], IDB_RO);\r\n          var metadata = transaction.objectStore(METADATA_STORE_NAME);\r\n          var getRequest = metadata.get('metadata/' + packageName);\r\n          getRequest.onsuccess = function(event) {\r\n            var result = event.target.result;\r\n            if (!result) {\r\n              return callback(false, null);\r\n            } else {\r\n              return callback(PACKAGE_UUID === result['uuid'], result);\r\n            }\r\n          };\r\n          getRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        }\r\n\r\n        function fetchCachedPackage(db, packageName, metadata, callback, errback) {\r\n          var transaction = db.transaction([PACKAGE_STORE_NAME], IDB_RO);\r\n          var packages = transaction.objectStore(PACKAGE_STORE_NAME);\r\n\r\n          var chunksDone = 0;\r\n          var totalSize = 0;\r\n          var chunkCount = metadata['chunkCount'];\r\n          var chunks = new Array(chunkCount);\r\n\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            var getRequest = packages.get('package/' + packageName + '/' + chunkId);\r\n            getRequest.onsuccess = function(event) {\r\n              // If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now\r\n              if (chunkCount == 1) {\r\n                callback(event.target.result);\r\n              } else {\r\n                chunksDone++;\r\n                totalSize += event.target.result.byteLength;\r\n                chunks.push(event.target.result);\r\n                if (chunksDone == chunkCount) {\r\n                  if (chunksDone == 1) {\r\n                    callback(event.target.result);\r\n                  } else {\r\n                    var tempTyped = new Uint8Array(totalSize);\r\n                    var byteOffset = 0;\r\n                    for (var chunkId in chunks) {\r\n                      var buffer = chunks[chunkId];\r\n                      tempTyped.set(new Uint8Array(buffer), byteOffset);\r\n                      byteOffset += buffer.byteLength;\r\n                      buffer = undefined;\r\n                    }\r\n                    chunks = undefined;\r\n                    callback(tempTyped.buffer);\r\n                    tempTyped = undefined;\r\n                  }\r\n                }\r\n              }\r\n            };\r\n            getRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n      function processPackageData(arrayBuffer) {\r\n        assert(arrayBuffer, 'Loading data file failed.');\r\n        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');\r\n        var byteArray = new Uint8Array(arrayBuffer);\r\n        var curr;\r\n        var compressedData = {\"data\":null,\"cachedOffset\":52765705,\"cachedIndexes\":[-1,-1],\"cachedChunks\":[null,null],\"offsets\":[0,2048,4096,6153,8201,10249,12297,14345,16393,18441,20489,22537,24585,26633,28681,30729,32777,34825,36873,38921,40969,43017,44320,45575,46645,47624,49234,50342,51819,53416,54516,55518,56293,57235,58188,59129,60147,60899,61811,62792,63738,64694,65555,66506,67313,68206,69153,69989,70783,71676,72484,73745,74644,75619,76538,77671,78797,79820,81106,82179,83055,84097,85381,86680,87934,89342,89915,90424,91002,91632,92221,92818,93813,94737,95579,96413,96936,97499,98239,98920,99570,100734,101523,102178,102815,103572,104243,105091,105938,106784,107756,108381,109014,109514,110084,110677,111412,112102,112979,113688,114401,115243,116153,117332,118091,118998,119954,120861,121700,122541,123401,124256,124923,125827,126779,127751,128589,129208,129567,130124,131001,131959,132332,132977,133931,134587,135270,135826,136452,137106,138004,138909,139671,140343,141050,141625,143367,145109,146548,148017,149499,151007,152538,154059,155571,157099,158609,160200,161935,163758,165708,167697,169697,171713,173709,175714,177734,179726,181639,183445,185239,187098,189029,190908,192880,194894,196853,198708,200552,202350,204091,205826,207575,209376,211193,213076,215028,216995,219009,221006,223011,224908,226581,228116,229601,231103,232636,234140,235664,237147,238632,240078,241516,242937,244654,246516,247797,249065,250324,251573,252873,254177,255552,256859,258092,259400,260641,261854,263248,264631,266100,267506,268937,270350,271772,273290,274834,276296,277810,279350,280907,282536,284190,285745,287356,288913,290511,292053,293558,295055,296736,298440,299995,301713,303360,304713,306070,307456,308765,310021,311280,312559,313799,314975,316145,317358,318512,319678,320892,322115,323425,324676,326109,328114,329166,330262,331424,332551,333562,334509,335587,336723,337849,339030,340141,341370,342549,343909,345311,346802,348344,349971,351528,353093,354712,356187,357579,359117,360708,362231,363803,365315,366676,368163,369450,370793,372183,373417,374725,376176,377649,379179,380686,382170,383611,384895,386082,387166,388197,389234,390267,391402,392619,393692,394555,395596,396685,397599,398524,399506,400584,402606,404149,405721,407312,408901,410491,412105,413775,415374,416964,418579,420268,421932,423361,424886,426479,428017,429634,431391,433033,434546,436188,437717,439179,440643,442174,443813,445287,446786,448315,449896,451452,452986,454534,456146,457719,459363,461028,462715,464323,465865,467455,469134,470697,472207,473488,474726,476288,477811,479306,480712,482321,483949,485631,487373,488961,490446,492030,493980,495468,496458,497566,498525,499609,500746,501804,502984,503976,504993,506129,507258,508444,509522,510610,511717,512903,514084,515296,516509,517754,519029,520351,521655,522837,524024,525105,526173,527178,528179,529204,530272,531325,532214,533127,534088,535028,536039,537047,538097,539130,540166,541216,542213,543108,544156,545124,546167,547181,548276,549427,550536,551668,552727,553717,554688,555559,557016,558867,560137,561411,562670,563937,565228,566525,567889,569207,570433,571739,572992,574132,575421,576728,578126,579426,580748,582059,583427,584901,586531,588158,589755,591169,592503,593888,595440,596994,598742,600431,602055,603495,604778,606159,607587,609062,610515,612031,613530,614898,616250,617624,618947,620189,621445,622731,623979,625141,626329,627545,628718,629898,631108,632320,633645,634904,636352,638383,639943,641542,643134,644759,646375,647921,649464,651084,652647,654220,655833,657542,659288,661108,662915,664669,666177,667855,669469,671233,673111,674921,676680,678566,680411,682214,684099,685945,687689,689518,691200,692910,694688,696352,698010,699788,701424,703273,705138,706858,708262,709635,710995,712264,713631,715151,716645,718099,719633,721183,722693,724196,725790,727259,728696,730169,731670,733715,734665,735499,736279,737188,738112,738866,739554,740493,741309,742150,742936,743754,744729,745858,747117,748327,749641,750919,752259,753707,755211,756798,758332,760001,761580,763239,764834,766443,768080,769693,771290,772793,774286,775756,777264,778834,780357,781796,783268,784697,786073,787415,788650,789824,791051,792209,793370,794373,795355,796404,797457,798430,799376,800389,801396,802314,803078,804761,806634,808512,810363,812251,814085,815885,817713,819570,821375,823120,824732,826281,827654,829416,831387,833260,835078,836984,838838,840711,842619,844542,846390,848088,849736,851309,852747,854429,856443,858157,859978,861869,863782,865659,867451,869196,870730,872166,873679,875255,876866,878519,880460,882105,884112,885992,887736,889751,891492,893357,895390,896907,898191,899827,901358,902815,904598,906388,907752,909233,910863,912381,913869,915841,917323,918686,920367,921925,923474,925261,927203,928877,930555,932254,934027,935774,937531,939261,941043,942878,944691,946538,948424,950158,951923,953705,955506,957339,959169,960969,962826,964668,966452,968215,969974,971736,973521,975264,977014,978825,980547,982301,984056,985886,987665,989447,991204,992952,994654,996350,998083,999850,1001578,1003283,1004931,1006654,1008507,1010406,1012243,1014082,1015881,1017735,1019656,1021515,1023300,1025010,1026656,1028355,1030403,1032339,1034257,1036165,1038111,1040026,1041937,1043837,1045751,1047640,1049510,1051431,1053344,1055152,1056966,1058712,1060481,1062236,1064073,1065882,1067696,1069495,1071312,1073160,1075002,1076822,1078582,1080313,1082020,1083602,1085162,1086825,1088559,1090370,1092137,1093873,1095614,1097305,1099027,1100736,1102466,1104226,1105996,1107810,1109564,1111341,1113260,1115158,1117119,1118963,1120767,1122610,1124514,1126430,1128356,1130245,1132156,1134002,1136050,1138030,1139972,1141956,1143961,1145963,1147972,1149962,1151915,1153845,1155756,1157741,1159740,1161721,1163660,1165544,1167469,1169465,1171421,1173403,1175385,1177413,1179435,1181368,1183297,1185224,1187118,1189048,1190883,1192587,1194365,1196168,1198069,1199987,1201923,1203882,1205857,1207829,1209809,1211741,1213649,1215659,1217588,1219393,1221236,1223105,1224964,1226827,1228638,1230432,1232233,1234102,1235920,1237643,1239339,1240920,1242425,1243878,1244667,1246572,1248620,1250668,1252716,1254764,1256812,1258860,1260908,1262956,1265004,1267052,1269100,1271148,1273196,1275244,1277292,1279340,1281388,1283436,1285484,1287532,1289580,1291628,1293676,1295724,1297772,1299820,1301868,1303916,1305964,1308012,1310060,1312108,1314156,1316204,1318252,1320300,1322348,1324396,1326444,1328492,1330540,1332588,1334636,1336684,1338732,1340780,1342828,1344876,1346924,1348972,1351020,1353068,1355116,1357164,1359212,1361260,1363308,1365356,1367404,1369452,1371500,1373548,1375596,1377644,1379692,1381740,1383788,1385836,1387884,1389932,1391980,1394028,1396076,1398124,1400172,1402220,1404268,1406316,1408364,1410412,1412460,1414517,1416565,1418613,1420661,1422709,1424757,1426805,1428853,1430901,1432949,1434997,1437045,1439093,1441141,1443198,1445246,1447294,1449342,1451390,1453438,1455486,1457534,1459582,1461630,1463678,1465726,1467774,1469822,1471870,1473918,1475966,1478021,1480069,1482117,1484165,1486213,1488261,1490309,1492357,1494405,1496453,1498501,1500549,1502597,1504645,1506693,1508741,1510789,1512837,1514885,1516933,1518981,1521029,1523077,1525125,1527173,1529221,1531269,1533317,1535365,1537413,1539461,1541509,1543557,1545605,1547653,1549701,1551749,1553797,1555845,1557893,1559941,1561989,1564037,1566085,1568133,1570181,1572229,1574277,1576325,1578373,1580421,1582469,1584517,1586565,1588613,1590661,1592709,1594757,1596805,1598853,1600901,1602949,1604997,1607045,1609093,1611141,1613189,1615237,1617285,1619333,1621381,1623429,1625477,1627525,1629573,1631621,1633669,1635717,1637765,1639813,1641861,1643909,1645957,1648005,1650053,1652101,1654149,1656197,1658245,1660293,1662341,1664389,1666437,1668485,1670533,1672581,1674629,1676677,1678725,1680773,1682821,1684869,1686917,1688965,1691013,1693061,1695109,1697157,1699205,1701253,1703301,1705349,1707397,1709445,1711493,1713541,1715589,1717637,1719685,1721733,1723781,1725829,1727877,1729925,1731973,1734021,1736069,1738117,1740165,1742213,1744261,1746309,1748357,1750405,1752453,1754501,1756549,1758597,1760645,1762693,1764741,1766789,1768846,1770387,1771853,1773207,1774746,1776246,1777818,1779245,1780685,1782006,1783193,1784513,1786015,1787415,1788603,1789900,1791333,1792869,1794269,1795749,1797194,1798573,1799911,1801391,1802877,1804314,1805801,1807293,1808771,1810226,1811717,1813248,1814772,1816366,1817836,1819410,1820926,1822497,1824010,1825487,1826909,1828484,1830061,1831492,1832934,1834313,1835941,1837611,1839256,1840890,1842485,1844006,1845619,1847315,1848909,1850440,1852078,1853602,1855523,1857015,1858054,1859199,1860291,1861408,1862399,1863440,1864534,1865602,1866746,1867853,1868976,1870205,1871537,1872901,1874366,1875874,1877446,1879031,1880557,1882186,1883752,1885152,1886553,1888157,1889738,1891245,1892798,1894215,1895649,1897039,1898346,1899675,1901038,1902281,1903685,1905137,1906661,1908183,1909681,1911188,1912518,1913735,1914905,1915904,1916967,1917985,1919172,1920338,1921526,1922509,1923380,1924436,1925401,1926336,1927289,1928300,1929864,1931586,1932663,1933766,1934902,1936009,1936954,1937982,1939032,1940104,1941247,1942464,1943712,1945021,1946203,1947696,1949252,1950766,1952261,1953779,1955240,1956859,1958461,1959962,1961414,1963040,1964671,1966058,1967591,1969094,1970657,1972299,1973980,1975823,1977733,1979586,1981145,1982919,1984741,1986495,1987991,1989663,1990939,1992375,1993712,1994627,1995709,1996815,1997909,1999027,2000217,2001275,2002158,2003206,2004210,2005106,2006045,2007015,2008304,2010332,2011844,2013390,2014920,2016472,2018037,2019509,2020995,2022526,2024026,2025529,2027099,2028747,2030473,2032254,2034026,2035743,2037232,2038911,2040497,2042221,2044104,2045871,2047551,2049424,2051171,2052936,2054816,2056533,2058148,2060001,2061684,2063361,2065129,2066652,2068218,2069941,2071532,2073366,2075190,2076880,2078249,2079622,2080953,2082207,2083554,2085003,2086482,2087921,2089373,2090848,2092297,2093754,2095284,2096681,2098054,2099475,2100924,2102969,2104683,2106340,2108007,2109749,2111534,2113261,2115001,2116788,2118581,2120411,2122232,2124128,2125905,2127666,2129461,2131241,2133055,2134871,2136700,2138484,2140371,2142172,2143930,2145701,2147468,2149212,2151003,2152683,2154443,2156249,2158001,2159753,2161535,2163375,2165148,2166899,2168651,2170358,2172094,2173801,2175522,2177254,2178977,2180681,2182294,2184132,2185990,2187891,2189735,2191543,2193365,2195247,2197129,2198982,2200759,2202449,2204036,2204936,2206729,2208777,2210825,2212873,2214921,2216969,2219017,2221065,2223113,2225161,2227209,2229257,2231305,2233353,2235401,2237449,2239497,2241545,2243593,2245641,2247689,2249737,2251785,2253833,2255881,2257929,2259977,2262025,2264073,2266121,2268169,2270217,2272265,2274313,2276361,2278409,2280457,2282505,2284553,2286601,2288649,2290697,2292745,2294793,2296841,2298889,2300937,2302985,2305033,2307081,2309129,2311177,2313225,2315273,2317321,2319369,2321417,2323465,2325513,2327561,2329609,2331657,2333705,2335753,2337801,2339849,2341452,2342683,2344078,2345471,2346928,2348475,2350011,2351439,2352913,2354378,2355860,2357285,2358746,2360194,2361523,2362855,2363473,2364441,2365571,2366992,2368604,2370298,2372120,2373951,2375838,2377702,2379525,2381256,2382977,2384717,2386472,2388316,2390193,2392072,2393886,2395724,2397546,2399353,2400929,2402216,2403268,2404336,2405586,2406887,2407989,2409400,2410657,2411768,2413036,2414289,2415707,2417188,2418667,2420142,2421519,2422934,2424334,2426041,2427879,2429313,2430750,2432249,2433802,2435264,2436776,2438310,2439725,2441194,2442746,2444378,2445822,2447319,2448967,2450644,2452285,2454026,2455822,2457460,2459182,2460844,2462412,2463968,2465453,2467024,2468656,2470218,2471815,2473434,2475066,2476653,2478204,2479752,2481388,2483011,2484635,2486261,2487862,2489391,2490939,2492549,2494205,2495804,2497285,2498461,2499849,2501331,2502808,2504181,2505626,2507130,2508710,2510320,2511907,2513325,2514730,2516340,2518344,2519700,2521079,2522454,2523886,2525234,2526625,2528101,2529504,2530941,2532345,2533852,2535221,2536386,2537916,2539448,2540989,2542566,2544236,2545828,2547395,2548994,2550459,2551918,2553410,2554973,2556521,2558022,2559468,2560999,2562558,2564059,2565541,2567052,2568645,2570184,2571757,2573305,2574914,2576483,2578002,2579528,2581050,2582439,2583744,2584765,2585789,2587150,2588540,2589847,2591127,2592596,2594079,2595601,2597154,2598490,2599771,2601195,2603235,2604885,2606542,2608196,2609933,2611696,2613413,2615187,2616870,2618544,2620270,2622085,2623850,2625322,2626911,2628568,2630188,2631848,2633660,2635392,2636971,2638667,2640274,2641810,2643346,2644947,2646664,2648224,2649774,2651342,2652971,2654620,2656246,2657853,2659530,2661197,2662937,2664666,2666450,2668115,2669734,2671368,2673087,2674695,2676250,2677553,2678909,2680626,2682312,2683921,2685476,2687177,2688929,2690713,2692564,2694270,2695872,2697536,2699512,2700634,2701178,2701786,2702470,2703135,2703846,2704599,2705562,2706577,2707661,2708569,2709547,2711009,2712489,2714120,2715770,2716971,2718406,2719886,2721606,2723307,2725044,2726610,2728304,2729946,2731713,2733335,2735038,2736492,2738229,2739953,2741701,2743408,2745145,2746839,2748492,2750186,2751925,2753663,2755382,2757059,2758448,2759866,2761104,2762286,2763586,2765071,2766357,2767533,2768828,2770138,2771581,2773148,2774668,2776164,2777727,2779350,2780581,2782284,2784332,2786380,2788428,2790476,2792524,2794572,2796620,2798668,2800716,2802764,2804812,2806860,2808908,2810956,2813004,2815052,2817100,2819148,2821205,2823253,2825301,2827349,2829397,2831445,2833493,2835541,2837589,2839637,2841685,2843733,2845781,2847829,2849877,2851925,2853973,2856021,2858069,2860117,2862165,2864213,2866261,2868309,2870357,2872405,2874453,2876501,2878549,2880597,2882645,2884693,2886741,2888789,2890837,2892885,2894933,2896981,2899029,2901077,2903125,2905173,2907221,2909269,2911317,2913365,2915413,2917461,2919509,2921557,2923605,2925653,2927701,2929749,2931797,2933845,2935893,2937941,2939989,2942037,2944085,2946133,2948181,2950229,2952277,2954325,2956373,2958421,2960469,2962517,2964565,2966613,2968661,2970709,2972757,2974805,2976853,2978901,2980949,2982997,2985045,2987093,2989141,2991189,2993237,2995285,2997333,2999381,3001429,3003477,3005525,3007573,3009621,3011669,3013717,3015765,3017813,3019861,3021909,3023957,3026005,3028053,3030101,3032149,3034197,3036254,3038302,3040350,3042398,3044446,3046494,3048542,3050590,3052638,3054686,3056734,3058782,3060830,3062878,3064926,3066974,3069022,3071070,3073118,3075175,3077223,3079271,3081319,3083367,3085415,3087463,3089511,3091559,3093607,3095655,3097703,3099751,3101799,3103847,3105895,3107943,3109991,3112039,3114087,3116135,3118183,3120231,3122279,3124327,3126375,3128423,3130471,3132519,3134567,3136615,3138663,3140711,3142759,3144807,3146855,3148903,3150951,3152999,3155047,3157103,3159160,3161208,3163224,3165247,3167294,3169342,3171396,3173444,3175498,3177551,3179599,3181647,3183695,3185743,3187791,3189839,3191887,3193935,3195983,3198031,3200079,3202127,3204175,3206223,3208271,3210319,3212367,3214422,3216470,3218518,3220566,3222614,3224662,3226710,3228758,3230806,3232854,3234902,3236950,3238998,3241046,3243094,3245142,3247190,3249238,3251286,3253334,3255382,3257430,3259474,3261486,3263534,3265583,3267631,3269679,3271727,3273777,3275834,3277882,3279930,3281978,3284026,3286074,3288122,3290170,3292218,3294266,3296314,3298362,3300410,3302458,3304506,3306554,3308602,3310650,3312701,3314749,3316797,3318845,3320893,3322941,3324989,3327037,3329085,3331133,3333181,3335229,3337277,3339325,3341373,3343421,3345469,3347517,3349565,3351613,3353661,3355709,3357750,3359763,3361796,3363842,3365899,3367947,3369995,3372044,3374092,3376140,3378188,3380236,3382284,3384332,3386380,3388428,3390476,3392524,3394572,3396620,3398668,3400716,3402764,3404812,3406860,3408908,3410965,3413013,3415061,3417109,3419157,3421205,3423253,3425301,3427349,3429397,3431445,3433493,3435541,3437589,3439637,3441685,3443733,3445781,3447829,3449877,3451925,3453973,3456021,3458069,3460117,3462165,3464213,3466261,3468309,3470357,3472405,3474453,3476501,3478549,3480597,3482645,3484693,3486741,3488789,3490837,3492885,3494933,3496981,3499029,3501077,3503125,3505173,3507221,3509269,3511317,3513365,3515413,3517461,3519509,3521557,3523605,3525653,3527701,3529749,3531797,3533845,3535893,3537941,3539989,3542037,3544085,3546133,3548181,3550229,3552277,3554325,3556373,3558421,3560469,3562517,3564565,3566613,3568661,3570709,3572757,3574805,3576853,3578901,3580949,3582997,3585045,3587093,3589141,3591189,3593237,3595285,3597333,3599381,3601429,3603477,3605525,3607573,3609621,3611669,3613717,3615765,3617813,3619861,3621909,3623957,3626005,3628053,3630101,3632149,3634197,3636245,3638293,3640342,3642350,3644381,3646430,3648484,3650532,3652588,3654640,3656696,3658744,3660792,3662840,3664888,3666936,3668984,3671032,3673080,3675128,3677176,3679224,3681272,3683320,3685368,3687416,3689464,3691384,3692639,3694015,3695278,3696405,3697492,3698479,3699569,3700747,3701828,3702969,3704075,3705328,3706417,3707557,3708705,3709672,3710865,3712019,3713230,3714400,3715532,3716749,3717630,3718474,3719390,3720376,3721319,3722207,3722975,3723946,3724768,3725552,3726159,3726497,3726833,3727167,3728468,3729734,3731220,3732657,3734124,3735565,3736284,3737396,3738493,3739382,3740286,3741128,3742515,3743801,3745258,3746592,3747694,3748716,3749784,3750870,3752028,3753193,3754232,3755324,3756564,3757656,3758878,3759938,3760988,3762122,3763313,3764483,3765700,3766815,3768028,3768988,3769895,3770852,3771832,3772764,3773509,3774403,3775239,3776092,3777097,3777643,3777980,3778326,3778846,3780014,3781315,3782773,3784179,3785582,3786868,3787834,3789026,3789884,3790782,3791645,3792665,3794713,3794775,3794823,3794872,3794934,3795021,3795142,3795306,3795509,3795683,3795893,3796127,3796381,3796827,3797701,3798711,3799687,3800730,3802089,3803691,3805289,3806925,3808555,3810251,3812013,3813781,3815459,3816991,3818541,3820127,3821851,3823503,3825237,3827018,3828722,3830350,3831998,3833582,3835211,3836834,3838118,3839058,3840045,3840917,3841554,3841894,3842115,3842269,3842388,3842499,3842659,3842807,3842880,3842949,3842994,3843039,3843084,3843126,3844884,3845551,3845722,3845901,3846124,3846391,3846693,3847137,3847472,3847868,3848352,3848684,3849009,3849568,3850359,3851325,3852219,3853345,3854478,3855978,3857666,3859421,3861235,3863010,3864859,3866672,3868483,3870135,3871820,3873528,3875347,3877205,3879055,3880930,3882785,3884534,3886417,3888305,3890174,3892018,3893724,3894637,3895615,3896505,3897298,3897895,3898378,3898705,3899047,3899396,3899796,3900205,3900470,3900646,3900805,3901027,3901270,3901419,3902723,3904490,3905761,3907161,3908363,3909605,3910992,3912371,3913718,3915118,3916436,3917866,3919360,3920817,3922187,3923649,3925081,3926530,3928035,3929428,3931001,3932391,3933743,3935118,3936524,3937873,3939008,3940176,3941511,3942830,3944182,3945556,3946949,3948177,3949470,3950910,3952256,3953566,3954899,3956360,3957899,3959310,3960835,3962203,3963587,3964975,3966420,3967842,3969330,3970704,3972013,3973407,3974696,3976089,3977483,3978769,3979964,3981109,3982625,3983949,3985347,3987031,3987954,3989117,3990683,3991813,3992977,3994797,3995726,3996761,3997498,3999490,4000074,4000119,4000164,4000209,4000977,4001885,4002978,4004068,4005425,4007012,4008310,4009933,4011771,4013562,4015214,4016912,4018588,4019372,4020594,4022145,4023904,4025713,4027515,4029272,4031083,4032893,4034617,4036205,4037873,4039560,4041467,4043298,4045179,4047024,4048825,4050577,4052481,4054333,4056206,4058082,4059834,4061451,4063034,4064554,4066325,4067687,4068945,4070273,4071533,4072774,4073833,4074786,4075648,4076060,4076108,4076155,4076200,4076820,4077552,4078522,4079317,4080054,4081185,4082616,4083945,4085126,4086046,4086999,4087464,4088414,4089089,4089810,4090507,4091248,4092174,4093050,4093873,4094749,4095661,4096633,4097461,4098271,4099038,4099955,4100857,4101816,4102729,4103644,4104331,4105102,4105713,4106372,4107120,4107929,4108636,4109386,4110300,4111197,4111894,4112713,4113531,4114358,4115234,4115931,4116786,4117750,4118616,4119467,4120297,4121120,4121950,4122937,4123691,4124509,4125969,4127482,4128946,4130445,4132085,4133696,4135251,4136760,4138476,4139891,4141419,4142932,4144591,4146176,4147616,4149358,4150739,4152207,4153655,4155316,4156906,4158407,4160010,4161442,4163078,4164965,4166397,4167891,4169181,4170297,4171514,4172815,4174194,4175322,4176431,4177635,4178732,4179858,4181087,4182326,4183635,4184769,4185589,4186449,4187122,4188991,4190508,4191914,4193378,4194765,4196058,4197432,4198628,4199812,4201162,4202496,4203753,4204893,4205809,4206706,4207364,4208236,4210111,4211615,4213127,4214613,4216035,4217371,4218704,4219899,4221098,4222435,4223744,4224953,4225892,4226714,4227433,4228103,4229901,4231382,4232876,4234302,4235800,4237129,4238403,4239808,4240977,4242273,4243656,4244974,4246176,4247259,4248206,4249084,4249740,4250668,4252554,4254005,4255497,4256913,4258373,4259891,4261381,4262800,4264019,4265009,4265858,4266610,4267451,4268325,4269177,4270779,4272321,4273818,4275236,4276698,4278021,4279234,4280613,4281775,4283074,4284444,4285738,4286924,4287936,4288893,4289706,4290356,4291838,4293621,4295095,4296472,4297650,4298864,4300313,4301750,4303124,4304073,4305066,4306414,4308150,4309716,4311287,4312679,4313954,4315074,4316589,4318018,4319279,4320320,4321586,4322857,4324192,4325212,4326259,4328039,4329755,4331570,4333399,4335106,4336751,4338082,4339897,4341818,4343656,4345332,4347227,4349115,4350507,4351706,4353004,4354368,4355782,4357178,4359114,4360522,4361870,4363186,4364535,4366005,4367470,4368967,4369873,4370803,4371867,4373715,4374778,4375603,4376498,4378138,4379559,4380875,4382528,4384185,4385689,4387403,4389137,4390965,4392178,4393678,4395404,4396925,4398504,4400359,4402195,4403941,4405141,4406699,4408412,4409958,4411685,4413591,4415477,4417027,4418289,4419925,4421623,4423192,4424990,4426900,4428820,4430225,4431570,4433234,4434956,4436500,4438210,4440111,4442030,4443469,4444851,4446452,4448184,4449694,4451359,4453216,4455142,4456539,4457880,4459543,4461180,4462685,4464420,4466212,4468014,4469203,4470714,4472446,4473969,4475564,4477328,4479099,4480672,4481930,4483548,4485230,4486745,4488431,4490213,4492122,4493399,4494797,4496489,4498032,4499605,4501400,4503239,4504849,4506465,4507998,4509637,4511232,4512724,4514392,4516026,4517588,4519081,4520683,4522130,4523725,4525349,4526851,4528422,4529849,4531366,4532878,4534203,4535781,4537250,4538467,4539578,4540720,4542061,4543393,4544523,4545803,4547458,4549032,4550368,4551664,4553010,4554400,4555876,4557070,4558485,4559569,4560944,4562831,4562940,4562989,4563034,4563079,4563124,4563202,4563582,4564236,4564988,4565814,4566734,4567727,4568693,4569752,4570677,4571796,4572928,4574200,4575551,4576748,4578021,4579368,4580535,4581738,4582896,4583872,4585100,4586156,4587344,4588511,4589531,4590472,4591425,4592252,4592891,4593604,4594296,4594701,4594746,4594791,4594833,4594882,4594927,4595969,4597028,4597774,4598543,4599625,4600847,4602169,4603191,4604177,4605207,4606224,4606997,4607680,4608457,4609436,4610408,4611493,4612678,4613797,4614968,4616228,4617502,4618693,4620059,4621407,4622727,4624100,4625413,4626750,4627974,4628900,4629729,4630330,4630868,4631384,4632148,4633023,4633802,4634617,4635498,4636488,4637501,4638378,4639342,4640526,4642314,4643501,4644786,4646168,4647581,4649056,4650530,4652153,4653865,4655650,4657471,4659283,4661084,4662794,4664561,4666215,4667851,4669619,4671260,4672926,4674547,4676207,4677806,4679254,4680867,4682567,4684191,4685740,4687309,4688899,4690468,4691899,4693131,4694186,4695500,4697125,4698645,4700246,4701813,4703298,4704641,4706054,4707512,4709419,4710340,4711053,4712084,4713213,4714339,4715615,4716995,4718328,4719569,4721103,4722563,4723868,4724693,4725565,4726687,4727977,4729395,4730647,4731886,4733118,4734235,4735424,4736581,4737827,4739159,4740347,4741618,4743055,4744346,4745604,4746959,4748340,4749666,4750972,4752235,4753481,4754675,4755714,4756706,4757812,4758951,4760220,4761365,4762911,4763837,4765283,4766831,4767735,4769170,4770232,4771856,4773176,4774997,4776582,4777312,4778203,4779591,4781647,4782449,4783332,4784076,4785135,4786184,4787231,4788205,4789224,4790376,4791679,4793158,4794824,4796456,4798141,4799694,4801008,4802441,4803954,4805586,4807195,4808864,4810506,4812151,4813753,4815333,4816811,4818352,4819879,4821699,4823529,4825402,4827233,4828982,4830768,4832301,4833719,4835081,4836454,4837795,4839088,4840222,4840875,4841749,4842911,4844033,4845099,4846144,4847232,4848214,4848889,4850402,4851333,4852342,4853373,4854352,4855302,4856345,4857345,4858327,4859343,4860295,4861324,4862330,4863337,4864293,4865290,4866268,4867266,4868221,4869228,4870234,4871256,4872265,4873203,4874215,4875238,4876254,4877202,4878218,4879229,4880228,4881194,4882201,4883218,4884206,4885187,4886161,4887310,4888261,4889117,4890220,4891103,4892213,4893404,4894824,4895502,4896168,4896761,4897527,4898175,4898832,4899463,4900156,4901243,4902310,4903310,4904152,4904959,4905783,4906592,4907404,4908247,4909188,4910042,4910944,4911896,4912692,4913569,4914414,4915401,4916342,4917313,4918331,4919283,4920109,4920703,4921373,4922082,4922765,4923474,4924420,4925291,4926108,4927039,4927845,4928619,4929470,4930314,4931303,4932064,4933594,4935402,4937221,4939029,4941077,4943125,4945173,4947221,4949269,4951317,4953365,4955413,4957461,4959509,4961557,4963605,4965653,4967701,4969749,4971797,4973845,4975893,4977941,4979989,4982037,4984094,4985994,4987837,4989541,4991292,4993016,4994736,4996484,4998406,5000303,5002359,5002867,5002915,5002964,5003009,5003053,5003098,5003146,5003195,5003240,5003284,5003329,5003377,5003527,5004304,5005334,5006771,5008166,5009714,5011283,5012711,5014223,5015762,5017352,5019026,5020720,5022476,5024223,5025900,5027617,5029242,5030909,5032533,5034154,5035724,5037333,5038774,5040064,5041362,5042503,5043663,5044571,5045043,5045378,5045597,5045737,5045782,5045832,5045879,5045924,5045968,5046013,5046063,5046110,5046155,5046199,5046244,5046294,5047607,5049655,5051703,5053751,5055799,5057847,5059895,5061943,5063991,5066039,5068087,5070135,5072183,5074231,5076279,5078327,5080375,5082423,5084471,5086519,5088567,5090615,5092663,5094711,5096759,5098807,5100855,5102912,5104960,5106346,5107571,5108761,5109978,5111211,5112313,5113468,5114603,5115808,5117022,5118291,5119604,5120799,5122120,5123379,5124835,5126547,5128117,5129657,5131036,5132418,5133911,5135501,5136941,5138315,5139916,5141523,5143083,5144577,5146063,5147616,5149062,5150433,5151839,5153305,5154763,5156257,5157532,5158748,5160068,5161362,5162632,5163791,5164860,5165718,5166769,5167806,5168917,5169898,5170720,5171430,5172169,5172991,5173673,5174283,5174914,5175485,5177324,5179010,5180165,5181270,5182434,5183451,5184627,5185952,5187276,5188448,5189674,5190837,5192085,5193427,5194684,5196268,5197789,5199561,5201337,5203013,5204772,5206544,5208139,5209620,5211184,5212687,5214050,5215627,5217250,5218736,5220191,5221824,5223378,5225022,5226519,5228217,5229753,5231127,5232420,5233772,5235009,5236110,5237253,5238307,5239300,5240351,5241273,5242254,5243297,5244328,5245378,5246282,5247135,5247790,5248370,5248814,5249252,5249619,5250954,5252362,5253062,5253771,5254420,5255090,5255761,5256441,5257148,5257794,5258464,5259107,5259796,5260502,5261696,5263275,5264781,5266339,5267911,5269576,5271189,5272740,5274258,5275702,5276788,5277627,5278878,5280338,5281786,5283339,5284858,5286299,5287808,5289233,5290560,5291671,5292657,5293827,5295246,5296764,5298239,5299706,5301216,5302606,5303842,5304780,5305465,5306122,5306801,5307490,5308158,5308845,5309540,5310241,5310934,5311590,5312246,5312952,5314098,5315891,5316569,5317215,5317871,5318566,5319254,5319935,5320575,5321226,5321942,5322626,5323301,5323951,5324767,5326170,5327804,5329402,5331036,5332742,5334438,5336023,5337531,5338958,5340326,5341667,5343047,5344311,5345600,5346936,5348265,5349573,5350838,5352117,5353263,5354928,5356611,5358227,5359833,5361511,5363108,5364643,5366024,5367080,5368079,5368850,5369614,5370261,5370934,5371611,5372275,5372971,5373634,5374280,5374934,5375616,5376311,5376944,5377732,5379471,5380957,5382741,5383962,5385707,5387537,5388731,5390496,5392281,5394337,5394798,5395213,5395730,5396366,5397023,5397789,5398673,5399533,5400533,5401641,5402696,5403842,5405231,5406751,5408308,5409880,5411459,5412999,5414477,5415946,5417383,5418836,5420267,5421702,5423260,5424719,5426173,5427546,5428915,5430202,5431616,5433028,5434482,5436096,5437685,5439210,5440622,5441867,5442962,5444189,5445474,5446690,5447958,5449158,5450337,5451447,5452429,5453410,5454446,5455506,5456493,5457456,5458308,5459137,5459849,5460426,5460762,5462385,5463253,5463599,5464117,5464685,5465319,5466031,5466878,5467751,5468662,5469666,5470687,5471840,5473083,5474448,5475990,5477632,5479311,5481039,5482690,5484312,5485786,5487214,5488567,5489865,5491185,5492596,5494031,5495482,5496926,5498368,5499851,5501251,5502707,5504153,5505588,5507021,5508592,5510283,5511903,5513399,5514685,5515963,5517177,5518419,5519611,5520774,5522018,5523223,5524268,5525357,5526372,5527294,5528179,5528984,5529635,5530271,5530766,5532017,5533360,5533733,5534195,5534844,5535530,5536250,5537047,5537884,5538822,5539920,5540977,5542038,5543480,5545023,5546494,5547970,5549533,5551027,5552475,5553709,5555013,5556354,5557715,5559048,5560456,5561876,5563323,5564657,5565949,5567320,5568711,5570089,5571393,5572704,5574013,5575315,5576717,5578227,5579759,5581367,5582774,5584237,5585624,5586961,5588159,5589400,5590626,5591770,5592911,5593972,5595011,5595986,5596882,5597794,5598536,5599218,5599691,5600453,5602083,5603742,5605364,5607108,5608566,5610321,5612146,5613470,5615084,5616561,5618031,5619659,5621222,5622270,5623693,5625302,5626929,5628742,5630053,5631693,5633235,5634762,5636757,5638805,5640764,5642812,5644809,5646772,5648731,5650779,5652804,5654811,5656854,5658652,5659749,5661501,5663333,5665022,5666397,5668094,5670069,5672117,5674165,5676213,5678261,5680309,5682357,5684405,5686453,5688501,5690549,5692597,5694645,5696693,5698741,5700789,5702837,5704885,5706933,5708981,5711029,5713077,5715125,5717173,5719221,5721262,5722471,5723425,5724209,5724999,5725895,5726886,5727931,5728757,5729547,5730561,5731376,5732324,5733118,5733984,5734827,5735653,5736676,5737521,5738319,5739203,5740035,5741364,5742366,5743286,5744183,5745173,5746286,5747372,5748441,5749484,5750190,5750837,5751926,5753174,5754486,5755736,5757243,5757755,5758342,5758978,5759591,5760168,5760713,5761775,5762778,5763813,5764626,5765144,5765699,5766542,5767062,5767799,5768741,5769574,5770272,5770862,5771613,5772281,5772934,5774114,5774891,5775975,5776617,5777368,5777891,5778444,5778979,5779687,5780458,5781269,5782110,5782737,5783403,5784328,5785439,5786342,5787295,5788131,5789083,5790030,5790580,5791585,5792238,5793139,5794157,5795051,5795819,5796611,5797594,5797864,5798471,5799236,5800279,5800686,5801238,5802026,5802752,5803395,5803963,5804615,5805280,5806223,5806975,5807762,5808403,5809057,5809669,5810527,5812419,5814095,5815675,5817139,5818556,5819949,5821405,5822951,5824929,5826680,5828460,5830038,5831477,5832932,5834331,5835815,5837355,5839403,5841033,5842631,5844348,5846011,5847626,5849239,5850983,5852723,5854532,5856288,5858009,5859748,5861189,5862398,5863629,5864901,5866518,5868128,5869779,5871547,5873319,5875047,5876754,5878446,5880214,5881956,5883645,5885343,5887034,5888806,5890552,5892309,5894030,5895778,5897517,5899286,5900987,5902769,5904467,5906064,5907668,5909214,5910538,5911869,5913168,5914648,5916156,5917708,5919352,5920981,5922570,5924274,5925777,5927287,5928937,5930555,5932139,5934110,5935737,5937192,5938675,5940216,5941726,5943185,5944721,5946230,5947662,5949161,5950755,5952389,5953804,5955359,5957047,5958716,5960408,5962207,5963955,5965608,5967336,5968921,5970503,5972058,5973593,5975190,5976810,5978403,5980010,5981632,5983247,5984840,5986384,5987945,5989548,5991213,5992790,5994439,5995987,5997563,5999153,6000802,6002412,6003993,6005375,6006517,6007978,6009486,6010938,6012290,6013758,6015268,6016850,6018464,6019981,6021386,6022865,6024684,6026402,6027617,6028826,6030056,6031292,6032539,6033797,6035042,6036309,6037575,6038873,6040156,6041688,6042988,6044280,6045570,6046877,6048188,6049503,6050807,6052032,6053296,6054569,6055835,6057076,6058366,6059580,6060820,6062090,6063359,6064587,6065796,6066976,6068199,6069428,6070643,6071873,6073101,6074356,6075600,6076856,6078091,6079358,6080658,6081957,6083490,6084804,6086069,6087363,6088681,6089998,6091295,6092580,6093812,6095108,6096383,6097631,6099080,6101129,6102844,6104613,6106409,6108200,6109981,6111770,6113553,6115309,6117077,6118863,6120586,6122332,6124020,6125750,6127397,6129012,6130663,6132244,6133873,6135508,6137160,6138796,6140449,6142160,6143862,6145582,6147359,6149082,6150879,6152602,6154383,6156132,6157880,6159632,6161242,6162903,6164613,6166250,6167955,6169560,6171214,6172915,6174614,6176299,6177981,6179755,6181477,6183248,6185005,6186746,6188486,6190226,6191970,6193713,6195478,6197220,6198990,6199740,6201175,6203097,6205145,6207193,6209241,6211289,6213337,6215385,6217433,6219481,6221529,6223577,6225625,6227673,6229721,6231769,6233826,6235874,6237922,6239970,6242018,6244066,6246114,6248162,6250210,6252258,6254306,6256354,6258402,6260450,6262498,6264546,6266594,6268642,6270690,6272738,6274786,6276834,6278882,6280930,6282978,6285026,6287074,6289122,6291170,6293218,6295266,6297314,6299362,6301410,6303458,6305506,6307554,6309602,6311650,6313698,6315746,6317794,6319842,6321890,6323938,6325986,6328034,6330082,6332130,6334178,6336226,6338274,6340322,6342370,6344418,6346466,6348514,6350562,6352610,6354658,6356706,6358754,6360802,6362850,6364898,6366946,6368994,6371042,6373090,6375138,6377186,6379234,6381282,6383330,6385378,6387426,6389474,6391522,6393570,6395618,6397666,6399714,6401762,6403810,6405858,6407906,6409954,6412002,6414050,6416098,6418146,6420194,6422242,6424290,6426338,6428386,6430434,6432482,6434530,6436578,6438626,6440674,6442722,6444770,6446818,6448866,6450914,6452962,6455010,6457058,6459106,6461154,6463202,6465250,6467298,6469346,6471394,6473442,6475490,6477538,6479586,6481634,6483682,6485730,6487778,6489826,6491874,6493922,6495970,6498018,6500066,6502114,6504162,6506210,6508258,6510306,6512354,6514402,6516450,6518498,6520546,6522594,6524642,6526690,6528738,6530786,6532834,6534882,6536930,6538978,6541026,6543074,6545122,6547170,6549218,6551266,6553314,6555362,6557410,6559458,6561506,6563554,6565602,6567650,6569698,6571746,6573794,6575842,6577890,6579938,6581986,6584034,6586082,6588130,6590178,6592226,6594274,6596322,6598370,6600418,6602466,6604514,6606562,6608610,6610658,6612706,6614754,6616802,6618850,6620898,6622946,6624994,6627042,6629090,6631138,6633186,6635234,6637282,6639330,6641378,6643426,6645474,6647522,6649570,6651618,6653666,6655714,6657762,6659810,6661858,6663906,6665954,6668002,6670050,6672098,6674146,6676194,6678242,6680290,6682347,6684395,6686443,6688491,6690539,6692587,6694635,6696683,6698731,6700779,6702827,6704875,6706923,6708971,6711019,6713067,6715115,6717163,6719211,6721259,6723307,6725355,6727403,6729451,6731499,6733547,6735595,6737643,6739691,6741739,6743787,6745835,6747883,6749931,6751979,6754027,6756075,6758123,6760171,6762219,6764267,6766315,6768363,6770411,6772459,6774507,6776555,6778603,6780651,6782699,6784747,6786795,6788843,6790891,6792939,6794987,6797035,6799083,6801131,6803179,6805227,6807275,6809323,6811371,6813419,6815467,6817515,6819563,6821611,6823659,6825707,6827755,6829803,6831851,6833899,6835947,6837995,6840043,6842091,6844139,6846187,6848235,6850283,6852331,6854379,6856427,6858475,6860523,6862571,6864619,6866667,6868715,6870763,6872811,6874859,6876907,6878955,6881003,6883051,6885099,6887147,6889195,6891243,6893291,6895339,6897387,6899435,6901483,6903531,6905579,6907627,6909675,6911723,6913771,6915819,6917867,6919915,6921963,6924011,6926059,6928107,6930155,6932203,6934251,6936299,6938347,6940395,6942443,6944491,6946539,6948587,6950635,6952683,6954731,6956779,6958827,6960875,6962923,6964971,6967019,6969067,6971115,6973163,6975211,6977259,6979307,6981355,6983403,6985451,6987499,6989547,6991595,6993643,6995691,6997739,6999787,7001835,7003883,7005931,7007979,7010027,7012075,7014123,7016171,7018219,7020267,7022315,7024363,7026411,7028459,7030507,7032555,7034603,7036651,7038699,7040747,7042795,7044843,7046891,7048939,7050987,7053035,7055083,7057131,7059179,7061227,7063275,7065323,7067371,7069419,7071467,7073515,7075563,7077611,7079659,7081707,7083755,7085803,7087851,7089899,7091947,7093995,7096043,7098091,7100139,7102187,7104235,7106283,7108331,7110379,7112427,7114475,7116523,7118571,7120619,7122667,7124715,7126763,7128811,7130859,7132907,7134955,7137003,7137863,7138599,7139158,7139736,7140338,7140948,7141571,7142243,7142865,7143400,7143989,7144741,7146089,7146546,7147111,7147763,7148349,7148778,7149144,7149562,7150804,7152456,7153877,7154925,7155955,7157210,7158344,7159404,7161054,7162302,7163466,7164565,7166285,7167763,7168665,7169568,7170741,7171093,7171535,7171996,7172485,7173016,7173451,7173895,7174213,7174563,7174838,7175136,7175441,7176371,7178383,7179941,7181770,7183297,7185026,7186377,7187491,7188663,7189621,7190848,7192010,7193021,7194165,7195037,7196178,7197310,7197847,7199036,7200257,7201348,7202420,7203654,7204482,7205676,7206608,7207555,7208780,7209724,7210889,7211542,7212554,7213490,7214451,7215728,7216548,7217692,7218625,7219748,7220822,7221935,7223258,7224224,7225312,7226429,7227335,7228411,7229121,7229957,7230269,7230580,7231019,7232030,7232941,7233867,7234744,7236381,7237300,7239142,7240074,7242108,7243797,7245316,7246795,7248390,7250000,7251583,7253198,7254834,7256508,7258124,7259768,7261436,7263104,7264745,7266379,7268018,7269622,7271239,7272905,7274636,7276345,7278034,7279782,7281547,7283301,7284981,7286693,7288439,7290242,7292025,7293852,7295742,7297633,7299520,7301404,7303300,7305163,7306938,7308737,7310558,7312373,7314215,7315993,7317818,7319624,7321408,7323075,7324582,7326186,7327815,7329418,7330952,7332381,7333942,7335546,7337200,7338838,7340703,7342520,7343942,7345372,7346862,7348417,7349873,7351389,7352931,7354344,7355822,7357352,7358975,7360420,7361896,7363563,7365233,7366864,7368606,7370402,7372057,7373776,7375425,7377008,7378567,7380061,7381641,7383276,7384828,7386439,7388056,7389694,7391279,7392812,7394360,7395988,7397618,7399226,7400855,7402449,7403993,7405548,7407161,7408792,7410399,7411855,7412995,7414409,7415904,7417386,7418749,7420190,7421687,7423259,7424858,7426441,7427865,7429279,7430901,7432759,7433314,7433939,7434518,7435123,7435828,7436548,7437206,7438107,7439065,7440099,7441197,7442135,7443357,7444617,7445933,7447224,7448517,7449871,7451235,7452610,7454079,7455526,7456909,7458303,7459846,7461361,7462789,7464197,7465612,7466827,7467811,7468825,7469722,7470980,7472282,7473565,7474740,7475822,7476823,7477786,7478834,7479830,7480604,7481579,7482537,7483451,7484155,7485035,7485924,7486664,7487012,7487800,7488474,7489095,7489797,7490357,7490923,7492941,7493797,7494541,7495357,7496240,7497204,7498298,7499370,7500487,7501590,7502730,7503784,7504670,7505499,7506233,7507387,7508711,7510092,7511535,7513003,7514493,7515981,7517463,7518739,7520310,7521875,7523474,7524976,7526524,7528174,7529887,7531576,7533188,7534680,7536247,7537770,7539338,7540835,7542310,7543690,7544963,7546262,7547457,7548468,7549435,7550517,7551554,7552686,7553790,7554964,7556193,7557405,7558443,7559379,7560163,7560979,7561783,7562536,7563243,7564651,7566368,7568416,7570464,7572512,7574560,7576608,7578656,7580704,7582752,7584800,7586848,7588896,7590944,7592992,7595040,7597088,7599136,7601184,7603232,7605280,7607328,7609376,7611424,7613472,7615520,7617568,7619616,7621664,7623712,7625760,7627808,7629856,7631904,7633952,7636000,7638048,7640096,7642144,7644192,7646240,7648288,7650336,7652384,7654432,7656480,7658528,7660576,7662624,7664672,7666720,7668768,7670816,7672864,7674912,7676960,7679008,7681056,7683104,7685152,7687200,7689248,7691296,7693344,7695392,7697448,7699496,7701521,7703569,7705617,7707665,7709713,7711761,7713809,7715857,7717905,7719953,7722001,7724049,7726097,7728145,7730193,7732241,7734289,7736337,7738385,7740433,7742481,7744529,7746577,7748625,7750673,7752721,7754769,7756817,7758865,7760913,7762961,7765009,7767057,7769105,7771153,7773201,7775249,7777297,7779345,7781393,7783441,7785489,7787537,7789585,7791633,7793248,7794577,7795852,7796990,7797844,7798172,7798730,7799825,7800803,7801879,7802960,7804010,7804677,7805682,7807211,7808792,7810093,7811532,7812858,7814219,7815587,7816622,7817818,7819010,7819977,7821664,7822937,7824287,7825606,7826811,7828022,7829219,7830350,7831602,7833007,7834439,7835879,7837202,7838501,7839753,7841016,7842494,7844014,7845655,7847241,7848839,7850407,7851970,7853516,7855100,7856654,7858172,7859659,7861157,7862576,7863966,7865307,7866753,7868801,7870849,7872897,7874945,7876993,7879047,7881103,7882998,7885046,7887094,7889142,7891190,7893238,7895286,7897334,7899382,7901430,7903478,7905526,7907574,7909622,7911670,7913718,7915766,7917814,7919862,7921910,7923958,7926006,7928054,7930102,7932150,7934205,7936253,7938301,7940318,7942315,7944225,7946273,7948321,7950369,7952417,7954465,7956513,7958561,7960609,7962657,7964705,7966753,7968801,7970849,7972897,7974945,7976993,7979041,7981089,7983137,7985185,7987233,7989281,7991329,7993377,7995425,7997473,7999521,8001569,8003617,8005665,8007713,8009761,8011809,8013857,8015905,8017953,8020001,8022049,8024097,8026145,8028193,8030241,8032289,8034337,8036385,8038433,8040481,8042529,8044577,8046625,8048673,8050721,8052769,8054817,8056865,8058913,8060961,8063009,8065057,8067105,8069153,8071201,8073249,8075297,8077345,8079393,8081441,8083489,8085537,8087585,8089633,8091681,8093729,8095777,8097825,8099873,8101921,8103969,8106017,8108065,8110113,8112161,8113727,8115048,8116489,8117880,8119242,8120609,8122049,8123509,8124997,8126660,8128343,8129894,8131333,8132777,8134082,8135599,8137236,8138956,8140714,8142368,8143999,8145517,8146963,8148512,8150145,8151789,8153462,8155097,8156706,8158253,8159707,8161285,8163211,8165260,8167308,8169281,8171329,8173354,8175386,8177434,8179446,8181461,8183509,8185503,8187551,8189572,8191595,8193643,8195699,8197745,8199793,8201849,8203869,8205888,8207728,8209776,8211825,8213816,8215369,8216930,8218515,8220133,8221693,8223295,8224205,8224424,8224638,8224847,8225073,8225286,8225670,8225889,8226103,8226345,8226565,8226785,8227917,8229868,8231146,8232402,8233797,8235069,8236147,8237376,8238511,8239773,8240949,8242156,8243435,8244543,8245843,8247843,8249591,8250367,8251623,8253671,8254976,8255602,8257180,8259228,8260184,8260907,8262879,8264534,8265261,8266399,8267357,8268279,8269201,8270123,8271057,8272003,8272950,8273545,8274505,8275296,8276038,8277014,8277988,8279095,8280001,8280969,8281862,8282683,8283678,8284706,8285729,8286763,8287836,8288844,8289682,8290899,8291860,8292962,8294245,8294933,8295712,8296150,8296537,8297537,8298578,8299595,8300515,8301032,8301366,8301702,8302038,8302452,8302815,8303323,8303843,8304730,8305958,8307086,8308036,8309283,8310660,8312208,8313748,8315048,8316443,8317435,8318669,8320214,8321562,8322824,8323989,8325210,8326641,8328075,8329596,8331118,8332211,8333246,8334442,8335728,8337162,8338565,8340118,8341638,8342710,8343919,8345010,8346303,8347793,8349214,8350788,8352232,8353336,8354478,8355599,8357027,8358403,8359902,8361421,8362741,8363824,8365002,8366150,8367592,8369045,8370564,8372062,8373070,8374327,8375497,8376862,8378161,8379533,8380431,8381068,8381675,8382293,8382962,8383620,8384305,8384938,8385576,8386541,8387500,8388341,8389073,8389734,8390680,8391675,8392483,8393127,8394046,8394908,8395815,8396328,8396968,8397727,8398331,8399080,8399929,8400635,8401452,8402118,8402937,8403426,8404109,8404762,8405189,8405932,8406544,8407223,8407975,8408545,8409380,8410003,8410443,8411025,8411770,8412486,8412994,8413476,8414149,8414584,8415020,8415507,8416062,8416704,8417510,8417930,8418401,8419269,8420179,8421277,8422340,8422910,8423431,8423916,8424666,8425379,8426297,8426957,8427591,8428213,8428848,8429873,8430934,8431981,8433071,8433550,8434123,8434950,8435705,8436341,8436946,8437625,8438447,8439150,8439585,8440124,8440907,8441606,8442516,8443298,8444409,8445019,8445877,8446670,8447497,8448402,8449283,8450117,8451012,8451894,8452765,8453608,8454451,8455392,8456129,8456928,8457798,8458615,8459453,8460276,8461310,8461991,8462916,8463904,8464882,8465844,8466818,8467784,8468735,8469681,8470641,8471617,8472583,8473532,8474497,8475455,8476394,8477222,8478396,8479189,8480002,8480509,8481317,8482253,8483096,8483914,8484732,8485549,8486268,8487097,8487951,8488844,8489525,8490341,8491052,8491821,8492603,8493295,8493915,8494836,8496058,8496777,8497530,8499217,8500967,8502715,8504580,8506585,8508492,8510540,8512588,8514636,8516309,8517648,8519432,8521204,8523252,8525280,8527141,8528964,8531012,8532881,8534644,8536692,8538740,8540788,8542681,8544450,8546501,8548381,8550141,8552190,8554193,8555994,8557860,8559082,8560196,8560731,8561392,8562024,8563915,8565963,8567890,8569375,8570750,8571952,8573076,8574515,8576541,8578261,8579485,8580758,8581845,8583082,8584666,8586181,8587542,8588449,8588936,8589058,8589701,8591749,8593797,8595845,8597893,8599941,8601989,8604037,8606085,8608141,8610189,8612246,8614303,8616351,8618329,8620238,8621671,8623719,8625767,8627815,8629863,8631911,8633968,8636025,8638063,8638436,8638787,8640806,8642847,8644895,8646952,8648896,8650264,8652168,8654187,8656221,8658093,8660138,8662186,8664234,8666282,8668330,8670347,8672233,8674281,8676224,8678231,8680287,8682287,8684344,8686399,8688421,8690472,8692521,8694545,8696296,8697771,8699527,8701425,8703473,8705521,8707569,8709617,8711665,8713713,8715770,8717818,8718909,8719897,8721080,8722442,8723602,8724861,8726498,8728001,8728943,8730383,8731550,8732882,8733931,8735033,8736105,8737173,8738223,8739670,8741421,8743309,8745217,8747111,8749011,8750934,8752535,8753684,8754661,8755767,8756954,8758485,8759551,8760576,8761699,8762745,8763867,8764953,8765931,8767248,8768435,8769784,8770832,8772864,8774901,8776872,8778920,8780954,8782927,8784958,8786934,8788982,8791029,8793004,8795032,8797009,8799057,8801097,8803071,8805103,8807151,8809120,8811150,8813135,8815181,8817229,8819206,8821254,8823262,8825301,8827337,8829385,8831424,8833470,8835458,8837506,8839554,8841524,8843581,8845629,8847643,8849678,8851726,8853706,8855763,8857791,8859769,8861817,8863793,8865841,8867890,8869938,8871994,8873970,8876026,8878073,8880128,8882176,8884224,8886280,8888328,8890376,8892377,8894425,8896473,8898521,8900569,8902617,8904665,8906713,8908761,8910809,8912857,8914754,8916802,8918850,8920898,8922946,8924994,8927042,8929090,8931138,8933036,8935084,8937132,8939180,8941228,8943276,8945324,8947372,8949263,8951311,8953359,8955407,8957455,8959503,8961551,8963449,8965497,8967545,8969593,8971641,8973689,8975737,8977751,8979801,8981849,8983897,8985945,8987993,8990041,8992089,8994137,8996029,8998077,9000125,9002173,9004221,9006269,9008317,9010365,9012413,9014461,9016039,9017889,9019534,9021188,9023008,9024183,9025216,9027164,9029150,9031205,9033201,9035244,9037246,9039275,9041102,9043090,9045109,9047160,9049130,9051155,9053187,9054478,9055930,9057268,9058853,9060186,9062110,9063229,9064406,9065547,9066401,9067960,9069460,9070957,9072445,9073832,9074443,9075149,9075850,9076570,9077265,9077944,9078590,9079161,9079669,9080242,9080764,9082206,9084033,9085709,9087409,9089101,9090786,9092725,9094443,9096191,9097955,9099072,9100141,9101939,9103591,9105117,9106599,9108090,9108844,9109348,9109617,9110039,9110449,9110898,9111190,9111808,9113648,9115344,9117029,9118721,9120571,9122355,9124153,9125628,9127159,9128754,9130237,9131714,9133229,9133670,9134213,9134716,9135203,9135605,9135973,9136486,9136976,9137409,9138650,9140451,9142126,9143791,9145462,9147240,9149056,9150853,9152593,9153767,9155456,9157106,9158581,9160056,9161550,9163031,9163803,9164427,9165071,9165647,9166176,9166724,9167295,9167790,9168371,9168875,9169447,9169841,9170220,9171359,9173277,9174971,9176642,9178323,9180000,9181692,9183573,9185392,9187102,9188799,9190562,9191620,9193054,9194754,9196450,9197938,9199420,9200905,9201982,9202567,9203140,9203755,9204312,9204902,9205506,9206100,9206656,9207243,9207775,9208312,9209850,9211675,9213359,9215032,9216696,9218379,9220157,9221997,9223707,9225400,9227092,9228156,9229290,9231043,9232679,9234193,9235684,9237175,9238443,9239026,9239579,9240139,9240620,9241025,9241612,9242178,9242775,9243225,9243581,9244085,9245436,9247203,9248897,9250583,9252246,9253906,9255798,9257504,9259238,9260918,9262302,9263237,9265079,9266727,9268235,9269721,9270820,9271180,9271708,9272121,9272550,9273063,9273552,9274009,9274797,9276611,9278244,9279933,9281599,9283437,9285120,9286816,9288223,9289644,9291206,9292683,9294160,9295618,9297105,9298586,9299900,9300573,9301188,9301698,9302271,9302974,9303440,9304085,9304736,9305313,9305901,9306624,9307329,9307963,9308710,9309386,9310002,9310630,9311258,9311874,9312323,9313375,9315369,9317066,9318738,9320444,9322121,9323779,9325475,9327200,9328911,9330594,9332516,9334303,9336058,9337770,9339468,9341304,9343120,9344900,9345716,9346433,9347435,9349248,9351063,9352741,9354546,9356104,9357575,9359048,9360514,9361972,9362741,9363173,9363617,9364144,9364729,9365350,9365936,9366542,9367035,9367497,9368087,9368556,9369113,9369679,9370707,9372682,9374373,9376067,9377750,9379439,9381130,9382808,9384757,9386482,9388243,9390023,9391816,9393129,9393802,9395186,9397153,9398811,9400528,9402052,9403533,9405022,9406489,9407907,9408527,9409165,9409834,9410434,9411061,9411641,9412138,9412711,9413405,9414002,9414419,9414920,9415349,9415880,9416341,9418304,9420081,9421758,9423444,9425141,9426836,9428543,9430321,9432231,9433931,9435652,9437434,9439229,9440662,9441441,9443056,9444913,9446677,9448209,9449703,9451200,9452679,9454028,9454571,9455129,9455741,9456359,9456974,9457533,9458077,9458314,9458555,9458738,9458979,9459183,9459436,9461128,9463072,9464799,9466487,9468192,9469915,9471646,9473353,9475375,9477157,9478907,9480695,9482494,9484228,9485236,9486894,9488504,9490077,9491526,9492498,9493196,9493823,9494528,9495160,9496894,9498583,9500358,9502047,9503374,9504934,9506389,9507864,9508972,9509534,9510106,9510678,9511188,9511637,9512122,9512556,9513072,9514323,9516097,9517758,9519436,9521089,9522956,9524637,9526323,9527121,9528859,9530537,9531988,9533463,9534927,9536173,9536737,9537334,9537967,9538517,9539082,9539662,9540239,9540651,9541259,9541798,9542373,9544264,9545929,9547610,9549285,9550969,9552675,9554508,9556175,9557943,9559663,9560379,9562033,9563836,9565373,9566844,9568298,9569460,9570021,9570600,9570920,9571424,9571945,9572401,9572697,9572980,9573415,9573956,9575863,9577541,9579233,9580906,9582537,9584265,9586073,9587813,9589474,9590869,9591771,9593624,9595293,9596752,9598203,9599637,9600459,9600771,9601144,9601440,9601845,9602314,9602757,9603090,9603401,9603832,9604222,9604668,9606514,9608146,9609782,9611433,9613102,9614767,9616589,9618323,9619945,9621449,9622718,9624413,9625940,9627426,9628925,9629407,9629850,9630354,9630956,9631544,9632178,9632784,9633377,9633861,9635364,9637077,9638761,9640412,9642094,9643949,9645642,9647340,9649072,9649932,9651743,9653354,9654827,9656309,9657777,9659123,9659653,9660153,9660714,9661260,9661858,9662457,9663074,9663483,9663959,9664514,9664920,9665429,9666002,9667928,9669630,9671308,9672989,9674661,9676348,9678018,9679961,9681641,9683277,9685021,9686630,9687405,9689042,9690772,9692519,9693928,9695418,9696904,9698375,9699860,9701355,9702855,9704340,9705820,9706664,9707308,9708051,9708697,9709269,9709885,9710460,9711198,9711684,9712306,9712793,9713437,9714144,9714722,9715365,9716004,9716622,9717213,9717578,9718281,9718961,9719632,9720130,9720570,9721106,9721644,9721898,9722173,9723030,9725048,9727080,9728816,9730548,9732262,9733945,9735656,9737333,9739031,9740718,9742386,9744054,9745758,9747449,9749503,9751387,9753071,9754816,9756478,9758150,9759862,9761572,9763235,9764927,9766377,9767121,9767934,9769526,9771400,9773242,9773647,9774443,9775317,9775768,9777453,9779113,9780770,9782256,9783761,9785270,9786775,9788277,9789781,9791274,9792749,9794240,9795717,9796635,9797303,9798108,9798729,9799411,9800132,9800788,9801515,9802298,9802933,9803555,9804249,9804948,9805528,9806220,9806856,9807652,9808312,9808961,9809542,9810013,9810532,9811035,9811362,9811645,9812022,9812522,9813046,9813504,9813818,9814022,9814201,9815572,9817620,9819556,9821325,9823023,9824713,9826416,9828087,9829766,9831462,9833177,9834825,9836507,9838171,9839841,9841534,9843243,9845162,9847210,9848974,9850723,9852451,9854184,9855921,9857576,9859252,9860892,9862544,9864259,9865986,9867285,9868164,9869288,9871119,9873008,9874643,9876438,9878212,9879783,9881272,9882747,9884232,9885679,9886180,9886702,9887238,9887774,9888258,9888830,9889275,9889740,9890169,9890666,9890789,9891378,9891935,9893143,9895045,9896706,9898390,9900059,9901747,9903447,9905359,9907023,9908760,9910468,9912167,9913314,9914612,9916354,9918080,9919506,9920951,9922409,9923891,9925399,9926894,9928377,9929851,9931193,9931786,9932393,9933041,9933625,9934191,9934797,9935474,9936127,9936847,9937438,9937930,9938653,9939262,9939914,9940499,9941227,9941771,9942261,9942873,9943510,9944116,9944525,9945058,9945618,9947095,9949118,9950921,9952611,9954281,9955964,9957660,9959359,9961065,9962751,9964412,9966114,9967946,9969953,9971653,9973319,9975009,9976700,9978412,9980126,9981881,9983399,9984266,9985507,9987281,9988924,9990443,9992079,9993726,9995236,9996703,9998179,9999661,10001147,10002643,10003183,10003712,10004200,10004753,10005483,10006063,10006747,10007323,10008025,10008693,10009256,10009718,10010310,10011035,10011705,10012112,10012521,10014185,10016111,10017778,10019436,10021086,10022758,10024471,10026165,10027830,10029782,10031556,10033235,10034963,10036775,10038519,10040271,10041310,10042913,10044645,10046465,10048032,10049515,10051012,10052489,10054002,10055489,10056976,10058465,10059961,10061464,10062975,10064484,10065981,10066654,10067318,10067995,10068533,10069200,10069812,10070288,10070916,10071578,10072195,10072776,10073387,10073994,10074596,10075141,10075715,10076293,10076794,10077315,10077948,10078534,10078927,10079561,10080156,10080759,10081299,10081853,10082369,10082998,10083569,10084125,10084695,10085278,10085768,10086350,10086757,10087223,10087776,10088215,10088822,10090293,10092344,10094384,10096336,10098045,10099758,10101468,10103176,10104895,10106577,10108294,10109997,10111710,10113426,10115146,10116841,10118558,10120258,10121970,10123691,10125395,10127367,10129415,10131212,10132910,10134644,10136348,10138056,10139747,10141475,10143213,10144883,10146633,10148344,10150124,10151564,10152440,10153348,10154199,10155274,10156968,10158618,10160237,10161873,10163453,10165017,10166343,10167481,10168171,10169896,10171677,10173451,10175065,10176549,10178028,10179508,10180994,10182192,10182870,10183526,10184112,10184636,10185093,10185456,10185868,10186357,10186623,10187090,10187627,10188008,10188973,10190941,10192613,10194293,10195978,10197662,10199330,10201046,10202973,10204706,10206454,10208174,10209864,10210772,10212519,10214290,10215786,10217248,10218728,10219520,10219919,10220452,10220899,10221262,10221547,10221997,10222281,10223217,10225028,10226700,10228380,10230056,10231942,10233651,10235357,10236848,10238352,10239967,10241430,10242904,10244366,10245834,10246752,10247303,10247883,10248481,10249108,10249650,10250163,10250766,10251409,10251726,10252197,10252647,10253143,10253497,10255085,10256900,10258552,10260210,10261888,10263532,10265219,10266940,10268796,10270498,10272197,10273893,10275063,10275533,10276699,10278069,10279486,10281090,10282607,10284087,10285375,10285726,10285913,10286359,10286694,10287056,10287365,10287596,10288153,10289958,10291600,10293242,10294894,10296691,10298341,10299826,10300908,10302447,10303919,10305358,10306745,10307300,10307883,10308276,10308778,10309311,10309765,10310773,10312533,10314199,10315855,10317688,10319418,10320514,10322139,10323627,10325117,10326583,10328063,10329515,10330994,10332478,10333252,10333828,10334479,10335134,10335730,10336201,10336692,10337270,10337855,10338161,10338723,10339238,10339837,10340292,10340772,10341151,10341540,10342031,10342331,10343429,10345347,10347136,10348799,10350483,10352176,10353867,10355549,10357202,10358865,10360523,10362554,10364266,10366007,10367763,10369498,10371178,10372847,10373807,10374625,10376228,10377780,10379289,10380957,10382615,10384098,10385578,10387054,10388542,10389161,10389598,10389983,10390522,10390972,10391372,10391709,10392217,10392704,10393177,10393580,10393963,10394322,10394994,10396933,10398579,10400243,10401900,10403561,10405218,10406887,10408861,10410499,10412183,10413865,10415364,10416002,10417179,10418738,10420439,10421953,10423442,10424615,10425138,10425682,10425984,10426157,10426753,10427047,10427870,10429603,10431308,10432992,10434855,10436633,10438377,10439456,10441131,10443179,10445235,10447286,10449336,10451390,10453011,10454592,10456111,10457500,10458412,10459225,10460069,10460844,10461711,10462535,10464149,10466149,10468149,10470091,10472075,10473611,10474701,10476089,10477298,10478772,10479960,10480904,10482202,10482949,10483874,10484985,10486169,10487162,10488303,10489262,10490377,10491405,10492358,10493302,10494371,10495488,10496600,10497638,10498415,10499411,10500381,10501300,10502240,10503158,10504030,10505046,10505925,10506902,10507935,10508949,10509911,10510993,10512034,10512970,10513877,10514757,10515693,10516691,10517600,10518579,10519522,10520448,10521422,10522294,10523292,10524355,10525320,10526327,10527184,10528220,10529256,10530342,10531388,10532374,10533355,10534474,10535566,10536688,10537841,10538961,10540096,10541178,10542298,10543383,10544552,10545694,10546847,10547906,10549004,10549950,10550598,10551694,10552893,10553984,10554935,10556048,10557240,10558358,10559393,10560520,10561572,10562600,10563643,10564717,10565980,10567097,10568163,10569187,10570302,10571471,10572550,10573729,10574834,10576041,10577139,10578194,10579353,10580512,10581688,10582851,10583924,10585104,10586348,10587468,10588542,10589744,10590873,10592333,10594381,10595736,10596808,10597886,10598836,10599788,10600769,10601889,10602875,10603877,10604774,10605992,10607095,10607911,10608962,10609953,10610953,10611976,10612672,10613476,10614195,10615038,10616117,10617540,10619029,10620481,10622019,10623992,10626040,10628088,10629990,10631390,10633426,10635478,10637526,10639574,10641594,10643404,10645461,10647129,10649049,10651103,10653151,10655199,10657247,10659295,10661343,10663391,10665445,10667453,10669477,10671500,10673535,10675575,10677603,10679558,10681384,10683070,10685013,10687061,10689109,10691157,10693205,10695253,10697301,10699349,10701397,10703445,10705493,10707541,10709569,10711516,10713347,10715143,10716525,10718245,10720174,10722074,10723837,10725775,10727823,10729876,10731932,10733980,10736028,10738084,10740132,10742180,10744228,10746276,10748324,10750372,10752420,10754468,10756472,10757997,10759016,10761048,10763096,10765144,10767192,10769240,10771288,10773336,10775384,10777432,10779480,10781528,10783576,10785624,10787672,10789720,10791768,10793816,10795872,10797920,10799942,10801590,10803544,10805592,10807640,10809689,10811575,10813167,10814541,10815768,10816783,10817497,10817969,10819868,10821916,10823973,10826021,10828078,10830135,10832183,10834231,10836279,10838335,10840216,10841652,10842384,10844439,10846494,10848521,10850478,10852331,10854039,10855564,10856758,10857637,10858238,10858522,10858760,10860674,10862730,10864778,10866827,10868878,10870926,10872983,10875040,10877088,10879145,10881202,10883256,10885303,10887296,10889118,10890738,10892235,10893551,10895583,10897640,10899688,10901736,10903791,10905839,10907887,10909943,10911991,10914039,10916092,10918136,10920163,10922091,10923800,10925271,10926324,10927472,10929283,10931145,10933168,10935216,10937272,10939328,10941280,10942968,10944269,10945184,10947232,10949279,10951327,10953266,10955214,10957262,10959318,10961131,10961749,10961812,10962029,10962061,10962755,10964803,10966851,10968908,10970956,10973004,10975059,10977107,10979148,10981038,10983087,10985135,10987183,10989231,10991242,10993290,10995338,10997386,10999434,11001482,11003530,11005585,11007633,11009681,11011668,11013195,11015186,11017181,11018737,11020336,11022384,11024398,11026001,11027302,11028821,11030693,11032747,11034804,11036859,11038907,11040949,11042986,11044851,11046303,11046699,11047679,11049727,11051775,11053832,11055878,11057926,11059980,11062028,11064076,11066124,11068174,11070183,11072034,11073884,11075833,11077395,11079378,11081426,11083474,11085522,11087570,11089618,11091666,11093714,11095762,11097689,11099737,11101785,11103833,11105881,11107938,11109986,11112043,11114050,11115717,11117704,11119663,11121561,11122605,11124655,11126703,11128727,11130609,11132289,11134337,11136385,11138433,11140481,11142537,11144585,11146633,11148681,11150737,11152578,11153923,11155532,11157458,11159433,11161481,11163516,11165565,11167600,11169628,11171683,11173740,11175785,11177821,11179849,11181883,11183876,11185850,11187867,11189923,11191960,11194012,11196053,11198090,11200104,11202146,11204187,11206233,11208276,11210316,11212346,11214269,11216071,11217689,11219096,11220400,11221585,11222809,11224019,11225115,11226140,11227295,11228300,11229386,11230258,11231164,11232018,11232819,11233497,11234048,11234502,11234662,11234842,11234982,11235042,11235103,11236934,11238959,11241011,11243059,11245109,11247041,11248787,11250426,11251661,11252486,11254534,11256582,11258630,11260678,11262569,11264617,11266665,11268713,11270689,11272737,11274785,11276833,11278861,11280897,11282945,11285002,11287050,11289107,11291127,11293175,11295231,11297277,11299303,11301351,11303396,11305363,11307251,11309097,11310812,11312569,11314230,11316110,11318163,11320220,11322252,11324309,11326357,11328409,11330275,11332202,11334257,11336305,11338353,11340401,11342457,11344511,11346553,11348471,11350519,11352558,11354507,11356086,11357956,11360004,11362052,11363632,11365425,11367473,11369521,11371569,11373617,11375665,11377713,11379761,11381809,11383835,11385770,11387479,11388982,11390424,11391710,11392888,11394348,11396396,11398444,11400501,11402552,11404598,11406495,11408218,11409338,11409592,11410609,11412044,11413767,11415652,11417607,11419511,11421441,11423458,11425392,11427169,11428717,11430041,11431158,11431767,11432156,11433702,11435712,11437746,11439242,11440223,11441934,11443982,11446030,11448078,11450126,11452174,11454222,11456270,11458318,11460270,11462311,11464352,11466197,11467727,11468755,11470207,11472255,11474122,11475574,11477222,11479270,11481318,11483368,11485416,11487473,11489523,11491571,11493625,11495567,11497458,11499091,11501125,11502785,11503934,11505116,11507168,11509216,11511264,11513312,11515360,11517408,11519463,11521336,11523197,11525245,11527293,11529341,11531389,11533437,11535485,11537441,11538508,11539942,11541804,11543831,11545885,11547942,11549990,11551314,11552931,11554824,11556821,11558878,11560926,11562974,11565024,11567047,11568905,11570226,11571227,11572047,11572547,11572936,11573175,11573295,11575102,11577150,11579198,11581246,11583294,11585342,11587390,11589438,11591486,11593534,11595582,11597630,11599678,11601726,11603774,11605822,11607870,11609918,11611225,11613281,11615329,11617377,11619425,11621473,11623521,11625569,11627617,11628715,11628973,11630272,11631969,11633914,11635967,11638015,11640063,11642111,11644159,11646207,11648255,11650303,11652351,11654399,11656309,11657951,11659441,11660804,11661985,11663047,11664009,11664913,11665629,11666465,11667453,11668317,11669177,11670777,11672833,11674881,11676929,11678977,11681025,11683073,11685121,11687169,11689217,11691265,11693313,11695361,11697409,11699287,11700528,11701302,11701962,11703462,11705510,11707558,11709606,11711654,11713127,11714878,11716912,11718686,11719965,11720934,11721505,11722285,11723353,11725410,11727297,11728496,11729017,11730841,11732764,11734773,11736822,11738870,11740918,11742967,11744996,11747011,11748536,11750343,11752151,11754086,11756060,11758116,11760173,11762221,11764269,11766317,11768365,11770422,11772462,11774506,11776258,11777752,11778614,11779359,11780920,11782976,11785033,11787081,11789129,11791177,11793225,11795273,11797321,11799372,11801374,11803115,11804568,11805656,11806643,11806840,11807248,11809296,11811327,11813303,11815225,11817025,11818715,11820465,11822513,11824543,11826326,11827924,11829178,11830949,11832693,11834723,11836771,11838704,11840756,11841776,11843833,11845497,11847386,11849293,11851341,11852993,11854898,11856266,11857706,11858820,11860455,11862459,11864488,11866484,11868470,11870476,11872468,11874382,11876430,11878486,11880525,11882226,11883197,11884522,11886570,11888618,11890666,11892714,11894762,11895936,11897068,11899124,11901172,11903220,11905268,11906735,11907098,11908978,11911034,11913080,11915128,11917176,11919224,11921272,11923229,11925286,11927334,11928808,11930863,11932920,11934689,11936737,11938785,11940425,11942464,11944496,11945955,11947279,11949231,11950707,11951467,11953517,11955565,11957622,11959674,11960955,11961075,11961227,11962606,11964656,11966704,11968752,11970800,11972848,11974896,11976949,11978868,11980916,11982964,11984873,11986929,11988977,11990947,11992995,11995021,11997069,11999122,12001175,12003181,12005147,12006923,12008721,12010439,12012071,12013763,12014970,12016623,12018317,12019863,12021153,12022468,12024516,12026421,12028241,12030169,12032217,12034265,12036313,12038325,12039769,12040796,12041515,12042981,12044859,12046204,12047920,12049731,12051779,12053827,12055884,12057932,12059980,12062028,12064076,12066132,12068182,12070223,12072210,12073990,12075573,12076971,12078139,12079052,12080419,12082467,12084515,12086563,12088611,12090659,12092181,12092876,12094897,12096946,12098994,12100980,12102878,12104908,12106956,12109004,12111052,12113100,12115148,12117196,12119250,12121194,12122973,12124381,12125133,12126166,12128214,12130262,12132310,12134358,12135680,12135876,12136940,12138982,12141030,12143078,12145126,12147174,12149228,12151276,12153324,12155278,12156809,12157033,12157623,12159028,12160992,12163040,12165088,12167136,12169184,12171232,12173287,12175344,12177401,12179449,12181505,12183505,12185400,12187182,12188963,12190677,12192221,12193634,12194909,12196163,12197368,12198401,12199132,12199672,12200241,12200735,12201182,12201662,12202060,12202461,12202911,12203382,12203826,12204379,12204880,12205095,12205480,12206396,12207548,12208729,12209961,12211103,12212127,12213107,12213969,12214658,12215166,12215435,12215554,12215728,12216833,12218458,12220317,12222372,12224429,12226477,12228484,12230444,12232417,12234265,12236272,12238023,12240049,12242026,12243672,12245284,12247332,12249385,12251426,12253434,12255481,12257515,12259549,12261600,12263605,12265579,12267595,12269619,12271501,12273509,12275562,12277610,12279647,12281338,12283192,12285194,12286953,12288843,12290894,12292638,12293926,12295579,12297630,12299683,12301677,12303584,12305497,12307423,12309317,12311209,12313243,12315291,12317347,12319397,12321245,12323301,12325326,12326914,12328466,12330054,12331433,12332534,12332963,12333573,12333950,12334445,12335133,12335867,12336975,12338585,12339974,12341408,12342751,12344031,12345454,12347196,12348898,12350699,12352493,12354405,12356428,12358457,12360498,12362553,12364605,12366662,12368719,12370775,12372823,12374879,12376919,12378905,12380888,12382880,12384871,12386756,12388520,12390249,12391964,12393659,12395335,12396860,12398282,12399748,12401154,12402587,12403911,12405155,12406348,12407587,12408785,12409928,12410998,12411948,12412874,12413784,12415319,12416747,12418241,12419780,12421220,12422665,12424234,12425766,12427253,12428819,12430288,12431832,12433453,12435181,12436741,12438378,12439906,12441414,12443018,12444726,12446474,12448238,12450006,12451760,12453570,12455438,12457361,12459232,12461215,12463152,12465124,12467174,12469227,12471275,12473323,12475371,12477421,12479473,12481488,12483383,12485134,12486724,12487837,12489205,12490996,12492981,12495035,12497086,12499134,12500517,12500699,12501741,12503789,12505837,12507890,12509293,12511341,12512400,12514456,12516509,12518124,12519655,12521703,12523751,12525799,12527847,12529374,12531422,12533385,12534971,12536238,12538286,12540334,12542382,12544430,12546487,12548535,12550509,12552551,12554599,12556647,12558695,12560752,12562800,12564848,12566896,12568944,12570992,12573040,12575096,12577099,12579153,12581201,12583257,12585305,12587361,12589366,12591333,12593339,12595389,12597445,12599493,12601539,12603587,12605635,12607683,12609731,12611779,12613835,12615601,12616905,12618953,12621006,12623062,12625118,12627166,12629215,12631269,12633181,12635096,12636920,12638467,12640083,12641525,12643236,12645081,12646657,12648087,12649470,12650599,12651497,12651865,12653395,12655443,12657491,12659539,12661594,12663584,12665244,12666330,12666543,12667464,12669512,12671560,12673531,12675172,12676601,12678341,12680191,12681245,12681446,12682166,12683240,12683610,12684001,12684390,12684733,12685136,12685529,12685912,12686210,12687010,12687913,12688718,12689413,12689963,12690525,12690961,12691409,12692080,12692610,12693302,12694126,12694590,12695238,12695872,12696720,12697657,12697910,12698374,12698888,12699244,12699686,12700767,12701383,12702094,12702550,12702942,12703873,12704507,12705336,12705964,12706789,12707822,12708626,12709809,12710854,12712118,12713371,12713774,12714182,12714644,12714853,12715143,12715552,12715806,12716355,12716975,12717573,12717739,12718055,12718404,12718722,12718879,12719071,12719385,12719563,12719843,12720148,12720394,12720754,12721049,12721250,12721359,12721544,12721782,12721956,12722218,12723041,12723664,12724105,12724514,12725292,12726060,12726955,12727641,12728480,12729516,12730245,12730926,12731759,12732064,12732530,12732822,12733153,12733511,12733747,12734180,12734775,12735147,12735466,12735870,12736892,12737505,12738666,12739337,12739988,12740711,12741508,12741967,12742435,12743068,12743446,12744305,12746070,12747669,12748708,12749941,12751375,12752806,12754316,12755146,12756167,12757126,12757956,12758867,12760012,12760527,12761684,12762492,12763545,12764125,12765159,12765433,12766002,12766554,12766883,12767686,12768041,12768588,12769327,12770027,12770573,12771220,12771748,12772193,12772767,12773980,12775270,12776185,12776951,12777843,12779127,12780046,12780756,12782048,12783606,12784585,12785674,12786538,12787701,12788815,12790261,12791209,12792305,12793209,12794385,12795201,12796121,12797003,12797976,12799010,12800155,12801258,12801600,12802103,12802352,12802702,12803115,12803314,12803593,12803673,12803999,12804324,12804905,12805346,12805903,12806174,12806740,12807286,12808166,12808991,12809703,12810413,12811219,12812218,12813581,12814669,12815904,12817273,12818289,12819312,12820130,12820632,12821005,12821836,12822776,12823808,12824468,12825417,12825807,12826154,12826693,12827316,12827804,12828899,12830118,12831200,12831514,12832071,12832478,12833058,12833528,12834065,12834359,12834896,12835210,12835710,12836164,12836673,12836929,12837603,12837852,12838250,12838999,12839665,12840442,12840735,12842153,12842676,12843093,12843745,12844337,12844780,12845505,12845926,12846316,12846855,12847020,12847464,12848007,12848498,12849441,12850183,12851333,12852128,12853144,12853772,12854241,12854615,12854834,12855085,12855585,12856308,12856974,12857535,12858199,12858730,12859110,12859491,12859970,12860357,12860777,12861175,12861893,12862098,12862410,12862616,12862931,12863189,12863562,12863701,12863924,12864178,12864547,12864660,12864769,12864994,12865109,12865226,12865341,12865456,12865573,12865721,12865896,12866220,12866650,12866935,12867131,12867969,12868814,12869628,12870194,12871204,12872043,12872639,12873243,12873811,12874308,12874647,12875914,12877254,12878309,12879409,12880545,12881854,12883259,12884888,12886519,12887939,12889145,12889953,12890895,12891867,12893274,12894993,12896704,12897913,12899448,12900903,12902063,12903095,12903708,12904182,12904875,12905171,12905922,12906515,12907332,12908042,12908483,12908905,12909344,12909730,12910109,12910460,12910724,12911266,12911456,12911879,12912071,12912541,12912980,12913314,12913530,12913787,12913996,12914144,12914418,12914893,12915581,12916843,12917739,12918473,12918865,12919078,12919539,12920078,12920656,12921054,12921620,12922232,12922445,12922924,12923617,12924701,12925569,12926231,12926920,12927359,12927888,12928659,12929150,12929587,12930011,12930757,12931322,12931984,12932598,12933273,12933774,12934000,12934348,12934743,12935174,12935648,12935686,12935723,12935761,12935895,12936105,12936317,12936525,12936804,12936990,12937192,12937379,12937543,12937697,12938070,12938378,12938669,12939018,12939225,12939283,12940281,12941490,12942667,12943884,12945008,12946180,12946959,12948280,12949037,12949435,12949774,12950913,12952266,12952840,12953982,12955746,12957191,12958627,12960163,12961671,12963148,12964689,12966049,12967539,12968996,12970539,12971980,12973427,12974903,12976480,12977986,12979500,12980939,12982414,12983813,12985172,12986514,12988052,12989582,12991203,12992614,12994187,12995816,12997325,12999044,13000686,13002370,13004079,13005612,13006647,13007573,13008647,13009769,13010990,13012923,13014633,13016394,13018126,13019805,13021507,13023234,13024938,13026663,13028399,13030075,13031806,13033566,13035345,13037100,13038796,13040357,13042052,13043735,13045385,13047049,13048763,13050458,13052198,13053886,13055578,13057253,13058900,13060578,13062233,13063808,13065415,13067061,13068986,13070545,13072279,13073949,13075556,13077212,13078866,13080602,13082333,13084158,13085976,13087798,13089634,13091466,13093247,13094942,13096730,13098382,13100180,13101984,13103824,13105582,13107240,13109024,13110865,13112560,13114350,13116142,13117905,13119617,13121272,13122911,13124532,13126251,13127924,13129590,13131205,13132796,13134391,13136049,13137699,13139346,13141066,13142763,13144472,13146144,13147868,13149565,13151342,13153046,13154680,13156437,13158147,13159863,13161584,13163238,13164868,13166582,13168271,13169896,13171531,13173126,13174748,13176301,13177773,13179301,13180832,13182443,13183590,13184650,13185478,13186085,13187046,13188369,13189826,13191303,13192591,13193697,13194871,13196077,13197226,13198610,13199968,13201207,13202527,13203792,13205088,13206237,13207212,13208052,13208790,13209675,13210632,13211300,13211948,13212841,13213902,13214973,13216080,13217290,13218952,13220455,13221885,13223275,13224698,13226330,13227722,13229228,13230747,13232333,13233679,13234986,13236293,13237567,13238169,13238387,13238594,13238843,13239059,13239379,13240283,13241590,13242944,13244084,13245689,13247318,13248621,13250020,13251649,13252857,13253703,13255068,13256337,13257078,13258426,13259935,13261399,13262900,13264471,13266030,13267615,13268972,13270327,13271835,13273086,13274554,13276064,13277776,13279171,13280657,13282144,13283585,13285079,13286711,13287833,13289281,13290878,13292331,13293958,13295440,13297051,13298658,13299770,13301513,13302886,13304491,13305968,13307163,13308610,13310139,13311808,13313423,13314802,13316189,13317811,13319130,13320747,13322242,13323847,13325184,13326412,13328025,13329590,13331132,13332675,13334006,13335387,13336890,13338569,13339803,13341521,13342881,13344359,13345930,13347549,13348918,13350138,13351701,13353385,13354971,13356576,13357839,13359287,13360722,13362362,13363435,13364901,13366219,13367898,13368980,13370330,13371752,13373280,13374606,13375963,13377566,13379120,13380801,13382414,13383938,13385301,13386635,13388351,13389736,13391396,13393090,13394563,13396043,13397620,13399029,13400694,13401851,13403632,13405337,13406717,13408496,13409933,13411555,13413388,13414900,13416614,13417934,13419462,13421264,13422524,13424200,13425953,13427378,13428821,13430376,13431828,13433400,13435042,13436391,13437981,13439682,13441194,13442742,13444345,13446038,13447826,13449396,13450997,13452173,13453827,13455659,13457050,13458582,13460478,13462342,13464253,13466207,13468251,13470253,13472307,13474321,13476344,13478363,13480400,13482416,13484457,13486474,13488520,13490573,13492620,13494667,13496656,13498642,13500643,13502671,13504706,13506748,13508802,13510858,13512886,13514925,13516971,13518986,13521004,13523036,13525079,13527128,13529174,13531215,13533270,13535303,13537313,13539340,13541197,13543200,13545232,13547268,13549323,13551359,13553411,13555447,13557485,13559495,13561477,13563477,13565460,13567446,13569454,13571452,13573469,13575506,13577534,13579583,13581598,13583598,13585570,13587557,13589533,13591544,13593530,13595562,13597585,13599611,13601662,13603692,13605684,13607648,13609650,13611659,13613648,13615643,13617691,13619738,13621795,13623841,13625845,13627827,13629820,13631840,13633856,13635911,13637933,13639975,13642029,13644077,13646130,13648154,13650204,13652231,13654264,13656267,13658305,13660305,13662356,13664371,13666302,13668298,13670250,13672228,13674209,13676218,13678156,13680109,13682100,13684099,13686066,13688007,13690013,13691993,13693989,13695940,13697905,13699866,13701839,13703826,13705825,13707750,13709729,13711724,13713691,13715653,13717657,13719631,13721602,13723580,13725557,13727562,13729544,13731508,13733478,13735455,13737445,13739465,13741448,13743454,13745444,13747424,13749418,13751409,13753414,13755362,13757363,13759328,13761314,13763305,13765289,13767263,13769209,13771187,13773166,13775169,13777125,13779136,13781130,13783110,13785114,13787132,13789128,13791132,13793139,13795129,13797116,13799079,13801055,13803055,13805053,13806999,13808926,13810919,13812946,13814900,13816882,13818935,13820971,13822948,13824933,13826947,13828965,13830924,13832955,13834952,13836974,13839010,13841050,13843051,13845063,13847099,13849120,13851122,13853093,13855077,13857101,13859122,13861125,13863102,13864949,13866935,13868992,13871040,13873080,13874985,13876949,13878870,13880766,13882509,13884428,13886306,13888210,13889952,13891884,13893741,13895706,13897708,13899693,13901519,13903455,13905410,13907234,13909108,13910961,13912933,13914891,13916849,13918749,13920683,13922579,13924522,13926406,13928235,13930250,13932224,13934119,13936069,13937899,13939868,13941728,13943604,13945453,13947336,13949300,13951298,13953190,13955208,13957185,13959080,13960948,13962783,13964707,13966561,13968504,13970481,13972392,13974334,13976347,13978308,13980276,13982073,13984005,13985764,13987748,13989684,13991652,13993571,13995456,13997417,13999357,14001311,14003122,14005144,14007113,14009084,14010858,14012591,14014398,14016146,14018060,14019930,14021806,14023612,14025481,14027323,14029170,14031126,14033058,14034968,14036910,14038820,14040727,14042662,14044592,14046481,14048398,14050299,14052199,14054145,14056055,14058056,14059945,14061912,14063801,14065664,14067594,14069441,14071347,14073162,14075062,14076992,14078776,14080738,14082236,14084005,14085347,14087114,14088950,14090662,14092561,14094540,14096470,14098436,14100417,14102394,14104377,14106302,14108275,14110278,14112247,14114204,14116204,14117938,14119353,14120772,14122205,14123633,14125092,14126642,14128021,14129649,14131149,14132577,14134115,14135771,14137537,14139154,14140780,14142686,14144707,14146681,14148618,14150621,14152591,14154398,14156336,14158273,14160288,14162266,14164194,14166182,14168099,14170059,14171896,14173749,14175714,14177736,14179762,14181656,14183675,14185583,14187496,14189408,14191295,14193285,14195251,14197263,14199161,14201190,14203126,14205034,14206927,14208789,14210788,14212725,14214744,14216640,14218602,14220458,14222349,14224247,14226099,14228072,14230050,14232044,14233966,14235915,14237854,14239712,14241619,14243500,14245495,14247508,14249481,14251418,14253423,14255347,14257197,14259116,14261043,14263008,14264949,14266860,14268787,14270750,14272662,14274618,14276525,14278407,14280153,14281900,14283526,14285191,14286863,14288598,14290363,14292072,14293738,14295408,14297126,14298843,14300560,14302299,14304000,14305647,14307345,14309011,14310718,14312454,14314166,14315884,14317525,14319182,14320829,14322548,14324308,14326041,14327708,14329326,14330914,14332593,14334355,14336062,14337737,14339374,14341032,14342661,14344335,14346085,14347830,14349535,14351205,14352856,14354529,14356300,14358095,14359850,14361490,14363079,14364732,14366504,14368400,14370239,14371994,14373726,14375492,14377313,14379178,14381001,14382838,14384638,14386417,14388282,14390016,14391793,14393501,14395192,14396882,14398579,14400295,14401933,14403546,14405293,14407018,14408733,14410352,14412186,14413862,14415499,14417286,14418989,14420504,14422233,14423936,14425677,14427343,14429095,14430850,14432615,14434288,14436082,14437875,14439686,14441359,14443129,14444862,14446617,14448345,14450121,14451885,14453828,14455723,14457718,14459723,14461714,14463664,14465582,14467525,14469435,14471451,14473432,14475401,14477413,14479399,14481375,14483382,14485349,14487351,14489317,14491290,14493262,14495252,14497262,14499249,14501231,14503193,14505178,14507149,14509098,14511085,14513102,14515099,14517089,14519045,14521029,14523001,14524967,14526943,14528911,14530879,14532837,14534823,14536789,14538758,14540721,14542709,14544666,14546637,14548588,14550576,14552519,14554482,14556447,14558403,14560369,14562324,14564312,14566276,14568241,14570204,14572169,14574121,14576088,14578040,14580011,14581963,14583936,14585881,14587852,14589798,14591772,14593717,14595695,14597632,14599614,14601569,14603469,14605406,14607309,14609215,14611122,14613034,14614932,14616867,14618754,14620667,14622584,14624486,14626396,14628310,14630212,14632124,14634059,14635909,14637832,14639739,14641569,14643485,14645397,14647234,14649129,14651056,14652894,14654778,14656720,14658561,14660431,14662382,14664223,14666078,14668030,14669868,14671702,14673657,14675516,14677330,14679294,14681131,14682943,14684835,14686614,14688457,14690351,14692113,14693966,14695857,14697594,14699468,14701364,14703126,14705008,14706889,14708667,14710555,14712408,14714192,14716091,14717915,14719738,14721630,14723428,14725279,14727194,14729005,14730883,14732794,14734607,14736504,14738349,14740222,14742135,14743954,14745827,14747742,14749549,14751442,14753293,14755142,14757054,14758881,14760732,14762645,14764496,14766390,14768276,14770122,14772013,14773905,14775750,14777636,14779529,14781376,14783263,14785156,14786999,14788883,14790776,14792619,14794498,14796391,14798233,14800110,14802005,14803853,14805728,14807620,14809464,14811352,14813255,14815088,14816991,14818901,14820736,14822650,14824557,14826395,14828308,14830218,14832061,14833978,14835863,14837713,14839645,14841514,14843366,14845285,14847141,14849001,14850925,14852791,14854668,14856581,14858495,14860412,14862332,14864239,14866147,14868052,14869978,14871898,14873810,14875726,14877668,14879581,14881490,14883405,14885308,14887231,14889162,14891149,14893125,14895120,14897106,14899091,14901071,14903074,14905065,14907053,14909027,14911007,14912920,14914885,14916763,14918701,14920600,14922515,14924417,14926342,14928157,14930099,14932026,14933899,14935825,14937790,14939766,14941713,14943692,14945659,14947594,14949585,14951512,14953499,14955432,14957398,14959332,14961296,14963244,14965221,14967110,14969056,14970899,14972880,14974714,14976677,14978533,14980449,14982353,14984229,14986146,14988003,14989955,14991786,14993775,14995607,14997557,14999388,15001267,15003103,15004955,15006844,15008651,15010584,15012377,15014269,15016133,15017970,15019830,15021642,15023553,15025342,15027272,15029087,15030967,15032818,15034871,15036918,15038936,15040951,15042995,15044994,15047022,15049040,15051057,15053105,15055134,15057171,15059207,15061257,15063274,15065270,15067103,15069093,15071102,15073155,15075201,15077254,15079272,15081311,15083335,15085338,15087356,15089378,15091413,15093441,15095485,15097541,15099572,15101619,15103658,15105685,15107654,15109625,15111632,15113636,15115659,15117706,15119744,15121742,15123762,15125747,15127733,15129728,15131701,15133695,15135737,15137774,15139795,15141810,15143820,15145838,15147822,15149819,15151811,15153794,15155782,15157812,15159856,15161869,15163891,15165898,15167917,15169893,15171901,15173893,15175856,15177834,15179846,15181887,15183899,15185949,15188000,15190032,15192030,15194046,15196053,15198060,15200034,15202062,15204093,15206144,15208190,15210247,15212297,15214342,15216359,15218379,15220403,15222455,15224495,15226551,15228559,15230584,15232554,15234547,15236519,15238534,15240528,15242502,15244518,15246497,15248456,15250470,15252446,15254396,15256346,15258315,15260309,15262310,15264292,15266303,15268301,15270214,15272159,15274088,15276017,15277824,15279751,15281763,15283757,15285718,15287739,15289718,15291734,15293708,15295706,15297695,15299660,15301537,15303431,15305358,15307346,15309312,15311209,15313128,15315076,15317068,15319013,15320941,15322787,15324678,15326660,15328658,15330565,15332411,15334352,15336321,15338265,15340143,15342024,15343902,15345753,15347685,15349650,15351599,15353543,15355486,15357330,15359213,15361077,15362970,15364934,15366839,15368810,15370767,15372645,15374532,15376452,15378328,15380295,15382288,15384230,15386115,15387937,15389778,15391676,15393638,15395605,15397460,15399340,15401162,15402815,15404763,15406674,15408569,15410496,15412414,15414260,15416138,15418074,15419899,15421798,15423688,15425539,15427415,15429266,15431079,15432951,15434910,15436876,15438791,15440699,15442574,15444420,15446275,15448158,15449988,15451838,15453768,15455737,15457705,15459626,15461557,15463386,15465276,15467220,15469155,15471195,15473225,15475232,15477183,15479153,15481169,15483140,15485158,15487108,15489054,15490995,15493043,15495051,15497032,15498804,15500776,15502786,15504802,15506794,15508712,15510695,15512732,15514765,15516755,15518714,15520700,15522691,15524713,15526729,15528698,15530517,15532482,15534463,15536443,15538454,15540433,15542438,15544472,15546486,15548478,15550484,15552381,15554397,15556397,15558384,15560367,15562404,15564426,15566419,15568340,15570098,15571883,15573775,15575787,15577795,15579746,15581771,15583790,15585761,15587713,15589689,15591646,15593603,15595482,15597438,15599394,15601380,15603329,15605332,15607304,15609338,15611315,15613314,15615250,15617201,15619189,15621176,15623142,15625002,15626935,15628879,15630845,15632709,15634612,15636560,15638501,15640373,15642315,15644315,15646281,15648262,15650265,15652280,15654292,15656295,15658310,15660215,15662126,15664106,15666027,15667754,15669666,15671623,15673572,15675535,15677460,15679389,15681414,15683394,15685392,15687370,15689338,15691314,15693328,15695325,15697288,15699298,15701231,15703182,15705139,15707080,15709050,15710994,15712963,15714936,15716935,15718948,15720961,15722951,15724928,15726899,15728921,15730870,15732865,15734840,15736820,15738758,15740756,15742691,15744631,15746628,15748599,15750592,15752569,15754515,15756503,15758529,15760523,15762469,15764429,15766350,15768391,15770348,15772338,15774323,15776310,15778328,15780289,15782274,15784298,15786287,15788252,15790270,15792196,15794241,15796172,15798127,15800109,15802064,15804065,15806057,15808040,15809991,15811888,15813831,15815827,15817756,15819711,15821699,15823661,15825582,15827536,15829512,15831521,15833510,15835446,15837391,15839364,15841291,15843291,15845203,15847146,15849089,15850942,15852825,15854778,15856730,15858618,15860509,15862429,15864337,15866308,15868251,15870171,15872170,15874140,15876088,15878094,15880082,15882027,15884059,15885853,15887834,15889779,15891798,15893811,15895800,15897812,15899852,15901881,15903748,15905773,15907736,15909754,15911780,15913806,15915845,15917888,15919905,15921844,15923859,15925845,15927873,15929908,15931932,15933950,15935939,15937982,15939954,15941990,15943983,15946023,15948070,15950094,15952149,15954179,15956224,15958178,15960200,15962176,15964213,15966253,15968273,15970313,15972366,15974381,15976364,15978373,15980331,15982366,15984408,15986436,15988484,15990530,15992574,15994510,15996460,15998400,16000300,16002223,16004227,16006184,16008171,16010177,16012171,16014197,16016225,16018092,16020094,16022041,16024047,16026025,16028030,16029965,16031773,16033750,16035715,16037674,16039657,16041643,16043597,16045395,16047361,16049303,16050977,16052864,16054637,16056298,16057921,16059542,16061091,16062884,16064231,16065749,16067292,16068649,16070246,16071533,16073050,16074521,16075677,16077182,16078343,16079742,16081030,16082346,16083679,16084844,16086240,16087346,16088295,16089871,16091299,16092432,16093675,16095052,16096322,16097309,16098590,16099971,16101081,16102717,16103829,16105231,16106384,16107962,16109139,16110464,16111879,16113372,16114580,16116164,16117662,16119121,16120714,16122083,16123632,16124965,16126477,16128016,16129186,16130823,16131982,16133424,16134556,16136157,16137343,16138746,16140106,16141085,16142348,16143830,16145252,16146339,16147643,16149024,16150293,16151284,16152600,16154009,16155219,16156730,16157850,16159191,16160306,16161960,16163164,16164644,16166115,16167475,16169010,16170458,16172017,16173464,16175040,16176575,16177803,16179259,16180750,16182137,16183417,16184968,16186231,16187582,16188746,16190355,16191563,16192995,16194303,16195248,16196681,16198093,16199454,16200550,16201839,16203386,16204423,16205460,16206741,16208111,16209335,16210770,16211940,16213316,16214439,16216071,16217286,16218801,16220295,16221607,16223158,16224551,16226079,16227572,16229019,16230593,16231837,16233317,16234818,16235993,16237434,16238862,16240201,16241565,16242731,16244303,16245465,16246875,16248212,16249056,16250653,16251961,16253255,16254438,16255649,16257241,16258089,16259304,16260671,16261838,16263335,16264385,16265736,16267012,16268404,16269717,16270954,16272366,16273859,16275090,16276727,16278200,16279684,16281257,16282543,16284202,16285512,16287028,16288551,16289810,16291458,16292602,16293998,16295230,16296675,16298021,16299341,16300747,16301824,16302871,16304405,16305844,16306974,16308216,16309616,16311034,16311984,16313254,16314678,16315851,16317444,16318504,16319886,16320929,16322582,16323826,16325230,16326689,16328107,16329512,16330942,16332508,16333952,16335518,16337012,16338347,16339770,16341251,16342726,16343928,16345576,16346816,16348196,16349318,16350931,16352083,16353557,16354844,16355755,16357182,16358552,16359993,16361086,16362433,16363991,16364948,16366056,16367397,16368680,16369934,16371419,16372607,16373969,16375137,16376739,16377998,16379479,16380973,16382330,16383790,16385216,16386795,16388332,16389888,16391455,16392710,16394235,16395791,16397098,16398162,16399808,16401038,16402379,16403487,16405054,16406251,16407585,16408926,16409865,16411108,16412564,16414003,16415077,16416434,16417978,16418906,16419981,16421342,16422599,16423729,16425174,16426327,16427712,16428869,16430511,16431623,16433040,16434556,16436002,16437462,16438972,16440551,16442066,16443603,16445244,16446508,16448003,16449558,16450900,16451979,16453737,16454909,16456317,16457443,16459037,16460222,16461502,16462897,16463974,16464967,16466520,16467995,16469129,16470392,16471786,16473077,16474011,16475314,16476642,16477759,16479320,16480392,16481779,16483049,16484688,16485866,16487110,16488631,16490164,16491517,16493194,16494626,16496132,16497711,16499106,16500816,16502074,16503586,16505102,16506286,16507942,16509142,16510522,16511837,16513179,16514629,16515888,16517360,16518514,16519459,16521129,16522436,16523672,16524879,16526081,16527742,16528546,16529806,16531255,16532480,16534106,16535192,16536535,16537759,16539244,16540665,16541989,16543410,16544898,16546137,16547825,16549337,16550863,16552451,16553858,16555554,16556888,16558462,16559970,16561150,16562794,16564059,16565503,16566815,16568117,16569593,16570855,16572343,16573548,16574432,16576090,16577395,16578647,16579914,16581082,16582739,16583615,16584825,16586278,16587705,16589181,16590432,16591754,16593122,16594422,16596068,16597289,16598794,16600358,16601628,16603256,16604839,16606469,16608050,16609552,16611227,16612565,16613804,16615054,16616388,16617810,16619449,16621023,16622483,16623765,16624996,16626568,16628073,16629448,16631238,16632755,16634076,16635307,16636770,16638244,16639652,16641401,16642903,16644375,16645739,16646998,16648491,16649881,16651250,16652949,16654498,16656099,16657541,16658754,16660166,16661500,16662713,16664193,16665883,16667115,16668244,16669546,16670842,16672579,16673971,16675237,16676702,16678330,16679537,16681234,16682920,16684782,16686717,16688586,16690457,16692378,16694155,16695903,16697739,16699619,16701382,16703230,16704787,16706048,16707796,16709486,16711278,16712972,16714697,16716363,16717814,16718486,16719902,16721902,16723888,16725695,16727241,16728322,16729744,16731577,16733235,16735024,16736770,16738651,16740373,16742055,16743689,16745586,16747251,16749047,16750938,16752832,16754680,16756356,16758081,16760037,16761790,16763779,16765539,16767485,16769443,16771414,16773329,16775216,16776939,16778460,16780370,16782188,16784074,16785975,16787772,16789430,16791179,16792725,16794443,16796188,16797867,16799462,16801143,16802718,16804130,16805830,16807642,16809666,16811678,16813635,16815567,16817568,16819593,16821581,16823530,16825550,16827586,16829598,16831560,16833564,16835605,16837572,16839563,16841484,16843441,16845380,16847390,16849338,16851303,16853281,16855300,16857310,16859304,16861314,16863338,16865367,16867381,16869363,16871207,16873203,16875251,16877301,16879340,16881332,16883234,16885128,16886801,16888722,16890631,16892559,16894461,16896386,16898291,16900200,16902101,16903990,16905897,16907827,16909687,16911608,16913574,16915487,16917398,16919308,16921182,16923077,16924418,16926162,16928119,16929842,16931303,16932776,16934040,16935642,16937337,16938964,16940583,16942436,16943962,16945542,16947141,16948723,16950223,16951755,16953380,16955053,16956623,16957889,16959199,16960878,16962469,16963733,16965149,16967106,16968942,16970704,16972461,16974245,16975929,16977751,16979628,16981338,16982995,16984680,16986427,16988034,16989657,16991516,16993230,16994515,16996015,16997727,16999188,17000613,17001852,17003262,17005014,17006523,17007732,17008884,17010376,17012004,17013226,17014848,17016820,17018830,17020798,17022787,17024758,17026664,17028486,17030030,17031909,17033814,17035700,17037275,17039102,17041083,17042955,17044831,17046727,17048480,17050222,17052026,17053736,17055612,17057121,17058548,17060300,17061741,17063098,17064688,17066295,17067707,17069476,17070873,17072628,17074034,17075744,17077341,17079208,17080687,17082444,17083956,17085728,17087193,17088694,17090284,17091778,17093659,17094922,17096177,17097478,17099301,17101146,17102936,17104652,17106013,17107458,17109160,17110898,17112467,17113917,17115565,17117223,17118836,17120463,17122040,17123586,17125291,17126872,17128230,17129810,17131240,17132945,17134585,17135964,17137581,17139074,17140719,17142376,17143849,17145122,17146702,17148261,17149446,17150781,17152154,17153382,17154728,17156037,17157598,17158788,17160042,17161497,17162839,17164221,17165561,17166935,17168258,17169852,17171442,17173014,17174933,17176421,17177887,17179729,17181586,17183427,17185328,17186896,17188888,17190650,17192179,17194166,17195810,17197811,17199026,17200880,17202772,17204253,17205964,17207675,17209377,17211013,17212590,17214069,17215683,17217179,17218735,17220191,17221785,17223369,17224918,17226461,17227913,17229510,17231056,17232565,17234001,17235601,17237075,17238877,17240746,17242656,17244522,17246361,17248070,17249564,17251044,17252631,17254163,17256103,17258031,17259919,17261803,17263693,17265559,17267477,17269433,17270353,17270847,17271489,17271938,17272645,17273266,17273799,17274363,17275063,17276956,17278934,17280912,17282868,17284802,17286761,17288737,17290691,17292631,17294282,17295951,17297556,17299200,17300960,17302550,17304252,17305827,17307568,17309111,17310672,17312294,17313772,17315279,17316769,17318149,17319624,17320986,17322621,17324132,17325393,17326542,17327975,17329342,17330929,17332410,17333823,17335209,17336770,17338221,17339819,17341251,17342642,17344016,17345419,17346845,17348263,17349650,17351129,17352947,17354718,17356538,17358412,17360304,17362190,17363977,17365724,17367537,17369198,17370932,17372706,17374539,17376352,17378098,17379817,17381502,17382563,17383377,17384191,17385013,17386563,17388265,17389920,17391566,17393259,17394866,17396458,17398092,17399757,17401522,17403178,17404881,17406532,17408187,17410018,17411816,17413697,17414982,17416779,17418306,17420086,17421610,17423403,17424853,17426547,17428446,17430169,17431986,17433832,17435694,17437277,17439128,17440993,17442699,17443746,17444812,17445778,17446845,17447920,17448994,17449954,17451024,17452709,17454263,17455849,17457381,17458963,17460507,17462086,17463586,17465256,17466677,17468271,17469838,17471491,17472702,17473765,17474801,17475829,17477194,17478599,17480227,17482025,17483607,17485027,17486132,17487581,17489127,17490250,17491541,17493047,17494570,17496041,17497660,17499287,17500831,17502390,17504019,17505493,17506849,17507674,17508496,17509539,17510152,17511126,17511870,17512969,17514371,17515822,17516523,17517094,17517966,17518552,17519379,17519935,17520681,17521407,17522128,17522982,17523482,17524327,17525052,17525965,17526467,17527028,17527834,17528492,17529359,17529861,17530720,17531476,17532415,17532853,17533289,17534202,17534796,17535494,17535777,17536391,17536602,17536868,17537366,17537540,17538121,17538326,17538939,17539103,17539623,17539791,17539955,17540415,17540453,17541039,17541191,17541749,17541961,17542281,17543789,17545224,17546625,17547813,17549051,17550240,17551587,17552567,17553578,17554567,17555541,17556533,17557510,17558527,17559511,17561038,17562423,17563839,17565298,17566791,17568231,17569635,17570970,17572546,17573979,17575474,17577021,17578608,17580219,17581711,17583221,17584741,17586297,17587695,17589130,17590521,17591954,17593400,17594830,17596249,17597703,17599092,17600472,17601853,17603238,17604329,17605257,17606204,17607160,17608259,17609196,17610132,17611069,17612135,17613042,17613990,17614868,17615905,17617292,17618695,17620118,17621513,17622631,17623564,17624499,17625446,17626947,17628544,17630123,17631680,17633205,17634731,17636238,17637851,17639465,17641017,17642359,17643714,17645046,17646275,17647588,17648931,17650255,17651841,17653385,17654923,17656264,17657746,17659107,17660374,17661597,17663179,17664816,17666524,17668091,17669684,17671210,17672973,17674677,17676492,17678103,17679342,17680523,17682025,17683449,17684937,17686158,17687497,17688858,17690280,17691932,17693353,17694964,17696398,17697869,17699519,17701204,17702864,17704535,17706108,17707782,17709420,17711054,17712822,17714441,17716135,17717796,17719375,17720979,17722633,17724277,17725779,17727531,17729200,17730808,17732494,17733986,17735627,17737248,17738883,17740550,17742188,17743894,17745580,17747219,17748809,17750482,17752134,17753675,17755483,17757113,17758745,17760362,17762160,17763869,17765489,17767124,17768778,17770629,17772305,17773980,17775642,17777428,17779110,17780753,17782451,17784104,17785275,17786202,17787174,17788122,17789522,17790985,17792531,17793998,17795606,17796904,17798231,17799592,17800918,17802150,17803299,17804570,17805824,17807185,17808303,17809244,17810184,17811664,17812867,17814024,17815094,17816291,17817454,17818312,17819322,17820327,17821958,17823489,17825029,17826574,17828068,17829572,17831088,17832621,17834290,17835698,17837088,17838481,17839872,17841246,17842638,17843989,17845388,17847102,17848628,17850174,17851733,17853306,17854847,17856367,17857888,17859568,17861210,17862821,17864442,17866083,17867692,17869300,17870909,17872574,17874334,17875792,17877216,17878630,17880076,17881535,17882958,17884362,17885862,17887700,17889456,17891182,17892888,17894626,17896351,17898045,17899761,17901657,17903424,17905121,17906807,17908524,17910251,17911925,17913603,17915308,17916591,17917586,17918820,17919870,17920968,17922035,17923300,17924425,17925586,17926638,17927620,17928322,17928962,17929664,17930301,17931986,17933617,17935354,17937045,17938770,17940446,17942162,17943839,17945636,17947424,17949151,17950819,17952443,17954153,17955831,17957560,17959262,17961123,17962860,17964615,17966361,17968130,17969890,17971665,17973432,17975192,17977036,17978764,17980423,17982038,17983730,17985389,17987101,17988766,17990461,17991889,17993397,17994801,17996441,17997454,17998474,17999496,18000546,18002414,18004229,18006040,18007863,18009528,18011382,18013170,18015006,18016799,18018194,18019361,18020572,18022177,18023607,18024602,18025653,18026999,18028733,18030354,18031949,18033539,18035086,18036707,18038335,18039934,18041712,18043210,18044645,18046095,18047558,18048974,18050422,18051871,18053342,18054749,18056544,18057892,18059683,18060933,18062440,18063880,18065362,18066812,18068491,18070126,18071737,18073370,18074912,18076536,18078130,18079714,18081374,18082866,18084349,18085773,18087132,18088667,18090120,18091552,18092931,18094781,18096591,18098420,18100260,18101940,18103762,18105563,18107393,18109130,18110827,18112467,18114069,18115736,18117373,18119014,18120637,18122354,18123936,18125416,18126842,18128279,18129681,18131208,18132631,18134105,18135693,18137538,18139342,18141218,18143124,18144826,18146655,18148469,18150349,18152012,18153607,18155238,18156851,18158393,18160044,18161686,18163284,18164999,18166571,18168024,18169446,18170960,18172371,18173829,18175265,18176738,18178335,18180162,18182007,18183857,18185554,18187428,18189232,18191074,18192884,18194142,18195246,18196856,18197546,18198227,18199374,18200069,18201163,18201877,18202557,18204106,18205110,18205764,18206502,18207731,18208943,18209935,18211182,18212575,18213872,18214499,18215649,18216866,18218084,18219367,18220675,18222412,18223707,18224655,18225605,18227302,18228889,18230508,18232217,18233874,18235576,18237140,18238912,18240401,18241845,18243125,18244096,18245271,18246846,18248334,18249359,18250342,18251348,18252420,18253701,18254802,18255857,18256958,18258320,18260241,18262277,18264288,18266297,18268318,18270337,18272357,18274329,18276353,18278381,18280397,18282418,18284402,18286422,18288429,18290422,18292398,18294424,18296452,18298478,18300484,18302509,18304514,18306525,18308479,18310500,18312532,18314568,18316570,18318569,18320583,18322583,18324570,18326549,18328597,18330494,18332403,18334314,18336196,18338102,18340030,18341864,18343734,18345623,18347543,18349423,18351310,18353152,18355026,18356852,18358747,18360682,18362356,18364035,18365694,18367377,18369034,18370690,18372347,18373956,18375752,18377396,18379079,18380731,18382360,18384023,18385673,18387272,18388961,18390469,18391924,18393366,18394781,18396217,18397657,18399072,18400468,18402035,18403532,18405040,18406571,18408073,18409393,18410926,18412468,18414072,18415422,18417025,18418490,18420175,18421593,18423062,18424567,18426218,18427552,18428981,18430439,18431959,18433934,18435589,18437142,18438805,18440394,18441979,18443509,18445129,18446832,18448361,18449943,18451572,18453281,18455010,18456639,18458236,18459771,18461435,18462966,18464548,18466122,18467659,18469173,18470752,18472274,18473733,18475279,18476742,18478486,18480012,18481675,18483300,18484944,18486577,18488221,18490021,18491713,18493197,18494937,18496869,18498708,18500393,18502140,18504036,18505976,18507917,18509860,18511833,18513775,18515692,18517604,18519532,18521360,18523172,18525046,18527043,18528891,18530739,18532591,18534425,18536219,18537995,18539779,18541559,18543577,18545535,18547500,18549454,18551387,18553290,18555205,18557090,18559080,18560981,18562851,18564771,18566627,18568439,18570270,18572079,18573878,18575892,18577877,18579876,18581854,18583796,18585739,18587670,18589581,18591563,18593453,18595265,18597080,18598819,18600590,18602356,18604124,18605893,18607828,18609671,18611506,18613267,18615078,18616910,18618735,18620539,18622301,18623977,18625407,18626865,18628302,18629712,18631162,18632579,18633997,18635620,18637596,18639526,18641494,18643448,18645386,18647282,18649191,18651099,18653004,18654859,18656783,18658784,18660726,18662668,18664579,18666497,18668390,18670325,18672212,18674153,18675825,18677346,18678877,18680478,18682054,18683662,18685222,18686740,18688595,18690392,18692220,18694010,18695783,18697535,18699269,18700977,18702717,18704246,18705592,18706877,18708197,18709583,18710858,18712215,18713577,18715151,18716636,18718107,18719600,18721174,18722751,18724252,18725731,18727185,18728862,18730535,18732022,18733718,18735382,18736916,18738523,18739966,18741318,18742665,18743970,18745206,18746505,18747629,18748917,18750654,18752536,18754401,18756279,18758181,18760060,18761932,18763803,18765702,18767649,18769552,18771430,18773300,18775184,18777062,18778970,18780839,18782729,18784145,18785566,18786903,18788304,18789780,18791239,18792725,18794191,18795976,18797643,18799350,18801096,18802766,18804386,18805967,18807536,18809144,18810666,18812209,18813803,18815405,18817131,18818843,18820545,18822182,18823863,18825303,18826780,18828263,18829694,18831046,18832442,18833884,18835461,18836957,18838460,18839958,18841501,18842772,18844289,18845786,18847248,18848915,18850397,18851933,18853425,18854674,18856173,18857662,18859184,18860732,18862709,18864659,18866583,18868251,18869665,18871087,18872505,18873351,18874780,18876175,18877585,18879161,18880339,18881457,18882570,18883690,18884798,18885887,18887033,18888227,18889734,18891174,18892605,18894545,18896435,18898337,18900247,18902149,18904066,18905969,18907912,18909594,18911199,18912715,18914248,18915686,18917034,18917947,18918884,18919699,18920611,18921412,18922366,18923079,18923951,18924874,18925888,18926645,18927588,18928458,18929542,18930409,18931423,18932747,18934032,18935354,18936642,18937413,18937788,18938386,18938937,18939261,18939572,18940028,18940749,18942091,18942954,18943860,18944722,18945780,18947049,18947868,18949195,18949919,18950136,18950584,18950863,18951169,18952584,18954004,18955492,18957182,18959027,18960750,18962557,18964378,18966201,18967982,18969736,18971545,18973296,18974924,18976574,18978134,18979767,18981379,18983034,18984609,18986274,18987617,18988917,18990239,18991546,18993166,18994850,18996520,18998178,18999851,19001494,19003139,19004831,19006509,19008185,19009853,19011528,19012485,19014053,19015888,19017750,19019520,19021308,19023108,19024981,19026793,19028535,19030183,19031638,19033112,19034553,19036216,19038072,19039914,19041769,19043618,19045493,19047362,19049211,19051094,19052944,19054021,19055776,19056953,19058029,19059279,19060353,19061542,19063583,19065590,19067572,19069492,19071465,19073415,19075305,19077199,19079088,19081066,19083005,19084951,19086878,19088799,19090678,19092608,19094622,19096372,19098035,19099794,19101596,19103400,19105212,19106884,19108484,19110383,19112439,19114485,19116540,19118591,19120640,19122679,19124715,19126763,19128811,19130865,19132901,19134946,19136997,19139039,19141075,19143117,19145165,19147054,19148978,19150833,19152682,19154504,19156358,19158185,19160056,19162010,19163916,19165798,19167637,19169497,19171334,19173180,19175024,19176937,19178274,19179680,19180497,19181291,19182026,19182687,19183385,19183974,19184780,19185638,19186378,19186776,19187508,19188334,19189215,19189775,19190223,19191007,19191835,19192780,19193212,19193745,19194537,19195373,19196263,19196900,19197385,19198663,19199724,19200842,19201287,19202021,19203187,19204272,19205313,19205687,19206653,19207745,19208801,19209645,19210046,19211120,19212269,19213375,19213979,19215396,19216738,19218313,19219647,19221432,19222759,19223733,19224866,19226035,19227178,19228299,19229385,19230512,19231606,19232770,19233879,19235103,19236299,19237393,19238467,19239535,19240776,19242128,19243274,19244339,19245499,19246553,19247600,19248729,19249744,19250782,19251809,19252699,19253733,19254758,19255605,19256436,19257245,19258131,19259419,19259844,19260395,19260896,19261444,19261981,19262458,19263030,19263575,19264043,19264548,19265028,19265518,19266023,19266554,19267124,19267649,19269150,19270635,19272116,19273605,19275173,19276656,19278186,19279702,19281202,19282300,19283282,19284299,19285807,19287321,19288680,19290068,19291383,19292794,19294282,19296022,19297673,19299340,19300993,19302592,19304206,19305862,19307511,19309187,19310815,19312275,19313730,19315257,19316732,19318265,19319777,19321244,19322776,19323834,19324975,19326222,19327577,19328906,19330220,19331503,19332613,19334033,19335466,19336899,19338326,19339886,19341400,19342950,19344511,19346251,19347493,19348466,19349598,19350786,19351895,19353055,19354112,19355190,19356281,19357447,19358550,19359751,19360942,19362026,19363055,19364140,19365467,19366778,19367913,19369005,19370206,19371245,19372292,19373364,19374386,19375411,19376428,19377358,19378393,19379422,19380244,19381085,19381914,19382863,19384037,19384463,19385041,19385557,19386097,19386650,19387154,19387695,19388221,19388702,19389223,19389731,19390214,19390726,19391240,19391828,19392353,19394169,19395979,19397776,19399568,19401368,19403146,19404880,19406573,19407966,19409385,19410793,19412186,19413852,19415088,19416285,19417504,19419038,19420484,19421797,19423111,19424617,19425865,19426914,19427941,19428948,19430432,19432108,19433562,19435245,19436892,19438270,19439461,19440626,19441871,19443315,19444724,19446394,19448078,19449680,19451365,19453071,19454663,19456335,19457970,19459654,19460839,19462217,19463643,19465210,19467099,19468822,19470778,19472539,19474226,19475882,19477610,19479341,19480974,19482718,19484516,19486186,19487761,19489265,19490811,19492353,19493874,19495424,19497002,19498222,19499989,19501613,19503227,19504819,19506403,19507972,19509561,19511183,19512957,19514425,19516181,19517981,19519468,19520913,19522670,19524457,19526009,19527677,19528719,19529845,19530986,19532137,19533312,19534466,19535541,19536691,19537834,19538963,19540090,19541288,19542424,19543508,19544524,19545604,19546856,19547917,19549138,19550290,19551047,19551839,19553002,19554156,19555220,19556197,19557194,19558438,19559544,19560414,19561065,19562152,19563395,19564515,19565498,19566417,19567629,19568746,19569737,19570294,19571458,19572693,19573864,19574858,19575702,19576906,19578036,19579032,19579446,19580635,19581812,19582999,19583972,19584764,19585925,19587070,19588134,19588558,19589743,19590895,19592039,19592997,19594306,19595429,19596517,19597722,19598794,19599856,19600933,19601947,19602939,19603953,19604851,19605869,19606887,19607718,19608549,19609391,19610348,19611241,19612404,19613632,19614828,19615220,19616255,19617498,19618633,19619509,19620747,19621866,19623112,19624288,19625532,19626671,19627788,19629010,19630178,19631450,19632575,19633698,19634927,19636139,19637470,19638542,19639734,19640965,19642133,19643441,19644613,19645595,19646636,19647746,19649130,19650241,19651241,19652245,19653454,19654744,19655808,19656789,19657868,19659178,19660417,19661486,19662417,19663537,19665081,19665670,19666192,19666706,19668011,19669561,19671315,19673172,19675039,19676859,19678430,19679814,19680288,19680809,19681322,19681853,19682401,19683409,19684655,19685707,19687009,19688515,19689682,19690815,19692304,19693620,19694671,19695956,19697471,19698661,19699741,19701191,19702927,19704777,19706531,19708269,19710166,19711827,19713648,19715543,19717285,19719029,19720842,19722674,19724389,19726248,19728088,19729816,19731714,19733434,19735187,19737087,19738837,19740593,19742397,19744155,19746039,19747868,19749715,19751388,19753327,19755080,19756912,19758694,19760443,19762329,19764056,19765891,19767731,19769529,19771279,19773098,19774959,19776663,19778428,19780301,19782008,19783918,19785671,19787444,19789333,19791071,19792801,19794619,19796519,19798251,19800061,19801889,19803576,19805567,19807240,19809074,19810853,19812642,19814436,19816217,19818040,19819814,19821642,19823429,19825201,19827102,19828814,19830561,19832449,19834171,19836020,19837801,19839551,19840861,19842082,19843282,19844473,19845775,19846955,19848168,19849247,19850242,19850867,19851652,19852511,19853240,19853637,19854363,19855194,19856039,19856599,19857063,19857838,19858661,19859594,19860029,19860551,19861345,19862195,19863088,19863799,19865196,19866165,19867298,19868437,19869573,19870729,19871821,19872930,19874056,19875235,19876362,19877536,19878696,19879784,19880852,19881876,19883085,19884534,19886030,19887566,19888703,19889822,19891005,19892080,19893164,19894243,19895255,19896301,19897306,19898205,19899229,19900290,19901181,19902070,19902836,19903693,19905162,19906582,19908129,19909251,19909674,19910264,19910778,19911316,19911873,19912369,19912897,19913422,19913912,19914441,19914945,19915427,19915914,19916436,19917007,19917531,19919254,19920906,19922583,19924167,19925868,19927536,19929163,19930831,19932537,19934216,19935991,19937642,19939263,19940875,19942558,19944125,19945000,19945548,19946622,19947109,19947543,19947844,19948689,19949831,19951860,19953897,19955923,19957958,19959970,19961968,19963946,19965929,19967956,19969990,19971995,19974021,19976041,19978057,19980070,19982032,19984042,19985406,19986781,19988384,19989928,19991261,19992700,19993904,19995021,19996145,19997268,19998389,19999511,20000634,20001421,20001491,20002439,20004433,20006485,20008345,20010221,20012132,20013978,20015825,20017716,20019640,20021497,20023455,20025367,20027304,20029264,20031113,20033017,20034938,20036848,20038725,20040522,20042513,20044389,20046283,20048218,20050121,20051951,20053719,20055538,20057299,20059226,20061119,20063001,20064871,20066742,20068647,20070544,20072452,20074302,20076302,20078058,20079939,20081786,20083707,20085553,20087169,20088486,20088816,20089366,20090024,20090680,20091304,20091886,20092475,20093217,20093971,20094633,20095424,20096239,20097195,20097815,20098687,20098861,20100003,20100298,20100706,20102268,20102962,20103904,20104158,20104507,20104830,20105875,20107418,20108881,20110483,20112128,20113712,20115258,20116704,20118217,20119823,20121429,20123076,20124665,20126130,20127715,20129270,20130794,20132569,20134085,20135710,20137349,20138857,20140723,20142568,20144355,20146103,20147951,20149807,20151660,20153497,20155353,20157026,20158333,20159638,20160983,20162321,20163648,20164962,20166274,20167777,20169245,20170724,20172176,20173630,20175132,20176576,20178033,20179458,20181091,20182539,20183992,20185433,20186909,20188395,20189856,20191286,20192817,20194394,20195850,20197300,20198765,20200259,20201740,20203217,20204642,20206249,20207712,20209113,20210546,20211984,20213455,20214893,20216304,20217695,20219301,20220674,20222072,20223501,20224995,20226453,20227884,20229310,20230892,20232324,20233715,20235079,20236536,20238029,20239456,20240867,20242277,20243887,20245256,20246634,20248063,20249523,20250996,20252407,20253777,20255397,20256830,20258214,20259650,20261145,20262610,20264086,20265510,20266921,20268553,20269993,20271439,20272924,20274390,20275875,20277333,20278767,20280296,20281728,20283038,20284336,20285688,20287046,20288416,20289718,20290963,20292525,20293853,20295173,20296547,20297905,20299252,20300562,20301903,20303222,20304740,20306042,20307347,20308716,20310050,20311399,20312701,20313952,20315542,20317007,20318441,20319889,20321363,20322839,20324301,20325744,20327116,20328753,20330152,20331557,20333044,20334529,20336026,20337465,20338879,20340510,20341922,20343290,20344666,20346144,20347574,20348994,20350420,20351792,20353399,20354805,20356176,20357615,20359111,20360553,20361960,20363331,20364875,20366325,20367735,20369103,20370546,20372025,20373471,20374903,20376323,20377914,20379373,20380782,20382218,20383663,20385140,20386590,20388011,20389468,20391243,20393010,20394835,20396574,20398423,20400018,20401789,20403598,20405429,20407245,20408995,20410614,20412366,20414145,20415873,20417639,20419420,20421290,20423112,20424989,20426826,20428702,20430549,20432438,20434304,20436202,20438038,20439865,20441611,20443442,20445257,20447041,20448804,20450622,20452532,20454326,20456100,20457811,20459602,20461329,20463082,20464796,20466637,20468455,20470270,20472041,20473794,20475568,20477318,20479055,20480837,20482803,20484675,20486487,20488323,20490135,20491930,20493772,20495581,20497392,20499245,20500975,20502753,20504484,20506224,20507954,20509704,20511489,20513330,20515154,20517009,20518837,20520657,20522490,20524231,20526013,20527794,20529602,20531368,20533119,20534897,20536483,20538144,20539889,20541626,20543251,20545098,20546855,20548582,20550372,20552011,20553667,20555296,20557005,20558812,20560685,20562350,20563958,20565592,20567253,20568948,20570647,20572298,20573991,20575712,20577404,20579044,20580685,20582393,20584083,20585770,20587455,20589266,20591079,20592824,20594597,20596387,20598203,20599993,20601823,20603609,20605448,20607240,20608944,20610678,20612474,20614273,20616048,20617816,20619687,20621435,20623266,20625153,20627039,20628914,20630863,20632743,20634550,20636348,20638020,20639719,20641470,20643214,20644959,20646755,20648478,20650291,20651993,20653674,20655507,20657301,20659093,20660962,20662750,20664465,20666155,20667583,20669125,20670650,20672139,20673669,20675187,20676660,20678278,20680320,20682266,20684198,20686195,20688186,20690123,20692138,20694054,20695975,20697939,20699926,20701928,20703875,20705815,20707792,20709776,20711800,20713341,20713685,20713723,20713763,20713801,20714119,20714159,20714197,20714237,20715088,20716930,20718729,20720558,20722407,20724237,20726057,20727838,20729689,20731406,20732881,20734335,20735748,20737189,20738608,20740036,20741472,20743120,20744948,20746763,20748560,20750327,20752109,20753894,20755660,20757461,20758600,20759335,20759375,20759413,20759453,20759772,20759810,20759850,20759888,20759928,20761108,20762221,20763996,20765712,20767446,20769199,20770957,20772660,20774362,20776097,20777865,20779588,20780722,20781987,20783423,20784539,20785519,20787091,20788493,20789664,20790834,20792664,20794280,20795947,20796296,20796334,20796374,20796412,20796730,20796770,20796808,20796848,20797489,20798907,20800295,20801508,20802688,20804419,20806050,20807669,20809362,20811017,20812699,20814371,20815990,20817452,20817492,20817530,20817570,20817631,20818813,20818976,20819107,20820470,20822339,20824358,20826050,20827701,20829313,20830958,20832638,20834298,20835996,20837733,20839430,20841162,20842913,20844656,20846390,20848111,20849819,20851504,20853281,20854292,20855435,20855641,20856864,20858671,20860413,20862150,20863900,20865627,20867436,20869102,20870852,20872687,20874553,20876397,20878293,20880060,20881981,20883783,20885623,20887518,20889381,20891041,20892700,20894403,20896102,20897931,20899711,20901425,20903303,20905102,20907058,20908837,20910800,20912576,20914541,20916397,20918296,20920182,20921430,20922621,20923746,20924736,20925993,20927433,20928774,20930107,20931470,20932877,20934051,20935203,20936288,20937422,20938570,20939822,20941427,20942102,20942945,20943880,20944931,20946341,20948041,20949092,20949852,20950552,20951364,20952893,20954514,20956275,20957783,20958612,20959983,20961661,20962944,20964142,20965054,20965872,20966819,20967497,20968032,20968997,20970226,20971594,20972784,20974037,20975384,20976776,20978186,20979467,20980977,20982900,20984795,20986675,20988615,20990432,20992290,20994197,20996093,20997938,20999840,21001758,21003709,21005535,21007414,21009311,21011237,21012392,21013354,21014284,21015236,21016880,21018837,21020500,21022455,21024282,21025388,21026600,21027788,21029070,21031085,21033111,21035125,21037158,21039076,21040994,21042902,21044807,21046771,21048801,21050841,21052872,21054915,21056654,21058477,21060275,21062115,21063915,21065721,21067433,21069231,21071106,21073051,21074976,21076898,21078879,21080427,21081700,21083011,21084701,21085922,21087106,21088368,21089672,21090987,21092184,21093430,21094679,21096352,21097684,21098921,21100083,21101745,21103297,21104045,21104861,21106492,21108210,21109078,21109806,21111213,21112595,21113585,21114329,21115357,21116833,21118376,21119762,21121175,21122818,21124593,21126356,21128165,21129938,21131778,21133538,21135421,21137256,21139075,21140731,21142409,21144059,21145826,21147580,21149380,21151200,21152934,21154522,21155952,21157372,21158823,21160389,21161832,21163238,21164682,21166295,21167813,21169226,21170702,21172295,21173824,21175326,21176796,21178367,21180312,21182291,21184242,21186163,21188180,21190172,21192147,21194119,21196133,21197879,21199647,21201390,21203139,21204900,21206478,21208017,21209591,21211501,21213413,21215202,21217090,21218999,21220771,21222591,21224379,21226244,21228147,21230023,21231859,21233767,21235643,21237460,21239234,21241081,21243002,21244340,21245832,21247308,21248838,21250060,21251259,21252848,21254100,21255279,21256513,21257747,21259453,21260541,21261792,21263133,21265024,21266796,21268587,21270365,21272194,21273991,21275774,21277571,21279370,21281235,21283071,21284881,21286698,21288110,21288975,21289806,21290633,21291621,21292785,21293959,21295104,21296302,21297530,21298740,21299914,21301135,21302467,21303868,21305282,21306576,21308239,21310070,21311934,21313789,21315684,21317515,21319336,21321189,21323031,21324959,21326881,21328814,21330706,21332641,21334556,21336499,21338449,21340339,21342177,21344039,21345866,21347595,21349458,21351274,21352984,21354597,21356201,21358047,21359883,21361738,21363620,21365496,21367296,21369205,21371054,21372536,21373987,21375422,21376946,21378495,21380113,21381907,21383454,21385013,21386678,21388307,21390004,21391698,21393441,21395178,21396980,21398787,21400662,21402716,21404767,21406701,21408691,21410672,21412664,21414624,21416623,21418558,21420498,21422408,21424300,21425413,21426770,21428118,21429182,21430970,21432770,21434510,21436273,21437966,21439511,21441127,21442679,21444337,21446117,21447896,21449669,21451424,21453276,21455066,21456875,21458625,21460426,21462120,21463811,21465503,21467133,21468843,21470662,21472464,21474066,21475200,21476236,21477281,21478488,21479792,21480714,21481599,21482545,21483857,21484781,21486028,21486942,21488197,21488748,21489375,21489836,21490558,21491410,21492150,21492914,21493653,21494437,21495661,21496912,21498080,21499204,21500519,21501918,21503326,21504765,21506098,21507493,21509158,21510764,21512088,21513551,21515191,21516646,21518148,21519874,21521478,21523151,21524523,21524731,21524952,21525152,21525681,21526344,21526795,21527204,21527674,21529566,21531599,21533636,21535683,21537731,21539762,21541799,21543838,21545870,21547849,21549784,21551731,21553668,21555549,21557472,21559390,21561295,21562970,21564374,21565706,21567184,21568614,21569754,21570961,21572100,21573244,21574640,21576061,21577492,21578918,21580698,21582547,21584382,21586213,21588099,21589935,21591710,21593501,21595406,21597213,21598962,21600700,21602487,21604151,21605902,21607698,21609420,21611012,21612428,21613935,21615367,21616835,21618281,21619758,21621312,21622788,21624631,21626499,21628358,21630248,21631776,21632976,21634234,21635461,21637126,21638954,21640741,21642520,21644357,21645759,21647190,21648672,21650089,21652092,21654123,21656154,21658188,21660217,21662218,21664225,21666194,21668129,21669663,21671147,21672645,21674189,21675890,21677549,21679216,21680881,21682873,21684836,21686814,21688795,21690771,21692508,21694211,21695922,21697773,21699830,21701881,21703928,21705982,21707410,21708678,21709687,21710215,21710746,21711272,21712035,21713313,21714715,21716159,21717371,21718561,21720086,21721505,21722846,21724181,21725740,21727225,21728843,21730295,21731733,21733397,21735096,21736951,21738783,21740357,21741541,21742921,21744145,21745466,21746403,21747418,21748402,21749579,21750489,21751408,21752262,21753304,21754517,21756493,21758469,21760414,21762363,21764396,21766402,21768367,21770365,21772315,21773845,21775335,21776960,21778698,21780333,21782013,21783715,21785363,21787147,21788629,21790164,21791762,21793599,21795203,21796940,21798576,21800256,21801776,21803473,21805037,21806552,21807995,21809611,21811135,21812578,21814471,21816370,21818233,21820065,21821939,21823830,21825697,21827561,21829470,21831076,21832582,21834012,21835694,21837664,21839635,21841616,21843609,21845609,21847420,21849213,21851014,21852849,21854725,21856649,21858585,21860422,21861789,21863244,21864654,21866022,21867533,21869032,21870528,21871972,21873499,21875085,21876837,21878533,21880115,21881601,21883192,21884724,21886213,21887970,21889699,21891336,21893077,21894741,21896486,21898153,21899931,21901599,21903278,21904796,21906486,21908184,21909840,21911488,21913050,21914741,21916298,21917863,21919436,21920926,21922432,21924223,21925603,21927341,21928957,21930440,21931960,21933484,21935013,21936514,21938051,21939707,21941303,21942594,21943900,21945293,21946820,21948425,21950268,21951707,21953260,21954915,21956414,21958159,21959912,21961593,21963240,21964788,21966044,21967207,21968443,21969735,21971092,21972301,21973653,21975422,21976748,21978184,21979498,21980829,21981934,21983085,21984327,21985492,21986826,21988246,21989663,21991032,21992495,21994060,21995267,21996561,21998208,21999929,22001798,22003427,22004783,22005884,22006916,22007818,22008721,22009805,22010988,22012256,22013538,22014974,22016613,22018196,22019860,22021726,22023130,22024327,22025292,22026327,22027268,22027963,22028890,22030189,22031354,22032566,22033818,22035080,22036407,22037890,22039597,22041328,22043229,22045013,22046808,22048588,22050319,22051686,22052914,22054098,22055443,22056724,22058066,22059385,22060635,22061871,22063134,22064402,22065709,22066976,22068800,22070390,22072087,22073639,22075161,22076626,22078313,22079944,22081584,22082973,22084194,22085373,22086678,22087938,22089166,22090610,22092045,22093896,22095334,22096602,22097978,22099215,22100437,22101570,22102827,22104232,22105888,22107589,22109272,22110885,22112305,22113675,22115126,22116460,22118268,22119736,22121107,22122362,22123626,22124882,22126056,22127274,22128638,22130342,22132055,22133775,22135460,22136977,22138625,22140341,22141837,22143529,22145071,22145939,22146203,22147362,22148927,22149844,22150101,22151179,22152741,22153655,22153912,22155017,22156570,22157482,22157734,22158832,22160382,22161312,22161581,22162623,22164177,22165114,22165371,22166288,22167536,22168810,22170082,22171500,22172811,22174043,22175400,22176706,22178145,22179417,22180751,22182028,22183480,22184804,22186097,22187431,22188746,22190259,22191598,22192858,22194121,22195344,22196623,22197891,22199131,22200358,22201877,22203057,22204254,22205466,22206734,22207928,22209141,22210346,22211597,22213018,22214279,22215526,22216794,22218070,22219341,22220604,22221869,22223570,22225257,22227013,22228753,22230403,22232083,22233768,22235493,22237299,22238508,22239854,22241152,22242569,22243870,22245270,22246538,22247932,22249288,22250648,22252029,22253396,22254731,22256136,22257512,22258921,22260779,22262470,22264059,22265659,22267333,22268899,22270416,22271892,22273141,22274504,22275878,22277339,22278905,22280430,22281866,22283364,22285095,22286992,22288680,22290295,22291868,22293520,22295078,22296622,22298078,22299323,22300710,22302070,22303511,22305089,22306597,22308050,22309558,22311254,22313171,22314841,22316444,22318027,22319687,22321244,22322809,22324321,22325620,22327039,22328381,22329801,22331343,22332831,22334323,22335838,22337503,22339384,22341080,22342688,22344297,22345935,22347511,22349115,22350603,22351890,22353268,22354619,22356004,22357541,22359035,22360556,22362040,22363667,22365508,22366916,22368132,22369247,22370206,22371102,22372063,22373137,22374075,22375191,22376399,22377665,22378879,22379869,22380824,22381844,22382920,22384123,22385656,22386865,22388027,22389038,22389862,22390791,22391862,22392832,22393940,22395107,22396381,22397621,22398626,22399561,22400580,22401626,22402704,22404732,22406651,22408557,22410505,22412479,22414467,22416401,22418343,22420224,22422032,22423823,22425638,22427521,22429438,22431401,22433350,22435304,22436761,22438744,22440668,22442637,22444644,22446614,22448551,22450521,22452505,22454380,22456128,22457908,22459692,22461461,22463240,22465055,22466829,22468559,22470334,22472083,22473884,22475634,22477299,22479074,22481082,22483030,22484900,22486776,22488685,22490647,22492134,22492882,22493838,22495796,22497747,22499747,22501737,22503682,22505674,22507653,22509611,22511617,22513571,22515529,22517500,22519467,22521446,22523399,22525356,22527323,22529063,22530615,22532198,22533776,22535321,22536898,22538453,22540023,22541733,22543530,22545157,22546881,22548438,22550158,22551987,22553798,22555631,22557452,22559064,22560603,22562151,22563632,22565353,22567013,22568748,22570329,22572113,22573730,22575433,22577119,22578896,22580732,22582562,22584411,22586305,22588093,22589757,22591468,22593054,22594907,22596726,22598556,22600379,22602226,22603741,22605360,22606937,22608491,22610161,22611840,22613567,22615208,22616969,22618689,22620478,22622228,22624042,22625606,22627223,22628903,22630659,22632274,22633833,22635683,22637266,22639054,22640750,22642577,22644223,22645924,22647490,22649200,22650915,22652430,22653930,22655670,22657314,22658967,22660208,22661906,22663839,22665560,22666581,22668517,22670450,22671968,22673614,22675174,22677210,22679218,22681230,22682913,22684314,22685524,22686777,22688107,22689313,22690869,22692468,22694032,22695529,22696943,22698423,22699926,22701428,22703013,22704403,22705602,22706591,22707466,22708469,22709812,22710891,22711879,22713071,22714149,22716002,22717801,22719674,22721556,22723369,22725210,22727002,22728807,22730731,22732492,22734045,22735722,22737387,22739099,22740859,22742626,22744310,22746182,22747999,22749871,22751747,22753540,22755411,22757173,22758980,22760945,22762706,22764317,22765996,22767652,22769396,22771171,22772973,22774668,22776514,22778311,22780218,22782022,22783930,22785708,22787646,22789426,22791359,22793340,22795197,22797183,22799147,22801041,22803013,22805027,22806948,22808933,22810779,22812471,22814267,22816079,22817872,22819698,22821529,22823366,22825013,22826563,22827884,22829240,22830891,22832473,22834114,22835166,22836413,22837463,22838493,22838858,22839216,22840613,22841881,22843179,22844469,22845847,22847199,22848515,22849834,22851133,22852601,22853941,22855206,22856618,22857891,22859331,22860689,22861979,22863336,22864672,22866126,22867749,22868769,22870292,22871684,22873577,22875499,22877470,22879518,22881542,22883565,22885567,22887504,22889502,22891118,22892686,22894213,22895696,22897431,22898982,22900745,22902470,22904104,22905850,22907639,22909212,22910990,22912505,22914083,22915733,22917382,22919027,22920844,22922758,22924663,22926455,22928061,22929789,22931659,22933574,22935523,22937366,22939010,22940795,22942651,22944584,22946388,22948134,22949793,22951708,22953629,22955537,22957404,22959003,22960814,22962737,22964667,22966605,22968492,22970152,22971894,22973766,22975640,22977515,22979266,22980461,22981435,22982448,22983424,22984867,22986372,22987990,22989566,22991218,22992849,22994551,22996185,22997774,22999430,23001234,23002902,23004655,23006380,23007992,23009696,23011326,23012972,23014643,23016354,23018286,23020009,23021735,23023467,23025153,23026933,23028643,23030244,23031992,23033646,23035439,23037052,23038674,23040379,23041991,23043511,23045522,23047425,23049295,23051198,23053147,23055074,23056944,23058616,23060396,23062024,23063686,23065506,23067437,23069302,23071195,23073105,23075001,23077005,23078918,23080869,23082817,23084732,23086539,23088306,23090080,23091895,23093803,23095752,23097628,23099500,23101430,23103312,23105186,23107050,23108638,23110008,23111345,23112833,23114463,23116079,23117680,23119329,23121263,23123138,23124980,23126832,23128688,23130514,23132351,23134219,23136090,23137966,23139871,23141789,23142431,23142955,23143575,23144694,23145775,23146785,23148140,23149407,23150681,23151740,23153513,23155183,23156822,23158386,23160156,23161704,23163351,23165075,23166577,23168116,23169717,23171178,23172463,23173776,23175373,23177058,23178709,23180447,23182166,23183892,23185572,23187179,23188869,23190225,23191632,23193119,23194559,23196087,23197542,23199037,23200492,23201970,23203357,23204715,23206073,23207924,23209724,23211553,23213444,23215310,23217156,23219017,23220838,23222741,23224558,23226385,23228235,23230151,23232045,23233907,23235755,23237608,23239597,23241609,23243574,23245470,23247379,23249257,23251211,23253133,23255061,23256975,23258897,23260795,23262643,23264503,23266388,23268271,23270133,23271878,23273346,23274821,23276493,23278143,23279740,23281357,23282968,23284599,23286233,23287868,23289461,23291216,23292865,23294510,23296174,23297830,23299462,23301116,23302764,23304530,23306162,23307824,23309465,23311121,23312746,23314398,23316052,23317698,23319623,23321485,23323353,23325179,23327054,23328936,23330782,23332664,23334544,23336409,23338271,23340097,23341933,23343773,23345620,23347463,23349318,23351275,23353139,23354976,23356828,23358685,23360539,23362370,23364239,23366105,23367622,23369009,23370419,23371816,23373146,23374611,23376040,23377610,23378968,23380249,23381789,23383250,23384692,23386104,23388019,23389909,23391735,23393543,23395349,23397191,23399031,23400928,23402883,23404505,23406258,23407976,23409666,23411362,23413009,23414852,23416400,23418111,23419723,23421431,23423176,23424907,23426636,23428400,23430103,23431747,23433368,23435272,23437098,23438938,23440775,23442357,23444207,23446069,23447916,23449741,23451632,23453264,23455020,23456777,23458540,23460346,23462083,23463736,23465522,23467200,23468902,23470713,23472309,23474081,23475824,23477593,23479324,23481109,23482772,23484474,23486166,23487788,23489483,23491199,23492488,23493675,23494941,23496153,23497404,23498668,23499818,23501276,23502936,23504487,23505981,23507638,23509297,23510843,23512361,23513996,23515524,23517088,23518632,23520200,23522079,23523952,23525885,23527744,23529641,23531425,23532977,23534376,23536052,23537819,23539613,23541399,23543115,23544854,23546339,23547854,23549609,23551317,23553096,23554511,23555883,23557480,23559319,23561224,23562691,23564145,23565739,23567170,23568741,23570288,23571740,23573416,23574923,23576396,23577920,23579445,23580916,23582505,23583981,23585404,23586953,23588445,23590041,23591536,23593012,23594501,23596170,23597723,23599201,23600714,23602077,23603564,23605010,23606557,23608436,23610305,23612135,23613927,23615751,23617561,23619322,23621041,23622728,23624330,23626141,23627840,23629609,23631379,23633020,23634808,23636575,23638202,23640114,23642048,23643914,23645774,23647668,23649431,23651352,23653062,23654792,23656543,23658199,23659914,23661667,23663435,23665027,23666781,23668542,23670317,23671972,23673775,23675428,23677267,23678954,23680591,23682270,23683944,23685650,23687353,23689225,23690866,23692564,23694212,23696007,23697687,23699439,23701107,23702812,23704565,23706328,23707834,23709270,23710937,23712709,23714367,23716103,23717865,23719416,23720878,23722477,23723990,23725466,23726875,23728414,23729917,23731449,23733130,23734919,23736581,23738347,23740118,23741774,23743451,23745213,23746799,23748441,23750152,23751762,23753467,23755070,23756680,23758301,23760025,23761670,23763315,23764909,23766593,23768215,23769872,23771527,23773127,23774864,23776484,23778138,23779757,23781451,23783085,23784726,23786334,23788061,23789706,23791351,23793001,23794708,23796341,23797981,23799595,23801216,23802963,23804582,23806284,23808015,23809790,23811422,23813050,23814664,23816394,23817990,23819629,23821325,23823024,23824811,23826428,23828050,23829687,23831402,23833092,23834980,23836724,23838379,23840022,23841833,23843573,23845242,23846940,23848770,23850572,23852276,23854209,23856064,23857925,23859893,23861894,23863836,23865784,23867742,23869744,23871454,23873319,23875272,23877271,23879276,23881271,23883262,23885069,23887023,23888826,23890629,23892565,23894572,23896594,23898598,23900604,23902584,23904495,23906435,23908339,23910220,23912133,23914039,23915991,23917936,23919866,23921686,23923573,23925474,23927360,23929209,23930928,23932536,23934206,23936154,23937922,23939708,23941267,23942889,23944517,23946142,23947676,23949478,23950869,23952246,23953585,23954981,23956379,23957884,23959401,23960737,23962169,23963673,23965167,23966561,23968004,23969527,23971009,23972473,23973950,23975633,23977353,23979143,23980817,23982527,23984249,23986042,23987751,23989449,23991151,23992852,23994597,23996250,23997922,23999610,24001291,24002969,24004641,24006333,24007984,24009637,24011370,24013058,24014704,24016348,24018089,24019720,24021376,24023027,24024816,24026723,24028613,24030525,24032462,24034354,24036272,24038156,24040060,24041963,24043744,24045511,24047318,24049278,24051289,24053268,24055310,24057355,24059410,24061458,24063472,24065498,24067541,24069583,24071635,24073687,24075741,24077795,24079823,24081858,24083903,24085739,24087585,24089460,24091380,24093301,24095184,24097045,24098933,24100609,24102061,24103569,24104981,24106647,24108283,24109874,24111387,24112975,24114607,24116186,24117854,24119350,24120781,24122354,24123968,24125523,24127055,24128697,24130135,24131533,24133079,24134545,24136306,24138181,24139968,24141717,24143388,24144968,24146873,24148707,24150574,24152399,24154197,24155990,24157674,24159496,24161330,24163088,24164781,24166784,24168772,24170780,24172668,24174569,24176496,24178098,24179759,24181518,24183246,24184971,24186734,24188546,24190269,24191908,24193684,24195373,24197064,24198748,24200228,24201772,24203296,24204808,24206294,24207833,24209352,24210882,24212370,24213933,24215454,24216947,24218475,24219960,24221515,24223047,24224552,24226046,24227501,24228817,24230140,24231404,24232718,24234667,24236598,24238514,24240399,24242338,24244287,24246242,24248169,24249959,24251308,24252612,24253928,24255219,24256551,24257841,24259173,24260668,24262238,24263716,24265205,24266802,24268440,24269936,24271530,24273073,24274835,24276499,24278150,24279846,24281438,24283143,24284771,24286425,24288170,24289718,24290983,24292240,24293526,24294769,24296097,24297384,24298586,24300067,24301291,24302331,24303388,24304478,24305718,24306884,24307919,24309285,24310776,24312033,24313314,24314541,24315791,24317010,24318284,24319665,24321090,24322545,24323829,24325100,24326411,24327734,24329058,24330345,24331686,24333491,24335047,24336691,24338440,24340136,24341716,24343206,24344454,24346405,24348364,24349769,24350863,24352085,24353261,24354590,24355681,24357352,24359307,24361228,24362784,24364555,24366387,24368193,24369934,24371540,24373473,24374435,24374938,24375487,24375978,24376563,24377032,24377572,24378036,24378881,24379271,24380482,24381799,24383238,24384567,24385733,24386849,24387267,24388160,24388854,24390241,24391706,24393203,24394711,24396112,24397036,24397886,24399151,24400339,24401766,24402919,24404371,24405731,24406921,24408092,24409950,24411723,24413441,24415184,24416979,24417121,24417259,24418473,24419059,24419684,24420354,24420935,24421384,24422064,24422715,24423249,24424549,24425393,24426446,24427856,24429262,24430647,24432058,24433456,24435031,24436602,24438293,24439875,24441493,24443030,24444656,24446492,24448011,24449052,24450163,24451344,24452591,24453911,24455165,24456457,24457781,24459249,24460790,24462385,24464018,24465702,24467242,24468579,24469995,24471313,24472048,24472073,24472103,24472128,24472753,24473345,24474673,24475238,24476803,24478426,24480088,24481674,24483305,24484455,24486121,24487619,24489204,24490731,24492490,24494392,24496338,24498237,24500200,24502108,24503715,24504573,24505812,24507333,24508568,24509504,24510459,24511715,24513078,24514479,24515926,24517427,24518983,24520535,24522204,24523932,24525637,24527185,24528767,24530279,24531852,24533460,24534943,24536507,24538274,24540331,24542385,24544415,24546411,24548287,24550266,24552313,24554223,24555956,24557883,24559765,24561725,24563746,24565783,24567799,24569851,24571881,24573909,24575921,24577961,24580016,24582016,24583737,24585637,24587642,24589655,24591655,24593557,24595229,24596765,24598013,24599209,24600393,24601935,24603943,24605814,24607538,24609311,24611210,24613082,24614827,24616616,24618390,24620273,24622209,24624184,24626137,24628110,24630080,24632060,24634060,24635888,24637413,24638964,24640527,24642049,24643550,24645128,24646630,24648121,24649502,24650896,24652204,24653536,24654822,24656147,24657465,24659075,24661100,24663100,24665109,24667073,24669085,24671008,24672954,24674902,24676911,24678718,24680442,24682089,24683765,24685462,24687143,24688262,24688558,24689206,24690484,24691761,24693067,24693998,24695045,24695963,24697056,24698306,24699971,24701672,24703254,24704987,24706725,24708377,24709912,24711526,24713090,24714708,24716260,24717866,24719350,24720822,24722007,24723363,24724432,24725615,24726839,24728159,24729393,24730755,24732156,24733715,24735298,24736878,24738317,24739756,24741191,24742379,24743354,24744498,24746084,24747572,24748206,24749482,24750751,24752178,24753709,24755193,24756663,24758111,24759245,24760577,24762012,24763549,24765259,24767011,24768860,24770673,24772458,24774229,24775788,24777440,24779033,24780675,24782244,24783851,24785358,24786920,24788421,24789832,24791085,24792504,24794037,24795589,24796953,24798344,24799737,24801145,24802522,24803676,24804159,24804846,24805301,24806195,24807629,24809173,24810707,24812221,24813646,24815157,24816696,24818170,24819539,24820823,24821985,24823179,24824513,24825923,24827443,24828718,24829804,24830583,24830873,24831987,24833730,24835638,24837439,24839194,24840757,24842062,24843115,24844299,24845850,24847432,24848985,24850545,24852113,24853673,24855217,24856985,24858722,24860546,24862251,24864082,24865833,24867726,24869466,24871140,24872537,24873934,24875320,24876747,24878188,24879714,24881400,24883095,24884633,24886172,24887673,24889172,24890713,24892240,24893717,24895429,24897337,24899083,24900645,24901778,24902519,24903446,24904288,24905512,24907006,24908655,24910314,24912033,24913516,24915147,24916463,24917767,24919007,24919967,24920483,24921370,24922156,24923014,24923635,24924751,24926144,24927244,24927743,24928314,24928803,24929973,24931746,24933313,24934397,24935517,24936519,24937745,24939139,24940472,24941543,24942641,24943544,24944695,24946141,24947610,24949056,24950492,24951911,24953500,24955191,24956978,24958613,24960439,24962323,24964104,24965662,24966978,24967998,24969245,24970397,24971577,24972559,24973638,24974496,24975655,24976646,24977887,24979139,24980206,24980655,24981276,24981911,24982598,24983073,24983650,24984278,24984926,24985399,24986009,24986639,24987330,24987830,24988458,24989081,24989735,24990157,24990696,24991266,24992508,24994388,24995986,24997020,24998168,24999193,25000338,25001366,25002489,25003619,25005048,25006841,25008447,25010161,25011871,25013537,25015183,25016891,25018380,25019542,25020964,25022644,25024301,25026006,25027784,25029649,25030859,25031056,25031399,25031690,25032048,25032251,25032581,25032821,25033175,25033231,25033496,25033521,25033723,25033872,25034153,25034395,25034713,25034863,25035688,25037170,25038685,25040357,25041771,25042833,25043888,25044972,25046174,25047373,25048742,25050229,25051757,25053191,25054918,25056782,25058642,25060332,25062030,25063379,25065019,25066645,25068239,25069613,25071042,25072294,25073566,25075266,25076808,25078308,25079594,25081194,25082646,25084139,25085631,25086964,25088251,25089695,25091149,25092572,25094111,25095613,25097124,25098370,25099532,25100830,25102194,25103504,25104750,25106078,25107146,25108256,25109286,25110836,25112346,25113840,25115331,25116869,25118400,25119924,25121435,25122371,25123126,25123680,25124222,25124977,25125672,25126406,25127051,25127695,25128254,25128803,25129488,25130182,25130831,25131531,25132251,25132974,25133670,25134428,25135246,25136009,25136647,25137284,25137770,25138949,25140979,25142895,25144653,25146404,25148094,25149764,25151460,25153176,25154890,25156589,25158289,25159979,25161910,25163834,25165637,25167399,25169091,25170789,25172552,25174255,25176007,25176931,25177934,25179331,25181110,25182518,25184303,25186126,25187647,25189104,25190587,25192057,25193536,25195009,25196499,25197975,25199471,25200627,25201229,25201744,25202330,25202983,25203572,25204015,25204575,25205210,25205751,25206350,25206916,25207533,25208082,25208587,25208890,25209298,25209879,25210244,25210504,25210958,25211554,25211872,25212251,25212614,25213047,25213459,25214963,25216885,25218708,25220376,25222039,25223722,25225389,25227059,25228731,25230383,25232077,25233756,25235441,25237128,25239073,25240879,25242537,25244221,25245898,25247665,25249435,25251097,25252793,25253728,25254438,25255153,25256645,25258519,25260159,25261890,25263445,25265225,25267023,25268567,25270090,25271570,25273084,25274570,25276053,25277551,25279058,25280560,25282042,25283561,25285057,25286544,25288033,25289530,25291020,25292520,25294024,25295519,25296981,25298350,25298955,25299261,25299837,25300443,25301126,25301632,25302196,25302846,25303434,25303709,25304307,25304790,25305275,25305727,25306248,25306522,25306865,25307482,25308085,25308742,25309352,25310078,25310672,25311345,25311978,25312475,25313191,25313604,25314143,25314417,25315016,25315456,25315900,25316210,25316689,25317173,25317612,25318100,25318628,25319050,25319451,25319963,25320510,25321037,25321630,25322118,25322488,25323042,25323415,25324002,25324421,25324791,25325167,25325728,25326070,25326595,25327127,25327343,25327680,25328316,25330308,25332312,25334345,25336330,25338343,25340367,25342083,25343763,25345463,25347151,25348860,25350569,25352282,25353962,25355651,25357328,25359017,25360704,25362381,25364075,25365762,25367467,25369157,25370861,25372595,25374307,25376003,25377686,25379385,25381091,25382779,25384467,25386139,25388131,25390179,25392227,25394021,25395607,25397306,25399052,25400727,25402467,25404208,25405848,25407539,25409259,25410965,25412610,25414275,25415939,25417672,25419405,25421089,25422753,25424441,25426133,25427675,25428647,25429591,25430512,25431349,25432043,25433039,25434118,25435197,25436208,25437456,25438643,25439755,25440674,25441786,25442640,25443749,25444552,25445434,25446644,25447645,25449639,25451596,25453466,25455214,25456770,25458233,25459791,25461276,25462802,25464334,25465816,25467274,25468790,25470290,25471787,25473123,25473673,25474182,25474558,25474996,25475402,25475808,25476290,25476666,25477323,25477969,25478504,25479077,25479678,25480147,25480684,25480960,25481169,25481304,25481719,25482243,25482898,25483393,25483886,25484420,25484827,25485265,25485787,25486115,25486353,25486662,25488629,25490686,25492571,25494278,25495988,25497662,25499365,25501071,25502775,25504463,25506158,25507845,25509618,25511321,25512990,25514736,25516784,25518606,25520349,25521988,25523688,25525456,25527203,25528875,25530690,25532489,25534115,25535612,25536571,25537815,25539141,25540758,25542665,25544320,25545802,25547345,25548827,25550326,25551823,25553302,25554794,25556285,25557764,25559214,25560636,25560882,25561123,25561350,25561573,25562078,25562512,25562715,25562961,25563315,25563737,25564062,25564474,25564801,25565079,25565167,25565396,25565528,25565946,25566241,25566702,25567186,25567464,25567778,25568190,25568699,25569237,25569555,25569915,25571575,25573577,25575585,25577264,25578948,25580670,25582338,25584036,25585722,25587377,25589035,25590725,25592426,25594126,25595849,25597766,25599822,25601619,25603473,25605177,25606979,25608693,25610382,25612145,25613946,25615760,25617645,25618916,25619486,25620027,25620904,25621965,25622778,25624222,25625947,25627653,25629376,25630844,25632325,25633828,25635331,25636800,25638269,25638953,25639388,25639788,25640159,25640472,25640907,25641219,25641659,25642085,25642553,25642867,25643320,25643670,25643933,25644190,25644602,25645080,25646523,25648490,25650213,25651896,25653597,25655269,25656939,25658634,25660313,25662023,25664050,25665823,25667550,25669204,25670913,25672706,25674533,25676283,25677156,25678484,25679841,25681459,25683067,25684611,25686103,25687597,25688881,25689479,25689974,25690430,25690881,25691422,25691928,25692480,25692998,25693314,25693715,25694053,25695207,25697105,25698762,25700414,25702063,25703743,25705407,25707311,25709012,25710621,25712363,25713670,25715156,25716793,25718367,25719920,25721374,25722893,25724389,25725882,25727379,25728870,25730361,25731850,25733368,25734850,25736368,25737861,25739345,25740855,25742341,25743626,25744135,25744603,25745066,25745387,25745630,25746111,25746586,25746970,25747209,25747749,25748224,25748685,25749149,25749514,25749903,25750316,25750781,25751174,25751631,25751928,25752110,25752290,25752702,25752966,25753230,25753422,25753625,25753968,25754300,25754554,25754932,25755189,25755558,25755761,25756139,25756545,25756911,25757340,25757657,25758076,25758435,25758952,25759250,25759681,25759991,25760266,25760635,25761013,25761302,25761780,25762293,25762721,25763564,25765550,25767489,25769447,25771430,25773311,25774974,25776643,25778317,25779997,25781692,25783373,25785043,25786715,25788434,25790154,25791830,25793504,25795168,25796847,25798513,25800190,25801857,25803539,25805200,25806875,25808549,25810230,25811907,25813865,25815913,25817890,25819504,25821133,25822777,25824427,25826030,25827758,25829542,25831247,25832984,25834670,25836349,25837938,25839579,25841254,25842962,25844661,25846294,25847163,25847784,25848440,25849032,25849659,25850340,25851300,25852697,25854213,25855370,25856508,25857535,25859027,25860507,25862037,25863279,25864750,25866094,25867647,25869534,25871342,25873168,25874941,25876545,25878070,25879550,25881024,25882507,25884007,25885483,25886998,25888498,25889984,25891479,25892981,25894063,25894602,25895113,25895756,25896426,25896948,25897443,25897884,25898318,25898688,25898893,25899381,25899627,25900081,25900558,25901203,25901622,25901905,25902348,25902952,25903525,25904181,25904804,25905380,25905727,25906236,25906484,25906890,25907457,25908123,25908851,25909506,25909880,25910269,25910642,25911178,25911490,25911642,25913165,25915150,25917134,25919059,25920751,25922463,25924125,25925835,25927534,25929228,25930922,25932628,25934320,25936020,25937735,25939488,25941181,25942899,25944595,25946320,25948368,25950424,25952200,25953937,25955673,25957445,25959244,25961017,25962805,25964555,25966277,25968089,25969848,25971635,25973412,25974857,25975807,25976663,25977985,25979345,25980932,25982439,25984007,25985951,25987705,25989291,25990874,25992589,25994094,25995582,25997073,25998578,26000068,26001563,26003064,26004549,26006021,26007515,26009011,26010506,26011993,26013484,26014950,26016432,26017905,26019381,26020862,26022363,26023866,26025098,26025657,26026324,26026998,26027547,26028179,26028736,26029235,26029904,26030505,26031066,26031610,26031950,26032391,26032917,26033498,26033959,26034367,26034864,26035443,26035892,26036541,26036996,26037575,26038177,26038555,26038965,26039572,26040021,26040571,26041170,26041504,26042067,26042454,26042861,26043351,26043856,26044231,26044537,26044870,26045397,26045876,26046432,26046933,26047267,26047557,26048032,26048422,26048709,26049201,26049530,26049798,26050102,26050460,26050863,26051371,26051866,26052271,26052529,26053097,26053550,26053827,26054162,26054535,26055012,26055397,26055690,26056002,26056606,26057129,26057496,26057946,26058413,26058742,26059379,26059977,26060732,26062787,26064838,26066890,26068946,26071002,26073057,26075063,26076801,26078524,26080272,26082017,26083802,26085564,26087306,26089010,26090750,26092482,26094212,26095959,26097652,26099387,26101138,26102885,26104654,26106400,26108160,26109914,26111657,26113441,26115150,26116862,26118596,26120365,26122126,26123906,26125655,26127382,26129153,26130914,26132639,26134394,26136247,26138295,26140343,26142391,26144439,26146372,26148042,26149851,26151686,26153553,26155447,26157196,26159018,26160806,26162635,26164404,26166101,26167880,26169721,26171520,26173340,26175146,26176961,26178775,26180634,26182489,26184281,26186058,26187890,26189755,26191622,26193454,26195296,26197127,26198965,26200851,26202718,26204496,26205833,26206690,26207500,26208363,26209052,26209980,26211359,26212671,26214052,26215203,26216378,26217875,26219108,26219991,26220796,26221722,26222952,26224264,26225839,26227146,26229133,26231086,26232935,26234683,26236303,26237769,26239407,26240986,26242589,26244111,26245597,26247097,26248600,26250123,26251635,26253133,26254573,26256052,26257554,26259043,26260508,26262002,26263481,26265010,26266504,26267995,26269495,26271004,26272486,26273981,26274771,26275276,26275942,26276532,26277065,26277501,26277863,26278472,26279059,26279651,26280279,26280851,26281472,26282161,26282647,26283156,26283602,26284200,26284770,26285216,26285626,26286067,26286562,26287131,26287729,26288118,26288626,26289058,26289467,26290080,26290476,26290688,26290914,26291343,26291802,26292191,26292530,26292953,26293177,26293633,26294050,26294529,26294832,26295125,26295578,26295966,26296495,26296777,26297134,26297311,26297795,26298238,26298550,26298707,26298913,26299139,26299398,26299690,26300241,26300719,26301211,26301792,26302211,26302707,26303350,26305387,26307360,26309309,26311287,26313278,26315178,26316818,26318496,26320181,26321876,26323536,26325247,26326954,26328638,26330322,26331997,26333643,26335303,26336999,26338716,26340403,26342083,26343791,26345499,26347196,26348869,26350542,26352241,26353887,26355576,26357231,26358901,26360559,26362300,26364348,26366396,26368344,26369965,26371658,26373369,26375107,26376888,26378627,26380308,26381953,26383656,26385443,26387175,26388969,26390683,26392421,26394144,26395862,26397554,26399266,26400981,26402734,26404076,26404946,26405622,26406266,26406793,26407532,26408266,26409260,26410363,26411242,26411965,26412693,26413358,26414080,26414798,26415426,26416186,26416899,26417614,26417974,26418374,26419119,26419753,26420686,26421414,26421942,26422482,26423296,26424790,26425460,26427078,26428748,26430539,26432340,26434111,26435756,26437426,26438926,26440556,26442174,26443713,26445192,26446677,26448157,26449635,26451110,26452594,26454078,26455554,26457009,26458493,26459980,26461436,26462923,26464392,26465859,26467327,26468811,26470289,26471746,26473219,26474711,26476197,26477684,26479160,26480649,26482148,26483619,26485084,26486533,26488018,26489461,26490932,26492400,26493872,26495343,26496822,26498274,26499733,26501202,26502666,26504160,26505648,26507133,26508603,26510058,26511524,26513010,26514451,26515898,26517319,26518737,26520180,26521645,26523141,26524616,26526032,26527487,26528973,26530427,26531909,26533364,26534857,26536344,26537797,26539286,26540713,26542182,26543651,26545123,26546616,26548081,26549553,26550993,26552290,26552857,26553327,26553792,26554417,26554849,26555332,26555656,26556159,26556646,26556898,26557234,26557853,26558370,26558840,26559447,26559852,26560387,26561040,26561615,26562140,26562821,26563252,26563864,26564390,26564762,26565314,26565918,26566540,26567091,26567515,26567976,26568433,26568987,26569499,26569986,26570448,26570952,26571516,26572025,26572573,26573198,26573733,26574376,26574877,26575203,26575448,26575978,26576472,26576920,26577514,26578099,26578740,26579240,26579779,26580375,26580818,26581389,26581753,26582168,26582697,26583142,26583652,26584051,26584574,26585067,26585433,26585875,26586327,26586748,26587326,26587694,26588223,26588652,26589241,26589870,26590464,26591106,26591720,26592304,26592804,26593373,26593911,26594432,26595040,26595554,26595824,26596266,26596600,26597132,26597590,26598090,26598580,26598913,26599211,26599725,26600107,26600411,26600866,26601369,26601880,26602187,26602622,26603151,26603756,26604259,26604771,26605355,26605702,26605922,26606397,26606756,26606963,26607175,26607583,26608168,26608708,26609217,26609530,26609924,26610425,26610745,26611077,26611382,26611739,26612089,26612664,26613087,26613597,26614108,26614553,26615143,26615764,26616252,26616814,26617335,26617889,26618402,26618787,26619223,26619669,26620253,26620829,26621380,26621898,26622356,26622867,26623397,26623675,26623937,26624442,26624905,26625351,26625939,26626445,26626945,26627491,26627951,26628275,26628667,26629206,26629709,26630225,26630647,26631112,26631558,26631963,26632466,26633097,26633646,26634106,26634589,26635086,26635543,26635990,26636617,26637237,26637742,26638155,26638497,26639020,26639492,26639892,26640416,26641008,26641356,26641735,26642203,26642505,26642771,26643088,26643465,26643856,26644206,26644537,26644787,26645327,26645857,26646479,26646973,26647480,26647796,26648173,26648763,26649266,26649772,26650266,26650772,26651302,26651804,26652291,26652796,26653236,26653721,26654010,26654360,26654758,26655110,26655746,26656285,26656805,26657237,26657675,26658219,26658715,26659104,26659708,26660289,26660757,26661233,26661715,26662203,26662710,26663201,26663613,26664111,26664622,26664731,26664959,26665490,26666023,26666532,26667116,26667557,26668170,26668723,26669236,26669762,26670108,26670960,26672869,26674810,26676765,26678678,26680610,26682561,26684562,26686512,26688504,26690464,26692418,26694416,26696340,26698301,26700297,26702267,26704197,26706215,26708269,26710203,26711873,26713497,26715133,26716809,26718506,26720219,26721941,26723664,26725357,26727028,26728709,26730379,26732075,26733750,26735446,26737117,26738801,26740484,26742158,26743827,26745505,26747200,26748885,26750579,26752263,26753958,26755626,26757310,26758982,26760658,26762349,26764028,26765702,26767383,26769058,26770738,26772427,26774090,26775786,26777471,26779138,26780795,26782447,26784117,26785812,26787473,26789152,26790820,26792497,26794125,26795791,26797481,26799147,26800799,26802477,26804181,26805863,26807544,26809229,26810918,26812592,26814266,26815948,26817615,26819270,26820990,26822709,26824386,26826055,26827717,26829375,26831051,26832753,26834399,26836061,26837737,26839383,26841025,26842686,26844359,26846040,26847701,26849366,26851044,26852707,26854405,26856120,26857786,26859485,26861181,26862866,26864588,26866262,26867926,26869631,26871348,26873035,26874716,26876392,26878087,26879760,26881445,26883128,26884821,26886507,26888175,26890089,26892137,26894185,26896233,26898281,26900329,26902377,26904425,26906473,26908521,26910569,26912428,26914038,26915626,26917325,26919088,26920875,26922634,26924322,26926056,26927823,26929502,26931154,26932841,26934536,26936242,26937897,26939639,26941377,26943042,26944764,26946477,26948222,26949959,26951668,26953358,26954949,26956668,26958383,26960089,26961725,26963431,26965044,26966742,26968403,26970122,26971792,26973421,26975164,26976888,26978634,26980394,26982161,26983894,26985550,26987257,26988944,26990656,26992410,26994129,26995830,26997428,26999139,27000926,27002597,27004124,27005583,27007161,27008794,27010503,27012253,27013927,27015716,27017534,27019231,27020958,27022652,27024305,27026110,27027858,27029519,27031177,27032914,27034672,27036439,27038229,27039924,27041632,27042579,27043456,27044183,27045061,27045946,27046621,27047447,27048141,27048761,27049449,27050021,27050653,27051245,27051929,27052155,27052471,27053154,27053860,27054627,27055281,27056171,27056833,27057457,27058237,27058997,27059830,27060581,27061319,27062112,27062948,27063603,27064484,27065376,27066088,27066874,27067677,27068546,27069212,27069990,27070698,27071427,27072178,27072891,27073673,27074482,27075141,27075964,27076644,27077470,27078312,27078943,27079518,27079821,27080283,27080969,27081478,27082367,27083000,27083334,27084054,27084663,27085504,27086347,27087304,27088031,27088696,27089148,27089614,27090229,27090889,27091694,27092281,27092868,27093475,27093979,27094631,27095140,27095733,27096533,27097331,27097913,27098673,27099514,27100018,27100560,27101471,27101934,27102464,27102987,27103859,27104664,27105528,27106187,27106832,27107613,27108184,27108939,27109607,27110326,27110989,27111581,27112241,27112910,27113538,27114334,27114823,27115342,27115884,27116316,27117161,27117970,27118840,27119755,27120363,27121127,27121936,27122675,27122991,27123870,27124691,27125415,27126040,27126749,27127515,27128216,27128883,27129504,27130272,27130974,27131548,27132258,27132723,27133323,27134037,27134835,27135195,27135551,27135874,27136171,27136485,27136776,27137198,27137585,27137873,27138179,27138476,27138769,27139100,27139522,27140001,27140531,27141265,27141734,27142087,27142634,27143366,27143903,27144590,27145245,27145798,27146507,27147260,27147841,27148485,27149191,27150146,27150696,27151079,27151494,27151984,27152388,27152714,27153187,27153477,27153704,27154255,27154554,27154881,27155213,27155431,27155631,27156255,27156786,27157250,27157940,27158631,27159296,27159636,27159840,27160077,27160332,27160573,27160700,27160902,27161143,27161773,27163137,27165046,27166351,27168264,27170164,27172110,27174024,27175931,27177853,27179784,27181735,27183648,27185626,27187541,27189445,27191303,27193123,27195025,27196851,27198725,27200222,27201747,27203214,27204700,27206187,27207678,27209162,27210648,27212148,27213639,27214932,27215420,27215894,27216380,27216898,27217334,27217784,27218305,27218745,27219204,27219449,27219964,27220420,27220947,27221391,27221851,27222474,27222718,27223124,27223530,27223839,27224287,27224625,27224902,27225309,27225684,27225978,27226490,27226690,27226979,27227376,27227798,27228630,27230602,27232563,27234516,27236209,27237895,27239602,27241312,27243008,27244726,27246390,27248107,27249811,27251504,27253190,27254865,27256536,27258219,27260050,27262098,27263972,27265767,27267469,27269286,27271043,27272724,27274507,27276315,27278078,27279810,27281489,27283217,27284386,27285147,27285949,27287076,27288666,27289975,27291290,27292463,27294059,27295715,27297479,27298992,27300446,27301980,27303478,27304940,27306388,27307894,27309387,27310897,27312392,27313776,27314144,27314478,27314956,27315415,27315781,27316481,27317017,27317610,27318140,27318721,27319242,27319736,27320167,27320531,27320754,27321236,27321649,27322006,27322315,27322703,27323003,27323476,27323993,27324305,27324635,27325160,27325420,27325617,27326969,27328975,27331027,27332697,27334387,27336089,27337800,27339538,27341243,27342953,27344630,27346341,27348036,27349728,27351441,27353128,27355040,27357088,27358712,27360350,27362154,27363982,27365829,27367574,27369305,27371089,27372939,27374688,27376471,27378245,27379109,27379895,27380776,27381903,27382935,27384306,27385618,27387200,27388883,27390602,27392187,27393767,27395359,27396860,27398342,27399826,27401311,27402801,27404299,27405789,27407279,27408742,27410211,27411679,27413183,27414641,27416098,27417579,27419074,27420559,27422042,27423530,27424997,27426450,27427921,27429395,27430887,27432360,27433831,27435319,27436804,27438291,27439766,27441252,27442740,27444245,27445725,27447186,27448679,27449382,27450017,27450543,27451216,27451921,27452557,27453212,27453732,27454321,27454860,27455433,27456088,27456662,27457276,27457854,27458502,27459113,27459741,27460276,27460855,27461529,27462168,27462743,27463331,27463907,27464567,27465166,27465784,27466397,27466958,27467429,27467931,27468425,27469105,27469707,27470209,27470752,27471274,27471809,27472389,27472926,27473492,27474049,27474678,27475225,27475621,27475959,27476171,27476550,27477015,27477326,27477878,27478339,27478746,27479210,27479749,27480472,27480998,27481295,27481463,27481709,27482045,27482175,27482395,27482795,27483268,27483763,27484258,27484713,27485222,27485889,27486385,27486982,27487615,27488239,27488835,27489382,27489869,27490391,27490811,27491433,27491918,27492519,27493119,27493675,27493951,27494475,27494970,27495512,27495989,27496297,27496549,27496909,27497523,27498122,27498722,27499271,27499698,27500105,27500728,27501321,27501778,27502359,27502959,27503559,27504106,27504674,27505099,27505696,27507369,27509383,27511357,27513352,27515399,27517297,27519272,27521220,27523209,27525181,27526894,27528615,27530318,27532029,27533738,27535445,27537128,27538825,27540543,27542208,27543926,27545607,27547308,27549010,27550715,27552412,27554101,27555784,27557488,27559188,27560818,27562488,27564144,27565803,27567484,27569159,27570823,27572517,27574218,27575901,27577585,27579257,27580952,27582641,27584334,27586030,27587684,27589346,27591022,27592713,27594386,27596048,27597697,27599394,27601063,27602724,27604764,27606812,27608860,27610908,27612895,27614640,27616414,27618117,27619772,27621450,27623178,27624911,27626698,27628447,27630189,27631928,27633595,27635326,27637031,27638623,27640358,27641989,27643700,27645403,27647160,27648885,27650581,27652317,27654075,27655790,27657389,27658982,27660686,27662420,27664133,27665830,27667526,27668536,27669427,27670337,27671161,27671906,27672740,27673595,27674347,27675269,27676024,27677055,27678060,27679004,27679783,27680773,27681690,27683048,27684039,27685171,27686344,27687415,27688605,27689876,27690975,27692152,27693370,27694834,27696234,27697633,27698595,27699682,27700945,27701700,27702490,27703219,27703732,27704486,27704980,27705390,27706179,27707152,27708091,27709193,27710329,27711430,27712349,27712888,27713398,27714271,27715596,27716539,27717531,27718620,27720108,27721947,27723813,27725672,27727542,27729452,27731391,27733289,27735232,27737070,27738630,27740123,27741614,27743096,27744585,27746073,27747573,27749029,27750497,27751988,27753483,27754978,27755856,27756294,27756472,27756938,27757498,27757839,27758220,27758746,27759226,27759581,27759736,27759904,27760163,27760463,27760735,27761141,27761610,27761953,27762463,27762852,27763158,27763529,27763938,27764380,27764812,27765051,27765433,27765740,27766059,27766501,27766743,27767192,27767565,27767891,27768918,27770900,27772876,27774867,27776531,27778232,27779879,27781586,27783267,27784944,27786645,27788346,27790055,27791736,27793435,27795141,27796837,27798532,27800263,27802311,27804238,27805931,27807623,27809412,27811159,27812901,27814691,27816502,27818277,27820014,27821756,27823468,27825052,27825684,27826516,27827919,27829420,27830067,27830842,27831931,27833585,27835425,27837206,27838751,27840353,27841845,27843337,27844835,27846325,27847835,27849331,27849889,27850392,27850956,27851566,27852036,27852441,27853017,27853470,27853847,27854288,27854685,27855119,27855311,27855653,27856022,27856538,27856957,27857225,27857634,27858020,27858375,27858693,27859531,27861459,27863402,27865099,27866810,27868515,27870206,27871917,27873574,27875232,27876912,27878615,27880339,27882387,27884101,27885891,27887675,27889469,27891192,27892912,27894683,27896538,27897957,27898757,27899558,27901215,27902946,27904452,27905826,27907393,27909068,27910530,27912016,27913385,27914856,27916349,27917824,27919328,27920784,27922262,27923736,27925219,27926724,27928236,27929712,27931202,27932686,27933889,27934442,27934843,27935403,27936003,27936471,27937067,27937473,27937965,27938528,27939036,27939515,27940183,27940769,27941277,27941597,27942027,27942351,27942693,27943145,27943599,27944149,27944527,27945034,27945324,27945579,27945804,27946417,27947062,27947707,27948275,27948874,27949404,27949892,27950486,27950830,27951315,27951847,27952286,27952940,27953498,27953887,27954364,27954889,27955182,27955860,27957854,27959833,27961834,27963848,27965543,27967275,27968983,27970688,27972369,27974048,27975728,27977387,27979103,27980824,27982484,27984168,27985846,27987574,27989293,27991008,27992735,27994472,27996199,27997899,27999908,28001956,28003840,28005583,28007260,28008990,28010736,28012428,28014116,28015803,28017417,28019086,28020819,28022602,28024324,28026101,28027877,28029619,28030794,28031705,28032445,28033435,28035146,28036716,28038038,28039566,28041013,28042642,28044046,28045860,28047692,28049430,28051046,28052461,28053909,28055406,28056883,28058368,28059827,28061323,28062806,28064284,28065759,28067238,28068719,28070215,28071690,28073166,28074515,28075019,28075549,28076155,28076676,28077151,28077547,28078102,28078628,28079191,28079521,28079939,28080424,28080790,28081192,28081467,28081898,28082389,28082913,28083471,28083904,28084417,28085005,28085368,28085799,28085995,28086237,28086448,28086943,28087386,28087712,28087924,28087989,28088215,28088573,28088829,28089064,28089415,28089932,28090311,28090771,28091172,28091419,28091689,28092058,28092307,28094195,28096137,28098056,28100093,28101807,28103508,28105199,28106879,28108566,28110236,28111926,28113650,28115321,28116964,28118630,28120307,28122006,28123689,28125359,28127037,28128716,28130389,28132067,28133736,28135688,28137736,28139683,28141421,28143112,28144782,28146554,28148269,28150052,28151764,28153433,28155114,28156832,28158436,28160206,28161876,28163537,28165357,28166600,28167318,28168045,28168575,28169527,28170418,28171095,28171951,28172796,28173589,28174340,28174844,28176145,28177434,28179212,28180926,28182541,28184175,28185835,28187299,28188805,28190307,28191803,28193307,28194806,28196280,28197718,28199204,28200697,28202209,28203681,28205199,28206679,28208198,28209676,28211167,28212589,28214058,28215569,28217095,28218615,28219197,28219764,28220328,28220620,28221021,28221505,28222041,28222605,28223174,28223561,28223986,28224458,28225006,28225445,28225568,28226148,28226689,28227238,28227696,28228117,28228530,28228836,28229016,28229195,28229729,28230308,28230815,28231326,28231900,28232395,28232855,28233278,28233641,28234012,28234533,28235058,28235575,28236032,28236345,28236695,28237181,28237535,28237901,28238089,28238226,28238503,28239063,28239538,28240019,28240518,28240888,28241231,28241678,28242126,28242496,28242851,28243140,28243285,28243657,28244054,28244491,28244867,28245280,28245775,28246147,28246493,28246926,28247353,28247814,28248174,28249645,28251660,28253687,28255678,28257682,28259730,28261582,28263297,28264984,28266624,28268281,28269982,28271681,28273327,28275025,28276735,28278406,28280115,28281813,28283503,28285176,28286873,28288546,28290234,28291924,28293625,28295337,28297033,28298697,28300361,28302065,28303784,28305482,28307162,28308851,28310560,28312271,28313982,28316023,28318071,28320119,28322074,28323763,28325465,28327066,28328728,28330486,28332009,28333820,28335579,28337382,28339123,28340861,28342558,28344288,28346001,28347706,28349447,28351158,28352852,28354562,28356342,28358182,28359813,28361608,28363409,28365242,28366207,28366838,28367401,28368008,28368560,28369282,28369980,28370746,28371358,28371755,28371964,28372500,28373198,28373859,28374221,28374728,28375191,28375418,28375969,28376416,28376725,28376957,28377353,28378494,28379664,28380237,28381846,28383552,28385340,28387094,28388887,28390630,28392156,28393588,28395076,28396571,28398086,28399587,28400628,28401135,28401368,28401605,28401891,28402314,28402605,28402752,28403012,28403258,28403466,28403974,28404386,28404705,28405096,28405586,28406098,28407801,28409752,28411420,28413092,28414799,28416490,28418164,28419824,28421495,28423407,28425230,28426992,28428748,28430517,28432211,28433843,28434752,28435623,28436844,28438115,28439798,28441434,28443048,28444567,28446075,28447584,28449079,28450546,28452043,28453518,28455015,28456504,28457978,28459455,28460950,28462444,28463941,28465420,28466905,28468383,28469890,28470558,28471159,28471789,28472298,28472842,28473375,28473891,28474423,28475010,28475549,28476085,28476657,28477069,28477673,28478285,28478730,28479353,28479728,28480224,28480796,28481362,28481898,28482398,28482981,28483591,28483870,28484357,28484955,28485465,28485855,28486139,28486644,28487103,28487663,28488193,28488577,28488968,28489422,28489961,28490423,28490890,28491500,28491886,28492512,28493078,28493666,28494292,28494703,28495055,28495726,28496214,28496644,28497159,28497737,28498129,28498767,28499305,28499928,28500535,28501131,28502670,28504720,28506740,28508773,28510798,28512613,28514326,28516037,28517748,28519447,28521131,28522833,28524539,28526249,28527952,28529623,28531302,28533001,28534677,28536393,28538059,28539798,28541473,28543179,28544846,28546513,28548187,28549853,28551559,28553262,28554976,28556815,28558863,28560911,28562736,28564471,28566255,28567995,28569747,28571394,28573096,28574777,28576540,28578376,28580153,28581995,28583820,28585497,28587138,28588894,28590699,28592502,28593854,28594573,28595341,28596173,28596875,28597813,28599547,28601099,28602355,28603698,28605436,28607110,28608626,28610030,28611168,28612879,28614724,28616558,28618304,28620149,28621726,28623218,28624771,28626269,28627750,28629235,28630718,28632200,28633691,28635168,28636641,28638118,28639616,28641073,28642561,28644044,28645536,28647047,28648561,28650051,28651550,28653037,28654541,28655861,28656348,28656417,28656682,28656912,28657403,28657942,28658440,28658912,28659368,28659869,28660478,28661081,28661282,28661727,28662164,28662544,28662948,28663254,28663835,28664414,28664941,28665254,28665650,28665811,28666278,28666545,28666764,28667321,28667681,28668283,28668834,28669306,28669745,28670277,28670826,28671083,28671395,28671965,28672334,28672857,28673463,28674051,28674599,28675074,28675301,28675526,28675951,28676360,28676794,28677310,28677739,28678317,28678911,28679441,28680068,28680636,28681164,28681683,28682106,28682430,28682871,28683335,28683485,28683614,28684039,28684401,28684904,28685196,28685557,28687244,28689286,28691280,28693310,28695356,28697313,28698966,28700671,28702368,28704047,28705699,28707388,28709057,28710706,28712368,28714063,28715750,28717425,28719119,28720820,28722537,28724206,28725910,28727585,28729254,28730960,28732657,28734351,28736050,28737768,28739479,28741144,28742845,28744525,28746193,28747979,28750027,28752075,28754123,28755832,28757582,28759324,28761055,28762807,28764516,28766193,28767948,28769669,28771351,28773016,28774836,28776612,28778402,28780125,28781896,28783615,28785274,28787027,28788753,28790393,28791943,28793696,28794591,28795413,28796099,28796901,28797712,28798440,28799173,28799879,28800459,28801160,28801975,28803010,28803973,28805017,28805823,28806553,28807415,28808432,28809593,28810498,28811456,28812448,28813448,28814317,28815156,28816091,28816912,28817455,28818100,28818724,28818818,28819509,28820740,28822228,28823991,28825854,28827663,28829514,28831290,28832847,28834380,28835916,28837421,28838906,28840392,28841892,28843393,28844897,28846370,28847877,28849398,28850282,28850682,28851018,28851220,28851561,28852115,28852656,28852983,28853458,28853870,28854356,28854882,28855273,28855570,28856086,28856478,28856766,28857267,28857744,28858021,28858350,28858880,28859261,28859628,28860032,28860374,28860573,28860949,28861165,28861452,28861838,28862313,28862667,28862903,28863183,28863410,28865204,28867183,28869145,28870945,28872645,28874332,28876017,28877700,28879339,28881036,28882704,28884380,28886041,28887710,28889398,28891094,28892801,28894493,28896192,28898240,28900285,28902011,28903755,28905477,28907247,28908885,28910640,28912352,28913976,28915645,28917415,28919142,28920905,28922554,28923590,28924207,28924869,28925695,28926892,28928048,28928954,28930180,28931911,28933799,28935684,28937289,28938809,28940332,28941826,28943329,28944822,28946314,28947815,28949326,28950820,28952303,28953802,28955303,28956788,28958292,28959827,28961322,28962808,28964299,28965792,28967293,28968800,28970281,28971779,28973266,28974756,28976228,28977751,28979260,28980774,28982258,28983773,28985265,28986748,28988217,28988711,28989238,28989765,28990183,28990724,28991273,28991768,28992439,28993040,28993634,28994229,28994723,28995118,28995564,28996110,28996562,28997002,28997541,28998131,28998758,28999350,28999897,29000392,29000987,29001459,29001901,29002422,29003012,29003634,29004162,29004496,29004974,29005395,29005973,29006489,29006936,29007431,29007939,29008461,29009015,29009436,29009945,29010456,29010892,29011152,29011443,29011826,29012269,29012633,29012937,29013252,29013771,29014105,29014548,29015008,29015457,29016065,29016639,29017080,29017406,29017941,29018559,29019183,29019778,29020364,29020922,29021304,29021842,29022305,29022879,29023333,29023770,29024175,29024684,29025070,29025573,29026063,29026555,29027015,29027381,29027778,29028334,29028818,29029181,29029685,29030094,29030442,29030792,29031020,29031625,29032150,29032497,29032904,29033299,29033700,29034031,29034636,29034940,29035399,29035841,29036093,29036331,29036637,29037035,29037407,29037715,29038088,29038428,29038654,29039078,29039368,29040874,29042872,29044921,29046913,29048891,29050897,29052912,29054910,29056952,29059001,29060706,29062396,29064084,29065768,29067456,29069152,29070828,29072523,29074244,29075953,29077656,29079390,29081114,29082849,29084574,29086310,29088033,29089790,29091519,29093259,29094963,29096655,29098359,29100044,29101742,29103426,29105097,29106775,29108478,29110154,29111870,29113569,29115225,29116879,29118570,29120258,29121954,29123665,29125378,29127122,29128861,29130607,29132332,29133988,29135681,29137397,29139097,29140760,29142419,29144093,29146023,29148071,29150119,29152167,29154215,29156195,29157874,29159598,29161267,29162969,29164599,29166280,29168049,29169777,29171567,29173293,29175047,29176812,29178560,29180243,29181942,29183649,29185372,29187069,29188800,29190448,29192114,29193760,29195377,29197138,29198880,29200522,29202261,29203863,29205543,29207169,29208898,29210670,29212429,29214128,29215930,29217544,29219125,29220707,29221658,29222467,29223188,29223978,29224821,29225325,29226095,29226828,29227443,29228330,29229229,29230168,29231144,29232147,29232567,29233156,29233781,29234493,29235427,29236191,29236831,29237500,29238169,29238838,29239606,29240234,29240843,29241460,29241826,29242089,29242923,29243778,29244626,29245569,29246609,29247728,29248556,29249573,29250523,29251301,29251957,29252528,29253885,29255271,29257023,29258883,29260689,29262568,29264410,29266201,29268040,29269928,29271579,29273232,29274808,29276302,29277812,29279290,29280782,29282285,29283768,29285245,29286731,29288215,29289410,29289857,29290372,29290898,29291297,29291840,29292277,29292783,29293139,29293570,29293926,29294235,29294519,29294637,29294688,29295189,29295714,29296349,29296914,29297497,29298042,29298632,29298955,29299131,29299193,29299557,29299930,29300215,29300562,29300951,29301072,29301141,29301513,29303558,29305606,29307651,29309339,29311004,29312703,29314394,29316094,29317825,29319545,29321256,29322937,29324600,29326301,29328015,29329721,29331454,29333500,29335550,29337352,29339196,29340998,29342807,29344581,29346313,29348115,29349869,29351603,29353410,29355230,29357095,29357906,29358694,29359425,29360300,29361224,29361773,29363259,29363860,29365294,29366876,29368533,29370117,29371631,29373223,29374747,29376229,29377739,29379229,29380740,29382224,29383714,29385198,29386693,29388177,29389662,29391141,29392638,29394126,29394861,29395253,29395501,29395764,29396129,29396581,29396936,29397321,29397726,29397930,29398191,29398780,29399263,29399827,29400407,29400865,29401352,29401801,29402082,29402373,29402771,29403183,29403478,29403922,29404445,29404805,29405083,29405441,29405911,29406292,29406664,29406929,29407377,29407790,29408248,29408705,29409178,29409437,29410309,29412340,29414366,29416383,29418062,29419721,29421374,29423075,29424780,29426456,29428151,29429849,29431557,29433261,29434953,29436626,29438292,29439935,29441603,29443254,29444959,29447007,29449023,29450634,29452285,29454095,29455984,29457872,29459658,29461460,29463306,29465153,29466954,29468652,29470338,29471950,29472847,29473540,29474145,29474881,29475432,29475744,29476064,29476512,29476844,29477218,29477643,29478120,29478683,29480280,29481407,29481850,29482636,29484128,29485670,29487161,29488645,29490378,29492017,29493624,29495280,29496779,29498286,29499796,29501324,29502840,29504369,29505888,29507412,29508913,29510429,29511951,29513454,29514962,29516476,29517977,29519495,29521031,29522528,29524045,29525548,29527054,29528567,29530087,29531595,29533099,29534634,29536129,29537633,29539176,29540717,29542251,29543793,29545308,29546830,29548351,29549863,29551373,29552883,29554375,29555876,29557371,29558863,29560332,29561819,29563321,29564803,29566306,29567783,29568263,29568798,29569278,29569744,29570268,29570789,29571328,29571762,29572297,29572956,29573643,29574296,29575018,29575719,29576404,29577103,29577776,29578409,29579047,29579805,29580551,29581240,29581862,29582408,29582973,29583318,29583945,29584519,29585107,29585788,29586498,29587095,29587756,29588399,29589079,29589667,29590321,29590904,29591514,29592155,29592627,29593240,29593892,29594440,29594997,29595553,29596097,29596633,29597129,29597710,29598290,29598892,29599514,29600042,29600587,29601219,29601798,29602346,29602920,29603461,29604103,29604596,29605034,29605563,29606121,29606644,29607231,29607851,29608409,29609033,29609639,29610206,29610834,29611354,29611923,29612503,29613156,29613736,29614278,29614779,29615336,29615847,29616316,29616893,29617395,29617991,29618575,29619041,29619466,29620041,29620644,29621166,29621869,29622419,29623126,29623899,29624603,29625263,29625947,29626599,29627293,29628031,29628626,29629174,29629819,29630500,29631128,29631750,29632284,29632827,29633354,29633978,29634563,29635220,29635813,29636394,29636966,29637586,29638161,29638767,29639354,29639904,29640457,29640996,29641306,29641860,29642426,29642994,29643523,29644095,29644593,29645116,29645672,29646155,29646673,29647247,29647864,29648401,29648759,29649138,29649749,29650235,29650748,29651291,29651655,29652081,29652573,29653140,29653723,29654207,29654693,29655038,29656476,29658529,29660581,29662619,29664656,29666695,29668751,29670789,29672837,29674891,29676939,29678960,29681013,29682942,29684654,29686375,29688052,29689752,29691455,29693184,29694882,29696558,29698269,29699963,29701679,29703372,29705069,29706775,29708480,29710187,29711922,29713654,29715361,29717084,29718805,29720538,29722284,29724027,29725789,29727551,29729308,29731059,29732792,29734501,29736195,29737915,29739613,29741297,29742974,29744641,29746352,29748089,29749767,29751450,29753152,29754868,29756565,29758279,29759996,29761746,29763505,29765261,29766996,29768745,29770446,29772166,29773886,29775622,29777345,29779089,29780820,29782587,29784323,29786043,29787791,29789555,29791306,29793047,29794770,29796540,29798588,29800636,29802684,29804732,29806780,29808828,29810876,29812839,29814535,29816158,29817896,29819645,29821330,29823018,29824742,29826506,29828213,29829985,29831786,29833548,29835392,29837165,29838998,29840809,29842604,29844394,29846204,29847934,29849725,29851504,29853114,29854700,29856408,29858138,29859807,29861437,29863086,29864883,29866541,29868273,29869972,29871662,29873382,29875225,29877054,29878875,29880696,29882506,29884315,29885999,29887701,29889300,29890970,29892752,29894604,29896417,29898203,29900050,29901908,29903717,29905484,29906498,29907453,29908355,29909282,29910252,29911164,29911908,29912674,29913591,29914497,29915683,29916989,29918344,29919607,29920787,29921967,29923213,29924517,29925835,29927128,29928347,29929433,29930627,29931390,29932115,29932902,29933813,29934718,29935669,29936663,29937985,29938898,29939401,29940086,29941732,29943068,29944870,29946824,29948512,29950346,29952211,29954129,29955928,29957736,29959549,29961396,29963284,29965134,29966678,29968141,29969695,29971186,29972682,29974164,29975665,29977178,29978666,29980144,29981498,29981633,29981751,29982027,29982148,29982271,29982538,29982810,29983235,29983522,29983826,29984153,29984426,29984620,29984986,29985243,29985422,29985563,29985772,29986272,29986683,29986936,29987150,29987705,29988107,29988495,29988897,29989189,29989346,29990694,29992721,29994763,29996482,29998191,29999875,30001567,30003287,30004980,30006656,30008358,30010066,30011802,30013512,30015175,30016858,30018736,30020784,30022613,30024398,30026030,30027668,30029477,30031206,30032972,30034806,30036606,30038464,30040186,30041835,30042543,30043478,30045257,30046669,30048285,30049877,30051517,30053038,30054485,30055674,30057193,30058649,30059106,30059512,30060019,30060552,30061113,30061591,30062020,30063837,30065568,30067254,30068965,30070796,30072600,30074190,30074797,30075594,30077074,30078632,30080119,30081618,30083107,30084100,30084301,30084761,30085188,30085733,30086134,30086246,30086479,30087029,30087429,30087705,30087965,30088477,30089263,30091209,30092904,30094574,30096263,30097947,30099624,30101302,30103241,30104854,30106574,30108337,30110006,30111191,30112113,30113788,30115582,30117236,30118696,30120170,30121660,30123168,30124661,30125612,30126089,30126505,30126896,30127321,30127802,30128077,30128359,30128880,30129351,30129820,30130149,30130655,30131101,30131540,30132118,30133183,30135199,30136839,30138514,30140167,30141849,30143530,30145205,30146896,30148841,30150513,30152229,30153964,30155718,30157003,30157547,30158545,30159764,30160725,30162036,30163657,30165594,30167642,30169689,30171730,30173782,30175606,30177226,30178807,30180254,30181305,30182103,30182914,30183668,30184486,30185423,30186602,30188623,30190648,30192605,30194540,30196349,30196845,30197901,30199016,30200501,30201625,30203069,30204466,30205812,30206942,30207716,30208321,30209503,30210624,30211828,30212917,30213928,30214670,30215654,30216574,30217661,30218738,30219751,30220846,30221923,30223117,30223930,30224645,30225414,30226193,30227239,30227941,30228842,30229591,30230403,30231755,30233803,30235075,30236166,30237234,30238165,30239131,30240124,30241247,30242239,30243233,30244158,30245373,30246418,30247293,30248357,30249339,30250326,30251328,30252087,30252866,30253595,30254454,30255628,30257041,30258577,30259953,30261602,30263589,30265637,30267685,30269517,30271004,30273033,30275089,30277137,30279185,30281131,30282984,30285037,30286656,30288628,30290685,30292733,30294781,30296829,30298877,30300925,30302973,30305025,30307060,30309093,30311119,30313140,30315177,30317178,30319141,30320944,30322604,30324619,30326667,30328715,30330763,30332811,30334859,30336907,30338955,30341003,30343060,30345108,30347156,30349139,30351075,30352911,30354676,30355940,30357844,30359766,30361657,30363412,30365352,30367409,30369463,30371520,30373568,30375625,30377682,30379730,30381778,30383826,30385874,30387922,30389970,30392018,30394066,30396002,30397446,30398606,30400663,30402711,30404759,30406807,30408855,30410903,30412951,30414999,30417047,30419095,30421143,30423191,30425239,30427287,30429335,30431383,30433431,30435488,30437544,30439561,30441102,30443150,30445198,30447246,30449296,30451127,30452682,30454065,30455217,30456206,30456869,30457416,30459470,30461518,30463566,30465614,30467662,30469717,30471765,30473813,30475861,30477917,30479696,30481110,30481974,30484022,30486070,30488094,30490016,30491879,30493548,30495015,30496134,30497006,30497510,30497737,30498259,30500245,30502293,30504350,30506398,30508445,30510493,30512541,30514589,30516637,30518685,30520733,30522781,30524826,30526782,30528586,30530174,30531675,30533069,30535126,30537183,30539231,30541279,30543335,30545383,30547431,30549479,30551527,30553582,30555630,30557676,30559701,30561582,30563263,30564672,30565638,30566941,30568799,30570692,30572712,30574760,30576817,30578872,30580783,30582448,30583648,30584772,30586820,30588867,30590915,30592656,30594708,30596756,30598804,30600516,30600891,30600998,30601165,30601198,30602231,30604279,30606336,30608384,30610432,30612480,30614534,30616591,30618630,30620527,30622575,30624623,30626671,30628719,30630731,30632779,30634827,30636875,30638923,30640971,30643019,30645067,30647115,30649172,30651069,30652658,30654640,30656554,30658172,30659793,30661841,30663824,30665358,30666613,30668245,30670159,30672212,30674267,30676324,30678380,30680428,30682443,30684289,30685622,30685849,30687168,30689216,30691264,30693312,30695360,30697416,30699472,30701520,30703577,30705625,30707648,30709646,30711501,30713383,30715304,30716865,30718913,30720961,30723009,30725057,30727114,30729162,30731210,30733258,30735247,30737279,30739327,30741375,30743423,30745471,30747519,30749567,30751615,30753488,30755257,30757243,30759217,30760960,30762170,30764225,30766279,30768269,30770110,30771888,30773936,30775984,30778032,30780080,30782131,30784179,30786227,30788275,30790323,30792076,30793350,30795073,30797003,30799011,30801021,30803064,30805121,30807134,30809154,30811195,30813247,30815290,30817340,30819338,30821358,30823355,30825336,30827330,30829381,30831415,30833471,30835521,30837569,30839588,30841629,30843668,30845711,30847748,30849794,30851825,30853741,30855547,30857122,30858508,30859776,30860977,30862098,30863314,30864343,30865396,30866510,30867530,30868582,30869432,30870292,30871202,30871968,30872619,30873182,30873617,30873806,30873984,30874089,30874148,30874307,30876364,30878386,30880442,30882499,30884527,30886421,30888158,30889753,30890914,30891917,30893965,30896013,30898061,30900109,30902017,30904065,30906113,30908161,30910129,30912177,30914225,30916273,30918286,30920338,30922393,30924441,30926496,30928551,30930583,30932631,30934679,30936727,30938758,30940806,30942839,30944796,30946690,30948518,30950252,30952018,30953596,30955578,30957634,30959682,30961724,30963772,30965828,30967883,30969646,30971666,30973722,30975778,30977833,30979881,30981935,30983983,30986020,30987959,30990007,30992063,30993977,30995437,30997429,30999477,31001532,31003004,31004886,31006934,31008982,31011030,31013078,31015126,31017174,31019222,31021273,31023279,31025164,31026888,31028402,31029779,31031085,31032270,31033908,31035956,31038004,31040061,31042107,31044134,31046007,31047661,31048641,31048969,31050036,31051534,31053295,31055187,31057139,31059057,31060996,31062998,31064909,31066639,31068165,31069515,31070531,31071131,31071577,31073271,31075300,31077330,31078720,31079506,31081532,31083580,31085628,31087676,31089724,31091772,31093820,31095868,31097888,31099865,31101903,31103923,31105692,31107129,31108055,31109753,31111806,31113579,31115006,31116789,31118837,31120885,31122937,31124993,31127041,31129097,31131145,31133193,31135128,31136930,31138632,31140680,31142071,31143143,31144633,31146690,31148738,31150786,31152834,31154882,31156939,31158977,31160806,31162717,31164765,31166813,31168861,31170909,31172957,31175013,31176847,31177854,31179364,31181282,31183310,31185367,31187415,31189455,31190719,31192419,31194243,31196297,31198345,31200393,31202450,31204499,31206489,31208285,31209538,31210519,31211272,31211772,31212084,31212323,31212511,31214546,31216594,31218642,31220690,31222738,31224786,31226834,31228882,31230930,31232978,31235026,31237074,31239122,31241170,31243218,31245266,31247314,31249361,31250668,31252716,31254764,31256812,31258860,31260908,31262956,31265004,31267055,31267883,31268282,31269708,31271420,31273411,31275468,31277516,31279564,31281612,31283660,31285708,31287756,31289804,31291852,31293881,31295731,31297340,31298816,31300136,31301300,31302365,31303406,31304288,31304993,31305820,31306793,31307598,31308569,31310303,31312360,31314408,31316456,31318504,31320552,31322600,31324648,31326696,31328744,31330792,31332840,31334888,31336936,31338739,31339930,31340646,31341345,31343056,31345104,31347152,31349200,31351247,31352571,31354514,31356542,31358287,31359499,31360469,31361061,31361757,31363064,31365112,31366937,31367938,31368684,31370503,31372478,31374491,31376545,31378598,31380655,31382711,31384740,31386665,31388246,31390027,31391885,31393777,31395794,31397848,31399903,31401951,31403999,31406056,31408104,31410161,31412207,31414176,31415927,31417335,31417990,31418801,31420596,31422651,31424699,31426747,31428795,31430843,31432891,31434939,31436996,31439043,31441028,31442722,31444129,31445096,31446023,31446214,31446935,31448983,31451029,31452998,31454905,31456678,31458378,31460228,31462276,31464327,31466041,31467589,31468995,31470684,31472503,31474554,31476602,31478519,31480472,31481594,31483642,31485342,31487142,31489115,31491169,31492838,31494715,31496021,31497438,31498599,31500374,31502307,31504359,31506356,31508351,31510385,31512358,31514288,31516336,31518384,31520417,31521979,31522866,31524435,31526483,31528531,31530579,31532627,31534675,31535551,31536993,31539041,31541098,31543146,31545194,31546447,31546903,31548919,31550967,31553015,31555063,31557111,31559159,31561207,31563165,31565213,31567181,31568752,31570809,31572797,31574654,31576709,31578702,31580424,31582457,31584456,31585785,31587064,31589105,31590386,31591353,31593401,31595458,31597506,31599549,31600537,31600644,31600918,31602505,31604561,31606618,31608666,31610722,31612778,31614826,31616866,31618823,31620871,31622919,31624811,31626859,31628888,31630934,31632982,31635013,31637061,31639113,31641161,31643032,31645076,31646752,31648693,31650225,31652014,31653597,31654897,31656555,31658273,31659771,31661065,31662502,31664550,31666460,31668278,31670326,31672374,31674422,31676470,31678444,31679754,31680863,31681532,31683270,31685016,31686463,31688479,31690364,31692412,31694460,31696508,31698556,31700604,31702652,31704709,31706757,31708805,31710836,31712781,31714515,31716061,31717417,31718547,31719398,31721000,31723048,31725096,31727144,31729192,31731240,31732432,31733429,31735457,31737504,31739552,31741490,31743424,31745466,31747514,31749562,31751619,31753667,31755715,31757771,31759804,31761743,31763454,31764782,31765321,31766693,31768741,31770789,31772837,31774885,31775938,31776088,31777450,31779499,31781547,31783595,31785643,31787691,31789747,31791795,31793843,31795671,31796910,31797184,31797861,31799382,31801376,31803424,31805472,31807520,31809568,31811616,31813664,31815720,31817775,31819832,31821887,31823876,31825729,31827520,31829318,31831010,31832523,31833899,31835160,31836413,31837581,31838593,31839309,31839840,31840398,31840899,31841363,31841834,31842225,31842653,31843100,31843562,31844067,31844627,31845056,31845242,31845689,31846730,31847876,31849075,31850302,31851382,31852439,31853375,31854202,31854862,31855318,31855572,31855672,31855937,31857181,31858841,31860790,31862845,31864893,31866941,31868949,31870899,31872836,31874690,31876679,31878469,31880468,31882459,31883971,31885701,31887751,31889804,31891857,31893865,31895897,31897941,31899970,31902014,31904031,31905992,31908040,31910014,31911922,31913952,31916003,31918051,31920080,31921744,31923638,31925603,31927345,31929273,31931313,31932913,31934262,31936016,31938064,31940118,31942082,31944003,31945930,31947764,31949732,31951605,31953653,31955701,31957752,31959760,31961660,31963708,31965699,31967222,31968794,31970374,31971692,31972652,31973093,31973674,31974045,31974627,31975293,31976053,31977263,31978906,31980295,31981717,31983014,31984286,31985785,31987472,31989275,31991059,31992857,31994788,31996818,31998840,32000881,32002938,32004995,32007050,32009107,32011155,32013211,32015264,32017305,32019283,32021294,32023275,32025250,32027124,32028846,32030580,32032312,32033996,32035648,32037147,32038605,32040047,32041481,32042907,32044229,32045459,32046658,32047879,32049055,32050171,32051189,32052108,32053040,32054003,32055569,32056944,32058451,32060002,32061385,32062867,32064416,32065931,32067363,32069010,32070410,32071998,32073646,32075328,32076881,32078548,32080058,32081547,32083220,32084861,32086640,32088371,32090126,32091935,32093765,32095625,32097535,32099435,32101410,32103350,32105341,32107388,32109440,32111488,32113536,32115589,32117637,32119678,32121687,32123582,32125300,32126826,32127824,32129366,32131160,32133190,32135238,32137286,32139336,32140413,32140560,32141943,32143991,32146039,32148058,32149510,32151560,32152637,32154685,32156733,32158202,32159873,32161921,32163969,32166017,32168074,32169605,32171662,32173592,32175066,32176493,32178541,32180589,32182637,32184693,32186750,32188804,32190756,32192804,32194852,32196900,32198948,32200996,32203044,32205092,32207140,32209188,32211236,32213284,32215340,32217362,32219412,32221469,32223525,32225573,32227621,32229578,32231524,32233557,32235614,32237662,32239706,32241757,32243805,32245853,32247901,32249949,32251997,32254045,32255679,32257139,32259196,32261245,32263296,32265344,32267395,32269445,32271493,32273390,32275328,32277114,32278672,32280273,32281682,32283451,32285241,32286815,32288224,32289566,32290692,32291550,32291805,32293675,32295723,32297771,32299819,32301871,32303842,32305403,32306344,32306556,32307746,32309794,32311842,32313749,32315448,32316898,32318709,32320576,32321316,32321516,32322369,32323245,32323611,32324066,32324419,32324871,32325204,32325594,32325870,32326366,32327043,32327979,32328826,32329415,32329939,32330644,32331707,32332489,32333118,32334586,32336011,32337428,32338616,32339821,32341123,32341765,32342392,32343166,32343530,32343825,32344363,32344812,32345192,32346232,32347128,32347472,32347855,32348192,32348858,32349641,32350150,32350676,32351251,32351647,32352105,32352776,32353471,32354264,32355044,32355617,32356589,32357387,32358052,32359010,32359807,32360478,32361395,32361755,32362367,32362962,32363767,32364603,32365203,32365476,32365796,32366080,32366356,32366877,32367199,32367546,32367798,32367956,32368450,32369017,32369755,32370378,32370895,32371327,32371512,32371986,32372534,32372983,32373526,32373990,32374394,32374860,32375073,32375789,32376602,32376871,32377172,32377580,32377894,32378724,32379629,32380115,32380235,32380428,32380709,32381181,32382030,32382341,32382781,32383095,32383510,32383669,32384428,32384742,32385140,32386026,32386644,32386834,32387092,32387401,32387865,32388140,32388378,32388671,32388981,32389876,32390441,32390991,32391420,32392108,32392503,32393042,32393468,32393802,32394593,32395087,32395418,32396062,32396762,32397731,32397960,32398096,32398502,32398888,32399645,32399973,32400534,32400957,32401520,32401993,32402538,32402823,32403420,32403712,32404310,32404835,32405332,32405893,32406074,32406843,32407441,32407959,32408232,32408881,32409666,32410231,32411120,32412339,32413492,32414664,32415814,32416933,32417909,32418314,32418685,32419853,32420985,32421892,32422499,32423026,32424467,32424727,32425145,32425477,32425644,32425976,32426214,32426415,32426554,32426792,32427129,32427569,32427693,32427828,32427960,32428288,32428708,32429292,32429619,32430268,32430867,32431291,32432189,32432641,32433263,32433461,32433861,32434403,32434685,32435015,32435344,32436041,32436472,32437070,32437558,32437861,32438152,32438436,32438773,32439256,32439442,32439805,32440003,32440235,32440576,32440732,32441237,32441527,32441836,32442020,32442239,32442412,32442634,32443168,32443548,32443969,32444278,32444979,32446139,32446377,32446817,32447274,32447730,32448355,32448991,32449291,32449862,32450892,32451788,32452676,32453207,32453762,32454121,32454487,32454905,32455241,32455624,32456113,32456390,32456630,32456918,32457072,32457254,32458024,32458907,32459743,32460534,32461199,32461712,32462307,32462570,32462998,32463293,32463724,32464391,32464577,32464956,32465345,32466005,32466686,32467535,32468206,32468623,32469029,32469566,32469827,32470144,32470396,32470625,32470873,32471474,32471849,32472411,32472751,32473344,32473976,32474544,32475308,32475860,32475929,32476267,32476740,32477247,32477965,32478412,32478838,32479269,32479655,32480012,32480363,32480639,32481867,32483162,32484403,32485686,32486923,32488283,32490151,32491865,32492322,32492444,32492595,32493035,32493607,32493777,32493981,32494100,32494592,32494786,32495246,32495770,32496363,32497554,32498313,32498971,32499323,32499507,32499914,32500141,32500524,32500755,32500929,32501287,32501490,32502014,32502421,32503073,32503564,32504047,32504666,32505386,32506273,32506514,32507076,32507291,32507693,32508015,32508472,32508895,32509175,32509389,32509874,32510190,32510551,32510838,32511114,32511412,32511702,32512267,32512512,32512900,32513080,32513571,32513922,32514302,32514421,32514890,32515488,32516034,32516484,32516644,32516910,32517359,32517831,32518252,32518491,32518890,32519619,32520009,32520693,32521054,32521538,32522250,32522550,32523073,32523880,32524027,32524184,32524340,32524478,32524628,32524813,32525234,32525382,32525550,32525714,32525871,32526060,32526356,32526503,32526774,32527045,32527368,32527794,32528429,32528555,32528781,32529009,32529227,32529658,32530135,32530513,32531107,32531639,32531817,32532008,32532193,32532696,32532957,32533292,32533897,32534112,32534535,32534716,32534923,32535166,32535539,32535662,32536112,32536642,32536774,32536995,32537224,32537404,32537753,32537877,32538012,32538720,32539236,32539711,32540173,32540556,32541000,32541201,32541457,32541817,32542186,32542489,32542802,32543721,32544071,32544453,32544838,32545274,32545647,32546284,32547266,32548090,32549146,32549893,32550651,32552317,32553292,32554453,32555772,32557172,32558602,32560073,32561525,32563059,32564542,32566083,32567668,32569136,32570645,32572147,32573628,32575238,32576762,32578333,32579778,32581326,32582812,32584282,32585592,32586898,32588091,32589368,32590760,32592121,32593364,32594575,32595661,32596769,32598223,32599555,32601182,32603127,32604832,32606596,32608339,32610026,32611727,32613455,32615160,32616885,32618602,32620291,32622030,32623791,32625563,32627324,32629028,32630630,32632298,32633979,32635637,32637326,32639051,32640736,32642479,32644166,32645860,32647537,32649192,32650853,32652511,32654089,32655678,32657325,32659232,32660775,32662515,32664201,32665816,32667470,32669107,32670847,32672581,32674393,32676233,32678055,32679891,32681717,32683499,32685199,32686983,32688645,32690420,32692225,32694067,32695835,32697484,32699253,32701087,32702777,32704566,32706357,32708107,32709821,32711488,32713107,32714732,32716435,32718130,32719775,32721389,32722973,32724568,32726240,32727893,32729532,32731248,32732946,32734665,32736322,32738050,32739745,32741504,32743222,32744853,32746591,32748308,32750017,32751726,32753385,32755017,32756712,32758387,32759998,32761634,32763231,32764852,32766410,32767903,32769432,32770939,32772564,32773689,32774722,32775551,32776204,32777112,32778431,32779893,32781362,32782643,32783757,32784927,32786163,32787307,32788691,32790058,32791344,32792655,32793922,32795205,32796365,32797359,32798266,32798993,32799908,32800846,32801550,32802210,32803069,32804130,32805199,32806269,32807464,32809103,32810643,32812068,32813490,32814896,32816513,32817916,32819411,32820939,32822527,32823866,32825164,32826435,32827700,32828336,32828562,32828773,32829019,32829241,32829500,32830399,32831743,32833129,32834311,32835919,32837554,32838898,32840254,32841838,32842992,32843768,32845141,32846430,32847184,32848578,32850093,32851551,32853126,32854677,32856281,32857811,32859170,32860524,32862100,32863353,32864812,32866351,32868071,32869472,32870927,32872346,32873792,32875245,32876882,32878022,32879521,32881162,32882667,32884351,32885835,32887427,32889056,32890213,32891959,32893265,32894886,32896343,32897476,32898972,32900493,32902182,32903746,32905126,32906559,32908137,32909481,32911059,32912616,32914211,32915587,32916806,32918418,32919953,32921500,32923079,32924420,32925799,32927288,32928972,32930232,32931935,32933211,32934702,32936256,32937917,32939223,32940505,32942048,32943717,32945292,32946939,32948119,32949642,32951013,32952661,32953704,32955238,32956602,32958287,32959318,32960735,32962157,32963637,32964952,32966354,32967952,32969535,32971156,32972789,32974325,32975675,32977010,32978724,32980149,32981912,32983142,32984872,32986140,32987957,32989374,32990903,32992122,32993889,32995585,32997240,32998744,33000174,33001970,33003517,33004897,33006644,33008278,33009575,33011178,33012760,33014461,33016295,33017716,33019387,33021143,33022906,33024459,33026150,33027790,33029152,33030835,33032256,33033831,33035477,33037296,33038613,33040264,33042002,33043556,33045186,33046790,33048305,33050160,33051655,33053420,33054985,33056887,33058738,33060658,33062615,33064660,33066663,33068719,33070736,33072762,33074785,33076842,33078857,33080901,33082919,33084965,33087019,33089062,33091091,33093085,33095041,33097040,33099069,33101093,33103130,33105186,33107242,33109276,33111314,33113359,33115375,33117393,33119429,33121475,33123523,33125569,33127620,33129673,33131707,33133715,33135743,33137597,33139598,33141641,33143686,33145743,33147790,33149842,33151874,33153907,33155913,33157894,33159884,33161865,33163863,33165869,33167870,33169886,33171930,33173961,33176010,33178029,33180029,33182007,33183991,33185964,33187979,33189967,33192015,33194037,33196058,33198108,33200138,33202129,33204092,33206090,33208099,33210093,33212087,33214140,33216185,33218242,33220288,33222283,33224268,33226257,33228275,33230290,33232332,33234353,33236398,33238446,33240498,33242551,33244578,33246635,33248652,33250688,33252692,33254710,33256715,33258769,33260785,33262723,33264711,33266660,33268638,33270624,33272635,33274573,33276517,33278505,33280504,33282468,33284415,33286424,33288405,33290403,33292334,33294324,33296288,33298253,33300240,33302238,33304185,33306163,33308153,33310113,33312072,33314077,33316060,33318019,33319996,33321976,33323979,33325957,33327919,33329897,33331873,33333864,33335885,33337872,33339868,33341859,33343840,33345822,33347808,33349811,33351769,33353774,33355742,33357732,33359716,33361703,33363681,33365627,33367607,33369590,33371590,33373545,33375555,33377553,33379541,33381545,33383564,33385554,33387558,33389547,33391541,33393527,33395495,33397473,33399473,33401469,33403419,33405344,33407338,33409363,33411315,33413298,33415345,33417366,33419342,33421339,33423353,33425372,33427326,33429356,33431354,33433370,33435404,33437441,33439443,33441460,33443492,33445498,33447498,33449475,33451459,33453472,33455485,33457489,33459453,33461305,33463292,33465349,33467401,33469434,33471344,33473303,33475230,33477122,33478873,33480794,33482672,33484569,33486304,33488245,33490110,33492060,33494054,33496041,33497863,33499777,33501729,33503547,33505431,33507290,33509257,33511214,33513182,33515084,33517017,33518914,33520864,33522748,33524578,33526590,33528566,33530460,33532410,33534244,33536200,33538060,33539915,33541767,33543645,33545597,33547594,33549485,33551513,33553495,33555388,33557253,33559078,33561001,33562854,33564793,33566776,33568694,33570637,33572649,33574612,33576567,33578366,33580295,33582066,33584057,33585997,33587963,33589877,33591771,33593733,33595672,33597634,33599437,33601455,33603430,33605395,33607173,33608906,33610708,33612463,33614369,33616246,33618120,33619926,33621797,33623635,33625483,33627457,33629385,33631298,33633244,33635143,33637056,33638975,33640899,33642784,33644691,33646597,33648504,33650455,33652361,33654363,33656250,33658228,33660113,33661975,33663908,33665743,33667652,33669467,33671370,33673303,33675083,33677037,33678529,33680287,33681615,33683407,33685256,33686963,33688859,33690844,33692774,33694739,33696722,33698695,33700669,33702614,33704590,33706587,33708559,33710510,33712509,33714239,33715640,33717044,33718488,33719924,33721366,33722922,33724306,33725922,33727428,33728869,33730416,33732046,33733820,33735429,33737054,33738968,33740987,33742960,33744896,33746903,33748885,33750690,33752630,33754570,33756586,33758570,33760498,33762485,33764400,33766377,33768208,33770071,33772043,33774060,33776083,33777979,33779999,33781904,33783809,33785716,33787595,33789587,33791555,33793564,33795465,33797492,33799429,33801340,33803240,33805105,33807102,33809052,33811068,33812965,33814923,33816782,33818668,33820578,33822428,33824401,33826379,33828369,33830293,33832241,33834175,33836033,33837937,33839813,33841806,33843822,33845789,33847722,33849727,33851642,33853498,33855416,33857344,33859305,33861250,33863158,33865085,33867050,33868965,33870920,33872826,33874693,33876437,33878189,33879808,33881463,33883139,33884875,33886630,33888336,33889999,33891673,33893384,33895097,33896818,33898553,33900259,33901910,33903612,33905264,33906962,33908696,33910408,33912127,33913751,33915403,33917071,33918783,33920548,33922275,33923945,33925560,33927154,33928836,33930589,33932293,33933960,33935587,33937251,33938885,33940555,33942298,33944059,33945747,33947409,33949056,33950728,33952486,33954278,33956028,33957661,33959266,33960935,33962721,33964615,33966455,33968204,33969940,33971702,33973533,33975395,33977218,33979063,33980866,33982636,33984499,33986230,33988015,33989703,33991393,33993085,33994806,33996523,33998147,33999763,34001504,34003227,34004924,34006543,34008364,34010039,34011676,34013467,34015175,34016694,34018425,34020129,34021859,34023532,34025286,34027045,34028795,34030473,34032270,34034069,34035885,34037544,34039323,34041063,34042826,34044558,34046339,34048102,34050043,34051938,34053931,34055931,34057919,34059853,34061773,34063716,34065624,34067635,34069613,34071578,34073579,34075565,34077560,34079563,34081530,34083565,34085535,34087504,34089480,34091473,34093476,34095462,34097443,34099405,34101397,34103379,34105315,34107292,34109309,34111307,34113301,34115263,34117248,34119219,34121185,34123163,34125128,34127096,34129060,34131042,34133003,34134970,34136935,34138919,34140882,34142852,34144798,34146784,34148728,34150689,34152648,34154602,34156572,34158526,34160513,34162467,34164437,34166404,34168375,34170327,34172300,34174245,34176216,34178162,34180136,34182081,34184059,34185996,34187978,34189914,34191900,34193837,34195825,34197778,34199684,34201604,34203506,34205409,34207312,34209223,34211125,34213060,34214954,34216865,34218781,34220679,34222592,34224502,34226406,34228310,34230241,34232097,34234023,34235930,34237757,34239677,34241581,34243420,34245321,34247246,34249084,34250975,34252910,34254744,34256625,34258571,34260415,34262277,34264231,34266071,34267918,34269877,34271732,34273554,34275514,34277353,34279172,34281066,34282846,34284690,34286584,34288341,34290205,34292097,34293843,34295718,34297606,34299367,34301246,34303118,34304903,34306793,34308632,34310421,34312318,34314133,34315962,34317851,34319655,34321506,34323414,34325232,34327110,34329013,34330816,34332709,34334555,34336426,34338340,34340169,34342040,34343945,34345749,34347642,34349499,34351360,34353269,34355100,34356957,34358877,34360727,34362613,34364506,34366353,34368240,34370133,34371976,34373860,34375753,34377596,34379475,34381368,34383210,34385087,34386982,34388830,34390705,34392597,34394445,34396321,34398211,34400058,34401931,34403829,34405672,34407558,34409467,34411298,34413195,34415107,34416942,34418848,34420757,34422596,34424514,34426418,34428266,34430180,34432073,34433918,34435839,34437710,34439567,34441493,34443356,34445215,34447135,34448996,34450876,34452795,34454718,34456647,34458564,34460471,34462384,34464285,34466218,34468137,34470050,34471965,34473916,34475831,34477740,34479653,34481557,34483477,34485417,34487400,34489371,34491375,34493373,34495355,34497332,34499328,34501323,34503307,34505277,34507260,34509169,34511136,34513017,34514950,34516853,34518771,34520681,34522601,34524415,34526357,34528288,34530158,34532085,34534046,34536018,34537977,34539949,34541920,34543845,34545837,34547767,34549745,34551684,34553654,34555589,34557548,34559494,34561453,34563369,34565311,34567151,34569135,34570971,34572935,34574788,34576707,34578610,34580485,34582401,34584252,34586204,34588033,34590025,34591859,34593819,34595644,34597521,34599365,34601218,34603102,34604918,34606852,34608640,34610540,34612410,34614246,34616110,34617914,34619824,34621624,34623556,34625371,34627246,34629100,34631146,34633190,34635219,34637238,34639250,34641247,34643274,34645293,34647311,34649343,34651375,34653419,34655454,34657504,34659519,34661517,34663364,34665358,34667372,34669414,34671461,34673516,34675530,34677567,34679602,34681604,34683624,34685652,34687701,34689729,34691762,34693810,34695846,34697896,34699944,34701970,34703946,34705909,34707915,34709920,34711943,34713990,34716032,34718029,34720047,34722035,34724020,34726009,34727998,34729983,34732013,34734048,34736068,34738071,34740081,34742086,34744078,34746071,34748063,34750031,34752016,34754045,34756088,34758103,34760129,34762141,34764152,34766128,34768141,34770134,34772099,34774079,34776094,34778135,34780155,34782205,34784258,34786289,34788284,34790309,34792312,34794319,34796295,34798321,34800358,34802410,34804452,34806508,34808557,34810601,34812622,34814642,34816665,34818691,34820736,34822791,34824794,34826805,34828780,34830770,34832736,34834750,34836747,34838723,34840742,34842732,34844689,34846698,34848673,34850611,34852564,34854539,34856526,34858529,34860516,34862528,34864527,34866434,34868384,34870311,34872236,34874040,34875966,34877977,34879968,34881926,34883935,34885899,34887912,34889886,34891882,34893865,34895827,34897695,34899595,34901526,34903517,34905485,34907382,34909317,34911244,34913230,34915171,34917091,34918938,34920833,34922817,34924813,34926718,34928572,34930518,34932495,34934445,34936319,34938195,34940075,34941922,34943856,34945818,34947758,34949704,34951642,34953483,34955367,34957221,34959120,34961091,34963000,34964974,34966928,34968801,34970691,34972593,34974467,34976425,34978403,34980330,34982206,34984019,34985860,34987764,34989708,34991673,34993536,34995406,34997213,34998866,35000817,35002726,35004623,35006539,35008451,35010312,35012181,35014117,35015947,35017846,35019751,35021598,35023495,35025343,35027149,35029034,35030991,35032962,35034879,35036785,35038656,35040501,35042351,35044242,35046081,35047927,35049861,35051825,35053797,35055715,35057644,35059473,35061359,35063301,35065226,35067265,35069291,35071301,35073252,35075219,35077231,35079207,35081221,35083191,35085142,35087083,35089133,35091130,35093108,35094868,35096840,35098845,35100856,35102849,35104759,35106734,35108756,35110753,35112743,35114698,35116686,35118680,35120703,35122722,35124691,35126503,35128484,35130466,35132445,35134454,35136442,35138457,35140505,35142519,35144509,35146511,35148408,35150423,35152419,35154401,35156386,35158423,35160444,35162434,35164348,35166112,35167893,35169784,35171793,35173802,35175752,35177776,35179768,35181748,35183697,35185682,35187637,35189598,35191468,35193424,35195376,35197351,35199300,35201306,35203282,35205309,35207296,35209302,35211235,35213188,35215179,35217171,35219136,35221000,35222929,35224873,35226838,35228696,35230601,35232551,35234500,35236373,35238308,35240307,35242273,35244247,35246254,35248273,35250282,35252271,35254281,35256189,35258109,35260086,35262015,35263765,35265674,35267632,35269575,35271547,35273470,35275397,35277431,35279412,35281417,35283397,35285363,35287343,35289356,35291356,35293318,35295323,35297254,35299211,35301157,35303095,35305067,35307015,35308980,35310959,35312952,35314962,35316992,35318977,35320948,35322924,35324943,35326887,35328872,35330849,35332827,35334751,35336748,35338680,35340622,35342617,35344594,35346589,35348576,35350523,35352507,35354527,35356531,35358475,35360448,35362372,35364412,35366368,35368364,35370351,35372344,35374365,35376329,35378311,35380331,35382321,35384284,35386303,35388233,35390270,35392198,35394157,35396138,35398088,35400085,35402087,35404063,35406020,35407921,35409861,35411852,35413782,35415736,35417721,35419684,35421604,35423558,35425533,35427546,35429539,35431476,35433429,35435405,35437341,35439338,35441251,35443195,35445132,35446983,35448870,35450825,35452781,35454668,35456561,35458489,35460398,35462368,35464310,35466233,35468232,35470192,35472146,35474143,35476114,35478059,35480091,35481882,35483862,35485801,35487824,35489841,35491828,35493840,35495892,35497940,35499809,35501824,35503792,35505831,35507855,35509881,35511921,35513959,35515976,35517909,35519920,35521902,35523946,35525987,35528011,35530040,35532023,35534064,35536032,35538070,35540061,35542098,35544141,35546164,35548218,35550255,35552300,35554254,35556276,35558250,35560293,35562331,35564349,35566396,35568452,35570476,35572458,35574491,35576449,35578483,35580530,35582558,35584606,35586652,35588686,35590615,35592561,35594482,35596353,35598283,35600280,35602240,35604223,35606233,35608232,35610261,35612289,35614137,35616133,35618087,35620105,35622087,35624082,35626021,35627811,35629771,35631724,35633685,35635691,35637683,35639641,35641453,35643441,35645380,35647079,35648967,35650730,35652388,35654027,35655647,35657196,35658993,35660346,35661867,35663412,35664778,35666390,35667674,35669190,35670639,35671805,35673320,35674479,35675888,35677162,35678506,35679823,35680995,35682388,35683483,35684449,35686005,35687447,35688588,35689847,35691233,35692478,35693445,35694712,35696083,35697183,35698815,35699932,35701336,35702481,35704079,35705233,35706548,35707973,35709479,35710697,35712253,35713759,35715201,35716817,35718193,35719730,35721063,35722568,35724099,35725277,35726924,35728066,35729499,35730618,35732198,35733385,35734796,35736140,35737128,35738410,35739889,35741309,35742398,35743696,35745098,35746344,35747317,35748628,35750016,35751235,35752733,35753851,35755190,35756312,35757970,35759180,35760669,35762139,35763482,35765025,35766463,35768017,35769467,35771027,35772578,35773800,35775243,35776743,35778114,35779416,35780958,35782222,35783545,35784706,35786323,35787533,35788962,35790268,35791206,35792687,35794088,35795438,35796550,35797847,35799404,35800408,35801439,35802749,35804112,35805345,35806761,35807938,35809326,35810461,35812095,35813323,35814830,35816328,35817644,35819212,35820592,35822123,35823630,35825060,35826630,35827876,35829370,35830869,35832025,35833483,35834892,35836246,35837625,35838784,35840354,35841531,35842952,35844272,35845106,35846719,35848031,35849311,35850512,35851732,35853332,35854159,35855396,35856764,35857932,35859423,35860474,35861832,35863110,35864515,35865805,35867063,35868475,35869966,35871199,35872844,35874317,35875784,35877351,35878640,35880274,35881584,35883107,35884637,35885870,35887528,35888660,35890061,35891276,35892744,35894073,35895415,35896804,35897892,35898982,35900496,35901962,35903092,35904336,35905748,35907139,35908073,35909367,35910784,35911968,35913545,35914620,35916006,35917047,35918693,35919931,35921336,35922781,35924162,35925588,35927013,35928577,35930034,35931605,35933112,35934423,35935845,35937324,35938793,35940012,35941638,35942859,35944246,35945368,35946966,35948112,35949589,35950872,35951758,35953201,35954566,35955976,35957063,35958408,35959989,35960924,35962026,35963384,35964661,35965919,35967382,35968578,35969935,35971099,35972700,35973946,35975443,35976946,35978303,35979788,35981200,35982781,35984318,35985863,35987422,35988679,35990217,35991776,35993080,35994170,35995793,35997023,35998355,35999470,36001053,36002256,36003602,36004915,36005834,36007097,36008546,36009970,36011053,36012407,36013964,36014897,36015982,36017349,36018581,36019733,36021158,36022327,36023689,36024835,36026482,36027627,36029034,36030563,36032003,36033469,36034971,36036531,36038070,36039604,36041228,36042517,36044010,36045568,36046897,36047970,36049720,36050895,36052300,36053447,36055030,36056208,36057478,36058875,36059967,36060998,36062538,36064008,36065149,36066414,36067821,36069081,36070030,36071334,36072658,36073789,36075352,36076422,36077831,36079079,36080750,36081909,36083151,36084674,36086217,36087577,36089248,36090691,36092185,36093763,36095160,36096854,36098119,36099648,36101155,36102333,36103968,36105197,36106590,36107886,36109254,36110693,36111961,36113424,36114568,36115498,36117169,36118485,36119691,36120901,36122099,36123758,36124562,36125823,36127291,36128526,36130163,36131250,36132589,36133792,36135290,36136684,36138005,36139433,36140929,36142167,36143863,36145373,36146894,36148485,36149878,36151577,36152928,36154499,36156003,36157186,36158837,36160111,36161539,36162856,36164192,36165652,36166935,36168426,36169612,36170544,36172182,36173493,36174714,36176001,36177189,36178835,36179703,36180909,36182382,36183797,36185293,36186518,36187830,36189216,36190524,36192169,36193406,36194918,36196499,36197768,36199411,36200988,36202608,36204185,36205683,36207369,36208687,36209922,36211176,36212501,36213928,36215575,36217145,36218595,36219868,36221116,36222700,36224202,36225593,36227389,36228903,36230236,36231445,36232926,36234392,36235798,36237557,36239045,36240500,36241881,36243145,36244635,36246020,36247407,36249116,36250650,36252256,36253704,36254937,36256343,36257695,36258909,36260385,36262085,36263314,36264453,36265749,36267048,36268786,36270184,36271470,36272929,36274543,36275777,36277482,36279164,36281036,36282968,36284825,36286711,36288628,36290397,36292146,36293979,36295853,36297610,36299455,36300978,36302227,36303977,36305663,36307457,36309137,36310862,36312513,36313979,36314641,36316081,36318092,36320072,36321888,36323432,36324493,36325923,36327767,36329442,36331231,36332981,36334852,36336594,36338253,36339879,36341778,36343436,36345248,36347133,36349028,36350871,36352555,36354293,36356229,36358003,36359992,36361746,36363693,36365647,36367595,36369503,36371394,36373120,36374611,36376517,36378341,36380220,36382122,36383914,36385580,36387335,36388876,36390604,36392344,36394018,36395605,36397290,36398855,36400273,36401995,36403806,36405827,36407840,36409795,36411720,36413719,36415742,36417729,36419686,36421693,36423736,36425750,36427699,36429704,36431758,36433723,36435718,36437642,36439596,36441543,36443552,36445495,36447465,36449446,36451474,36453488,36455490,36457502,36459522,36461541,36463554,36465530,36467378,36469371,36471426,36473474,36475503,36477497,36479396,36481303,36483010,36484927,36486841,36488771,36490674,36492602,36494508,36496414,36498312,36500190,36502104,36504029,36505887,36507807,36509770,36511689,36513600,36515507,36517384,36519280,36520617,36522370,36524325,36526051,36527493,36528975,36530220,36531827,36533520,36535152,36536764,36538615,36540149,36541737,36543335,36544929,36546408,36547953,36549563,36551242,36552798,36554054,36555381,36557061,36558634,36559878,36561329,36563298,36565128,36566883,36568643,36570427,36572105,36573941,36575809,36577532,36579190,36580859,36582601,36584196,36585815,36587684,36589375,36590682,36592180,36593874,36595321,36596771,36598014,36599435,36601189,36602691,36603914,36605081,36606581,36608210,36609428,36611076,36613069,36615078,36617041,36619029,36621006,36622908,36624722,36626267,36628153,36630032,36631915,36633491,36635328,36637306,36639171,36641061,36642969,36644707,36646463,36648265,36649982,36651854,36653349,36654779,36656533,36657985,36659339,36660947,36662543,36663959,36665726,36667124,36668886,36670283,36671990,36673590,36675463,36676952,36678722,36680229,36681994,36683457,36684963,36686549,36688036,36689913,36691186,36692478,36693793,36695637,36697492,36699282,36701007,36702348,36703794,36705494,36707216,36708798,36710236,36711884,36713552,36715161,36716781,36718371,36719894,36721599,36723164,36724496,36726073,36727499,36729192,36730836,36732198,36733812,36735307,36736962,36738609,36740089,36741383,36742959,36744517,36745684,36747025,36748388,36749596,36750960,36752278,36753822,36755019,36756296,36757736,36759068,36760469,36761793,36763164,36764509,36766094,36767693,36769276,36771202,36772700,36774160,36775996,36777859,36779713,36781625,36783202,36785192,36786961,36788464,36790458,36792089,36794088,36795301,36797159,36799053,36800501,36802217,36803923,36805612,36807250,36808812,36810301,36811919,36813435,36814981,36816434,36818043,36819611,36821153,36822693,36824160,36825742,36827285,36828807,36830230,36831833,36833321,36835119,36836998,36838902,36840779,36842620,36844331,36845834,36847299,36848902,36850447,36852397,36854346,36856196,36858087,36859975,36861836,36863767,36865719,36866617,36867110,36867741,36868214,36868918,36869519,36870050,36870653,36871372,36873302,36875275,36877260,36879219,36881146,36883112,36885087,36887050,36888991,36890650,36892296,36893893,36895551,36897297,36898893,36900603,36902172,36903932,36905480,36907051,36908660,36910141,36911644,36913150,36914529,36915983,36917350,36919000,36920489,36921729,36922880,36924342,36925694,36927270,36928744,36930163,36931559,36933128,36934586,36936188,36937621,36939016,36940401,36941798,36943240,36944646,36946043,36947546,36949358,36951122,36952954,36954838,36956722,36958597,36960383,36962129,36963941,36965574,36967300,36969085,36970915,36972740,36974472,36976199,36977880,36978869,36979693,36980470,36981319,36982881,36984585,36986213,36987852,36989547,36991143,36992749,36994386,36996066,36997823,36999498,37001216,37002870,37004526,37006379,37008176,37010050,37011313,37013106,37014624,37016406,37017897,37019679,37021131,37022859,37024787,37026520,37028346,37030185,37032054,37033662,37035500,37037358,37039041,37040103,37041162,37042132,37043214,37044267,37045361,37046311,37047386,37049059,37050603,37052185,37053702,37055298,37056864,37058427,37059947,37061611,37063034,37064627,37066197,37067833,37069049,37070085,37071130,37072196,37073557,37074980,37076622,37078412,37079998,37081395,37082488,37083945,37085475,37086589,37087898,37089410,37090938,37092412,37094037,37095663,37097200,37098767,37100398,37101880,37103261,37104093,37104934,37105967,37106552,37107539,37108276,37109370,37110763,37112227,37112894,37113461,37114328,37114898,37115741,37116294,37117089,37117808,37118521,37119353,37119853,37120709,37121453,37122383,37122890,37123484,37124251,37124916,37125780,37126278,37127148,37127879,37128813,37129247,37129696,37130598,37131224,37131951,37132233,37132846,37133044,37133340,37133785,37133962,37134530,37134725,37135348,37135536,37136068,37136225,37136388,37136838,37136878,37137455,37137609,37138181,37138387,37138715,37140206,37141640,37143016,37144210,37145462,37146616,37147964,37148962,37149963,37150942,37151933,37152895,37153892,37154905,37155909,37157417,37158798,37160204,37161667,37163150,37164600,37165994,37167340,37168925,37170368,37171846,37173382,37174974,37176595,37178119,37179623,37181132,37182697,37184082,37185523,37186919,37188352,37189805,37191232,37192647,37194072,37195459,37196856,37198218,37199617,37200663,37201593,37202549,37203480,37204598,37205509,37206439,37207393,37208450,37209389,37210327,37211206,37212268,37213669,37215091,37216504,37217885,37218994,37219906,37220859,37221790,37223302,37224894,37226477,37228030,37229556,37231077,37232581,37234196,37235814,37237352,37238688,37240040,37241360,37242581,37243891,37245237,37246562,37248154,37249692,37251242,37252572,37254046,37255420,37256705,37257943,37259515,37261156,37262860,37264430,37266025,37267572,37269321,37271027,37272829,37274456,37275695,37276903,37278368,37279763,37281244,37282460,37283811,37285183,37286606,37288251,37289678,37291316,37292740,37294220,37295869,37297559,37299212,37300874,37302462,37304148,37305788,37307419,37309165,37310788,37312476,37314135,37315704,37317320,37318984,37320615,37322147,37323890,37325562,37327160,37328847,37330339,37331973,37333596,37335229,37336890,37338520,37340227,37341914,37343558,37345149,37346812,37348475,37350019,37351842,37353470,37355103,37356727,37358530,37360246,37361870,37363507,37365156,37367006,37368681,37370352,37372009,37373799,37375482,37377119,37378816,37380460,37381614,37382571,37383521,37384475,37385906,37387401,37388952,37390420,37392025,37393323,37394649,37396020,37397354,37398571,37399703,37400961,37402207,37403581,37404685,37405622,37406583,37408058,37409265,37410448,37411523,37412698,37413846,37414714,37415713,37416716,37418357,37419899,37421426,37422977,37424481,37425998,37427506,37429050,37430728,37432133,37433521,37434905,37436293,37437694,37439066,37440411,37441810,37443537,37445089,37446626,37448183,37449737,37451282,37452819,37454342,37456033,37457659,37459280,37460911,37462551,37464167,37465784,37467392,37469046,37470798,37472256,37473675,37475075,37476517,37477990,37479422,37480825,37482343,37484172,37485930,37487653,37489344,37491081,37492816,37494517,37496240,37498121,37499891,37501578,37503258,37504978,37506704,37508383,37510045,37511753,37513011,37513999,37515250,37516293,37517413,37518511,37519750,37520863,37522014,37523068,37524053,37524715,37525361,37526095,37526735,37528454,37530069,37531808,37533498,37535221,37536896,37538608,37540285,37542094,37543873,37545598,37547277,37548905,37550607,37552290,37554018,37555717,37557595,37559322,37561091,37562834,37564606,37566358,37568127,37569918,37571681,37573497,37575226,37576893,37578511,37580197,37581856,37583567,37585227,37586920,37588359,37589855,37591275,37592907,37593915,37594941,37595955,37597007,37598868,37600687,37602489,37604314,37605987,37607830,37609627,37611459,37613248,37614628,37615779,37617001,37618637,37620054,37621049,37622096,37623461,37625185,37626790,37628391,37629973,37631523,37633146,37634766,37636363,37638132,37639639,37641085,37642539,37643963,37645383,37646842,37648281,37649761,37651186,37652976,37654333,37656142,37657370,37658869,37660313,37661804,37663258,37664928,37666571,37668169,37669833,37671360,37672996,37674588,37676167,37677821,37679296,37680736,37682161,37683506,37685052,37686517,37687957,37689350,37691203,37693013,37694841,37696691,37698363,37700199,37701998,37703833,37705544,37707245,37708880,37710486,37712137,37713787,37715428,37717051,37718780,37720350,37721824,37723267,37724708,37726145,37727657,37729098,37730569,37732146,37734005,37735797,37737694,37739576,37741315,37743138,37744959,37746833,37748494,37750093,37751723,37753341,37754878,37756514,37758156,37759747,37761478,37763040,37764495,37765930,37767450,37768873,37770333,37771768,37773234,37774830,37776650,37778469,37780323,37782003,37783881,37785700,37787541,37789357,37790581,37791713,37793310,37793980,37794673,37795824,37796536,37797659,37798343,37799013,37800570,37801558,37802201,37802937,37804177,37805409,37806401,37807673,37809059,37810353,37811023,37812177,37813375,37814607,37815896,37817228,37818964,37820295,37821252,37822194,37823907,37825509,37827140,37828839,37830489,37832195,37833761,37835538,37837020,37838468,37839744,37840747,37841935,37843519,37844986,37846022,37847004,37848018,37849118,37850368,37851473,37852530,37853625,37855000,37856932,37858968,37861022,37863032,37865076,37867090,37869115,37871099,37873130,37875160,37877184,37879205,37881193,37883211,37885216,37887203,37889187,37891209,37893240,37895257,37897255,37899286,37901288,37903292,37905236,37907253,37909284,37911318,37913316,37915305,37917325,37919325,37921315,37923300,37925348,37927237,37929144,37931046,37932935,37934838,37936739,37938569,37940441,37942326,37944243,37946115,37948001,37949839,37951708,37953540,37955438,37957377,37959049,37960721,37962387,37964071,37965729,37967384,37969030,37970631,37972432,37974093,37975775,37977436,37979072,37980734,37982377,37983979,37985688,37987185,37988631,37990063,37991487,37992920,37994357,37995769,37997163,37998746,38000239,38001733,38003268,38004795,38006113,38007636,38009187,38010800,38012126,38013759,38015215,38016902,38018327,38019799,38021312,38022985,38024335,38025776,38027227,38028743,38030716,38032355,38033896,38035568,38037152,38038746,38040258,38041897,38043603,38045132,38046709,38048333,38050034,38051756,38053368,38054965,38056493,38058147,38059693,38061267,38062848,38064377,38065888,38067473,38069000,38070463,38072000,38073470,38075229,38076755,38078413,38080048,38081693,38083329,38084976,38086783,38088451,38089936,38091681,38093616,38095449,38097131,38098881,38100788,38102724,38104668,38106609,38108574,38110522,38112437,38114352,38116266,38118099,38119931,38121809,38123805,38125652,38127503,38129352,38131169,38132958,38134729,38136515,38138290,38140312,38142269,38144239,38146202,38148137,38150040,38151956,38153842,38155829,38157724,38159598,38161502,38163357,38165173,38166996,38168811,38170614,38172642,38174613,38176602,38178562,38180503,38182455,38184391,38186296,38188285,38190168,38191980,38193786,38195531,38197307,38199079,38200834,38202602,38204531,38206376,38208223,38209999,38211812,38213637,38215458,38217255,38219017,38220681,38222121,38223592,38225026,38226420,38227879,38229289,38230721,38232352,38234329,38236255,38238217,38240171,38242109,38244005,38245913,38247817,38249722,38251580,38253510,38255498,38257439,38259400,38261310,38263229,38265125,38267055,38268937,38270886,38272541,38274036,38275566,38277164,38278731,38280337,38281901,38283404,38285280,38287079,38288900,38290689,38292472,38294215,38295951,38297654,38299401,38300917,38302240,38303521,38304821,38306232,38307513,38308867,38310225,38311813,38313274,38314748,38316260,38317837,38319407,38320889,38322361,38323815,38325496,38327164,38328642,38330344,38332025,38333563,38335182,38336608,38337959,38339304,38340618,38341868,38343143,38344319,38345619,38347374,38349256,38351122,38352999,38354896,38356789,38358655,38360533,38362443,38364388,38366285,38368160,38370027,38371916,38373803,38375695,38377558,38379445,38380863,38382278,38383639,38385038,38386500,38387971,38389457,38390905,38392707,38394373,38396067,38397832,38399495,38401105,38402689,38404229,38405807,38407320,38408876,38410462,38412074,38413801,38415510,38417208,38418859,38420535,38421986,38423461,38424934,38426381,38427721,38429137,38430561,38432138,38433624,38435143,38436639,38438196,38439475,38440985,38442501,38443966,38445633,38447124,38448655,38450147,38451370,38452869,38454377,38455889,38457468,38459439,38461391,38463312,38464970,38466376,38467783,38469202,38470035,38471444,38472819,38474215,38475807,38477013,38478195,38479282,38480418,38481569,38482634,38483807,38485005,38486519,38487936,38489386,38491337,38493220,38495117,38497032,38498937,38500845,38502747,38504687,38506362,38507964,38509469,38510988,38512427,38513743,38514661,38515583,38516418,38517325,38518148,38519114,38519827,38520672,38521599,38522610,38523369,38524323,38525209,38526311,38527177,38528226,38529514,38530790,38532132,38533431,38534171,38534538,38535145,38535710,38536019,38536332,38536778,38537537,38538895,38539731,38540645,38541545,38542602,38543836,38544683,38546015,38546713,38546916,38547375,38547669,38547965,38549400,38550825,38552325,38554038,38555875,38557609,38559422,38561248,38563063,38564855,38566613,38568406,38570147,38571780,38573429,38574989,38576603,38578210,38579859,38581436,38583116,38584468,38585757,38587093,38588412,38590023,38591717,38593380,38595046,38596732,38598368,38600019,38601713,38603394,38605079,38606749,38608425,38609394,38610960,38612793,38614656,38616424,38618209,38620007,38621873,38623667,38625431,38627077,38628528,38630015,38631461,38633125,38634982,38636823,38638692,38640535,38642413,38644291,38646142,38648023,38649872,38650984,38652741,38653901,38654979,38656245,38657297,38658538,38660578,38662582,38664558,38666477,38668469,38670413,38672309,38674210,38676097,38678069,38680015,38681965,38683889,38685803,38687695,38689634,38691645,38693389,38695035,38696798,38698594,38700401,38702211,38703870,38705495,38707406,38709461,38711510,38713562,38715603,38717649,38719689,38721719,38723768,38725822,38727877,38729916,38731961,38734016,38736058,38738092,38740142,38742199,38744079,38746001,38747856,38749705,38751526,38753390,38755214,38757094,38759046,38760949,38762828,38764668,38766518,38768360,38770212,38772056,38773952,38775286,38776667,38777497,38778307,38779041,38779722,38780413,38781039,38781832,38782689,38783427,38783824,38784550,38785383,38786226,38786785,38787248,38788009,38788829,38789765,38790185,38790708,38791505,38792346,38793239,38793848,38794359,38795622,38796703,38797835,38798255,38799006,38800190,38801261,38802311,38802704,38803688,38804762,38805834,38806652,38807059,38808155,38809299,38810421,38810987,38812424,38813769,38815349,38816691,38818472,38819780,38820783,38821913,38823078,38824205,38825353,38826445,38827548,38828642,38829804,38830905,38832111,38833306,38834380,38835422,38836501,38837756,38839081,38840199,38841284,38842490,38843536,38844591,38845668,38846702,38847718,38848735,38849652,38850689,38851762,38852600,38853426,38854247,38855124,38856384,38856818,38857382,38857869,38858427,38858968,38859446,38859996,38860532,38861000,38861514,38861990,38862483,38863001,38863533,38864115,38864640,38866161,38867635,38869116,38870612,38872156,38873647,38875168,38876693,38878177,38879266,38880263,38881270,38882799,38884306,38885657,38887051,38888359,38889754,38891250,38892997,38894632,38896302,38897950,38899548,38901168,38902844,38904483,38906164,38907779,38909265,38910742,38912284,38913735,38915264,38916778,38918255,38919771,38920809,38921957,38923186,38924542,38925853,38927156,38928436,38929527,38930972,38932415,38933795,38935225,38936777,38938286,38939840,38941393,38943148,38944416,38945429,38946552,38947733,38948842,38949998,38951063,38952151,38953253,38954436,38955537,38956740,38957947,38959009,38960065,38961158,38962530,38963823,38964943,38966037,38967230,38968308,38969357,38970447,38971476,38972487,38973503,38974410,38975425,38976484,38977328,38978155,38978987,38979942,38981085,38981510,38982094,38982601,38983137,38983695,38984196,38984723,38985251,38985740,38986271,38986768,38987254,38987755,38988279,38988855,38989364,38991205,38993016,38994815,38996606,38998415,39000193,39001930,39003626,39005006,39006403,39007800,39009200,39010885,39012099,39013319,39014544,39016089,39017546,39018842,39020151,39021659,39022894,39023938,39024930,39025938,39027425,39029119,39030552,39032226,39033867,39035253,39036430,39037616,39038884,39040344,39041780,39043442,39045111,39046725,39048408,39050108,39051690,39053354,39054996,39056671,39057859,39059234,39060632,39062202,39064081,39065809,39067763,39069515,39071194,39072855,39074567,39076288,39077905,39079641,39081446,39083111,39084683,39086188,39087741,39089284,39090807,39092351,39093923,39095126,39096882,39098506,39100121,39101711,39103285,39104834,39106416,39108046,39109809,39111284,39113046,39114827,39116318,39117751,39119516,39121293,39122836,39124535,39125526,39126651,39127798,39128925,39130072,39131200,39132269,39133397,39134530,39135685,39136826,39138043,39139156,39140237,39141278,39142366,39143592,39144672,39145862,39147042,39147782,39148570,39149726,39150867,39151940,39152922,39153938,39155199,39156305,39157177,39157862,39158935,39160154,39161241,39162216,39163149,39164366,39165475,39166435,39166995,39168148,39169344,39170506,39171501,39172371,39173596,39174734,39175695,39176152,39177314,39178528,39179723,39180667,39181483,39182640,39183754,39184811,39185226,39186430,39187608,39188747,39189720,39191002,39192137,39193229,39194421,39195469,39196521,39197651,39198689,39199745,39200760,39201649,39202655,39203694,39204540,39205363,39206185,39207150,39208007,39209154,39210395,39211563,39211987,39213040,39214275,39215432,39216280,39217504,39218613,39219831,39221020,39222266,39223398,39224524,39225761,39226958,39228222,39229353,39230469,39231703,39232886,39234218,39235333,39236518,39237716,39238891,39240194,39241360,39242351,39243391,39244484,39245836,39246947,39247952,39248957,39250188,39251470,39252516,39253490,39254568,39255886,39257131,39258193,39259092,39260211,39261760,39262319,39262850,39263357,39264697,39266244,39268010,39269865,39271731,39273551,39275110,39276477,39276957,39277473,39277978,39278516,39279068,39280080,39281331,39282369,39283673,39285168,39286325,39287482,39288992,39290281,39291320,39292597,39294109,39295299,39296389,39297858,39299593,39301454,39303205,39304942,39306836,39308497,39310318,39312207,39313969,39315741,39317551,39319377,39321089,39322949,39324828,39326549,39328454,39330173,39331931,39333814,39335559,39337302,39339114,39340893,39342703,39344524,39346349,39348026,39349936,39351654,39353500,39355284,39357044,39358941,39360709,39362539,39364340,39366138,39367887,39369703,39371596,39373307,39375049,39376937,39378642,39380546,39382313,39384066,39385953,39387711,39389431,39391228,39393129,39394865,39396673,39398523,39400214,39402120,39403795,39405635,39407416,39409216,39410968,39412759,39414584,39416362,39418188,39420020,39421770,39423669,39425396,39427142,39429042,39430748,39432594,39434376,39436132,39437430,39438632,39439847,39441058,39442332,39443498,39444727,39445836,39446820,39447441,39448220,39449093,39449787,39450190,39450919,39451738,39452603,39453157,39453623,39454404,39455221,39456133,39456609,39457097,39457918,39458785,39459631,39460361,39461734,39462724,39463881,39465002,39466133,39467276,39468360,39469455,39470575,39471763,39472887,39474068,39475273,39476342,39477393,39478425,39479638,39481088,39482576,39484136,39485270,39486382,39487579,39488648,39489707,39490799,39491835,39492887,39493913,39494812,39495808,39496857,39497736,39498622,39499387,39500252,39501739,39503141,39504696,39505783,39506208,39506780,39507306,39507845,39508420,39508913,39509448,39509974,39510478,39511005,39511529,39512014,39512514,39513037,39513610,39514145,39515873,39517531,39519201,39520794,39522503,39524177,39525801,39527458,39529167,39530855,39532620,39534277,39535898,39537502,39539192,39540768,39541606,39542132,39543235,39543684,39544121,39544434,39545282,39546431,39548457,39550501,39552518,39554535,39556550,39558547,39560542,39562528,39564563,39566600,39568617,39570642,39572662,39574670,39576687,39578649,39580660,39582022,39583384,39585001,39586512,39587796,39589280,39590442,39591561,39592685,39593806,39594931,39596053,39597176,39597948,39598021,39599009,39601019,39603067,39604933,39606806,39608707,39610547,39612405,39614288,39616198,39618050,39620007,39621921,39623852,39625836,39627697,39629595,39631515,39633424,39635293,39637102,39639091,39640985,39642874,39644814,39646712,39648530,39650296,39652112,39653872,39655798,39657698,39659576,39661453,39663321,39665216,39667105,39669018,39670863,39672855,39674606,39676477,39678343,39680263,39682106,39683705,39685542,39687016,39688552,39690158,39691790,39693385,39694915,39696383,39697957,39699561,39701195,39702837,39704359,39705877,39707462,39709036,39710564,39712457,39714058,39715680,39717173,39718745,39720705,39722508,39724283,39726048,39727897,39729771,39731616,39733468,39735389,39736778,39738074,39739380,39740729,39742018,39743395,39744708,39745957,39747576,39749043,39750486,39751924,39753393,39754886,39756352,39757790,39759297,39760903,39762361,39763804,39765267,39766764,39768253,39769710,39771149,39772750,39774228,39775686,39777142,39778608,39780081,39781526,39782973,39784401,39786043,39787466,39788874,39790291,39791786,39793246,39794665,39796064,39797656,39799061,39800480,39801888,39803325,39804805,39806239,39807667,39809072,39810690,39812106,39813484,39814915,39816407,39817857,39819257,39820648,39822226,39823655,39825012,39826397,39827874,39829342,39830749,39832193,39833595,39835214,39836643,39838020,39839494,39840981,39842464,39843929,39845340,39846857,39848423,39849887,39851312,39852787,39854267,39855778,39857226,39858618,39860229,39861576,39862897,39864274,39865665,39867007,39868339,39869656,39870939,39872493,39873846,39875139,39876541,39877903,39879262,39880565,39881815,39883361,39884707,39885973,39887302,39888678,39889948,39891275,39892618,39893856,39895513,39896948,39898377,39899834,39901309,39902827,39904282,39905684,39907304,39908728,39910107,39911550,39913041,39914511,39916006,39917422,39918815,39920405,39921789,39923138,39924573,39926020,39927473,39928890,39930281,39931827,39933333,39934712,39936062,39937541,39939002,39940444,39941847,39943249,39944854,39946254,39947655,39949102,39950539,39952025,39953447,39954860,39956249,39957898,39959312,39960721,39962167,39963666,39965118,39966544,39967952,39969676,39971317,39973151,39974905,39976682,39978477,39980131,39981931,39983750,39985599,39987406,39989145,39990748,39992580,39994318,39996129,39997816,39999653,40001444,40003320,40005188,40006996,40008952,40010855,40012681,40014586,40016506,40018339,40020160,40021941,40023787,40025573,40027361,40029124,40031025,40032829,40034613,40036374,40038121,40039892,40041609,40043329,40045076,40046971,40048781,40050582,40052310,40054094,40055848,40057605,40059325,40061127,40063087,40064934,40066767,40068575,40070377,40072198,40074013,40075826,40077739,40079463,40081202,40082970,40084686,40086419,40088143,40089925,40091685,40093533,40095433,40097294,40099140,40100957,40102773,40104515,40106304,40108082,40109961,40111614,40113348,40115105,40116597,40118338,40120085,40121752,40123508,40125301,40127054,40128786,40130557,40132174,40133851,40135441,40137265,40139084,40140810,40142500,40144106,40145742,40147436,40149124,40150798,40152464,40154238,40155918,40157559,40159191,40160862,40162557,40164238,40165931,40167603,40169463,40171269,40172977,40174767,40176596,40178397,40180202,40181998,40183855,40185612,40187351,40189063,40190817,40192614,40194369,40196187,40197909,40199763,40201575,40203476,40205351,40207224,40209130,40211102,40212921,40214788,40216472,40218141,40219899,40221614,40223347,40225103,40226856,40228599,40230372,40232054,40233776,40235597,40237383,40239168,40241044,40242777,40244551,40246074,40247538,40249053,40250601,40252111,40253639,40255170,40256650,40258492,40260482,40262423,40264373,40266381,40268346,40270296,40272278,40274167,40276109,40278096,40280122,40282109,40284029,40286000,40287996,40290001,40291921,40293183,40293223,40293261,40293301,40293493,40293628,40293668,40293706,40293746,40295341,40297122,40298960,40300796,40302632,40304467,40306267,40308059,40309982,40311436,40312898,40314338,40315762,40317182,40318601,40320045,40321502,40323323,40325173,40326985,40328739,40330525,40332279,40334094,40335850,40337690,40338392,40338756,40338796,40338834,40338874,40339193,40339231,40339271,40339309,40339763,40340957,40342269,40344045,40345764,40347505,40349277,40351013,40352722,40354446,40356203,40357960,40359257,40360578,40361985,40363512,40364084,40365496,40367035,40368374,40369463,40371046,40372821,40374424,40375782,40375822,40375860,40375900,40376094,40376226,40376266,40376304,40376344,40377463,40378701,40379920,40381061,40382392,40384084,40385700,40387346,40389043,40390707,40392349,40394023,40395652,40396493,40396533,40396571,40396611,40397372,40398275,40398345,40398841,40400559,40402397,40404395,40406052,40407681,40409310,40410955,40412601,40414278,40416007,40417718,40419439,40421214,40422931,40424697,40426419,40428113,40429771,40431439,40433086,40433956,40435112,40435151,40437073,40438868,40440582,40442295,40444071,40445818,40447549,40449265,40451084,40452985,40454809,40456697,40458588,40460426,40462281,40464102,40465911,40467847,40469632,40471207,40472937,40474626,40476371,40478145,40479950,40481664,40483512,40485377,40487310,40489142,40491062,40492872,40494830,40496611,40498596,40500188,40501381,40502562,40503628,40504649,40506036,40507444,40508792,40510175,40511586,40512917,40514084,40515174,40516293,40517414,40518610,40519903,40521220,40521934,40522827,40523793,40524961,40526556,40528131,40528973,40529624,40530400,40531378,40532980,40534667,40536387,40537592,40538591,40539956,40541673,40542918,40544041,40544797,40545759,40546634,40547213,40547897,40548955,40550269,40551555,40552706,40554044,40555415,40556783,40558122,40559353,40561096,40563016,40564919,40566828,40568661,40570514,40572423,40574280,40576180,40578065,40579991,40581907,40583850,40585690,40587559,40589485,40591259,40592211,40593182,40594102,40595110,40597072,40599032,40600636,40602615,40604133,40605284,40606489,40607692,40609330,40611330,40613369,40615410,40617431,40619295,40621214,40623107,40624947,40626988,40629034,40631085,40633111,40635054,40636871,40638606,40640478,40642287,40644105,40645846,40647652,40649425,40651384,40653332,40655281,40657187,40659153,40660417,40661682,40663066,40664790,40665996,40667246,40668489,40669896,40671087,40672318,40673561,40674854,40676666,40677814,40679045,40680479,40681891,40682942,40683687,40684680,40686221,40687660,40688404,40689287,40690983,40692658,40693474,40694265,40695747,40697296,40698584,40699967,40701391,40703357,40705112,40706874,40708694,40710498,40712264,40714087,40715962,40717753,40719504,40721164,40722837,40724497,40726303,40728053,40729858,40731663,40733443,40734897,40736270,40737721,40739242,40740768,40742173,40743587,40745060,40746678,40748182,40749612,40751112,40752745,40754272,40755735,40757237,40758934,40760910,40762899,40764828,40766752,40768771,40770773,40772734,40774736,40776677,40778449,40780216,40781956,40783787,40785450,40787012,40788605,40790241,40792201,40794087,40795886,40797787,40799653,40801468,40803268,40805082,40807036,40808930,40810776,40812648,40814582,40816373,40818181,40819959,40821783,40823471,40825013,40826524,40828115,40829314,40830572,40831814,40833552,40834677,40835926,40837129,40838507,40840011,40841127,40842366,40843968,40845799,40847576,40849334,40851102,40853031,40854817,40856591,40858357,40860236,40862053,40863898,40865720,40867517,40868512,40869390,40870206,40870970,40872153,40873315,40874490,40875642,40876924,40878097,40879305,40880465,40881807,40883067,40884456,40885800,40887112,40888947,40890789,40892647,40894517,40896408,40898235,40900089,40901941,40903860,40905750,40907671,40909589,40911476,40913423,40915332,40917268,40919219,40921071,40922898,40924774,40926555,40928334,40930179,40931908,40933537,40935246,40936837,40938760,40940553,40942399,40944316,40946185,40948025,40949934,40951681,40953159,40954569,40956017,40957583,40959064,40960748,40962517,40964020,40965610,40967315,40968947,40970647,40972350,40974142,40975867,40977640,40979483,40981466,40983523,40985576,40987446,40989453,40991424,40993395,40995321,40997343,40999297,41001238,41003117,41004717,41005832,41007257,41008512,41009835,41011595,41013386,41015121,41016863,41018505,41019981,41021547,41023139,41024882,41026665,41028451,41030241,41032046,41033859,41035705,41037500,41039308,41040998,41042683,41044392,41046029,41047687,41049463,41051287,41053013,41054526,41055515,41056644,41057559,41059078,41060124,41061053,41061924,41063040,41064254,41065310,41066405,41067380,41068418,41069000,41069506,41070026,41070733,41071426,41072171,41072897,41073892,41074776,41075986,41077167,41078137,41079468,41080813,41082254,41083613,41084971,41086415,41087869,41089576,41091058,41092349,41093923,41095575,41096888,41098529,41100232,41101834,41103497,41104335,41104569,41104803,41105019,41105816,41106298,41106773,41107266,41108164,41110214,41112237,41114290,41116324,41118345,41120385,41122425,41124452,41126483,41128448,41130373,41132339,41134239,41136142,41138067,41139983,41141878,41143294,41144676,41146086,41147556,41148901,41150021,41151195,41152300,41153554,41155018,41156368,41157907,41159370,41161241,41163063,41164902,41166781,41168658,41170478,41172269,41174073,41175957,41177723,41179465,41181235,41183021,41184819,41186507,41188258,41189941,41191352,41192796,41194302,41195752,41197188,41198644,41200186,41201673,41203262,41205146,41207029,41208885,41210791,41212006,41213253,41214450,41215733,41217602,41219423,41221203,41223007,41224668,41226094,41227495,41228992,41230573,41232612,41234639,41236674,41238725,41240732,41242729,41244702,41246695,41248435,41249945,41251449,41252917,41254640,41256330,41257988,41259669,41261425,41263418,41265415,41267397,41269400,41271210,41272930,41274663,41276390,41278367,41280419,41282468,41284525,41286466,41287760,41289009,41289695,41290231,41290764,41291303,41292286,41293708,41295133,41296557,41297640,41298924,41300492,41302074,41303345,41304728,41306276,41307842,41309300,41310781,41312341,41314119,41315750,41317673,41319503,41320796,41322006,41323341,41324600,41325773,41326704,41327733,41328691,41330009,41331010,41331955,41332891,41333785,41335514,41337487,41339432,41341405,41343379,41345412,41347412,41349392,41351397,41353205,41354684,41356218,41357832,41359632,41361271,41362978,41364616,41366409,41368007,41369491,41371110,41372810,41374500,41376182,41377902,41379514,41381092,41382748,41384399,41385868,41387365,41388892,41390500,41391999,41393592,41395476,41397387,41399236,41401083,41402977,41404858,41406736,41408601,41410473,41411963,41413428,41414900,41416815,41418774,41420756,41422761,41424765,41426585,41428378,41430179,41431976,41433829,41435729,41437637,41439550,41441221,41442618,41444097,41445479,41446919,41448368,41449900,41451362,41452779,41454342,41456027,41457728,41459370,41460913,41462452,41464027,41465573,41467210,41468946,41470566,41472326,41474095,41475728,41477486,41479152,41480897,41482560,41484234,41485753,41487457,41489093,41490777,41492285,41493968,41495710,41497140,41498723,41500285,41501826,41503332,41504879,41506497,41508224,41509702,41511203,41512763,41514280,41515781,41517236,41518817,41520527,41521991,41523316,41524524,41526053,41527548,41529163,41530913,41532353,41534024,41535499,41537075,41538850,41540565,41542122,41543769,41545180,41546404,41547556,41548845,41550162,41551527,41552743,41554113,41555848,41557201,41558556,41559929,41561143,41562315,41563426,41564719,41565918,41567296,41568753,41570139,41571492,41573092,41574436,41575649,41577022,41578898,41580610,41582362,41583911,41585180,41586179,41587251,41588101,41589063,41590151,41591317,41592626,41593882,41595478,41597082,41598661,41600374,41602301,41603396,41604616,41605595,41606588,41607406,41608072,41609292,41610403,41611810,41613000,41614281,41615549,41616936,41618519,41620260,41622053,41624053,41625726,41627511,41629307,41630912,41632193,41633451,41634653,41635965,41637244,41638582,41639898,41641124,41642356,41643665,41644940,41646170,41647850,41649463,41651157,41652831,41654346,41655756,41657318,41659088,41660658,41662293,41663514,41664703,41665930,41667188,41668479,41669742,41671214,41672785,41674418,41675822,41677136,41678504,41679738,41680834,41682041,41683348,41684833,41686527,41688228,41689886,41691458,41692850,41694327,41695684,41697193,41698831,41700424,41701709,41702978,41704188,41705430,41706601,41707872,41709416,41711157,41712807,41714565,41716148,41717697,41719407,41721046,41722510,41724191,41725824,41726136,41726409,41728031,41729683,41730006,41730273,41731835,41733432,41733778,41734045,41735611,41737226,41737588,41737865,41739428,41741014,41741406,41741686,41743167,41744771,41745187,41745454,41746716,41747980,41749293,41750522,41751955,41753217,41754504,41755828,41757226,41758520,41759769,41761062,41762365,41763780,41765061,41766432,41767720,41769162,41770685,41771961,41773203,41774467,41775674,41776954,41778213,41779498,41780738,41782179,41783368,41784559,41785766,41786959,41788140,41789292,41790500,41791991,41793195,41794447,41795720,41796983,41798274,41799534,41800818,41802091,41803985,41805701,41807490,41809197,41810871,41812493,41814329,41816209,41817641,41818915,41820306,41821658,41823001,41824359,41825704,41826977,41828355,41829684,41831102,41832397,41833782,41835150,41836593,41837947,41839465,41841271,41842917,41844504,41846078,41847706,41849292,41850796,41852173,41853490,41854882,41856270,41857781,41859291,41860821,41862259,41863831,41865585,41867422,41869095,41870679,41872255,41873897,41875472,41876980,41878384,41879665,41881074,41882462,41883940,41885488,41887026,41888448,41890012,41891727,41893610,41895288,41896863,41898450,41900108,41901684,41903198,41904641,41905917,41907295,41908695,41910155,41911728,41913248,41914683,41916191,41917906,41919794,41921483,41923067,41924673,41926346,41927912,41929431,41930902,41932151,41933505,41934878,41936338,41937901,41939425,41940860,41942358,41944089,41945944,41947130,41948383,41949416,41950294,41951169,41952224,41953247,41954282,41955389,41956693,41957926,41959138,41960022,41961040,41962106,41963124,41964758,41965932,41967153,41968217,41969143,41970014,41971054,41972065,41973048,41974168,41975442,41976653,41977858,41978819,41979777,41980833,41981871,41983356,41985319,41987234,41989147,41991111,41993073,41995028,41996982,41998886,42000769,42002564,42004339,42006214,42008087,42010037,42011973,42013924,42015543,42017350,42019325,42021268,42023245,42025266,42027252,42029170,42031135,42033136,42034909,42036671,42038429,42040196,42041979,42043725,42045568,42047328,42049067,42050854,42052648,42054425,42056262,42057770,42059708,42061696,42063636,42065520,42067399,42069352,42071217,42072210,42073019,42074602,42076527,42078510,42080502,42082486,42084412,42086404,42088370,42090296,42092326,42094281,42096256,42098248,42100182,42102174,42104114,42106056,42108057,42109640,42111196,42112766,42114346,42115919,42117452,42119020,42120598,42122367,42124067,42125695,42127373,42128930,42130788,42132604,42134437,42136207,42138045,42139541,42141140,42142647,42144166,42145866,42147553,42149267,42150895,42152651,42154271,42155967,42157678,42159541,42161355,42163218,42165052,42166944,42168596,42170294,42171980,42173577,42175433,42177217,42179057,42180872,42182654,42184205,42185838,42187397,42189036,42190670,42192418,42194088,42195772,42197516,42199247,42201019,42202781,42204495,42206024,42207752,42209430,42211212,42212712,42214434,42216230,42217860,42219534,42221344,42223089,42224704,42226385,42227974,42229731,42231327,42232919,42234523,42236264,42237906,42239589,42240621,42242509,42244405,42245941,42247556,42249502,42251372,42252947,42254484,42256271,42258277,42260310,42262268,42264011,42265356,42266376,42267453,42268764,42269910,42271652,42273243,42274781,42276255,42277685,42279156,42280622,42282119,42283806,42285032,42286137,42286924,42287916,42289239,42290250,42291268,42292313,42293414,42294819,42296662,42298429,42300301,42302078,42303975,42305761,42307654,42309444,42311276,42312950,42314595,42316354,42317964,42319749,42321492,42323162,42325033,42326911,42328705,42330578,42332382,42334228,42336059,42337916,42339707,42341556,42343277,42344909,42346688,42348298,42350061,42351794,42353525,42355343,42357118,42358996,42360855,42362707,42364565,42366404,42368308,42370138,42372104,42374041,42375971,42377960,42379839,42381806,42383750,42385780,42387717,42389643,42391433,42393127,42394915,42396666,42398512,42400333,42402166,42403909,42405588,42407017,42408255,42409805,42411292,42413076,42414491,42415592,42416823,42417905,42418675,42418901,42419714,42421008,42422246,42423631,42424871,42426324,42427665,42428907,42430246,42431571,42433006,42434294,42435631,42436981,42438255,42439748,42441091,42442422,42443786,42445099,42446571,42448205,42449108,42450769,42452245,42454104,42456040,42458049,42460104,42462096,42464106,42466082,42468005,42469884,42471512,42473037,42474548,42476158,42477784,42479465,42481165,42482922,42484710,42486434,42488167,42489811,42491500,42493077,42494669,42496322,42497606,42499298,42501125,42503072,42504926,42506639,42508332,42510100,42512035,42514039,42515938,42517730,42519372,42521216,42523123,42525049,42526833,42528479,42530171,42532104,42534008,42535896,42537647,42539245,42541174,42543127,42545096,42547017,42548879,42550495,42552331,42554194,42556076,42557941,42559583,42560558,42561540,42562538,42563521,42565159,42566667,42568381,42569944,42571614,42573234,42574915,42576575,42578100,42579956,42581648,42583337,42585071,42586746,42588426,42590096,42591728,42593424,42595076,42596845,42598743,42600491,42602268,42603962,42605607,42607403,42609089,42610703,42612461,42614125,42615930,42617549,42619200,42620855,42622498,42624252,42626129,42628016,42629926,42631818,42633768,42635687,42637473,42639162,42640923,42642574,42644257,42646171,42648091,42649971,42651867,42653780,42655731,42657695,42659598,42661567,42663517,42665407,42667200,42668974,42670781,42672585,42674554,42676467,42678369,42680251,42682162,42684029,42685905,42687824,42689192,42690424,42691758,42693372,42694968,42696607,42698201,42699952,42701817,42703652,42705536,42707370,42709242,42711061,42712908,42714823,42716647,42718550,42720442,42722091,42722698,42723206,42723781,42725011,42726011,42727151,42728458,42729689,42730800,42732399,42734114,42735715,42737325,42738990,42740752,42742242,42743933,42745649,42746945,42748605,42750129,42751468,42752671,42754179,42755812,42757473,42759189,42760955,42762633,42764388,42766033,42767654,42769223,42770563,42772090,42773591,42775089,42776530,42777947,42779486,42780911,42782403,42783805,42785332,42786785,42788588,42790392,42792236,42794126,42795987,42797833,42799683,42801522,42803419,42805251,42807076,42808972,42810881,42812759,42814650,42816513,42818443,42820417,42822409,42824336,42826230,42828132,42830060,42831986,42833909,42835806,42837761,42839697,42841573,42843443,42845287,42847198,42849100,42850988,42852559,42853947,42855393,42857192,42858835,42860416,42862068,42863661,42865278,42866945,42868579,42870294,42871936,42873587,42875210,42876875,42878521,42880162,42881798,42883428,42885173,42886835,42888467,42890126,42891766,42893392,42895029,42896686,42898364,42900284,42902144,42904007,42905876,42907750,42909608,42911466,42913323,42915253,42917081,42918917,42920733,42922583,42924425,42926270,42928102,42929954,42931912,42933760,42935628,42937486,42939344,42941180,42943041,42944905,42946818,42948152,42949580,42951022,42952413,42953776,42955208,42956834,42958213,42959583,42960957,42962454,42963863,42965333,42966879,42968790,42970686,42972506,42974240,42976052,42977899,42979765,42981661,42983515,42985147,42986893,42988677,42990344,42992027,42993759,42995497,42997119,42998796,43000497,43002227,43003903,43005686,43007388,43009187,43010769,43012495,43014236,43016105,43017910,43019791,43021490,43023142,43025028,43026883,43028870,43030705,43032531,43034166,43035954,43037705,43039495,43041311,43042875,43044532,43046265,43047932,43049708,43051447,43053028,43054857,43056580,43058392,43060120,43061924,43063543,43065270,43066900,43068513,43070279,43071903,43073045,43074324,43075566,43076777,43078063,43079337,43080386,43082075,43083667,43085152,43086718,43088352,43089933,43091451,43093062,43094644,43096203,43097755,43099333,43101107,43102927,43104852,43106772,43108623,43110092,43111971,43113402,43114803,43116566,43118359,43120190,43121931,43123654,43125292,43126762,43128476,43130198,43131985,43133645,43135028,43136322,43138141,43139967,43141795,43143276,43144759,43146207,43147644,43149327,43150888,43152318,43153882,43155403,43156936,43158437,43159971,43161466,43163023,43164399,43165830,43167370,43168908,43170488,43171955,43173428,43174913,43176628,43178144,43179693,43181122,43182497,43183975,43185456,43187217,43189015,43190894,43192704,43194535,43196397,43198194,43199930,43201635,43203256,43204899,43206695,43208368,43210169,43211885,43213635,43215421,43217135,43218864,43220752,43222694,43224517,43226376,43228172,43230050,43231883,43233596,43235282,43236945,43238649,43240361,43242134,43243847,43245514,43247216,43249028,43250809,43252414,43254266,43255958,43257687,43259386,43261129,43262732,43264433,43266108,43267839,43269636,43271308,43273024,43274670,43276440,43278153,43279896,43281606,43283193,43284988,43286705,43288115,43289574,43291338,43293116,43294770,43296441,43298215,43299602,43301105,43302631,43304141,43305629,43307068,43308668,43310198,43311718,43313503,43315249,43316901,43318643,43320361,43322032,43323794,43325541,43327173,43328841,43330477,43332151,43333782,43335396,43337023,43338631,43340328,43341997,43343642,43345267,43346955,43348563,43350220,43351854,43353609,43355255,43356904,43358536,43360200,43361891,43363515,43365178,43366822,43368539,43370166,43371825,43373471,43375158,43376791,43378425,43380004,43381737,43383334,43384989,43386703,43388472,43390194,43391833,43393466,43395105,43396823,43398446,43400120,43401780,43403566,43405229,43406844,43408469,43410133,43411825,43413599,43415461,43417156,43418803,43420510,43422324,43424015,43425720,43427479,43429301,43431103,43432862,43434739,43436626,43438499,43440492,43442458,43444411,43446356,43448325,43450195,43452022,43453895,43455858,43457859,43459869,43461874,43463776,43465648,43467561,43469353,43471197,43473180,43475199,43477212,43479208,43481203,43483165,43485108,43487027,43488909,43490825,43492751,43494685,43496646,43498617,43500414,43502225,43504138,43506059,43507954,43509784,43511386,43513000,43514804,43516658,43518483,43520137,43521757,43523377,43525001,43526628,43528305,43529858,43531281,43532615,43533912,43535355,43536837,43538338,43539767,43541183,43542609,43544135,43545649,43546979,43548425,43549984,43551479,43552882,43554545,43556251,43557955,43559711,43561366,43563061,43564759,43566541,43568236,43569903,43571652,43573483,43575172,43576852,43578490,43580190,43581863,43583577,43585237,43586929,43588583,43590323,43592003,43593723,43595354,43596999,43598775,43600409,43602050,43603706,43605640,43607528,43609448,43611358,43613275,43615194,43617090,43618966,43620902,43622688,43624479,43626287,43628100,43630114,43632120,43634134,43636177,43638218,43640246,43642282,43644305,43646345,43648389,43650409,43652460,43654515,43656571,43658624,43660667,43662709,43664693,43666550,43668403,43670316,43672241,43674167,43676032,43677878,43679780,43681250,43682668,43684174,43685680,43687411,43689004,43690551,43692126,43693730,43695251,43696841,43698485,43699938,43701458,43703043,43704610,43706127,43707737,43709305,43710706,43712230,43713642,43715257,43717003,43718949,43720662,43722345,43724043,43725743,43727658,43729528,43731405,43733208,43734983,43736739,43738530,43740383,43742269,43743763,43745696,43747670,43749697,43751668,43753570,43755472,43757258,43758914,43760579,43762340,43764052,43765830,43767574,43769370,43771038,43772746,43774512,43776170,43777871,43779564,43780916,43782389,43783886,43785426,43786903,43788492,43790020,43791521,43793017,43794578,43796057,43797565,43799080,43800635,43802161,43803680,43805181,43806689,43808005,43809292,43810590,43811858,43813469,43815390,43817300,43819198,43821076,43823041,43824971,43826909,43828847,43830403,43831706,43832956,43834283,43835612,43836911,43838247,43839608,43841208,43842695,43844169,43845711,43847370,43848945,43850462,43852113,43853658,43855478,43857092,43858747,43860477,43861833,43863492,43865161,43866829,43868725,43869922,43871178,43872491,43873745,43875056,43876345,43877602,43878838,43880329,43881515,43882469,43883645,43884742,43886016,43887071,43888226,43889612,43890882,43892205,43893471,43894660,43895932,43897161,43898526,43899881,43901506,43902891,43904183,43905505,43906869,43908169,43909482,43910788,43912192,43914161,43915618,43917265,43919026,43920672,43922238,43923730,43925207,43927157,43929082,43930105,43931310,43932442,43933708,43934962,43936142,43938068,43940040,43941971,43943426,43945245,43947080,43948890,43950351,43952277,43954162,43954583,43955241,43955717,43956219,43956792,43957292,43957846,43958263,43959187,43959813,43961155,43962556,43963919,43965156,43966306,43967071,43967822,43968355,43969441,43970802,43972343,43973821,43975238,43976623,43977172,43978424,43979376,43980823,43982233,43983444,43984788,43986008,43987302,43988767,43990665,43992396,43994129,43995916,43997095,43997165,43997696,43998772,43999554,43999991,44000699,44001170,44001933,44002459,44003073,44003879,44005040,44005764,44007049,44008458,44009861,44011276,44012716,44014126,44015826,44017460,44019122,44020728,44022291,44023829,44025598,44027350,44028687,44029768,44030907,44032107,44033401,44034774,44035972,44037233,44038634,44040088,44041696,44043250,44044936,44046616,44048071,44049364,44050821,44052080,44052340,44052365,44052395,44052420,44053345,44054043,44055289,44056212,44057861,44059462,44061112,44062722,44064291,44065595,44067233,44068794,44070315,44071855,44073736,44075646,44077585,44079494,44081429,44083329,44084382,44085338,44086799,44088298,44089302,44090235,44091372,44092646,44094063,44095484,44096946,44098423,44099989,44101505,44103228,44104984,44106533,44108149,44109696,44111242,44112812,44114369,44115883,44117450,44119428,44121483,44123535,44125579,44127502,44129353,44131393,44133422,44135234,44137011,44138942,44140811,44142832,44144836,44146873,44148880,44150902,44152911,44154934,44156921,44158969,44161021,44162836,44164565,44166540,44168548,44170563,44172579,44174323,44175998,44177326,44178532,44179775,44180981,44182839,44184839,44186571,44188290,44190163,44192066,44193888,44195645,44197405,44199165,44201106,44203050,44205057,44207028,44208968,44210977,44212958,44214932,44216595,44218124,44219691,44221221,44222780,44224330,44225894,44227390,44228841,44230224,44231584,44232899,44234200,44235418,44236810,44238100,44240019,44242026,44244023,44245980,44247994,44249978,44251928,44253841,44255842,44257844,44259540,44261251,44262902,44264559,44266234,44267903,44268399,44268633,44269611,44270966,44272333,44273531,44274523,44275584,44276490,44277530,44279041,44280759,44282387,44284049,44285798,44287513,44289088,44290602,44292214,44293756,44295371,44296910,44298474,44299926,44301355,44302680,44303830,44304902,44306224,44307491,44308769,44309971,44311411,44312834,44314395,44315961,44317462,44318936,44320320,44321729,44322698,44323666,44325119,44326706,44327864,44328692,44329997,44331282,44332767,44334238,44335712,44337224,44338507,44339693,44341112,44342600,44344173,44345853,44347656,44349503,44351285,44353111,44354771,44356308,44357948,44359568,44361196,44362756,44364327,44365839,44367409,44368912,44370205,44371506,44373013,44374568,44376019,44377361,44378764,44380165,44381567,44382944,44383743,44384192,44384739,44385163,44386481,44387959,44389586,44391121,44392567,44394003,44395531,44397031,44398492,44399850,44401058,44402206,44403487,44404823,44406300,44407786,44408957,44409955,44410415,44410705,44412293,44414101,44415962,44417735,44419350,44420886,44421944,44422999,44424449,44425996,44427554,44429122,44430706,44432291,44433846,44435402,44437256,44439033,44440859,44442602,44444470,44446288,44448139,44449947,44451266,44452675,44454086,44455465,44456899,44458293,44459924,44461596,44463231,44464766,44466275,44467755,44469281,44470827,44472305,44473771,44475625,44477561,44479168,44480691,44481425,44482158,44483081,44483923,44485095,44486596,44488279,44489958,44491550,44493035,44494573,44495907,44497138,44498310,44499088,44499679,44500546,44501361,44502105,44502714,44503933,44505500,44506183,44506678,44507244,44507748,44509388,44511201,44512469,44513559,44514647,44515680,44517026,44518412,44519610,44520664,44521656,44522549,44523892,44525332,44526796,44528221,44529652,44531107,44532796,44534504,44536219,44537849,44539738,44541634,44543268,44544843,44545936,44546963,44548196,44549338,44550360,44551331,44552291,44553159,44554311,44555304,44556547,44557735,44558440,44558926,44559557,44560177,44560773,44561277,44561897,44562517,44563087,44563598,44564255,44564878,44565469,44565971,44566606,44567203,44567753,44568223,44568795,44569348,44571059,44572939,44574176,44575214,44576317,44577348,44578452,44579485,44580640,44581735,44583503,44585261,44586912,44588639,44590305,44591991,44593691,44595386,44596640,44597829,44599428,44601101,44602776,44604498,44606371,44608216,44608701,44608968,44609300,44609588,44609841,44610030,44610394,44610655,44610901,44610966,44611207,44611232,44611445,44611585,44611845,44612137,44612455,44612705,44613961,44615448,44616999,44618702,44619875,44620975,44622075,44623157,44624269,44625482,44626996,44628466,44629961,44631385,44633225,44635078,44636829,44638528,44640117,44641494,44643126,44644726,44646197,44647569,44648935,44650214,44651563,44653289,44654905,44656111,44657631,44659113,44660587,44662099,44663601,44664793,44666202,44667650,44669080,44670543,44672074,44673602,44675098,44676131,44677377,44678710,44680147,44681255,44682544,44683796,44684920,44685995,44687264,44689312,44691360,44693408,44695456,44697504,44699552,44701600,44703648,44705696,44707744,44709792,44711840,44713888,44715936,44717984,44720032,44722080,44724128,44726176,44728224,44730272,44732320,44734368,44736416,44738471,44740526,44742535,44744465,44746513,44748561,44750609,44752657,44754705,44756753,44758801,44760849,44762897,44764945,44766993,44769041,44771089,44773137,44775185,44777233,44779281,44781329,44783377,44785425,44787473,44789521,44791569,44793617,44795665,44797689,44799554,44801602,44803650,44805629,44807677,44809725,44811698,44813746,44815794,44817842,44819890,44821938,44823986,44825962,44828010,44830058,44832106,44834154,44836202,44838250,44840298,44842274,44844322,44846370,44848418,44850398,44852446,44854494,44856542,44858590,44860564,44862612,44864660,44866708,44868756,44870804,44872852,44874826,44876874,44878922,44880970,44883016,44884933,44886981,44889029,44891077,44893101,44895040,44897088,44899055,44901103,44903071,44905119,44907167,44909215,44911263,44913311,44915359,44917407,44919455,44921503,44923551,44925599,44927647,44929695,44931751,44933799,44935847,44937887,44939884,44941706,44943754,44945802,44947850,44949898,44951946,44953994,44956042,44958090,44960138,44962186,44964234,44966282,44968330,44970378,44972426,44974474,44976522,44978571,44980506,44982421,44984469,44986517,44988565,44990613,44992670,44994618,44996543,44998591,45000639,45002687,45004735,45006789,45008703,45010670,45012718,45014766,45016814,45018862,45020910,45022958,45025006,45027054,45029102,45031150,45033198,45035246,45037294,45039342,45041390,45043438,45045495,45047543,45049591,45051639,45053687,45055735,45057783,45059831,45061879,45063935,45065968,45067917,45069767,45071815,45073863,45075911,45077959,45080007,45082055,45084103,45086151,45088199,45090247,45092295,45094343,45096391,45098439,45100496,45102544,45104592,45106640,45108688,45110736,45112792,45114840,45116888,45118936,45120992,45123040,45125068,45127021,45128765,45130813,45132789,45134837,45136818,45138866,45140914,45142962,45145010,45147058,45149106,45151154,45153202,45155250,45157298,45159346,45161394,45163442,45165490,45167538,45169586,45171634,45173682,45175730,45177778,45179826,45181874,45183931,45185988,45188036,45190087,45192063,45194006,45196054,45198102,45200150,45202198,45204246,45206294,45208342,45210390,45212438,45214486,45216534,45218582,45220630,45222678,45224726,45226774,45228822,45230870,45232918,45234966,45237014,45239062,45241110,45243158,45245206,45247254,45249139,45251187,45253235,45255283,45257331,45259296,45261344,45263392,45265440,45267488,45269438,45271486,45273534,45275582,45277630,45279678,45281734,45283698,45285746,45287794,45289842,45291890,45293938,45295986,45297952,45300000,45302048,45304096,45306144,45308125,45310173,45312221,45314269,45316317,45318365,45320413,45322461,45324509,45326557,45328605,45330653,45332701,45334749,45336797,45338845,45340893,45342870,45344918,45346966,45349014,45351062,45353110,45355158,45357206,45359254,45361302,45363350,45365398,45367446,45369494,45371542,45373590,45375620,45377648,45379696,45381744,45383792,45385840,45387888,45389936,45391984,45394032,45396080,45398128,45400176,45402224,45404272,45406320,45408368,45410416,45412464,45414444,45416492,45418540,45420588,45422636,45424684,45426732,45428780,45430828,45432876,45434924,45436972,45439020,45441068,45443116,45445164,45447212,45449260,45451308,45453285,45455333,45457381,45459429,45461477,45463525,45465573,45467621,45469669,45471717,45473765,45475813,45477861,45479909,45481957,45484005,45486053,45488033,45490081,45492129,45494177,45496225,45498273,45500321,45502369,45504417,45506465,45508513,45510561,45512609,45514657,45516705,45518753,45520801,45522849,45524828,45526876,45528857,45530905,45532881,45534929,45536908,45538956,45541004,45542977,45544958,45547006,45548717,45550684,45552739,45554787,45556785,45558653,45560599,45562641,45564689,45566719,45568627,45570533,45572582,45574638,45576691,45578628,45580533,45582549,45584597,45586652,45588618,45590527,45592518,45594570,45596618,45598616,45600525,45602474,45604509,45606566,45608587,45610488,45612486,45614534,45616582,45618630,45620678,45622726,45624774,45626822,45628870,45630918,45632966,45635014,45637062,45639047,45641095,45643143,45645191,45647239,45649287,45651335,45653383,45655431,45657479,45659527,45661575,45663623,45665671,45667649,45669697,45671745,45673793,45675841,45677889,45679937,45681985,45684033,45686081,45688129,45690108,45692156,45694204,45696252,45698300,45700348,45702396,45704444,45706492,45708540,45710588,45712563,45714611,45716659,45718707,45720755,45722730,45724778,45726826,45728874,45730851,45732899,45734880,45736928,45738906,45740888,45742936,45744910,45746958,45749006,45751054,45753102,45755079,45757127,45759175,45761223,45763271,45765247,45767221,45769199,45771247,45773295,45775343,45777391,45779439,45781487,45783535,45785583,45787631,45789679,45791727,45793775,45795823,45797871,45799919,45801967,45804015,45805993,45808041,45810089,45812137,45814185,45816233,45818281,45820329,45822377,45824425,45826473,45828521,45830569,45832617,45834665,45836713,45838761,45840809,45842857,45844831,45846810,45848858,45850837,45852885,45854861,45856843,45858891,45860939,45862920,45864968,45867016,45868997,45871045,45873024,45875072,45877049,45879097,45881076,45883124,45885107,45887155,45889203,45891251,45893299,45895347,45897395,45899443,45901491,45903539,45905587,45907635,45909683,45911731,45913779,45915827,45917875,45919923,45921899,45923947,45925995,45928043,45930091,45932139,45934187,45936235,45938283,45940331,45942379,45944427,45946475,45948523,45950571,45952619,45954667,45956649,45958697,45960745,45962793,45964769,45966817,45968865,45970913,45972888,45974936,45976984,45979032,45981080,45983055,45985103,45987151,45989199,45991247,45993220,45995268,45997316,45999364,46001412,46003460,46005508,46007556,46009604,46011652,46013700,46015748,46017721,46019769,46021817,46023865,46025913,46027961,46030006,46032016,46034064,46036112,46038160,46040208,46042256,46044235,46046283,46048331,46050379,46052427,46054475,46056523,46058571,46060619,46062667,46064715,46066763,46068811,46070859,46072907,46074955,46077003,46079051,46081032,46083080,46085128,46087176,46089224,46091272,46093320,46095368,46097416,46099464,46101512,46103560,46105608,46107656,46109704,46111752,46113800,46115848,46117823,46119871,46121919,46123967,46126015,46128063,46130111,46132159,46134207,46136255,46138303,46140351,46142399,46144447,46146495,46148543,46150591,46152639,46154687,46156735,46158775,46160802,46162651,46164699,46166747,46168795,46170843,46172891,46174939,46176987,46179035,46181083,46183131,46185187,46187235,46189283,46191331,46193379,46195427,46197483,46199515,46201541,46203534,46205492,46207281,46209200,46211248,46213296,46215344,46217392,46219440,46221488,46223536,46225584,46227632,46229680,46231728,46233776,46235824,46237872,46239920,46241968,46244016,46246064,46248112,46250160,46252208,46254172,46256220,46258268,46260316,46262364,46264412,46266460,46268508,46270556,46272604,46274652,46276700,46278748,46280796,46282844,46284892,46286940,46288988,46291036,46293084,46295132,46297180,46299237,46301194,46303242,46305290,46307338,46309386,46311434,46313482,46315530,46317578,46319626,46321674,46323722,46325770,46327818,46329866,46331914,46333969,46336017,46337995,46340043,46342091,46344139,46346187,46348235,46350283,46352331,46354379,46356427,46358475,46360523,46362571,46364619,46366667,46368715,46370763,46372811,46374859,46376751,46378799,46380847,46382895,46384943,46386991,46389039,46391087,46393135,46395183,46397231,46399279,46401327,46403375,46405423,46407471,46409519,46411567,46413544,46415592,46417640,46419688,46421736,46423784,46425832,46427880,46429928,46431976,46434024,46436072,46438120,46440168,46442216,46444264,46446312,46448292,46450340,46452388,46454436,46456484,46458532,46460580,46462477,46464525,46466573,46468551,46470599,46472647,46474695,46476743,46478791,46480839,46482887,46484935,46486983,46488979,46491027,46493075,46495123,46497171,46499219,46501267,46503315,46505363,46507411,46509459,46511507,46513555,46515603,46517651,46519699,46521747,46523795,46525843,46527891,46529939,46531987,46534035,46536083,46538131,46540179,46542227,46544275,46546323,46548371,46550419,46552467,46554444,46556492,46558540,46560588,46562636,46564684,46566732,46568780,46570828,46572876,46574924,46576972,46579020,46581068,46583116,46585164,46587212,46589260,46591308,46593356,46595404,46597452,46599500,46601548,46603596,46605644,46607692,46609740,46611788,46613836,46615884,46617932,46619980,46621957,46624005,46626053,46628101,46630149,46632197,46634245,46636293,46638270,46640318,46642366,46644414,46646462,46648510,46650558,46652606,46654591,46656639,46658687,46660668,46662716,46664764,46666741,46668789,46670837,46672885,46674933,46676981,46679029,46681077,46683125,46685173,46687221,46689269,46691317,46693365,46695346,46697394,46699442,46701490,46703538,46705586,46707634,46709682,46711730,46713778,46715826,46717874,46719922,46721970,46723951,46725999,46728047,46730095,46732143,46734191,46736239,46738287,46740335,46742383,46744431,46746408,46748456,46750504,46752552,46754600,46756648,46758696,46760744,46762792,46764840,46766888,46768864,46770840,46772888,46774936,46776907,46778955,46780933,46782989,46784989,46786959,46788982,46790916,46792964,46794945,46796993,46799041,46801019,46803067,46805037,46807085,46809054,46811102,46813158,46815206,46817254,46819302,46821350,46823398,46825446,46827494,46829542,46831590,46833638,46835686,46837734,46839782,46841830,46843878,46845926,46847974,46850022,46852070,46854118,46856166,46858214,46860262,46862232,46864280,46866328,46868376,46870424,46872472,46874520,46876568,46878616,46880664,46882712,46884760,46886808,46888856,46890904,46892952,46895000,46897048,46899096,46901144,46903192,46905240,46907288,46909336,46911384,46913440,46915415,46917463,46919511,46921559,46923607,46925655,46927703,46929673,46931721,46933769,46935817,46937865,46939913,46941895,46943943,46945923,46947971,46949949,46951997,46954045,46956093,46958141,46960124,46962172,46964220,46966268,46968316,46970364,46972337,46974385,46976433,46978481,46980529,46982577,46984625,46986673,46988721,46990769,46992817,46994865,46996913,46998961,47001009,47002989,47005037,47007085,47009133,47011181,47013229,47015277,47017325,47019373,47021421,47023469,47025517,47027565,47029613,47031661,47033709,47035686,47037734,47039782,47041746,47043794,47045842,47047812,47049860,47051908,47053956,47056004,47058052,47060100,47062148,47064196,47066244,47068292,47070340,47072388,47074436,47076484,47078532,47080588,47082636,47084692,47086740,47088788,47090845,47092873,47094782,47096550,47098598,47100646,47102694,47104742,47106790,47108838,47110886,47112934,47114982,47117030,47119078,47121126,47123174,47125222,47127270,47129318,47131366,47133414,47135462,47137510,47139566,47141619,47143643,47145462,47147430,47149478,47151526,47153574,47155622,47157670,47159718,47161766,47163814,47165862,47167910,47169958,47172006,47174054,47176102,47178150,47180198,47182246,47184294,47186349,47188397,47190444,47192302,47194350,47196398,47198446,47200494,47202542,47204590,47206638,47208686,47210734,47212782,47214830,47216878,47218926,47220974,47223022,47225070,47227118,47229166,47231221,47233269,47235317,47237188,47239153,47241201,47243249,47245297,47247345,47249393,47251370,47253349,47255334,47257382,47259430,47261478,47263526,47265574,47267622,47269670,47271718,47273701,47275749,47277797,47279845,47281893,47283941,47285989,47288037,47290085,47292065,47294113,47296161,47298209,47300257,47302305,47304276,47306324,47308372,47310420,47312468,47314516,47316482,47318530,47320578,47322626,47324674,47326722,47328770,47330818,47332866,47334914,47336962,47339010,47341058,47343106,47345154,47347202,47349250,47351298,47353355,47355403,47357451,47359508,47361556,47363518,47365566,47367614,47369662,47371710,47373758,47375806,47377854,47379902,47381950,47383998,47386046,47388094,47390142,47392190,47394238,47396286,47398334,47400382,47402430,47404478,47406526,47408574,47410622,47412565,47414613,47416661,47418709,47420757,47422805,47424853,47426901,47428949,47430997,47433045,47435093,47437150,47439198,47441246,47443294,47445342,47447397,47449445,47451493,47453541,47455594,47457628,47459465,47461513,47463561,47465609,47467657,47469705,47471753,47473801,47475849,47477897,47479945,47481993,47484041,47486089,47488137,47490185,47492233,47494281,47496329,47498377,47500433,47502488,47504536,47506515,47508388,47510436,47512410,47514458,47516433,47518418,47520466,47522447,47524495,47526543,47528591,47530639,47532687,47534720,47536637,47538685,47540733,47542781,47544829,47546877,47548933,47550871,47552919,47554967,47557015,47559063,47561111,47563159,47565207,47567255,47569303,47571280,47573328,47575376,47577424,47579472,47581520,47583568,47585616,47587664,47589712,47591693,47593672,47595720,47597614,47599662,47601637,47603622,47605515,47607563,47609611,47611659,47613707,47615755,47617803,47619851,47621899,47623947,47625995,47628043,47630091,47632139,47634187,47636235,47638283,47640331,47642312,47644360,47646408,47648456,47650504,47652552,47654600,47656648,47658696,47660744,47662792,47664840,47666888,47668936,47670984,47673032,47675080,47677128,47679103,47681151,47683199,47685247,47687295,47689343,47691391,47693439,47695487,47697535,47699583,47701631,47703679,47705727,47707775,47709752,47711800,47713848,47715896,47717944,47719992,47722040,47724088,47726136,47728184,47730232,47732280,47734328,47736376,47738424,47740472,47742451,47744499,47746547,47748595,47750643,47752624,47754672,47756720,47758768,47760816,47762795,47764843,47766891,47768939,47770987,47773035,47775083,47777131,47779179,47781227,47783275,47785323,47787371,47789419,47791467,47793515,47795563,47797611,47799659,47801707,47803685,47805733,47807781,47809829,47811877,47813925,47815973,47818021,47820069,47822117,47824165,47826213,47828261,47830309,47832357,47834405,47836453,47838501,47840549,47842532,47844580,47846628,47848676,47850724,47852772,47854751,47856799,47858847,47860895,47862943,47864991,47866972,47869020,47871068,47873116,47875164,47877212,47879260,47881308,47883356,47885404,47887452,47889500,47891548,47893596,47895644,47897692,47899740,47901788,47903763,47905811,47907859,47909907,47911955,47914003,47916051,47918099,47920147,47922195,47924243,47926291,47928339,47930387,47932435,47934483,47936531,47938508,47940556,47942604,47944652,47946700,47948748,47950796,47952844,47954892,47956869,47958917,47960965,47963013,47965061,47967109,47969157,47971205,47973184,47975232,47977280,47979328,47981376,47983424,47985472,47987520,47989568,47991616,47993664,47995712,47997760,47999808,48001856,48003904,48005952,48007931,48009979,48012027,48014075,48016123,48018171,48020219,48022267,48024315,48026363,48028411,48030459,48032507,48034555,48036603,48038651,48040699,48042673,48044721,48046616,48048664,48050712,48052760,48054707,48056755,48058803,48060851,48062800,48064778,48066756,48068804,48070778,48072580,48074551,48076530,48078578,48080551,48082599,48084647,48086695,48088743,48090791,48092839,48094887,48096942,48098953,48100904,48102637,48104685,48106733,48108781,48110829,48112877,48114925,48116973,48119021,48121069,48123122,48125124,48126983,48129031,48131079,48133127,48135175,48137223,48139271,48141319,48143367,48145415,48147390,48149438,48151486,48153534,48155582,48157630,48159678,48161726,48163774,48165822,48167795,48169843,48171891,48173939,48175987,48177959,48180007,48182055,48184103,48186151,48188124,48190172,48192220,48194275,48196331,48198384,48200270,48202318,48204366,48206414,48208462,48210510,48212485,48214321,48216370,48218418,48220466,48222514,48224562,48226610,48228658,48230706,48232754,48234802,48236850,48238898,48240946,48242994,48245042,48247090,48249138,48251186,48253234,48255282,48257330,48259378,48261426,48263474,48265522,48267570,48269463,48271506,48273562,48275610,48277658,48279706,48281754,48283802,48285850,48287898,48289946,48291994,48294042,48296090,48298138,48300186,48302234,48304282,48306330,48308378,48310426,48312474,48314522,48316570,48318618,48320666,48322714,48324629,48325646,48326776,48328406,48329794,48331578,48332924,48333878,48335056,48336425,48337845,48339294,48340776,48342559,48344417,48346299,48348190,48350077,48351949,48353836,48355884,48357932,48359980,48362028,48364076,48366124,48368172,48370220,48372268,48374316,48376364,48378412,48380460,48382508,48384556,48386604,48388652,48390700,48392753,48394726,48396774,48398822,48400870,48402918,48404966,48407014,48409062,48411110,48413158,48415206,48417254,48419302,48421350,48423398,48425446,48427494,48429542,48431590,48433569,48435617,48437665,48439713,48441761,48443809,48445857,48447905,48449953,48452001,48454049,48456097,48458145,48460193,48462241,48464289,48466337,48468385,48470433,48472481,48474457,48476505,48478553,48480601,48482649,48484697,48486745,48488793,48490841,48492889,48494937,48496985,48499033,48501081,48503129,48505177,48507225,48509273,48511321,48513303,48515351,48517399,48519447,48521495,48523543,48525591,48527639,48529687,48531735,48533783,48535831,48537879,48539927,48541975,48544023,48546071,48548119,48550167,48552215,48554191,48556239,48558287,48560335,48562383,48564431,48566479,48568527,48570575,48572623,48574671,48576719,48578767,48580815,48582863,48584911,48586959,48589007,48591055,48593093,48595109,48597157,48599205,48601253,48603301,48605349,48607397,48609445,48611493,48613541,48615589,48617637,48619685,48621733,48623781,48625829,48627877,48629925,48631973,48633954,48636002,48638050,48640098,48642146,48644194,48646242,48648290,48650338,48652386,48654434,48656482,48658530,48660578,48662626,48664674,48666722,48668770,48670818,48672866,48674841,48676889,48678937,48680913,48682961,48684937,48686985,48688427,48689772,48691381,48692879,48694021,48695432,48696886,48698273,48699160,48699952,48700799,48701605,48702506,48703359,48705416,48707464,48707518,48707543,48707568,48709508,48711560,48712782,48712807,48712832,48713900,48715065,48716440,48717399,48719447,48721386,48723391,48725439,48727487,48729535,48731583,48733631,48735636,48737684,48739732,48741739,48743787,48745835,48747834,48749882,48751930,48753978,48756026,48758074,48760122,48762012,48764015,48765955,48767933,48769878,48771832,48773839,48775779,48777741,48779789,48781837,48783885,48785933,48787981,48789874,48791750,48793798,48795846,48797894,48799942,48801944,48803992,48805858,48807906,48809954,48811959,48814007,48816055,48818052,48820100,48822156,48824204,48826252,48828300,48830348,48832405,48834404,48836452,48838500,48840548,48842596,48844644,48846674,48848671,48850719,48852680,48854728,48856601,48858649,48860697,48862745,48864793,48866841,48868889,48870891,48872939,48874987,48877035,48879083,48881034,48883082,48884958,48887006,48888928,48890976,48892900,48894857,48896765,48898691,48900620,48902455,48904503,48906551,48908599,48910647,48912695,48914743,48916791,48918839,48920887,48922868,48924916,48926886,48928934,48930938,48932986,48934943,48936887,48938891,48940890,48942855,48944798,48946638,48948686,48950734,48952782,48954784,48956832,48958880,48960928,48962932,48964980,48966912,48968960,48971008,48973056,48975104,48977152,48979200,48981248,48983296,48985344,48987392,48989440,48991488,48993494,48995542,48997590,48999638,49001686,49003734,49005679,49007727,49009775,49011823,49013871,49015919,49017967,49019928,49021976,49024024,49026072,49028120,49030168,49032216,49034264,49036216,49038161,49040209,49042082,49044130,49046178,49048226,49050274,49052322,49054370,49056418,49058466,49060453,49062501,49064549,49066529,49068577,49070625,49072628,49074634,49076682,49078730,49080778,49082826,49084874,49086922,49088931,49090979,49093027,49095075,49097123,49099171,49101219,49103267,49105315,49107363,49109411,49111459,49113507,49115555,49117603,49119651,49121699,49123747,49125750,49127651,49129563,49131611,49133536,49135497,49137545,49139420,49141354,49143374,49145422,49147470,49149518,49151566,49153573,49155621,49157669,49159717,49161765,49163813,49165819,49167689,49169655,49171655,49173703,49175700,49177587,49179446,49181494,49183542,49185590,49187638,49189683,49191723,49193679,49195613,49197631,49199679,49201727,49203775,49205823,49207871,49209919,49211967,49213980,49216028,49218076,49220124,49222172,49224220,49226268,49228316,49230364,49232412,49234460,49236508,49238556,49240554,49242602,49244650,49246698,49248746,49250794,49252794,49254842,49256890,49258711,49260581,49262278,49264326,49266374,49268422,49270470,49272398,49274446,49276494,49278542,49280543,49282591,49284639,49286582,49288630,49290574,49292622,49294467,49296515,49298516,49300564,49302612,49304356,49306404,49308279,49310327,49312375,49314423,49316471,49318519,49320567,49322528,49324576,49326624,49328672,49330720,49332768,49334816,49336864,49338865,49340913,49342961,49345009,49347057,49349105,49351056,49353104,49355152,49357200,49359248,49361118,49363166,49365214,49367182,49369230,49371203,49373145,49375095,49377143,49379082,49381130,49383071,49385119,49387167,49389215,49391263,49393311,49395359,49397364,49399412,49401348,49403396,49405444,49407492,49409540,49411549,49413597,49415645,49417693,49419741,49421789,49423788,49425836,49427884,49429889,49431937,49433809,49435857,49437905,49439953,49442001,49444004,49446052,49448100,49450054,49452102,49454150,49456198,49458201,49460249,49462200,49464248,49466181,49468133,49470137,49472111,49474159,49476106,49478154,49480202,49482250,49484066,49486030,49487973,49489922,49491970,49494018,49496066,49498114,49500162,49502166,49504214,49506088,49508037,49509925,49511870,49513918,49515966,49518014,49520062,49522110,49524054,49526102,49528063,49530111,49532112,49534052,49535777,49537825,49539873,49541921,49543969,49546017,49548065,49550070,49551953,49554001,49556049,49558097,49560104,49562152,49564200,49566248,49568188,49570236,49572168,49574174,49576222,49578270,49580318,49582321,49584369,49586417,49588428,49590476,49592524,49594572,49596574,49598622,49600670,49602718,49604766,49606770,49608818,49610866,49612810,49614858,49616906,49618954,49621002,49622867,49624915,49626963,49629011,49631059,49633029,49635077,49637125,49639173,49641151,49643199,49645204,49647252,49649300,49651118,49653166,49655168,49657216,49659264,49661017,49663065,49665113,49667166,49669194,49671242,49673290,49675292,49677299,49679347,49681403,49683451,49685499,49687547,49689595,49691646,49693694,49695742,49697679,49699727,49701775,49703823,49705871,49707815,49709863,49711911,49713856,49715904,49717952,49720000,49722048,49724096,49725964,49728012,49729890,49731668,49733684,49735732,49737780,49739828,49741876,49743924,49745037,49746981,49749029,49751077,49753125,49755127,49757175,49759223,49761191,49763239,49765287,49767019,49769067,49771080,49773128,49774985,49777033,49778910,49780958,49782828,49784876,49786924,49788972,49790742,49792790,49794838,49796886,49798934,49800982,49802931,49804979,49807027,49808962,49811010,49813058,49814999,49817005,49819053,49821046,49823094,49825142,49827190,49829144,49831095,49833018,49835066,49837114,49839162,49841210,49843258,49845263,49847311,49849359,49851407,49853455,49855477,49857525,49859573,49861621,49863626,49865674,49867722,49869770,49870973,49873021,49875069,49877117,49879165,49881166,49883214,49885262,49887310,49889311,49891359,49893407,49895455,49897503,49899551,49901554,49903602,49905650,49907698,49909755,49911803,49913810,49915858,49917906,49919954,49922002,49924050,49926052,49928100,49930148,49932196,49934123,49936171,49938219,49940267,49942315,49944322,49946370,49948418,49950466,49952464,49954512,49956520,49958568,49960616,49962664,49964712,49966760,49968443,49970316,49972354,49974399,49976396,49978407,49980462,49982461,49984509,49986557,49988605,49990653,49992528,49994576,49996624,49998672,50000720,50002768,50004816,50006864,50008912,50010960,50013008,50015056,50017104,50019152,50021200,50023248,50025296,50027174,50029222,50031098,50033146,50035194,50037242,50039290,50041164,50043212,50045260,50047308,50049356,50051404,50053452,50055442,50057402,50059095,50061143,50063181,50065011,50066611,50068659,50070662,50072664,50074712,50076760,50078701,50080749,50082756,50084738,50086786,50088752,50090738,50092677,50094725,50096685,50098665,50100713,50102714,50104656,50106670,50108665,50110713,50112761,50114809,50116750,50118798,50120846,50122789,50124837,50126885,50128904,50130940,50132988,50134992,50136938,50138896,50140944,50142992,50145040,50147088,50149085,50151133,50153181,50155229,50157230,50159278,50161326,50163328,50165376,50167424,50169371,50171419,50173356,50175323,50177371,50179419,50181389,50183437,50185404,50187452,50189459,50191507,50193389,50195325,50197373,50199421,50201426,50203370,50205325,50207373,50209421,50211296,50213344,50215222,50217270,50219318,50221366,50223414,50225462,50227510,50229558,50231606,50233654,50235658,50237706,50239754,50241802,50243850,50245849,50247897,50249945,50251893,50253941,50255989,50257885,50259933,50261981,50264029,50266042,50268090,50270025,50271967,50273917,50275925,50277973,50279788,50281836,50283884,50285932,50287980,50290028,50292076,50294124,50296172,50298220,50300268,50302316,50304364,50306420,50308468,50310474,50312522,50314528,50316533,50318581,50320629,50322677,50324725,50326773,50328821,50330756,50332804,50334852,50336900,50338948,50340996,50343044,50345047,50347095,50349143,50351196,50353192,50355240,50357288,50359336,50361384,50363432,50365480,50367528,50369576,50371624,50373672,50375720,50377768,50379773,50381821,50383869,50385917,50387965,50390013,50392061,50394109,50396157,50398205,50400253,50402301,50404349,50406350,50408398,50410446,50412494,50414542,50416590,50418638,50420686,50422734,50424782,50426830,50428832,50430880,50432928,50434976,50437024,50439072,50441120,50443168,50445216,50447222,50449270,50451318,50453366,50455414,50457462,50459510,50461558,50463606,50465654,50467702,50469703,50471751,50473799,50475847,50477895,50479943,50481991,50483996,50486044,50488092,50490140,50492188,50494236,50496284,50498332,50500334,50502382,50504430,50506478,50508526,50510574,50512622,50514626,50516674,50518722,50520770,50522818,50524866,50526869,50528917,50530965,50533013,50535061,50537014,50539022,50541029,50543031,50545079,50547127,50549175,50551045,50553045,50555093,50557037,50559085,50561133,50563181,50565184,50567232,50569280,50571328,50573376,50575424,50577378,50579426,50581474,50583522,50585570,50587618,50589557,50591605,50593653,50595701,50597749,50599691,50601631,50603679,50605727,50607735,50609783,50611831,50613834,50615882,50617930,50619933,50621981,50624029,50626038,50628086,50630134,50632009,50634057,50636105,50638153,50640201,50642249,50644297,50646345,50648393,50650400,50652448,50654496,50656544,50658592,50660640,50662688,50664736,50666784,50668790,50670794,50672799,50674847,50676792,50678840,50680888,50682888,50684936,50686950,50688552,50690600,50692603,50694651,50696699,50698747,50700795,50702843,50704899,50706947,50708995,50711043,50713091,50715139,50717187,50719235,50721283,50723283,50725331,50727379,50729427,50731475,50733523,50735571,50737619,50739667,50741715,50743718,50745766,50747814,50749862,50751910,50753958,50756006,50758054,50760102,50762150,50763236,50764806,50766854,50768800,50770848,50772619,50774667,50776715,50778763,50780811,50782859,50784907,50786881,50788929,50790977,50793025,50795073,50797121,50799135,50801183,50803231,50805279,50807327,50809375,50811423,50813471,50815479,50817527,50819575,50821623,50823671,50825719,50827721,50829769,50831817,50833865,50835913,50837961,50839968,50842016,50844064,50846112,50848073,50850075,50852123,50854171,50856219,50858274,50860322,50862370,50864418,50866466,50868470,50870518,50872566,50874614,50876662,50878710,50880707,50882755,50884803,50886808,50888856,50890904,50892952,50895000,50897048,50899096,50900966,50903014,50905062,50907110,50909158,50911206,50913056,50915104,50917152,50919200,50921248,50923296,50925344,50927392,50929440,50931311,50933359,50935407,50937455,50939327,50941375,50943423,50945471,50947519,50949567,50951615,50953663,50955711,50957759,50959807,50961855,50963903,50965951,50967711,50969759,50971807,50973855,50975903,50977951,50979958,50982006,50984054,50986102,50988150,50990155,50992203,50994251,50996299,50998304,51000352,51002333,51004330,51006378,51008426,51010299,51012347,51014395,51016443,51018491,51020428,51022185,51023811,51025859,51027907,51029955,51031827,51033875,51035923,51037971,51040019,51042067,51044115,51046163,51048164,51050125,51052173,51054088,51056043,51058024,51060072,51062120,51063990,51066038,51068086,51070134,51072182,51074230,51076278,51078284,51080332,51082380,51084428,51086476,51088524,51090523,51092571,51094445,51096493,51098492,51100540,51102413,51104461,51106509,51108557,51110605,51112653,51114701,51116749,51118797,51120845,51122893,51124941,51126942,51128990,51131038,51133086,51135134,51137182,51139230,51141278,51143326,51145330,51147378,51149426,51151474,51153522,51155570,51157583,51159631,51161510,51163558,51165429,51167477,51169525,51171573,51173621,51175669,51177671,51179719,51181767,51183815,51185871,51187919,51189967,51192015,51194013,51196061,51198109,51200157,51202205,51204253,51206301,51208306,51210354,51212402,51214450,51216498,51218546,51220594,51222595,51224643,51226691,51228739,51230787,51232835,51234883,51236884,51238932,51240940,51242988,51245036,51247084,51249132,51251180,51253228,51255276,51257324,51259372,51261420,51263427,51265475,51267523,51269571,51271619,51273667,51275715,51277763,51279811,51281859,51283907,51285909,51287957,51290005,51292053,51294101,51296149,51298197,51300245,51302293,51304299,51306347,51308395,51310443,51312491,51314539,51316587,51318635,51320683,51322731,51324779,51326827,51328875,51330923,51332928,51334976,51337024,51339072,51341120,51343168,51345177,51347225,51349273,51351321,51353369,51355256,51357304,51359172,51361046,51363094,51365142,51367109,51369157,51371205,51373253,51375301,51377349,51379397,51381445,51383493,51385541,51387538,51389586,51391634,51393682,51395730,51397732,51399780,51401828,51403876,51405924,51407896,51409944,51411992,51414040,51416088,51418044,51420092,51422140,51424188,51426132,51428180,51430228,51432185,51434233,51436281,51438329,51440377,51442425,51444473,51446521,51448569,51450617,51452623,51454671,51456719,51458767,51460815,51462863,51464911,51466959,51469007,51471016,51473064,51475112,51477160,51479208,51481256,51483304,51485352,51487400,51489448,51491496,51493544,51495542,51497590,51499638,51501686,51503734,51505782,51507830,51509834,51511872,51513878,51515926,51517974,51520022,51522029,51524077,51525950,51527998,51530046,51532094,51534142,51536196,51538244,51540292,51542340,51544388,51546436,51548484,51550532,51552587,51554635,51556685,51558738,51560734,51562782,51564830,51566784,51568832,51570880,51572808,51574856,51576904,51578952,51581000,51583048,51585096,51587150,51589198,51591246,51593194,51595242,51597290,51598892,51600940,51602988,51604992,51607040,51609088,51611136,51613184,51615232,51617280,51619328,51621376,51623324,51625372,51627420,51629468,51631516,51633564,51635337,51637097,51639145,51641154,51643097,51645145,51647193,51649241,51651289,51653295,51655348,51657352,51659400,51661350,51663363,51665411,51667459,51669507,51671422,51673470,51675518,51677511,51679510,51681558,51683606,51685663,51687720,51689710,51691758,51693758,51695806,51697854,51699742,51701366,51703414,51705413,51707461,51709509,51711564,51713546,51715594,51717642,51719690,51721738,51723722,51725770,51727818,51729866,51731835,51733883,51735931,51737979,51740027,51742082,51743932,51745980,51748028,51750076,51752124,51754172,51756220,51758268,51760316,51762364,51764412,51766460,51768460,51770508,51772556,51774548,51776596,51778593,51780641,51782689,51784737,51786785,51788833,51790881,51792929,51794977,51797025,51799073,51801121,51803169,51805217,51807265,51809313,51811361,51813409,51815457,51817505,51819507,51821555,51823603,51825651,51827699,51829747,51831795,51833843,51835891,51837939,51839987,51842035,51844083,51846131,51848179,51850227,51852275,51854323,51856371,51858419,51860467,51862515,51864563,51866611,51868659,51870707,51872703,51874751,51876799,51878847,51880895,51882943,51884991,51887039,51889043,51891091,51893139,51895187,51897235,51899283,51901331,51903379,51905427,51907424,51909472,51911520,51913568,51915616,51917664,51919712,51921760,51923808,51925856,51927904,51929952,51932000,51934048,51936096,51938144,51940192,51942240,51944288,51946336,51948384,51950432,51952480,51954479,51956527,51958575,51960623,51962619,51964667,51966665,51968713,51970761,51972756,51974804,51976859,51978887,51980731,51982779,51984827,51986693,51988741,51990789,51992450,51994472,51996520,51998568,52000616,52002668,52004638,52006686,52008734,52010782,52012830,52014831,52016879,52018936,52020984,52023032,52025080,52027135,52029183,52031231,52033231,52035279,52037327,52039375,52041423,52043479,52045534,52047582,52049626,52051624,52053672,52055720,52057768,52059816,52061813,52063861,52065857,52067905,52069953,52071947,52073948,52075996,52078044,52080013,52082061,52084109,52086157,52088205,52090253,52092301,52094305,52096353,52098266,52100314,52102306,52104354,52106402,52108398,52110446,52112494,52114486,52116534,52118582,52120569,52122617,52124612,52126660,52128708,52130756,52132804,52134852,52136853,52138901,52140949,52142997,52145045,52147093,52149141,52151189,52153237,52155285,52157333,52159331,52161379,52163427,52165378,52167426,52169474,52171522,52173570,52175618,52177614,52179662,52181710,52183758,52185755,52187803,52189851,52191899,52193947,52195995,52198043,52200091,52202139,52204187,52206235,52208283,52210331,52212379,52214382,52216430,52218478,52220526,52222531,52224579,52226627,52228675,52230723,52232771,52234819,52236867,52238915,52240963,52243011,52245059,52247107,52249155,52251203,52253259,52255208,52257256,52259304,52261352,52263400,52265448,52267496,52269544,52271592,52273594,52275642,52277690,52279738,52281786,52283772,52285820,52287868,52289916,52291964,52294012,52296060,52298108,52300153,52302177,52304225,52306273,52308321,52310369,52312417,52314465,52316460,52318508,52320556,52322604,52324568,52326559,52328607,52330655,52332703,52334751,52336799,52338847,52340895,52342943,52344991,52347039,52349087,52351135,52353183,52355231,52357279,52359327,52361327,52363375,52365423,52367471,52369519,52371567,52373615,52375663,52377665,52379713,52381761,52383809,52385857,52387905,52389953,52392001,52393942,52395990,52398038,52400086,52402134,52404182,52406230,52408278,52410278,52412326,52414374,52416422,52418470,52420518,52422566,52424614,52426662,52428657,52430705,52432753,52434801,52436849,52438897,52440945,52442993,52445041,52447089,52449137,52451132,52453180,52455228,52457276,52459324,52461372,52463420,52465468,52467516,52469564,52471612,52473660,52475708,52477756,52479804,52481852,52483845,52485893,52487941,52489989,52492037,52494085,52496133,52498181,52500229,52502277,52504325,52506373,52508269,52510233,52512281,52514282,52516330,52518378,52520426,52522474,52524522,52526570,52528618,52530666,52532714,52534762,52536810,52538858,52540906,52542954,52545002,52547050,52549098,52551091,52553139,52555187,52557235,52559283,52561331,52563379,52565378,52567426,52569474,52571471,52573519,52575525,52577573,52579621,52581669,52583656,52585704,52587752,52589808,52591847,52593895,52595888,52597936,52599984,52602032,52604080,52606075,52608123,52610171,52612219,52614267,52616315,52618363,52620411,52622459,52624507,52626555,52628603,52630651,52632699,52634747,52636795,52638843,52640847,52642895,52644943,52646991,52649039,52651087,52653135,52655183,52657231,52659279,52661327,52663375,52665423,52667471,52669519,52671567,52673051,52674167,52675262,52676408,52677629,52679584,52680273,52680989,52682417,52684465,52686513,52687275,52687309,52687343,52687377,52687411,52687445,52687622,52688139,52688507,52689014,52689571,52690203,52690876,52691507,52692019,52692645,52693208,52693837,52694339,52695032,52695736,52696310,52696957,52697571,52698338,52699142,52699913,52700679,52701448,52702158,52703337,52704340,52705239,52706127,52707090,52708004,52708916,52709884,52710863,52711834,52712832,52713786,52714545,52715598,52716909,52718091,52719437,52720680,52722067,52723226,52724368,52725518,52726667,52727843,52728977,52730142,52731286,52732450,52733512,52734456,52735798,52737283,52738479,52739274,52740044,52740763,52741791,52743117,52744330,52745648,52746553,52746898,52746998,52747099,52747211,52747440,52747487,52747603,52747650,52747697,52747744,52747855,52747902,52747949,52748193,52748297,52748344,52748391,52748493,52748537,52748581,52748631,52748737,52748786,52748831,52748875,52748983,52749024,52749071,52749119,52749308,52749356,52749404,52749452,52749500,52749548,52749667,52749716,52749839,52749886,52749933,52750001,52750107,52750152,52750197,52750242,52750337,52750378,52750417,52750467,52750517,52750567,52750669,52750711,52750764,52750817,52750867,52750916,52751031,52751074,52751153,52751200,52751246,52751339,52751385,52751431,52751477,52751574,52751620,52751667,52751714,52751809,52751854,52751899,52751944,52751989,52752034,52752079,52752190,52752235,52752276,52752363,52752413,52752463,52752513,52752615,52752657,52752889,52753892,52755088,52755214,52755258,52756073,52757255,52757543,52757591,52758297,52759460,52759896,52760406,52761600,52762860,52763615,52764459,52765381],\"sizes\":[2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1303,1255,1070,979,1610,1108,1477,1597,1100,1002,775,942,953,941,1018,752,912,981,946,956,861,951,807,893,947,836,794,893,808,1261,899,975,919,1133,1126,1023,1286,1073,876,1042,1284,1299,1254,1408,573,509,578,630,589,597,995,924,842,834,523,563,740,681,650,1164,789,655,637,757,671,848,847,846,972,625,633,500,570,593,735,690,877,709,713,842,910,1179,759,907,956,907,839,841,860,855,667,904,952,972,838,619,359,557,877,958,373,645,954,656,683,556,626,654,898,905,762,672,707,575,1742,1742,1439,1469,1482,1508,1531,1521,1512,1528,1510,1591,1735,1823,1950,1989,2000,2016,1996,2005,2020,1992,1913,1806,1794,1859,1931,1879,1972,2014,1959,1855,1844,1798,1741,1735,1749,1801,1817,1883,1952,1967,2014,1997,2005,1897,1673,1535,1485,1502,1533,1504,1524,1483,1485,1446,1438,1421,1717,1862,1281,1268,1259,1249,1300,1304,1375,1307,1233,1308,1241,1213,1394,1383,1469,1406,1431,1413,1422,1518,1544,1462,1514,1540,1557,1629,1654,1555,1611,1557,1598,1542,1505,1497,1681,1704,1555,1718,1647,1353,1357,1386,1309,1256,1259,1279,1240,1176,1170,1213,1154,1166,1214,1223,1310,1251,1433,2005,1052,1096,1162,1127,1011,947,1078,1136,1126,1181,1111,1229,1179,1360,1402,1491,1542,1627,1557,1565,1619,1475,1392,1538,1591,1523,1572,1512,1361,1487,1287,1343,1390,1234,1308,1451,1473,1530,1507,1484,1441,1284,1187,1084,1031,1037,1033,1135,1217,1073,863,1041,1089,914,925,982,1078,2022,1543,1572,1591,1589,1590,1614,1670,1599,1590,1615,1689,1664,1429,1525,1593,1538,1617,1757,1642,1513,1642,1529,1462,1464,1531,1639,1474,1499,1529,1581,1556,1534,1548,1612,1573,1644,1665,1687,1608,1542,1590,1679,1563,1510,1281,1238,1562,1523,1495,1406,1609,1628,1682,1742,1588,1485,1584,1950,1488,990,1108,959,1084,1137,1058,1180,992,1017,1136,1129,1186,1078,1088,1107,1186,1181,1212,1213,1245,1275,1322,1304,1182,1187,1081,1068,1005,1001,1025,1068,1053,889,913,961,940,1011,1008,1050,1033,1036,1050,997,895,1048,968,1043,1014,1095,1151,1109,1132,1059,990,971,871,1457,1851,1270,1274,1259,1267,1291,1297,1364,1318,1226,1306,1253,1140,1289,1307,1398,1300,1322,1311,1368,1474,1630,1627,1597,1414,1334,1385,1552,1554,1748,1689,1624,1440,1283,1381,1428,1475,1453,1516,1499,1368,1352,1374,1323,1242,1256,1286,1248,1162,1188,1216,1173,1180,1210,1212,1325,1259,1448,2031,1560,1599,1592,1625,1616,1546,1543,1620,1563,1573,1613,1709,1746,1820,1807,1754,1508,1678,1614,1764,1878,1810,1759,1886,1845,1803,1885,1846,1744,1829,1682,1710,1778,1664,1658,1778,1636,1849,1865,1720,1404,1373,1360,1269,1367,1520,1494,1454,1534,1550,1510,1503,1594,1469,1437,1473,1501,2045,950,834,780,909,924,754,688,939,816,841,786,818,975,1129,1259,1210,1314,1278,1340,1448,1504,1587,1534,1669,1579,1659,1595,1609,1637,1613,1597,1503,1493,1470,1508,1570,1523,1439,1472,1429,1376,1342,1235,1174,1227,1158,1161,1003,982,1049,1053,973,946,1013,1007,918,764,1683,1873,1878,1851,1888,1834,1800,1828,1857,1805,1745,1612,1549,1373,1762,1971,1873,1818,1906,1854,1873,1908,1923,1848,1698,1648,1573,1438,1682,2014,1714,1821,1891,1913,1877,1792,1745,1534,1436,1513,1576,1611,1653,1941,1645,2007,1880,1744,2015,1741,1865,2033,1517,1284,1636,1531,1457,1783,1790,1364,1481,1630,1518,1488,1972,1482,1363,1681,1558,1549,1787,1942,1674,1678,1699,1773,1747,1757,1730,1782,1835,1813,1847,1886,1734,1765,1782,1801,1833,1830,1800,1857,1842,1784,1763,1759,1762,1785,1743,1750,1811,1722,1754,1755,1830,1779,1782,1757,1748,1702,1696,1733,1767,1728,1705,1648,1723,1853,1899,1837,1839,1799,1854,1921,1859,1785,1710,1646,1699,2048,1936,1918,1908,1946,1915,1911,1900,1914,1889,1870,1921,1913,1808,1814,1746,1769,1755,1837,1809,1814,1799,1817,1848,1842,1820,1760,1731,1707,1582,1560,1663,1734,1811,1767,1736,1741,1691,1722,1709,1730,1760,1770,1814,1754,1777,1919,1898,1961,1844,1804,1843,1904,1916,1926,1889,1911,1846,2048,1980,1942,1984,2005,2002,2009,1990,1953,1930,1911,1985,1999,1981,1939,1884,1925,1996,1956,1982,1982,2028,2022,1933,1929,1927,1894,1930,1835,1704,1778,1803,1901,1918,1936,1959,1975,1972,1980,1932,1908,2010,1929,1805,1843,1869,1859,1863,1811,1794,1801,1869,1818,1723,1696,1581,1505,1453,789,1905,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1541,1466,1354,1539,1500,1572,1427,1440,1321,1187,1320,1502,1400,1188,1297,1433,1536,1400,1480,1445,1379,1338,1480,1486,1437,1487,1492,1478,1455,1491,1531,1524,1594,1470,1574,1516,1571,1513,1477,1422,1575,1577,1431,1442,1379,1628,1670,1645,1634,1595,1521,1613,1696,1594,1531,1638,1524,1921,1492,1039,1145,1092,1117,991,1041,1094,1068,1144,1107,1123,1229,1332,1364,1465,1508,1572,1585,1526,1629,1566,1400,1401,1604,1581,1507,1553,1417,1434,1390,1307,1329,1363,1243,1404,1452,1524,1522,1498,1507,1330,1217,1170,999,1063,1018,1187,1166,1188,983,871,1056,965,935,953,1011,1564,1722,1077,1103,1136,1107,945,1028,1050,1072,1143,1217,1248,1309,1182,1493,1556,1514,1495,1518,1461,1619,1602,1501,1452,1626,1631,1387,1533,1503,1563,1642,1681,1843,1910,1853,1559,1774,1822,1754,1496,1672,1276,1436,1337,915,1082,1106,1094,1118,1190,1058,883,1048,1004,896,939,970,1289,2028,1512,1546,1530,1552,1565,1472,1486,1531,1500,1503,1570,1648,1726,1781,1772,1717,1489,1679,1586,1724,1883,1767,1680,1873,1747,1765,1880,1717,1615,1853,1683,1677,1768,1523,1566,1723,1591,1834,1824,1690,1369,1373,1331,1254,1347,1449,1479,1439,1452,1475,1449,1457,1530,1397,1373,1421,1449,2045,1714,1657,1667,1742,1785,1727,1740,1787,1793,1830,1821,1896,1777,1761,1795,1780,1814,1816,1829,1784,1887,1801,1758,1771,1767,1744,1791,1680,1760,1806,1752,1752,1782,1840,1773,1751,1752,1707,1736,1707,1721,1732,1723,1704,1613,1838,1858,1901,1844,1808,1822,1882,1882,1853,1777,1690,1587,900,1793,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1603,1231,1395,1393,1457,1547,1536,1428,1474,1465,1482,1425,1461,1448,1329,1332,618,968,1130,1421,1612,1694,1822,1831,1887,1864,1823,1731,1721,1740,1755,1844,1877,1879,1814,1838,1822,1807,1576,1287,1052,1068,1250,1301,1102,1411,1257,1111,1268,1253,1418,1481,1479,1475,1377,1415,1400,1707,1838,1434,1437,1499,1553,1462,1512,1534,1415,1469,1552,1632,1444,1497,1648,1677,1641,1741,1796,1638,1722,1662,1568,1556,1485,1571,1632,1562,1597,1619,1632,1587,1551,1548,1636,1623,1624,1626,1601,1529,1548,1610,1656,1599,1481,1176,1388,1482,1477,1373,1445,1504,1580,1610,1587,1418,1405,1610,2004,1356,1379,1375,1432,1348,1391,1476,1403,1437,1404,1507,1369,1165,1530,1532,1541,1577,1670,1592,1567,1599,1465,1459,1492,1563,1548,1501,1446,1531,1559,1501,1482,1511,1593,1539,1573,1548,1609,1569,1519,1526,1522,1389,1305,1021,1024,1361,1390,1307,1280,1469,1483,1522,1553,1336,1281,1424,2040,1650,1657,1654,1737,1763,1717,1774,1683,1674,1726,1815,1765,1472,1589,1657,1620,1660,1812,1732,1579,1696,1607,1536,1536,1601,1717,1560,1550,1568,1629,1649,1626,1607,1677,1667,1740,1729,1784,1665,1619,1634,1719,1608,1555,1303,1356,1717,1686,1609,1555,1701,1752,1784,1851,1706,1602,1664,1976,1122,544,608,684,665,711,753,963,1015,1084,908,978,1462,1480,1631,1650,1201,1435,1480,1720,1701,1737,1566,1694,1642,1767,1622,1703,1454,1737,1724,1748,1707,1737,1694,1653,1694,1739,1738,1719,1677,1389,1418,1238,1182,1300,1485,1286,1176,1295,1310,1443,1567,1520,1496,1563,1623,1231,1703,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2057,2048,2016,2023,2047,2048,2054,2048,2054,2053,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2044,2012,2048,2049,2048,2048,2048,2050,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2051,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2041,2013,2033,2046,2057,2048,2048,2049,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2049,2008,2031,2049,2054,2048,2056,2052,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1920,1255,1376,1263,1127,1087,987,1090,1178,1081,1141,1106,1253,1089,1140,1148,967,1193,1154,1211,1170,1132,1217,881,844,916,986,943,888,768,971,822,784,607,338,336,334,1301,1266,1486,1437,1467,1441,719,1112,1097,889,904,842,1387,1286,1457,1334,1102,1022,1068,1086,1158,1165,1039,1092,1240,1092,1222,1060,1050,1134,1191,1170,1217,1115,1213,960,907,957,980,932,745,894,836,853,1005,546,337,346,520,1168,1301,1458,1406,1403,1286,966,1192,858,898,863,1020,2048,62,48,49,62,87,121,164,203,174,210,234,254,446,874,1010,976,1043,1359,1602,1598,1636,1630,1696,1762,1768,1678,1532,1550,1586,1724,1652,1734,1781,1704,1628,1648,1584,1629,1623,1284,940,987,872,637,340,221,154,119,111,160,148,73,69,45,45,45,42,1758,667,171,179,223,267,302,444,335,396,484,332,325,559,791,966,894,1126,1133,1500,1688,1755,1814,1775,1849,1813,1811,1652,1685,1708,1819,1858,1850,1875,1855,1749,1883,1888,1869,1844,1706,913,978,890,793,597,483,327,342,349,400,409,265,176,159,222,243,149,1304,1767,1271,1400,1202,1242,1387,1379,1347,1400,1318,1430,1494,1457,1370,1462,1432,1449,1505,1393,1573,1390,1352,1375,1406,1349,1135,1168,1335,1319,1352,1374,1393,1228,1293,1440,1346,1310,1333,1461,1539,1411,1525,1368,1384,1388,1445,1422,1488,1374,1309,1394,1289,1393,1394,1286,1195,1145,1516,1324,1398,1684,923,1163,1566,1130,1164,1820,929,1035,737,1992,584,45,45,45,768,908,1093,1090,1357,1587,1298,1623,1838,1791,1652,1698,1676,784,1222,1551,1759,1809,1802,1757,1811,1810,1724,1588,1668,1687,1907,1831,1881,1845,1801,1752,1904,1852,1873,1876,1752,1617,1583,1520,1771,1362,1258,1328,1260,1241,1059,953,862,412,48,47,45,620,732,970,795,737,1131,1431,1329,1181,920,953,465,950,675,721,697,741,926,876,823,876,912,972,828,810,767,917,902,959,913,915,687,771,611,659,748,809,707,750,914,897,697,819,818,827,876,697,855,964,866,851,830,823,830,987,754,818,1460,1513,1464,1499,1640,1611,1555,1509,1716,1415,1528,1513,1659,1585,1440,1742,1381,1468,1448,1661,1590,1501,1603,1432,1636,1887,1432,1494,1290,1116,1217,1301,1379,1128,1109,1204,1097,1126,1229,1239,1309,1134,820,860,673,1869,1517,1406,1464,1387,1293,1374,1196,1184,1350,1334,1257,1140,916,897,658,872,1875,1504,1512,1486,1422,1336,1333,1195,1199,1337,1309,1209,939,822,719,670,1798,1481,1494,1426,1498,1329,1274,1405,1169,1296,1383,1318,1202,1083,947,878,656,928,1886,1451,1492,1416,1460,1518,1490,1419,1219,990,849,752,841,874,852,1602,1542,1497,1418,1462,1323,1213,1379,1162,1299,1370,1294,1186,1012,957,813,650,1482,1783,1474,1377,1178,1214,1449,1437,1374,949,993,1348,1736,1566,1571,1392,1275,1120,1515,1429,1261,1041,1266,1271,1335,1020,1047,1780,1716,1815,1829,1707,1645,1331,1815,1921,1838,1676,1895,1888,1392,1199,1298,1364,1414,1396,1936,1408,1348,1316,1349,1470,1465,1497,906,930,1064,1848,1063,825,895,1640,1421,1316,1653,1657,1504,1714,1734,1828,1213,1500,1726,1521,1579,1855,1836,1746,1200,1558,1713,1546,1727,1906,1886,1550,1262,1636,1698,1569,1798,1910,1920,1405,1345,1664,1722,1544,1710,1901,1919,1439,1382,1601,1732,1510,1665,1857,1926,1397,1341,1663,1637,1505,1735,1792,1802,1189,1511,1732,1523,1595,1764,1771,1573,1258,1618,1682,1515,1686,1782,1909,1277,1398,1692,1543,1573,1795,1839,1610,1616,1533,1639,1595,1492,1668,1634,1562,1493,1602,1447,1595,1624,1502,1571,1427,1517,1512,1325,1578,1469,1217,1111,1142,1341,1332,1130,1280,1655,1574,1336,1296,1346,1390,1476,1194,1415,1084,1375,1887,109,49,45,45,45,78,380,654,752,826,920,993,966,1059,925,1119,1132,1272,1351,1197,1273,1347,1167,1203,1158,976,1228,1056,1188,1167,1020,941,953,827,639,713,692,405,45,45,42,49,45,1042,1059,746,769,1082,1222,1322,1022,986,1030,1017,773,683,777,979,972,1085,1185,1119,1171,1260,1274,1191,1366,1348,1320,1373,1313,1337,1224,926,829,601,538,516,764,875,779,815,881,990,1013,877,964,1184,1788,1187,1285,1382,1413,1475,1474,1623,1712,1785,1821,1812,1801,1710,1767,1654,1636,1768,1641,1666,1621,1660,1599,1448,1613,1700,1624,1549,1569,1590,1569,1431,1232,1055,1314,1625,1520,1601,1567,1485,1343,1413,1458,1907,921,713,1031,1129,1126,1276,1380,1333,1241,1534,1460,1305,825,872,1122,1290,1418,1252,1239,1232,1117,1189,1157,1246,1332,1188,1271,1437,1291,1258,1355,1381,1326,1306,1263,1246,1194,1039,992,1106,1139,1269,1145,1546,926,1446,1548,904,1435,1062,1624,1320,1821,1585,730,891,1388,2056,802,883,744,1059,1049,1047,974,1019,1152,1303,1479,1666,1632,1685,1553,1314,1433,1513,1632,1609,1669,1642,1645,1602,1580,1478,1541,1527,1820,1830,1873,1831,1749,1786,1533,1418,1362,1373,1341,1293,1134,653,874,1162,1122,1066,1045,1088,982,675,1513,931,1009,1031,979,950,1043,1000,982,1016,952,1029,1006,1007,956,997,978,998,955,1007,1006,1022,1009,938,1012,1023,1016,948,1016,1011,999,966,1007,1017,988,981,974,1149,951,856,1103,883,1110,1191,1420,678,666,593,766,648,657,631,693,1087,1067,1000,842,807,824,809,812,843,941,854,902,952,796,877,845,987,941,971,1018,952,826,594,670,709,683,709,946,871,817,931,806,774,851,844,989,761,1530,1808,1819,1808,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1900,1843,1704,1751,1724,1720,1748,1922,1897,2056,508,48,49,45,44,45,48,49,45,44,45,48,150,777,1030,1437,1395,1548,1569,1428,1512,1539,1590,1674,1694,1756,1747,1677,1717,1625,1667,1624,1621,1570,1609,1441,1290,1298,1141,1160,908,472,335,219,140,45,50,47,45,44,45,50,47,45,44,45,50,1313,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,1386,1225,1190,1217,1233,1102,1155,1135,1205,1214,1269,1313,1195,1321,1259,1456,1712,1570,1540,1379,1382,1493,1590,1440,1374,1601,1607,1560,1494,1486,1553,1446,1371,1406,1466,1458,1494,1275,1216,1320,1294,1270,1159,1069,858,1051,1037,1111,981,822,710,739,822,682,610,631,571,1839,1686,1155,1105,1164,1017,1176,1325,1324,1172,1226,1163,1248,1342,1257,1584,1521,1772,1776,1676,1759,1772,1595,1481,1564,1503,1363,1577,1623,1486,1455,1633,1554,1644,1497,1698,1536,1374,1293,1352,1237,1101,1143,1054,993,1051,922,981,1043,1031,1050,904,853,655,580,444,438,367,1335,1408,700,709,649,670,671,680,707,646,670,643,689,706,1194,1579,1506,1558,1572,1665,1613,1551,1518,1444,1086,839,1251,1460,1448,1553,1519,1441,1509,1425,1327,1111,986,1170,1419,1518,1475,1467,1510,1390,1236,938,685,657,679,689,668,687,695,701,693,656,656,706,1146,1793,678,646,656,695,688,681,640,651,716,684,675,650,816,1403,1634,1598,1634,1706,1696,1585,1508,1427,1368,1341,1380,1264,1289,1336,1329,1308,1265,1279,1146,1665,1683,1616,1606,1678,1597,1535,1381,1056,999,771,764,647,673,677,664,696,663,646,654,682,695,633,788,1739,1486,1784,1221,1745,1830,1194,1765,1785,2056,461,415,517,636,657,766,884,860,1000,1108,1055,1146,1389,1520,1557,1572,1579,1540,1478,1469,1437,1453,1431,1435,1558,1459,1454,1373,1369,1287,1414,1412,1454,1614,1589,1525,1412,1245,1095,1227,1285,1216,1268,1200,1179,1110,982,981,1036,1060,987,963,852,829,712,577,336,1623,868,346,518,568,634,712,847,873,911,1004,1021,1153,1243,1365,1542,1642,1679,1728,1651,1622,1474,1428,1353,1298,1320,1411,1435,1451,1444,1442,1483,1400,1456,1446,1435,1433,1571,1691,1620,1496,1286,1278,1214,1242,1192,1163,1244,1205,1045,1089,1015,922,885,805,651,636,495,1251,1343,373,462,649,686,720,797,837,938,1098,1057,1061,1442,1543,1471,1476,1563,1494,1448,1234,1304,1341,1361,1333,1408,1420,1447,1334,1292,1371,1391,1378,1304,1311,1309,1302,1402,1510,1532,1608,1407,1463,1387,1337,1198,1241,1226,1144,1141,1061,1039,975,896,912,742,682,473,762,1630,1659,1622,1744,1458,1755,1825,1324,1614,1477,1470,1628,1563,1048,1423,1609,1627,1813,1311,1640,1542,1527,1995,2048,1959,2048,1997,1963,1959,2048,2025,2007,2043,1798,1097,1752,1832,1689,1375,1697,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2041,1209,954,784,790,896,991,1045,826,790,1014,815,948,794,866,843,826,1023,845,798,884,832,1329,1002,920,897,990,1113,1086,1069,1043,706,647,1089,1248,1312,1250,1507,512,587,636,613,577,545,1062,1003,1035,813,518,555,843,520,737,942,833,698,590,751,668,653,1180,777,1084,642,751,523,553,535,708,771,811,841,627,666,925,1111,903,953,836,952,947,550,1005,653,901,1018,894,768,792,983,270,607,765,1043,407,552,788,726,643,568,652,665,943,752,787,641,654,612,858,1892,1676,1580,1464,1417,1393,1456,1546,1978,1751,1780,1578,1439,1455,1399,1484,1540,2048,1630,1598,1717,1663,1615,1613,1744,1740,1809,1756,1721,1739,1441,1209,1231,1272,1617,1610,1651,1768,1772,1728,1707,1692,1768,1742,1689,1698,1691,1772,1746,1757,1721,1748,1739,1769,1701,1782,1698,1597,1604,1546,1324,1331,1299,1480,1508,1552,1644,1629,1589,1704,1503,1510,1650,1618,1584,1971,1627,1455,1483,1541,1510,1459,1536,1509,1432,1499,1594,1634,1415,1555,1688,1669,1692,1799,1748,1653,1728,1585,1582,1555,1535,1597,1620,1593,1607,1622,1615,1593,1544,1561,1603,1665,1577,1649,1548,1576,1590,1649,1610,1581,1382,1142,1461,1508,1452,1352,1468,1510,1582,1614,1517,1405,1479,1819,1718,1215,1209,1230,1236,1247,1258,1245,1267,1266,1298,1283,1532,1300,1292,1290,1307,1311,1315,1304,1225,1264,1273,1266,1241,1290,1214,1240,1270,1269,1228,1209,1180,1223,1229,1215,1230,1228,1255,1244,1256,1235,1267,1300,1299,1533,1314,1265,1294,1318,1317,1297,1285,1232,1296,1275,1248,1449,2049,1715,1769,1796,1791,1781,1789,1783,1756,1768,1786,1723,1746,1688,1730,1647,1615,1651,1581,1629,1635,1652,1636,1653,1711,1702,1720,1777,1723,1797,1723,1781,1749,1748,1752,1610,1661,1710,1637,1705,1605,1654,1701,1699,1685,1682,1774,1722,1771,1757,1741,1740,1740,1744,1743,1765,1742,1770,750,1435,1922,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,860,736,559,578,602,610,623,672,622,535,589,752,1348,457,565,652,586,429,366,418,1242,1652,1421,1048,1030,1255,1134,1060,1650,1248,1164,1099,1720,1478,902,903,1173,352,442,461,489,531,435,444,318,350,275,298,305,930,2012,1558,1829,1527,1729,1351,1114,1172,958,1227,1162,1011,1144,872,1141,1132,537,1189,1221,1091,1072,1234,828,1194,932,947,1225,944,1165,653,1012,936,961,1277,820,1144,933,1123,1074,1113,1323,966,1088,1117,906,1076,710,836,312,311,439,1011,911,926,877,1637,919,1842,932,2034,1689,1519,1479,1595,1610,1583,1615,1636,1674,1616,1644,1668,1668,1641,1634,1639,1604,1617,1666,1731,1709,1689,1748,1765,1754,1680,1712,1746,1803,1783,1827,1890,1891,1887,1884,1896,1863,1775,1799,1821,1815,1842,1778,1825,1806,1784,1667,1507,1604,1629,1603,1534,1429,1561,1604,1654,1638,1865,1817,1422,1430,1490,1555,1456,1516,1542,1413,1478,1530,1623,1445,1476,1667,1670,1631,1742,1796,1655,1719,1649,1583,1559,1494,1580,1635,1552,1611,1617,1638,1585,1533,1548,1628,1630,1608,1629,1594,1544,1555,1613,1631,1607,1456,1140,1414,1495,1482,1363,1441,1497,1572,1599,1583,1424,1414,1622,1858,555,625,579,605,705,720,658,901,958,1034,1098,938,1222,1260,1316,1291,1293,1354,1364,1375,1469,1447,1383,1394,1543,1515,1428,1408,1415,1215,984,1014,897,1258,1302,1283,1175,1082,1001,963,1048,996,774,975,958,914,704,880,889,740,348,788,674,621,702,560,566,2018,856,744,816,883,964,1094,1072,1117,1103,1140,1054,886,829,734,1154,1324,1381,1443,1468,1490,1488,1482,1276,1571,1565,1599,1502,1548,1650,1713,1689,1612,1492,1567,1523,1568,1497,1475,1380,1273,1299,1195,1011,967,1082,1037,1132,1104,1174,1229,1212,1038,936,784,816,804,753,707,1408,1717,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2025,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1615,1329,1275,1138,854,328,558,1095,978,1076,1081,1050,667,1005,1529,1581,1301,1439,1326,1361,1368,1035,1196,1192,967,1687,1273,1350,1319,1205,1211,1197,1131,1252,1405,1432,1440,1323,1299,1252,1263,1478,1520,1641,1586,1598,1568,1563,1546,1584,1554,1518,1487,1498,1419,1390,1341,1446,2048,2048,2048,2048,2048,2054,2056,1895,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2017,1997,1910,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1566,1321,1441,1391,1362,1367,1440,1460,1488,1663,1683,1551,1439,1444,1305,1517,1637,1720,1758,1654,1631,1518,1446,1549,1633,1644,1673,1635,1609,1547,1454,1578,1926,2049,2048,1973,2048,2025,2032,2048,2012,2015,2048,1994,2048,2021,2023,2048,2056,2046,2048,2056,2020,2019,1840,2048,2049,1991,1553,1561,1585,1618,1560,1602,910,219,214,209,226,213,384,219,214,242,220,220,1132,1951,1278,1256,1395,1272,1078,1229,1135,1262,1176,1207,1279,1108,1300,2000,1748,776,1256,2048,1305,626,1578,2048,956,723,1972,1655,727,1138,958,922,922,922,934,946,947,595,960,791,742,976,974,1107,906,968,893,821,995,1028,1023,1034,1073,1008,838,1217,961,1102,1283,688,779,438,387,1000,1041,1017,920,517,334,336,336,414,363,508,520,887,1228,1128,950,1247,1377,1548,1540,1300,1395,992,1234,1545,1348,1262,1165,1221,1431,1434,1521,1522,1093,1035,1196,1286,1434,1403,1553,1520,1072,1209,1091,1293,1490,1421,1574,1444,1104,1142,1121,1428,1376,1499,1519,1320,1083,1178,1148,1442,1453,1519,1498,1008,1257,1170,1365,1299,1372,898,637,607,618,669,658,685,633,638,965,959,841,732,661,946,995,808,644,919,862,907,513,640,759,604,749,849,706,817,666,819,489,683,653,427,743,612,679,752,570,835,623,440,582,745,716,508,482,673,435,436,487,555,642,806,420,471,868,910,1098,1063,570,521,485,750,713,918,660,634,622,635,1025,1061,1047,1090,479,573,827,755,636,605,679,822,703,435,539,783,699,910,782,1111,610,858,793,827,905,881,834,895,882,871,843,843,941,737,799,870,817,838,823,1034,681,925,988,978,962,974,966,951,946,960,976,966,949,965,958,939,828,1174,793,813,507,808,936,843,818,818,817,719,829,854,893,681,816,711,769,782,692,620,921,1222,719,753,1687,1750,1748,1865,2005,1907,2048,2048,2048,1673,1339,1784,1772,2048,2028,1861,1823,2048,1869,1763,2048,2048,2048,1893,1769,2051,1880,1760,2049,2003,1801,1866,1222,1114,535,661,632,1891,2048,1927,1485,1375,1202,1124,1439,2026,1720,1224,1273,1087,1237,1584,1515,1361,907,487,122,643,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2057,2057,2048,1978,1909,1433,2048,2048,2048,2048,2048,2057,2057,2038,373,351,2019,2041,2048,2057,1944,1368,1904,2019,2034,1872,2045,2048,2048,2048,2048,2017,1886,2048,1943,2007,2056,2000,2057,2055,2022,2051,2049,2024,1751,1475,1756,1898,2048,2048,2048,2048,2048,2048,2057,2048,1091,988,1183,1362,1160,1259,1637,1503,942,1440,1167,1332,1049,1102,1072,1068,1050,1447,1751,1888,1908,1894,1900,1923,1601,1149,977,1106,1187,1531,1066,1025,1123,1046,1122,1086,978,1317,1187,1349,1048,2032,2037,1971,2048,2034,1973,2031,1976,2048,2047,1975,2028,1977,2048,2040,1974,2032,2048,1969,2030,1985,2046,2048,1977,2048,2008,2039,2036,2048,2039,2046,1988,2048,2048,1970,2057,2048,2014,2035,2048,1980,2057,2028,1978,2048,1976,2048,2049,2048,2056,1976,2056,2047,2055,2048,2048,2056,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1897,2048,2048,2048,2048,2048,2048,2048,2048,1898,2048,2048,2048,2048,2048,2048,2048,1891,2048,2048,2048,2048,2048,2048,1898,2048,2048,2048,2048,2048,2048,2014,2050,2048,2048,2048,2048,2048,2048,2048,1892,2048,2048,2048,2048,2048,2048,2048,2048,2048,1578,1850,1645,1654,1820,1175,1033,1948,1986,2055,1996,2043,2002,2029,1827,1988,2019,2051,1970,2025,2032,1291,1452,1338,1585,1333,1924,1119,1177,1141,854,1559,1500,1497,1488,1387,611,706,701,720,695,679,646,571,508,573,522,1442,1827,1676,1700,1692,1685,1939,1718,1748,1764,1117,1069,1798,1652,1526,1482,1491,754,504,269,422,410,449,292,618,1840,1696,1685,1692,1850,1784,1798,1475,1531,1595,1483,1477,1515,441,543,503,487,402,368,513,490,433,1241,1801,1675,1665,1671,1778,1816,1797,1740,1174,1689,1650,1475,1475,1494,1481,772,624,644,576,529,548,571,495,581,504,572,394,379,1139,1918,1694,1671,1681,1677,1692,1881,1819,1710,1697,1763,1058,1434,1700,1696,1488,1482,1485,1077,585,573,615,557,590,604,594,556,587,532,537,1538,1825,1684,1673,1664,1683,1778,1840,1710,1693,1692,1064,1134,1753,1636,1514,1491,1491,1268,583,553,560,481,405,587,566,597,450,356,504,1351,1767,1694,1686,1663,1660,1892,1706,1734,1680,1384,935,1842,1648,1508,1486,1099,360,528,413,429,513,489,457,788,1814,1633,1689,1666,1838,1683,1696,1407,1421,1562,1477,1477,1458,1487,1481,1314,673,615,510,573,703,466,645,651,577,588,723,705,634,747,676,616,628,628,616,449,1052,1994,1697,1672,1706,1677,1658,1696,1725,1711,1683,1922,1787,1755,1712,1698,1836,1816,1780,816,717,1002,1813,1815,1678,1805,1558,1471,1473,1466,1458,769,432,444,527,585,621,586,606,493,462,590,469,557,566,1028,1975,1691,1694,1683,1689,1691,1678,1949,1725,1761,1780,1793,1313,673,1384,1967,1658,1717,1524,1481,1489,1467,1418,620,638,669,600,627,580,497,573,694,597,417,501,429,531,461,1963,1777,1677,1686,1697,1695,1707,1778,1910,1700,1721,1782,1795,1433,779,1615,1857,1764,1532,1494,1497,1479,1349,543,558,612,618,615,559,544,237,241,183,241,204,253,1692,1944,1727,1688,1705,1723,1731,1707,2022,1782,1750,1788,1799,1734,1008,1658,1610,1573,1449,972,698,627,705,632,1734,1689,1775,1689,1327,1560,1455,1475,1108,562,572,572,510,449,485,434,516,1251,1774,1661,1678,1653,1867,1681,1686,798,1738,1678,1451,1475,1464,1246,564,597,633,550,565,580,577,412,608,539,575,1891,1665,1681,1675,1684,1706,1833,1667,1768,1720,716,1654,1803,1537,1471,1454,1162,561,579,320,504,521,456,296,283,435,541,1907,1678,1692,1673,1631,1728,1808,1740,1661,1395,902,1853,1669,1459,1451,1434,822,312,373,296,405,469,443,333,311,431,390,446,1846,1632,1636,1651,1669,1665,1822,1734,1622,1504,1269,1695,1527,1486,1499,482,443,504,602,588,634,606,593,484,1503,1713,1684,1651,1682,1855,1693,1698,1732,860,1811,1611,1473,1482,1468,1346,530,500,561,546,598,599,617,409,476,555,406,509,573,1926,1702,1678,1681,1672,1687,1670,1943,1680,1636,1744,1609,775,1637,1730,1747,1409,1490,1486,1471,1485,1495,1500,1485,1480,844,644,743,646,572,616,575,738,486,622,487,644,707,578,643,639,618,591,365,703,680,671,498,440,536,538,254,275,857,2018,2032,1736,1732,1714,1683,1711,1677,1698,1687,1668,1668,1704,1691,2054,1884,1684,1745,1662,1672,1712,1710,1663,1692,1450,744,813,1592,1874,1842,405,796,874,451,1685,1660,1657,1486,1505,1509,1505,1502,1504,1493,1475,1491,1477,918,668,805,621,682,721,656,727,783,635,622,694,699,580,692,636,796,660,649,581,471,519,503,327,283,377,500,524,458,314,204,179,1371,2048,1936,1769,1698,1690,1703,1671,1679,1696,1715,1648,1682,1664,1670,1693,1709,1919,2048,1764,1749,1728,1733,1737,1655,1676,1640,1652,1715,1727,1299,879,1124,1831,1889,1635,1795,1774,1571,1489,1475,1485,1447,501,522,536,536,484,572,445,465,429,497,123,589,557,1208,1902,1661,1684,1669,1688,1700,1912,1664,1737,1708,1699,1147,1298,1742,1726,1426,1445,1458,1482,1508,1495,1483,1474,1342,593,607,648,584,566,606,677,653,720,591,492,723,609,652,585,728,544,490,612,637,606,409,533,560,1477,2023,1803,1690,1670,1683,1696,1699,1706,1686,1661,1702,1832,2007,1700,1666,1690,1691,1712,1714,1755,1518,867,1241,1774,1643,1519,1636,1647,1510,1467,1476,1482,1486,1496,540,529,488,553,730,580,684,576,702,668,563,462,592,725,670,407,409,1664,1926,1667,1658,1650,1672,1713,1694,1665,1952,1774,1679,1728,1812,1744,1752,1039,1603,1732,1820,1567,1483,1497,1477,1513,1487,1487,1489,1496,1503,1511,1509,1497,673,664,677,538,667,612,476,628,662,617,581,611,607,602,545,574,578,501,521,633,586,393,634,595,603,540,554,516,629,571,556,570,583,490,582,407,466,553,439,607,1471,2051,2040,1952,1709,1713,1710,1708,1719,1682,1717,1703,1713,1716,1720,1695,1717,1700,1712,1721,1704,1972,2048,1797,1698,1734,1704,1708,1691,1728,1738,1670,1750,1711,1780,1440,876,908,851,1075,1694,1650,1619,1636,1580,1564,1326,1138,690,1725,1781,1774,1614,1484,1479,1480,1486,1198,678,656,586,524,457,363,412,489,266,467,537,381,965,1968,1672,1680,1685,1684,1668,1716,1927,1733,1748,1720,1690,908,1747,1771,1496,1462,1480,792,399,533,447,363,285,450,284,936,1811,1672,1680,1676,1886,1709,1706,1491,1504,1615,1463,1474,1462,1468,918,551,580,598,627,542,513,603,643,317,471,450,496,354,1588,1815,1652,1658,1678,1644,1687,1721,1856,1702,1699,1696,1170,470,1166,1370,1417,1604,1517,1480,1288,351,187,446,335,362,309,231,557,1805,1642,1642,1652,1797,1650,1485,1082,1539,1472,1439,1387,555,583,393,502,533,454,1008,1760,1666,1656,1833,1730,1096,1625,1488,1490,1466,1480,1452,1479,1484,774,576,651,655,596,471,491,578,585,306,562,515,599,455,480,379,389,491,300,1098,1918,1789,1663,1684,1693,1691,1682,1653,1663,1658,2031,1712,1741,1756,1735,1680,1669,960,818,1603,1552,1509,1668,1658,1483,1480,1476,1488,619,437,385,539,450,400,337,508,487,473,403,383,359,672,1939,1646,1664,1657,1661,1657,1669,1974,1638,1684,1682,1499,638,1177,1559,1701,1514,1489,1173,523,544,302,173,596,294,823,1733,1705,1684,1863,1778,1744,1079,1675,2048,2056,2051,2050,2054,1621,1581,1519,1389,912,813,844,775,867,824,1614,2000,2000,1942,1984,1536,1090,1388,1209,1474,1188,944,1298,747,925,1111,1184,993,1141,959,1115,1028,953,944,1069,1117,1112,1038,777,996,970,919,940,918,872,1016,879,977,1033,1014,962,1082,1041,936,907,880,936,998,909,979,943,926,974,872,998,1063,965,1007,857,1036,1036,1086,1046,986,981,1119,1092,1122,1153,1120,1135,1082,1120,1085,1169,1142,1153,1059,1098,946,648,1096,1199,1091,951,1113,1192,1118,1035,1127,1052,1028,1043,1074,1263,1117,1066,1024,1115,1169,1079,1179,1105,1207,1098,1055,1159,1159,1176,1163,1073,1180,1244,1120,1074,1202,1129,1460,2048,1355,1072,1078,950,952,981,1120,986,1002,897,1218,1103,816,1051,991,1000,1023,696,804,719,843,1079,1423,1489,1452,1538,1973,2048,2048,1902,1400,2036,2052,2048,2048,2020,1810,2057,1668,1920,2054,2048,2048,2048,2048,2048,2048,2054,2008,2024,2023,2035,2040,2028,1955,1826,1686,1943,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2028,1947,1831,1796,1382,1720,1929,1900,1763,1938,2048,2053,2056,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2004,1525,1019,2032,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2022,1648,1954,2048,2048,2049,1886,1592,1374,1227,1015,714,472,1899,2048,2057,2048,2057,2057,2048,2048,2048,2056,1881,1436,732,2055,2055,2027,1957,1853,1708,1525,1194,879,601,284,238,1914,2056,2048,2049,2051,2048,2057,2057,2048,2057,2057,2054,2047,1993,1822,1620,1497,1316,2032,2057,2048,2048,2055,2048,2048,2056,2048,2048,2053,2044,2027,1928,1709,1471,1053,1148,1811,1862,2023,2048,2056,2056,1952,1688,1301,915,2048,2047,2048,1939,1948,2048,2056,1813,618,63,217,32,694,2048,2048,2057,2048,2048,2055,2048,2041,1890,2049,2048,2048,2048,2011,2048,2048,2048,2048,2048,2048,2055,2048,2048,1987,1527,1991,1995,1556,1599,2048,2014,1603,1301,1519,1872,2054,2057,2055,2048,2042,2037,1865,1452,396,980,2048,2048,2057,2046,2048,2054,2048,2048,2048,2050,2009,1851,1850,1949,1562,1983,2048,2048,2048,2048,2048,2048,2048,2048,1927,2048,2048,2048,2048,2057,2048,2057,2007,1667,1987,1959,1898,1044,2050,2048,2024,1882,1680,2048,2048,2048,2048,2056,2048,2048,2048,2056,1841,1345,1609,1926,1975,2048,2035,2049,2035,2028,2055,2057,2045,2036,2028,2034,1993,1974,2017,2056,2037,2052,2041,2037,2014,2042,2041,2046,2043,2040,2030,1923,1802,1618,1407,1304,1185,1224,1210,1096,1025,1155,1005,1086,872,906,854,801,678,551,454,160,180,140,60,61,1831,2025,2052,2048,2050,1932,1746,1639,1235,825,2048,2048,2048,2048,1891,2048,2048,2048,1976,2048,2048,2048,2028,2036,2048,2057,2048,2057,2020,2048,2056,2046,2026,2048,2045,1967,1888,1846,1715,1757,1661,1880,2053,2057,2032,2057,2048,2052,1866,1927,2055,2048,2048,2048,2056,2054,2042,1918,2048,2039,1949,1579,1870,2048,2048,1580,1793,2048,2048,2048,2048,2048,2048,2048,2048,2026,1935,1709,1503,1442,1286,1178,1460,2048,2048,2057,2051,2046,1897,1723,1120,254,1017,1435,1723,1885,1955,1904,1930,2017,1934,1777,1548,1324,1117,609,389,1546,2010,2034,1496,981,1711,2048,2048,2048,2048,2048,2048,2048,2048,1952,2041,2041,1845,1530,1028,1452,2048,1867,1452,1648,2048,2048,2050,2048,2057,2050,2048,2054,1942,1891,1633,2034,1660,1149,1182,2052,2048,2048,2048,2048,2048,2055,1873,1861,2048,2048,2048,2048,2048,2048,1956,1067,1434,1862,2027,2054,2057,2048,1324,1617,1893,1997,2057,2048,2048,2050,2023,1858,1321,1001,820,500,389,239,120,1807,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1307,2056,2048,2048,2048,2048,2048,2048,2048,1098,258,1299,1697,1945,2053,2048,2048,2048,2048,2048,2048,2048,2048,2048,1910,1642,1490,1363,1181,1062,962,904,716,836,988,864,860,1600,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1878,1241,774,660,1500,2048,2048,2048,2048,1473,1751,2034,1774,1279,969,571,780,1068,2057,1887,1199,521,1824,1923,2009,2049,2048,2048,2049,2029,2015,1525,1807,1808,1935,1974,2056,2057,2048,2048,2048,2048,2057,2040,2044,1752,1494,862,745,1561,2056,2057,2048,2048,2048,2048,2048,2048,2051,2002,1741,1453,1088,987,197,408,2048,2031,1976,1922,1800,1690,1750,2048,2030,1783,1598,1254,1771,1744,2030,2048,1933,2052,1020,2057,1664,1889,1907,2048,1652,1905,1368,1440,1114,1635,2004,2029,1996,1986,2006,1992,1914,2048,2056,2039,1701,971,1325,2048,2048,2048,2048,2048,1174,1132,2056,2048,2048,2048,1467,363,1880,2056,2046,2048,2048,2048,2048,1957,2057,2048,1474,2055,2057,1769,2048,2048,1640,2039,2032,1459,1324,1952,1476,760,2050,2048,2057,2052,1281,120,152,1379,2050,2048,2048,2048,2048,2048,2053,1919,2048,2048,1909,2056,2048,1970,2048,2026,2048,2053,2053,2006,1966,1776,1798,1718,1632,1692,1207,1653,1694,1546,1290,1315,2048,1905,1820,1928,2048,2048,2048,2012,1444,1027,719,1466,1878,1345,1716,1811,2048,2048,2057,2048,2048,2048,2048,2056,2050,2041,1987,1780,1583,1398,1168,913,1367,2048,2048,2048,2048,2048,1522,695,2021,2049,2048,1986,1898,2030,2048,2048,2048,2048,2048,2048,2054,1944,1779,1408,752,1033,2048,2048,2048,2048,1322,196,1064,2042,2048,2048,2048,2048,2054,2048,2048,1954,1531,224,590,1405,1964,2048,2048,2048,2048,2048,2055,2057,2057,2048,2056,2000,1895,1782,1781,1714,1544,1413,1275,1254,1205,1033,731,540,569,494,447,480,398,401,450,471,444,553,501,215,385,916,1152,1181,1232,1142,1024,980,862,689,508,269,119,174,1105,1625,1859,2055,2057,2048,2007,1960,1973,1848,2007,1751,2026,1977,1646,1612,2048,2053,2041,2008,2047,2034,2034,2051,2005,1974,2016,2024,1882,2008,2053,2048,2037,1691,1854,2002,1759,1890,2051,1744,1288,1653,2051,2053,1994,1907,1913,1926,1894,1892,2034,2048,2056,2050,1848,2056,2025,1588,1552,1588,1379,1101,429,610,377,495,688,734,1108,1610,1389,1434,1343,1280,1423,1742,1702,1801,1794,1912,2023,2029,2041,2055,2052,2057,2057,2056,2048,2056,2040,1986,1983,1992,1991,1885,1764,1729,1715,1695,1676,1525,1422,1466,1406,1433,1324,1244,1193,1239,1198,1143,1070,950,926,910,1535,1428,1494,1539,1440,1445,1569,1532,1487,1566,1469,1544,1621,1728,1560,1637,1528,1508,1604,1708,1748,1764,1768,1754,1810,1868,1923,1871,1983,1937,1972,2050,2053,2048,2048,2048,2050,2052,2015,1895,1751,1590,1113,1368,1791,1985,2054,2051,2048,1383,182,1042,2048,2048,2053,1403,2048,1059,2056,2053,1615,1531,2048,2048,2048,2048,1527,2048,1963,1586,1267,2048,2048,2048,2048,2057,2048,1974,2042,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2056,2003,2054,2048,2056,2048,2056,2005,1967,2006,2050,2056,2048,2046,2048,2048,2048,2048,2048,2056,1766,1304,2048,2053,2056,2056,2048,2049,2054,1912,1915,1824,1547,1616,1442,1711,1845,1576,1430,1383,1129,898,368,1530,2048,2048,2048,2055,1990,1660,1086,213,921,2048,2048,1971,1641,1429,1740,1850,1054,201,720,1074,370,391,389,343,403,393,383,298,800,903,805,695,550,562,436,448,671,530,692,824,464,648,634,848,937,253,464,514,356,442,1081,616,711,456,392,931,634,829,628,825,1033,804,1183,1045,1264,1253,403,408,462,209,290,409,254,549,620,598,166,316,349,318,157,192,314,178,280,305,246,360,295,201,109,185,238,174,262,823,623,441,409,778,768,895,686,839,1036,729,681,833,305,466,292,331,358,236,433,595,372,319,404,1022,613,1161,671,651,723,797,459,468,633,378,859,1765,1599,1039,1233,1434,1431,1510,830,1021,959,830,911,1145,515,1157,808,1053,580,1034,274,569,552,329,803,355,547,739,700,546,647,528,445,574,1213,1290,915,766,892,1284,919,710,1292,1558,979,1089,864,1163,1114,1446,948,1096,904,1176,816,920,882,973,1034,1145,1103,342,503,249,350,413,199,279,80,326,325,581,441,557,271,566,546,880,825,712,710,806,999,1363,1088,1235,1369,1016,1023,818,502,373,831,940,1032,660,949,390,347,539,623,488,1095,1219,1082,314,557,407,580,470,537,294,537,314,500,454,509,256,674,249,398,749,666,777,293,1418,523,417,652,592,443,725,421,390,539,165,444,543,491,943,742,1150,795,1016,628,469,374,219,251,500,723,666,561,664,531,380,381,479,387,420,398,718,205,312,206,315,258,373,139,223,254,369,113,109,225,115,117,115,115,117,148,175,324,430,285,196,838,845,814,566,1010,839,596,604,568,497,339,1267,1340,1055,1100,1136,1309,1405,1629,1631,1420,1206,808,942,972,1407,1719,1711,1209,1535,1455,1160,1032,613,474,693,296,751,593,817,710,441,422,439,386,379,351,264,542,190,423,192,470,439,334,216,257,209,148,274,475,688,1262,896,734,392,213,461,539,578,398,566,612,213,479,693,1084,868,662,689,439,529,771,491,437,424,746,565,662,614,675,501,226,348,395,431,474,38,37,38,134,210,212,208,279,186,202,187,164,154,373,308,291,349,207,58,998,1209,1177,1217,1124,1172,779,1321,757,398,339,1139,1353,574,1142,1764,1445,1436,1536,1508,1477,1541,1360,1490,1457,1543,1441,1447,1476,1577,1506,1514,1439,1475,1399,1359,1342,1538,1530,1621,1411,1573,1629,1509,1719,1642,1684,1709,1533,1035,926,1074,1122,1221,1933,1710,1761,1732,1679,1702,1727,1704,1725,1736,1676,1731,1760,1779,1755,1696,1561,1695,1683,1650,1664,1714,1695,1740,1688,1692,1675,1647,1678,1655,1575,1607,1646,1925,1559,1734,1670,1607,1656,1654,1736,1731,1825,1818,1822,1836,1832,1781,1695,1788,1652,1798,1804,1840,1758,1658,1784,1841,1695,1790,1792,1763,1712,1655,1639,1621,1719,1673,1666,1615,1591,1595,1658,1650,1647,1720,1697,1709,1672,1724,1697,1777,1704,1634,1757,1710,1716,1721,1654,1630,1714,1689,1625,1635,1595,1622,1553,1472,1528,1531,1611,1147,1060,828,607,961,1323,1457,1477,1288,1106,1174,1206,1149,1384,1358,1239,1320,1265,1296,1149,975,840,738,885,957,668,648,893,1061,1071,1107,1210,1662,1503,1430,1390,1423,1632,1392,1506,1519,1586,1346,1307,1307,1274,602,218,207,249,216,320,904,1307,1354,1140,1605,1629,1303,1399,1629,1208,846,1365,1269,741,1348,1509,1464,1501,1571,1559,1585,1357,1355,1508,1251,1468,1510,1712,1395,1486,1487,1441,1494,1632,1122,1448,1597,1453,1627,1482,1611,1607,1112,1743,1373,1605,1477,1195,1447,1529,1669,1615,1379,1387,1622,1319,1617,1495,1605,1337,1228,1613,1565,1542,1543,1331,1381,1503,1679,1234,1718,1360,1478,1571,1619,1369,1220,1563,1684,1586,1605,1263,1448,1435,1640,1073,1466,1318,1679,1082,1350,1422,1528,1326,1357,1603,1554,1681,1613,1524,1363,1334,1716,1385,1660,1694,1473,1480,1577,1409,1665,1157,1781,1705,1380,1779,1437,1622,1833,1512,1714,1320,1528,1802,1260,1676,1753,1425,1443,1555,1452,1572,1642,1349,1590,1701,1512,1548,1603,1693,1788,1570,1601,1176,1654,1832,1391,1532,1896,1864,1911,1954,2044,2002,2054,2014,2023,2019,2037,2016,2041,2017,2046,2053,2047,2047,1989,1986,2001,2028,2035,2042,2054,2056,2028,2039,2046,2015,2018,2032,2043,2049,2046,2041,2055,2033,2010,2027,1857,2003,2032,2036,2055,2036,2052,2036,2038,2010,1982,2000,1983,1986,2008,1998,2017,2037,2028,2049,2015,2000,1972,1987,1976,2011,1986,2032,2023,2026,2051,2030,1992,1964,2002,2009,1989,1995,2048,2047,2057,2046,2004,1982,1993,2020,2016,2055,2022,2042,2054,2048,2053,2024,2050,2027,2033,2003,2038,2000,2051,2015,1931,1996,1952,1978,1981,2009,1938,1953,1991,1999,1967,1941,2006,1980,1996,1951,1965,1961,1973,1987,1999,1925,1979,1995,1967,1962,2004,1974,1971,1978,1977,2005,1982,1964,1970,1977,1990,2020,1983,2006,1990,1980,1994,1991,2005,1948,2001,1965,1986,1991,1984,1974,1946,1978,1979,2003,1956,2011,1994,1980,2004,2018,1996,2004,2007,1990,1987,1963,1976,2000,1998,1946,1927,1993,2027,1954,1982,2053,2036,1977,1985,2014,2018,1959,2031,1997,2022,2036,2040,2001,2012,2036,2021,2002,1971,1984,2024,2021,2003,1977,1847,1986,2057,2048,2040,1905,1964,1921,1896,1743,1919,1878,1904,1742,1932,1857,1965,2002,1985,1826,1936,1955,1824,1874,1853,1972,1958,1958,1900,1934,1896,1943,1884,1829,2015,1974,1895,1950,1830,1969,1860,1876,1849,1883,1964,1998,1892,2018,1977,1895,1868,1835,1924,1854,1943,1977,1911,1942,2013,1961,1968,1797,1932,1759,1984,1936,1968,1919,1885,1961,1940,1954,1811,2022,1969,1971,1774,1733,1807,1748,1914,1870,1876,1806,1869,1842,1847,1956,1932,1910,1942,1910,1907,1935,1930,1889,1917,1901,1900,1946,1910,2001,1889,1967,1889,1863,1930,1847,1906,1815,1900,1930,1784,1962,1498,1769,1342,1767,1836,1712,1899,1979,1930,1966,1981,1977,1983,1925,1973,2003,1969,1957,2000,1734,1415,1419,1433,1428,1459,1550,1379,1628,1500,1428,1538,1656,1766,1617,1626,1906,2021,1974,1937,2003,1970,1807,1938,1937,2015,1978,1928,1988,1917,1960,1837,1853,1965,2022,2026,1894,2019,1908,1913,1912,1887,1990,1966,2012,1898,2029,1936,1908,1893,1862,1999,1937,2019,1896,1962,1856,1891,1898,1852,1973,1978,1994,1922,1949,1939,1858,1907,1881,1995,2013,1973,1937,2005,1924,1850,1919,1927,1965,1941,1911,1927,1963,1912,1956,1907,1882,1746,1747,1626,1665,1672,1735,1765,1709,1666,1670,1718,1717,1717,1739,1701,1647,1698,1666,1707,1736,1712,1718,1641,1657,1647,1719,1760,1733,1667,1618,1588,1679,1762,1707,1675,1637,1658,1629,1674,1750,1745,1705,1670,1651,1673,1771,1795,1755,1640,1589,1653,1772,1896,1839,1755,1732,1766,1821,1865,1823,1837,1800,1779,1865,1734,1777,1708,1691,1690,1697,1716,1638,1613,1747,1725,1715,1619,1834,1676,1637,1787,1703,1515,1729,1703,1741,1666,1752,1755,1765,1673,1794,1793,1811,1673,1770,1733,1755,1728,1776,1764,1943,1895,1995,2005,1991,1950,1918,1943,1910,2016,1981,1969,2012,1986,1976,2007,1967,2002,1966,1973,1972,1990,2010,1987,1982,1962,1985,1971,1949,1987,2017,1997,1990,1956,1984,1972,1966,1976,1968,1968,1958,1986,1966,1969,1963,1988,1957,1971,1951,1988,1943,1963,1965,1956,1966,1955,1988,1964,1965,1963,1965,1952,1967,1952,1971,1952,1973,1945,1971,1946,1974,1945,1978,1937,1982,1955,1900,1937,1903,1906,1907,1912,1898,1935,1887,1913,1917,1902,1910,1914,1902,1912,1935,1850,1923,1907,1830,1916,1912,1837,1895,1927,1838,1884,1942,1841,1870,1951,1841,1855,1952,1838,1834,1955,1859,1814,1964,1837,1812,1892,1779,1843,1894,1762,1853,1891,1737,1874,1896,1762,1882,1881,1778,1888,1853,1784,1899,1824,1823,1892,1798,1851,1915,1811,1878,1911,1813,1897,1845,1873,1913,1819,1873,1915,1807,1893,1851,1849,1912,1827,1851,1913,1851,1894,1886,1846,1891,1892,1845,1886,1893,1847,1887,1893,1843,1884,1893,1843,1879,1893,1842,1877,1895,1848,1875,1892,1844,1888,1903,1833,1903,1910,1835,1914,1907,1838,1913,1910,1843,1917,1885,1850,1932,1869,1852,1919,1856,1860,1924,1866,1877,1913,1914,1917,1920,1907,1908,1905,1926,1920,1912,1916,1942,1913,1909,1915,1903,1923,1931,1987,1976,1995,1986,1985,1980,2003,1991,1988,1974,1980,1913,1965,1878,1938,1899,1915,1902,1925,1815,1942,1927,1873,1926,1965,1976,1947,1979,1967,1935,1991,1927,1987,1933,1966,1934,1964,1948,1977,1889,1946,1843,1981,1834,1963,1856,1916,1904,1876,1917,1857,1952,1831,1989,1832,1950,1831,1879,1836,1852,1889,1807,1933,1793,1892,1864,1837,1860,1812,1911,1789,1930,1815,1880,1851,2053,2047,2018,2015,2044,1999,2028,2018,2017,2048,2029,2037,2036,2050,2017,1996,1833,1990,2009,2053,2046,2053,2018,2039,2024,2003,2018,2022,2035,2028,2044,2056,2031,2047,2039,2027,1969,1971,2007,2004,2023,2047,2038,1998,2020,1985,1986,1995,1973,1994,2042,2037,2021,2015,2010,2018,1984,1997,1992,1983,1988,2030,2044,2013,2022,2007,2019,1976,2008,1992,1963,1978,2012,2041,2012,2050,2051,2032,1998,2016,2007,2007,1974,2028,2031,2051,2046,2057,2050,2045,2017,2020,2024,2052,2040,2056,2008,2025,1970,1993,1972,2015,1994,1974,2016,1979,1959,2014,1976,1950,1950,1969,1994,2001,1982,2011,1998,1913,1945,1929,1929,1807,1927,2012,1994,1961,2021,1979,2016,1974,1998,1989,1965,1877,1894,1927,1988,1966,1897,1919,1948,1992,1945,1928,1846,1891,1982,1998,1907,1846,1941,1969,1944,1878,1881,1878,1851,1932,1965,1949,1944,1943,1844,1883,1864,1893,1964,1905,1971,1957,1878,1887,1920,1876,1967,1993,1942,1885,1822,1841,1898,1962,1967,1855,1880,1822,1653,1948,1911,1895,1927,1918,1846,1878,1936,1825,1899,1890,1851,1876,1851,1813,1872,1959,1966,1915,1908,1875,1846,1855,1883,1830,1850,1930,1969,1968,1921,1931,1829,1890,1944,1935,2040,2030,2007,1951,1970,2016,1971,2018,1950,1946,1941,2048,2008,1981,1772,1972,2010,2016,1992,1918,1983,2037,2033,1990,1959,1986,1991,2022,2016,1969,1819,1965,1981,1980,2011,1979,2005,2034,2014,1992,2006,1897,2016,2000,1987,1983,2037,2022,1993,1921,1758,1785,1892,2012,2008,1951,2025,2019,1971,1952,1976,1957,1957,1879,1956,1956,1986,1949,2003,1972,2034,1977,1999,1936,1951,1988,1987,1966,1860,1933,1944,1966,1864,1903,1948,1941,1872,1942,2000,1966,1981,2003,2015,2012,2003,2015,1905,1911,1980,1921,1727,1912,1957,1949,1963,1925,1929,2025,1980,1998,1978,1968,1976,2014,1997,1963,2010,1933,1951,1957,1941,1970,1944,1969,1973,1999,2013,2013,1990,1977,1971,2022,1949,1995,1975,1980,1938,1998,1935,1940,1997,1971,1993,1977,1946,1988,2026,1994,1946,1960,1921,2041,1957,1990,1985,1987,2018,1961,1985,2024,1989,1965,2018,1926,2045,1931,1955,1982,1955,2001,1992,1983,1951,1897,1943,1996,1929,1955,1988,1962,1921,1954,1976,2009,1989,1936,1945,1973,1927,2000,1912,1943,1943,1853,1883,1953,1952,1888,1891,1920,1908,1971,1943,1920,1999,1970,1948,2006,1988,1945,2032,1794,1981,1945,2019,2013,1989,2012,2040,2029,1867,2025,1963,2018,2026,2026,2039,2043,2017,1939,2015,1986,2028,2035,2024,2018,1989,2043,1972,2036,1993,2040,2047,2024,2055,2030,2045,1954,2022,1976,2037,2040,2020,2040,2053,2015,1983,2009,1958,2035,2042,2028,2048,2046,2044,1936,1950,1940,1900,1923,2004,1957,1987,2006,1994,2026,2028,1867,2002,1947,2006,1978,2005,1935,1808,1977,1965,1959,1983,1986,1954,1798,1966,1942,1674,1887,1773,1661,1623,1621,1549,1793,1347,1518,1543,1357,1597,1287,1517,1471,1156,1505,1161,1399,1288,1316,1333,1165,1396,1106,949,1576,1428,1133,1243,1377,1270,987,1281,1381,1110,1636,1112,1402,1153,1578,1177,1325,1415,1493,1208,1584,1498,1459,1593,1369,1549,1333,1512,1539,1170,1637,1159,1442,1132,1601,1186,1403,1360,979,1263,1482,1422,1087,1304,1381,1269,991,1316,1409,1210,1511,1120,1341,1115,1654,1204,1480,1471,1360,1535,1448,1559,1447,1576,1535,1228,1456,1491,1387,1280,1551,1263,1351,1164,1609,1208,1432,1308,945,1433,1412,1361,1096,1289,1547,1037,1037,1281,1370,1224,1435,1170,1376,1123,1632,1215,1515,1494,1312,1551,1393,1528,1493,1447,1574,1244,1480,1501,1175,1441,1428,1339,1364,1166,1572,1162,1410,1337,844,1597,1308,1294,1183,1211,1592,848,1215,1367,1167,1497,1050,1351,1276,1392,1313,1237,1412,1493,1231,1637,1473,1484,1573,1286,1659,1310,1516,1523,1259,1648,1144,1396,1232,1445,1346,1320,1406,1077,1047,1534,1439,1130,1242,1400,1418,950,1270,1424,1173,1593,1060,1382,1043,1653,1244,1404,1459,1418,1405,1430,1566,1444,1566,1494,1335,1423,1481,1475,1202,1648,1240,1380,1122,1613,1152,1474,1287,911,1427,1370,1441,1093,1347,1558,957,1108,1341,1283,1254,1485,1188,1362,1168,1602,1259,1481,1494,1357,1460,1426,1579,1537,1556,1567,1255,1525,1556,1307,1064,1646,1230,1341,1108,1567,1197,1334,1341,939,1243,1456,1439,1074,1357,1544,928,1075,1361,1257,1130,1445,1153,1385,1157,1642,1112,1417,1516,1446,1460,1510,1579,1515,1537,1641,1264,1495,1555,1342,1079,1758,1172,1408,1126,1594,1185,1280,1395,1077,993,1553,1475,1134,1263,1394,1291,934,1303,1328,1117,1561,1072,1387,1270,1639,1178,1244,1521,1533,1353,1677,1432,1506,1579,1395,1710,1258,1512,1516,1184,1656,1200,1380,1315,1342,1450,1259,1472,1154,945,1670,1307,1236,1207,1202,1661,804,1260,1449,1225,1626,1086,1343,1224,1485,1421,1324,1421,1488,1239,1688,1512,1526,1588,1407,1696,1334,1574,1508,1180,1644,1265,1444,1312,1302,1476,1262,1488,1205,884,1658,1305,1252,1267,1168,1657,876,1210,1453,1427,1476,1251,1322,1368,1300,1646,1221,1505,1564,1270,1628,1583,1630,1581,1502,1675,1338,1239,1250,1334,1422,1639,1574,1460,1282,1231,1572,1505,1375,1790,1517,1321,1231,1463,1474,1408,1749,1502,1472,1364,1259,1493,1390,1369,1699,1549,1601,1442,1213,1412,1334,1213,1480,1690,1232,1129,1302,1296,1737,1392,1266,1465,1628,1207,1697,1686,1862,1935,1869,1871,1921,1777,1748,1836,1880,1763,1848,1557,1261,1748,1690,1792,1694,1725,1666,1451,672,1416,2000,1986,1807,1546,1081,1422,1833,1658,1789,1746,1881,1722,1682,1634,1897,1665,1796,1891,1894,1848,1676,1725,1956,1753,1989,1760,1946,1958,1971,1915,1887,1723,1521,1910,1818,1886,1901,1797,1658,1749,1546,1718,1745,1679,1595,1681,1575,1412,1700,1812,2024,2012,1957,1932,2001,2025,1988,1949,2020,2036,2012,1962,2004,2041,1967,1991,1921,1957,1939,2010,1948,1965,1978,2019,2010,1994,2010,2024,2029,2014,1982,1844,1996,2048,2050,2039,1992,1902,1894,1673,1921,1909,1928,1902,1925,1905,1909,1901,1889,1907,1930,1860,1921,1966,1913,1911,1910,1874,1895,1341,1744,1957,1723,1461,1473,1264,1602,1695,1627,1619,1853,1526,1580,1599,1582,1500,1532,1625,1673,1570,1266,1310,1679,1591,1264,1416,1957,1836,1762,1757,1784,1684,1822,1877,1710,1657,1685,1747,1607,1623,1859,1714,1285,1500,1712,1461,1425,1239,1410,1752,1509,1209,1152,1492,1628,1222,1622,1972,2010,1968,1989,1971,1906,1822,1544,1879,1905,1886,1575,1827,1981,1872,1876,1896,1753,1742,1804,1710,1876,1509,1427,1752,1441,1357,1590,1607,1412,1769,1397,1755,1406,1710,1597,1867,1479,1757,1512,1772,1465,1501,1590,1494,1881,1263,1255,1301,1823,1845,1790,1716,1361,1445,1702,1738,1569,1450,1648,1658,1613,1627,1577,1546,1705,1581,1358,1580,1430,1705,1640,1379,1617,1493,1645,1657,1473,1273,1580,1559,1185,1335,1373,1228,1346,1309,1561,1190,1254,1455,1342,1382,1340,1374,1323,1594,1590,1572,1919,1488,1466,1842,1857,1841,1901,1568,1992,1762,1529,1987,1644,2001,1215,1854,1892,1481,1711,1711,1702,1636,1577,1479,1614,1496,1556,1456,1594,1584,1549,1543,1452,1597,1546,1509,1436,1600,1474,1802,1869,1910,1866,1839,1709,1494,1480,1587,1532,1940,1928,1888,1884,1890,1866,1918,1956,920,494,642,449,707,621,533,564,700,1893,1978,1978,1956,1934,1959,1976,1954,1940,1651,1669,1605,1644,1760,1590,1702,1575,1741,1543,1561,1622,1478,1507,1490,1380,1475,1362,1635,1511,1261,1149,1433,1367,1587,1481,1413,1386,1561,1451,1598,1432,1391,1374,1403,1426,1418,1387,1479,1818,1771,1820,1874,1892,1886,1787,1747,1813,1661,1734,1774,1833,1813,1746,1719,1685,1061,814,814,822,1550,1702,1655,1646,1693,1607,1592,1634,1665,1765,1656,1703,1651,1655,1831,1798,1881,1285,1797,1527,1780,1524,1793,1450,1694,1899,1723,1817,1846,1862,1583,1851,1865,1706,1047,1066,966,1067,1075,1074,960,1070,1685,1554,1586,1532,1582,1544,1579,1500,1670,1421,1594,1567,1653,1211,1063,1036,1028,1365,1405,1628,1798,1582,1420,1105,1449,1546,1123,1291,1506,1523,1471,1619,1627,1544,1559,1629,1474,1356,825,822,1043,613,974,744,1099,1402,1451,701,571,872,586,827,556,746,726,721,854,500,845,725,913,502,561,806,658,867,502,859,756,939,438,436,913,594,698,283,614,211,266,498,174,581,205,613,164,520,168,164,460,38,586,152,558,212,320,1508,1435,1401,1188,1238,1189,1347,980,1011,989,974,992,977,1017,984,1527,1385,1416,1459,1493,1440,1404,1335,1576,1433,1495,1547,1587,1611,1492,1510,1520,1556,1398,1435,1391,1433,1446,1430,1419,1454,1389,1380,1381,1385,1091,928,947,956,1099,937,936,937,1066,907,948,878,1037,1387,1403,1423,1395,1118,933,935,947,1501,1597,1579,1557,1525,1526,1507,1613,1614,1552,1342,1355,1332,1229,1313,1343,1324,1586,1544,1538,1341,1482,1361,1267,1223,1582,1637,1708,1567,1593,1526,1763,1704,1815,1611,1239,1181,1502,1424,1488,1221,1339,1361,1422,1652,1421,1611,1434,1471,1650,1685,1660,1671,1573,1674,1638,1634,1768,1619,1694,1661,1579,1604,1654,1644,1502,1752,1669,1608,1686,1492,1641,1621,1635,1667,1638,1706,1686,1639,1590,1673,1652,1541,1808,1630,1632,1617,1798,1709,1620,1635,1654,1851,1676,1675,1662,1786,1682,1643,1698,1653,1171,927,972,948,1400,1463,1546,1467,1608,1298,1327,1361,1326,1232,1149,1271,1254,1361,1118,941,940,1480,1203,1157,1070,1197,1163,858,1010,1005,1631,1531,1540,1545,1494,1504,1516,1533,1669,1408,1390,1393,1391,1374,1392,1351,1399,1714,1526,1546,1559,1573,1541,1520,1521,1680,1642,1611,1621,1641,1609,1608,1609,1665,1760,1458,1424,1414,1446,1459,1423,1404,1500,1838,1756,1726,1706,1738,1725,1694,1716,1896,1767,1697,1686,1717,1727,1674,1678,1705,1283,995,1234,1050,1098,1067,1265,1125,1161,1052,982,702,640,702,637,1685,1631,1737,1691,1725,1676,1716,1677,1797,1788,1727,1668,1624,1710,1678,1729,1702,1861,1737,1755,1746,1769,1760,1775,1767,1760,1844,1728,1659,1615,1692,1659,1712,1665,1695,1428,1508,1404,1640,1013,1020,1022,1050,1868,1815,1811,1823,1665,1854,1788,1836,1793,1395,1167,1211,1605,1430,995,1051,1346,1734,1621,1595,1590,1547,1621,1628,1599,1778,1498,1435,1450,1463,1416,1448,1449,1471,1407,1795,1348,1791,1250,1507,1440,1482,1450,1679,1635,1611,1633,1542,1624,1594,1584,1660,1492,1483,1424,1359,1535,1453,1432,1379,1850,1810,1829,1840,1680,1822,1801,1830,1737,1697,1640,1602,1667,1637,1641,1623,1717,1582,1480,1426,1437,1402,1527,1423,1474,1588,1845,1804,1876,1906,1702,1829,1814,1880,1663,1595,1631,1613,1542,1651,1642,1598,1715,1572,1453,1422,1514,1411,1458,1436,1473,1597,1827,1845,1850,1697,1874,1804,1842,1810,1258,1104,1610,690,681,1147,695,1094,714,680,1549,1004,654,738,1229,1212,992,1247,1393,1297,627,1150,1217,1218,1283,1308,1737,1295,948,950,1697,1587,1619,1709,1657,1702,1564,1772,1489,1444,1280,971,1175,1575,1488,1025,983,1006,1072,1281,1101,1055,1101,1362,1921,2036,2011,2009,2021,2019,2020,1972,2024,2028,2016,2021,1984,2020,2007,1993,1976,2026,2028,2026,2006,2025,2005,2011,1954,2021,2032,2036,2002,1999,2014,2000,1987,1979,2048,1897,1909,1911,1882,1906,1928,1834,1870,1889,1920,1880,1887,1842,1874,1826,1895,1935,1674,1679,1659,1683,1657,1656,1657,1609,1796,1644,1683,1652,1629,1663,1650,1599,1689,1508,1455,1442,1415,1436,1440,1415,1396,1567,1497,1508,1531,1502,1320,1533,1542,1604,1350,1603,1465,1685,1418,1469,1505,1651,1334,1429,1458,1520,1975,1655,1553,1663,1589,1585,1530,1620,1703,1529,1582,1629,1709,1729,1629,1597,1535,1664,1531,1582,1574,1537,1514,1579,1522,1459,1546,1463,1744,1526,1663,1625,1644,1633,1644,1800,1692,1484,1740,1932,1839,1685,1747,1896,1940,1941,1943,1973,1942,1917,1912,1928,1828,1812,1874,1997,1848,1848,1852,1834,1794,1776,1784,1780,2018,1958,1965,1954,1933,1903,1915,1885,1990,1901,1870,1920,1856,1812,1831,1809,1799,2014,1985,1999,1978,1942,1943,1931,1911,1982,1890,1812,1815,1739,1771,1766,1768,1769,1935,1843,1835,1761,1811,1832,1825,1804,1762,1676,1430,1458,1437,1410,1450,1417,1418,1623,1976,1930,1968,1954,1938,1896,1909,1908,1905,1855,1924,2001,1942,1942,1911,1918,1893,1935,1887,1941,1672,1521,1531,1601,1576,1608,1560,1518,1855,1797,1828,1790,1773,1752,1734,1708,1740,1529,1346,1285,1320,1386,1275,1357,1362,1574,1485,1471,1493,1574,1577,1501,1479,1454,1677,1673,1487,1696,1664,1534,1607,1443,1352,1347,1305,1236,1299,1124,1288,1737,1882,1865,1878,1902,1879,1872,1871,1899,1947,1903,1878,1870,1884,1878,1908,1869,1890,1416,1421,1337,1401,1476,1459,1486,1466,1785,1667,1707,1746,1670,1620,1581,1569,1608,1522,1543,1594,1602,1726,1712,1702,1637,1681,1440,1477,1483,1431,1352,1396,1442,1577,1496,1503,1498,1543,1271,1517,1497,1462,1667,1482,1536,1492,1249,1499,1489,1522,1548,1977,1950,1924,1668,1414,1422,1418,846,1429,1395,1410,1576,1178,1118,1113,1120,1108,1089,1146,1194,1507,1440,1431,1940,1890,1902,1910,1902,1917,1903,1943,1682,1605,1516,1533,1438,1348,913,937,815,912,801,954,713,872,923,1014,757,943,870,1084,867,1014,1324,1285,1322,1288,771,375,598,551,324,311,456,721,1342,863,906,862,1058,1269,819,1327,724,217,448,279,306,1415,1420,1488,1690,1845,1723,1807,1821,1823,1781,1754,1809,1751,1628,1650,1560,1633,1612,1655,1575,1665,1343,1300,1322,1307,1620,1684,1670,1658,1673,1643,1645,1692,1678,1676,1668,1675,957,1568,1835,1862,1770,1788,1800,1873,1812,1742,1648,1455,1474,1441,1663,1856,1842,1855,1849,1875,1869,1849,1883,1850,1077,1755,1177,1076,1250,1074,1189,2041,2007,1982,1920,1973,1950,1890,1894,1889,1978,1939,1946,1927,1921,1879,1930,2014,1750,1663,1759,1802,1804,1812,1672,1600,1899,2056,2046,2055,2051,2049,2039,2036,2048,2048,2054,2036,2045,2051,2042,2036,2042,2048,1889,1924,1855,1849,1822,1854,1827,1871,1954,1906,1882,1839,1860,1837,1846,1844,1913,1337,1406,817,794,735,661,698,589,806,858,740,398,732,826,881,560,448,784,828,945,432,533,792,836,890,637,485,1278,1061,1118,445,734,1166,1085,1041,374,966,1092,1056,844,401,1074,1149,1106,604,1417,1342,1575,1334,1785,1327,974,1133,1169,1143,1121,1086,1127,1094,1164,1109,1224,1196,1094,1074,1068,1241,1352,1146,1065,1160,1054,1047,1129,1015,1038,1027,890,1034,1025,847,831,809,886,1288,425,551,501,548,537,477,572,545,468,505,480,490,505,531,570,525,1501,1485,1481,1489,1568,1483,1530,1516,1500,1098,982,1017,1508,1514,1359,1388,1315,1411,1488,1740,1651,1667,1653,1599,1614,1656,1649,1676,1628,1460,1455,1527,1475,1533,1512,1467,1532,1058,1141,1247,1355,1329,1314,1283,1110,1420,1433,1433,1427,1560,1514,1550,1561,1740,1242,973,1132,1188,1109,1160,1057,1078,1091,1166,1103,1201,1191,1084,1029,1085,1327,1311,1135,1092,1201,1039,1047,1072,1022,1025,1017,930,1035,1029,822,841,829,949,1174,426,578,516,540,553,504,541,526,481,521,508,483,512,514,588,525,1816,1810,1797,1792,1800,1778,1734,1693,1393,1419,1408,1393,1666,1236,1197,1219,1534,1446,1313,1314,1506,1248,1049,1027,1007,1484,1676,1454,1683,1647,1378,1191,1165,1245,1444,1409,1670,1684,1602,1685,1706,1592,1672,1635,1684,1185,1378,1426,1567,1889,1723,1956,1761,1687,1656,1728,1731,1633,1744,1798,1670,1575,1504,1546,1542,1521,1550,1578,1220,1767,1624,1614,1592,1584,1569,1589,1622,1774,1468,1756,1800,1487,1445,1757,1787,1552,1668,1042,1126,1141,1151,1175,1154,1075,1150,1143,1129,1127,1198,1136,1084,1016,1080,1252,1061,1221,1152,757,792,1163,1154,1064,977,997,1244,1106,870,651,1087,1243,1120,983,919,1212,1117,991,557,1164,1235,1171,994,844,1204,1130,996,414,1189,1177,1187,973,792,1161,1145,1064,424,1185,1152,1144,958,1309,1123,1088,1205,1072,1062,1077,1014,992,1014,898,1018,1018,831,831,842,957,893,1163,1228,1196,392,1035,1243,1135,876,1238,1119,1246,1176,1244,1139,1117,1222,1168,1272,1125,1123,1229,1212,1331,1072,1192,1231,1168,1308,1172,982,1041,1110,1384,1111,1000,1004,1209,1290,1064,981,1079,1310,1239,1069,931,1120,1544,589,522,514,1305,1550,1754,1857,1867,1820,1571,1384,474,521,513,531,548,1008,1246,1052,1302,1506,1167,1133,1489,1316,1051,1285,1515,1190,1080,1450,1736,1850,1754,1738,1897,1661,1821,1895,1742,1744,1813,1832,1715,1859,1840,1728,1898,1720,1753,1900,1750,1756,1804,1758,1884,1829,1847,1673,1939,1753,1832,1782,1749,1886,1727,1835,1840,1798,1750,1819,1861,1704,1765,1873,1707,1910,1753,1773,1889,1738,1730,1818,1900,1732,1810,1828,1687,1991,1673,1834,1779,1789,1794,1781,1823,1774,1828,1787,1772,1901,1712,1747,1888,1722,1849,1781,1750,1310,1221,1200,1191,1302,1180,1213,1079,995,625,785,859,729,397,726,831,845,560,464,775,823,933,435,522,794,850,893,711,1397,969,1133,1139,1136,1156,1092,1109,1126,1179,1127,1174,1160,1088,1068,1024,1209,1449,1496,1536,1137,1119,1183,1075,1084,1079,1012,1046,1005,899,1024,1061,891,889,766,857,1469,1420,1547,1122,423,590,514,538,557,496,528,525,490,529,504,482,487,522,571,524,1723,1652,1677,1584,1701,1668,1627,1668,1706,1679,1775,1651,1621,1612,1683,1567,875,548,1074,487,434,301,845,1142,2029,2037,2026,2035,2012,1998,1978,1983,2027,2034,2005,2026,2020,2016,2013,1962,2010,1364,1375,1603,1544,1333,1439,1204,1117,1124,1123,1121,1122,1123,787,70,948,1994,2052,1860,1876,1911,1846,1847,1891,1924,1857,1958,1912,1937,1960,1849,1904,1921,1910,1877,1797,1991,1876,1894,1935,1903,1830,1768,1819,1761,1927,1893,1882,1870,1871,1905,1897,1908,1850,2000,1756,1881,1847,1921,1846,1616,1317,330,550,658,656,624,582,589,742,754,662,791,815,956,620,872,174,1142,295,408,1562,694,942,254,349,323,1045,1543,1463,1602,1645,1584,1546,1446,1513,1606,1606,1647,1589,1465,1585,1555,1524,1775,1516,1625,1639,1508,1866,1845,1787,1748,1848,1856,1853,1837,1856,1673,1307,1305,1345,1338,1327,1314,1312,1503,1468,1479,1452,1454,1502,1444,1457,1425,1633,1448,1453,1441,1476,1486,1461,1430,1531,1577,1456,1450,1465,1494,1481,1477,1425,1607,1463,1401,1433,1438,1471,1438,1411,1391,1606,1373,1398,1429,1494,1458,1431,1426,1582,1432,1391,1364,1457,1493,1427,1411,1410,1610,1369,1378,1429,1460,1473,1411,1370,1620,1433,1384,1436,1495,1465,1476,1424,1411,1632,1440,1446,1485,1466,1485,1458,1434,1529,1432,1310,1298,1352,1358,1370,1302,1245,1562,1328,1320,1374,1358,1347,1310,1341,1319,1518,1302,1305,1369,1334,1349,1302,1251,1590,1465,1434,1448,1474,1476,1462,1443,1372,1637,1399,1405,1487,1485,1497,1439,1414,1631,1412,1368,1376,1478,1430,1420,1426,1372,1607,1406,1371,1439,1496,1442,1407,1371,1544,1450,1410,1368,1443,1479,1446,1432,1420,1591,1459,1409,1436,1445,1477,1450,1421,1457,1775,1767,1825,1739,1849,1595,1771,1809,1831,1816,1750,1619,1752,1779,1728,1766,1781,1870,1822,1877,1837,1876,1847,1889,1866,1898,1836,1827,1746,1831,1815,1784,1763,1818,1910,1794,1774,1711,1791,1727,1753,1714,1841,1818,1815,1771,1753,1774,1750,1737,1782,1966,1872,1812,1836,1812,1795,1842,1809,1811,1853,1730,1778,1731,1740,1730,1750,1785,1841,1824,1855,1828,1820,1833,1741,1782,1781,1808,1766,1751,1778,1586,1661,1745,1737,1625,1847,1757,1727,1790,1639,1656,1629,1709,1807,1873,1665,1608,1634,1661,1695,1699,1651,1693,1721,1692,1640,1641,1708,1690,1687,1685,1811,1813,1745,1773,1790,1816,1790,1830,1786,1839,1792,1704,1734,1796,1799,1775,1768,1871,1748,1831,1887,1886,1875,1949,1880,1807,1798,1672,1699,1751,1744,1745,1796,1723,1813,1702,1681,1833,1794,1792,1869,1788,1715,1690,1428,1542,1525,1489,1530,1518,1473,1618,2042,1946,1932,1997,1991,1937,2015,1916,1921,1964,1987,2002,1947,1940,1977,1984,2024,1541,344,38,40,38,318,40,38,40,851,1842,1799,1829,1849,1830,1820,1781,1851,1717,1475,1454,1413,1441,1419,1428,1436,1648,1828,1815,1797,1767,1782,1785,1766,1801,1139,735,40,38,40,319,38,40,38,40,1180,1113,1775,1716,1734,1753,1758,1703,1702,1735,1768,1723,1134,1265,1436,1116,980,1572,1402,1171,1170,1830,1616,1667,349,38,40,38,318,40,38,40,641,1418,1388,1213,1180,1731,1631,1619,1693,1655,1682,1672,1619,1462,40,38,40,61,1182,163,131,1363,1869,2019,1692,1651,1612,1645,1680,1660,1698,1737,1697,1732,1751,1743,1734,1721,1708,1685,1777,1011,1143,206,1223,1807,1742,1737,1750,1727,1809,1666,1750,1835,1866,1844,1896,1767,1921,1802,1840,1895,1863,1660,1659,1703,1699,1829,1780,1714,1878,1799,1956,1779,1963,1776,1965,1856,1899,1886,1248,1191,1125,990,1257,1440,1341,1333,1363,1407,1174,1152,1085,1134,1148,1252,1605,675,843,935,1051,1410,1700,1051,760,700,812,1529,1621,1761,1508,829,1371,1678,1283,1198,912,818,947,678,535,965,1229,1368,1190,1253,1347,1392,1410,1281,1510,1923,1895,1880,1940,1817,1858,1907,1896,1845,1902,1918,1951,1826,1879,1897,1926,1155,962,930,952,1644,1957,1663,1955,1827,1106,1212,1188,1282,2015,2026,2014,2033,1918,1918,1908,1905,1964,2030,2040,2031,2043,1739,1823,1798,1840,1800,1806,1712,1798,1875,1945,1925,1922,1981,1548,1273,1311,1690,1221,1184,1262,1304,1315,1197,1246,1249,1673,1332,1237,1162,1662,1552,748,816,1631,1718,868,728,1407,1382,990,744,1028,1476,1543,1386,1413,1643,1775,1763,1809,1773,1840,1760,1883,1835,1819,1656,1678,1650,1767,1754,1800,1820,1734,1588,1430,1420,1451,1566,1443,1406,1444,1613,1518,1413,1476,1593,1529,1502,1470,1571,1945,1979,1951,1921,2017,1992,1975,1972,2014,1746,1768,1743,1749,1761,1578,1539,1574,1910,1912,1789,1888,1909,1772,1820,1788,1865,1903,1876,1836,1908,1876,1817,1774,1847,1921,1338,1492,1476,1530,1222,1199,1589,1252,1179,1234,1234,1706,1088,1251,1341,1891,1772,1791,1778,1829,1797,1783,1797,1799,1865,1836,1810,1817,1412,865,831,827,988,1164,1174,1145,1198,1228,1210,1174,1221,1332,1401,1414,1294,1663,1831,1864,1855,1895,1831,1821,1853,1842,1928,1922,1933,1892,1935,1915,1943,1950,1890,1838,1862,1827,1729,1863,1816,1710,1613,1604,1846,1836,1855,1882,1876,1800,1909,1849,1482,1451,1435,1524,1549,1618,1794,1547,1559,1665,1629,1697,1694,1743,1737,1802,1807,1875,2054,2051,1934,1990,1981,1992,1960,1999,1935,1940,1910,1892,1113,1357,1348,1064,1788,1800,1740,1763,1693,1545,1616,1552,1658,1780,1779,1773,1755,1852,1790,1809,1750,1801,1694,1691,1692,1630,1710,1819,1802,1602,1134,1036,1045,1207,1304,922,885,946,1312,924,1247,914,1255,551,627,461,722,852,740,764,739,784,1224,1251,1168,1124,1315,1399,1408,1439,1333,1395,1665,1606,1324,1463,1640,1455,1502,1726,1604,1673,1372,208,221,200,529,663,451,409,470,1892,2033,2037,2047,2048,2031,2037,2039,2032,1979,1935,1947,1937,1881,1923,1918,1905,1675,1404,1332,1478,1430,1140,1207,1139,1144,1396,1421,1431,1426,1780,1849,1835,1831,1886,1836,1775,1791,1905,1807,1749,1738,1787,1664,1751,1796,1722,1592,1416,1507,1432,1468,1446,1477,1554,1476,1843,1868,1859,1890,1528,1200,1258,1227,1665,1828,1787,1779,1837,1402,1431,1482,1417,2003,2031,2031,2034,2029,2001,2007,1969,1935,1534,1484,1498,1544,1701,1659,1667,1665,1992,1963,1978,1981,1976,1737,1703,1711,1851,2057,2051,2047,2054,1428,1268,1009,528,531,526,763,1278,1402,1444,1212,1190,1525,1419,1341,1335,1559,1485,1618,1452,1438,1664,1699,1855,1832,1574,1184,1380,1224,1321,937,1015,984,1177,910,919,854,1042,1213,1976,1976,1945,1949,2033,2006,1965,1998,1950,1530,1490,1625,1738,1635,1680,1702,1648,1784,1482,1535,1598,1837,1604,1737,1636,1680,1520,1697,1564,1515,1443,1616,1524,1443,1893,1899,1863,1832,1874,1891,1867,1864,1909,1606,1506,1430,1682,1970,1971,1981,1993,2000,1811,1793,1801,1835,1876,1924,1936,1837,1367,1455,1410,1368,1511,1499,1496,1444,1527,1586,1752,1696,1582,1486,1591,1532,1489,1757,1729,1637,1741,1664,1745,1667,1778,1668,1679,1518,1690,1698,1656,1648,1562,1691,1557,1565,1573,1490,1506,1791,1380,1738,1616,1483,1520,1524,1529,1501,1537,1656,1596,1291,1306,1393,1527,1605,1843,1439,1553,1655,1499,1745,1753,1681,1647,1548,1256,1163,1236,1292,1357,1209,1352,1769,1326,1436,1314,1331,1105,1151,1242,1165,1334,1420,1417,1369,1463,1565,1207,1294,1647,1721,1869,1629,1356,1101,1032,902,903,1084,1183,1268,1282,1436,1639,1583,1664,1866,1404,1197,965,1035,941,695,927,1299,1165,1212,1252,1262,1327,1483,1707,1731,1901,1784,1795,1780,1731,1367,1228,1184,1345,1281,1342,1319,1250,1236,1263,1268,1307,1267,1824,1590,1697,1552,1522,1465,1687,1631,1640,1389,1221,1179,1305,1260,1228,1444,1435,1851,1438,1268,1376,1237,1222,1133,1257,1405,1656,1701,1683,1613,1420,1370,1451,1334,1808,1468,1371,1255,1264,1256,1174,1218,1364,1704,1713,1720,1685,1517,1648,1716,1496,1692,1542,868,264,1159,1565,917,257,1078,1562,914,257,1105,1553,912,252,1098,1550,930,269,1042,1554,937,257,917,1248,1274,1272,1418,1311,1232,1357,1306,1439,1272,1334,1277,1452,1324,1293,1334,1315,1513,1339,1260,1263,1223,1279,1268,1240,1227,1519,1180,1197,1212,1268,1194,1213,1205,1251,1421,1261,1247,1268,1276,1271,1263,1265,1701,1687,1756,1740,1650,1680,1685,1725,1806,1209,1346,1298,1417,1301,1400,1268,1394,1356,1360,1381,1367,1335,1405,1376,1409,1858,1691,1589,1600,1674,1566,1517,1476,1249,1363,1374,1461,1566,1525,1436,1498,1731,1897,1688,1615,1573,1652,1558,1544,1456,1245,1387,1360,1441,1578,1508,1453,1508,1696,1917,1670,1603,1583,1660,1557,1565,1512,1299,1419,1342,1420,1542,1488,1492,1515,1665,1881,1696,1608,1609,1638,1576,1604,1488,1287,1378,1351,1385,1537,1494,1521,1484,1627,1841,1408,1216,1115,959,896,961,1074,938,1116,1208,1266,1214,990,955,1020,1076,1203,1533,1209,1162,1011,824,929,1071,970,1108,1167,1274,1240,1005,935,1019,1046,1078,2028,1919,1906,1948,1974,1988,1934,1942,1881,1808,1791,1815,1883,1917,1963,1949,1954,1457,1983,1924,1969,2007,1970,1937,1970,1984,1875,1748,1780,1784,1769,1779,1815,1774,1730,1775,1749,1801,1750,1665,1775,2008,1948,1870,1876,1909,1962,1487,748,956,1958,1951,2000,1990,1945,1992,1979,1958,2006,1954,1958,1971,1967,1979,1953,1957,1967,1740,1552,1583,1578,1545,1577,1555,1570,1710,1797,1627,1724,1557,1720,1829,1811,1833,1821,1612,1539,1548,1481,1721,1660,1735,1581,1784,1617,1703,1686,1777,1836,1830,1849,1894,1788,1664,1711,1586,1853,1819,1830,1823,1847,1515,1619,1577,1554,1670,1679,1727,1641,1761,1720,1789,1750,1814,1564,1617,1680,1756,1615,1559,1850,1583,1788,1696,1827,1646,1701,1566,1710,1715,1515,1500,1740,1644,1653,1241,1698,1933,1721,1021,1936,1933,1518,1646,1560,2036,2008,2012,1683,1401,1210,1253,1330,1206,1556,1599,1564,1497,1414,1480,1503,1502,1585,1390,1199,989,875,1003,1343,1079,988,1192,1078,1853,1799,1873,1882,1813,1841,1792,1805,1924,1761,1553,1677,1665,1712,1760,1767,1684,1872,1817,1872,1876,1793,1871,1762,1807,1965,1761,1611,1679,1656,1744,1775,1802,1695,1846,1797,1907,1804,1908,1778,1938,1780,1933,1981,1857,1986,1964,1894,1972,2014,1921,1985,1846,1692,1796,1812,1793,1826,1831,1837,1647,1550,1321,1356,1651,1582,1641,1052,1247,1050,1030,365,358,1397,1268,1298,1290,1378,1352,1316,1319,1299,1468,1340,1265,1412,1273,1440,1358,1290,1357,1336,1454,1623,1020,1523,1392,1893,1922,1971,2048,2024,2023,2002,1937,1998,1616,1568,1527,1483,1735,1551,1763,1725,1634,1746,1789,1573,1778,1515,1578,1650,1649,1645,1817,1914,1905,1792,1606,1728,1870,1915,1949,1843,1644,1785,1856,1933,1804,1746,1659,1915,1921,1908,1867,1599,1811,1923,1930,1938,1887,1660,1742,1872,1874,1875,1751,1195,974,1013,976,1443,1505,1618,1576,1652,1631,1702,1634,1589,1656,1804,1668,1753,1725,1612,1704,1630,1646,1671,1711,1932,1723,1726,1732,1686,1780,1710,1601,1748,1654,1793,1613,1622,1705,1612,1520,2011,1903,1870,1903,1949,1927,1870,1672,1780,1628,1662,1820,1931,1865,1893,1910,1896,2004,1913,1951,1948,1915,1807,1767,1774,1815,1908,1949,1876,1872,1930,1882,1874,1864,1588,1370,1337,1488,1630,1616,1601,1649,1934,1875,1842,1852,1856,1826,1837,1868,1871,1876,1905,1918,642,524,620,1119,1081,1010,1355,1267,1274,1059,1773,1670,1639,1564,1770,1548,1647,1724,1502,1539,1601,1461,1285,1313,1597,1685,1651,1738,1719,1726,1680,1607,1690,1356,1407,1487,1440,1528,1455,1495,1455,1478,1387,1358,1358,1851,1800,1829,1891,1866,1846,1861,1821,1903,1817,1827,1850,1916,1894,1862,1848,1853,1989,2012,1965,1896,1909,1878,1954,1922,1928,1914,1922,1898,1848,1860,1885,1883,1862,1745,1468,1475,1672,1650,1597,1617,1611,1631,1634,1635,1593,1755,1649,1645,1664,1656,1632,1654,1648,1766,1632,1662,1641,1656,1625,1652,1654,1646,1925,1862,1868,1826,1875,1882,1846,1882,1880,1865,1862,1826,1836,1840,1847,1843,1855,1957,1864,1837,1852,1857,1854,1831,1869,1866,1517,1387,1410,1397,1330,1465,1429,1570,1358,1281,1540,1461,1442,1412,1915,1890,1826,1808,1806,1842,1840,1897,1955,1622,1753,1718,1690,1696,1647,1843,1548,1711,1612,1708,1745,1731,1729,1764,1703,1644,1621,1904,1826,1840,1837,1582,1850,1862,1847,1825,1891,1632,1756,1757,1763,1806,1737,1653,1786,1678,1702,1811,1596,1772,1743,1769,1731,1785,1663,1702,1692,1622,1695,1716,1289,1187,1266,1212,1251,1264,1150,1458,1660,1551,1494,1657,1659,1546,1518,1635,1528,1564,1544,1568,1879,1873,1933,1859,1897,1784,1552,1399,1676,1767,1794,1786,1716,1739,1485,1515,1755,1708,1779,1415,1372,1597,1839,1905,1467,1454,1594,1431,1571,1547,1452,1676,1507,1473,1524,1525,1471,1589,1476,1423,1549,1492,1596,1495,1476,1489,1669,1553,1478,1513,1363,1487,1446,1547,1879,1869,1830,1792,1824,1810,1761,1719,1687,1602,1811,1699,1769,1770,1641,1788,1767,1627,1912,1934,1866,1860,1894,1763,1921,1710,1730,1751,1656,1715,1753,1768,1592,1754,1761,1775,1655,1803,1653,1839,1687,1637,1679,1674,1706,1703,1872,1641,1698,1648,1795,1680,1752,1668,1705,1753,1763,1506,1436,1667,1772,1658,1736,1762,1551,1462,1599,1513,1476,1409,1539,1503,1532,1681,1789,1662,1766,1771,1656,1677,1762,1586,1642,1711,1610,1705,1603,1610,1621,1724,1645,1645,1594,1684,1622,1657,1655,1600,1737,1620,1654,1619,1694,1634,1641,1608,1727,1645,1645,1650,1707,1633,1640,1614,1621,1747,1619,1702,1731,1775,1632,1628,1614,1730,1596,1639,1696,1699,1787,1617,1622,1637,1715,1690,1888,1744,1655,1643,1811,1740,1669,1698,1830,1802,1704,1933,1855,1861,1968,2001,1942,1948,1958,2002,1710,1865,1953,1999,2005,1995,1991,1807,1954,1803,1803,1936,2007,2022,2004,2006,1980,1911,1940,1904,1881,1913,1906,1952,1945,1930,1820,1887,1901,1886,1849,1719,1608,1670,1948,1768,1786,1559,1622,1628,1625,1534,1802,1391,1377,1339,1396,1398,1505,1517,1336,1432,1504,1494,1394,1443,1523,1482,1464,1477,1683,1720,1790,1674,1710,1722,1793,1709,1698,1702,1701,1745,1653,1672,1688,1681,1678,1672,1692,1651,1653,1733,1688,1646,1644,1741,1631,1656,1651,1789,1907,1890,1912,1937,1892,1918,1884,1904,1903,1781,1767,1807,1960,2011,1979,2042,2045,2055,2048,2014,2026,2043,2042,2052,2052,2054,2054,2028,2035,2045,1836,1846,1875,1920,1921,1883,1861,1888,1676,1452,1508,1412,1666,1636,1591,1513,1588,1632,1579,1668,1496,1431,1573,1614,1555,1532,1642,1438,1398,1546,1466,1761,1875,1787,1749,1671,1580,1905,1834,1867,1825,1798,1793,1684,1822,1834,1758,1693,2003,1988,2008,1888,1901,1927,1602,1661,1759,1728,1725,1763,1812,1723,1639,1776,1689,1691,1684,1480,1544,1524,1512,1486,1539,1519,1530,1488,1563,1521,1493,1528,1485,1555,1532,1505,1494,1455,1316,1323,1264,1314,1949,1931,1916,1885,1939,1949,1955,1927,1790,1349,1304,1316,1291,1332,1290,1332,1495,1570,1478,1489,1597,1638,1496,1594,1543,1762,1664,1651,1696,1592,1705,1628,1654,1745,1548,1265,1257,1286,1243,1328,1287,1202,1481,1224,1040,1057,1090,1240,1166,1035,1366,1491,1257,1281,1227,1250,1219,1274,1381,1425,1455,1284,1271,1311,1323,1324,1287,1341,1805,1556,1644,1749,1696,1580,1490,1248,1951,1959,1405,1094,1222,1176,1329,1091,1671,1955,1921,1556,1771,1832,1806,1741,1606,1933,962,503,549,491,585,469,540,464,845,390,1211,1317,1439,1329,1166,1116,418,893,694,1387,1465,1497,1508,1401,924,850,1265,1188,1427,1153,1452,1360,1190,1171,1858,1773,1718,1743,1795,142,138,1214,586,625,670,581,449,680,651,534,1300,844,1053,1410,1406,1385,1411,1398,1575,1571,1691,1582,1618,1537,1626,1836,1519,1041,1111,1181,1247,1320,1254,1292,1324,1468,1541,1595,1633,1684,1540,1337,1416,1318,735,25,30,25,625,592,1328,565,1565,1623,1662,1586,1631,1150,1666,1498,1585,1527,1759,1902,1946,1899,1963,1908,1607,858,1239,1521,1235,936,955,1256,1363,1401,1447,1501,1556,1552,1669,1728,1705,1548,1582,1512,1573,1608,1483,1564,1767,2057,2054,2030,1996,1876,1979,2047,1910,1733,1927,1882,1960,2021,2037,2016,2052,2030,2028,2012,2040,2055,2000,1721,1900,2005,2013,2000,1902,1672,1536,1248,1196,1184,1542,2008,1871,1724,1773,1899,1872,1745,1789,1774,1883,1936,1975,1953,1973,1970,1980,2000,1828,1525,1551,1563,1522,1501,1578,1502,1491,1381,1394,1308,1332,1286,1325,1318,1610,2025,2000,2009,1964,2012,1923,1946,1948,2009,1807,1724,1647,1676,1697,1681,1119,296,648,1278,1277,1306,931,1047,918,1093,1250,1665,1701,1582,1733,1738,1652,1535,1614,1564,1618,1552,1606,1484,1472,1185,1356,1069,1183,1224,1320,1234,1362,1401,1559,1583,1580,1439,1439,1435,1188,975,1144,1586,1488,634,1276,1269,1427,1531,1484,1470,1448,1134,1332,1435,1537,1710,1752,1849,1813,1785,1771,1559,1652,1593,1642,1569,1607,1507,1562,1501,1411,1253,1419,1533,1552,1364,1391,1393,1408,1377,1154,483,687,455,894,1434,1544,1534,1514,1425,1511,1539,1474,1369,1284,1162,1194,1334,1410,1520,1275,1086,779,290,1114,1743,1908,1801,1755,1563,1305,1053,1184,1551,1582,1553,1560,1568,1560,1544,1768,1737,1824,1705,1831,1751,1893,1740,1674,1397,1397,1386,1427,1441,1526,1686,1695,1538,1539,1501,1499,1541,1527,1477,1712,1908,1746,1562,1133,741,927,842,1224,1494,1649,1659,1719,1483,1631,1316,1304,1240,960,516,887,786,858,621,1116,1393,1100,499,571,489,1170,1773,1567,1084,1120,1002,1226,1394,1333,1071,1098,903,1151,1446,1469,1446,1436,1419,1589,1691,1787,1635,1826,1884,1781,1558,1316,1020,1247,1152,1180,982,1079,858,1159,991,1241,1252,1067,449,621,635,687,475,577,628,648,473,610,630,691,500,628,623,654,422,539,570,1242,1880,1598,1034,1148,1025,1145,1028,1123,1130,1429,1793,1606,1714,1710,1666,1646,1708,1489,1162,1422,1680,1657,1705,1778,1865,1210,197,343,291,358,203,330,240,354,56,265,25,202,149,281,242,318,150,825,1482,1515,1672,1414,1062,1055,1084,1202,1199,1369,1487,1528,1434,1727,1864,1860,1690,1698,1349,1640,1626,1594,1374,1429,1252,1272,1700,1542,1500,1286,1600,1452,1493,1492,1333,1287,1444,1454,1423,1539,1502,1511,1246,1162,1298,1364,1310,1246,1328,1068,1110,1030,1550,1510,1494,1491,1538,1531,1524,1511,936,755,554,542,755,695,734,645,644,559,549,685,694,649,700,720,723,696,758,818,763,638,637,486,1179,2030,1916,1758,1751,1690,1670,1696,1716,1714,1699,1700,1690,1931,1924,1803,1762,1692,1698,1763,1703,1752,924,1003,1397,1779,1408,1785,1823,1521,1457,1483,1470,1479,1473,1490,1476,1496,1156,602,515,586,653,589,443,560,635,541,599,566,617,549,505,303,408,581,365,260,454,596,318,379,363,433,412,1504,1922,1823,1668,1663,1683,1667,1670,1672,1652,1694,1679,1685,1687,1945,1806,1658,1684,1677,1767,1770,1662,1696,935,710,715,1492,1874,1640,1731,1555,1780,1798,1544,1523,1480,1514,1486,1483,1498,1507,1502,1482,1519,1496,1487,1489,1497,1490,1500,1504,1495,1462,1369,605,306,576,606,683,506,564,650,588,275,598,483,485,452,521,274,343,617,603,657,610,726,594,673,633,497,716,413,539,274,599,440,444,310,479,484,439,488,528,422,401,512,547,527,593,488,370,554,373,587,419,370,376,561,342,525,532,216,337,636,1992,2004,2033,1985,2013,2024,1716,1680,1700,1688,1709,1709,1713,1680,1689,1677,1689,1687,1677,1694,1687,1705,1690,1704,1734,1712,1696,1683,1699,1706,1688,1688,1672,1992,2048,2048,1794,1586,1699,1746,1675,1740,1741,1640,1691,1720,1706,1645,1665,1664,1733,1733,1684,1664,1688,1692,1542,972,944,921,837,694,996,1079,1079,1011,1248,1187,1112,919,1112,854,1109,803,882,1210,1001,1994,1957,1870,1748,1556,1463,1558,1485,1526,1532,1482,1458,1516,1500,1497,1336,550,509,376,438,406,406,482,376,657,646,535,573,601,469,537,276,209,135,415,524,655,495,493,534,407,438,522,328,238,309,1967,2057,1885,1707,1710,1674,1703,1706,1704,1688,1695,1687,1773,1703,1669,1746,2048,1822,1743,1639,1700,1768,1747,1672,1815,1799,1626,1497,959,1244,1326,1617,1907,1655,1482,1543,1482,1499,1497,1479,1492,1491,1479,1450,1422,246,241,227,223,505,434,203,246,354,422,325,412,327,278,88,229,132,418,295,461,484,278,314,412,509,538,318,360,1660,2002,2008,1679,1684,1722,1668,1698,1686,1655,1658,1690,1701,1700,1723,1917,2056,1797,1854,1704,1802,1714,1689,1763,1801,1814,1885,1271,570,541,877,1061,813,1444,1725,1706,1723,1468,1481,1503,1503,1469,1469,684,435,400,371,313,435,312,440,426,468,314,453,350,263,257,412,478,1443,1967,1723,1683,1701,1672,1670,1695,1679,1710,2027,1773,1727,1654,1709,1793,1827,1750,873,1328,1357,1618,1608,1544,1492,1494,1284,598,495,456,451,541,506,552,518,316,401,338,1154,1898,1657,1652,1649,1680,1664,1904,1701,1609,1742,1307,1486,1637,1574,1553,1454,1519,1496,1493,1497,1491,1491,1489,1518,1482,1518,1493,1484,1510,1486,1285,509,468,463,321,243,481,475,384,239,540,475,461,464,365,389,413,465,393,457,297,182,180,412,264,264,192,203,343,332,254,378,257,369,203,378,406,366,429,317,419,359,517,298,431,310,275,369,378,289,478,513,428,843,1986,1939,1958,1983,1881,1663,1669,1674,1680,1695,1681,1670,1672,1719,1720,1676,1674,1664,1679,1666,1677,1667,1682,1661,1675,1674,1681,1677,1958,2048,1977,1614,1629,1644,1650,1603,1728,1784,1705,1737,1686,1679,1589,1641,1675,1708,1699,1633,869,621,656,592,627,681,960,1397,1516,1157,1138,1027,1492,1480,1530,1242,1471,1344,1553,1887,1808,1826,1773,1604,1525,1480,1474,1483,1500,1476,1515,1500,1486,1495,1502,1082,539,511,643,670,522,495,441,434,370,205,488,246,454,477,645,419,283,443,604,573,656,623,576,347,509,248,406,567,666,728,655,374,389,373,536,312,152,1523,1985,1984,1925,1692,1712,1662,1710,1699,1694,1694,1706,1692,1700,1715,1753,1693,1718,1696,1725,2048,2056,1776,1737,1736,1772,1799,1773,1788,1750,1722,1812,1759,1787,1777,1445,950,856,1322,1360,1587,1507,1568,1944,1754,1586,1583,1715,1505,1488,1491,1505,1490,1495,1501,1485,1472,1494,1496,1495,1487,1491,1466,1482,1473,1476,1481,1501,1503,1232,559,667,674,549,632,557,499,669,601,561,544,340,441,526,581,461,408,497,579,449,649,455,579,602,378,410,607,449,550,599,334,563,387,407,490,505,375,306,333,527,479,556,501,334,290,475,390,287,492,329,268,304,358,403,508,495,405,258,568,453,277,335,373,477,385,293,312,604,523,367,450,467,329,637,598,755,2055,2051,2052,2056,2056,2055,2006,1738,1723,1748,1745,1785,1762,1742,1704,1740,1732,1730,1747,1693,1735,1751,1747,1769,1746,1760,1754,1743,1784,1709,1712,1734,1769,1761,1780,1749,1727,1771,1761,1725,1755,1853,2048,2048,2048,2048,1933,1670,1809,1835,1867,1894,1749,1822,1788,1829,1769,1697,1779,1841,1799,1820,1806,1815,1814,1859,1855,1792,1777,1832,1865,1867,1832,1842,1831,1838,1886,1867,1778,1337,857,810,863,689,928,1379,1312,1381,1151,1175,1497,1233,883,805,926,1230,1312,1575,1307,1987,1953,1849,1748,1620,1466,1638,1579,1603,1522,1486,1500,1503,1523,1512,1498,1440,1479,1502,1489,1465,1494,1479,1529,1494,1491,1500,1509,1482,1495,790,505,666,590,533,436,362,609,587,592,628,572,621,689,486,509,446,598,570,446,410,441,495,569,598,389,508,432,409,613,396,212,226,429,459,389,339,423,224,456,417,479,303,293,453,388,529,282,357,177,484,443,312,157,206,226,259,292,551,478,492,581,419,496,643,2037,1973,1949,1978,1991,1900,1640,1678,1685,1695,1660,1711,1707,1684,1684,1675,1646,1660,1696,1717,1687,1680,1708,1708,1697,1673,1673,1699,1646,1689,1655,1670,1658,1741,2048,2048,1948,1621,1693,1711,1738,1781,1739,1681,1645,1703,1787,1732,1794,1714,1738,1723,1718,1692,1712,1715,1753,1342,870,676,644,527,739,734,994,1103,879,723,728,665,722,718,628,760,713,715,360,400,745,634,933,728,528,540,814,1494,670,1618,1670,1791,1801,1771,1645,1670,1500,1630,1618,1539,1479,1485,1480,1478,1475,1484,1484,1476,1455,1484,1487,1456,1487,1469,1467,1468,1484,1478,1457,1473,1492,1486,1487,1476,1489,1499,1471,1465,1449,1485,1443,1471,1468,1472,1471,1479,1452,1459,1469,1464,1494,1488,1485,1470,1455,1466,1486,1441,1447,1421,1418,1443,1465,1496,1475,1416,1455,1486,1454,1482,1455,1493,1487,1453,1489,1427,1469,1469,1472,1493,1465,1472,1440,1297,567,470,465,625,432,483,324,503,487,252,336,619,517,470,607,405,535,653,575,525,681,431,612,526,372,552,604,622,551,424,461,457,554,512,487,462,504,564,509,548,625,535,643,501,326,245,530,494,448,594,585,641,500,539,596,443,571,364,415,529,445,510,399,523,493,366,442,452,421,578,368,529,429,589,629,594,642,614,584,500,569,538,521,608,514,270,442,334,532,458,500,490,333,298,514,382,304,455,503,511,307,435,529,605,503,512,584,347,220,475,359,207,212,408,585,540,509,313,394,501,320,332,305,357,350,575,423,510,511,445,590,621,488,562,521,554,513,385,436,446,584,576,551,518,458,511,530,278,262,505,463,446,588,506,500,546,460,324,392,539,503,516,422,465,446,405,503,631,549,460,483,497,457,447,627,620,505,413,342,523,472,400,524,592,348,379,468,302,266,317,377,391,350,331,250,540,530,622,494,507,316,377,590,503,506,494,506,530,502,487,505,440,485,289,350,398,352,636,539,520,432,438,544,496,389,604,581,468,476,482,488,507,491,412,498,511,109,228,531,533,509,584,441,613,553,513,526,346,852,1909,1941,1955,1913,1932,1951,2001,1950,1992,1960,1954,1998,1924,1961,1996,1970,1930,2018,2054,1934,1670,1624,1636,1676,1697,1713,1722,1723,1693,1671,1681,1670,1696,1675,1696,1671,1684,1683,1674,1669,1678,1695,1685,1694,1684,1695,1668,1684,1672,1676,1691,1679,1674,1681,1675,1680,1689,1663,1696,1685,1667,1657,1652,1670,1695,1661,1679,1668,1677,1628,1666,1690,1666,1652,1678,1704,1682,1681,1685,1689,1674,1674,1682,1667,1655,1720,1719,1677,1669,1662,1658,1676,1702,1646,1662,1676,1646,1642,1661,1673,1681,1661,1665,1678,1663,1698,1715,1666,1699,1696,1685,1722,1674,1664,1705,1717,1687,1681,1676,1695,1673,1685,1683,1693,1686,1668,1914,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1859,1610,1588,1699,1763,1787,1759,1688,1734,1767,1679,1652,1687,1695,1706,1655,1742,1738,1665,1722,1713,1745,1737,1709,1690,1591,1719,1715,1706,1636,1706,1613,1698,1661,1719,1670,1629,1743,1724,1746,1760,1767,1733,1656,1707,1687,1712,1754,1719,1701,1598,1711,1787,1671,1527,1459,1578,1633,1709,1750,1674,1789,1818,1697,1727,1694,1653,1805,1748,1661,1658,1737,1758,1767,1790,1695,1708,947,877,727,878,885,675,826,694,620,688,572,632,592,684,226,316,683,706,767,654,890,662,624,780,760,833,751,738,793,836,655,881,892,712,786,803,869,666,778,708,729,751,713,782,809,659,823,680,826,842,631,575,303,462,686,509,889,633,334,720,609,841,843,957,727,665,452,466,615,660,805,587,587,607,504,652,509,593,800,798,582,760,841,504,542,911,463,530,523,872,805,864,659,645,781,571,755,668,719,663,592,660,669,628,796,489,519,542,432,845,809,870,915,608,764,809,739,316,879,821,724,625,709,766,701,667,621,768,702,574,710,465,600,714,798,360,356,323,297,314,291,422,387,288,306,297,293,331,422,479,530,734,469,353,547,732,537,687,655,553,709,753,581,644,706,955,550,383,415,490,404,326,473,290,227,551,299,327,332,218,200,624,531,464,690,691,665,340,204,237,255,241,127,202,241,630,1364,1909,1305,1913,1900,1946,1914,1907,1922,1931,1951,1913,1978,1915,1904,1858,1820,1902,1826,1874,1497,1525,1467,1486,1487,1491,1484,1486,1500,1491,1293,488,474,486,518,436,450,521,440,459,245,515,456,527,444,460,623,244,406,406,309,448,338,277,407,375,294,512,200,289,397,422,832,1972,1961,1953,1693,1686,1707,1710,1696,1718,1664,1717,1704,1693,1686,1675,1671,1683,1831,2048,1874,1795,1702,1817,1757,1681,1783,1808,1763,1732,1679,1728,1169,761,802,1127,1590,1309,1315,1173,1596,1656,1764,1513,1454,1534,1498,1462,1448,1506,1493,1510,1495,1384,368,334,478,459,366,700,536,593,530,581,521,494,431,364,223,482,413,357,309,388,300,473,517,312,330,525,260,197,1352,2006,2052,1670,1690,1702,1711,1738,1705,1710,1677,1711,1695,1692,1713,1687,1912,2048,1624,1638,1804,1828,1847,1745,1731,1784,1850,1749,1783,1774,864,786,881,1127,1032,1371,1312,1582,1683,1719,1585,1580,1592,1501,1482,1484,1485,1490,1498,1490,1490,1463,1469,1468,1504,1458,1457,1481,1495,1485,1483,1488,1467,1453,1471,1474,1492,1473,1471,1488,1485,1487,1475,1486,1488,1505,1480,1461,1493,703,635,526,673,705,636,655,520,589,539,573,655,574,614,578,648,611,628,535,579,674,639,575,588,576,660,599,618,613,561,471,502,494,680,602,502,543,522,535,580,537,566,557,629,547,396,338,212,379,465,311,552,461,407,464,539,723,526,297,168,246,336,130,220,400,473,495,495,455,509,667,496,597,633,624,596,547,487,522,420,622,485,601,600,556,276,524,495,542,477,308,252,360,614,599,600,549,427,407,623,593,457,581,600,600,547,568,425,597,1673,2014,1974,1995,2047,1898,1975,1948,1989,1972,1713,1721,1703,1711,1709,1707,1683,1697,1718,1665,1718,1681,1701,1702,1705,1697,1689,1683,1704,1700,1630,1670,1656,1659,1681,1675,1664,1694,1701,1683,1684,1672,1695,1689,1693,1696,1654,1662,1676,1691,1673,1662,1649,1697,1669,1661,2040,2048,2048,2048,1987,1745,1774,1703,1655,1678,1728,1733,1787,1749,1742,1739,1667,1731,1705,1592,1735,1631,1711,1703,1757,1725,1696,1736,1758,1715,1599,1593,1704,1734,1713,1697,1696,1010,891,910,824,745,834,855,752,922,755,1031,1005,944,779,990,917,1358,991,1132,1173,1071,1190,1271,1099,1177,1218,1464,1400,1399,962,1087,1263,755,790,729,513,754,494,410,789,973,939,1102,1136,1101,919,539,510,873,1325,943,992,1089,1488,1839,1866,1859,1870,1910,1939,1898,1943,1838,1560,1493,1491,1482,1489,1488,1500,1456,1468,1491,1495,1495,878,438,178,466,560,341,381,526,480,355,155,168,259,300,272,406,469,343,510,389,306,371,409,442,432,239,382,307,319,442,242,449,373,326,1027,1982,1976,1991,1664,1701,1647,1707,1681,1677,1701,1701,1709,1681,1699,1706,1696,1695,1731,2048,1927,1693,1692,1789,1747,1742,1790,1811,1775,1737,1742,1712,1584,632,832,1403,1501,647,775,1089,1654,1840,1781,1545,1602,1492,1492,1498,1490,1510,1496,558,503,564,610,470,405,576,453,377,441,397,434,192,342,369,516,419,268,409,386,355,318,838,1928,1943,1697,1711,1705,1691,1711,1657,1658,1680,1703,1724,2048,1714,1790,1784,1794,1723,1720,1771,1855,1419,800,801,1657,1731,1506,1374,1567,1675,1462,1486,1369,1471,1493,1475,1504,1456,1478,1474,1483,1505,1512,1476,1490,1484,1203,553,401,560,600,468,596,406,492,563,508,479,668,586,508,320,430,324,342,452,454,550,378,507,290,255,225,613,645,645,568,599,530,488,594,344,485,532,439,654,558,389,477,525,293,678,1994,1979,2001,2014,1695,1732,1708,1705,1681,1679,1680,1659,1716,1721,1660,1684,1678,1728,1719,1715,1727,1737,1727,1700,2009,2048,1884,1743,1677,1730,1746,1692,1688,1687,1614,1669,1733,1783,1722,1777,1776,1742,1175,911,740,990,1711,1570,1322,1528,1447,1629,1404,1814,1832,1738,1616,1415,1448,1497,1477,1485,1459,1496,1483,1478,1475,1479,1481,1496,1475,1476,1349,504,530,606,521,475,396,555,526,563,330,418,485,366,402,275,431,491,524,558,433,513,588,363,431,196,242,211,495,443,326,212,65,226,358,256,235,351,517,379,460,401,247,270,369,249,1888,1942,1919,2037,1714,1701,1691,1680,1687,1670,1690,1724,1671,1643,1666,1677,1699,1683,1670,1678,1679,1673,1678,1669,1952,2048,1947,1738,1691,1670,1772,1715,1783,1712,1669,1681,1718,1604,1770,1670,1661,1820,1243,718,727,530,952,891,677,856,845,793,751,504,1301,1289,1778,1714,1615,1634,1660,1464,1506,1502,1496,1504,1499,1474,1438,1486,1493,1512,1472,1518,1480,1519,1478,1491,1422,1469,1511,1526,1520,582,567,564,292,401,484,536,564,569,387,425,472,548,439,123,580,541,549,458,421,413,306,180,179,534,579,507,511,574,495,460,423,363,371,521,525,517,457,313,350,486,354,366,188,137,277,560,475,481,499,370,343,447,448,370,355,289,145,372,397,437,376,413,495,372,346,433,427,461,360,1471,2015,2027,1991,2004,2048,1852,1715,1687,1640,1657,1701,1699,1646,1698,1710,1671,1709,1698,1690,1673,1697,1673,1688,1690,1701,1712,1696,1664,1664,1704,1719,1698,1680,1689,1709,1711,1711,2041,2048,2048,1955,1689,1702,1601,1662,1758,1523,1811,1759,1803,1741,1738,1697,1730,1713,1705,1741,1711,1694,1710,1780,1840,1631,1795,1801,1833,965,631,563,607,552,722,698,766,612,397,209,536,698,661,362,507,463,227,551,447,309,232,396,1141,1170,573,1609,1706,1788,1754,1793,1743,1526,1432,1488,1495,1515,1501,1041,507,233,237,286,423,291,147,260,246,208,508,412,319,391,490,512,1703,1951,1668,1672,1707,1691,1674,1660,1671,1912,1823,1762,1756,1769,1694,1632,909,871,1221,1271,1683,1636,1614,1519,1508,1509,1495,1467,1497,1475,1497,1489,1474,1477,1495,1494,1497,1479,1485,1478,1507,668,601,630,509,544,533,516,532,587,539,536,572,412,604,612,445,623,375,496,572,566,536,500,583,610,279,487,598,510,390,284,505,459,560,530,384,391,454,539,462,467,610,386,626,566,588,626,411,352,671,488,430,515,578,392,638,538,623,607,596,1539,2050,2020,2033,2025,1815,1713,1711,1711,1699,1684,1702,1706,1710,1703,1671,1679,1699,1676,1716,1666,1739,1675,1706,1667,1667,1674,1666,1706,1703,1714,1839,2048,2048,1825,1735,1784,1740,1752,1647,1702,1681,1763,1836,1777,1842,1825,1677,1641,1756,1805,1803,1352,719,768,832,702,938,1734,1552,1256,1343,1738,1674,1516,1404,1138,1711,1845,1834,1746,1845,1577,1492,1553,1498,1481,1485,1483,1482,1491,1477,1473,1477,1498,1457,1488,1483,1492,1511,1514,1490,1499,1487,1504,1320,487,69,265,230,491,539,498,472,456,501,609,603,201,445,437,380,404,306,581,579,527,313,396,161,467,267,219,557,360,602,551,472,439,532,549,257,312,570,369,523,606,588,548,475,227,225,425,409,434,516,429,578,594,530,627,568,528,519,423,324,441,464,150,129,425,362,503,292,361,1687,2042,1994,2030,2046,1957,1653,1705,1697,1679,1652,1689,1669,1649,1662,1695,1687,1675,1694,1701,1717,1669,1704,1675,1669,1706,1697,1694,1699,1718,1711,1665,1701,1680,1668,1786,2048,2048,2048,1709,1750,1742,1731,1752,1709,1677,1755,1721,1682,1665,1820,1776,1790,1723,1771,1719,1659,1753,1726,1640,1550,1753,895,822,686,802,811,728,733,706,580,701,815,1035,963,1044,806,730,862,1017,1161,905,958,992,1000,869,839,935,821,543,645,624,94,691,1231,1488,1763,1863,1809,1851,1776,1557,1533,1536,1505,1485,1486,1500,1501,1504,1473,1507,1521,884,400,336,202,341,554,541,327,475,412,486,526,391,297,516,392,288,501,477,277,329,530,381,367,404,342,199,376,216,287,386,475,354,236,280,227,1794,1979,1962,1800,1700,1687,1685,1683,1639,1697,1668,1676,1661,1669,1688,1696,1707,1692,1699,2048,2045,1726,1744,1722,1770,1638,1755,1712,1624,1669,1770,1727,1763,1649,1036,617,662,826,1197,1156,906,1226,1731,1888,1885,1605,1520,1523,1494,1503,1493,1492,1501,1511,1494,1483,1499,1501,1485,1504,1535,1495,1486,1491,1493,1501,1507,1481,1498,1487,1490,1472,1523,1509,1514,1484,1515,1492,1483,1469,494,527,527,418,541,549,495,671,601,594,595,494,395,446,546,452,440,539,590,627,592,547,495,595,472,442,521,590,622,528,334,478,421,578,516,447,495,508,522,554,421,509,511,436,260,291,383,443,364,304,315,519,334,443,460,449,608,574,441,326,535,618,624,595,586,558,382,538,463,574,454,437,405,509,386,503,490,492,460,366,397,556,484,363,504,409,348,350,228,605,525,347,407,395,401,331,605,304,459,442,252,238,306,398,372,308,373,340,226,424,290,1506,1998,2049,1992,1978,2006,2015,1998,2042,2049,1705,1690,1688,1684,1688,1696,1676,1695,1721,1709,1703,1734,1724,1735,1725,1736,1723,1757,1729,1740,1704,1692,1704,1685,1698,1684,1671,1678,1703,1676,1716,1699,1656,1654,1691,1688,1696,1711,1713,1744,1739,1746,1725,1656,1693,1716,1700,1663,1659,1674,1930,2048,2048,2048,2048,1980,1679,1724,1669,1702,1630,1681,1769,1728,1790,1726,1754,1765,1748,1683,1699,1707,1723,1697,1731,1648,1666,1646,1617,1761,1742,1642,1739,1602,1680,1626,1729,1772,1759,1699,1802,1614,1581,1582,951,809,721,790,843,504,770,733,615,887,899,939,976,1003,420,589,625,712,934,764,640,669,669,669,768,628,609,617,366,263,834,855,848,943,1040,1119,828,1017,950,778,656,571,1357,1386,1752,1860,1806,1879,1842,1791,1839,1888,1651,1653,1576,1494,1510,1478,1492,1503,1483,1477,1486,1484,1195,447,515,526,399,543,437,506,356,431,356,309,284,118,51,501,525,635,565,583,545,590,323,176,62,364,373,285,347,389,121,69,372,2045,2048,2045,1688,1665,1699,1691,1700,1731,1720,1711,1681,1663,1701,1714,1706,1733,2046,2050,1802,1844,1802,1809,1774,1732,1802,1754,1734,1807,1820,1865,811,788,731,875,924,549,1486,601,1434,1582,1657,1584,1514,1592,1524,1482,1510,1490,1511,1484,1490,1484,1495,1484,1485,1479,1497,1488,735,392,248,263,365,452,355,385,405,204,261,589,483,564,580,458,487,449,281,291,398,412,295,444,523,360,278,358,470,381,372,265,448,413,458,457,473,259,872,2031,2026,2017,1679,1659,1653,1701,1705,1676,1695,1698,1708,1704,1692,1673,1666,1643,1668,1651,1705,2048,2016,1611,1651,1810,1889,1888,1786,1802,1846,1847,1801,1698,1686,1612,897,693,605,736,551,312,320,448,332,374,425,477,563,1597,1127,443,786,1492,1542,1491,1484,1733,1639,1607,1656,1499,1507,1510,1528,1516,1529,1519,1524,1501,1516,1522,1503,1508,1514,1501,1518,1536,1497,1517,1503,1506,1513,1520,1508,1504,1535,1495,1504,1543,1541,1534,1542,1515,1522,1521,1512,1510,1510,1492,1501,1495,1492,1469,1487,1502,1482,1503,1477,480,535,480,466,524,521,539,434,535,659,687,653,722,701,685,699,673,633,638,758,746,689,622,546,565,345,627,574,588,681,710,597,661,643,680,588,654,583,610,641,472,613,652,548,557,556,544,536,496,581,580,602,622,528,545,632,579,548,574,541,642,493,438,529,558,523,587,620,558,624,606,567,628,520,569,580,653,580,542,501,557,511,469,577,502,596,584,466,425,575,603,522,703,550,707,773,704,660,684,652,694,738,595,548,645,681,628,622,534,543,527,624,585,657,593,581,572,620,575,606,587,550,553,539,310,554,566,568,529,572,498,523,556,483,518,574,617,537,358,379,611,486,513,543,364,426,492,567,583,484,486,345,1438,2053,2052,2038,2037,2039,2056,2038,2048,2054,2048,2021,2053,1929,1712,1721,1677,1700,1703,1729,1698,1676,1711,1694,1716,1693,1697,1706,1705,1707,1735,1732,1707,1723,1721,1733,1746,1743,1762,1762,1757,1751,1733,1709,1694,1720,1698,1684,1677,1667,1711,1737,1678,1683,1702,1716,1697,1714,1717,1750,1759,1756,1735,1749,1701,1720,1720,1736,1723,1744,1731,1767,1736,1720,1748,1764,1751,1741,1723,1770,2048,2048,2048,2048,2048,2048,2048,1963,1696,1623,1738,1749,1685,1688,1724,1764,1707,1772,1801,1762,1844,1773,1833,1811,1795,1790,1810,1730,1791,1779,1610,1586,1708,1730,1669,1630,1649,1797,1658,1732,1699,1690,1720,1843,1829,1821,1821,1810,1809,1684,1702,1599,1670,1782,1852,1813,1786,1847,1858,1809,1767,1014,955,902,927,970,912,744,766,917,906,1186,1306,1355,1263,1180,1180,1246,1304,1318,1293,1219,1086,1194,763,725,787,911,905,951,994,1322,913,503,685,1646,1336,1802,1954,1688,1834,1865,1918,1799,1808,1813,1847,1888,1850,1544,1463,1554,1491,1496,1482,1501,1513,1488,1478,1354,135,118,276,121,123,267,272,425,287,304,327,273,194,366,257,179,141,209,500,411,253,214,555,402,388,402,292,157,1348,2027,2042,1719,1709,1684,1692,1720,1693,1676,1702,1708,1736,1710,1663,1683,1878,2048,1829,1785,1632,1638,1809,1729,1766,1834,1800,1858,1722,1649,708,935,1779,1412,1616,1592,1640,1521,1447,1189,1519,1456,457,406,507,533,561,478,429,1817,1731,1686,1711,1831,1804,1590,607,797,1480,1558,1487,1499,1489,993,201,460,427,545,401,112,233,550,400,276,260,512,786,1946,1695,1670,1689,1684,1677,1678,1939,1613,1720,1763,1669,1185,922,1675,1794,1654,1460,1474,1490,1508,1493,951,477,416,391,425,481,275,282,521,471,469,329,506,446,439,578,1065,2016,1640,1675,1653,1682,1681,1675,1691,1945,1672,1716,1735,1754,1285,544,998,1219,961,1311,1621,1937,2048,2047,2041,2052,1824,1620,1581,1447,1051,798,811,754,818,937,1179,2021,2025,1957,1935,1809,496,1056,1115,1485,1124,1444,1397,1346,1130,774,605,1182,1121,1204,1089,1011,742,984,920,1087,1077,1013,1095,1077,1194,813,715,769,779,1046,702,901,749,812,1352,2048,1272,1091,1068,931,966,993,1123,992,994,925,1215,1045,875,1064,982,987,1002,759,779,729,859,1174,1413,1536,1376,1649,1987,2048,2048,1832,1487,2029,2056,2048,2048,1946,1853,2053,1619,1972,2057,2048,2048,2048,2048,2048,2048,2052,2035,2033,2026,2021,2037,2001,1963,1803,1660,2015,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,1983,1936,1836,1765,1264,1904,1922,1891,1755,1940,2057,2054,2057,2048,2057,2057,2048,2048,2048,2048,2048,2048,2048,2048,1936,1444,1160,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2056,2017,1541,2048,2048,2048,2050,1831,1555,1383,1152,989,663,547,2054,2048,2048,2048,2048,2055,2048,2048,2048,2056,1779,1414,864,2048,2048,2024,1922,1863,1669,1467,1119,872,504,227,522,1986,2048,2057,2048,2047,2048,2048,2048,2048,2048,2048,2048,2045,1956,1804,1588,1501,1394,2057,2057,2048,2048,2056,2048,2048,2048,2048,2055,2048,2046,2025,1881,1681,1409,966,1303,1858,1893,2020,2048,2057,2055,1911,1665,1200,1124,2048,2047,2048,1741,2052,2048,2048,1712,375,107,167,33,1033,2048,2057,2048,2048,2048,2054,2057,2039,1897,2048,2048,2048,2048,2012,2048,2048,2048,2048,2048,2048,2048,2048,2057,1897,1589,1982,1914,1618,1621,2048,1983,1534,1255,1632,1914,2053,2055,2057,2056,2048,2015,1846,1333,227,1319,2048,2048,2048,2048,2056,2056,2048,2057,2048,2023,1998,1855,1882,1921,1561,2048,2048,2048,2048,2057,2048,2048,2048,1989,2032,2048,2048,2048,2048,2048,2048,2048,1873,1769,1986,1974,1743,1210,2055,2054,1990,1841,1778,2048,2048,2048,2048,2051,2048,2048,2048,2048,1753,1274,1723,1930,2008,2010,2043,2057,2013,2020,2041,2052,2043,2050,1998,2020,1997,1981,1994,2051,2034,2056,2050,2048,2019,2041,2039,2043,2037,2046,2031,1916,1806,1575,1386,1268,1201,1121,1216,1029,1053,1114,1020,1052,850,860,910,766,651,563,435,189,178,105,59,159,2057,2022,2056,2057,2028,1894,1737,1595,1161,1003,2048,2048,2048,2048,1908,2048,2048,2048,1968,2048,2048,2048,2013,2052,2055,2048,2055,2055,2032,2048,2048,2048,2031,2048,2033,1957,1894,1828,1734,1766,1578,1982,2056,2048,2042,2048,2056,2055,1763,2020,2056,2056,2055,2048,2054,2048,2037,1939,2048,2056,1914,1460,1992,2048,2055,1472,1882,2048,2048,2048,2048,2048,2048,2048,2051,2006,1885,1724,1514,1377,1306,1185,1638,2048,2048,2057,2046,2027,1873,1654,980,328,1067,1498,1761,1892,1952,1918,1939,2002,1911,1730,1526,1350,1016,600,446,1694,2029,2030,1390,786,2026,2048,2048,2048,2048,2048,2048,2048,2020,1977,2038,2020,1769,1437,926,1698,2053,1773,1427,1783,2048,2048,2052,2056,2048,2056,2048,2048,1935,1802,1702,2048,1391,1072,1490,2057,2048,2048,2048,2048,2057,2038,1829,1911,2048,2048,2048,2048,2048,2056,1834,1007,1510,1918,2028,2057,2048,2040,1264,1700,1824,2054,2048,2048,2057,2049,1990,1796,1253,981,753,500,312,239,188,2035,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2047,1307,2048,2048,2048,2048,2048,2048,2048,2051,828,399,1426,1712,1991,2057,2048,2048,2048,2048,2048,2048,2048,2048,2029,1850,1609,1476,1320,1164,1065,1041,882,705,827,973,805,971,1734,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1803,1191,716,699,1711,2048,2048,2048,2047,1324,1943,2028,1745,1212,970,592,696,1307,2048,1825,1001,746,1819,1975,2013,2054,2053,2057,2056,2029,1925,1581,1781,1858,1892,2017,2054,2055,2048,2048,2057,2048,2057,2046,1969,1751,1408,655,811,1795,2055,2048,2048,2048,2048,2048,2048,2057,2047,1985,1694,1407,967,927,191,721,2048,2046,1969,1907,1773,1700,1850,2048,2051,1714,1548,1406,1689,1819,2051,2048,1917,1953,1122,2048,1700,1800,1973,2054,1669,1877,1306,1417,1161,1775,1933,2052,1997,1995,2034,1973,1930,2048,2048,2033,1562,887,1569,2048,2048,2048,2048,2048,876,1442,2048,2057,2048,2048,1253,456,2016,2048,2048,2048,2048,2048,2048,1958,2048,1968,1571,2057,1988,1857,2055,1993,1722,2033,1999,1329,1279,2041,1281,967,2048,2057,2048,2043,988,107,274,1587,2056,2057,2048,2056,2056,2048,2040,1957,2048,2048,1892,2048,2029,2046,2048,2031,2048,2052,2048,1871,2044,1676,1941,1532,1789,1583,1300,1658,1718,1498,1294,1437,2048,1910,1818,2048,2048,2048,2048,1974,1310,1109,669,1738,1746,1447,2016,1885,2048,2048,2048,2048,2048,2048,2057,2048,2048,2031,1945,1734,1546,1356,1130,851,1602,2048,2048,2048,2048,2048,1192,997,2028,2047,2048,1938,1934,2042,2048,2048,2057,2048,2048,2056,2033,1939,1711,1328,539,1372,2048,2048,2048,2048,1053,150,1362,2049,2048,2048,2048,2048,2056,2048,2048,1828,1239,274,677,1521,1994,2048,2048,2048,2048,2048,2048,2056,2055,2057,2055,1989,1853,1791,1798,1692,1513,1376,1261,1253,1168,1012,716,531,558,501,464,471,391,428,447,462,505,560,429,186,447,1041,1146,1199,1227,1080,1057,936,827,660,456,254,100,265,1244,1660,1949,2055,2048,2048,2008,1950,1937,1854,1989,1790,1999,1991,1512,1730,2050,2053,2053,2008,2032,2044,2029,2044,2017,1961,2048,1974,1908,2030,2051,2048,2029,1664,1894,1965,1742,1928,2040,1600,1349,1754,2048,2054,1964,1921,1927,1834,1968,1873,2048,2048,2051,2008,1900,2048,1991,1523,1572,1580,1318,960,441,581,371,582,666,760,1210,1643,1389,1422,1297,1272,1499,1687,1803,1784,1798,1931,2030,2022,2041,2057,2057,2055,2057,2048,2056,2053,2041,1978,2011,1981,1975,1874,1722,1734,1732,1684,1652,1499,1458,1442,1434,1426,1322,1230,1199,1221,1176,1116,1018,919,932,963,1566,1375,1507,1551,1383,1482,1549,1515,1432,1647,1400,1588,1648,1682,1553,1667,1510,1489,1673,1641,1779,1731,1755,1809,1830,1860,1910,1900,1975,1940,1991,2047,2052,2048,2048,2053,2048,2041,2009,1895,1718,1526,998,1542,1794,2030,2048,2048,2050,1077,147,1383,2048,2048,2019,1452,2050,1077,2048,2048,1469,1671,2048,2048,2048,2057,1531,2057,1930,1474,1427,2048,2048,2048,2056,2057,2054,1952,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2022,2050,2057,2056,2048,2048,1957,1946,2033,2057,2048,2044,2051,2048,2048,2048,2048,2048,2048,1634,1460,2057,2049,2051,2048,2051,2050,2048,1897,1938,1786,1558,1601,1409,1769,1790,1574,1409,1342,1126,858,255,1870,2048,2048,2048,2052,1971,1561,941,212,1190,2048,2048,1907,1699,1450,1811,1867,740,200,853,876,366,455,353,452,333,390,276,496,677,936,847,589,524,705,1063,782,629,1468,1425,1417,1188,1205,1302,642,627,774,364,295,538,449,380,1040,896,344,383,337,666,783,509,526,575,396,458,671,695,793,780,573,972,798,665,958,797,671,917,360,612,595,805,836,600,273,320,284,276,521,322,347,252,158,494,567,738,623,517,432,185,474,548,449,543,464,404,466,213,716,813,269,301,408,314,830,905,486,120,193,281,472,849,311,440,314,415,159,759,314,398,886,618,190,258,309,464,275,238,293,310,895,565,550,429,688,395,539,426,334,791,494,331,644,700,969,229,136,406,386,757,328,561,423,563,473,545,285,597,292,598,525,497,561,181,769,598,518,273,649,785,565,889,1219,1153,1172,1150,1119,976,405,371,1168,1132,907,607,527,1441,260,418,332,167,332,238,201,139,238,337,440,124,135,132,328,420,584,327,649,599,424,898,452,622,198,400,542,282,330,329,697,431,598,488,303,291,284,337,483,186,363,198,232,341,156,505,290,309,184,219,173,222,534,380,421,309,701,1160,238,440,457,456,625,636,300,571,1030,896,888,531,555,359,366,418,336,383,489,277,240,288,154,182,770,883,836,791,665,513,595,263,428,295,431,667,186,379,389,660,681,849,671,417,406,537,261,317,252,229,248,601,375,562,340,593,632,568,764,552,69,338,473,507,718,447,426,431,386,357,351,276,1228,1295,1241,1283,1237,1360,1868,1714,457,122,151,440,572,170,204,119,492,194,460,524,593,1191,759,658,352,184,407,227,383,231,174,358,203,524,407,652,491,483,619,720,887,241,562,215,402,322,457,423,280,214,485,316,361,287,276,298,290,565,245,388,180,491,351,380,119,469,598,546,450,160,266,449,472,421,239,399,729,390,684,361,484,712,300,523,807,147,157,156,138,150,185,421,148,168,164,157,189,296,147,271,271,323,426,635,126,226,228,218,431,477,378,594,532,178,191,185,503,261,335,605,215,423,181,207,243,373,123,450,530,132,221,229,180,349,124,135,708,516,475,462,383,444,201,256,360,369,303,313,919,350,382,385,436,373,637,982,824,1056,747,758,1666,975,1161,1319,1400,1430,1471,1452,1534,1483,1541,1585,1468,1509,1502,1481,1610,1524,1571,1445,1548,1486,1470,1310,1306,1193,1277,1392,1361,1243,1211,1086,1108,1454,1332,1627,1945,1705,1764,1743,1687,1701,1728,1705,1725,1717,1689,1739,1761,1772,1761,1704,1602,1668,1681,1658,1689,1725,1685,1743,1687,1694,1677,1655,1661,1658,1578,1589,1647,1907,1543,1740,1686,1615,1654,1637,1740,1734,1812,1840,1822,1836,1826,1782,1700,1784,1662,1775,1805,1842,1768,1649,1769,1834,1690,1789,1791,1750,1714,1667,1619,1625,1703,1695,1645,1614,1584,1595,1672,1653,1639,1716,1698,1719,1657,1728,1695,1759,1718,1631,1738,1717,1709,1709,1659,1632,1695,1675,1611,1636,1597,1621,1558,1493,1529,1507,1625,1125,1033,829,653,908,1319,1462,1469,1281,1114,1170,1236,1144,1384,1367,1286,1311,1267,1283,1160,994,907,727,915,938,704,660,859,1061,1069,1070,1195,1639,1540,1425,1422,1406,1617,1403,1495,1528,1588,1339,1298,1271,1265,636,226,211,246,222,259,899,1344,1386,1182,1608,1635,1344,1356,1584,1154,776,1373,1289,754,1394,1515,1458,1575,1551,1604,1530,1359,1354,1576,1253,1459,1539,1720,1401,1455,1419,1446,1453,1637,1140,1499,1641,1505,1684,1484,1592,1629,1157,1746,1306,1621,1457,1133,1496,1521,1689,1564,1380,1433,1578,1344,1578,1557,1595,1376,1219,1612,1535,1547,1579,1341,1379,1489,1684,1260,1703,1276,1491,1554,1661,1306,1282,1543,1669,1575,1647,1180,1523,1371,1648,1043,1534,1364,1685,1031,1417,1422,1480,1315,1402,1598,1583,1621,1633,1536,1350,1335,1714,1425,1763,1230,1730,1268,1817,1417,1529,1219,1767,1696,1655,1504,1430,1796,1547,1380,1747,1634,1297,1603,1582,1701,1834,1421,1671,1756,1763,1553,1691,1640,1362,1683,1421,1575,1646,1819,1317,1651,1738,1554,1630,1604,1515,1855,1495,1765,1565,1902,1851,1920,1957,2045,2003,2056,2017,2026,2023,2057,2015,2044,2018,2046,2054,2043,2029,1994,1956,1999,2029,2024,2037,2056,2056,2034,2038,2045,2016,2018,2036,2046,2048,2046,2051,2053,2034,2008,2028,1854,2001,2043,2045,2057,2047,2052,2032,2033,2006,1981,1990,1981,1998,2006,2001,2016,2044,2031,2049,2019,2000,1978,1984,1973,2015,1988,2048,2022,2021,2050,2030,1991,1963,1998,2009,1994,1994,2053,2045,2057,2046,1995,1985,1989,2018,2015,2042,2021,2045,2048,2052,2053,2027,2057,2017,2036,2004,2018,2005,2054,2016,1938,1988,1949,1978,1986,2011,1938,1944,1988,1999,1964,1947,2009,1981,1998,1931,1990,1964,1965,1987,1998,1947,1978,1990,1960,1959,2005,1983,1959,1977,1980,2003,1978,1962,1978,1976,1991,2021,1987,1996,1991,1981,1982,1986,2003,1958,2005,1968,1990,1984,1987,1978,1946,1980,1983,2000,1955,2010,1998,1988,2004,2019,1990,2004,1989,1994,1986,1968,1978,2000,1996,1950,1925,1994,2025,1952,1983,2047,2021,1976,1997,2014,2019,1954,2030,1998,2016,2034,2037,2002,2017,2032,2006,2000,1977,1984,2013,2013,2004,1964,1852,1987,2057,2052,2033,1910,1959,1927,1892,1751,1921,1878,1897,1735,1941,1865,1950,1994,1987,1822,1914,1952,1818,1884,1859,1967,1957,1968,1902,1933,1897,1950,1884,1830,2012,1976,1894,1950,1834,1956,1860,1855,1852,1878,1952,1997,1891,2028,1982,1893,1865,1825,1923,1853,1939,1983,1918,1943,2012,1963,1955,1799,1929,1771,1991,1940,1966,1914,1894,1962,1939,1962,1803,2018,1975,1965,1778,1733,1802,1755,1906,1877,1874,1806,1871,1838,1848,1974,1928,1913,1946,1899,1913,1919,1924,1885,1907,1906,1907,1951,1906,2002,1887,1978,1885,1862,1933,1835,1909,1815,1903,1933,1780,1954,1492,1758,1328,1792,1849,1707,1896,1985,1930,1965,1983,1973,1974,1945,1976,1997,1972,1951,1999,1730,1401,1404,1444,1436,1442,1556,1384,1616,1506,1441,1547,1630,1774,1609,1625,1914,2019,1973,1936,2007,1982,1805,1940,1940,2016,1984,1928,1987,1915,1977,1831,1863,1972,2017,2023,1896,2020,1905,1905,1907,1879,1992,1968,2009,1901,2027,1937,1911,1900,1865,1997,1950,2016,1897,1958,1859,1886,1910,1850,1973,1978,1990,1924,1948,1934,1858,1904,1876,1993,2016,1967,1933,2005,1915,1856,1918,1928,1961,1945,1908,1927,1965,1915,1955,1906,1867,1744,1752,1619,1655,1676,1736,1755,1706,1663,1674,1711,1713,1721,1735,1706,1651,1702,1652,1698,1734,1712,1719,1624,1652,1668,1712,1765,1727,1670,1615,1594,1682,1753,1704,1667,1627,1664,1634,1670,1743,1761,1688,1662,1647,1672,1758,1792,1750,1633,1605,1669,1786,1894,1840,1749,1736,1762,1831,1862,1823,1845,1803,1770,1863,1731,1785,1688,1690,1692,1721,1717,1624,1616,1741,1723,1697,1619,1821,1675,1637,1791,1708,1519,1731,1704,1730,1673,1754,1759,1750,1678,1797,1799,1816,1659,1779,1740,1763,1732,1781,1763,1941,1895,1993,2000,1988,1934,1920,1943,1908,2011,1978,1965,2001,1986,1995,2003,1967,2035,1970,1969,1976,1993,2003,1986,1981,1962,1992,1982,1936,1977,2017,1998,1994,1962,1985,1971,1966,1978,1965,1968,1964,1982,1961,1967,1965,1984,1963,1970,1946,1986,1944,1961,1959,1954,1970,1954,1987,1954,1970,1967,1971,1952,1973,1945,1971,1946,1974,1945,1978,1937,1982,1936,1986,1937,1988,1953,1906,1920,1902,1903,1903,1911,1902,1935,1894,1911,1916,1898,1913,1910,1904,1904,1931,1856,1926,1907,1827,1920,1904,1839,1901,1925,1838,1891,1935,1834,1881,1946,1844,1862,1954,1840,1847,1959,1855,1822,1960,1839,1819,1894,1780,1844,1894,1757,1864,1892,1746,1875,1888,1761,1879,1872,1785,1890,1839,1789,1897,1815,1829,1889,1804,1851,1908,1818,1878,1903,1803,1893,1846,1871,1914,1829,1871,1905,1804,1893,1857,1861,1909,1831,1857,1920,1850,1886,1893,1847,1887,1893,1843,1884,1893,1843,1879,1893,1842,1877,1895,1848,1875,1892,1848,1876,1890,1847,1873,1898,1843,1886,1909,1831,1897,1912,1835,1906,1909,1839,1918,1904,1848,1914,1893,1845,1921,1871,1857,1926,1863,1859,1920,1861,1880,1919,1923,1929,1917,1907,1913,1901,1933,1919,1913,1915,1951,1915,1909,1913,1904,1920,1940,1983,1971,2004,1998,1982,1977,1996,1995,1984,1970,1983,1909,1967,1881,1933,1903,1918,1910,1920,1814,1942,1931,1870,1927,1961,1972,1959,1972,1971,1925,1992,1930,1978,1939,1970,1935,1959,1946,1959,1916,1942,1840,1984,1836,1964,1853,1919,1903,1875,1916,1851,1952,1829,1992,1834,1960,1825,1877,1844,1853,1884,1816,1934,1788,1900,1870,1836,1864,1804,1910,1800,1932,1815,1875,1854,2046,2044,2029,2019,2012,1997,2027,2019,2018,2032,2032,2044,2035,2050,2015,1998,1847,1994,2014,2042,2047,2055,2014,2037,2035,2002,2020,2028,2049,2028,2033,2048,2036,2050,2048,2026,1976,1963,2006,2005,2023,2047,2042,1997,2018,1988,1985,1989,1989,1985,2030,2035,2020,2003,2010,2005,1992,1993,1992,1968,1985,2029,2043,2015,2026,2012,2011,1976,2013,1993,1965,1980,2015,2041,2020,2050,2053,2031,1995,2025,2003,2007,1976,2026,2037,2052,2042,2056,2049,2044,2021,2020,2023,2026,2045,2055,2003,2011,1975,1990,1966,2014,1997,1976,2019,1990,1957,2009,1975,1938,1953,1975,1987,2003,1987,2012,1999,1907,1950,1927,1925,1804,1926,2011,1991,1958,2009,1964,2013,1974,1996,1983,1962,1868,1900,1931,1991,1968,1897,1935,1927,1986,1941,1920,1847,1895,1984,1996,1905,1854,1946,1977,1950,1874,1876,1880,1847,1934,1962,1940,1946,1938,1841,1884,1854,1899,1971,1909,1974,1954,1873,1890,1902,1874,1958,1978,1927,1876,1813,1841,1904,1944,1965,1863,1870,1807,1653,1951,1909,1897,1916,1912,1861,1869,1936,1830,1899,1905,1847,1897,1848,1806,1885,1957,1971,1917,1906,1871,1845,1850,1891,1839,1846,1934,1964,1972,1918,1929,1829,1886,1942,1925,2039,2026,2010,1951,1967,2012,1976,2014,1970,1951,1941,2050,1997,1978,1760,1972,2005,2011,1993,1910,1975,2022,1997,1990,1955,1988,1994,2023,2019,1969,1812,1981,1982,1979,2009,1988,2015,2048,2014,1990,2002,1897,2015,1996,1982,1985,2037,2021,1990,1914,1764,1781,1891,2009,2009,1950,2024,1992,1980,1949,1985,1955,1961,1870,1956,1952,1975,1949,2006,1976,2027,1987,2006,1933,1953,1991,1992,1965,1864,1929,1944,1965,1858,1905,1950,1949,1873,1935,1999,1966,1974,2007,2019,2009,1989,2010,1908,1920,1977,1929,1750,1909,1958,1943,1972,1923,1927,2034,1981,2005,1980,1966,1980,2013,2000,1962,2005,1931,1957,1946,1938,1972,1948,1965,1979,1993,2010,2030,1985,1971,1976,2019,1944,1985,1977,1978,1924,1997,1932,1942,1995,1977,1995,1987,1947,1984,2020,2004,1944,1973,1924,2040,1956,1996,1987,1993,2021,1964,1982,2020,1990,1963,2019,1930,2037,1928,1959,1981,1950,1997,2002,1976,1957,1901,1940,1991,1930,1954,1985,1963,1920,1954,1975,2013,1993,1937,1953,1976,1936,1997,1913,1944,1937,1851,1887,1955,1956,1887,1893,1928,1909,1970,1942,1923,1999,1960,1954,1997,1971,1945,2032,1791,1980,1939,2023,2017,1987,2012,2052,2048,1869,2015,1968,2039,2024,2026,2040,2038,2017,1933,2011,1982,2044,2041,2024,2029,1983,2041,1968,2038,1991,2037,2043,2023,2054,2037,2045,1954,2022,1974,2043,2038,2018,2047,2056,2024,1982,2033,1958,2034,2047,2028,2048,2046,2034,1929,1946,1921,1871,1930,1997,1960,1983,2010,1999,2029,2028,1848,1996,1954,2018,1982,1995,1939,1790,1960,1953,1961,2006,1992,1958,1812,1988,1939,1699,1888,1763,1658,1639,1620,1549,1797,1353,1521,1545,1366,1612,1284,1516,1449,1166,1515,1159,1409,1274,1344,1317,1172,1393,1095,966,1556,1442,1141,1259,1386,1245,967,1267,1371,1100,1632,1117,1404,1145,1598,1154,1315,1425,1506,1218,1556,1506,1442,1616,1376,1537,1333,1505,1531,1178,1647,1142,1433,1119,1580,1187,1411,1344,988,1282,1479,1420,1089,1298,1402,1246,973,1311,1388,1219,1498,1118,1339,1122,1658,1210,1489,1470,1343,1543,1438,1554,1450,1560,1551,1222,1443,1500,1371,1302,1542,1264,1323,1161,1617,1210,1429,1306,938,1481,1401,1350,1112,1297,1557,1004,1031,1310,1363,1233,1416,1177,1388,1135,1634,1228,1507,1498,1316,1568,1380,1531,1507,1430,1570,1246,1494,1499,1156,1458,1409,1354,1379,1159,1570,1177,1421,1320,834,1613,1312,1280,1201,1220,1600,827,1237,1368,1168,1491,1051,1358,1278,1405,1290,1258,1412,1491,1233,1645,1473,1467,1567,1289,1634,1310,1523,1530,1233,1658,1132,1401,1215,1468,1329,1342,1389,1088,1090,1514,1466,1130,1244,1412,1391,934,1294,1417,1184,1577,1075,1386,1041,1646,1238,1405,1445,1381,1426,1425,1564,1457,1571,1507,1311,1422,1479,1469,1219,1626,1221,1387,1122,1598,1146,1477,1283,886,1443,1365,1410,1087,1345,1581,935,1102,1358,1277,1258,1463,1196,1357,1164,1601,1246,1497,1503,1357,1485,1412,1581,1537,1545,1559,1257,1538,1559,1304,1090,1623,1230,1332,1115,1583,1203,1346,1313,919,1263,1449,1424,1083,1354,1557,933,1085,1367,1232,1152,1425,1169,1362,1146,1647,1145,1407,1529,1440,1466,1502,1560,1539,1534,1624,1289,1493,1558,1329,1073,1750,1175,1405,1147,1583,1178,1270,1397,1092,1031,1540,1470,1141,1265,1407,1260,949,1304,1324,1131,1563,1070,1409,1248,1671,1159,1242,1523,1543,1360,1671,1443,1494,1578,1397,1694,1265,1529,1507,1178,1635,1229,1393,1296,1368,1439,1268,1463,1144,930,1671,1316,1206,1210,1198,1659,804,1261,1468,1235,1637,1087,1339,1203,1498,1394,1321,1428,1496,1238,1696,1510,1521,1591,1393,1699,1351,1571,1504,1183,1651,1274,1428,1317,1336,1460,1283,1491,1186,932,1638,1311,1221,1287,1188,1646,868,1206,1473,1415,1496,1225,1312,1386,1308,1645,1237,1512,1581,1269,1643,1577,1620,1577,1498,1686,1318,1235,1254,1325,1427,1647,1570,1450,1273,1248,1584,1502,1391,1796,1514,1333,1209,1481,1466,1406,1759,1488,1455,1381,1264,1490,1385,1387,1709,1534,1606,1448,1233,1406,1352,1214,1476,1700,1229,1139,1296,1299,1738,1398,1286,1459,1614,1234,1705,1682,1872,1932,1857,1886,1917,1769,1749,1833,1874,1757,1845,1523,1249,1750,1686,1794,1680,1725,1651,1466,662,1440,2011,1980,1816,1544,1061,1430,1844,1675,1789,1750,1871,1742,1659,1626,1899,1658,1812,1885,1895,1843,1684,1738,1936,1774,1989,1754,1947,1954,1948,1908,1891,1726,1491,1906,1824,1879,1902,1792,1666,1755,1541,1728,1740,1674,1587,1685,1565,1418,1722,1811,2021,2013,1955,1925,1999,2023,1987,1957,2007,2043,2014,1949,2005,2054,1965,1995,1924,1954,1947,2009,1943,1970,1981,2028,2014,2002,2012,2020,2019,2013,1976,1848,1993,2055,2048,2029,1994,1899,1907,1707,1917,1914,1930,1903,1928,1906,1906,1898,1878,1914,1925,1858,1920,1963,1919,1911,1907,1877,1896,1337,1753,1955,1726,1442,1482,1245,1607,1693,1632,1612,1851,1534,1588,1598,1594,1479,1545,1610,1679,1556,1256,1327,1680,1573,1244,1451,1969,1830,1755,1760,1784,1678,1836,1868,1723,1658,1669,1742,1595,1619,1869,1691,1307,1498,1694,1447,1450,1243,1421,1754,1502,1223,1167,1500,1629,1218,1648,1993,2009,1963,1988,1977,1902,1814,1545,1886,1879,1883,1576,1837,1978,1865,1890,1908,1738,1756,1802,1717,1872,1495,1430,1754,1452,1354,1608,1596,1416,1767,1398,1762,1397,1707,1600,1873,1489,1770,1507,1765,1463,1506,1586,1487,1877,1273,1292,1315,1844,1855,1790,1725,1341,1446,1700,1722,1582,1438,1648,1668,1609,1620,1590,1523,1705,1565,1332,1577,1426,1693,1644,1362,1614,1495,1655,1647,1480,1294,1576,1558,1167,1341,1363,1208,1364,1318,1544,1197,1277,1440,1332,1401,1324,1371,1345,1585,1599,1583,1926,1498,1460,1836,1863,1854,1912,1577,1990,1769,1503,1994,1631,1999,1213,1858,1894,1448,1716,1706,1689,1638,1562,1489,1618,1516,1546,1453,1609,1568,1542,1540,1467,1582,1543,1522,1423,1603,1488,1798,1879,1904,1877,1841,1711,1503,1465,1603,1545,1950,1949,1850,1891,1888,1861,1931,1952,898,493,631,473,704,601,531,603,719,1930,1973,1985,1959,1927,1966,1975,1963,1941,1659,1646,1597,1658,1746,1596,1710,1569,1760,1548,1571,1609,1481,1503,1506,1379,1454,1367,1650,1489,1240,1151,1462,1352,1576,1474,1419,1396,1569,1458,1602,1433,1395,1385,1397,1442,1406,1397,1503,1812,1764,1832,1884,1884,1875,1786,1746,1812,1633,1726,1785,1830,1825,1732,1727,1681,989,824,777,849,1562,1704,1628,1639,1695,1596,1606,1637,1680,1757,1675,1718,1654,1656,1853,1797,1874,1263,1793,1518,1782,1491,1782,1452,1728,1928,1733,1826,1839,1869,1608,1838,1858,1683,1062,1059,970,1082,1053,1094,950,1075,1673,1544,1582,1517,1596,1566,1563,1520,1664,1423,1593,1570,1636,1216,1036,1045,1066,1361,1423,1642,1790,1586,1397,1093,1457,1530,1114,1309,1512,1528,1474,1625,1626,1537,1567,1631,1482,1381,832,841,1033,585,987,737,1094,1393,1464,667,567,867,570,843,553,795,719,713,832,500,856,744,930,507,594,767,665,864,498,870,731,934,434,449,902,626,727,282,613,198,296,445,177,568,195,623,188,532,157,163,450,40,577,154,572,206,328,1491,1434,1376,1194,1252,1154,1348,998,1001,979,991,962,997,1013,1004,1508,1381,1406,1463,1483,1450,1394,1346,1585,1443,1478,1536,1592,1621,1524,1504,1509,1565,1385,1441,1396,1433,1453,1427,1415,1425,1387,1397,1362,1399,1046,930,956,931,1118,911,930,954,1057,939,938,879,1062,1401,1422,1413,1381,1109,912,953,931,1512,1592,1583,1553,1526,1521,1504,1615,1618,1538,1336,1352,1320,1221,1310,1346,1325,1592,1538,1550,1330,1474,1374,1285,1238,1572,1641,1704,1570,1595,1547,1749,1706,1802,1627,1239,1208,1465,1395,1481,1216,1351,1372,1423,1645,1427,1638,1424,1480,1649,1690,1653,1662,1588,1686,1640,1631,1746,1623,1688,1659,1569,1616,1664,1631,1532,1743,1672,1598,1687,1492,1634,1623,1633,1661,1630,1707,1687,1644,1591,1663,1663,1544,1823,1628,1633,1624,1803,1716,1624,1637,1649,1850,1675,1671,1657,1790,1683,1637,1697,1644,1154,957,950,954,1431,1495,1551,1468,1605,1298,1326,1371,1334,1217,1132,1258,1246,1374,1104,937,961,1475,1207,1183,1075,1175,1148,868,999,1003,1641,1542,1527,1551,1504,1517,1508,1544,1678,1405,1388,1384,1388,1401,1372,1345,1399,1727,1552,1537,1557,1554,1545,1537,1523,1691,1626,1621,1631,1640,1616,1617,1608,1654,1752,1458,1419,1400,1442,1473,1432,1403,1518,1829,1758,1723,1691,1737,1735,1701,1723,1881,1770,1687,1680,1720,1726,1679,1662,1708,1258,988,1251,1043,1120,1098,1239,1113,1151,1054,985,662,646,734,640,1719,1615,1739,1690,1723,1675,1712,1677,1809,1779,1725,1679,1628,1702,1683,1728,1699,1878,1727,1769,1743,1772,1752,1769,1791,1763,1816,1729,1667,1618,1686,1659,1711,1660,1693,1439,1496,1420,1632,1008,1026,1014,1052,1861,1819,1802,1825,1673,1843,1797,1832,1789,1380,1151,1222,1636,1417,995,1047,1365,1724,1605,1601,1582,1550,1623,1620,1597,1769,1507,1446,1454,1424,1420,1459,1439,1480,1425,1790,1357,1809,1228,1499,1444,1491,1454,1670,1643,1598,1664,1527,1636,1592,1579,1654,1475,1440,1425,1345,1546,1465,1440,1393,1853,1810,1828,1850,1672,1836,1799,1835,1711,1701,1635,1606,1651,1650,1641,1623,1729,1570,1474,1443,1441,1437,1512,1441,1471,1577,1859,1792,1897,1882,1739,1823,1821,1874,1661,1599,1630,1618,1537,1636,1642,1591,1731,1562,1455,1435,1520,1423,1460,1435,1466,1596,1820,1819,1854,1680,1878,1819,1841,1816,1224,1132,1597,670,693,1151,712,1123,684,670,1557,988,643,736,1240,1232,992,1272,1386,1294,670,1154,1198,1232,1289,1332,1736,1331,957,942,1713,1602,1631,1699,1650,1706,1566,1777,1482,1448,1276,1003,1188,1584,1467,1036,982,1014,1100,1250,1105,1057,1095,1375,1932,2036,2054,2010,2044,2014,2025,1984,2031,2030,2024,2021,1988,2018,2005,1987,1984,2022,2031,2017,1998,2031,2002,2004,1944,2017,2031,2034,1998,1989,2020,2000,1990,1985,2048,1889,1907,1902,1889,1903,1901,1830,1872,1885,1917,1872,1886,1838,1869,1832,1898,1939,1672,1672,1666,1684,1658,1655,1646,1601,1801,1661,1682,1661,1636,1662,1643,1602,1709,1497,1446,1432,1424,1433,1437,1412,1394,1583,1493,1494,1535,1527,1318,1523,1551,1613,1326,1633,1456,1687,1425,1472,1513,1673,1350,1441,1451,1516,1973,1639,1541,1672,1584,1594,1512,1639,1706,1529,1577,1624,1701,1722,1612,1597,1528,1654,1546,1574,1581,1529,1511,1585,1527,1463,1537,1470,1759,1526,1658,1635,1645,1636,1647,1807,1668,1485,1745,1935,1833,1682,1750,1907,1936,1944,1941,1965,1948,1915,1915,1914,1833,1832,1878,1996,1847,1851,1849,1817,1789,1771,1786,1775,2022,1957,1970,1963,1935,1903,1916,1886,1987,1895,1874,1904,1855,1816,1823,1815,1803,2028,1971,1989,1960,1941,1952,1936,1905,1989,1883,1812,1806,1745,1776,1772,1755,1768,1929,1845,1847,1776,1813,1825,1821,1797,1762,1664,1440,1471,1434,1394,1459,1410,1432,1631,1977,1926,1962,1954,1938,1896,1908,1904,1905,1858,1930,1988,1941,1961,1910,1919,1896,1930,1882,1949,1655,1495,1530,1598,1567,1606,1564,1503,1876,1799,1821,1789,1783,1743,1736,1703,1747,1516,1323,1281,1300,1411,1281,1354,1358,1588,1461,1474,1512,1577,1570,1482,1472,1454,1681,1668,1478,1702,1681,1538,1619,1426,1351,1345,1314,1250,1275,1176,1300,1755,1882,1866,1877,1897,1893,1866,1878,1910,1945,1897,1875,1867,1889,1887,1892,1863,1887,1418,1415,1361,1399,1462,1471,1486,1448,1802,1666,1694,1765,1663,1610,1584,1540,1578,1513,1556,1586,1612,1727,1709,1698,1651,1676,1451,1475,1473,1447,1340,1416,1424,1577,1486,1519,1496,1557,1279,1510,1516,1465,1667,1491,1531,1492,1223,1499,1508,1512,1579,1971,1952,1921,1658,1406,1407,1419,833,1409,1375,1396,1592,1206,1182,1087,1136,1151,1065,1173,1198,1514,1417,1450,1951,1883,1897,1915,1905,1908,1902,1940,1675,1602,1505,1519,1439,1316,918,922,835,907,823,966,713,845,927,1011,759,954,886,1102,866,1049,1288,1276,1342,1299,740,367,607,565,309,313,446,759,1358,836,914,900,1057,1234,847,1332,698,203,459,294,296,1435,1425,1500,1713,1837,1734,1813,1826,1815,1792,1758,1793,1741,1633,1649,1560,1614,1607,1649,1577,1680,1352,1289,1336,1319,1611,1694,1663,1666,1686,1636,1651,1694,1681,1685,1670,1676,969,1566,1833,1863,1768,1785,1798,1866,1794,1764,1646,1451,1487,1446,1664,1857,1841,1869,1843,1878,1878,1851,1881,1849,1112,1757,1160,1078,1266,1052,1241,2040,2004,1976,1919,1992,1944,1896,1901,1887,1972,1946,1950,1924,1914,1892,1939,2011,1744,1646,1763,1796,1807,1810,1659,1625,1911,2055,2049,2052,2041,2046,2040,2030,2049,2054,2055,2039,2045,2055,2042,2034,2050,2057,1880,1922,1855,1849,1821,1864,1824,1880,1952,1903,1879,1840,1850,1842,1852,1844,1896,1334,1381,830,810,734,681,691,626,793,857,738,397,726,833,843,559,463,761,820,936,420,523,797,841,893,609,511,1263,1081,1132,420,751,1184,1071,1050,393,984,1074,1072,818,407,1096,1144,1122,566,1437,1345,1580,1342,1781,1308,1003,1130,1165,1127,1148,1092,1103,1094,1162,1101,1206,1195,1074,1042,1079,1255,1325,1118,1085,1206,1046,1055,1077,1034,1016,1017,917,1037,1073,838,826,821,877,1260,434,564,487,558,541,478,550,536,468,514,476,493,518,532,582,525,1521,1474,1481,1496,1544,1491,1521,1525,1484,1089,997,1007,1529,1507,1351,1394,1308,1395,1496,1747,1635,1670,1648,1598,1620,1676,1639,1681,1615,1486,1477,1542,1451,1529,1514,1477,1516,1038,1148,1229,1356,1311,1303,1280,1091,1445,1443,1380,1430,1552,1509,1554,1553,1755,1268,1013,1123,1181,1109,1156,1065,1088,1102,1183,1101,1203,1207,1062,1056,1093,1372,1293,1120,1094,1193,1078,1049,1090,1029,1011,1016,907,1015,1059,844,827,832,955,1143,425,584,507,536,558,501,527,528,489,531,497,486,501,524,576,509,1841,1811,1799,1791,1809,1778,1737,1696,1380,1397,1397,1400,1685,1214,1220,1225,1545,1457,1296,1309,1508,1235,1044,992,1008,1487,1694,1433,1674,1641,1386,1177,1186,1268,1460,1436,1662,1669,1614,1683,1700,1582,1664,1642,1675,1188,1375,1398,1570,1879,1728,1954,1752,1679,1661,1712,1721,1617,1736,1805,1665,1572,1505,1553,1543,1523,1544,1572,1203,1756,1624,1615,1590,1574,1549,1582,1630,1763,1475,1762,1781,1491,1433,1765,1777,1543,1699,991,1125,1147,1127,1147,1128,1069,1128,1133,1155,1141,1217,1113,1081,1041,1088,1226,1080,1190,1180,740,788,1156,1141,1073,982,1016,1261,1106,872,685,1073,1219,1087,975,933,1217,1109,960,560,1153,1196,1162,995,870,1225,1138,961,457,1162,1214,1195,944,816,1157,1114,1057,415,1204,1178,1139,973,1282,1135,1092,1192,1048,1052,1130,1038,1056,1015,889,1006,1039,846,823,822,965,857,1147,1241,1168,424,1053,1235,1157,848,1224,1109,1218,1189,1246,1132,1126,1237,1197,1264,1131,1116,1234,1183,1332,1115,1185,1198,1175,1303,1166,991,1040,1093,1352,1111,1005,1005,1231,1282,1046,974,1078,1318,1245,1062,899,1119,1549,559,531,507,1340,1547,1766,1855,1866,1820,1559,1367,480,516,505,538,552,1012,1251,1038,1304,1495,1157,1157,1510,1289,1039,1277,1512,1190,1090,1469,1735,1861,1751,1737,1894,1661,1821,1889,1762,1772,1810,1826,1712,1860,1879,1721,1905,1719,1758,1883,1745,1743,1812,1779,1810,1821,1825,1677,1910,1718,1846,1784,1760,1897,1768,1830,1801,1798,1749,1816,1893,1711,1742,1888,1705,1904,1767,1753,1887,1758,1720,1797,1901,1736,1808,1850,1691,1906,1675,1840,1781,1800,1752,1791,1825,1778,1826,1832,1750,1899,1727,1746,1900,1706,1846,1782,1756,1298,1202,1215,1211,1274,1166,1229,1109,984,621,779,873,694,403,729,819,865,554,466,781,817,912,476,488,821,867,846,730,1373,990,1157,1121,1131,1143,1084,1095,1120,1188,1124,1181,1205,1069,1051,1032,1213,1450,1488,1560,1134,1112,1197,1069,1059,1092,1036,1052,1026,899,996,1049,879,886,765,865,1487,1402,1555,1087,425,572,526,539,575,493,535,526,504,527,524,485,500,523,573,535,1728,1658,1670,1593,1709,1674,1624,1657,1709,1688,1765,1657,1621,1604,1690,1576,838,526,1103,449,437,313,848,1149,2026,2044,2017,2017,2015,1997,1995,1986,2035,2037,2017,2025,2020,2008,2017,1962,2011,1362,1362,1617,1511,1284,1484,1162,1119,1124,1121,1125,1122,1123,772,73,988,2010,2048,1866,1873,1901,1840,1858,1883,1910,1852,1957,1914,1931,1984,1861,1898,1920,1909,1869,1809,1989,1894,1889,1940,1898,1818,1766,1816,1760,1926,1900,1878,1877,1868,1895,1889,1913,1845,1992,1751,1871,1866,1920,1843,1599,1837,1474,1536,1606,1632,1595,1530,1468,1574,1604,1634,1642,1522,1518,1585,1574,1528,1893,1601,1622,1493,1572,1960,1803,1775,1765,1849,1874,1845,1852,1921,1389,1296,1306,1349,1289,1377,1313,1249,1619,1467,1443,1438,1469,1493,1466,1438,1507,1606,1458,1443,1463,1497,1489,1457,1439,1601,1478,1458,1456,1466,1473,1445,1447,1428,1642,1423,1408,1417,1495,1460,1419,1399,1592,1405,1419,1408,1437,1480,1434,1428,1405,1618,1416,1378,1431,1492,1450,1400,1391,1578,1429,1357,1385,1477,1468,1407,1444,1402,1619,1429,1377,1474,1487,1483,1465,1411,1517,1566,1464,1425,1475,1480,1511,1448,1392,1611,1347,1321,1377,1391,1342,1332,1317,1283,1554,1353,1293,1402,1362,1359,1303,1250,1546,1346,1266,1329,1376,1270,1327,1343,1238,1657,1435,1429,1457,1475,1518,1455,1402,1620,1424,1379,1443,1491,1470,1495,1416,1393,1590,1384,1349,1435,1447,1453,1417,1391,1546,1506,1379,1350,1479,1461,1442,1403,1402,1605,1400,1401,1447,1437,1486,1422,1413,1389,1649,1414,1409,1446,1499,1452,1426,1408,1724,1641,1834,1754,1777,1795,1654,1800,1819,1849,1807,1739,1603,1832,1738,1811,1687,1837,1791,1876,1868,1808,1956,1903,1826,1905,1920,1833,1821,1781,1846,1786,1788,1763,1901,1804,1784,1761,1747,1771,1717,1720,1747,1895,1810,1801,1728,1784,1754,1757,1720,1802,1960,1847,1833,1808,1802,1821,1815,1813,1913,1724,1739,1768,1716,1733,1724,1782,1760,1848,1900,1861,1846,1817,1816,1742,1789,1778,1879,1653,1734,1757,1492,1741,1747,1667,1756,1793,1753,1732,1771,1617,1677,1590,1824,1819,1726,1690,1606,1636,1694,1688,1674,1666,1774,1680,1641,1632,1671,1695,1681,1693,1672,1860,1806,1708,1790,1829,1801,1805,1796,1857,1757,1739,1712,1754,1797,1755,1818,1722,1854,1812,1901,1875,1873,1906,1972,1819,1867,1684,1669,1758,1715,1733,1756,1753,1743,1773,1682,1722,1821,1786,1785,1876,1733,1774,1523,1464,1515,1548,1510,1528,1531,1480,1842,1990,1941,1950,2008,1965,1950,1982,1889,1942,1987,2026,1987,1920,1971,1996,2005,1920,1262,40,38,40,192,135,40,38,40,1595,1781,1838,1836,1836,1835,1800,1792,1923,1454,1462,1440,1424,1420,1419,1444,1457,1821,1850,1812,1754,1786,1754,1815,1756,1840,702,364,40,38,40,319,38,40,38,454,1194,1312,1776,1719,1741,1772,1736,1709,1724,1757,1757,1297,1321,1407,1527,572,1412,1539,1339,1089,1583,1775,1603,1358,40,38,40,194,132,40,38,40,1119,1238,1219,1141,1331,1692,1616,1646,1697,1664,1642,1674,1629,841,40,38,40,761,903,70,496,1718,1838,1998,1657,1629,1629,1645,1646,1677,1729,1711,1721,1775,1717,1766,1722,1694,1658,1668,1647,870,1156,39,1922,1795,1714,1713,1776,1747,1731,1716,1819,1901,1824,1888,1891,1838,1855,1821,1809,1936,1785,1575,1730,1689,1745,1774,1805,1714,1848,1865,1933,1832,1920,1810,1958,1781,1985,1592,1193,1181,1066,1021,1387,1408,1348,1383,1411,1331,1167,1090,1119,1121,1196,1293,1317,714,893,966,1168,1595,1575,842,651,776,978,1602,1687,1720,1205,999,1365,1717,1245,1123,756,962,875,579,684,1058,1314,1286,1151,1338,1371,1368,1339,1231,1743,1920,1903,1909,1833,1853,1909,1857,1900,1885,1926,1916,1943,1840,1869,1926,1774,952,971,920,1008,1962,1960,1604,1979,1518,1151,1205,1203,1638,2000,2039,2041,2021,1864,1919,1893,1840,2041,2046,2051,2026,1943,1817,1735,1872,1809,1818,1741,1806,1773,1959,1948,1949,1906,1966,1264,1265,1384,1724,1206,1250,1243,1407,1191,1231,1243,1293,1812,1148,1231,1434,1412,1051,745,993,1541,1439,744,883,1696,1675,816,791,1482,1549,1288,1383,1424,1966,1755,1762,1820,1804,1766,1823,1875,1791,1751,1660,1673,1660,1806,1750,1805,1805,1780,1454,1373,1451,1521,1526,1405,1414,1473,1618,1504,1430,1500,1633,1527,1463,1502,1697,1976,1989,1929,1924,2019,2002,1961,2002,1941,1772,1767,1740,1831,1663,1562,1593,1636,1960,1886,1799,1901,1866,1815,1800,1814,1954,1894,1846,1872,1934,1791,1808,1778,1824,1688,1542,1511,1591,1199,1258,1242,1738,1125,1249,1203,1378,1504,1116,1239,1602,1831,1777,1758,1768,1929,1786,1774,1766,1879,1817,1845,1822,1797,995,878,816,764,1183,1162,1175,1152,1282,1173,1208,1160,1342,1260,1389,1344,1312,1835,1842,1858,1870,1891,1827,1854,1852,1919,1890,1921,1918,1887,1947,1909,1936,1951,1852,1827,1876,1781,1779,1845,1729,1629,1709,1591,1923,1793,1846,1917,1869,1840,1909,1747,1478,1410,1448,1566,1481,1684,1769,1503,1590,1705,1632,1700,1703,1792,1725,1773,1843,1983,2057,2053,1870,2007,1971,1971,1926,2022,1954,1941,1879,1600,1115,1425,1255,1323,1760,1791,1735,1742,1642,1476,1566,1592,1743,1783,1786,1790,1805,1813,1846,1795,1808,1690,1685,1709,1637,1658,1776,1824,1726,1513,989,1129,915,1519,1046,929,871,1116,1214,1056,1095,975,1038,582,506,520,707,693,745,726,995,884,1210,1181,970,1331,1345,1441,1359,1358,1444,1454,1707,1482,1291,1574,1652,1313,1641,1703,1602,1663,838,234,234,216,797,482,475,493,898,2050,2023,2053,2034,2021,2040,2040,2027,2031,1965,1925,1966,1900,1903,1925,1916,1895,1416,1382,1410,1470,1345,1120,1174,1105,1254,1464,1350,1539,1463,1871,1822,1839,1879,1877,1820,1791,1804,1884,1766,1742,1770,1786,1798,1688,1751,1683,1411,1444,1506,1450,1436,1456,1542,1487,1589,1884,1883,1856,1906,1215,1247,1197,1283,1869,1821,1780,1804,1661,1426,1401,1497,1581,2039,2027,2035,2051,2007,1997,1973,1993,1740,1510,1504,1468,1723,1690,1658,1681,1756,1993,1997,1982,2003,1810,1720,1733,1727,1977,2052,2049,2057,1941,1294,1249,686,536,533,539,983,1422,1425,1424,1083,1284,1568,1582,1271,1383,1548,1566,1458,1481,1560,1778,1631,1923,1830,1293,1210,1335,1259,1173,931,1029,958,1318,1001,945,936,894,1729,1973,1945,1973,1974,2033,2000,1980,2005,1808,1479,1534,1614,1800,1639,1707,1638,1793,1598,1484,1619,1700,1690,1682,1720,1612,1578,1656,1651,1469,1497,1527,1608,1499,1593,1884,1911,1849,1847,1894,1881,1878,1865,1872,1490,1465,1472,1915,1959,1982,2005,2004,1820,1793,1801,1797,1853,1900,1908,1913,1671,1397,1479,1382,1440,1449,1532,1462,1417,1563,1685,1701,1642,1543,1539,1575,1546,1637,1736,1620,1760,1769,1633,1758,1666,1745,1663,1674,1519,1704,1636,1684,1508,1683,1742,1430,1583,1562,1541,1506,1547,1618,1727,1478,1501,1560,1517,1501,1455,1581,1710,1464,1325,1208,1529,1495,1615,1750,1440,1671,1475,1576,1775,1715,1557,1647,1411,1224,1152,1289,1317,1365,1216,1370,1735,1353,1355,1373,1214,1172,1111,1293,1199,1378,1457,1386,1353,1600,1344,1213,1373,1876,1712,1752,1549,1269,999,1072,850,962,1088,1166,1309,1256,1596,1604,1579,1713,1927,1095,1220,979,993,818,666,1220,1111,1407,1190,1281,1268,1387,1583,1741,1793,2000,1673,1785,1796,1605,1281,1258,1202,1312,1279,1338,1316,1226,1232,1309,1275,1230,1680,1613,1694,1674,1515,1410,1562,1770,1570,1635,1221,1189,1227,1258,1291,1263,1472,1571,1633,1404,1314,1368,1234,1096,1207,1307,1485,1694,1701,1658,1572,1392,1477,1357,1509,1638,1593,1285,1269,1210,1242,1171,1271,1544,1741,1650,1758,1583,1549,1710,1639,1464,1681,1633,312,273,1622,1652,323,267,1562,1597,346,267,1566,1615,362,277,1563,1586,392,280,1481,1604,416,267,1262,1264,1313,1229,1433,1262,1287,1324,1398,1294,1249,1293,1303,1415,1281,1371,1288,1442,1523,1276,1242,1264,1207,1280,1259,1285,1240,1441,1189,1191,1207,1193,1181,1152,1208,1491,1204,1252,1273,1263,1291,1260,1284,1273,1894,1716,1789,1707,1674,1622,1836,1880,1432,1274,1391,1352,1343,1358,1345,1273,1378,1329,1418,1295,1385,1368,1443,1354,1518,1806,1646,1587,1574,1628,1586,1504,1377,1317,1392,1388,1511,1510,1530,1438,1572,1754,1837,1673,1584,1576,1642,1575,1508,1404,1281,1409,1388,1478,1548,1538,1422,1564,1715,1883,1678,1575,1587,1658,1576,1514,1443,1276,1378,1400,1460,1573,1520,1435,1508,1715,1888,1689,1584,1606,1673,1566,1519,1471,1249,1354,1373,1460,1563,1524,1435,1498,1731,1855,1186,1253,1033,878,875,1055,1023,1035,1107,1304,1233,1212,884,1018,1066,1018,1634,1174,1221,1064,926,871,1040,1011,983,1120,1274,1211,1205,961,958,1056,1038,1485,1963,1915,1913,1964,1962,1955,1954,1904,1883,1795,1775,1875,1873,1950,1936,1951,1619,1807,1975,1943,1977,2021,1986,1918,1965,2001,1773,1762,1758,1767,1783,1746,1843,1760,1739,1787,1794,1777,1837,1508,1938,1988,1940,1884,1879,1953,1865,993,809,1583,1925,1983,1992,1984,1926,1992,1966,1926,2030,1955,1975,1992,1934,1992,1940,1942,2001,1583,1556,1570,1580,1573,1533,1568,1578,1769,1700,1628,1678,1557,1858,1816,1833,1770,1838,1496,1599,1507,1519,1700,1687,1714,1628,1756,1620,1696,1711,1863,1814,1863,1834,1892,1652,1698,1686,1597,1856,1784,1840,1815,1782,1551,1633,1559,1639,1634,1748,1670,1684,1744,1731,1772,1762,1714,1529,1728,1678,1782,1500,1722,1796,1630,1674,1810,1745,1615,1681,1589,1757,1596,1592,1604,1741,1642,1683,1032,1888,1896,1536,1615,1946,1870,1575,1537,1787,2006,2033,1958,1743,1345,1020,1077,1311,1146,1742,1591,1538,1474,1430,1471,1466,1497,1687,1226,1105,787,992,1323,1011,1018,1045,1101,1405,1843,1767,1872,1777,1897,1786,1893,1790,1832,1674,1645,1759,1610,1785,1743,1670,1871,1878,1794,1873,1804,1846,1831,1857,1791,1849,1721,1632,1779,1610,1763,1733,1731,1818,1775,1878,1859,1852,1858,1839,1904,1830,1966,1937,1930,1989,1879,1967,1944,2030,1937,1926,1790,1694,1788,1751,1846,1821,1833,1743,1679,1429,1238,1550,1487,1784,1415,1101,1231,1082,770,226,813,1294,1238,1385,1240,1453,1341,1242,1339,1325,1435,1288,1337,1350,1274,1493,1343,1331,1364,1313,1472,1634,903,1661,1476,1859,1936,2009,2055,1992,2010,1976,1923,1879,1628,1525,1511,1610,1626,1681,1700,1757,1788,1724,1733,1644,1689,1577,1592,1653,1284,1692,1827,1947,1854,1713,1693,1768,1935,2004,1899,1792,1642,1844,1907,1926,1784,1646,1692,1933,1904,1888,1751,1598,1929,1953,1969,1921,1862,1616,1836,1863,1882,1865,1642,975,982,998,983,1638,1508,1714,1563,1670,1620,1681,1660,1525,1856,1692,1689,1734,1675,1680,1670,1632,1696,1652,1769,1898,1748,1777,1694,1645,1796,1686,1614,1758,1664,1805,1619,1651,1655,1643,1754,1877,1887,1910,1892,1950,1919,1786,1689,1761,1651,1683,1914,1920,1880,1896,1913,1951,1964,1903,1969,1950,1890,1793,1774,1807,1804,1969,1913,1902,1882,1911,1867,1876,1919,1368,1232,1334,1614,1596,1639,1594,1751,1865,1835,1884,1834,1872,1819,1847,1915,1824,1903,1892,1649,607,508,575,1230,1000,1140,1307,1231,1111,1599,1715,1601,1610,1665,1762,1490,1691,1716,1296,1660,1524,1339,1203,1508,1633,1661,1716,1766,1678,1755,1645,1621,1569,1340,1527,1501,1498,1441,1417,1539,1425,1492,1402,1527,1453,1803,1804,1844,1890,1861,1846,1850,1839,1897,1832,1825,1896,1909,1878,1891,1863,1930,1974,1992,1927,1894,1902,1928,1926,1923,1897,1955,1936,1876,1870,1844,1911,1902,1888,1571,1388,1446,1799,1643,1581,1652,1593,1617,1667,1634,1715,1642,1651,1623,1665,1646,1641,1636,1630,1745,1662,1632,1659,1640,1626,1637,1657,1678,1920,1860,1863,1869,1874,1858,1858,1857,1930,1828,1836,1816,1850,1842,1845,1832,1852,1958,1848,1868,1858,1858,1836,1861,1864,1913,1334,1428,1442,1391,1363,1432,1626,1379,1370,1374,1497,1409,1470,1546,1911,1896,1820,1734,1812,1847,1866,1896,1854,1632,1746,1784,1667,1683,1732,1738,1622,1677,1701,1730,1676,1783,1702,1799,1582,1726,1741,1869,1805,1881,1699,1652,1886,1855,1987,1835,1826,1635,1788,1751,1790,1816,1564,1657,1733,1667,1776,1739,1581,1829,1723,1812,1728,1804,1619,1727,1630,1613,1766,1624,1142,1279,1242,1211,1286,1274,1049,1689,1592,1485,1566,1634,1581,1518,1611,1582,1559,1552,1578,1774,1820,1925,1920,1851,1469,1879,1431,1401,1763,1793,1831,1741,1723,1638,1470,1714,1722,1787,1660,1383,1294,1819,1826,1828,1481,1483,1448,1437,1683,1561,1430,1564,1521,1533,1501,1534,1495,1557,1376,1431,1540,1538,1580,1467,1473,1485,1715,1516,1549,1429,1375,1478,1481,1761,1798,1879,1810,1831,1862,1797,1736,1705,1621,1643,1796,1673,1801,1716,1750,1786,1714,1729,1888,1942,1823,1859,1796,1878,1833,1713,1686,1663,1704,1712,1773,1713,1667,1702,1812,1781,1605,1852,1692,1729,1699,1743,1603,1701,1675,1731,1797,1672,1716,1646,1770,1713,1743,1710,1587,1795,1717,1410,1459,1764,1778,1654,1671,1774,1387,1503,1526,1510,1488,1439,1600,1530,1520,1785,1746,1652,1742,1718,1671,1762,1747,1632,1668,1636,1674,1631,1614,1627,1608,1697,1669,1645,1625,1688,1608,1657,1634,1755,1646,1649,1632,1664,1691,1624,1663,1644,1717,1627,1659,1646,1687,1633,1634,1579,1733,1597,1655,1714,1769,1722,1639,1633,1639,1718,1623,1674,1660,1786,1663,1615,1625,1664,1692,1774,1862,1695,1647,1707,1814,1691,1705,1759,1822,1802,1759,1877,1887,1873,1993,1966,1953,1945,1969,1870,1827,1873,1963,2001,2010,2005,1902,1872,1913,1792,1844,1983,2019,2013,1996,1995,1962,1943,1919,1882,1916,1926,1934,1961,1971,1797,1811,1913,1921,1895,1830,1602,1614,1804,1854,1825,1654,1620,1620,1624,1627,1677,1553,1423,1334,1297,1443,1482,1501,1429,1416,1426,1526,1514,1330,1446,1559,1495,1403,1663,1706,1704,1756,1655,1695,1698,1782,1695,1667,1749,1831,1689,1680,1638,1700,1673,1714,1660,1692,1654,1740,1680,1720,1631,1645,1776,1634,1641,1656,1934,1888,1920,1910,1917,1919,1896,1876,1936,1786,1791,1808,1813,2014,2006,2014,2043,2041,2028,2036,2023,2040,2044,2020,2051,2055,2056,2053,2043,2042,1984,1857,1853,1913,1925,1926,1865,1846,1902,1470,1418,1506,1506,1731,1593,1547,1575,1604,1521,1590,1644,1453,1520,1585,1567,1517,1610,1568,1401,1524,1412,1615,1746,1946,1713,1683,1698,1700,1915,1870,1877,1803,1775,1756,1791,1853,1886,1494,1933,1974,2027,1971,1902,1902,1786,1656,1665,1761,1712,1778,1744,1796,1668,1708,1766,1658,1701,1693,1352,1473,1497,1540,1477,1589,1528,1501,1496,1561,1479,1508,1515,1555,1526,1519,1501,1508,1316,1287,1298,1268,1611,1921,1910,1898,1878,1965,1930,1938,1938,1556,1303,1250,1327,1329,1299,1336,1361,1600,1487,1474,1542,1659,1575,1517,1651,1545,1820,1614,1655,1730,1356,1659,1669,1668,1896,1197,1256,1313,1254,1311,1289,1257,1236,1491,1186,954,1176,1097,1274,1055,1155,1386,1270,1323,1266,1189,1272,1229,1365,1355,1625,1385,1292,1322,1364,1300,1313,1306,1404,1969,1457,1647,1761,1646,1566,1492,1477,1950,1925,1023,1205,1132,1266,1254,1180,1926,1972,1931,1455,1819,1835,1810,1461,1926,1885,421,658,476,502,573,500,554,417,924,626,1342,1401,1363,1237,1150,765,751,533,1086,1361,1541,1478,1417,1385,549,1252,952,1447,1410,1211,1344,1220,1294,1465,1898,1731,1733,1787,1179,70,531,1076,782,437,708,471,763,526,614,806,1161,724,1285,1409,1403,1415,1440,1410,1700,1634,1662,1606,1563,1538,1769,1752,1337,1081,1139,1200,1294,1373,1198,1261,1401,1454,1608,1554,1686,1680,1455,1293,1457,1259,260,25,30,25,925,698,1246,923,1649,1601,1650,1610,1569,1304,1638,1561,1521,1540,1881,1910,1939,1909,1935,1900,1053,956,1461,1499,1004,933,1137,1274,1417,1421,1462,1477,1566,1516,1723,1756,1549,1616,1547,1546,1570,1557,1514,1567,1978,2055,2052,2044,1923,1851,2040,2029,1812,1777,1931,1869,2021,2004,2037,2007,2022,2009,2023,1987,2048,2052,1815,1729,1975,2008,2015,2016,1744,1675,1328,1206,1243,1206,1858,2000,1732,1719,1873,1903,1822,1757,1760,1760,1941,1944,2007,1971,1940,2009,1981,1974,1663,1529,1567,1530,1559,1550,1564,1496,1451,1383,1360,1315,1301,1218,1392,1290,1919,2007,1997,1957,2014,1984,1950,1913,2001,2002,1696,1711,1651,1657,1675,1669,496,234,978,1355,1367,1198,992,1061,906,1040,1511,1718,1628,1662,1749,1715,1575,1514,1612,1542,1615,1539,1564,1452,1429,1325,1150,1072,1322,1267,1278,1202,1440,1423,1561,1566,1501,1474,1384,1409,969,968,1453,1587,1158,828,1305,1285,1485,1471,1474,1512,1283,1186,1419,1488,1573,1680,1803,1847,1782,1826,1660,1537,1640,1620,1628,1560,1571,1512,1570,1503,1293,1301,1507,1555,1451,1342,1403,1401,1402,1377,799,449,547,424,1318,1478,1627,1535,1446,1436,1528,1500,1461,1358,1208,1148,1281,1336,1477,1486,1171,998,460,290,1588,1808,1861,1773,1615,1536,1058,1055,1450,1547,1558,1568,1584,1585,1555,1556,1854,1777,1826,1743,1868,1818,1851,1808,1319,1409,1411,1379,1434,1394,1631,1672,1635,1535,1509,1480,1526,1546,1478,1466,1854,1936,1607,1523,734,733,923,842,1172,1501,1683,1679,1592,1485,1538,1334,1231,1172,778,591,867,815,744,609,1219,1567,683,495,566,504,1640,1813,1268,1090,1088,1033,1346,1386,1198,1054,992,893,1343,1440,1464,1425,1431,1455,1689,1708,1715,1630,1889,1896,1634,1575,1093,1027,1233,1142,1022,971,960,868,1152,993,1243,1188,705,486,631,620,596,504,620,620,570,511,657,623,591,502,635,597,550,470,572,553,1711,1880,1237,1038,1103,1031,1104,1033,1155,1095,1768,1758,1651,1727,1666,1686,1700,1695,1254,1189,1599,1673,1675,1722,1873,1845,485,267,332,288,253,189,364,261,246,65,241,25,213,140,260,292,318,250,1256,1487,1551,1703,1173,1100,1100,1082,1112,1213,1514,1470,1495,1424,1840,1853,1751,1699,1589,1377,1632,1600,1471,1372,1366,1279,1349,1726,1616,1206,1520,1482,1474,1512,1502,1192,1409,1448,1430,1463,1531,1528,1496,1033,1246,1333,1437,1108,1289,1252,1124,1075,1269,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2055,2009,1930,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2024,1865,2048,2048,1979,2048,2048,1973,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,1980,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2046,1917,2048,2048,2048,2024,1939,2048,1967,2048,1968,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2040,1997,1822,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2049,1935,1915,2048,2048,2048,2048,2057,1948,1925,2048,2048,2048,2048,2054,1914,1967,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2056,2033,1949,1850,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2056,2048,2048,2048,2056,2048,2028,1953,1744,2048,1976,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2057,2048,2051,1976,1943,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1885,2048,2048,2048,2048,1965,2048,2048,2048,2048,1950,2048,2048,2048,2048,2048,2056,1964,2048,2048,2048,2048,2048,2048,1966,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2030,2028,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,1981,2048,1976,2048,1979,2048,2048,1973,1981,2048,1711,1967,2055,2048,1998,1868,1946,2042,2048,2030,1908,1906,2049,2056,2053,1937,1905,2016,2048,2055,1966,1909,1991,2052,2048,1998,1909,1949,2035,2057,2021,1901,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1985,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,1975,2048,2048,2048,1977,2048,1981,2048,1978,1982,2048,1974,2048,2048,2048,2048,1977,2048,2048,2048,2048,1976,1974,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,1979,2048,1979,2048,1976,1982,2048,2048,1981,2048,2048,1981,2048,1979,2048,1977,2048,1979,2048,1983,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,1976,2048,2048,2048,1975,2048,2048,2048,2048,1975,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2045,2010,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2040,2027,1849,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2056,2032,2026,1993,1958,1789,1919,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1964,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1957,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1892,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,1897,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,1985,2048,2048,1981,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,1976,2048,2048,1971,2048,1978,2056,2000,1970,2023,1934,2048,1981,2048,2048,1978,2048,1970,2048,1969,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1970,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1975,2048,2048,2048,2048,2048,2048,1970,2048,2048,2048,2048,2048,1982,2048,1980,2048,1978,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,1964,2048,2048,1970,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2056,2048,2048,2057,2028,1909,1768,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2053,2024,1819,1968,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2047,1858,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,1871,1965,2048,2048,2048,2048,2048,1977,1979,1985,2048,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,1966,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2057,2048,1962,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1943,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2055,2048,2048,2048,2053,2034,1837,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2055,2048,1979,1873,2048,1974,2048,1975,1985,2048,1981,2048,2048,2048,2048,2048,2033,1917,2048,2048,2048,2048,2048,2056,1938,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,1979,2048,1894,2048,1975,1985,1893,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,1981,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,1895,2048,2048,2048,1947,2048,2048,2048,1949,1978,1978,2048,1974,1802,1971,1979,2048,1973,2048,2048,2048,2048,2048,2048,2048,2055,2011,1951,1733,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2002,1859,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,1972,2048,2048,2048,2048,1973,2048,2048,2055,2056,2053,1886,2048,2048,2048,2048,2048,1975,1836,2049,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1893,2043,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1915,1017,1130,1630,1388,1784,1346,954,1178,1369,1420,1449,1482,1783,1858,1882,1891,1887,1872,1887,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2038,2016,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,1976,2048,1976,2048,1442,1345,1609,1498,1142,1411,1454,1387,887,792,847,806,901,853,2057,2048,54,25,25,1940,2052,1222,25,25,1068,1165,1375,959,2048,1939,2005,2048,2048,2048,2048,2048,2005,2048,2048,2007,2048,2048,1999,2048,2048,2048,2048,2048,2048,1890,2003,1940,1978,1945,1954,2007,1940,1962,2048,2048,2048,2048,2048,1893,1876,2048,2048,2048,2048,2002,2048,1866,2048,2048,2005,2048,2048,1997,2048,2056,2048,2048,2048,2048,2057,1999,2048,2048,2048,2048,2048,2030,1997,2048,1961,2048,1873,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,1951,2048,1876,2048,1922,2048,1924,1957,1908,1926,1929,1835,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,1970,2048,2004,2048,1957,1944,2004,1999,1965,1943,1840,2048,2048,2048,2002,2048,2048,2048,2004,2048,1932,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,1945,2048,2048,2048,2048,2048,2048,1961,2048,2048,2048,2048,2048,2048,2048,1952,1945,2048,1873,2048,2048,2048,2048,2048,2048,2048,2048,1987,2048,2048,1980,2048,2048,2003,2006,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,1901,1912,2048,1925,1961,2048,1875,1934,2020,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2006,1870,1966,2000,2048,1997,1887,1859,2048,2048,2048,2048,2045,2040,1956,1934,2018,2048,2048,2048,2048,2048,2048,2048,2013,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2000,2048,2048,1821,1870,1697,2048,2048,2048,2048,1928,2048,2048,2048,2001,2048,2048,1943,2048,1944,2048,1845,2048,2001,2048,2048,1744,2048,1875,2048,2048,2048,2048,2048,2048,1961,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,1951,2048,2048,2048,2048,1870,2048,2048,1968,2048,1973,1942,1950,2048,1939,2048,1941,2048,2048,2048,2048,2048,2048,2005,2048,1936,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,1999,2048,2048,2005,2048,1872,2048,2048,2048,2048,2003,2048,2048,1954,2048,2048,2048,2003,2048,1951,2048,1933,1952,2004,1974,2048,1947,2048,2048,2048,1816,1964,1943,1949,2048,2048,2048,2048,2048,2004,2048,1874,1949,1888,1945,2048,2048,2048,2048,2048,1944,2048,1961,2048,2001,1940,1725,2048,2048,2048,2048,2048,2048,2005,1883,2048,2048,2048,2007,2048,2048,2048,1940,2048,1932,2006,2048,2048,2048,2003,2048,2048,2011,2048,2048,2048,2002,2048,2048,2048,2048,2004,2048,2048,1944,2048,2048,2048,2048,1865,2048,2048,2048,2048,1970,2048,2048,2048,1978,2048,2005,2048,2048,1818,2048,2002,2048,2048,1753,2048,2048,2053,2028,2048,2048,2002,2007,2048,2056,2048,2048,2048,2048,2051,2048,2048,1937,2048,2048,2048,2048,1944,2048,2048,1945,2048,2048,2048,2048,2048,1868,2048,1878,1778,2016,2048,2048,2048,2048,2048,1113,1944,2048,2048,2048,2002,2048,2048,1968,2048,2048,1732,2048,2013,2048,1857,2048,1877,2048,1870,2048,2048,2048,1770,2048,2048,2048,2048,2048,1949,2048,2048,1935,2048,2048,1941,2006,2048,1993,2048,2048,2048,1954,1951,1923,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2022,2048,2048,2048,2005,2048,2048,2048,1203,2048,2048,2048,2048,2001,2048,2048,2048,2001,2048,2048,2048,2048,2048,2003,2048,2048,2048,2057,2048,2007,2048,2048,2048,2048,2048,2002,2048,2048,2048,1927,2048,2048,2048,2048,2007,2048,2048,2048,1998,2048,2008,2048,2048,2048,2048,2048,1683,1873,2038,2045,1997,2011,2055,1999,2048,2048,2048,2048,1875,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1878,2048,1876,2048,2048,2048,2048,1874,2048,2048,2048,2048,2048,2048,1990,1960,1693,2048,2038,1830,1600,2048,2003,2002,2048,2048,1941,2048,2007,1982,2048,1966,1986,1939,2048,1960,1980,2048,2001,1942,2014,1995,2048,2048,2048,1941,2048,2048,1943,2048,2048,2019,2036,2048,2004,1946,1958,2048,2048,2048,2048,1997,2048,2048,2048,2001,2048,2048,2002,2048,2048,1947,2048,1937,1967,2048,2048,1970,2048,1967,2048,2007,2048,1882,1936,2048,2048,2005,1944,1955,2048,2048,1875,2048,1878,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,1999,2048,2048,1948,2048,2048,1896,2048,2048,2048,2013,2048,1935,1942,1950,2008,2048,1815,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2006,2048,2006,2005,2048,2048,2048,2048,2048,2048,1935,2048,2048,2048,2048,2048,2048,2003,2048,2048,2053,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,1953,2008,2007,2002,2048,2048,2048,1870,2000,2048,1944,2048,2048,2048,2003,2048,2048,2048,2048,2048,1954,2048,2048,2048,2048,2048,1939,2048,2048,2048,2048,1942,1940,2048,2048,2008,2048,2048,2003,2048,2048,2003,2048,2048,2009,2048,2048,1875,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2006,2004,2005,2048,1945,2048,2048,2000,2048,2014,1602,2048,2003,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,1086,1570,2048,1946,2048,1771,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2014,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2007,2048,2048,2048,1961,2002,2048,2048,2048,2055,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,1997,2048,2048,2005,2048,2048,2048,2048,2048,2048,1870,2048,2048,2048,2048,2048,1850,2048,2048,2048,2048,2048,2048,2048,2048,1871,2048,2048,2048,1872,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1760,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2005,2048,2048,2048,2005,2048,1981,1997,2048,2048,1873,2048,2048,2048,2048,1937,1757,1626,2048,2048,2048,1872,2048,2048,2048,2048,2048,2048,2048,2001,1961,2048,1915,1955,1981,2048,2048,1870,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,1999,2048,1874,2048,1999,2048,1873,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2013,2048,1879,2048,1871,2048,2048,2048,2048,2048,2002,2048,2048,2048,2056,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2001,2048,2008,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,1887,2048,1868,1874,2048,2048,1967,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2002,2048,2048,2048,2048,1972,2048,2048,2048,2048,1956,2048,2048,2048,1944,2048,2048,1957,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2004,2038,2006,2048,2048,2048,2007,2048,1873,2048,2048,2048,2048,2054,2048,2048,2048,2048,2048,2048,2048,2055,2048,2050,2053,1996,2048,2048,1954,2048,2048,1928,2048,2048,2048,2048,2048,2048,2054,2048,2048,1948,2048,2048,1602,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,1948,2048,2048,2048,2048,2048,1773,1760,2048,2009,1943,2048,2048,2048,2048,2006,2053,2004,2048,1950,2013,2048,2048,2048,1915,2048,2048,1993,1999,2048,2048,2057,2057,1990,2048,2000,2048,2048,1888,1624,2048,1999,2048,2048,2055,1982,2048,2048,2048,2048,1984,2048,2048,2048,1969,2048,2048,2048,2048,2055,1850,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,1992,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,1996,2048,1998,2048,2048,1995,2048,2055,2028,1844,2048,2048,1866,2048,2048,1661,2022,2048,2048,2048,2052,1970,2048,2048,2048,2048,2001,2048,2057,2048,2048,2048,2055,2048,2048,2000,2048,2048,2048,2048,2056,2055,2048,2044,1998,2048,2048,2048,2048,1997,2048,1996,2048,2048,1994,2001,2048,2048,1969,2048,2048,2048,2048,2048,2048,2004,2048,1913,2048,1992,2048,2048,1996,2048,2048,1992,2048,2048,1987,2048,1995,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,1951,2048,2048,2048,2048,2048,1996,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1949,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,1986,2048,2048,2048,2048,2048,2048,2048,2045,2024,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,1964,1991,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,1941,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1896,1964,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,1999,2048,2048,1997,2048,2006,2048,2048,2048,1987,2048,2048,2056,2039,2048,1993,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1484,1116,1095,1146,1221,1955,689,716,1428,2048,2048,762,34,34,34,34,34,177,517,368,507,557,632,673,631,512,626,563,629,502,693,704,574,647,614,767,804,771,766,769,710,1179,1003,899,888,963,914,912,968,979,971,998,954,759,1053,1311,1182,1346,1243,1387,1159,1142,1150,1149,1176,1134,1165,1144,1164,1062,944,1342,1485,1196,795,770,719,1028,1326,1213,1318,905,345,100,101,112,229,47,116,47,47,47,111,47,47,244,104,47,47,102,44,44,50,106,49,45,44,108,41,47,48,189,48,48,48,48,48,119,49,123,47,47,68,106,45,45,45,95,41,39,50,50,50,102,42,53,53,50,49,115,43,79,47,46,93,46,46,46,97,46,47,47,95,45,45,45,45,45,45,111,45,41,87,50,50,50,102,42,232,1003,1196,126,44,815,1182,288,48,706,1163,436,510,1194,1260,755,844,922,324],\"successes\":[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,0,1,0,1,1,1,0,1,1,1,0,0,1,1,0,1,1,0,1,1,1,1,0,1,0,1,0,1,1,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,0,0,1,0,0,1,0,1,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,0,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,0,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,0,1,1,1,1,1,0,0,0,0,1,0,1,1,1,0,0,0,0,1,0,1,1,0,0,0,1,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,1,1,1,0,1,0,0,0,0,0,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,1,1,0,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,0,1,1,1,1,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,1,1,0,1,0,0,1,1,1,0,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,1,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,0,1,1,0,0,0,0,0,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,1,1,1,1,1,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,0,1,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,1,0,1,1,1,1,0,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,1,1,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,1,1,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,1,1,0,1,0,0,0,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,1,0,0,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,1,1,1,0,1,1,0,0,1,0,1,1,0,1,1,1,0,1,1,0,1,1,1,1,0,0,0,1,0,0,1,0,0,1,1,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,1,0,1,0,1,0,1,1,0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,1,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,0,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,1,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,0,0,0,1,1,1,0,1,1,0,0,0,1,0,0,1,1,0,0,1,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,0,0,1,1,0,1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n;\r\n            compressedData['data'] = byteArray;\r\n            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');\r\n            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, false);\r\n            Module['removeRunDependency']('datafile_C:/Dev/EDGE-pbdot/web/site/edge-classic.data');\r\n      };\r\n      Module['addRunDependency']('datafile_C:/Dev/EDGE-pbdot/web/site/edge-classic.data');\r\n\r\n      if (!Module.preloadResults) Module.preloadResults = {};\r\n\r\n        function preloadFallback(error) {\r\n          console.error(error);\r\n          console.error('falling back to default preload behavior');\r\n          fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, processPackageData, handleError);\r\n        };\r\n\r\n        openDatabase(\r\n          function(db) {\r\n            checkCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME,\r\n              function(useCached, metadata) {\r\n                Module.preloadResults[PACKAGE_NAME] = {fromCache: useCached};\r\n                if (useCached) {\r\n                  fetchCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME, metadata, processPackageData, preloadFallback);\r\n                } else {\r\n                  fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE,\r\n                    function(packageData) {\r\n                      cacheRemotePackage(db, PACKAGE_PATH + PACKAGE_NAME, packageData, {uuid:PACKAGE_UUID}, processPackageData,\r\n                        function(error) {\r\n                          console.error(error);\r\n                          processPackageData(packageData);\r\n                        });\r\n                    }\r\n                  , preloadFallback);\r\n                }\r\n              }\r\n            , preloadFallback);\r\n          }\r\n        , preloadFallback);\r\n\r\n        if (Module['setStatus']) Module['setStatus']('Downloading...');\r\n\r\n    }\r\n    if (Module['calledRun']) {\r\n      runWithFS();\r\n    } else {\r\n      if (!Module['preRun']) Module['preRun'] = [];\r\n      Module[\"preRun\"].push(runWithFS); // FS is not initialized yet, wait for it\r\n    }\r\n\r\n    }\r\n    loadPackage({\"files\": [{\"filename\": \"/.gitkeep\", \"start\": 0, \"end\": 0}, {\"filename\": \"/edge_base/blasphemer/graphics/AUTOPAGE.png\", \"start\": 0, \"end\": 42807}, {\"filename\": \"/edge_base/blasphemer/graphics/M_DOOM.lmp\", \"start\": 42807, \"end\": 49300}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSCNTR.lmp\", \"start\": 49300, \"end\": 49492}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSLEFT.lmp\", \"start\": 49492, \"end\": 49684}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSRGHT.lmp\", \"start\": 49684, \"end\": 49876}, {\"filename\": \"/edge_base/blasphemer/graphics/M_SKULL1.lmp\", \"start\": 49876, \"end\": 50448}, {\"filename\": \"/edge_base/blasphemer/graphics/M_SKULL2.lmp\", \"start\": 50448, \"end\": 51020}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERML.lmp\", \"start\": 51020, \"end\": 51154}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMM.lmp\", \"start\": 51154, \"end\": 51360}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMO.lmp\", \"start\": 51360, \"end\": 51468}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMR.lmp\", \"start\": 51468, \"end\": 51602}, {\"filename\": \"/edge_base/blasphemer/graphics/NULL.png\", \"start\": 51602, \"end\": 52762}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARL.lmp\", \"start\": 52762, \"end\": 55473}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARR.lmp\", \"start\": 55473, \"end\": 58184}, {\"filename\": \"/edge_base/blasphemer/graphics/_IN1.png\", \"start\": 58184, \"end\": 59371}, {\"filename\": \"/edge_base/blasphemer/scripts/anims.ddf\", \"start\": 59371, \"end\": 60849}, {\"filename\": \"/edge_base/blasphemer/scripts/attacks.ddf\", \"start\": 60849, \"end\": 102518}, {\"filename\": \"/edge_base/blasphemer/scripts/coal_hud.ec\", \"start\": 102518, \"end\": 118231}, {\"filename\": \"/edge_base/blasphemer/scripts/flats.ddf\", \"start\": 118231, \"end\": 118788}, {\"filename\": \"/edge_base/blasphemer/scripts/fonts.ddf\", \"start\": 118788, \"end\": 119836}, {\"filename\": \"/edge_base/blasphemer/scripts/games.ddf\", \"start\": 119836, \"end\": 122570}, {\"filename\": \"/edge_base/blasphemer/scripts/images.ddf\", \"start\": 122570, \"end\": 123996}, {\"filename\": \"/edge_base/blasphemer/scripts/language.ldf\", \"start\": 123996, \"end\": 132497}, {\"filename\": \"/edge_base/blasphemer/scripts/levels.ddf\", \"start\": 132497, \"end\": 145367}, {\"filename\": \"/edge_base/blasphemer/scripts/lines.ddf\", \"start\": 145367, \"end\": 150202}, {\"filename\": \"/edge_base/blasphemer/scripts/playlist.ddf\", \"start\": 150202, \"end\": 152358}, {\"filename\": \"/edge_base/blasphemer/scripts/rscript.rts\", \"start\": 152358, \"end\": 165402}, {\"filename\": \"/edge_base/blasphemer/scripts/sectors.ddf\", \"start\": 165402, \"end\": 166886}, {\"filename\": \"/edge_base/blasphemer/scripts/sounds.ddf\", \"start\": 166886, \"end\": 178082}, {\"filename\": \"/edge_base/blasphemer/scripts/styles.ddf\", \"start\": 178082, \"end\": 182556}, {\"filename\": \"/edge_base/blasphemer/scripts/switch.ddf\", \"start\": 182556, \"end\": 182969}, {\"filename\": \"/edge_base/blasphemer/scripts/things.ddf\", \"start\": 182969, \"end\": 266803}, {\"filename\": \"/edge_base/blasphemer/scripts/weapons.ddf\", \"start\": 266803, \"end\": 277121}, {\"filename\": \"/edge_base/doom/graphics/CREDIT.lmp\", \"start\": 277121, \"end\": 396409}, {\"filename\": \"/edge_base/doom/graphics/ENDPIC.lmp\", \"start\": 396409, \"end\": 515697}, {\"filename\": \"/edge_base/doom/graphics/HELP1.lmp\", \"start\": 515697, \"end\": 634985}, {\"filename\": \"/edge_base/doom/graphics/INTERPIC.lmp\", \"start\": 634985, \"end\": 754273}, {\"filename\": \"/edge_base/doom/graphics/PFUB1.lmp\", \"start\": 754273, \"end\": 873561}, {\"filename\": \"/edge_base/doom/graphics/PFUB2.lmp\", \"start\": 873561, \"end\": 992849}, {\"filename\": \"/edge_base/doom/graphics/TITLEPIC.lmp\", \"start\": 992849, \"end\": 1112137}, {\"filename\": \"/edge_base/doom/graphics/VICTORY2.lmp\", \"start\": 1112137, \"end\": 1231425}, {\"filename\": \"/edge_base/doom/graphics/WIA20000.lmp\", \"start\": 1231425, \"end\": 1260545}, {\"filename\": \"/edge_base/doom/graphics/WIA20001.lmp\", \"start\": 1260545, \"end\": 1289665}, {\"filename\": \"/edge_base/doom/graphics/WIA20002.lmp\", \"start\": 1289665, \"end\": 1318785}, {\"filename\": \"/edge_base/doom/graphics/WIA20400.lmp\", \"start\": 1318785, \"end\": 1324383}, {\"filename\": \"/edge_base/doom/graphics/WIA20401.lmp\", \"start\": 1324383, \"end\": 1329981}, {\"filename\": \"/edge_base/doom/graphics/WIA20402.lmp\", \"start\": 1329981, \"end\": 1335579}, {\"filename\": \"/edge_base/doom/graphics/WIA20500.lmp\", \"start\": 1335579, \"end\": 1348787}, {\"filename\": \"/edge_base/doom/graphics/WIA20501.lmp\", \"start\": 1348787, \"end\": 1361995}, {\"filename\": \"/edge_base/doom/graphics/WIA20502.lmp\", \"start\": 1361995, \"end\": 1375203}, {\"filename\": \"/edge_base/doom/graphics/WIMAP0.lmp\", \"start\": 1375203, \"end\": 1494491}, {\"filename\": \"/edge_base/doom/graphics/WIMAP1.lmp\", \"start\": 1494491, \"end\": 1613779}, {\"filename\": \"/edge_base/doom/graphics/WIMAP2.lmp\", \"start\": 1613779, \"end\": 1733067}, {\"filename\": \"/edge_base/doom/scripts/images.ddf\", \"start\": 1733067, \"end\": 1734905}, {\"filename\": \"/edge_base/doom/textures/SKY1_B.png\", \"start\": 1734905, \"end\": 1749548}, {\"filename\": \"/edge_base/doom/textures/SKY1_E.png\", \"start\": 1749548, \"end\": 1772727}, {\"filename\": \"/edge_base/doom/textures/SKY1_N.png\", \"start\": 1772727, \"end\": 1795614}, {\"filename\": \"/edge_base/doom/textures/SKY1_S.png\", \"start\": 1795614, \"end\": 1818239}, {\"filename\": \"/edge_base/doom/textures/SKY1_T.png\", \"start\": 1818239, \"end\": 1845431}, {\"filename\": \"/edge_base/doom/textures/SKY1_W.png\", \"start\": 1845431, \"end\": 1868274}, {\"filename\": \"/edge_base/doom/textures/SKY2_B.png\", \"start\": 1868274, \"end\": 1885141}, {\"filename\": \"/edge_base/doom/textures/SKY2_E.png\", \"start\": 1885141, \"end\": 1911710}, {\"filename\": \"/edge_base/doom/textures/SKY2_N.png\", \"start\": 1911710, \"end\": 1938566}, {\"filename\": \"/edge_base/doom/textures/SKY2_S.png\", \"start\": 1938566, \"end\": 1966066}, {\"filename\": \"/edge_base/doom/textures/SKY2_T.png\", \"start\": 1966066, \"end\": 1990420}, {\"filename\": \"/edge_base/doom/textures/SKY2_W.png\", \"start\": 1990420, \"end\": 2016607}, {\"filename\": \"/edge_base/doom/textures/SKY3_B.png\", \"start\": 2016607, \"end\": 2028590}, {\"filename\": \"/edge_base/doom/textures/SKY3_E.png\", \"start\": 2028590, \"end\": 2048156}, {\"filename\": \"/edge_base/doom/textures/SKY3_N.png\", \"start\": 2048156, \"end\": 2067857}, {\"filename\": \"/edge_base/doom/textures/SKY3_S.png\", \"start\": 2067857, \"end\": 2088191}, {\"filename\": \"/edge_base/doom/textures/SKY3_T.png\", \"start\": 2088191, \"end\": 2112634}, {\"filename\": \"/edge_base/doom/textures/SKY3_W.png\", \"start\": 2112634, \"end\": 2131679}, {\"filename\": \"/edge_base/doom/textures/SKY4_B.png\", \"start\": 2131679, \"end\": 2170015}, {\"filename\": \"/edge_base/doom/textures/SKY4_E.png\", \"start\": 2170015, \"end\": 2182624}, {\"filename\": \"/edge_base/doom/textures/SKY4_N.png\", \"start\": 2182624, \"end\": 2194340}, {\"filename\": \"/edge_base/doom/textures/SKY4_S.png\", \"start\": 2194340, \"end\": 2206056}, {\"filename\": \"/edge_base/doom/textures/SKY4_T.png\", \"start\": 2206056, \"end\": 2244392}, {\"filename\": \"/edge_base/doom/textures/SKY4_W.png\", \"start\": 2244392, \"end\": 2257001}, {\"filename\": \"/edge_base/doom1/graphics/CREDIT.lmp\", \"start\": 2257001, \"end\": 2376289}, {\"filename\": \"/edge_base/doom1/graphics/HELP1.lmp\", \"start\": 2376289, \"end\": 2495577}, {\"filename\": \"/edge_base/doom1/graphics/HELP2.lmp\", \"start\": 2495577, \"end\": 2614865}, {\"filename\": \"/edge_base/doom1/graphics/TITLEPIC.lmp\", \"start\": 2614865, \"end\": 2734153}, {\"filename\": \"/edge_base/doom1/graphics/WIMAP0.lmp\", \"start\": 2734153, \"end\": 2853441}, {\"filename\": \"/edge_base/doom1/scripts/images.ddf\", \"start\": 2853441, \"end\": 2855293}, {\"filename\": \"/edge_base/doom1/textures/SKY1_B.png\", \"start\": 2855293, \"end\": 2869936}, {\"filename\": \"/edge_base/doom1/textures/SKY1_E.png\", \"start\": 2869936, \"end\": 2893115}, {\"filename\": \"/edge_base/doom1/textures/SKY1_N.png\", \"start\": 2893115, \"end\": 2916002}, {\"filename\": \"/edge_base/doom1/textures/SKY1_S.png\", \"start\": 2916002, \"end\": 2938627}, {\"filename\": \"/edge_base/doom1/textures/SKY1_T.png\", \"start\": 2938627, \"end\": 2965819}, {\"filename\": \"/edge_base/doom1/textures/SKY1_W.png\", \"start\": 2965819, \"end\": 2988662}, {\"filename\": \"/edge_base/doom2/graphics/BOSSBACK.lmp\", \"start\": 2988662, \"end\": 3107950}, {\"filename\": \"/edge_base/doom2/graphics/CREDIT.lmp\", \"start\": 3107950, \"end\": 3227238}, {\"filename\": \"/edge_base/doom2/graphics/HELP.lmp\", \"start\": 3227238, \"end\": 3346526}, {\"filename\": \"/edge_base/doom2/graphics/INTERPIC.lmp\", \"start\": 3346526, \"end\": 3465814}, {\"filename\": \"/edge_base/doom2/graphics/TITLEPIC.lmp\", \"start\": 3465814, \"end\": 3585102}, {\"filename\": \"/edge_base/doom2/scripts/images.ddf\", \"start\": 3585102, \"end\": 3586533}, {\"filename\": \"/edge_base/doom2/textures/SKY1_B.png\", \"start\": 3586533, \"end\": 3607813}, {\"filename\": \"/edge_base/doom2/textures/SKY1_E.png\", \"start\": 3607813, \"end\": 3625493}, {\"filename\": \"/edge_base/doom2/textures/SKY1_N.png\", \"start\": 3625493, \"end\": 3643173}, {\"filename\": \"/edge_base/doom2/textures/SKY1_S.png\", \"start\": 3643173, \"end\": 3660853}, {\"filename\": \"/edge_base/doom2/textures/SKY1_T.png\", \"start\": 3660853, \"end\": 3682133}, {\"filename\": \"/edge_base/doom2/textures/SKY1_W.png\", \"start\": 3682133, \"end\": 3699813}, {\"filename\": \"/edge_base/doom2/textures/SKY2_B.png\", \"start\": 3699813, \"end\": 3713736}, {\"filename\": \"/edge_base/doom2/textures/SKY2_E.png\", \"start\": 3713736, \"end\": 3738955}, {\"filename\": \"/edge_base/doom2/textures/SKY2_N.png\", \"start\": 3738955, \"end\": 3764187}, {\"filename\": \"/edge_base/doom2/textures/SKY2_S.png\", \"start\": 3764187, \"end\": 3789390}, {\"filename\": \"/edge_base/doom2/textures/SKY2_T.png\", \"start\": 3789390, \"end\": 3814142}, {\"filename\": \"/edge_base/doom2/textures/SKY2_W.png\", \"start\": 3814142, \"end\": 3839346}, {\"filename\": \"/edge_base/doom2/textures/SKY3_B.png\", \"start\": 3839346, \"end\": 3922916}, {\"filename\": \"/edge_base/doom2/textures/SKY3_E.png\", \"start\": 3922916, \"end\": 4017725}, {\"filename\": \"/edge_base/doom2/textures/SKY3_N.png\", \"start\": 4017725, \"end\": 4116496}, {\"filename\": \"/edge_base/doom2/textures/SKY3_S.png\", \"start\": 4116496, \"end\": 4215267}, {\"filename\": \"/edge_base/doom2/textures/SKY3_T.png\", \"start\": 4215267, \"end\": 4401758}, {\"filename\": \"/edge_base/doom2/textures/SKY3_W.png\", \"start\": 4401758, \"end\": 4496567}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARL.lmp\", \"start\": 4496567, \"end\": 4499978}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARR.lmp\", \"start\": 4499978, \"end\": 4503389}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT033.png\", \"start\": 4503389, \"end\": 4503734}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT034.png\", \"start\": 4503734, \"end\": 4504081}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT035.png\", \"start\": 4504081, \"end\": 4504512}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT036.png\", \"start\": 4504512, \"end\": 4504921}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT037.png\", \"start\": 4504921, \"end\": 4505342}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT038.png\", \"start\": 4505342, \"end\": 4505789}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT039.png\", \"start\": 4505789, \"end\": 4506110}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT040.png\", \"start\": 4506110, \"end\": 4506500}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT041.png\", \"start\": 4506500, \"end\": 4506889}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT042.png\", \"start\": 4506889, \"end\": 4507340}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT043.png\", \"start\": 4507340, \"end\": 4507699}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT044.png\", \"start\": 4507699, \"end\": 4508023}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT045.png\", \"start\": 4508023, \"end\": 4508336}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT046.png\", \"start\": 4508336, \"end\": 4508632}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT047.png\", \"start\": 4508632, \"end\": 4509055}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT048.png\", \"start\": 4509055, \"end\": 4509460}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT049.png\", \"start\": 4509460, \"end\": 4509840}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT050.png\", \"start\": 4509840, \"end\": 4510248}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT051.png\", \"start\": 4510248, \"end\": 4510711}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT052.png\", \"start\": 4510711, \"end\": 4511130}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT053.png\", \"start\": 4511130, \"end\": 4511538}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT054.png\", \"start\": 4511538, \"end\": 4511946}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT055.png\", \"start\": 4511946, \"end\": 4512350}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT056.png\", \"start\": 4512350, \"end\": 4512822}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT057.png\", \"start\": 4512822, \"end\": 4513237}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT058.png\", \"start\": 4513237, \"end\": 4513585}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT059.png\", \"start\": 4513585, \"end\": 4513946}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT060.png\", \"start\": 4513946, \"end\": 4514315}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT061.png\", \"start\": 4514315, \"end\": 4514656}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT062.png\", \"start\": 4514656, \"end\": 4515077}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT063.png\", \"start\": 4515077, \"end\": 4515480}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT064.png\", \"start\": 4515480, \"end\": 4515898}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT065.png\", \"start\": 4515898, \"end\": 4516401}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT066.png\", \"start\": 4516401, \"end\": 4516826}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT067.png\", \"start\": 4516826, \"end\": 4517229}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT068.png\", \"start\": 4517229, \"end\": 4517662}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT069.png\", \"start\": 4517662, \"end\": 4518078}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT070.png\", \"start\": 4518078, \"end\": 4518483}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT071.png\", \"start\": 4518483, \"end\": 4518902}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT072.png\", \"start\": 4518902, \"end\": 4519327}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT073.png\", \"start\": 4519327, \"end\": 4519729}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT074.png\", \"start\": 4519729, \"end\": 4520198}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT075.png\", \"start\": 4520198, \"end\": 4520632}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT076.png\", \"start\": 4520632, \"end\": 4521021}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT077.png\", \"start\": 4521021, \"end\": 4521476}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT078.png\", \"start\": 4521476, \"end\": 4521986}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT079.png\", \"start\": 4521986, \"end\": 4522396}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT080.png\", \"start\": 4522396, \"end\": 4522803}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT081.png\", \"start\": 4522803, \"end\": 4523220}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT082.png\", \"start\": 4523220, \"end\": 4523639}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT083.png\", \"start\": 4523639, \"end\": 4524065}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT084.png\", \"start\": 4524065, \"end\": 4524450}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT085.png\", \"start\": 4524450, \"end\": 4524865}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT086.png\", \"start\": 4524865, \"end\": 4525289}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT087.png\", \"start\": 4525289, \"end\": 4525734}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT088.png\", \"start\": 4525734, \"end\": 4526160}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT089.png\", \"start\": 4526160, \"end\": 4526625}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT090.png\", \"start\": 4526625, \"end\": 4527043}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT091.png\", \"start\": 4527043, \"end\": 4527430}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT092.png\", \"start\": 4527430, \"end\": 4527864}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT093.png\", \"start\": 4527864, \"end\": 4528260}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT094.png\", \"start\": 4528260, \"end\": 4528611}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT095.png\", \"start\": 4528611, \"end\": 4528924}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT096.png\", \"start\": 4528924, \"end\": 4529244}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT097.png\", \"start\": 4529244, \"end\": 4529702}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT098.png\", \"start\": 4529702, \"end\": 4530102}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT099.png\", \"start\": 4530102, \"end\": 4530536}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT100.png\", \"start\": 4530536, \"end\": 4530943}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT101.png\", \"start\": 4530943, \"end\": 4531339}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT102.png\", \"start\": 4531339, \"end\": 4531730}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT103.png\", \"start\": 4531730, \"end\": 4532174}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT104.png\", \"start\": 4532174, \"end\": 4532576}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT105.png\", \"start\": 4532576, \"end\": 4532956}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT106.png\", \"start\": 4532956, \"end\": 4533400}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT107.png\", \"start\": 4533400, \"end\": 4533869}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT108.png\", \"start\": 4533869, \"end\": 4534243}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT109.png\", \"start\": 4534243, \"end\": 4534664}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT110.png\", \"start\": 4534664, \"end\": 4535080}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT111.png\", \"start\": 4535080, \"end\": 4535529}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT112.png\", \"start\": 4535529, \"end\": 4535919}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT113.png\", \"start\": 4535919, \"end\": 4536377}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT114.png\", \"start\": 4536377, \"end\": 4536774}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT115.png\", \"start\": 4536774, \"end\": 4537185}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT116.png\", \"start\": 4537185, \"end\": 4537619}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT117.png\", \"start\": 4537619, \"end\": 4538021}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT118.png\", \"start\": 4538021, \"end\": 4538482}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT119.png\", \"start\": 4538482, \"end\": 4538899}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT120.png\", \"start\": 4538899, \"end\": 4539343}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT121.png\", \"start\": 4539343, \"end\": 4539736}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT122.png\", \"start\": 4539736, \"end\": 4540171}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT123.png\", \"start\": 4540171, \"end\": 4540561}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT124.png\", \"start\": 4540561, \"end\": 4540922}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT125.png\", \"start\": 4540922, \"end\": 4541310}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT126.png\", \"start\": 4541310, \"end\": 4541700}, {\"filename\": \"/edge_base/freedoom1/scripts/attacks.ddf\", \"start\": 4541700, \"end\": 4562856}, {\"filename\": \"/edge_base/freedoom1/scripts/fonts.ddf\", \"start\": 4562856, \"end\": 4563512}, {\"filename\": \"/edge_base/freedoom1/scripts/images.ddf\", \"start\": 4563512, \"end\": 4571281}, {\"filename\": \"/edge_base/freedoom1/scripts/language.ldf\", \"start\": 4571281, \"end\": 4582883}, {\"filename\": \"/edge_base/freedoom1/scripts/styles.ddf\", \"start\": 4582883, \"end\": 4588092}, {\"filename\": \"/edge_base/freedoom1/scripts/things.ddf\", \"start\": 4588092, \"end\": 4596484}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARL.lmp\", \"start\": 4596484, \"end\": 4599895}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARR.lmp\", \"start\": 4599895, \"end\": 4603306}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT033.png\", \"start\": 4603306, \"end\": 4603651}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT034.png\", \"start\": 4603651, \"end\": 4603998}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT035.png\", \"start\": 4603998, \"end\": 4604429}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT036.png\", \"start\": 4604429, \"end\": 4604838}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT037.png\", \"start\": 4604838, \"end\": 4605259}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT038.png\", \"start\": 4605259, \"end\": 4605706}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT039.png\", \"start\": 4605706, \"end\": 4606027}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT040.png\", \"start\": 4606027, \"end\": 4606417}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT041.png\", \"start\": 4606417, \"end\": 4606806}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT042.png\", \"start\": 4606806, \"end\": 4607257}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT043.png\", \"start\": 4607257, \"end\": 4607616}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT044.png\", \"start\": 4607616, \"end\": 4607940}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT045.png\", \"start\": 4607940, \"end\": 4608253}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT046.png\", \"start\": 4608253, \"end\": 4608549}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT047.png\", \"start\": 4608549, \"end\": 4608972}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT048.png\", \"start\": 4608972, \"end\": 4609377}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT049.png\", \"start\": 4609377, \"end\": 4609757}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT050.png\", \"start\": 4609757, \"end\": 4610165}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT051.png\", \"start\": 4610165, \"end\": 4610628}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT052.png\", \"start\": 4610628, \"end\": 4611047}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT053.png\", \"start\": 4611047, \"end\": 4611455}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT054.png\", \"start\": 4611455, \"end\": 4611863}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT055.png\", \"start\": 4611863, \"end\": 4612267}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT056.png\", \"start\": 4612267, \"end\": 4612739}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT057.png\", \"start\": 4612739, \"end\": 4613154}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT058.png\", \"start\": 4613154, \"end\": 4613502}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT059.png\", \"start\": 4613502, \"end\": 4613863}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT060.png\", \"start\": 4613863, \"end\": 4614232}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT061.png\", \"start\": 4614232, \"end\": 4614573}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT062.png\", \"start\": 4614573, \"end\": 4614994}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT063.png\", \"start\": 4614994, \"end\": 4615397}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT064.png\", \"start\": 4615397, \"end\": 4615815}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT065.png\", \"start\": 4615815, \"end\": 4616318}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT066.png\", \"start\": 4616318, \"end\": 4616743}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT067.png\", \"start\": 4616743, \"end\": 4617146}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT068.png\", \"start\": 4617146, \"end\": 4617579}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT069.png\", \"start\": 4617579, \"end\": 4617995}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT070.png\", \"start\": 4617995, \"end\": 4618400}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT071.png\", \"start\": 4618400, \"end\": 4618819}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT072.png\", \"start\": 4618819, \"end\": 4619244}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT073.png\", \"start\": 4619244, \"end\": 4619646}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT074.png\", \"start\": 4619646, \"end\": 4620115}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT075.png\", \"start\": 4620115, \"end\": 4620549}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT076.png\", \"start\": 4620549, \"end\": 4620938}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT077.png\", \"start\": 4620938, \"end\": 4621393}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT078.png\", \"start\": 4621393, \"end\": 4621903}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT079.png\", \"start\": 4621903, \"end\": 4622313}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT080.png\", \"start\": 4622313, \"end\": 4622720}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT081.png\", \"start\": 4622720, \"end\": 4623137}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT082.png\", \"start\": 4623137, \"end\": 4623556}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT083.png\", \"start\": 4623556, \"end\": 4623982}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT084.png\", \"start\": 4623982, \"end\": 4624367}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT085.png\", \"start\": 4624367, \"end\": 4624782}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT086.png\", \"start\": 4624782, \"end\": 4625206}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT087.png\", \"start\": 4625206, \"end\": 4625651}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT088.png\", \"start\": 4625651, \"end\": 4626077}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT089.png\", \"start\": 4626077, \"end\": 4626542}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT090.png\", \"start\": 4626542, \"end\": 4626960}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT091.png\", \"start\": 4626960, \"end\": 4627347}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT092.png\", \"start\": 4627347, \"end\": 4627781}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT093.png\", \"start\": 4627781, \"end\": 4628177}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT094.png\", \"start\": 4628177, \"end\": 4628528}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT095.png\", \"start\": 4628528, \"end\": 4628841}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT096.png\", \"start\": 4628841, \"end\": 4629161}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT097.png\", \"start\": 4629161, \"end\": 4629619}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT098.png\", \"start\": 4629619, \"end\": 4630019}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT099.png\", \"start\": 4630019, \"end\": 4630453}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT100.png\", \"start\": 4630453, \"end\": 4630860}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT101.png\", \"start\": 4630860, \"end\": 4631256}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT102.png\", \"start\": 4631256, \"end\": 4631647}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT103.png\", \"start\": 4631647, \"end\": 4632091}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT104.png\", \"start\": 4632091, \"end\": 4632493}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT105.png\", \"start\": 4632493, \"end\": 4632873}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT106.png\", \"start\": 4632873, \"end\": 4633317}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT107.png\", \"start\": 4633317, \"end\": 4633786}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT108.png\", \"start\": 4633786, \"end\": 4634160}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT109.png\", \"start\": 4634160, \"end\": 4634581}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT110.png\", \"start\": 4634581, \"end\": 4634997}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT111.png\", \"start\": 4634997, \"end\": 4635446}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT112.png\", \"start\": 4635446, \"end\": 4635836}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT113.png\", \"start\": 4635836, \"end\": 4636294}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT114.png\", \"start\": 4636294, \"end\": 4636691}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT115.png\", \"start\": 4636691, \"end\": 4637102}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT116.png\", \"start\": 4637102, \"end\": 4637536}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT117.png\", \"start\": 4637536, \"end\": 4637938}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT118.png\", \"start\": 4637938, \"end\": 4638399}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT119.png\", \"start\": 4638399, \"end\": 4638816}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT120.png\", \"start\": 4638816, \"end\": 4639260}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT121.png\", \"start\": 4639260, \"end\": 4639653}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT122.png\", \"start\": 4639653, \"end\": 4640088}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT123.png\", \"start\": 4640088, \"end\": 4640478}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT124.png\", \"start\": 4640478, \"end\": 4640839}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT125.png\", \"start\": 4640839, \"end\": 4641227}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT126.png\", \"start\": 4641227, \"end\": 4641617}, {\"filename\": \"/edge_base/freedoom2/scripts/attacks.ddf\", \"start\": 4641617, \"end\": 4662773}, {\"filename\": \"/edge_base/freedoom2/scripts/fonts.ddf\", \"start\": 4662773, \"end\": 4663429}, {\"filename\": \"/edge_base/freedoom2/scripts/images.ddf\", \"start\": 4663429, \"end\": 4671198}, {\"filename\": \"/edge_base/freedoom2/scripts/language.ldf\", \"start\": 4671198, \"end\": 4682661}, {\"filename\": \"/edge_base/freedoom2/scripts/styles.ddf\", \"start\": 4682661, \"end\": 4687498}, {\"filename\": \"/edge_base/freedoom2/scripts/things.ddf\", \"start\": 4687498, \"end\": 4695887}, {\"filename\": \"/edge_base/hacx/graphics/CREDIT.lmp\", \"start\": 4695887, \"end\": 4815175}, {\"filename\": \"/edge_base/hacx/graphics/HELP.lmp\", \"start\": 4815175, \"end\": 4934463}, {\"filename\": \"/edge_base/hacx/graphics/INTERPIC.lmp\", \"start\": 4934463, \"end\": 5053751}, {\"filename\": \"/edge_base/hacx/graphics/M_CONTRL.png\", \"start\": 5053751, \"end\": 5054356}, {\"filename\": \"/edge_base/hacx/graphics/M_EPISOD.lmp\", \"start\": 5054356, \"end\": 5057846}, {\"filename\": \"/edge_base/hacx/graphics/M_GAMEPL.png\", \"start\": 5057846, \"end\": 5058718}, {\"filename\": \"/edge_base/hacx/graphics/M_JKILL.lmp\", \"start\": 5058718, \"end\": 5063308}, {\"filename\": \"/edge_base/hacx/graphics/M_LOADG.lmp\", \"start\": 5063308, \"end\": 5065712}, {\"filename\": \"/edge_base/hacx/graphics/M_MSETTL.png\", \"start\": 5065712, \"end\": 5066476}, {\"filename\": \"/edge_base/hacx/graphics/M_NGAME.lmp\", \"start\": 5066476, \"end\": 5068603}, {\"filename\": \"/edge_base/hacx/graphics/M_RDTHIS.lmp\", \"start\": 5068603, \"end\": 5071112}, {\"filename\": \"/edge_base/hacx/graphics/M_SFXOPT.png\", \"start\": 5071112, \"end\": 5071820}, {\"filename\": \"/edge_base/hacx/graphics/M_VIDEO.png\", \"start\": 5071820, \"end\": 5072559}, {\"filename\": \"/edge_base/hacx/graphics/STBARL.lmp\", \"start\": 5072559, \"end\": 5075970}, {\"filename\": \"/edge_base/hacx/graphics/STBARR.lmp\", \"start\": 5075970, \"end\": 5079381}, {\"filename\": \"/edge_base/hacx/graphics/TITLEPIC.lmp\", \"start\": 5079381, \"end\": 5198669}, {\"filename\": \"/edge_base/hacx/scripts/anims.ddf\", \"start\": 5198669, \"end\": 5201841}, {\"filename\": \"/edge_base/hacx/scripts/attacks.ddf\", \"start\": 5201841, \"end\": 5209339}, {\"filename\": \"/edge_base/hacx/scripts/colmap.ddf\", \"start\": 5209339, \"end\": 5209617}, {\"filename\": \"/edge_base/hacx/scripts/fonts.ddf\", \"start\": 5209617, \"end\": 5210263}, {\"filename\": \"/edge_base/hacx/scripts/language.ldf\", \"start\": 5210263, \"end\": 5216263}, {\"filename\": \"/edge_base/hacx/scripts/lines.ddf\", \"start\": 5216263, \"end\": 5217151}, {\"filename\": \"/edge_base/hacx/scripts/playlist.ddf\", \"start\": 5217151, \"end\": 5218632}, {\"filename\": \"/edge_base/hacx/scripts/styles.ddf\", \"start\": 5218632, \"end\": 5219682}, {\"filename\": \"/edge_base/hacx/scripts/switch.ddf\", \"start\": 5219682, \"end\": 5222891}, {\"filename\": \"/edge_base/hacx/scripts/things.ddf\", \"start\": 5222891, \"end\": 5310397}, {\"filename\": \"/edge_base/hacx/scripts/weapons.ddf\", \"start\": 5310397, \"end\": 5315688}, {\"filename\": \"/edge_base/hacx/sprites/CHGFA0.lmp\", \"start\": 5315688, \"end\": 5330492}, {\"filename\": \"/edge_base/hacx/sprites/CHGFB0.lmp\", \"start\": 5330492, \"end\": 5345518}, {\"filename\": \"/edge_base/hacx/sprites/CHGGA0.lmp\", \"start\": 5345518, \"end\": 5360092}, {\"filename\": \"/edge_base/hacx/sprites/CHGGB0.lmp\", \"start\": 5360092, \"end\": 5366449}, {\"filename\": \"/edge_base/hacx/sprites/MISFA0.lmp\", \"start\": 5366449, \"end\": 5406721}, {\"filename\": \"/edge_base/hacx/sprites/MISFB0.lmp\", \"start\": 5406721, \"end\": 5441887}, {\"filename\": \"/edge_base/hacx/sprites/MISFC0.lmp\", \"start\": 5441887, \"end\": 5475040}, {\"filename\": \"/edge_base/hacx/sprites/MISFD0.lmp\", \"start\": 5475040, \"end\": 5511423}, {\"filename\": \"/edge_base/hacx/sprites/MISGA0.lmp\", \"start\": 5511423, \"end\": 5542953}, {\"filename\": \"/edge_base/hacx/sprites/MISGB0.lmp\", \"start\": 5542953, \"end\": 5578059}, {\"filename\": \"/edge_base/hacx/sprites/PISGD0.lmp\", \"start\": 5578059, \"end\": 5602202}, {\"filename\": \"/edge_base/hacx/sprites/PISGE0.lmp\", \"start\": 5602202, \"end\": 5631868}, {\"filename\": \"/edge_base/hacx/sprites/PLSGA0.lmp\", \"start\": 5631868, \"end\": 5642732}, {\"filename\": \"/edge_base/hacx/sprites/PLSGB0.lmp\", \"start\": 5642732, \"end\": 5656126}, {\"filename\": \"/edge_base/hacx/sprites/SAWGA0.lmp\", \"start\": 5656126, \"end\": 5670575}, {\"filename\": \"/edge_base/hacx/sprites/SAWGB0.lmp\", \"start\": 5670575, \"end\": 5684683}, {\"filename\": \"/edge_base/hacx/sprites/SAWGC0.lmp\", \"start\": 5684683, \"end\": 5693768}, {\"filename\": \"/edge_base/hacx/sprites/SAWGD0.lmp\", \"start\": 5693768, \"end\": 5702853}, {\"filename\": \"/edge_base/hacx/sprites/SHT2A0.lmp\", \"start\": 5702853, \"end\": 5718364}, {\"filename\": \"/edge_base/hacx/sprites/SHT2B0.lmp\", \"start\": 5718364, \"end\": 5734105}, {\"filename\": \"/edge_base/hacx/sprites/SHT2C0.lmp\", \"start\": 5734105, \"end\": 5750138}, {\"filename\": \"/edge_base/hacx/sprites/SHT2D0.lmp\", \"start\": 5750138, \"end\": 5766265}, {\"filename\": \"/edge_base/hacx/sprites/SHT2E0.lmp\", \"start\": 5766265, \"end\": 5782551}, {\"filename\": \"/edge_base/hacx/sprites/SHT2F0.lmp\", \"start\": 5782551, \"end\": 5798705}, {\"filename\": \"/edge_base/hacx/sprites/SHT2G0.lmp\", \"start\": 5798705, \"end\": 5814521}, {\"filename\": \"/edge_base/hacx/sprites/SHT2H0.lmp\", \"start\": 5814521, \"end\": 5830032}, {\"filename\": \"/edge_base/hacx/sprites/SHT2I0.lmp\", \"start\": 5830032, \"end\": 5845715}, {\"filename\": \"/edge_base/hacx/sprites/SHT2J0.lmp\", \"start\": 5845715, \"end\": 5861920}, {\"filename\": \"/edge_base/hacx/sprites/SHTFA0.lmp\", \"start\": 5861920, \"end\": 5870982}, {\"filename\": \"/edge_base/hacx/sprites/SHTFB0.lmp\", \"start\": 5870982, \"end\": 5880473}, {\"filename\": \"/edge_base/hacx/sprites/SHTGA0.lmp\", \"start\": 5880473, \"end\": 5889132}, {\"filename\": \"/edge_base/hacx/sprites/SHTGB0.lmp\", \"start\": 5889132, \"end\": 5902214}, {\"filename\": \"/edge_base/hacx/sprites/SHTGC0.lmp\", \"start\": 5902214, \"end\": 5921453}, {\"filename\": \"/edge_base/hacx/sprites/SHTGD0.lmp\", \"start\": 5921453, \"end\": 5939700}, {\"filename\": \"/edge_base/harmony/ENDOOM.bin\", \"start\": 5939700, \"end\": 5943700}, {\"filename\": \"/edge_base/harmony/graphics/BOSSBACK.lmp\", \"start\": 5943700, \"end\": 6034446}, {\"filename\": \"/edge_base/harmony/graphics/CREDIT.lmp\", \"start\": 6034446, \"end\": 6125192}, {\"filename\": \"/edge_base/harmony/graphics/HELP.lmp\", \"start\": 6125192, \"end\": 6214234}, {\"filename\": \"/edge_base/harmony/graphics/INTERPIC.lmp\", \"start\": 6214234, \"end\": 6304980}, {\"filename\": \"/edge_base/harmony/graphics/M_CONTRL.png\", \"start\": 6304980, \"end\": 6305443}, {\"filename\": \"/edge_base/harmony/graphics/M_EPISOD.lmp\", \"start\": 6305443, \"end\": 6308640}, {\"filename\": \"/edge_base/harmony/graphics/M_GAMEPL.png\", \"start\": 6308640, \"end\": 6309284}, {\"filename\": \"/edge_base/harmony/graphics/M_JKILL.lmp\", \"start\": 6309284, \"end\": 6310702}, {\"filename\": \"/edge_base/harmony/graphics/M_MSETTL.png\", \"start\": 6310702, \"end\": 6311240}, {\"filename\": \"/edge_base/harmony/graphics/M_NEWG.lmp\", \"start\": 6311240, \"end\": 6313614}, {\"filename\": \"/edge_base/harmony/graphics/M_NGAME.lmp\", \"start\": 6313614, \"end\": 6314564}, {\"filename\": \"/edge_base/harmony/graphics/M_OPTTTL.png\", \"start\": 6314564, \"end\": 6315876}, {\"filename\": \"/edge_base/harmony/graphics/M_RDTHIS.lmp\", \"start\": 6315876, \"end\": 6317735}, {\"filename\": \"/edge_base/harmony/graphics/M_SAVEG.lmp\", \"start\": 6317735, \"end\": 6318748}, {\"filename\": \"/edge_base/harmony/graphics/M_SFXOPT.png\", \"start\": 6318748, \"end\": 6319238}, {\"filename\": \"/edge_base/harmony/graphics/M_SVOL.png\", \"start\": 6319238, \"end\": 6320695}, {\"filename\": \"/edge_base/harmony/graphics/M_THERML.png\", \"start\": 6320695, \"end\": 6321635}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMM.png\", \"start\": 6321635, \"end\": 6322564}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMO.png\", \"start\": 6322564, \"end\": 6323479}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMR.png\", \"start\": 6323479, \"end\": 6324417}, {\"filename\": \"/edge_base/harmony/graphics/M_VIDEO.png\", \"start\": 6324417, \"end\": 6324928}, {\"filename\": \"/edge_base/harmony/graphics/STBARL.lmp\", \"start\": 6324928, \"end\": 6328339}, {\"filename\": \"/edge_base/harmony/graphics/STBARR.lmp\", \"start\": 6328339, \"end\": 6331750}, {\"filename\": \"/edge_base/harmony/graphics/STDISK.png\", \"start\": 6331750, \"end\": 6332727}, {\"filename\": \"/edge_base/harmony/graphics/TITLEPIC.lmp\", \"start\": 6332727, \"end\": 6421769}, {\"filename\": \"/edge_base/harmony/graphics/WICOLON.lmp\", \"start\": 6421769, \"end\": 6421871}, {\"filename\": \"/edge_base/harmony/graphics/WIF.lmp\", \"start\": 6421871, \"end\": 6421919}, {\"filename\": \"/edge_base/harmony/graphics/WIFRGS.lmp\", \"start\": 6421919, \"end\": 6423050}, {\"filename\": \"/edge_base/harmony/graphics/WIKILRS.lmp\", \"start\": 6423050, \"end\": 6423523}, {\"filename\": \"/edge_base/harmony/graphics/WIMINUS.lmp\", \"start\": 6423523, \"end\": 6423643}, {\"filename\": \"/edge_base/harmony/graphics/WIMSTT.lmp\", \"start\": 6423643, \"end\": 6424743}, {\"filename\": \"/edge_base/harmony/graphics/WINUM0.lmp\", \"start\": 6424743, \"end\": 6424993}, {\"filename\": \"/edge_base/harmony/graphics/WINUM1.lmp\", \"start\": 6424993, \"end\": 6425139}, {\"filename\": \"/edge_base/harmony/graphics/WINUM2.lmp\", \"start\": 6425139, \"end\": 6425425}, {\"filename\": \"/edge_base/harmony/graphics/WINUM3.lmp\", \"start\": 6425425, \"end\": 6425678}, {\"filename\": \"/edge_base/harmony/graphics/WINUM4.lmp\", \"start\": 6425678, \"end\": 6425902}, {\"filename\": \"/edge_base/harmony/graphics/WINUM5.lmp\", \"start\": 6425902, \"end\": 6426157}, {\"filename\": \"/edge_base/harmony/graphics/WINUM6.lmp\", \"start\": 6426157, \"end\": 6426419}, {\"filename\": \"/edge_base/harmony/graphics/WINUM7.lmp\", \"start\": 6426419, \"end\": 6426636}, {\"filename\": \"/edge_base/harmony/graphics/WINUM8.lmp\", \"start\": 6426636, \"end\": 6426898}, {\"filename\": \"/edge_base/harmony/graphics/WINUM9.lmp\", \"start\": 6426898, \"end\": 6427157}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTF.lmp\", \"start\": 6427157, \"end\": 6427397}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTI.lmp\", \"start\": 6427397, \"end\": 6428845}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTK.lmp\", \"start\": 6428845, \"end\": 6430190}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTS.lmp\", \"start\": 6430190, \"end\": 6431359}, {\"filename\": \"/edge_base/harmony/graphics/WIPAR.lmp\", \"start\": 6431359, \"end\": 6432336}, {\"filename\": \"/edge_base/harmony/graphics/WIPCNT.lmp\", \"start\": 6432336, \"end\": 6432585}, {\"filename\": \"/edge_base/harmony/graphics/WISCRT2.lmp\", \"start\": 6432585, \"end\": 6434360}, {\"filename\": \"/edge_base/harmony/graphics/WISUCKS.lmp\", \"start\": 6434360, \"end\": 6436069}, {\"filename\": \"/edge_base/harmony/graphics/WITIME.lmp\", \"start\": 6436069, \"end\": 6436916}, {\"filename\": \"/edge_base/harmony/graphics/WIVCTMS.lmp\", \"start\": 6436916, \"end\": 6437716}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN033.png\", \"start\": 6437716, \"end\": 6438879}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN034.png\", \"start\": 6438879, \"end\": 6440035}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN035.png\", \"start\": 6440035, \"end\": 6441204}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN036.png\", \"start\": 6441204, \"end\": 6442377}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN037.png\", \"start\": 6442377, \"end\": 6443553}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN038.png\", \"start\": 6443553, \"end\": 6444728}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN039.png\", \"start\": 6444728, \"end\": 6445875}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN040.png\", \"start\": 6445875, \"end\": 6447043}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN041.png\", \"start\": 6447043, \"end\": 6448211}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN042.png\", \"start\": 6448211, \"end\": 6449385}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN043.png\", \"start\": 6449385, \"end\": 6450555}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN044.png\", \"start\": 6450555, \"end\": 6451722}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN045.png\", \"start\": 6451722, \"end\": 6452620}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN046.png\", \"start\": 6452620, \"end\": 6453787}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN047.png\", \"start\": 6453787, \"end\": 6454960}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN048.png\", \"start\": 6454960, \"end\": 6456135}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN049.png\", \"start\": 6456135, \"end\": 6457301}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN050.png\", \"start\": 6457301, \"end\": 6458471}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN051.png\", \"start\": 6458471, \"end\": 6459646}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN052.png\", \"start\": 6459646, \"end\": 6460818}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN053.png\", \"start\": 6460818, \"end\": 6461992}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN054.png\", \"start\": 6461992, \"end\": 6463164}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN055.png\", \"start\": 6463164, \"end\": 6464337}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN056.png\", \"start\": 6464337, \"end\": 6465510}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN057.png\", \"start\": 6465510, \"end\": 6466680}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN058.png\", \"start\": 6466680, \"end\": 6467843}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN059.png\", \"start\": 6467843, \"end\": 6469001}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN060.png\", \"start\": 6469001, \"end\": 6470166}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN061.png\", \"start\": 6470166, \"end\": 6471318}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN062.png\", \"start\": 6471318, \"end\": 6472483}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN063.png\", \"start\": 6472483, \"end\": 6473655}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN064.png\", \"start\": 6473655, \"end\": 6474830}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN065.png\", \"start\": 6474830, \"end\": 6476003}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN066.png\", \"start\": 6476003, \"end\": 6477176}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN067.png\", \"start\": 6477176, \"end\": 6478348}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN068.png\", \"start\": 6478348, \"end\": 6479521}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN069.png\", \"start\": 6479521, \"end\": 6480424}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN070.png\", \"start\": 6480424, \"end\": 6481592}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN071.png\", \"start\": 6481592, \"end\": 6482764}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN072.png\", \"start\": 6482764, \"end\": 6483931}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN073.png\", \"start\": 6483931, \"end\": 6485095}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN074.png\", \"start\": 6485095, \"end\": 6486263}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN075.png\", \"start\": 6486263, \"end\": 6487439}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN076.png\", \"start\": 6487439, \"end\": 6488608}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN077.png\", \"start\": 6488608, \"end\": 6489788}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN078.png\", \"start\": 6489788, \"end\": 6490966}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN079.png\", \"start\": 6490966, \"end\": 6492140}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN080.png\", \"start\": 6492140, \"end\": 6493312}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN081.png\", \"start\": 6493312, \"end\": 6494488}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN082.png\", \"start\": 6494488, \"end\": 6495663}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN083.png\", \"start\": 6495663, \"end\": 6496837}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN084.png\", \"start\": 6496837, \"end\": 6498009}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN085.png\", \"start\": 6498009, \"end\": 6499180}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN086.png\", \"start\": 6499180, \"end\": 6500352}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN087.png\", \"start\": 6500352, \"end\": 6501530}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN088.png\", \"start\": 6501530, \"end\": 6502703}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN089.png\", \"start\": 6502703, \"end\": 6503876}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN090.png\", \"start\": 6503876, \"end\": 6505050}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN091.png\", \"start\": 6505050, \"end\": 6506217}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN092.png\", \"start\": 6506217, \"end\": 6507389}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN093.png\", \"start\": 6507389, \"end\": 6508556}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN094.png\", \"start\": 6508556, \"end\": 6509722}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN095.png\", \"start\": 6509722, \"end\": 6510620}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN121.png\", \"start\": 6510620, \"end\": 6511510}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STTPRCNT.png\", \"start\": 6511510, \"end\": 6512712}, {\"filename\": \"/edge_base/harmony/scripts/attacks.ddf\", \"start\": 6512712, \"end\": 6520600}, {\"filename\": \"/edge_base/harmony/scripts/coal_hud.ec\", \"start\": 6520600, \"end\": 6524511}, {\"filename\": \"/edge_base/harmony/scripts/colmap.ddf\", \"start\": 6524511, \"end\": 6524827}, {\"filename\": \"/edge_base/harmony/scripts/flats.ddf\", \"start\": 6524827, \"end\": 6525174}, {\"filename\": \"/edge_base/harmony/scripts/language.ldf\", \"start\": 6525174, \"end\": 6528948}, {\"filename\": \"/edge_base/harmony/scripts/levels.ddf\", \"start\": 6528948, \"end\": 6545237}, {\"filename\": \"/edge_base/harmony/scripts/playlist.ddf\", \"start\": 6545237, \"end\": 6546710}, {\"filename\": \"/edge_base/harmony/scripts/styles.ddf\", \"start\": 6546710, \"end\": 6547965}, {\"filename\": \"/edge_base/harmony/scripts/things.ddf\", \"start\": 6547965, \"end\": 6617985}, {\"filename\": \"/edge_base/harmony/scripts/weapons.ddf\", \"start\": 6617985, \"end\": 6621765}, {\"filename\": \"/edge_base/harmony/sprites/CELLA0.png\", \"start\": 6621765, \"end\": 6623507}, {\"filename\": \"/edge_base/harmony/sprites/CLIPA0.png\", \"start\": 6623507, \"end\": 6626193}, {\"filename\": \"/edge_base/harmony/sprites/ROCKA0.png\", \"start\": 6626193, \"end\": 6627624}, {\"filename\": \"/edge_base/harmony/sprites/SHELA0.png\", \"start\": 6627624, \"end\": 6629808}, {\"filename\": \"/edge_base/heretic/graphics/AUTOPAGE.png\", \"start\": 6629808, \"end\": 6672615}, {\"filename\": \"/edge_base/heretic/graphics/BARBACK.lmp\", \"start\": 6672615, \"end\": 6693129}, {\"filename\": \"/edge_base/heretic/graphics/CREDIT.lmp\", \"start\": 6693129, \"end\": 6812417}, {\"filename\": \"/edge_base/heretic/graphics/E2END.png\", \"start\": 6812417, \"end\": 6868841}, {\"filename\": \"/edge_base/heretic/graphics/FINAL1.lmp\", \"start\": 6868841, \"end\": 6988129}, {\"filename\": \"/edge_base/heretic/graphics/FINAL2.lmp\", \"start\": 6988129, \"end\": 7107417}, {\"filename\": \"/edge_base/heretic/graphics/HELP1.lmp\", \"start\": 7107417, \"end\": 7226705}, {\"filename\": \"/edge_base/heretic/graphics/HELP2.lmp\", \"start\": 7226705, \"end\": 7345993}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI1.lmp\", \"start\": 7345993, \"end\": 7349403}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI2.lmp\", \"start\": 7349403, \"end\": 7351390}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI3.lmp\", \"start\": 7351390, \"end\": 7355096}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI4.lmp\", \"start\": 7355096, \"end\": 7357272}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI5.lmp\", \"start\": 7357272, \"end\": 7361429}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI6.png\", \"start\": 7361429, \"end\": 7362737}, {\"filename\": \"/edge_base/heretic/graphics/IN1.png\", \"start\": 7362737, \"end\": 7363924}, {\"filename\": \"/edge_base/heretic/graphics/LTFCTOP.lmp\", \"start\": 7363924, \"end\": 7364615}, {\"filename\": \"/edge_base/heretic/graphics/MAPE1.lmp\", \"start\": 7364615, \"end\": 7483903}, {\"filename\": \"/edge_base/heretic/graphics/MAPE2.lmp\", \"start\": 7483903, \"end\": 7603191}, {\"filename\": \"/edge_base/heretic/graphics/MAPE3.lmp\", \"start\": 7603191, \"end\": 7722479}, {\"filename\": \"/edge_base/heretic/graphics/M_DOOM.lmp\", \"start\": 7722479, \"end\": 7730224}, {\"filename\": \"/edge_base/heretic/graphics/M_EPISOD.lmp\", \"start\": 7730224, \"end\": 7733192}, {\"filename\": \"/edge_base/heretic/graphics/M_HURT.lmp\", \"start\": 7733192, \"end\": 7736224}, {\"filename\": \"/edge_base/heretic/graphics/M_JKILL.lmp\", \"start\": 7736224, \"end\": 7740563}, {\"filename\": \"/edge_base/heretic/graphics/M_LOADG.lmp\", \"start\": 7740563, \"end\": 7742531}, {\"filename\": \"/edge_base/heretic/graphics/M_LSCNTR.lmp\", \"start\": 7742531, \"end\": 7742723}, {\"filename\": \"/edge_base/heretic/graphics/M_LSLEFT.lmp\", \"start\": 7742723, \"end\": 7742915}, {\"filename\": \"/edge_base/heretic/graphics/M_LSRGHT.lmp\", \"start\": 7742915, \"end\": 7743107}, {\"filename\": \"/edge_base/heretic/graphics/M_NEWG.lmp\", \"start\": 7743107, \"end\": 7745024}, {\"filename\": \"/edge_base/heretic/graphics/M_NGAME.lmp\", \"start\": 7745024, \"end\": 7746941}, {\"filename\": \"/edge_base/heretic/graphics/M_NMARE.lmp\", \"start\": 7746941, \"end\": 7752267}, {\"filename\": \"/edge_base/heretic/graphics/M_OPTION.lmp\", \"start\": 7752267, \"end\": 7753771}, {\"filename\": \"/edge_base/heretic/graphics/M_OPTTTL.lmp\", \"start\": 7753771, \"end\": 7755275}, {\"filename\": \"/edge_base/heretic/graphics/M_QUITG.lmp\", \"start\": 7755275, \"end\": 7757095}, {\"filename\": \"/edge_base/heretic/graphics/M_RDTHIS.lmp\", \"start\": 7757095, \"end\": 7758703}, {\"filename\": \"/edge_base/heretic/graphics/M_ROUGH.lmp\", \"start\": 7758703, \"end\": 7762021}, {\"filename\": \"/edge_base/heretic/graphics/M_SAVEG.lmp\", \"start\": 7762021, \"end\": 7764043}, {\"filename\": \"/edge_base/heretic/graphics/M_SKILL.lmp\", \"start\": 7764043, \"end\": 7767270}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL00.png\", \"start\": 7767270, \"end\": 7768446}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL01.png\", \"start\": 7768446, \"end\": 7769655}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL02.png\", \"start\": 7769655, \"end\": 7770920}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL03.png\", \"start\": 7770920, \"end\": 7772232}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL04.png\", \"start\": 7772232, \"end\": 7773646}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL05.png\", \"start\": 7773646, \"end\": 7774960}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL06.png\", \"start\": 7774960, \"end\": 7776347}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL07.png\", \"start\": 7776347, \"end\": 7777621}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL08.png\", \"start\": 7777621, \"end\": 7778675}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL09.png\", \"start\": 7778675, \"end\": 7779673}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL10.png\", \"start\": 7779673, \"end\": 7780765}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL11.png\", \"start\": 7780765, \"end\": 7782022}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL12.png\", \"start\": 7782022, \"end\": 7783505}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL13.png\", \"start\": 7783505, \"end\": 7784855}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL14.png\", \"start\": 7784855, \"end\": 7786459}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL15.png\", \"start\": 7786459, \"end\": 7787960}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL16.png\", \"start\": 7787960, \"end\": 7789238}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL17.png\", \"start\": 7789238, \"end\": 7790470}, {\"filename\": \"/edge_base/heretic/graphics/M_THERML.lmp\", \"start\": 7790470, \"end\": 7790604}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMM.lmp\", \"start\": 7790604, \"end\": 7790810}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMO.lmp\", \"start\": 7790810, \"end\": 7790918}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMR.lmp\", \"start\": 7790918, \"end\": 7791052}, {\"filename\": \"/edge_base/heretic/graphics/M_ULTRA.lmp\", \"start\": 7791052, \"end\": 7795307}, {\"filename\": \"/edge_base/heretic/graphics/NULL.png\", \"start\": 7795307, \"end\": 7796467}, {\"filename\": \"/edge_base/heretic/graphics/RTFCTOP.lmp\", \"start\": 7796467, \"end\": 7797216}, {\"filename\": \"/edge_base/heretic/graphics/STBARL.lmp\", \"start\": 7797216, \"end\": 7801457}, {\"filename\": \"/edge_base/heretic/graphics/STBARR.lmp\", \"start\": 7801457, \"end\": 7805698}, {\"filename\": \"/edge_base/heretic/graphics/TITLE.png\", \"start\": 7805698, \"end\": 7856321}, {\"filename\": \"/edge_base/heretic/graphics/WIENTER.png\", \"start\": 7856321, \"end\": 7857220}, {\"filename\": \"/edge_base/heretic/graphics/WIF.png\", \"start\": 7857220, \"end\": 7857966}, {\"filename\": \"/edge_base/heretic/graphics/__SKULL1.lmp\", \"start\": 7857966, \"end\": 7858342}, {\"filename\": \"/edge_base/heretic/graphics/__SKULL2.lmp\", \"start\": 7858342, \"end\": 7858718}, {\"filename\": \"/edge_base/heretic/scripts/anims.ddf\", \"start\": 7858718, \"end\": 7860441}, {\"filename\": \"/edge_base/heretic/scripts/attacks.ddf\", \"start\": 7860441, \"end\": 7902100}, {\"filename\": \"/edge_base/heretic/scripts/coal_hud.ec\", \"start\": 7902100, \"end\": 7917671}, {\"filename\": \"/edge_base/heretic/scripts/flats.ddf\", \"start\": 7917671, \"end\": 7918228}, {\"filename\": \"/edge_base/heretic/scripts/fonts.ddf\", \"start\": 7918228, \"end\": 7919276}, {\"filename\": \"/edge_base/heretic/scripts/games.ddf\", \"start\": 7919276, \"end\": 7921914}, {\"filename\": \"/edge_base/heretic/scripts/images.ddf\", \"start\": 7921914, \"end\": 7924733}, {\"filename\": \"/edge_base/heretic/scripts/language.ldf\", \"start\": 7924733, \"end\": 7933462}, {\"filename\": \"/edge_base/heretic/scripts/levels.ddf\", \"start\": 7933462, \"end\": 7947052}, {\"filename\": \"/edge_base/heretic/scripts/lines.ddf\", \"start\": 7947052, \"end\": 7951887}, {\"filename\": \"/edge_base/heretic/scripts/playlist.ddf\", \"start\": 7951887, \"end\": 7954043}, {\"filename\": \"/edge_base/heretic/scripts/rscript.rts\", \"start\": 7954043, \"end\": 7967091}, {\"filename\": \"/edge_base/heretic/scripts/sectors.ddf\", \"start\": 7967091, \"end\": 7968575}, {\"filename\": \"/edge_base/heretic/scripts/sounds.ddf\", \"start\": 7968575, \"end\": 7979777}, {\"filename\": \"/edge_base/heretic/scripts/styles.ddf\", \"start\": 7979777, \"end\": 7984322}, {\"filename\": \"/edge_base/heretic/scripts/switch.ddf\", \"start\": 7984322, \"end\": 7984777}, {\"filename\": \"/edge_base/heretic/scripts/things.ddf\", \"start\": 7984777, \"end\": 8068636}, {\"filename\": \"/edge_base/heretic/scripts/weapons.ddf\", \"start\": 8068636, \"end\": 8078957}, {\"filename\": \"/edge_base/heretic/sprites/STFFC0.lmp\", \"start\": 8078957, \"end\": 8096087}, {\"filename\": \"/edge_base/heretic/sprites/STFFH0.lmp\", \"start\": 8096087, \"end\": 8114133}, {\"filename\": \"/edge_base/plutonia/graphics/BOSSBACK.lmp\", \"start\": 8114133, \"end\": 8233421}, {\"filename\": \"/edge_base/plutonia/graphics/CREDIT.lmp\", \"start\": 8233421, \"end\": 8352709}, {\"filename\": \"/edge_base/plutonia/graphics/INTERPIC.lmp\", \"start\": 8352709, \"end\": 8471997}, {\"filename\": \"/edge_base/plutonia/graphics/TITLEPIC.lmp\", \"start\": 8471997, \"end\": 8591285}, {\"filename\": \"/edge_base/plutonia/scripts/images.ddf\", \"start\": 8591285, \"end\": 8592711}, {\"filename\": \"/edge_base/plutonia/scripts/language.ldf\", \"start\": 8592711, \"end\": 8596196}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_B.png\", \"start\": 8596196, \"end\": 8611227}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_E.png\", \"start\": 8611227, \"end\": 8626223}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_N.png\", \"start\": 8626223, \"end\": 8639302}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_S.png\", \"start\": 8639302, \"end\": 8652381}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_T.png\", \"start\": 8652381, \"end\": 8667412}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_W.png\", \"start\": 8667412, \"end\": 8682408}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_B.png\", \"start\": 8682408, \"end\": 8710343}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_E.png\", \"start\": 8710343, \"end\": 8721983}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_N.png\", \"start\": 8721983, \"end\": 8733892}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_S.png\", \"start\": 8733892, \"end\": 8745801}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_T.png\", \"start\": 8745801, \"end\": 8773736}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_W.png\", \"start\": 8773736, \"end\": 8785376}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_B.png\", \"start\": 8785376, \"end\": 8984126}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_E.png\", \"start\": 8984126, \"end\": 9074719}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_N.png\", \"start\": 9074719, \"end\": 9158103}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_S.png\", \"start\": 9158103, \"end\": 9241487}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_T.png\", \"start\": 9241487, \"end\": 9440237}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_W.png\", \"start\": 9440237, \"end\": 9530830}, {\"filename\": \"/edge_base/rekkr/graphics/M_DOOM.lmp\", \"start\": 9530830, \"end\": 9556121}, {\"filename\": \"/edge_base/rekkr/graphics/M_EPISOD.lmp\", \"start\": 9556121, \"end\": 9573591}, {\"filename\": \"/edge_base/rekkr/graphics/M_HURT.lmp\", \"start\": 9573591, \"end\": 9575730}, {\"filename\": \"/edge_base/rekkr/graphics/M_JKILL.lmp\", \"start\": 9575730, \"end\": 9578489}, {\"filename\": \"/edge_base/rekkr/graphics/M_LGTTL.lmp\", \"start\": 9578489, \"end\": 9580676}, {\"filename\": \"/edge_base/rekkr/graphics/M_LOADG.lmp\", \"start\": 9580676, \"end\": 9582793}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSCNTR.lmp\", \"start\": 9582793, \"end\": 9582985}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSLEFT.lmp\", \"start\": 9582985, \"end\": 9583177}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSRGHT.lmp\", \"start\": 9583177, \"end\": 9583369}, {\"filename\": \"/edge_base/rekkr/graphics/M_NEWG.lmp\", \"start\": 9583369, \"end\": 9586644}, {\"filename\": \"/edge_base/rekkr/graphics/M_NGAME.lmp\", \"start\": 9586644, \"end\": 9588692}, {\"filename\": \"/edge_base/rekkr/graphics/M_NMARE.lmp\", \"start\": 9588692, \"end\": 9591126}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTION.lmp\", \"start\": 9591126, \"end\": 9592963}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTTTL.lmp\", \"start\": 9592963, \"end\": 9594685}, {\"filename\": \"/edge_base/rekkr/graphics/M_QUITG.lmp\", \"start\": 9594685, \"end\": 9596753}, {\"filename\": \"/edge_base/rekkr/graphics/M_RDTHIS.lmp\", \"start\": 9596753, \"end\": 9597998}, {\"filename\": \"/edge_base/rekkr/graphics/M_ROUGH.lmp\", \"start\": 9597998, \"end\": 9600567}, {\"filename\": \"/edge_base/rekkr/graphics/M_SAVEG.lmp\", \"start\": 9600567, \"end\": 9602787}, {\"filename\": \"/edge_base/rekkr/graphics/M_SGTTL.lmp\", \"start\": 9602787, \"end\": 9605007}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKILL.lmp\", \"start\": 9605007, \"end\": 9633099}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL1.png\", \"start\": 9633099, \"end\": 9633687}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL2.png\", \"start\": 9633687, \"end\": 9634269}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL3.png\", \"start\": 9634269, \"end\": 9634864}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL4.png\", \"start\": 9634864, \"end\": 9635452}, {\"filename\": \"/edge_base/rekkr/graphics/M_ULTRA.lmp\", \"start\": 9635452, \"end\": 9637826}, {\"filename\": \"/edge_base/rekkr/graphics/STBARL.lmp\", \"start\": 9637826, \"end\": 9641237}, {\"filename\": \"/edge_base/rekkr/graphics/STBARR.lmp\", \"start\": 9641237, \"end\": 9644648}, {\"filename\": \"/edge_base/rekkr/graphics/WIENTER.lmp\", \"start\": 9644648, \"end\": 9646573}, {\"filename\": \"/edge_base/rekkr/graphics/WIF.lmp\", \"start\": 9646573, \"end\": 9648354}, {\"filename\": \"/edge_base/rekkr/graphics/WILV00.lmp\", \"start\": 9648354, \"end\": 9649953}, {\"filename\": \"/edge_base/rekkr/graphics/WILV01.lmp\", \"start\": 9649953, \"end\": 9650969}, {\"filename\": \"/edge_base/rekkr/graphics/WILV02.lmp\", \"start\": 9650969, \"end\": 9652996}, {\"filename\": \"/edge_base/rekkr/graphics/WILV03.lmp\", \"start\": 9652996, \"end\": 9655563}, {\"filename\": \"/edge_base/rekkr/graphics/WILV04.lmp\", \"start\": 9655563, \"end\": 9657278}, {\"filename\": \"/edge_base/rekkr/graphics/WILV05.lmp\", \"start\": 9657278, \"end\": 9659006}, {\"filename\": \"/edge_base/rekkr/graphics/WILV06.lmp\", \"start\": 9659006, \"end\": 9662390}, {\"filename\": \"/edge_base/rekkr/graphics/WILV07.lmp\", \"start\": 9662390, \"end\": 9665894}, {\"filename\": \"/edge_base/rekkr/graphics/WILV08.lmp\", \"start\": 9665894, \"end\": 9668737}, {\"filename\": \"/edge_base/rekkr/graphics/WILV10.lmp\", \"start\": 9668737, \"end\": 9670116}, {\"filename\": \"/edge_base/rekkr/graphics/WILV11.lmp\", \"start\": 9670116, \"end\": 9671752}, {\"filename\": \"/edge_base/rekkr/graphics/WILV12.lmp\", \"start\": 9671752, \"end\": 9674072}, {\"filename\": \"/edge_base/rekkr/graphics/WILV13.lmp\", \"start\": 9674072, \"end\": 9675282}, {\"filename\": \"/edge_base/rekkr/graphics/WILV14.lmp\", \"start\": 9675282, \"end\": 9677979}, {\"filename\": \"/edge_base/rekkr/graphics/WILV15.lmp\", \"start\": 9677979, \"end\": 9681066}, {\"filename\": \"/edge_base/rekkr/graphics/WILV16.lmp\", \"start\": 9681066, \"end\": 9682707}, {\"filename\": \"/edge_base/rekkr/graphics/WILV17.lmp\", \"start\": 9682707, \"end\": 9684595}, {\"filename\": \"/edge_base/rekkr/graphics/WILV18.lmp\", \"start\": 9684595, \"end\": 9685782}, {\"filename\": \"/edge_base/rekkr/graphics/WILV20.lmp\", \"start\": 9685782, \"end\": 9687743}, {\"filename\": \"/edge_base/rekkr/graphics/WILV21.lmp\", \"start\": 9687743, \"end\": 9690859}, {\"filename\": \"/edge_base/rekkr/graphics/WILV22.lmp\", \"start\": 9690859, \"end\": 9692620}, {\"filename\": \"/edge_base/rekkr/graphics/WILV23.lmp\", \"start\": 9692620, \"end\": 9695479}, {\"filename\": \"/edge_base/rekkr/graphics/WILV24.lmp\", \"start\": 9695479, \"end\": 9697192}, {\"filename\": \"/edge_base/rekkr/graphics/WILV25.lmp\", \"start\": 9697192, \"end\": 9699456}, {\"filename\": \"/edge_base/rekkr/graphics/WILV26.lmp\", \"start\": 9699456, \"end\": 9700689}, {\"filename\": \"/edge_base/rekkr/graphics/WILV27.lmp\", \"start\": 9700689, \"end\": 9701432}, {\"filename\": \"/edge_base/rekkr/graphics/WILV28.lmp\", \"start\": 9701432, \"end\": 9705210}, {\"filename\": \"/edge_base/rekkr/graphics/WILV30.lmp\", \"start\": 9705210, \"end\": 9707062}, {\"filename\": \"/edge_base/rekkr/graphics/WILV31.lmp\", \"start\": 9707062, \"end\": 9708700}, {\"filename\": \"/edge_base/rekkr/graphics/WILV32.lmp\", \"start\": 9708700, \"end\": 9709822}, {\"filename\": \"/edge_base/rekkr/graphics/WILV33.lmp\", \"start\": 9709822, \"end\": 9712161}, {\"filename\": \"/edge_base/rekkr/graphics/WILV34.lmp\", \"start\": 9712161, \"end\": 9714164}, {\"filename\": \"/edge_base/rekkr/graphics/WILV35.lmp\", \"start\": 9714164, \"end\": 9716298}, {\"filename\": \"/edge_base/rekkr/graphics/WILV36.lmp\", \"start\": 9716298, \"end\": 9719364}, {\"filename\": \"/edge_base/rekkr/graphics/WILV37.lmp\", \"start\": 9719364, \"end\": 9721359}, {\"filename\": \"/edge_base/rekkr/graphics/WILV38.lmp\", \"start\": 9721359, \"end\": 9723219}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTF.lmp\", \"start\": 9723219, \"end\": 9723481}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTI.lmp\", \"start\": 9723481, \"end\": 9724687}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTK.lmp\", \"start\": 9724687, \"end\": 9725752}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTS.lmp\", \"start\": 9725752, \"end\": 9726782}, {\"filename\": \"/edge_base/rekkr/graphics/WIPAR.lmp\", \"start\": 9726782, \"end\": 9727544}, {\"filename\": \"/edge_base/rekkr/graphics/WISCRT2.lmp\", \"start\": 9727544, \"end\": 9729111}, {\"filename\": \"/edge_base/rekkr/graphics/WITIME.lmp\", \"start\": 9729111, \"end\": 9730025}, {\"filename\": \"/edge_base/rekkr/scripts/anims.ddf\", \"start\": 9730025, \"end\": 9730169}, {\"filename\": \"/edge_base/rekkr/scripts/attacks.ddf\", \"start\": 9730169, \"end\": 9730929}, {\"filename\": \"/edge_base/rekkr/scripts/images.ddf\", \"start\": 9730929, \"end\": 9738077}, {\"filename\": \"/edge_base/rekkr/scripts/language.ldf\", \"start\": 9738077, \"end\": 9738887}, {\"filename\": \"/edge_base/rekkr/scripts/styles.ddf\", \"start\": 9738887, \"end\": 9742781}, {\"filename\": \"/edge_base/rekkr/scripts/things.ddf\", \"start\": 9742781, \"end\": 9745021}, {\"filename\": \"/edge_base/rekkr/scripts/weapons.ddf\", \"start\": 9745021, \"end\": 9746956}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA1.lmp\", \"start\": 9746956, \"end\": 9747581}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA2A8.lmp\", \"start\": 9747581, \"end\": 9748556}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA3A7.lmp\", \"start\": 9748556, \"end\": 9749531}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA4A6.lmp\", \"start\": 9749531, \"end\": 9750506}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA5.lmp\", \"start\": 9750506, \"end\": 9751137}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB1.lmp\", \"start\": 9751137, \"end\": 9751720}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB2B8.lmp\", \"start\": 9751720, \"end\": 9752687}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB3B7.lmp\", \"start\": 9752687, \"end\": 9753654}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB4B6.lmp\", \"start\": 9753654, \"end\": 9754621}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB5.lmp\", \"start\": 9754621, \"end\": 9755203}, {\"filename\": \"/edge_base/tnt/graphics/BOSSBACK.lmp\", \"start\": 9755203, \"end\": 9874491}, {\"filename\": \"/edge_base/tnt/graphics/CREDIT.lmp\", \"start\": 9874491, \"end\": 9993779}, {\"filename\": \"/edge_base/tnt/graphics/INTERPIC.lmp\", \"start\": 9993779, \"end\": 10113067}, {\"filename\": \"/edge_base/tnt/graphics/TITLEPIC.lmp\", \"start\": 10113067, \"end\": 10232355}, {\"filename\": \"/edge_base/tnt/scripts/images.ddf\", \"start\": 10232355, \"end\": 10233785}, {\"filename\": \"/edge_base/tnt/scripts/language.ldf\", \"start\": 10233785, \"end\": 10237564}, {\"filename\": \"/edge_base/tnt/textures/SKY1_B.png\", \"start\": 10237564, \"end\": 10253557}, {\"filename\": \"/edge_base/tnt/textures/SKY1_E.png\", \"start\": 10253557, \"end\": 10273023}, {\"filename\": \"/edge_base/tnt/textures/SKY1_N.png\", \"start\": 10273023, \"end\": 10290449}, {\"filename\": \"/edge_base/tnt/textures/SKY1_S.png\", \"start\": 10290449, \"end\": 10306356}, {\"filename\": \"/edge_base/tnt/textures/SKY1_T.png\", \"start\": 10306356, \"end\": 10346474}, {\"filename\": \"/edge_base/tnt/textures/SKY1_W.png\", \"start\": 10346474, \"end\": 10365798}, {\"filename\": \"/edge_base/tnt/textures/SKY2_B.png\", \"start\": 10365798, \"end\": 10367109}, {\"filename\": \"/edge_base/tnt/textures/SKY2_E.png\", \"start\": 10367109, \"end\": 10371632}, {\"filename\": \"/edge_base/tnt/textures/SKY2_N.png\", \"start\": 10371632, \"end\": 10372861}, {\"filename\": \"/edge_base/tnt/textures/SKY2_S.png\", \"start\": 10372861, \"end\": 10379078}, {\"filename\": \"/edge_base/tnt/textures/SKY2_T.png\", \"start\": 10379078, \"end\": 10383205}, {\"filename\": \"/edge_base/tnt/textures/SKY2_W.png\", \"start\": 10383205, \"end\": 10384747}, {\"filename\": \"/edge_base/tnt/textures/SKY3_B.png\", \"start\": 10384747, \"end\": 10409218}, {\"filename\": \"/edge_base/tnt/textures/SKY3_E.png\", \"start\": 10409218, \"end\": 10416920}, {\"filename\": \"/edge_base/tnt/textures/SKY3_N.png\", \"start\": 10416920, \"end\": 10424799}, {\"filename\": \"/edge_base/tnt/textures/SKY3_S.png\", \"start\": 10424799, \"end\": 10432147}, {\"filename\": \"/edge_base/tnt/textures/SKY3_T.png\", \"start\": 10432147, \"end\": 10456618}, {\"filename\": \"/edge_base/tnt/textures/SKY3_W.png\", \"start\": 10456618, \"end\": 10463959}, {\"filename\": \"/edge_defs/colormaps/AUTOMAPS.dat\", \"start\": 10463959, \"end\": 10464471}, {\"filename\": \"/edge_defs/colormaps/LAVAMAP.cmp\", \"start\": 10464471, \"end\": 10473175}, {\"filename\": \"/edge_defs/colormaps/NITEVMAP.cmp\", \"start\": 10473175, \"end\": 10473431}, {\"filename\": \"/edge_defs/colormaps/PLYRMAPS.dat\", \"start\": 10473431, \"end\": 10477271}, {\"filename\": \"/edge_defs/colormaps/SARGMAPS.dat\", \"start\": 10477271, \"end\": 10478807}, {\"filename\": \"/edge_defs/colormaps/SHADEMAP.cmp\", \"start\": 10478807, \"end\": 10479063}, {\"filename\": \"/edge_defs/colormaps/SKINMAPS.dat\", \"start\": 10479063, \"end\": 10480343}, {\"filename\": \"/edge_defs/colormaps/SLIMEMAP.cmp\", \"start\": 10480343, \"end\": 10489047}, {\"filename\": \"/edge_defs/colormaps/TEXTMAPS.dat\", \"start\": 10489047, \"end\": 10490839}, {\"filename\": \"/edge_defs/colormaps/TXTBLUES.dat\", \"start\": 10490839, \"end\": 10492119}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS1.dat\", \"start\": 10492119, \"end\": 10493399}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS2.dat\", \"start\": 10493399, \"end\": 10494679}, {\"filename\": \"/edge_defs/colormaps/TXTGREYS.dat\", \"start\": 10494679, \"end\": 10495959}, {\"filename\": \"/edge_defs/colormaps/TXTGRNS.dat\", \"start\": 10495959, \"end\": 10497239}, {\"filename\": \"/edge_defs/colormaps/TXTORANS.dat\", \"start\": 10497239, \"end\": 10498519}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS1.dat\", \"start\": 10498519, \"end\": 10499799}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS2.dat\", \"start\": 10499799, \"end\": 10501079}, {\"filename\": \"/edge_defs/colormaps/TXTPURPS.dat\", \"start\": 10501079, \"end\": 10502359}, {\"filename\": \"/edge_defs/colormaps/TXTREDS.dat\", \"start\": 10502359, \"end\": 10503639}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS1.dat\", \"start\": 10503639, \"end\": 10504919}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS2.dat\", \"start\": 10504919, \"end\": 10506199}, {\"filename\": \"/edge_defs/colormaps/WATERMAP.cmp\", \"start\": 10506199, \"end\": 10514903}, {\"filename\": \"/edge_defs/graphics/CREDIT2.lmp\", \"start\": 10514903, \"end\": 10581791}, {\"filename\": \"/edge_defs/graphics/DLITEXPN.png\", \"start\": 10581791, \"end\": 10596134}, {\"filename\": \"/edge_defs/graphics/EDGECBG1.jpg\", \"start\": 10596134, \"end\": 10659501}, {\"filename\": \"/edge_defs/graphics/EDGECRED.png\", \"start\": 10659501, \"end\": 10827100}, {\"filename\": \"/edge_defs/graphics/EDGETTL.lmp\", \"start\": 10827100, \"end\": 10893988}, {\"filename\": \"/edge_defs/graphics/ENDFONT.png\", \"start\": 10893988, \"end\": 10901092}, {\"filename\": \"/edge_defs/graphics/FONTVERD.png\", \"start\": 10901092, \"end\": 10945723}, {\"filename\": \"/edge_defs/graphics/MOUSE.lmp\", \"start\": 10945723, \"end\": 10945906}, {\"filename\": \"/edge_defs/graphics/M_EPI5.lmp\", \"start\": 10945906, \"end\": 10947050}, {\"filename\": \"/edge_defs/graphics/M_EPI6.lmp\", \"start\": 10947050, \"end\": 10950080}, {\"filename\": \"/edge_defs/graphics/STBARL.lmp\", \"start\": 10950080, \"end\": 10953491}, {\"filename\": \"/edge_defs/graphics/STBARR.lmp\", \"start\": 10953491, \"end\": 10956902}, {\"filename\": \"/edge_defs/graphics/STCFN000.lmp\", \"start\": 10956902, \"end\": 10957046}, {\"filename\": \"/edge_defs/graphics/STCFN132.lmp\", \"start\": 10957046, \"end\": 10957188}, {\"filename\": \"/edge_defs/graphics/STCFN134.lmp\", \"start\": 10957188, \"end\": 10957315}, {\"filename\": \"/edge_defs/graphics/STCFN148.lmp\", \"start\": 10957315, \"end\": 10957450}, {\"filename\": \"/edge_defs/graphics/STDESYNC.lmp\", \"start\": 10957450, \"end\": 10960047}, {\"filename\": \"/edge_defs/graphics/STFB0.lmp\", \"start\": 10960047, \"end\": 10961455}, {\"filename\": \"/edge_defs/graphics/STFB1.lmp\", \"start\": 10961455, \"end\": 10962863}, {\"filename\": \"/edge_defs/graphics/STFB2.lmp\", \"start\": 10962863, \"end\": 10964271}, {\"filename\": \"/edge_defs/graphics/STFB3.lmp\", \"start\": 10964271, \"end\": 10965679}, {\"filename\": \"/edge_defs/graphics/STFB4.lmp\", \"start\": 10965679, \"end\": 10967087}, {\"filename\": \"/edge_defs/graphics/STFB5.lmp\", \"start\": 10967087, \"end\": 10968495}, {\"filename\": \"/edge_defs/graphics/STFB6.lmp\", \"start\": 10968495, \"end\": 10969903}, {\"filename\": \"/edge_defs/graphics/STFB7.lmp\", \"start\": 10969903, \"end\": 10971311}, {\"filename\": \"/edge_defs/graphics/STKEYS6.lmp\", \"start\": 10971311, \"end\": 10971431}, {\"filename\": \"/edge_defs/graphics/STKEYS7.lmp\", \"start\": 10971431, \"end\": 10971551}, {\"filename\": \"/edge_defs/graphics/STKEYS8.lmp\", \"start\": 10971551, \"end\": 10971671}, {\"filename\": \"/edge_defs/graphics/STPB0.lmp\", \"start\": 10971671, \"end\": 10973149}, {\"filename\": \"/edge_defs/graphics/STPB1.lmp\", \"start\": 10973149, \"end\": 10974627}, {\"filename\": \"/edge_defs/graphics/STPB2.lmp\", \"start\": 10974627, \"end\": 10976105}, {\"filename\": \"/edge_defs/graphics/STPB3.lmp\", \"start\": 10976105, \"end\": 10977583}, {\"filename\": \"/edge_defs/graphics/STPB4.lmp\", \"start\": 10977583, \"end\": 10979061}, {\"filename\": \"/edge_defs/graphics/STPB5.lmp\", \"start\": 10979061, \"end\": 10980539}, {\"filename\": \"/edge_defs/graphics/STPB6.lmp\", \"start\": 10980539, \"end\": 10982017}, {\"filename\": \"/edge_defs/graphics/STPB7.lmp\", \"start\": 10982017, \"end\": 10983495}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR1.png\", \"start\": 10983495, \"end\": 10983688}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR2.png\", \"start\": 10983688, \"end\": 10983873}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR3.png\", \"start\": 10983873, \"end\": 10984058}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR4.png\", \"start\": 10984058, \"end\": 10984245}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR5.png\", \"start\": 10984245, \"end\": 10984511}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR6.png\", \"start\": 10984511, \"end\": 10984852}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR7.png\", \"start\": 10984852, \"end\": 10985146}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR8.png\", \"start\": 10985146, \"end\": 10986530}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR9.png\", \"start\": 10986530, \"end\": 10986949}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN001.png\", \"start\": 10986949, \"end\": 10987306}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN002.png\", \"start\": 10987306, \"end\": 10987651}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN003.png\", \"start\": 10987651, \"end\": 10988007}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN004.png\", \"start\": 10988007, \"end\": 10988355}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN005.png\", \"start\": 10988355, \"end\": 10988694}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN006.png\", \"start\": 10988694, \"end\": 10989012}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN007.png\", \"start\": 10989012, \"end\": 10989362}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN008.png\", \"start\": 10989362, \"end\": 10989718}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN009.png\", \"start\": 10989718, \"end\": 10989997}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN010.png\", \"start\": 10989997, \"end\": 10990322}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN011.png\", \"start\": 10990322, \"end\": 10990691}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN012.png\", \"start\": 10990691, \"end\": 10991015}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN013.png\", \"start\": 10991015, \"end\": 10991381}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN014.png\", \"start\": 10991381, \"end\": 10991737}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN015.png\", \"start\": 10991737, \"end\": 10992110}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN016.png\", \"start\": 10992110, \"end\": 10992444}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN017.png\", \"start\": 10992444, \"end\": 10992819}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN018.png\", \"start\": 10992819, \"end\": 10993177}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN019.png\", \"start\": 10993177, \"end\": 10993528}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN020.png\", \"start\": 10993528, \"end\": 10993847}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN021.png\", \"start\": 10993847, \"end\": 10994193}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN022.png\", \"start\": 10994193, \"end\": 10994522}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN023.png\", \"start\": 10994522, \"end\": 10994877}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN024.png\", \"start\": 10994877, \"end\": 10995228}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN025.png\", \"start\": 10995228, \"end\": 10995577}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN026.png\", \"start\": 10995577, \"end\": 10995915}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN027.png\", \"start\": 10995915, \"end\": 10996204}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN028.png\", \"start\": 10996204, \"end\": 10996518}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN029.png\", \"start\": 10996518, \"end\": 10996761}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN030.png\", \"start\": 10996761, \"end\": 10997004}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN031.png\", \"start\": 10997004, \"end\": 10997270}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN032.png\", \"start\": 10997270, \"end\": 10997503}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN033.png\", \"start\": 10997503, \"end\": 10997841}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN034.png\", \"start\": 10997841, \"end\": 10998134}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN035.png\", \"start\": 10998134, \"end\": 10998472}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN036.png\", \"start\": 10998472, \"end\": 10998801}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN037.png\", \"start\": 10998801, \"end\": 10999130}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN038.png\", \"start\": 10999130, \"end\": 10999463}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN039.png\", \"start\": 10999463, \"end\": 10999799}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN040.png\", \"start\": 10999799, \"end\": 11000096}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN041.png\", \"start\": 11000096, \"end\": 11000436}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN042.png\", \"start\": 11000436, \"end\": 11000776}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN043.png\", \"start\": 11000776, \"end\": 11001011}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN044.png\", \"start\": 11001011, \"end\": 11001331}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN045.png\", \"start\": 11001331, \"end\": 11001615}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN046.png\", \"start\": 11001615, \"end\": 11001945}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN047.png\", \"start\": 11001945, \"end\": 11002283}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN048.png\", \"start\": 11002283, \"end\": 11002598}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN049.png\", \"start\": 11002598, \"end\": 11002927}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN050.png\", \"start\": 11002927, \"end\": 11003249}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN051.png\", \"start\": 11003249, \"end\": 11003566}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN052.png\", \"start\": 11003566, \"end\": 11003905}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN053.png\", \"start\": 11003905, \"end\": 11004225}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN054.png\", \"start\": 11004225, \"end\": 11004499}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN055.png\", \"start\": 11004499, \"end\": 11004806}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN056.png\", \"start\": 11004806, \"end\": 11005151}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN057.png\", \"start\": 11005151, \"end\": 11005449}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN058.png\", \"start\": 11005449, \"end\": 11005803}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN059.png\", \"start\": 11005803, \"end\": 11006142}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN060.png\", \"start\": 11006142, \"end\": 11006481}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN061.png\", \"start\": 11006481, \"end\": 11006805}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN062.png\", \"start\": 11006805, \"end\": 11007145}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN063.png\", \"start\": 11007145, \"end\": 11007470}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN064.png\", \"start\": 11007470, \"end\": 11007809}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN065.png\", \"start\": 11007809, \"end\": 11008115}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN066.png\", \"start\": 11008115, \"end\": 11008449}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN067.png\", \"start\": 11008449, \"end\": 11008781}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN068.png\", \"start\": 11008781, \"end\": 11009129}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN069.png\", \"start\": 11009129, \"end\": 11009470}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN070.png\", \"start\": 11009470, \"end\": 11009795}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN071.png\", \"start\": 11009795, \"end\": 11010127}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN072.png\", \"start\": 11010127, \"end\": 11010456}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN073.png\", \"start\": 11010456, \"end\": 11010690}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN074.png\", \"start\": 11010690, \"end\": 11010936}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN075.png\", \"start\": 11010936, \"end\": 11011262}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN076.png\", \"start\": 11011262, \"end\": 11011549}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN077.png\", \"start\": 11011549, \"end\": 11011867}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN078.png\", \"start\": 11011867, \"end\": 11012187}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN079.png\", \"start\": 11012187, \"end\": 11012498}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN080.png\", \"start\": 11012498, \"end\": 11012815}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN081.png\", \"start\": 11012815, \"end\": 11013130}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN082.png\", \"start\": 11013130, \"end\": 11013432}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN083.png\", \"start\": 11013432, \"end\": 11013760}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN084.png\", \"start\": 11013760, \"end\": 11014092}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN085.png\", \"start\": 11014092, \"end\": 11014340}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN086.png\", \"start\": 11014340, \"end\": 11014591}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_1x.png\", \"start\": 11014591, \"end\": 11021927}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_2x.png\", \"start\": 11021927, \"end\": 11029316}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_1x.png\", \"start\": 11029316, \"end\": 11029480}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_2x.png\", \"start\": 11029480, \"end\": 11029654}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_1x.png\", \"start\": 11029654, \"end\": 11036957}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_2x.png\", \"start\": 11036957, \"end\": 11044292}, {\"filename\": \"/edge_defs/scripts/anims.ddf\", \"start\": 11044292, \"end\": 11046482}, {\"filename\": \"/edge_defs/scripts/attacks.ddf\", \"start\": 11046482, \"end\": 11069545}, {\"filename\": \"/edge_defs/scripts/coal_api.ec\", \"start\": 11069545, \"end\": 11084617}, {\"filename\": \"/edge_defs/scripts/coal_hud.ec\", \"start\": 11084617, \"end\": 11103394}, {\"filename\": \"/edge_defs/scripts/colmap.ddf\", \"start\": 11103394, \"end\": 11107613}, {\"filename\": \"/edge_defs/scripts/flats.ddf\", \"start\": 11107613, \"end\": 11112799}, {\"filename\": \"/edge_defs/scripts/fonts.ddf\", \"start\": 11112799, \"end\": 11114516}, {\"filename\": \"/edge_defs/scripts/games.ddf\", \"start\": 11114516, \"end\": 11119058}, {\"filename\": \"/edge_defs/scripts/images.ddf\", \"start\": 11119058, \"end\": 11138429}, {\"filename\": \"/edge_defs/scripts/language.ldf\", \"start\": 11138429, \"end\": 11256981}, {\"filename\": \"/edge_defs/scripts/levels.ddf\", \"start\": 11256981, \"end\": 11275224}, {\"filename\": \"/edge_defs/scripts/lines.ddf\", \"start\": 11275224, \"end\": 11372929}, {\"filename\": \"/edge_defs/scripts/playlist.ddf\", \"start\": 11372929, \"end\": 11375847}, {\"filename\": \"/edge_defs/scripts/rscript.rts\", \"start\": 11375847, \"end\": 11377538}, {\"filename\": \"/edge_defs/scripts/sectors.ddf\", \"start\": 11377538, \"end\": 11391375}, {\"filename\": \"/edge_defs/scripts/sounds.ddf\", \"start\": 11391375, \"end\": 11402970}, {\"filename\": \"/edge_defs/scripts/styles.ddf\", \"start\": 11402970, \"end\": 11409116}, {\"filename\": \"/edge_defs/scripts/switch.ddf\", \"start\": 11409116, \"end\": 11413420}, {\"filename\": \"/edge_defs/scripts/things.ddf\", \"start\": 11413420, \"end\": 11562747}, {\"filename\": \"/edge_defs/scripts/wadfixes.ddf\", \"start\": 11562747, \"end\": 11563544}, {\"filename\": \"/edge_defs/scripts/weapons.ddf\", \"start\": 11563544, \"end\": 11569238}, {\"filename\": \"/edge_defs/sounds/DPBAREXP.lmp\", \"start\": 11569238, \"end\": 11569321}, {\"filename\": \"/edge_defs/sounds/DPBDCLS.lmp\", \"start\": 11569321, \"end\": 11569367}, {\"filename\": \"/edge_defs/sounds/DPBDOPN.lmp\", \"start\": 11569367, \"end\": 11569408}, {\"filename\": \"/edge_defs/sounds/DPBFG.lmp\", \"start\": 11569408, \"end\": 11569596}, {\"filename\": \"/edge_defs/sounds/DPBGACT.lmp\", \"start\": 11569596, \"end\": 11569695}, {\"filename\": \"/edge_defs/sounds/DPBGDTH1.lmp\", \"start\": 11569695, \"end\": 11569784}, {\"filename\": \"/edge_defs/sounds/DPBGDTH2.lmp\", \"start\": 11569784, \"end\": 11569873}, {\"filename\": \"/edge_defs/sounds/DPBGSIT1.lmp\", \"start\": 11569873, \"end\": 11569984}, {\"filename\": \"/edge_defs/sounds/DPBGSIT2.lmp\", \"start\": 11569984, \"end\": 11570095}, {\"filename\": \"/edge_defs/sounds/DPBOSCUB.lmp\", \"start\": 11570095, \"end\": 11570131}, {\"filename\": \"/edge_defs/sounds/DPBOSDTH.lmp\", \"start\": 11570131, \"end\": 11570410}, {\"filename\": \"/edge_defs/sounds/DPBOSPIT.lmp\", \"start\": 11570410, \"end\": 11570455}, {\"filename\": \"/edge_defs/sounds/DPBOSPN.lmp\", \"start\": 11570455, \"end\": 11570493}, {\"filename\": \"/edge_defs/sounds/DPBOSSIT.lmp\", \"start\": 11570493, \"end\": 11570627}, {\"filename\": \"/edge_defs/sounds/DPBRSDTH.lmp\", \"start\": 11570627, \"end\": 11570739}, {\"filename\": \"/edge_defs/sounds/DPBRSSIT.lmp\", \"start\": 11570739, \"end\": 11570847}, {\"filename\": \"/edge_defs/sounds/DPBSPACT.lmp\", \"start\": 11570847, \"end\": 11570903}, {\"filename\": \"/edge_defs/sounds/DPBSPDTH.lmp\", \"start\": 11570903, \"end\": 11570994}, {\"filename\": \"/edge_defs/sounds/DPBSPSIT.lmp\", \"start\": 11570994, \"end\": 11571133}, {\"filename\": \"/edge_defs/sounds/DPBSPWLK.lmp\", \"start\": 11571133, \"end\": 11571178}, {\"filename\": \"/edge_defs/sounds/DPCACDTH.lmp\", \"start\": 11571178, \"end\": 11571267}, {\"filename\": \"/edge_defs/sounds/DPCACSIT.lmp\", \"start\": 11571267, \"end\": 11571379}, {\"filename\": \"/edge_defs/sounds/DPCLAW.lmp\", \"start\": 11571379, \"end\": 11571425}, {\"filename\": \"/edge_defs/sounds/DPCYBDTH.lmp\", \"start\": 11571425, \"end\": 11571562}, {\"filename\": \"/edge_defs/sounds/DPCYBSIT.lmp\", \"start\": 11571562, \"end\": 11571711}, {\"filename\": \"/edge_defs/sounds/DPDBCLS.lmp\", \"start\": 11571711, \"end\": 11571722}, {\"filename\": \"/edge_defs/sounds/DPDBLOAD.lmp\", \"start\": 11571722, \"end\": 11571733}, {\"filename\": \"/edge_defs/sounds/DPDBOPN.lmp\", \"start\": 11571733, \"end\": 11571744}, {\"filename\": \"/edge_defs/sounds/DPDMACT.lmp\", \"start\": 11571744, \"end\": 11571771}, {\"filename\": \"/edge_defs/sounds/DPDMPAIN.lmp\", \"start\": 11571771, \"end\": 11571812}, {\"filename\": \"/edge_defs/sounds/DPDORCLS.lmp\", \"start\": 11571812, \"end\": 11571883}, {\"filename\": \"/edge_defs/sounds/DPDOROPN.lmp\", \"start\": 11571883, \"end\": 11571956}, {\"filename\": \"/edge_defs/sounds/DPDSHTGN.lmp\", \"start\": 11571956, \"end\": 11571999}, {\"filename\": \"/edge_defs/sounds/DPFIRSHT.lmp\", \"start\": 11571999, \"end\": 11572034}, {\"filename\": \"/edge_defs/sounds/DPFIRXPL.lmp\", \"start\": 11572034, \"end\": 11572051}, {\"filename\": \"/edge_defs/sounds/DPFLAME.lmp\", \"start\": 11572051, \"end\": 11572128}, {\"filename\": \"/edge_defs/sounds/DPFLAMST.lmp\", \"start\": 11572128, \"end\": 11572142}, {\"filename\": \"/edge_defs/sounds/DPGETPOW.lmp\", \"start\": 11572142, \"end\": 11572279}, {\"filename\": \"/edge_defs/sounds/DPHOOF.lmp\", \"start\": 11572279, \"end\": 11572359}, {\"filename\": \"/edge_defs/sounds/DPITEMUP.lmp\", \"start\": 11572359, \"end\": 11572446}, {\"filename\": \"/edge_defs/sounds/DPITMBK.lmp\", \"start\": 11572446, \"end\": 11572531}, {\"filename\": \"/edge_defs/sounds/DPKEENDT.lmp\", \"start\": 11572531, \"end\": 11572637}, {\"filename\": \"/edge_defs/sounds/DPKEENPN.lmp\", \"start\": 11572637, \"end\": 11572693}, {\"filename\": \"/edge_defs/sounds/DPKNTDTH.lmp\", \"start\": 11572693, \"end\": 11572816}, {\"filename\": \"/edge_defs/sounds/DPKNTSIT.lmp\", \"start\": 11572816, \"end\": 11572882}, {\"filename\": \"/edge_defs/sounds/DPMANATK.lmp\", \"start\": 11572882, \"end\": 11572948}, {\"filename\": \"/edge_defs/sounds/DPMANDTH.lmp\", \"start\": 11572948, \"end\": 11573026}, {\"filename\": \"/edge_defs/sounds/DPMANSIT.lmp\", \"start\": 11573026, \"end\": 11573123}, {\"filename\": \"/edge_defs/sounds/DPMETAL.lmp\", \"start\": 11573123, \"end\": 11573142}, {\"filename\": \"/edge_defs/sounds/DPMNPAIN.lmp\", \"start\": 11573142, \"end\": 11573202}, {\"filename\": \"/edge_defs/sounds/DPNOWAY.lmp\", \"start\": 11573202, \"end\": 11573243}, {\"filename\": \"/edge_defs/sounds/DPOOF.lmp\", \"start\": 11573243, \"end\": 11573262}, {\"filename\": \"/edge_defs/sounds/DPPDIEHI.lmp\", \"start\": 11573262, \"end\": 11573340}, {\"filename\": \"/edge_defs/sounds/DPPEDTH.lmp\", \"start\": 11573340, \"end\": 11573449}, {\"filename\": \"/edge_defs/sounds/DPPEPAIN.lmp\", \"start\": 11573449, \"end\": 11573499}, {\"filename\": \"/edge_defs/sounds/DPPESIT.lmp\", \"start\": 11573499, \"end\": 11573616}, {\"filename\": \"/edge_defs/sounds/DPPISTOL.lmp\", \"start\": 11573616, \"end\": 11573634}, {\"filename\": \"/edge_defs/sounds/DPPLASMA.lmp\", \"start\": 11573634, \"end\": 11573676}, {\"filename\": \"/edge_defs/sounds/DPPLDETH.lmp\", \"start\": 11573676, \"end\": 11573825}, {\"filename\": \"/edge_defs/sounds/DPPLPAIN.lmp\", \"start\": 11573825, \"end\": 11573855}, {\"filename\": \"/edge_defs/sounds/DPPODTH1.lmp\", \"start\": 11573855, \"end\": 11573944}, {\"filename\": \"/edge_defs/sounds/DPPODTH2.lmp\", \"start\": 11573944, \"end\": 11574033}, {\"filename\": \"/edge_defs/sounds/DPPODTH3.lmp\", \"start\": 11574033, \"end\": 11574122}, {\"filename\": \"/edge_defs/sounds/DPPOPAIN.lmp\", \"start\": 11574122, \"end\": 11574160}, {\"filename\": \"/edge_defs/sounds/DPPOSACT.lmp\", \"start\": 11574160, \"end\": 11574190}, {\"filename\": \"/edge_defs/sounds/DPPOSIT1.lmp\", \"start\": 11574190, \"end\": 11574301}, {\"filename\": \"/edge_defs/sounds/DPPOSIT2.lmp\", \"start\": 11574301, \"end\": 11574412}, {\"filename\": \"/edge_defs/sounds/DPPOSIT3.lmp\", \"start\": 11574412, \"end\": 11574523}, {\"filename\": \"/edge_defs/sounds/DPPSTART.lmp\", \"start\": 11574523, \"end\": 11574564}, {\"filename\": \"/edge_defs/sounds/DPPSTOP.lmp\", \"start\": 11574564, \"end\": 11574581}, {\"filename\": \"/edge_defs/sounds/DPPUNCH.lmp\", \"start\": 11574581, \"end\": 11574618}, {\"filename\": \"/edge_defs/sounds/DPRADIO.lmp\", \"start\": 11574618, \"end\": 11574670}, {\"filename\": \"/edge_defs/sounds/DPRLAUNC.lmp\", \"start\": 11574670, \"end\": 11574733}, {\"filename\": \"/edge_defs/sounds/DPRXPLOD.lmp\", \"start\": 11574733, \"end\": 11574905}, {\"filename\": \"/edge_defs/sounds/DPSAWFUL.lmp\", \"start\": 11574905, \"end\": 11574933}, {\"filename\": \"/edge_defs/sounds/DPSAWHIT.lmp\", \"start\": 11574933, \"end\": 11574961}, {\"filename\": \"/edge_defs/sounds/DPSAWIDL.lmp\", \"start\": 11574961, \"end\": 11574966}, {\"filename\": \"/edge_defs/sounds/DPSAWUP.lmp\", \"start\": 11574966, \"end\": 11575054}, {\"filename\": \"/edge_defs/sounds/DPSGCOCK.lmp\", \"start\": 11575054, \"end\": 11575117}, {\"filename\": \"/edge_defs/sounds/DPSGTATK.lmp\", \"start\": 11575117, \"end\": 11575191}, {\"filename\": \"/edge_defs/sounds/DPSGTDTH.lmp\", \"start\": 11575191, \"end\": 11575280}, {\"filename\": \"/edge_defs/sounds/DPSGTSIT.lmp\", \"start\": 11575280, \"end\": 11575391}, {\"filename\": \"/edge_defs/sounds/DPSHOTGN.lmp\", \"start\": 11575391, \"end\": 11575433}, {\"filename\": \"/edge_defs/sounds/DPSKEACT.lmp\", \"start\": 11575433, \"end\": 11575473}, {\"filename\": \"/edge_defs/sounds/DPSKEATK.lmp\", \"start\": 11575473, \"end\": 11575532}, {\"filename\": \"/edge_defs/sounds/DPSKEDTH.lmp\", \"start\": 11575532, \"end\": 11575612}, {\"filename\": \"/edge_defs/sounds/DPSKEPCH.lmp\", \"start\": 11575612, \"end\": 11575649}, {\"filename\": \"/edge_defs/sounds/DPSKESIT.lmp\", \"start\": 11575649, \"end\": 11575755}, {\"filename\": \"/edge_defs/sounds/DPSKESWG.lmp\", \"start\": 11575755, \"end\": 11575795}, {\"filename\": \"/edge_defs/sounds/DPSKLATK.lmp\", \"start\": 11575795, \"end\": 11575875}, {\"filename\": \"/edge_defs/sounds/DPSKLDTH.lmp\", \"start\": 11575875, \"end\": 11575892}, {\"filename\": \"/edge_defs/sounds/DPSLOP.lmp\", \"start\": 11575892, \"end\": 11576001}, {\"filename\": \"/edge_defs/sounds/DPSPIDTH.lmp\", \"start\": 11576001, \"end\": 11576114}, {\"filename\": \"/edge_defs/sounds/DPSPISIT.lmp\", \"start\": 11576114, \"end\": 11576262}, {\"filename\": \"/edge_defs/sounds/DPSSDTH.lmp\", \"start\": 11576262, \"end\": 11576351}, {\"filename\": \"/edge_defs/sounds/DPSSSIT.lmp\", \"start\": 11576351, \"end\": 11576462}, {\"filename\": \"/edge_defs/sounds/DPSTNMOV.lmp\", \"start\": 11576462, \"end\": 11576470}, {\"filename\": \"/edge_defs/sounds/DPSWTCHN.lmp\", \"start\": 11576470, \"end\": 11576498}, {\"filename\": \"/edge_defs/sounds/DPSWTCHX.lmp\", \"start\": 11576498, \"end\": 11576527}, {\"filename\": \"/edge_defs/sounds/DPTELEPT.lmp\", \"start\": 11576527, \"end\": 11576629}, {\"filename\": \"/edge_defs/sounds/DPTINK.lmp\", \"start\": 11576629, \"end\": 11576681}, {\"filename\": \"/edge_defs/sounds/DPVILACT.lmp\", \"start\": 11576681, \"end\": 11576736}, {\"filename\": \"/edge_defs/sounds/DPVILATK.lmp\", \"start\": 11576736, \"end\": 11576799}, {\"filename\": \"/edge_defs/sounds/DPVILDTH.lmp\", \"start\": 11576799, \"end\": 11577067}, {\"filename\": \"/edge_defs/sounds/DPVILSIT.lmp\", \"start\": 11577067, \"end\": 11577143}, {\"filename\": \"/edge_defs/sounds/DPVIPAIN.lmp\", \"start\": 11577143, \"end\": 11577254}, {\"filename\": \"/edge_defs/sounds/DPWPNUP.lmp\", \"start\": 11577254, \"end\": 11577298}, {\"filename\": \"/edge_defs/sounds/DSACIDFT.ogg\", \"start\": 11577298, \"end\": 11584848, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSCRUSH.lmp\", \"start\": 11584848, \"end\": 11591866}, {\"filename\": \"/edge_defs/sounds/DSDGACT.ogg\", \"start\": 11591866, \"end\": 11599527, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGATK.ogg\", \"start\": 11599527, \"end\": 11606333, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGDTH.ogg\", \"start\": 11606333, \"end\": 11617149, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGPAIN.ogg\", \"start\": 11617149, \"end\": 11623141, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGSIT.ogg\", \"start\": 11623141, \"end\": 11629304, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT1.wav\", \"start\": 11629304, \"end\": 11644648, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT2.wav\", \"start\": 11644648, \"end\": 11660120, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT3.wav\", \"start\": 11660120, \"end\": 11672360, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT4.wav\", \"start\": 11672360, \"end\": 11687726, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSGLSBRK.wav\", \"start\": 11687726, \"end\": 11720324, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSJPDOWN.lmp\", \"start\": 11720324, \"end\": 11736912}, {\"filename\": \"/edge_defs/sounds/DSJPFLOW.lmp\", \"start\": 11736912, \"end\": 11740834}, {\"filename\": \"/edge_defs/sounds/DSJPIDLE.lmp\", \"start\": 11740834, \"end\": 11743801}, {\"filename\": \"/edge_defs/sounds/DSJPMOVE.lmp\", \"start\": 11743801, \"end\": 11745218}, {\"filename\": \"/edge_defs/sounds/DSJPRISE.lmp\", \"start\": 11745218, \"end\": 11753038}, {\"filename\": \"/edge_defs/sounds/DSMUCKFT.ogg\", \"start\": 11753038, \"end\": 11759112, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSSECRET.ogg\", \"start\": 11759112, \"end\": 11771953, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWATRFT.ogg\", \"start\": 11771953, \"end\": 11779614, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWTDIVE.wav\", \"start\": 11779614, \"end\": 11802090, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/HEARTBT1.ogg\", \"start\": 11802090, \"end\": 11822445, \"audio\": 1}, {\"filename\": \"/edge_defs/sprites/BSPHA0.png\", \"start\": 11822445, \"end\": 11823661}, {\"filename\": \"/edge_defs/sprites/BSPHB0.png\", \"start\": 11823661, \"end\": 11824882}, {\"filename\": \"/edge_defs/sprites/BSPHC0.png\", \"start\": 11824882, \"end\": 11826092}, {\"filename\": \"/edge_defs/sprites/BSPHD0.png\", \"start\": 11826092, \"end\": 11827293}, {\"filename\": \"/edge_defs/sprites/BSPHE0.png\", \"start\": 11827293, \"end\": 11828574}, {\"filename\": \"/edge_defs/sprites/BSPHF0.png\", \"start\": 11828574, \"end\": 11829917}, {\"filename\": \"/edge_defs/sprites/BSPHG0.png\", \"start\": 11829917, \"end\": 11831321}, {\"filename\": \"/edge_defs/sprites/BSPHH0.png\", \"start\": 11831321, \"end\": 11832666}, {\"filename\": \"/edge_defs/sprites/BSPHI0.png\", \"start\": 11832666, \"end\": 11833973}, {\"filename\": \"/edge_defs/sprites/BSPHJ0.png\", \"start\": 11833973, \"end\": 11835240}, {\"filename\": \"/edge_defs/sprites/BSPHK0.png\", \"start\": 11835240, \"end\": 11836477}, {\"filename\": \"/edge_defs/sprites/GLS1A0.lmp\", \"start\": 11836477, \"end\": 11836571}, {\"filename\": \"/edge_defs/sprites/GLS2A0.lmp\", \"start\": 11836571, \"end\": 11836785}, {\"filename\": \"/edge_defs/sprites/GLS3A0.lmp\", \"start\": 11836785, \"end\": 11837089}, {\"filename\": \"/edge_defs/sprites/GLS4A0.lmp\", \"start\": 11837089, \"end\": 11837457}, {\"filename\": \"/edge_defs/sprites/GLS5A0.lmp\", \"start\": 11837457, \"end\": 11837852}, {\"filename\": \"/edge_defs/sprites/GLS6A0.lmp\", \"start\": 11837852, \"end\": 11838288}, {\"filename\": \"/edge_defs/sprites/GLS7A0.lmp\", \"start\": 11838288, \"end\": 11838758}, {\"filename\": \"/edge_defs/sprites/GLS8A0.lmp\", \"start\": 11838758, \"end\": 11839190}, {\"filename\": \"/edge_defs/sprites/GLS9A0.lmp\", \"start\": 11839190, \"end\": 11839553}, {\"filename\": \"/edge_defs/sprites/JPCKA0.lmp\", \"start\": 11839553, \"end\": 11840369}, {\"filename\": \"/edge_defs/sprites/JPCKB0.lmp\", \"start\": 11840369, \"end\": 11841187}, {\"filename\": \"/edge_defs/sprites/JPCKC0.lmp\", \"start\": 11841187, \"end\": 11842005}, {\"filename\": \"/edge_defs/sprites/LVASA0.png\", \"start\": 11842005, \"end\": 11843303}, {\"filename\": \"/edge_defs/sprites/LVASB0.png\", \"start\": 11843303, \"end\": 11844686}, {\"filename\": \"/edge_defs/sprites/LVASC0.png\", \"start\": 11844686, \"end\": 11846040}, {\"filename\": \"/edge_defs/sprites/LVASD0.png\", \"start\": 11846040, \"end\": 11847340}, {\"filename\": \"/edge_defs/sprites/LVASE0.png\", \"start\": 11847340, \"end\": 11848609}, {\"filename\": \"/edge_defs/sprites/LVASF0.png\", \"start\": 11848609, \"end\": 11849832}, {\"filename\": \"/edge_defs/sprites/MUDSA0.png\", \"start\": 11849832, \"end\": 11851042}, {\"filename\": \"/edge_defs/sprites/MUDSB0.png\", \"start\": 11851042, \"end\": 11852254}, {\"filename\": \"/edge_defs/sprites/MUDSC0.png\", \"start\": 11852254, \"end\": 11853445}, {\"filename\": \"/edge_defs/sprites/MUDSD0.png\", \"start\": 11853445, \"end\": 11854630}, {\"filename\": \"/edge_defs/sprites/MUDSE0.png\", \"start\": 11854630, \"end\": 11855881}, {\"filename\": \"/edge_defs/sprites/MUDSF0.png\", \"start\": 11855881, \"end\": 11857122}, {\"filename\": \"/edge_defs/sprites/MUDSG0.png\", \"start\": 11857122, \"end\": 11858371}, {\"filename\": \"/edge_defs/sprites/MUDSH0.png\", \"start\": 11858371, \"end\": 11859593}, {\"filename\": \"/edge_defs/sprites/NVSCA0.lmp\", \"start\": 11859593, \"end\": 11860197}, {\"filename\": \"/edge_defs/sprites/NVSCB0.lmp\", \"start\": 11860197, \"end\": 11860801}, {\"filename\": \"/edge_defs/sprites/PLAYX1.lmp\", \"start\": 11860801, \"end\": 11861724}, {\"filename\": \"/edge_defs/sprites/PLAYX2X8.lmp\", \"start\": 11861724, \"end\": 11862940}, {\"filename\": \"/edge_defs/sprites/PLAYX3X7.lmp\", \"start\": 11862940, \"end\": 11864335}, {\"filename\": \"/edge_defs/sprites/PLAYX4X6.lmp\", \"start\": 11864335, \"end\": 11865464}, {\"filename\": \"/edge_defs/sprites/PLAYX5.lmp\", \"start\": 11865464, \"end\": 11866266}, {\"filename\": \"/edge_defs/sprites/PLAYY1.lmp\", \"start\": 11866266, \"end\": 11867214}, {\"filename\": \"/edge_defs/sprites/PLAYY2Y8.lmp\", \"start\": 11867214, \"end\": 11868442}, {\"filename\": \"/edge_defs/sprites/PLAYY3Y7.lmp\", \"start\": 11868442, \"end\": 11869828}, {\"filename\": \"/edge_defs/sprites/PLAYY4Y6.lmp\", \"start\": 11869828, \"end\": 11870966}, {\"filename\": \"/edge_defs/sprites/PLAYY5.lmp\", \"start\": 11870966, \"end\": 11871763}, {\"filename\": \"/edge_defs/sprites/PRT1A0.png\", \"start\": 11871763, \"end\": 11872635}, {\"filename\": \"/edge_defs/sprites/PRT2A0.png\", \"start\": 11872635, \"end\": 11873507}, {\"filename\": \"/edge_defs/sprites/PRT3A0.png\", \"start\": 11873507, \"end\": 11873636}, {\"filename\": \"/edge_defs/sprites/SLDGA0.png\", \"start\": 11873636, \"end\": 11874852}, {\"filename\": \"/edge_defs/sprites/SLDGB0.png\", \"start\": 11874852, \"end\": 11876070}, {\"filename\": \"/edge_defs/sprites/SLDGC0.png\", \"start\": 11876070, \"end\": 11877266}, {\"filename\": \"/edge_defs/sprites/SLDGD0.png\", \"start\": 11877266, \"end\": 11878453}, {\"filename\": \"/edge_defs/sprites/SLDGE0.png\", \"start\": 11878453, \"end\": 11879704}, {\"filename\": \"/edge_defs/sprites/SLDGF0.png\", \"start\": 11879704, \"end\": 11880945}, {\"filename\": \"/edge_defs/sprites/SLDGG0.png\", \"start\": 11880945, \"end\": 11882194}, {\"filename\": \"/edge_defs/sprites/SLDGH0.png\", \"start\": 11882194, \"end\": 11883416}, {\"filename\": \"/edge_defs/sprites/SLIMA0.png\", \"start\": 11883416, \"end\": 11884617}, {\"filename\": \"/edge_defs/sprites/SLIMB0.png\", \"start\": 11884617, \"end\": 11885822}, {\"filename\": \"/edge_defs/sprites/SLIMC0.png\", \"start\": 11885822, \"end\": 11887009}, {\"filename\": \"/edge_defs/sprites/SLIMD0.png\", \"start\": 11887009, \"end\": 11888187}, {\"filename\": \"/edge_defs/sprites/SLIME0.png\", \"start\": 11888187, \"end\": 11889432}, {\"filename\": \"/edge_defs/sprites/SLIMF0.png\", \"start\": 11889432, \"end\": 11890668}, {\"filename\": \"/edge_defs/sprites/SLIMG0.png\", \"start\": 11890668, \"end\": 11891913}, {\"filename\": \"/edge_defs/sprites/SLIMH0.png\", \"start\": 11891913, \"end\": 11893129}, {\"filename\": \"/edge_defs/sprites/SPSHA0.png\", \"start\": 11893129, \"end\": 11894346}, {\"filename\": \"/edge_defs/sprites/SPSHB0.png\", \"start\": 11894346, \"end\": 11895566}, {\"filename\": \"/edge_defs/sprites/SPSHC0.png\", \"start\": 11895566, \"end\": 11896777}, {\"filename\": \"/edge_defs/sprites/SPSHD0.png\", \"start\": 11896777, \"end\": 11897978}, {\"filename\": \"/edge_defs/sprites/SPSHE0.png\", \"start\": 11897978, \"end\": 11899258}, {\"filename\": \"/edge_defs/sprites/SPSHF0.png\", \"start\": 11899258, \"end\": 11900609}, {\"filename\": \"/edge_defs/sprites/SPSHG0.png\", \"start\": 11900609, \"end\": 11902016}, {\"filename\": \"/edge_defs/sprites/SPSHH0.png\", \"start\": 11902016, \"end\": 11903368}, {\"filename\": \"/edge_defs/sprites/SPSHI0.png\", \"start\": 11903368, \"end\": 11904679}, {\"filename\": \"/edge_defs/sprites/SPSHJ0.png\", \"start\": 11904679, \"end\": 11905947}, {\"filename\": \"/edge_defs/sprites/SPSHK0.png\", \"start\": 11905947, \"end\": 11907184}, {\"filename\": \"/edge_defs/sprites/TSTPA0.png\", \"start\": 11907184, \"end\": 11908309}, {\"filename\": \"/edge_defs/sprites/TSTPB0.lmp\", \"start\": 11908309, \"end\": 11908651}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA1.png\", \"start\": 11908651, \"end\": 11909931}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA2.png\", \"start\": 11909931, \"end\": 11911484}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA3.png\", \"start\": 11911484, \"end\": 11913115}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA4.png\", \"start\": 11913115, \"end\": 11914648}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA5.png\", \"start\": 11914648, \"end\": 11915834}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA6.png\", \"start\": 11915834, \"end\": 11917350}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA7.png\", \"start\": 11917350, \"end\": 11918943}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA8.png\", \"start\": 11918943, \"end\": 11920461}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB1.png\", \"start\": 11920461, \"end\": 11921691}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB2.png\", \"start\": 11921691, \"end\": 11923211}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB3.png\", \"start\": 11923211, \"end\": 11924818}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB4.png\", \"start\": 11924818, \"end\": 11926351}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB5.png\", \"start\": 11926351, \"end\": 11927561}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB6.png\", \"start\": 11927561, \"end\": 11929059}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB7.png\", \"start\": 11929059, \"end\": 11930651}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB8.png\", \"start\": 11930651, \"end\": 11932165}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC1.png\", \"start\": 11932165, \"end\": 11933462}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC2.png\", \"start\": 11933462, \"end\": 11934968}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC3.png\", \"start\": 11934968, \"end\": 11936539}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC4.png\", \"start\": 11936539, \"end\": 11938070}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC5.png\", \"start\": 11938070, \"end\": 11939407}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC6.png\", \"start\": 11939407, \"end\": 11940927}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC7.png\", \"start\": 11940927, \"end\": 11942463}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC8.png\", \"start\": 11942463, \"end\": 11943952}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD1.png\", \"start\": 11943952, \"end\": 11945263}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD2.png\", \"start\": 11945263, \"end\": 11946781}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD3.png\", \"start\": 11946781, \"end\": 11948369}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD4.png\", \"start\": 11948369, \"end\": 11949894}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD5.png\", \"start\": 11949894, \"end\": 11951220}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD6.png\", \"start\": 11951220, \"end\": 11952762}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD7.png\", \"start\": 11952762, \"end\": 11954335}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD8.png\", \"start\": 11954335, \"end\": 11955838}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE1.png\", \"start\": 11955838, \"end\": 11957200}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE2.png\", \"start\": 11957200, \"end\": 11958717}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE3.png\", \"start\": 11958717, \"end\": 11960265}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE4.png\", \"start\": 11960265, \"end\": 11961863}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE5.png\", \"start\": 11961863, \"end\": 11963301}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE6.png\", \"start\": 11963301, \"end\": 11964851}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE7.png\", \"start\": 11964851, \"end\": 11966405}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE8.png\", \"start\": 11966405, \"end\": 11967964}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF1.png\", \"start\": 11967964, \"end\": 11969361}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF2.png\", \"start\": 11969361, \"end\": 11970932}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF3.png\", \"start\": 11970932, \"end\": 11972534}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF4.png\", \"start\": 11972534, \"end\": 11974100}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF5.png\", \"start\": 11974100, \"end\": 11975503}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF6.png\", \"start\": 11975503, \"end\": 11977020}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF7.png\", \"start\": 11977020, \"end\": 11978616}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF8.png\", \"start\": 11978616, \"end\": 11980224}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG1.png\", \"start\": 11980224, \"end\": 11981613}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG2.png\", \"start\": 11981613, \"end\": 11983201}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG3.png\", \"start\": 11983201, \"end\": 11984845}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG4.png\", \"start\": 11984845, \"end\": 11986365}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG5.png\", \"start\": 11986365, \"end\": 11987715}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG6.png\", \"start\": 11987715, \"end\": 11989236}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG7.png\", \"start\": 11989236, \"end\": 11990858}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG8.png\", \"start\": 11990858, \"end\": 11992428}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH1.png\", \"start\": 11992428, \"end\": 11993738}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH2.png\", \"start\": 11993738, \"end\": 11995269}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH3.png\", \"start\": 11995269, \"end\": 11996861}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH4.png\", \"start\": 11996861, \"end\": 11998344}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH5.png\", \"start\": 11998344, \"end\": 11999638}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH6.png\", \"start\": 11999638, \"end\": 12001105}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH7.png\", \"start\": 12001105, \"end\": 12002683}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH8.png\", \"start\": 12002683, \"end\": 12004252}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDI0.png\", \"start\": 12004252, \"end\": 12005942}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDJ0.png\", \"start\": 12005942, \"end\": 12007724}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDK0.png\", \"start\": 12007724, \"end\": 12009470}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDL0.png\", \"start\": 12009470, \"end\": 12011190}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDM0.png\", \"start\": 12011190, \"end\": 12012917}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDN0.png\", \"start\": 12012917, \"end\": 12014656}, {\"filename\": \"/edge_defs/textures/FUZZMAP8.png\", \"start\": 12014656, \"end\": 12029456}, {\"filename\": \"/edge_defs/textures/PORTAL7A.jpg\", \"start\": 12029456, \"end\": 12051574}, {\"filename\": \"/edge_defs/textures/PORTAL7B.jpg\", \"start\": 12051574, \"end\": 12069927}, {\"filename\": \"/edge_defs/textures/PORTAL7C.jpg\", \"start\": 12069927, \"end\": 12085418}, {\"filename\": \"/edge_defs/textures/PORTAL7D.jpg\", \"start\": 12085418, \"end\": 12100712}, {\"filename\": \"/edge_defs/textures/PORTAL7E.jpg\", \"start\": 12100712, \"end\": 12115579}, {\"filename\": \"/edge_defs/textures/PORTAL7F.jpg\", \"start\": 12115579, \"end\": 12132580}, {\"filename\": \"/edge_defs/textures/PORTAL7G.jpg\", \"start\": 12132580, \"end\": 12153288}, {\"filename\": \"/edge_defs/ttf/ECFONT01.ttf\", \"start\": 12153288, \"end\": 12217628}, {\"filename\": \"/edge_defs/version.txt\", \"start\": 12217628, \"end\": 12217632}, {\"filename\": \"/freedm.wad\", \"start\": 12217632, \"end\": 34042080}, {\"filename\": \"/freedoom2.wad\", \"start\": 34042080, \"end\": 62586212}, {\"filename\": \"/soundfont/16-Bit Game Station.sf2\", \"start\": 62586212, \"end\": 66269750}, {\"filename\": \"/soundfont/ProtoSquare!.sf2\", \"start\": 66269750, \"end\": 66633988}, {\"filename\": \"/soundfont/adplug.op2\", \"start\": 66633988, \"end\": 66645896}, {\"filename\": \"/soundfont/bonkers_for_bits.sf2\", \"start\": 66645896, \"end\": 66673900}, {\"filename\": \"/soundfont/default.sf2\", \"start\": 66673900, \"end\": 70820340}, {\"filename\": \"/soundfont/dmxopl.op2\", \"start\": 70820340, \"end\": 70832248}, {\"filename\": \"/soundfont/dmxopl3.wopl\", \"start\": 70832248, \"end\": 71044317}, {\"filename\": \"/soundfont/wadsmoosh.op2\", \"start\": 71044317, \"end\": 71056225}], \"remote_package_size\": 52769801, \"package_uuid\": \"sha256-e9391712cc819f05d60049e0a47523e47902d324a041c65f479fa1979506bcae\"});\r\n\r\n  })();\r\n\r\n\r\n// Sometimes an existing Module object exists with properties\r\n// meant to overwrite the default module functionality. Here\r\n// we collect those properties and reapply _after_ we configure\r\n// the current environment's defaults to avoid having to be so\r\n// defensive during initialization.\r\nvar moduleOverrides = Object.assign({}, Module);\r\n\r\nvar arguments_ = [];\r\nvar thisProgram = './this.program';\r\nvar quit_ = (status, toThrow) => {\r\n  throw toThrow;\r\n};\r\n\r\n// Determine the runtime environment we are in. You can customize this by\r\n// setting the ENVIRONMENT setting at compile time (see settings.js).\r\n\r\nvar ENVIRONMENT_IS_WEB = true;\r\nvar ENVIRONMENT_IS_WORKER = false;\r\nvar ENVIRONMENT_IS_NODE = false;\r\nvar ENVIRONMENT_IS_SHELL = false;\r\n\r\n// `/` should be present at the end if `scriptDirectory` is not empty\r\nvar scriptDirectory = '';\r\nfunction locateFile(path) {\r\n  if (Module['locateFile']) {\r\n    return Module['locateFile'](path, scriptDirectory);\r\n  }\r\n  return scriptDirectory + path;\r\n}\r\n\r\n// Hooks that are implemented differently in different runtime environments.\r\nvar read_,\r\n    readAsync,\r\n    readBinary,\r\n    setWindowTitle;\r\n\r\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\r\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\r\n// ENVIRONMENT_IS_NODE.\r\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\r\n    scriptDirectory = self.location.href;\r\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\r\n    scriptDirectory = document.currentScript.src;\r\n  }\r\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\r\n  // is gone, so we saved it, and we use it here instead of any other info.\r\n  if (_scriptDir) {\r\n    scriptDirectory = _scriptDir;\r\n  }\r\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\r\n  // otherwise, slice off the final part of the url to find the script directory.\r\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\r\n  // and scriptDirectory will correctly be replaced with an empty string.\r\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\r\n  // they are removed because they could contain a slash.\r\n  if (scriptDirectory.indexOf('blob:') !== 0) {\r\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\r\n  } else {\r\n    scriptDirectory = '';\r\n  }\r\n\r\n  // Differentiate the Web Worker from the Node Worker case, as reading must\r\n  // be done differently.\r\n  {\r\n// include: web_or_worker_shell_read.js\r\nread_ = (url) => {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, false);\r\n      xhr.send(null);\r\n      return xhr.responseText;\r\n  }\r\n\r\n  if (ENVIRONMENT_IS_WORKER) {\r\n    readBinary = (url) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, false);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.send(null);\r\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\r\n    };\r\n  }\r\n\r\n  readAsync = (url, onload, onerror) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url, true);\r\n    xhr.responseType = 'arraybuffer';\r\n    xhr.onload = () => {\r\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n        onload(xhr.response);\r\n        return;\r\n      }\r\n      onerror();\r\n    };\r\n    xhr.onerror = onerror;\r\n    xhr.send(null);\r\n  }\r\n\r\n// end include: web_or_worker_shell_read.js\r\n  }\r\n\r\n  setWindowTitle = (title) => document.title = title;\r\n} else\r\n{\r\n}\r\n\r\nvar out = Module['print'] || console.log.bind(console);\r\nvar err = Module['printErr'] || console.warn.bind(console);\r\n\r\n// Merge back in the overrides\r\nObject.assign(Module, moduleOverrides);\r\n// Free the object hierarchy contained in the overrides, this lets the GC\r\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\r\nmoduleOverrides = null;\r\n\r\n// Emit code to handle expected values on the Module object. This applies Module.x\r\n// to the proper local x. This has two benefits: first, we only emit it if it is\r\n// expected to arrive, and second, by using a local everywhere else that can be\r\n// minified.\r\n\r\nif (Module['arguments']) arguments_ = Module['arguments'];\r\n\r\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\r\n\r\nif (Module['quit']) quit_ = Module['quit'];\r\n\r\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\r\n\r\n\r\n// end include: shell.js\r\n// include: preamble.js\r\n// === Preamble library stuff ===\r\n\r\n// Documentation for the public APIs defined in this file must be updated in:\r\n//    site/source/docs/api_reference/preamble.js.rst\r\n// A prebuilt local version of the documentation is available at:\r\n//    site/build/text/docs/api_reference/preamble.js.txt\r\n// You can also build docs locally as HTML or other formats in site/\r\n// An online HTML version (which may be of a different version of Emscripten)\r\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\r\n\r\nvar wasmBinary;\r\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\r\nvar noExitRuntime = Module['noExitRuntime'] || true;\r\n\r\nif (typeof WebAssembly != 'object') {\r\n  abort('no native wasm support detected');\r\n}\r\n\r\n// Wasm globals\r\n\r\nvar wasmMemory;\r\n\r\n//========================================\r\n// Runtime essentials\r\n//========================================\r\n\r\n// whether we are quitting the application. no code should run after this.\r\n// set in exit() and abort()\r\nvar ABORT = false;\r\n\r\n// set by exit() and abort().  Passed to 'onExit' handler.\r\n// NOTE: This is also used as the process return code code in shell environments\r\n// but only when noExitRuntime is false.\r\nvar EXITSTATUS;\r\n\r\n/** @type {function(*, string=)} */\r\nfunction assert(condition, text) {\r\n  if (!condition) {\r\n    // This build was created without ASSERTIONS defined.  `assert()` should not\r\n    // ever be called in this configuration but in case there are callers in\r\n    // the wild leave this simple abort() implemenation here for now.\r\n    abort(text);\r\n  }\r\n}\r\n\r\n// Memory management\r\n\r\nvar HEAP,\r\n/** @type {!Int8Array} */\r\n  HEAP8,\r\n/** @type {!Uint8Array} */\r\n  HEAPU8,\r\n/** @type {!Int16Array} */\r\n  HEAP16,\r\n/** @type {!Uint16Array} */\r\n  HEAPU16,\r\n/** @type {!Int32Array} */\r\n  HEAP32,\r\n/** @type {!Uint32Array} */\r\n  HEAPU32,\r\n/** @type {!Float32Array} */\r\n  HEAPF32,\r\n/** @type {!Float64Array} */\r\n  HEAPF64;\r\n\r\nfunction updateMemoryViews() {\r\n  var b = wasmMemory.buffer;\r\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\r\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\r\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\r\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\r\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\r\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\r\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\r\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\r\n}\r\n\r\n// include: runtime_init_table.js\r\n// In regular non-RELOCATABLE mode the table is exported\r\n// from the wasm module and this will be assigned once\r\n// the exports are available.\r\nvar wasmTable;\r\n\r\n// end include: runtime_init_table.js\r\n// include: runtime_stack_check.js\r\n// end include: runtime_stack_check.js\r\n// include: runtime_assertions.js\r\n// end include: runtime_assertions.js\r\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\r\nvar __ATINIT__    = []; // functions called during startup\r\nvar __ATMAIN__    = []; // functions called when main() is to be run\r\nvar __ATEXIT__    = []; // functions called during shutdown\r\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\r\n\r\nvar runtimeInitialized = false;\r\n\r\nvar runtimeKeepaliveCounter = 0;\r\n\r\nfunction keepRuntimeAlive() {\r\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\r\n}\r\n\r\nfunction preRun() {\r\n  if (Module['preRun']) {\r\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\r\n    while (Module['preRun'].length) {\r\n      addOnPreRun(Module['preRun'].shift());\r\n    }\r\n  }\r\n  callRuntimeCallbacks(__ATPRERUN__);\r\n}\r\n\r\nfunction initRuntime() {\r\n  runtimeInitialized = true;\r\n\r\n  \r\nif (!Module[\"noFSInit\"] && !FS.init.initialized)\r\n  FS.init();\r\nFS.ignorePermissions = false;\r\n\r\nTTY.init();\r\n  callRuntimeCallbacks(__ATINIT__);\r\n}\r\n\r\nfunction preMain() {\r\n  \r\n  callRuntimeCallbacks(__ATMAIN__);\r\n}\r\n\r\nfunction postRun() {\r\n\r\n  if (Module['postRun']) {\r\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\r\n    while (Module['postRun'].length) {\r\n      addOnPostRun(Module['postRun'].shift());\r\n    }\r\n  }\r\n\r\n  callRuntimeCallbacks(__ATPOSTRUN__);\r\n}\r\n\r\nfunction addOnPreRun(cb) {\r\n  __ATPRERUN__.unshift(cb);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n  __ATINIT__.unshift(cb);\r\n}\r\n\r\nfunction addOnPreMain(cb) {\r\n  __ATMAIN__.unshift(cb);\r\n}\r\n\r\nfunction addOnExit(cb) {\r\n}\r\n\r\nfunction addOnPostRun(cb) {\r\n  __ATPOSTRUN__.unshift(cb);\r\n}\r\n\r\n// include: runtime_math.js\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\r\n\r\n// end include: runtime_math.js\r\n// A counter of dependencies for calling run(). If we need to\r\n// do asynchronous work before running, increment this and\r\n// decrement it. Incrementing must happen in a place like\r\n// Module.preRun (used by emcc to add file preloading).\r\n// Note that you can add dependencies in preRun, even though\r\n// it happens right before run - run will be postponed until\r\n// the dependencies are met.\r\nvar runDependencies = 0;\r\nvar runDependencyWatcher = null;\r\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\r\n\r\nfunction getUniqueRunDependency(id) {\r\n  return id;\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n  runDependencies++;\r\n\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n  runDependencies--;\r\n\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n\r\n  if (runDependencies == 0) {\r\n    if (runDependencyWatcher !== null) {\r\n      clearInterval(runDependencyWatcher);\r\n      runDependencyWatcher = null;\r\n    }\r\n    if (dependenciesFulfilled) {\r\n      var callback = dependenciesFulfilled;\r\n      dependenciesFulfilled = null;\r\n      callback(); // can add another dependenciesFulfilled\r\n    }\r\n  }\r\n}\r\n\r\n/** @param {string|number=} what */\r\nfunction abort(what) {\r\n  if (Module['onAbort']) {\r\n    Module['onAbort'](what);\r\n  }\r\n\r\n  what = 'Aborted(' + what + ')';\r\n  // TODO(sbc): Should we remove printing and leave it up to whoever\r\n  // catches the exception?\r\n  err(what);\r\n\r\n  ABORT = true;\r\n  EXITSTATUS = 1;\r\n\r\n  what += '. Build with -sASSERTIONS for more info.';\r\n\r\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\r\n  // exception, which means we'd run destructors on it. We need the error to\r\n  // simply make the program stop.\r\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\r\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\r\n  // a trap or not based on a hidden field within the object. So at the moment\r\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\r\n  // allows this in the wasm spec.\r\n\r\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\r\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\r\n  // though it can.\r\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\r\n  /** @suppress {checkTypes} */\r\n  var e = new WebAssembly.RuntimeError(what);\r\n\r\n  readyPromiseReject(e);\r\n  // Throw the error whether or not MODULARIZE is set because abort is used\r\n  // in code paths apart from instantiation where an exception is expected\r\n  // to be thrown when abort is called.\r\n  throw e;\r\n}\r\n\r\n// include: memoryprofiler.js\r\n// end include: memoryprofiler.js\r\n// include: URIUtils.js\r\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\r\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\r\n\r\n// Indicates whether filename is a base64 data URI.\r\nfunction isDataURI(filename) {\r\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\r\n  return filename.startsWith(dataURIPrefix);\r\n}\r\n\r\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\r\nfunction isFileURI(filename) {\r\n  return filename.startsWith('file://');\r\n}\r\n\r\n// end include: URIUtils.js\r\n// include: runtime_exceptions.js\r\n// end include: runtime_exceptions.js\r\nvar wasmBinaryFile;\r\n  wasmBinaryFile = 'edge-classic.wasm';\r\n  if (!isDataURI(wasmBinaryFile)) {\r\n    wasmBinaryFile = locateFile(wasmBinaryFile);\r\n  }\r\n\r\nfunction getBinary(file) {\r\n  try {\r\n    if (file == wasmBinaryFile && wasmBinary) {\r\n      return new Uint8Array(wasmBinary);\r\n    }\r\n    if (readBinary) {\r\n      return readBinary(file);\r\n    }\r\n    throw \"both async and sync fetching of the wasm failed\";\r\n  }\r\n  catch (err) {\r\n    abort(err);\r\n  }\r\n}\r\n\r\nfunction getBinaryPromise(binaryFile) {\r\n  // If we don't have the binary yet, try to load it asynchronously.\r\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\r\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\r\n  // Cordova or Electron apps are typically loaded from a file:// url.\r\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\r\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\r\n    if (typeof fetch == 'function'\r\n    ) {\r\n      return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n        if (!response['ok']) {\r\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\r\n        }\r\n        return response['arrayBuffer']();\r\n      }).catch(() => getBinary(binaryFile));\r\n    }\r\n  }\r\n\r\n  // Otherwise, getBinary should be able to get it synchronously\r\n  return Promise.resolve().then(() => getBinary(binaryFile));\r\n}\r\n\r\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\r\n  return getBinaryPromise(binaryFile).then((binary) => {\r\n    return WebAssembly.instantiate(binary, imports);\r\n  }).then((instance) => {\r\n    return instance;\r\n  }).then(receiver, (reason) => {\r\n    err('failed to asynchronously prepare wasm: ' + reason);\r\n\r\n    abort(reason);\r\n  });\r\n}\r\n\r\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\r\n  if (!binary &&\r\n      typeof WebAssembly.instantiateStreaming == 'function' &&\r\n      !isDataURI(binaryFile) &&\r\n      typeof fetch == 'function') {\r\n    return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n      // Suppress closure warning here since the upstream definition for\r\n      // instantiateStreaming only allows Promise<Repsponse> rather than\r\n      // an actual Response.\r\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\r\n      /** @suppress {checkTypes} */\r\n      var result = WebAssembly.instantiateStreaming(response, imports);\r\n\r\n      return result.then(\r\n        callback,\r\n        function(reason) {\r\n          // We expect the most common failure cause to be a bad MIME type for the binary,\r\n          // in which case falling back to ArrayBuffer instantiation should work.\r\n          err('wasm streaming compile failed: ' + reason);\r\n          err('falling back to ArrayBuffer instantiation');\r\n          return instantiateArrayBuffer(binaryFile, imports, callback);\r\n        });\r\n    });\r\n  } else {\r\n    return instantiateArrayBuffer(binaryFile, imports, callback);\r\n  }\r\n}\r\n\r\n// Create the wasm instance.\r\n// Receives the wasm imports, returns the exports.\r\nfunction createWasm() {\r\n  // prepare imports\r\n  var info = {\r\n    'env': wasmImports,\r\n    'wasi_snapshot_preview1': wasmImports,\r\n  };\r\n  // Load the wasm module and create an instance of using native support in the JS engine.\r\n  // handle a generated wasm instance, receiving its exports and\r\n  // performing other necessary setup\r\n  /** @param {WebAssembly.Module=} module*/\r\n  function receiveInstance(instance, module) {\r\n    var exports = instance.exports;\r\n\r\n    exports = Asyncify.instrumentWasmExports(exports);\r\n\r\n    Module['asm'] = exports;\r\n\r\n    wasmMemory = Module['asm']['memory'];\r\n    updateMemoryViews();\r\n\r\n    wasmTable = Module['asm']['__indirect_function_table'];\r\n\r\n    addOnInit(Module['asm']['__wasm_call_ctors']);\r\n\r\n    removeRunDependency('wasm-instantiate');\r\n\r\n    return exports;\r\n  }\r\n  // wait for the pthread pool (if any)\r\n  addRunDependency('wasm-instantiate');\r\n\r\n  // Prefer streaming instantiation if available.\r\n  function receiveInstantiationResult(result) {\r\n    // 'result' is a ResultObject object which has both the module and instance.\r\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\r\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\r\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\r\n    receiveInstance(result['instance']);\r\n  }\r\n\r\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\r\n  // to manually instantiate the Wasm module themselves. This allows pages to\r\n  // run the instantiation parallel to any other async startup actions they are\r\n  // performing.\r\n  // Also pthreads and wasm workers initialize the wasm instance through this\r\n  // path.\r\n  if (Module['instantiateWasm']) {\r\n\r\n    try {\r\n      return Module['instantiateWasm'](info, receiveInstance);\r\n    } catch(e) {\r\n      err('Module.instantiateWasm callback failed with error: ' + e);\r\n        // If instantiation fails, reject the module ready promise.\r\n        readyPromiseReject(e);\r\n    }\r\n  }\r\n\r\n  // If instantiation fails, reject the module ready promise.\r\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\r\n  return {}; // no exports yet; we'll fill them in later\r\n}\r\n\r\n// Globals used by JS i64 conversions (see makeSetValue)\r\nvar tempDouble;\r\nvar tempI64;\r\n\r\n// include: runtime_debug.js\r\n// end include: runtime_debug.js\r\n// === Body ===\r\n\r\nvar ASM_CONSTS = {\r\n  614308: () => { if (Module.edgePostInit) { Module.edgePostInit(); } },  \r\n 614364: ($0, $1) => { const args = []; for (let i = 0; i < $0; i++) { args.push(UTF8ToString(HEAP32[($1 >> 2) + i])); } console.log(`Edge command line: ${args}`); const homeIndex = args.indexOf(\"-home\"); if (homeIndex === -1 || homeIndex >= args.length || args[homeIndex + 1].startsWith(\"-\")) { throw \"No home command line option specified\" } const homeDir = args[homeIndex + 1]; if (!FS.analyzePath(homeDir).exists) { FS.mkdirTree(homeDir); } FS.mount(IDBFS, {}, homeDir); FS.syncfs(true, function (err) { if (err) { console.error(`Error mounting home dir ${err}`); return; } Module._I_WebMain($0, $1); }); },  \r\n 614954: () => { if (Module.onFullscreen) { Module.onFullscreen(); } },  \r\n 615010: ($0) => { if (Module.edgePreSyncFS) { Module.edgePreSyncFS(); } FS.syncfs($0, function (err) { if (Module.edgePostSyncFS) { Module.edgePostSyncFS(); } }); },  \r\n 615159: () => { if (typeof(AudioContext) !== 'undefined') { return true; } else if (typeof(webkitAudioContext) !== 'undefined') { return true; } return false; },  \r\n 615306: () => { if ((typeof(navigator.mediaDevices) !== 'undefined') && (typeof(navigator.mediaDevices.getUserMedia) !== 'undefined')) { return true; } else if (typeof(navigator.webkitGetUserMedia) !== 'undefined') { return true; } return false; },  \r\n 615540: ($0) => { if(typeof(Module['SDL2']) === 'undefined') { Module['SDL2'] = {}; } var SDL2 = Module['SDL2']; if (!$0) { SDL2.audio = {}; } else { SDL2.capture = {}; } if (!SDL2.audioContext) { if (typeof(AudioContext) !== 'undefined') { SDL2.audioContext = new AudioContext(); } else if (typeof(webkitAudioContext) !== 'undefined') { SDL2.audioContext = new webkitAudioContext(); } if (SDL2.audioContext) { autoResumeAudioContext(SDL2.audioContext); } } return SDL2.audioContext === undefined ? -1 : 0; },  \r\n 616033: () => { var SDL2 = Module['SDL2']; return SDL2.audioContext.sampleRate; },  \r\n 616101: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; var have_microphone = function(stream) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); SDL2.capture.silenceTimer = undefined; } SDL2.capture.mediaStreamNode = SDL2.audioContext.createMediaStreamSource(stream); SDL2.capture.scriptProcessorNode = SDL2.audioContext.createScriptProcessor($1, $0, 1); SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) { if ((SDL2 === undefined) || (SDL2.capture === undefined)) { return; } audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0); SDL2.capture.currentCaptureBuffer = audioProcessingEvent.inputBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode); SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination); SDL2.capture.stream = stream; }; var no_microphone = function(error) { }; SDL2.capture.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { SDL2.capture.currentCaptureBuffer = SDL2.capture.silenceBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.silenceTimer = setTimeout(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); if ((navigator.mediaDevices !== undefined) && (navigator.mediaDevices.getUserMedia !== undefined)) { navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(have_microphone).catch(no_microphone); } else if (navigator.webkitGetUserMedia !== undefined) { navigator.webkitGetUserMedia({ audio: true, video: false }, have_microphone, no_microphone); } },  \r\n 617753: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; SDL2.audio.scriptProcessorNode = SDL2.audioContext['createScriptProcessor']($1, 0, $0); SDL2.audio.scriptProcessorNode['onaudioprocess'] = function (e) { if ((SDL2 === undefined) || (SDL2.audio === undefined)) { return; } SDL2.audio.currentOutputBuffer = e['outputBuffer']; dynCall('vi', $2, [$3]); }; SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']); },  \r\n 618163: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.capture.currentCaptureBuffer.numberOfChannels; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.capture.currentCaptureBuffer.getChannelData(c); if (channelData.length != $1) { throw 'Web Audio capture buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } if (numChannels == 1) { for (var j = 0; j < $1; ++j) { setValue($0 + (j * 4), channelData[j], 'float'); } } else { for (var j = 0; j < $1; ++j) { setValue($0 + (((j * numChannels) + c) * 4), channelData[j], 'float'); } } } },  \r\n 618768: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.audio.currentOutputBuffer['numberOfChannels']; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.audio.currentOutputBuffer['getChannelData'](c); if (channelData.length != $1) { throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } for (var j = 0; j < $1; ++j) { channelData[j] = HEAPF32[$0 + ((j*numChannels + c) << 2) >> 2]; } } },  \r\n 619248: ($0) => { var SDL2 = Module['SDL2']; if ($0) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); } if (SDL2.capture.stream !== undefined) { var tracks = SDL2.capture.stream.getAudioTracks(); for (var i = 0; i < tracks.length; i++) { SDL2.capture.stream.removeTrack(tracks[i]); } SDL2.capture.stream = undefined; } if (SDL2.capture.scriptProcessorNode !== undefined) { SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) {}; SDL2.capture.scriptProcessorNode.disconnect(); SDL2.capture.scriptProcessorNode = undefined; } if (SDL2.capture.mediaStreamNode !== undefined) { SDL2.capture.mediaStreamNode.disconnect(); SDL2.capture.mediaStreamNode = undefined; } if (SDL2.capture.silenceBuffer !== undefined) { SDL2.capture.silenceBuffer = undefined } SDL2.capture = undefined; } else { if (SDL2.audio.scriptProcessorNode != undefined) { SDL2.audio.scriptProcessorNode.disconnect(); SDL2.audio.scriptProcessorNode = undefined; } SDL2.audio = undefined; } if ((SDL2.audioContext !== undefined) && (SDL2.audio === undefined) && (SDL2.capture === undefined)) { SDL2.audioContext.close(); SDL2.audioContext = undefined; } },  \r\n 620420: ($0, $1, $2) => { var w = $0; var h = $1; var pixels = $2; if (!Module['SDL2']) Module['SDL2'] = {}; var SDL2 = Module['SDL2']; if (SDL2.ctxCanvas !== Module['canvas']) { SDL2.ctx = Module['createContext'](Module['canvas'], false, true); SDL2.ctxCanvas = Module['canvas']; } if (SDL2.w !== w || SDL2.h !== h || SDL2.imageCtx !== SDL2.ctx) { SDL2.image = SDL2.ctx.createImageData(w, h); SDL2.w = w; SDL2.h = h; SDL2.imageCtx = SDL2.ctx; } var data = SDL2.image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = 0xff; src++; dst += 4; } } else { if (SDL2.data32Data !== data) { SDL2.data32 = new Int32Array(data.buffer); SDL2.data8 = new Uint8Array(data.buffer); SDL2.data32Data = data; } var data32 = SDL2.data32; num = data32.length; data32.set(HEAP32.subarray(src, src + num)); var data8 = SDL2.data8; var i = 3; var j = i + 4*num; if (num % 8 == 0) { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; } } else { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; } } } SDL2.ctx.putImageData(SDL2.image, 0, 0); },  \r\n 621889: ($0, $1, $2, $3, $4) => { var w = $0; var h = $1; var hot_x = $2; var hot_y = $3; var pixels = $4; var canvas = document.createElement(\"canvas\"); canvas.width = w; canvas.height = h; var ctx = canvas.getContext(\"2d\"); var image = ctx.createImageData(w, h); var data = image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = (val >> 24) & 0xff; src++; dst += 4; } } else { var data32 = new Int32Array(data.buffer); num = data32.length; data32.set(HEAP32.subarray(src, src + num)); } ctx.putImageData(image, 0, 0); var url = hot_x === 0 && hot_y === 0 ? \"url(\" + canvas.toDataURL() + \"), auto\" : \"url(\" + canvas.toDataURL() + \") \" + hot_x + \" \" + hot_y + \", auto\"; var urlBuf = _malloc(url.length + 1); stringToUTF8(url, urlBuf, url.length + 1); return urlBuf; },  \r\n 622878: ($0) => { if (Module['canvas']) { Module['canvas'].style['cursor'] = UTF8ToString($0); } },  \r\n 622961: () => { if (Module['canvas']) { Module['canvas'].style['cursor'] = 'none'; } },  \r\n 623030: () => { return window.innerWidth; },  \r\n 623060: () => { return window.innerHeight; },  \r\n 623091: ($0, $1) => { alert(UTF8ToString($0) + \"\\n\\n\" + UTF8ToString($1)); }\r\n};\r\n\r\n\r\n\r\n// end include: preamble.js\r\n\r\n  /** @constructor */\r\n  function ExitStatus(status) {\r\n      this.name = 'ExitStatus';\r\n      this.message = 'Program terminated with exit(' + status + ')';\r\n      this.status = status;\r\n    }\r\n\r\n  function listenOnce(object, event, func) {\r\n      object.addEventListener(event, func, { 'once': true });\r\n    }\r\n  /** @param {Object=} elements */\r\n  function autoResumeAudioContext(ctx, elements) {\r\n      if (!elements) {\r\n        elements = [document, document.getElementById('canvas')];\r\n      }\r\n      ['keydown', 'mousedown', 'touchstart'].forEach((event) => {\r\n        elements.forEach((element) => {\r\n          if (element) {\r\n            listenOnce(element, event, () => {\r\n              if (ctx.state === 'suspended') ctx.resume();\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n  function callRuntimeCallbacks(callbacks) {\r\n      while (callbacks.length > 0) {\r\n        // Pass the module as the first argument.\r\n        callbacks.shift()(Module);\r\n      }\r\n    }\r\n\r\n  function dynCallLegacy(sig, ptr, args) {\r\n      var f = Module['dynCall_' + sig];\r\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\r\n    }\r\n  \r\n  var wasmTableMirror = [];\r\n  \r\n  function getWasmTableEntry(funcPtr) {\r\n      var func = wasmTableMirror[funcPtr];\r\n      if (!func) {\r\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\r\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\r\n      }\r\n      return func;\r\n    }\r\n  /** @param {Object=} args */\r\n  function dynCall(sig, ptr, args) {\r\n      return dynCallLegacy(sig, ptr, args);\r\n    }\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {string} type\r\n     */\r\n  function getValue(ptr, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': return HEAP8[((ptr)>>0)];\r\n      case 'i8': return HEAP8[((ptr)>>0)];\r\n      case 'i16': return HEAP16[((ptr)>>1)];\r\n      case 'i32': return HEAP32[((ptr)>>2)];\r\n      case 'i64': return HEAP32[((ptr)>>2)];\r\n      case 'float': return HEAPF32[((ptr)>>2)];\r\n      case 'double': return HEAPF64[((ptr)>>3)];\r\n      case '*': return HEAPU32[((ptr)>>2)];\r\n      default: abort('invalid type for getValue: ' + type);\r\n    }\r\n  }\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {number} value\r\n     * @param {string} type\r\n     */\r\n  function setValue(ptr, value, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\r\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\r\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\r\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\r\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((ptr)>>2)] = tempI64[0],HEAP32[(((ptr)+(4))>>2)] = tempI64[1]); break;\r\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\r\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\r\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\r\n      default: abort('invalid type for setValue: ' + type);\r\n    }\r\n  }\r\n\r\n  /** @constructor */\r\n  function ExceptionInfo(excPtr) {\r\n      this.excPtr = excPtr;\r\n      this.ptr = excPtr - 24;\r\n  \r\n      this.set_type = function(type) {\r\n        HEAPU32[(((this.ptr)+(4))>>2)] = type;\r\n      };\r\n  \r\n      this.get_type = function() {\r\n        return HEAPU32[(((this.ptr)+(4))>>2)];\r\n      };\r\n  \r\n      this.set_destructor = function(destructor) {\r\n        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;\r\n      };\r\n  \r\n      this.get_destructor = function() {\r\n        return HEAPU32[(((this.ptr)+(8))>>2)];\r\n      };\r\n  \r\n      this.set_caught = function (caught) {\r\n        caught = caught ? 1 : 0;\r\n        HEAP8[(((this.ptr)+(12))>>0)] = caught;\r\n      };\r\n  \r\n      this.get_caught = function () {\r\n        return HEAP8[(((this.ptr)+(12))>>0)] != 0;\r\n      };\r\n  \r\n      this.set_rethrown = function (rethrown) {\r\n        rethrown = rethrown ? 1 : 0;\r\n        HEAP8[(((this.ptr)+(13))>>0)] = rethrown;\r\n      };\r\n  \r\n      this.get_rethrown = function () {\r\n        return HEAP8[(((this.ptr)+(13))>>0)] != 0;\r\n      };\r\n  \r\n      // Initialize native structure fields. Should be called once after allocated.\r\n      this.init = function(type, destructor) {\r\n        this.set_adjusted_ptr(0);\r\n        this.set_type(type);\r\n        this.set_destructor(destructor);\r\n      }\r\n  \r\n      this.set_adjusted_ptr = function(adjustedPtr) {\r\n        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;\r\n      };\r\n  \r\n      this.get_adjusted_ptr = function() {\r\n        return HEAPU32[(((this.ptr)+(16))>>2)];\r\n      };\r\n  \r\n      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\r\n      // when the pointer is casted to some of the exception object base classes (e.g. when virtual\r\n      // inheritance is used). When a pointer is thrown this method should return the thrown pointer\r\n      // itself.\r\n      this.get_exception_ptr = function() {\r\n        // Work around a fastcomp bug, this code is still included for some reason in a build without\r\n        // exceptions support.\r\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\r\n        if (isPointer) {\r\n          return HEAPU32[((this.excPtr)>>2)];\r\n        }\r\n        var adjusted = this.get_adjusted_ptr();\r\n        if (adjusted !== 0) return adjusted;\r\n        return this.excPtr;\r\n      };\r\n    }\r\n  \r\n  var exceptionLast = 0;\r\n  \r\n  var uncaughtExceptionCount = 0;\r\n  function ___cxa_throw(ptr, type, destructor) {\r\n      var info = new ExceptionInfo(ptr);\r\n      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\r\n      info.init(type, destructor);\r\n      exceptionLast = ptr;\r\n      uncaughtExceptionCount++;\r\n      throw exceptionLast;\r\n    }\r\n\r\n  var PATH = {isAbs:(path) => path.charAt(0) === '/',splitPath:(filename) => {\r\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n        return splitPathRe.exec(filename).slice(1);\r\n      },normalizeArray:(parts, allowAboveRoot) => {\r\n        // if the path tries to go above the root, `up` ends up > 0\r\n        var up = 0;\r\n        for (var i = parts.length - 1; i >= 0; i--) {\r\n          var last = parts[i];\r\n          if (last === '.') {\r\n            parts.splice(i, 1);\r\n          } else if (last === '..') {\r\n            parts.splice(i, 1);\r\n            up++;\r\n          } else if (up) {\r\n            parts.splice(i, 1);\r\n            up--;\r\n          }\r\n        }\r\n        // if the path is allowed to go above the root, restore leading ..s\r\n        if (allowAboveRoot) {\r\n          for (; up; up--) {\r\n            parts.unshift('..');\r\n          }\r\n        }\r\n        return parts;\r\n      },normalize:(path) => {\r\n        var isAbsolute = PATH.isAbs(path),\r\n            trailingSlash = path.substr(-1) === '/';\r\n        // Normalize the path\r\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\r\n        if (!path && !isAbsolute) {\r\n          path = '.';\r\n        }\r\n        if (path && trailingSlash) {\r\n          path += '/';\r\n        }\r\n        return (isAbsolute ? '/' : '') + path;\r\n      },dirname:(path) => {\r\n        var result = PATH.splitPath(path),\r\n            root = result[0],\r\n            dir = result[1];\r\n        if (!root && !dir) {\r\n          // No dirname whatsoever\r\n          return '.';\r\n        }\r\n        if (dir) {\r\n          // It has a dirname, strip trailing slash\r\n          dir = dir.substr(0, dir.length - 1);\r\n        }\r\n        return root + dir;\r\n      },basename:(path) => {\r\n        // EMSCRIPTEN return '/'' for '/', not an empty string\r\n        if (path === '/') return '/';\r\n        path = PATH.normalize(path);\r\n        path = path.replace(/\\/$/, \"\");\r\n        var lastSlash = path.lastIndexOf('/');\r\n        if (lastSlash === -1) return path;\r\n        return path.substr(lastSlash+1);\r\n      },join:function() {\r\n        var paths = Array.prototype.slice.call(arguments);\r\n        return PATH.normalize(paths.join('/'));\r\n      },join2:(l, r) => {\r\n        return PATH.normalize(l + '/' + r);\r\n      }};\r\n  \r\n  function initRandomFill() {\r\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\r\n        // for modern web browsers\r\n        return (view) => crypto.getRandomValues(view);\r\n      } else\r\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\r\n      abort(\"initRandomDevice\");\r\n    }\r\n  function randomFill(view) {\r\n      // Lazily init on the first invocation.\r\n      return (randomFill = initRandomFill())(view);\r\n    }\r\n  \r\n  \r\n  \r\n  var PATH_FS = {resolve:function() {\r\n        var resolvedPath = '',\r\n          resolvedAbsolute = false;\r\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\r\n          // Skip empty and invalid entries\r\n          if (typeof path != 'string') {\r\n            throw new TypeError('Arguments to path.resolve must be strings');\r\n          } else if (!path) {\r\n            return ''; // an invalid portion invalidates the whole thing\r\n          }\r\n          resolvedPath = path + '/' + resolvedPath;\r\n          resolvedAbsolute = PATH.isAbs(path);\r\n        }\r\n        // At this point the path should be resolved to a full absolute path, but\r\n        // handle relative paths to be safe (might happen when process.cwd() fails)\r\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\r\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n      },relative:(from, to) => {\r\n        from = PATH_FS.resolve(from).substr(1);\r\n        to = PATH_FS.resolve(to).substr(1);\r\n        function trim(arr) {\r\n          var start = 0;\r\n          for (; start < arr.length; start++) {\r\n            if (arr[start] !== '') break;\r\n          }\r\n          var end = arr.length - 1;\r\n          for (; end >= 0; end--) {\r\n            if (arr[end] !== '') break;\r\n          }\r\n          if (start > end) return [];\r\n          return arr.slice(start, end - start + 1);\r\n        }\r\n        var fromParts = trim(from.split('/'));\r\n        var toParts = trim(to.split('/'));\r\n        var length = Math.min(fromParts.length, toParts.length);\r\n        var samePartsLength = length;\r\n        for (var i = 0; i < length; i++) {\r\n          if (fromParts[i] !== toParts[i]) {\r\n            samePartsLength = i;\r\n            break;\r\n          }\r\n        }\r\n        var outputParts = [];\r\n        for (var i = samePartsLength; i < fromParts.length; i++) {\r\n          outputParts.push('..');\r\n        }\r\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n        return outputParts.join('/');\r\n      }};\r\n  \r\n  \r\n  function lengthBytesUTF8(str) {\r\n      var len = 0;\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        var c = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (c <= 0x7F) {\r\n          len++;\r\n        } else if (c <= 0x7FF) {\r\n          len += 2;\r\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\r\n          len += 4; ++i;\r\n        } else {\r\n          len += 3;\r\n        }\r\n      }\r\n      return len;\r\n    }\r\n  \r\n  function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\r\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\r\n      // undefined and false each don't write out any bytes.\r\n      if (!(maxBytesToWrite > 0))\r\n        return 0;\r\n  \r\n      var startIdx = outIdx;\r\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // and https://www.ietf.org/rfc/rfc2279.txt\r\n        // and https://tools.ietf.org/html/rfc3629\r\n        var u = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (u >= 0xD800 && u <= 0xDFFF) {\r\n          var u1 = str.charCodeAt(++i);\r\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\r\n        }\r\n        if (u <= 0x7F) {\r\n          if (outIdx >= endIdx) break;\r\n          heap[outIdx++] = u;\r\n        } else if (u <= 0x7FF) {\r\n          if (outIdx + 1 >= endIdx) break;\r\n          heap[outIdx++] = 0xC0 | (u >> 6);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else if (u <= 0xFFFF) {\r\n          if (outIdx + 2 >= endIdx) break;\r\n          heap[outIdx++] = 0xE0 | (u >> 12);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else {\r\n          if (outIdx + 3 >= endIdx) break;\r\n          heap[outIdx++] = 0xF0 | (u >> 18);\r\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        }\r\n      }\r\n      // Null-terminate the pointer to the buffer.\r\n      heap[outIdx] = 0;\r\n      return outIdx - startIdx;\r\n    }\r\n  /** @type {function(string, boolean=, number=)} */\r\n  function intArrayFromString(stringy, dontAddNull, length) {\r\n    var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\r\n    var u8array = new Array(len);\r\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n    if (dontAddNull) u8array.length = numBytesWritten;\r\n    return u8array;\r\n  }\r\n  var TTY = {ttys:[],init:function () {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\r\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\r\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\r\n        //   // with text files until FS.init can be refactored.\r\n        //   process.stdin.setEncoding('utf8');\r\n        // }\r\n      },shutdown:function() {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\r\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\r\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\r\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\r\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\r\n        //   process.stdin.pause();\r\n        // }\r\n      },register:function(dev, ops) {\r\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\r\n        FS.registerDevice(dev, TTY.stream_ops);\r\n      },stream_ops:{open:function(stream) {\r\n          var tty = TTY.ttys[stream.node.rdev];\r\n          if (!tty) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          stream.tty = tty;\r\n          stream.seekable = false;\r\n        },close:function(stream) {\r\n          // flush any pending line data\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },fsync:function(stream) {\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },read:function(stream, buffer, offset, length, pos /* ignored */) {\r\n          if (!stream.tty || !stream.tty.ops.get_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          var bytesRead = 0;\r\n          for (var i = 0; i < length; i++) {\r\n            var result;\r\n            try {\r\n              result = stream.tty.ops.get_char(stream.tty);\r\n            } catch (e) {\r\n              throw new FS.ErrnoError(29);\r\n            }\r\n            if (result === undefined && bytesRead === 0) {\r\n              throw new FS.ErrnoError(6);\r\n            }\r\n            if (result === null || result === undefined) break;\r\n            bytesRead++;\r\n            buffer[offset+i] = result;\r\n          }\r\n          if (bytesRead) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return bytesRead;\r\n        },write:function(stream, buffer, offset, length, pos) {\r\n          if (!stream.tty || !stream.tty.ops.put_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          try {\r\n            for (var i = 0; i < length; i++) {\r\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\r\n            }\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n          if (length) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return i;\r\n        }},default_tty_ops:{get_char:function(tty) {\r\n          if (!tty.input.length) {\r\n            var result = null;\r\n            if (typeof window != 'undefined' &&\r\n              typeof window.prompt == 'function') {\r\n              // Browser.\r\n              result = window.prompt('Input: ');  // returns null on cancel\r\n              if (result !== null) {\r\n                result += '\\n';\r\n              }\r\n            } else if (typeof readline == 'function') {\r\n              // Command line.\r\n              result = readline();\r\n              if (result !== null) {\r\n                result += '\\n';\r\n              }\r\n            }\r\n            if (!result) {\r\n              return null;\r\n            }\r\n            tty.input = intArrayFromString(result, true);\r\n          }\r\n          return tty.input.shift();\r\n        },put_char:function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\r\n          }\r\n        },fsync:function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        }},default_tty1_ops:{put_char:function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val);\r\n          }\r\n        },fsync:function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        }}};\r\n  \r\n  \r\n  function zeroMemory(address, size) {\r\n      HEAPU8.fill(0, address, address + size);\r\n      return address;\r\n    }\r\n  \r\n  function alignMemory(size, alignment) {\r\n      return Math.ceil(size / alignment) * alignment;\r\n    }\r\n  function mmapAlloc(size) {\r\n      abort();\r\n    }\r\n  var MEMFS = {ops_table:null,mount:function(mount) {\r\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\r\n      },createNode:function(parent, name, mode, dev) {\r\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n          // no supported\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (!MEMFS.ops_table) {\r\n          MEMFS.ops_table = {\r\n            dir: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr,\r\n                lookup: MEMFS.node_ops.lookup,\r\n                mknod: MEMFS.node_ops.mknod,\r\n                rename: MEMFS.node_ops.rename,\r\n                unlink: MEMFS.node_ops.unlink,\r\n                rmdir: MEMFS.node_ops.rmdir,\r\n                readdir: MEMFS.node_ops.readdir,\r\n                symlink: MEMFS.node_ops.symlink\r\n              },\r\n              stream: {\r\n                llseek: MEMFS.stream_ops.llseek\r\n              }\r\n            },\r\n            file: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr\r\n              },\r\n              stream: {\r\n                llseek: MEMFS.stream_ops.llseek,\r\n                read: MEMFS.stream_ops.read,\r\n                write: MEMFS.stream_ops.write,\r\n                allocate: MEMFS.stream_ops.allocate,\r\n                mmap: MEMFS.stream_ops.mmap,\r\n                msync: MEMFS.stream_ops.msync\r\n              }\r\n            },\r\n            link: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr,\r\n                readlink: MEMFS.node_ops.readlink\r\n              },\r\n              stream: {}\r\n            },\r\n            chrdev: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr\r\n              },\r\n              stream: FS.chrdev_stream_ops\r\n            }\r\n          };\r\n        }\r\n        var node = FS.createNode(parent, name, mode, dev);\r\n        if (FS.isDir(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.dir.node;\r\n          node.stream_ops = MEMFS.ops_table.dir.stream;\r\n          node.contents = {};\r\n        } else if (FS.isFile(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.file.node;\r\n          node.stream_ops = MEMFS.ops_table.file.stream;\r\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\r\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\r\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\r\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\r\n          node.contents = null; \r\n        } else if (FS.isLink(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.link.node;\r\n          node.stream_ops = MEMFS.ops_table.link.stream;\r\n        } else if (FS.isChrdev(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.chrdev.node;\r\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\r\n        }\r\n        node.timestamp = Date.now();\r\n        // add the new node to the parent\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n          parent.timestamp = node.timestamp;\r\n        }\r\n        return node;\r\n      },getFileDataAsTypedArray:function(node) {\r\n        if (!node.contents) return new Uint8Array(0);\r\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\r\n        return new Uint8Array(node.contents);\r\n      },expandFileStorage:function(node, newCapacity) {\r\n        var prevCapacity = node.contents ? node.contents.length : 0;\r\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\r\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\r\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\r\n        // avoid overshooting the allocation cap by a very large margin.\r\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\r\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\r\n        var oldContents = node.contents;\r\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\r\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\r\n      },resizeFileStorage:function(node, newSize) {\r\n        if (node.usedBytes == newSize) return;\r\n        if (newSize == 0) {\r\n          node.contents = null; // Fully decommit when requesting a resize to zero.\r\n          node.usedBytes = 0;\r\n        } else {\r\n          var oldContents = node.contents;\r\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\r\n          if (oldContents) {\r\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\r\n          }\r\n          node.usedBytes = newSize;\r\n        }\r\n      },node_ops:{getattr:function(node) {\r\n          var attr = {};\r\n          // device numbers reuse inode numbers.\r\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n          attr.ino = node.id;\r\n          attr.mode = node.mode;\r\n          attr.nlink = 1;\r\n          attr.uid = 0;\r\n          attr.gid = 0;\r\n          attr.rdev = node.rdev;\r\n          if (FS.isDir(node.mode)) {\r\n            attr.size = 4096;\r\n          } else if (FS.isFile(node.mode)) {\r\n            attr.size = node.usedBytes;\r\n          } else if (FS.isLink(node.mode)) {\r\n            attr.size = node.link.length;\r\n          } else {\r\n            attr.size = 0;\r\n          }\r\n          attr.atime = new Date(node.timestamp);\r\n          attr.mtime = new Date(node.timestamp);\r\n          attr.ctime = new Date(node.timestamp);\r\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\r\n          //       but this is not required by the standard.\r\n          attr.blksize = 4096;\r\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n          return attr;\r\n        },setattr:function(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n          if (attr.size !== undefined) {\r\n            MEMFS.resizeFileStorage(node, attr.size);\r\n          }\r\n        },lookup:function(parent, name) {\r\n          throw FS.genericErrors[44];\r\n        },mknod:function(parent, name, mode, dev) {\r\n          return MEMFS.createNode(parent, name, mode, dev);\r\n        },rename:function(old_node, new_dir, new_name) {\r\n          // if we're overwriting a directory at new_name, make sure it's empty.\r\n          if (FS.isDir(old_node.mode)) {\r\n            var new_node;\r\n            try {\r\n              new_node = FS.lookupNode(new_dir, new_name);\r\n            } catch (e) {\r\n            }\r\n            if (new_node) {\r\n              for (var i in new_node.contents) {\r\n                throw new FS.ErrnoError(55);\r\n              }\r\n            }\r\n          }\r\n          // do the internal rewiring\r\n          delete old_node.parent.contents[old_node.name];\r\n          old_node.parent.timestamp = Date.now()\r\n          old_node.name = new_name;\r\n          new_dir.contents[new_name] = old_node;\r\n          new_dir.timestamp = old_node.parent.timestamp;\r\n          old_node.parent = new_dir;\r\n        },unlink:function(parent, name) {\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },rmdir:function(parent, name) {\r\n          var node = FS.lookupNode(parent, name);\r\n          for (var i in node.contents) {\r\n            throw new FS.ErrnoError(55);\r\n          }\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },readdir:function(node) {\r\n          var entries = ['.', '..'];\r\n          for (var key in node.contents) {\r\n            if (!node.contents.hasOwnProperty(key)) {\r\n              continue;\r\n            }\r\n            entries.push(key);\r\n          }\r\n          return entries;\r\n        },symlink:function(parent, newname, oldpath) {\r\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\r\n          node.link = oldpath;\r\n          return node;\r\n        },readlink:function(node) {\r\n          if (!FS.isLink(node.mode)) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return node.link;\r\n        }},stream_ops:{read:function(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= stream.node.usedBytes) return 0;\r\n          var size = Math.min(stream.node.usedBytes - position, length);\r\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\r\n            buffer.set(contents.subarray(position, position + size), offset);\r\n          } else {\r\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\r\n          }\r\n          return size;\r\n        },write:function(stream, buffer, offset, length, position, canOwn) {\r\n          // If the buffer is located in main memory (HEAP), and if\r\n          // memory can grow, we can't hold on to references of the\r\n          // memory buffer, as they may get invalidated. That means we\r\n          // need to do copy its contents.\r\n          if (buffer.buffer === HEAP8.buffer) {\r\n            canOwn = false;\r\n          }\r\n  \r\n          if (!length) return 0;\r\n          var node = stream.node;\r\n          node.timestamp = Date.now();\r\n  \r\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\r\n            if (canOwn) {\r\n              node.contents = buffer.subarray(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\r\n              node.contents = buffer.slice(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\r\n              node.contents.set(buffer.subarray(offset, offset + length), position);\r\n              return length;\r\n            }\r\n          }\r\n  \r\n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\r\n          MEMFS.expandFileStorage(node, position+length);\r\n          if (node.contents.subarray && buffer.subarray) {\r\n            // Use typed array write which is available.\r\n            node.contents.set(buffer.subarray(offset, offset + length), position);\r\n          } else {\r\n            for (var i = 0; i < length; i++) {\r\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\r\n            }\r\n          }\r\n          node.usedBytes = Math.max(node.usedBytes, position + length);\r\n          return length;\r\n        },llseek:function(stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.usedBytes;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        },allocate:function(stream, offset, length) {\r\n          MEMFS.expandFileStorage(stream.node, offset + length);\r\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\r\n        },mmap:function(stream, length, position, prot, flags) {\r\n          if (!FS.isFile(stream.node.mode)) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          var ptr;\r\n          var allocated;\r\n          var contents = stream.node.contents;\r\n          // Only make a new copy when MAP_PRIVATE is specified.\r\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\r\n            // We can't emulate MAP_SHARED when the file is not backed by the\r\n            // buffer we're mapping to (e.g. the HEAP buffer).\r\n            allocated = false;\r\n            ptr = contents.byteOffset;\r\n          } else {\r\n            // Try to avoid unnecessary slices.\r\n            if (position > 0 || position + length < contents.length) {\r\n              if (contents.subarray) {\r\n                contents = contents.subarray(position, position + length);\r\n              } else {\r\n                contents = Array.prototype.slice.call(contents, position, position + length);\r\n              }\r\n            }\r\n            allocated = true;\r\n            ptr = mmapAlloc(length);\r\n            if (!ptr) {\r\n              throw new FS.ErrnoError(48);\r\n            }\r\n            HEAP8.set(contents, ptr);\r\n          }\r\n          return { ptr: ptr, allocated: allocated };\r\n        },msync:function(stream, buffer, offset, length, mmapFlags) {\r\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n          // should we check if bytesWritten and length are the same?\r\n          return 0;\r\n        }}};\r\n  \r\n  /** @param {boolean=} noRunDep */\r\n  function asyncLoad(url, onload, onerror, noRunDep) {\r\n      var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\r\n      readAsync(url, (arrayBuffer) => {\r\n        assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\r\n        onload(new Uint8Array(arrayBuffer));\r\n        if (dep) removeRunDependency(dep);\r\n      }, (event) => {\r\n        if (onerror) {\r\n          onerror();\r\n        } else {\r\n          throw 'Loading data file \"' + url + '\" failed.';\r\n        }\r\n      });\r\n      if (dep) addRunDependency(dep);\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  var IDBFS = {dbs:{},indexedDB:() => {\r\n        if (typeof indexedDB != 'undefined') return indexedDB;\r\n        var ret = null;\r\n        if (typeof window == 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        assert(ret, 'IDBFS used, but indexedDB not supported');\r\n        return ret;\r\n      },DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:function(mount) {\r\n        // reuse all of the core MEMFS functionality\r\n        return MEMFS.mount.apply(null, arguments);\r\n      },syncfs:(mount, populate, callback) => {\r\n        IDBFS.getLocalSet(mount, (err, local) => {\r\n          if (err) return callback(err);\r\n  \r\n          IDBFS.getRemoteSet(mount, (err, remote) => {\r\n            if (err) return callback(err);\r\n  \r\n            var src = populate ? remote : local;\r\n            var dst = populate ? local : remote;\r\n  \r\n            IDBFS.reconcile(src, dst, callback);\r\n          });\r\n        });\r\n      },quit:() => {\r\n        Object.values(IDBFS.dbs).forEach((value) => value.close());\r\n        IDBFS.dbs = {};\r\n      },getDB:(name, callback) => {\r\n        // check the cache first\r\n        var db = IDBFS.dbs[name];\r\n        if (db) {\r\n          return callback(null, db);\r\n        }\r\n  \r\n        var req;\r\n        try {\r\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n        if (!req) {\r\n          return callback(\"Unable to connect to IndexedDB\");\r\n        }\r\n        req.onupgradeneeded = (e) => {\r\n          var db = /** @type {IDBDatabase} */ (e.target.result);\r\n          var transaction = e.target.transaction;\r\n  \r\n          var fileStore;\r\n  \r\n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\r\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n          } else {\r\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\r\n          }\r\n  \r\n          if (!fileStore.indexNames.contains('timestamp')) {\r\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\r\n          }\r\n        };\r\n        req.onsuccess = () => {\r\n          db = /** @type {IDBDatabase} */ (req.result);\r\n  \r\n          // add to the cache\r\n          IDBFS.dbs[name] = db;\r\n          callback(null, db);\r\n        };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },getLocalSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        function isRealDir(p) {\r\n          return p !== '.' && p !== '..';\r\n        };\r\n        function toAbsolute(root) {\r\n          return (p) => {\r\n            return PATH.join2(root, p);\r\n          }\r\n        };\r\n  \r\n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\r\n  \r\n        while (check.length) {\r\n          var path = check.pop();\r\n          var stat;\r\n  \r\n          try {\r\n            stat = FS.stat(path);\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\r\n          }\r\n  \r\n          entries[path] = { 'timestamp': stat.mtime };\r\n        }\r\n  \r\n        return callback(null, { type: 'local', entries: entries });\r\n      },getRemoteSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        IDBFS.getDB(mount.mountpoint, (err, db) => {\r\n          if (err) return callback(err);\r\n  \r\n          try {\r\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\r\n            transaction.onerror = (e) => {\r\n              callback(this.error);\r\n              e.preventDefault();\r\n            };\r\n  \r\n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n            var index = store.index('timestamp');\r\n  \r\n            index.openKeyCursor().onsuccess = (event) => {\r\n              var cursor = event.target.result;\r\n  \r\n              if (!cursor) {\r\n                return callback(null, { type: 'remote', db: db, entries: entries });\r\n              }\r\n  \r\n              entries[cursor.primaryKey] = { 'timestamp': cursor.key };\r\n  \r\n              cursor.continue();\r\n            };\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n        });\r\n      },loadLocalEntry:(path, callback) => {\r\n        var stat, node;\r\n  \r\n        try {\r\n          var lookup = FS.lookupPath(path);\r\n          node = lookup.node;\r\n          stat = FS.stat(path);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        if (FS.isDir(stat.mode)) {\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode });\r\n        } else if (FS.isFile(stat.mode)) {\r\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\r\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\r\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode, 'contents': node.contents });\r\n        } else {\r\n          return callback(new Error('node type not supported'));\r\n        }\r\n      },storeLocalEntry:(path, entry, callback) => {\r\n        try {\r\n          if (FS.isDir(entry['mode'])) {\r\n            FS.mkdirTree(path, entry['mode']);\r\n          } else if (FS.isFile(entry['mode'])) {\r\n            FS.writeFile(path, entry['contents'], { canOwn: true });\r\n          } else {\r\n            return callback(new Error('node type not supported'));\r\n          }\r\n  \r\n          FS.chmod(path, entry['mode']);\r\n          FS.utime(path, entry['timestamp'], entry['timestamp']);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },removeLocalEntry:(path, callback) => {\r\n        try {\r\n          var stat = FS.stat(path);\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            FS.rmdir(path);\r\n          } else if (FS.isFile(stat.mode)) {\r\n            FS.unlink(path);\r\n          }\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },loadRemoteEntry:(store, path, callback) => {\r\n        var req = store.get(path);\r\n        req.onsuccess = (event) => { callback(null, event.target.result); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },storeRemoteEntry:(store, path, entry, callback) => {\r\n        try {\r\n          var req = store.put(entry, path);\r\n        } catch (e) {\r\n          callback(e);\r\n          return;\r\n        }\r\n        req.onsuccess = () => { callback(null); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },removeRemoteEntry:(store, path, callback) => {\r\n        var req = store.delete(path);\r\n        req.onsuccess = () => { callback(null); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },reconcile:(src, dst, callback) => {\r\n        var total = 0;\r\n  \r\n        var create = [];\r\n        Object.keys(src.entries).forEach(function (key) {\r\n          var e = src.entries[key];\r\n          var e2 = dst.entries[key];\r\n          if (!e2 || e['timestamp'].getTime() != e2['timestamp'].getTime()) {\r\n            create.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        var remove = [];\r\n        Object.keys(dst.entries).forEach(function (key) {\r\n          if (!src.entries[key]) {\r\n            remove.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        if (!total) {\r\n          return callback(null);\r\n        }\r\n  \r\n        var errored = false;\r\n        var db = src.type === 'remote' ? src.db : dst.db;\r\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\r\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n  \r\n        function done(err) {\r\n          if (err && !errored) {\r\n            errored = true;\r\n            return callback(err);\r\n          }\r\n        };\r\n  \r\n        transaction.onerror = (e) => {\r\n          done(this.error);\r\n          e.preventDefault();\r\n        };\r\n  \r\n        transaction.oncomplete = (e) => {\r\n          if (!errored) {\r\n            callback(null);\r\n          }\r\n        };\r\n  \r\n        // sort paths in ascending order so directory entries are created\r\n        // before the files inside them\r\n        create.sort().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.loadRemoteEntry(store, path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeLocalEntry(path, entry, done);\r\n            });\r\n          } else {\r\n            IDBFS.loadLocalEntry(path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeRemoteEntry(store, path, entry, done);\r\n            });\r\n          }\r\n        });\r\n  \r\n        // sort paths in descending order so files are deleted before their\r\n        // parent directories\r\n        remove.sort().reverse().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.removeLocalEntry(path, done);\r\n          } else {\r\n            IDBFS.removeRemoteEntry(store, path, done);\r\n          }\r\n        });\r\n      }};\r\n  \r\n  var LZ4 = {DIR_MODE:16895,FILE_MODE:33279,CHUNK_SIZE:-1,codec:null,init:function() {\r\n        if (LZ4.codec) return;\r\n        LZ4.codec = (function() {\r\n          /*\r\n  MiniLZ4: Minimal LZ4 block decoding and encoding.\r\n  \r\n  based off of node-lz4, https://github.com/pierrec/node-lz4\r\n  \r\n  ====\r\n  Copyright (c) 2012 Pierre Curto\r\n  \r\n  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  of this software and associated documentation files (the \"Software\"), to deal\r\n  in the Software without restriction, including without limitation the rights\r\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n  copies of the Software, and to permit persons to whom the Software is\r\n  furnished to do so, subject to the following conditions:\r\n  \r\n  The above copyright notice and this permission notice shall be included in\r\n  all copies or substantial portions of the Software.\r\n  \r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n  THE SOFTWARE.\r\n  ====\r\n  \r\n  changes have the same license\r\n  */\r\n  \r\n  var MiniLZ4 = (function() {\r\n  \r\n  var exports = {};\r\n  \r\n  /**\r\n   * Decode a block. Assumptions: input contains all sequences of a \r\n   * chunk, output is large enough to receive the decoded data.\r\n   * If the output buffer is too small, an error will be thrown.\r\n   * If the returned value is negative, an error occured at the returned offset.\r\n   *\r\n   * @param {ArrayBufferView} input input data\r\n   * @param {ArrayBufferView} output output data\r\n   * @param {number=} sIdx\r\n   * @param {number=} eIdx\r\n   * @return {number} number of decoded bytes\r\n   * @private\r\n   */\r\n  exports.uncompress = function (input, output, sIdx, eIdx) {\r\n  \tsIdx = sIdx || 0\r\n  \teIdx = eIdx || (input.length - sIdx)\r\n  \t// Process each sequence in the incoming data\r\n  \tfor (var i = sIdx, n = eIdx, j = 0; i < n;) {\r\n  \t\tvar token = input[i++]\r\n  \r\n  \t\t// Literals\r\n  \t\tvar literals_length = (token >> 4)\r\n  \t\tif (literals_length > 0) {\r\n  \t\t\t// length of literals\r\n  \t\t\tvar l = literals_length + 240\r\n  \t\t\twhile (l === 255) {\r\n  \t\t\t\tl = input[i++]\r\n  \t\t\t\tliterals_length += l\r\n  \t\t\t}\r\n  \r\n  \t\t\t// Copy the literals\r\n  \t\t\tvar end = i + literals_length\r\n  \t\t\twhile (i < end) output[j++] = input[i++]\r\n  \r\n  \t\t\t// End of buffer?\r\n  \t\t\tif (i === n) return j\r\n  \t\t}\r\n  \r\n  \t\t// Match copy\r\n  \t\t// 2 bytes offset (little endian)\r\n  \t\tvar offset = input[i++] | (input[i++] << 8)\r\n  \r\n  \t\t// XXX 0 is an invalid offset value\r\n  \t\tif (offset === 0) return j\r\n  \t\tif (offset > j) return -(i-2)\r\n  \r\n  \t\t// length of match copy\r\n  \t\tvar match_length = (token & 0xf)\r\n  \t\tvar l = match_length + 240\r\n  \t\twhile (l === 255) {\r\n  \t\t\tl = input[i++]\r\n  \t\t\tmatch_length += l\r\n  \t\t}\r\n  \r\n  \t\t// Copy the match\r\n  \t\tvar pos = j - offset // position of the match copy in the current output\r\n  \t\tvar end = j + match_length + 4 // minmatch = 4\r\n  \t\twhile (j < end) output[j++] = output[pos++]\r\n  \t}\r\n  \r\n  \treturn j\r\n  }\r\n  \r\n  var\r\n  \tmaxInputSize\t= 0x7E000000\r\n  ,\tminMatch\t\t= 4\r\n  // uint32() optimization\r\n  ,\thashLog\t\t\t= 16\r\n  ,\thashShift\t\t= (minMatch * 8) - hashLog\r\n  ,\thashSize\t\t= 1 << hashLog\r\n  \r\n  ,\tcopyLength\t\t= 8\r\n  ,\tlastLiterals\t= 5\r\n  ,\tmfLimit\t\t\t= copyLength + minMatch\r\n  ,\tskipStrength\t= 6\r\n  \r\n  ,\tmlBits  \t\t= 4\r\n  ,\tmlMask  \t\t= (1 << mlBits) - 1\r\n  ,\trunBits \t\t= 8 - mlBits\r\n  ,\trunMask \t\t= (1 << runBits) - 1\r\n  \r\n  ,\thasher \t\t\t= /* XXX uint32( */ 2654435761 /* ) */\r\n  \r\n  assert(hashShift === 16);\r\n  var hashTable = new Int16Array(1<<16);\r\n  var empty = new Int16Array(hashTable.length);\r\n  \r\n  // CompressBound returns the maximum length of a lz4 block, given it's uncompressed length\r\n  exports.compressBound = function (isize) {\r\n  \treturn isize > maxInputSize\r\n  \t\t? 0\r\n  \t\t: (isize + (isize/255) + 16) | 0\r\n  }\r\n  \r\n  /** @param {number=} sIdx\r\n  \t@param {number=} eIdx */\r\n  exports.compress = function (src, dst, sIdx, eIdx) {\r\n  \thashTable.set(empty);\r\n  \treturn compressBlock(src, dst, 0, sIdx || 0, eIdx || dst.length)\r\n  }\r\n  \r\n  function compressBlock (src, dst, pos, sIdx, eIdx) {\r\n  \t// XXX var Hash = uint32() // Reusable unsigned 32 bits integer\r\n  \tvar dpos = sIdx\r\n  \tvar dlen = eIdx - sIdx\r\n  \tvar anchor = 0\r\n  \r\n  \tif (src.length >= maxInputSize) throw new Error(\"input too large\")\r\n  \r\n  \t// Minimum of input bytes for compression (LZ4 specs)\r\n  \tif (src.length > mfLimit) {\r\n  \t\tvar n = exports.compressBound(src.length)\r\n  \t\tif ( dlen < n ) throw Error(\"output too small: \" + dlen + \" < \" + n)\r\n  \r\n  \t\tvar \r\n  \t\t\tstep  = 1\r\n  \t\t,\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \t\t// Keep last few bytes incompressible (LZ4 specs):\r\n  \t\t// last 5 bytes must be literals\r\n  \t\t,\tsrcLength = src.length - mfLimit\r\n  \r\n  \t\twhile (pos + minMatch < srcLength) {\r\n  \t\t\t// Find a match\r\n  \t\t\t// min match of 4 bytes aka sequence\r\n  \t\t\tvar sequenceLowBits = src[pos+1]<<8 | src[pos]\r\n  \t\t\tvar sequenceHighBits = src[pos+3]<<8 | src[pos+2]\r\n  \t\t\t// compute hash for the current sequence\r\n  \t\t\tvar hash = Math.imul(sequenceLowBits | (sequenceHighBits << 16), hasher) >>> hashShift;\r\n  \t\t\t/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)\r\n  \t\t\t\t\t\t\t.multiply(hasher)\r\n  \t\t\t\t\t\t\t.shiftr(hashShift)\r\n  \t\t\t\t\t\t\t.toNumber() */\r\n  \t\t\t// get the position of the sequence matching the hash\r\n  \t\t\t// NB. since 2 different sequences may have the same hash\r\n  \t\t\t// it is double-checked below\r\n  \t\t\t// do -1 to distinguish between initialized and uninitialized values\r\n  \t\t\tvar ref = hashTable[hash] - 1\r\n  \t\t\t// save position of current sequence in hash table\r\n  \t\t\thashTable[hash] = pos + 1\r\n  \r\n  \t\t\t// first reference or within 64k limit or current sequence !== hashed one: no match\r\n  \t\t\tif ( ref < 0 ||\r\n  \t\t\t\t((pos - ref) >>> 16) > 0 ||\r\n  \t\t\t\t(\r\n  \t\t\t\t\t((src[ref+3]<<8 | src[ref+2]) != sequenceHighBits) ||\r\n  \t\t\t\t\t((src[ref+1]<<8 | src[ref]) != sequenceLowBits )\r\n  \t\t\t\t)\r\n  \t\t\t) {\r\n  \t\t\t\t// increase step if nothing found within limit\r\n  \t\t\t\tstep = findMatchAttempts++ >> skipStrength\r\n  \t\t\t\tpos += step\r\n  \t\t\t\tcontinue\r\n  \t\t\t}\r\n  \r\n  \t\t\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \r\n  \t\t\t// got a match\r\n  \t\t\tvar literals_length = pos - anchor\r\n  \t\t\tvar offset = pos - ref\r\n  \r\n  \t\t\t// minMatch already verified\r\n  \t\t\tpos += minMatch\r\n  \t\t\tref += minMatch\r\n  \r\n  \t\t\t// move to the end of the match (>=minMatch)\r\n  \t\t\tvar match_length = pos\r\n  \t\t\twhile (pos < srcLength && src[pos] == src[ref]) {\r\n  \t\t\t\tpos++\r\n  \t\t\t\tref++\r\n  \t\t\t}\r\n  \r\n  \t\t\t// match length\r\n  \t\t\tmatch_length = pos - match_length\r\n  \r\n  \t\t\t// token\r\n  \t\t\tvar token = match_length < mlMask ? match_length : mlMask\r\n  \r\n  \t\t\t// encode literals length\r\n  \t\t\tif (literals_length >= runMask) {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (runMask << mlBits) + token\r\n  \t\t\t\tfor (var len = literals_length - runMask; len > 254; len -= 255) {\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \t\t\t\tdst[dpos++] = len\r\n  \t\t\t} else {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (literals_length << mlBits) + token\r\n  \t\t\t}\r\n  \r\n  \t\t\t// write literals\r\n  \t\t\tfor (var i = 0; i < literals_length; i++) {\r\n  \t\t\t\tdst[dpos++] = src[anchor+i]\r\n  \t\t\t}\r\n  \r\n  \t\t\t// encode offset\r\n  \t\t\tdst[dpos++] = offset\r\n  \t\t\tdst[dpos++] = (offset >> 8)\r\n  \r\n  \t\t\t// encode match length\r\n  \t\t\tif (match_length >= mlMask) {\r\n  \t\t\t\tmatch_length -= mlMask\r\n  \t\t\t\twhile (match_length >= 255) {\r\n  \t\t\t\t\tmatch_length -= 255\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \r\n  \t\t\t\tdst[dpos++] = match_length\r\n  \t\t\t}\r\n  \r\n  \t\t\tanchor = pos\r\n  \t\t}\r\n  \t}\r\n  \r\n  \t// cannot compress input\r\n  \tif (anchor == 0) return 0\r\n  \r\n  \t// Write last literals\r\n  \t// encode literals length\r\n  \tliterals_length = src.length - anchor\r\n  \tif (literals_length >= runMask) {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (runMask << mlBits)\r\n  \t\tfor (var ln = literals_length - runMask; ln > 254; ln -= 255) {\r\n  \t\t\tdst[dpos++] = 255\r\n  \t\t}\r\n  \t\tdst[dpos++] = ln\r\n  \t} else {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (literals_length << mlBits)\r\n  \t}\r\n  \r\n  \t// write literals\r\n  \tpos = anchor\r\n  \twhile (pos < src.length) {\r\n  \t\tdst[dpos++] = src[pos++]\r\n  \t}\r\n  \r\n  \treturn dpos\r\n  }\r\n  \r\n  exports.CHUNK_SIZE = 2048; // musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea\r\n  \r\n  exports.compressPackage = function(data, verify) {\r\n    if (verify) {\r\n      var temp = new Uint8Array(exports.CHUNK_SIZE);\r\n    }\r\n    // compress the data in chunks\r\n    assert(data instanceof ArrayBuffer);\r\n    data = new Uint8Array(data);\r\n    console.log('compressing package of size ' + data.length);\r\n    var compressedChunks = [];\r\n    var successes = [];\r\n    var offset = 0;\r\n    var total = 0;\r\n    while (offset < data.length) {\r\n      var chunk = data.subarray(offset, offset + exports.CHUNK_SIZE);\r\n      //console.log('compress a chunk ' + [offset, total, data.length]);\r\n      offset += exports.CHUNK_SIZE;\r\n      var bound = exports.compressBound(chunk.length);\r\n      var compressed = new Uint8Array(bound);\r\n      var compressedSize = exports.compress(chunk, compressed);\r\n      if (compressedSize > 0) {\r\n        assert(compressedSize <= bound);\r\n        compressed = compressed.subarray(0, compressedSize);\r\n        compressedChunks.push(compressed);\r\n        total += compressedSize;\r\n        successes.push(1);\r\n        if (verify) {\r\n          var back = exports.uncompress(compressed, temp);\r\n          assert(back === chunk.length, [back, chunk.length]);\r\n          for (var i = 0; i < chunk.length; i++) {\r\n            assert(chunk[i] === temp[i]);\r\n          }\r\n        }\r\n      } else {\r\n        assert(compressedSize === 0);\r\n        // failure to compress :(\r\n        compressedChunks.push(chunk);\r\n        total += chunk.length; // last chunk may not be the full exports.CHUNK_SIZE size\r\n        successes.push(0);\r\n      }\r\n    }\r\n    data = null; // XXX null out pack['data'] too?\r\n    var compressedData = {\r\n      'data': new Uint8Array(total + exports.CHUNK_SIZE*2), // store all the compressed data, plus room for two cached decompressed chunk, in one fast array\r\n      'cachedOffset': total,\r\n      'cachedIndexes': [-1, -1], // cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing\r\n      'cachedChunks': [null, null],\r\n      'offsets': [], // chunk# => start in compressed data\r\n      'sizes': [],\r\n      'successes': successes, // 1 if chunk is compressed\r\n    };\r\n    offset = 0;\r\n    for (var i = 0; i < compressedChunks.length; i++) {\r\n      compressedData['data'].set(compressedChunks[i], offset);\r\n      compressedData['offsets'][i] = offset;\r\n      compressedData['sizes'][i] = compressedChunks[i].length\r\n      offset += compressedChunks[i].length;\r\n    }\r\n    console.log('compressed package into ' + [compressedData['data'].length]);\r\n    assert(offset === total);\r\n    return compressedData;\r\n  };\r\n  \r\n  assert(exports.CHUNK_SIZE < (1 << 15)); // we use 16-bit ints as the type of the hash table, chunk size must be smaller\r\n  \r\n  return exports;\r\n  \r\n  })();\r\n  \r\n  ;\r\n          return MiniLZ4;\r\n        })();\r\n        LZ4.CHUNK_SIZE = LZ4.codec.CHUNK_SIZE;\r\n      },loadPackage:function (pack, preloadPlugin) {\r\n        LZ4.init();\r\n        var compressedData = pack['compressedData'];\r\n        if (!compressedData) compressedData = LZ4.codec.compressPackage(pack['data']);\r\n        assert(compressedData['cachedIndexes'].length === compressedData['cachedChunks'].length);\r\n        for (var i = 0; i < compressedData['cachedIndexes'].length; i++) {\r\n          compressedData['cachedIndexes'][i] = -1;\r\n          compressedData['cachedChunks'][i] = compressedData['data'].subarray(compressedData['cachedOffset'] + i*LZ4.CHUNK_SIZE,\r\n                                                                        compressedData['cachedOffset'] + (i+1)*LZ4.CHUNK_SIZE);\r\n          assert(compressedData['cachedChunks'][i].length === LZ4.CHUNK_SIZE);\r\n        }\r\n        pack['metadata'].files.forEach(function(file) {\r\n          var dir = PATH.dirname(file.filename);\r\n          var name = PATH.basename(file.filename);\r\n          FS.createPath('', dir, true, true);\r\n          var parent = FS.analyzePath(dir).object;\r\n          LZ4.createNode(parent, name, LZ4.FILE_MODE, 0, {\r\n            compressedData: compressedData,\r\n            start: file.start,\r\n            end: file.end,\r\n          });\r\n        });\r\n        // Preload files if necessary. This code is largely similar to\r\n        // createPreloadedFile in library_fs.js. However, a main difference here\r\n        // is that we only decompress the file if it can be preloaded.\r\n        // Abstracting out the common parts seems to be more effort than it is\r\n        // worth.\r\n        if (preloadPlugin) {\r\n          Browser.init();\r\n          pack['metadata'].files.forEach(function(file) {\r\n            var handled = false;\r\n            var fullname = file.filename;\r\n            Module['preloadPlugins'].forEach(function(plugin) {\r\n              if (handled) return;\r\n              if (plugin['canHandle'](fullname)) {\r\n                var dep = getUniqueRunDependency('fp ' + fullname);\r\n                addRunDependency(dep);\r\n                var finish = () => removeRunDependency(dep);\r\n                var byteArray = FS.readFile(fullname);\r\n                plugin['handle'](byteArray, fullname, finish, finish);\r\n                handled = true;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      },createNode:function (parent, name, mode, dev, contents, mtime) {\r\n        var node = FS.createNode(parent, name, mode);\r\n        node.mode = mode;\r\n        node.node_ops = LZ4.node_ops;\r\n        node.stream_ops = LZ4.stream_ops;\r\n        node.timestamp = (mtime || new Date).getTime();\r\n        assert(LZ4.FILE_MODE !== LZ4.DIR_MODE);\r\n        if (mode === LZ4.FILE_MODE) {\r\n          node.size = contents.end - contents.start;\r\n          node.contents = contents;\r\n        } else {\r\n          node.size = 4096;\r\n          node.contents = {};\r\n        }\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n        }\r\n        return node;\r\n      },node_ops:{getattr:function(node) {\r\n          return {\r\n            dev: 1,\r\n            ino: node.id,\r\n            mode: node.mode,\r\n            nlink: 1,\r\n            uid: 0,\r\n            gid: 0,\r\n            rdev: undefined,\r\n            size: node.size,\r\n            atime: new Date(node.timestamp),\r\n            mtime: new Date(node.timestamp),\r\n            ctime: new Date(node.timestamp),\r\n            blksize: 4096,\r\n            blocks: Math.ceil(node.size / 4096),\r\n          };\r\n        },setattr:function(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n        },lookup:function(parent, name) {\r\n          throw new FS.ErrnoError(44);\r\n        },mknod:function (parent, name, mode, dev) {\r\n          throw new FS.ErrnoError(63);\r\n        },rename:function (oldNode, newDir, newName) {\r\n          throw new FS.ErrnoError(63);\r\n        },unlink:function(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },rmdir:function(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },readdir:function(node) {\r\n          throw new FS.ErrnoError(63);\r\n        },symlink:function(parent, newName, oldPath) {\r\n          throw new FS.ErrnoError(63);\r\n        }},stream_ops:{read:function (stream, buffer, offset, length, position) {\r\n          //out('LZ4 read ' + [offset, length, position]);\r\n          length = Math.min(length, stream.node.size - position);\r\n          if (length <= 0) return 0;\r\n          var contents = stream.node.contents;\r\n          var compressedData = contents.compressedData;\r\n          var written = 0;\r\n          while (written < length) {\r\n            var start = contents.start + position + written; // start index in uncompressed data\r\n            var desired = length - written;\r\n            //out('current read: ' + ['start', start, 'desired', desired]);\r\n            var chunkIndex = Math.floor(start / LZ4.CHUNK_SIZE);\r\n            var compressedStart = compressedData['offsets'][chunkIndex];\r\n            var compressedSize = compressedData['sizes'][chunkIndex];\r\n            var currChunk;\r\n            if (compressedData['successes'][chunkIndex]) {\r\n              var found = compressedData['cachedIndexes'].indexOf(chunkIndex);\r\n              if (found >= 0) {\r\n                currChunk = compressedData['cachedChunks'][found];\r\n              } else {\r\n                // decompress the chunk\r\n                compressedData['cachedIndexes'].pop();\r\n                compressedData['cachedIndexes'].unshift(chunkIndex);\r\n                currChunk = compressedData['cachedChunks'].pop();\r\n                compressedData['cachedChunks'].unshift(currChunk);\r\n                if (compressedData['debug']) {\r\n                  out('decompressing chunk ' + chunkIndex);\r\n                  Module['decompressedChunks'] = (Module['decompressedChunks'] || 0) + 1;\r\n                }\r\n                var compressed = compressedData['data'].subarray(compressedStart, compressedStart + compressedSize);\r\n                //var t = Date.now();\r\n                var originalSize = LZ4.codec.uncompress(compressed, currChunk);\r\n                //out('decompress time: ' + (Date.now() - t));\r\n                if (chunkIndex < compressedData['successes'].length-1) assert(originalSize === LZ4.CHUNK_SIZE); // all but the last chunk must be full-size\r\n              }\r\n            } else {\r\n              // uncompressed\r\n              currChunk = compressedData['data'].subarray(compressedStart, compressedStart + LZ4.CHUNK_SIZE);\r\n            }\r\n            var startInChunk = start % LZ4.CHUNK_SIZE;\r\n            var endInChunk = Math.min(startInChunk + desired, LZ4.CHUNK_SIZE);\r\n            buffer.set(currChunk.subarray(startInChunk, endInChunk), offset + written);\r\n            var currWritten = endInChunk - startInChunk;\r\n            written += currWritten;\r\n          }\r\n          return written;\r\n        },write:function (stream, buffer, offset, length, position) {\r\n          throw new FS.ErrnoError(29);\r\n        },llseek:function (stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.size;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        }}};\r\n  var FS = {root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path, opts = {}) => {\r\n        path = PATH_FS.resolve(path);\r\n  \r\n        if (!path) return { path: '', node: null };\r\n  \r\n        var defaults = {\r\n          follow_mount: true,\r\n          recurse_count: 0\r\n        };\r\n        opts = Object.assign(defaults, opts)\r\n  \r\n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\r\n          throw new FS.ErrnoError(32);\r\n        }\r\n  \r\n        // split the absolute path\r\n        var parts = path.split('/').filter((p) => !!p);\r\n  \r\n        // start at the root\r\n        var current = FS.root;\r\n        var current_path = '/';\r\n  \r\n        for (var i = 0; i < parts.length; i++) {\r\n          var islast = (i === parts.length-1);\r\n          if (islast && opts.parent) {\r\n            // stop resolving\r\n            break;\r\n          }\r\n  \r\n          current = FS.lookupNode(current, parts[i]);\r\n          current_path = PATH.join2(current_path, parts[i]);\r\n  \r\n          // jump to the mount's root node if this is a mountpoint\r\n          if (FS.isMountpoint(current)) {\r\n            if (!islast || (islast && opts.follow_mount)) {\r\n              current = current.mounted.root;\r\n            }\r\n          }\r\n  \r\n          // by default, lookupPath will not follow a symlink if it is the final path component.\r\n          // setting opts.follow = true will override this behavior.\r\n          if (!islast || opts.follow) {\r\n            var count = 0;\r\n            while (FS.isLink(current.mode)) {\r\n              var link = FS.readlink(current_path);\r\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\r\n  \r\n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\r\n              current = lookup.node;\r\n  \r\n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\r\n                throw new FS.ErrnoError(32);\r\n              }\r\n            }\r\n          }\r\n        }\r\n  \r\n        return { path: current_path, node: current };\r\n      },getPath:(node) => {\r\n        var path;\r\n        while (true) {\r\n          if (FS.isRoot(node)) {\r\n            var mount = node.mount.mountpoint;\r\n            if (!path) return mount;\r\n            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;\r\n          }\r\n          path = path ? node.name + '/' + path : node.name;\r\n          node = node.parent;\r\n        }\r\n      },hashName:(parentid, name) => {\r\n        var hash = 0;\r\n  \r\n        for (var i = 0; i < name.length; i++) {\r\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\r\n        }\r\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\r\n      },hashAddNode:(node) => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        node.name_next = FS.nameTable[hash];\r\n        FS.nameTable[hash] = node;\r\n      },hashRemoveNode:(node) => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        if (FS.nameTable[hash] === node) {\r\n          FS.nameTable[hash] = node.name_next;\r\n        } else {\r\n          var current = FS.nameTable[hash];\r\n          while (current) {\r\n            if (current.name_next === node) {\r\n              current.name_next = node.name_next;\r\n              break;\r\n            }\r\n            current = current.name_next;\r\n          }\r\n        }\r\n      },lookupNode:(parent, name) => {\r\n        var errCode = FS.mayLookup(parent);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode, parent);\r\n        }\r\n        var hash = FS.hashName(parent.id, name);\r\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n          var nodeName = node.name;\r\n          if (node.parent.id === parent.id && nodeName === name) {\r\n            return node;\r\n          }\r\n        }\r\n        // if we failed to find it in the cache, call into the VFS\r\n        return FS.lookup(parent, name);\r\n      },createNode:(parent, name, mode, rdev) => {\r\n        var node = new FS.FSNode(parent, name, mode, rdev);\r\n  \r\n        FS.hashAddNode(node);\r\n  \r\n        return node;\r\n      },destroyNode:(node) => {\r\n        FS.hashRemoveNode(node);\r\n      },isRoot:(node) => {\r\n        return node === node.parent;\r\n      },isMountpoint:(node) => {\r\n        return !!node.mounted;\r\n      },isFile:(mode) => {\r\n        return (mode & 61440) === 32768;\r\n      },isDir:(mode) => {\r\n        return (mode & 61440) === 16384;\r\n      },isLink:(mode) => {\r\n        return (mode & 61440) === 40960;\r\n      },isChrdev:(mode) => {\r\n        return (mode & 61440) === 8192;\r\n      },isBlkdev:(mode) => {\r\n        return (mode & 61440) === 24576;\r\n      },isFIFO:(mode) => {\r\n        return (mode & 61440) === 4096;\r\n      },isSocket:(mode) => {\r\n        return (mode & 49152) === 49152;\r\n      },flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:(str) => {\r\n        var flags = FS.flagModes[str];\r\n        if (typeof flags == 'undefined') {\r\n          throw new Error('Unknown file open mode: ' + str);\r\n        }\r\n        return flags;\r\n      },flagsToPermissionString:(flag) => {\r\n        var perms = ['r', 'w', 'rw'][flag & 3];\r\n        if ((flag & 512)) {\r\n          perms += 'w';\r\n        }\r\n        return perms;\r\n      },nodePermissions:(node, perms) => {\r\n        if (FS.ignorePermissions) {\r\n          return 0;\r\n        }\r\n        // return 0 if any user, group or owner bits are set.\r\n        if (perms.includes('r') && !(node.mode & 292)) {\r\n          return 2;\r\n        } else if (perms.includes('w') && !(node.mode & 146)) {\r\n          return 2;\r\n        } else if (perms.includes('x') && !(node.mode & 73)) {\r\n          return 2;\r\n        }\r\n        return 0;\r\n      },mayLookup:(dir) => {\r\n        var errCode = FS.nodePermissions(dir, 'x');\r\n        if (errCode) return errCode;\r\n        if (!dir.node_ops.lookup) return 2;\r\n        return 0;\r\n      },mayCreate:(dir, name) => {\r\n        try {\r\n          var node = FS.lookupNode(dir, name);\r\n          return 20;\r\n        } catch (e) {\r\n        }\r\n        return FS.nodePermissions(dir, 'wx');\r\n      },mayDelete:(dir, name, isdir) => {\r\n        var node;\r\n        try {\r\n          node = FS.lookupNode(dir, name);\r\n        } catch (e) {\r\n          return e.errno;\r\n        }\r\n        var errCode = FS.nodePermissions(dir, 'wx');\r\n        if (errCode) {\r\n          return errCode;\r\n        }\r\n        if (isdir) {\r\n          if (!FS.isDir(node.mode)) {\r\n            return 54;\r\n          }\r\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n            return 10;\r\n          }\r\n        } else {\r\n          if (FS.isDir(node.mode)) {\r\n            return 31;\r\n          }\r\n        }\r\n        return 0;\r\n      },mayOpen:(node, flags) => {\r\n        if (!node) {\r\n          return 44;\r\n        }\r\n        if (FS.isLink(node.mode)) {\r\n          return 32;\r\n        } else if (FS.isDir(node.mode)) {\r\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\r\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\r\n            return 31;\r\n          }\r\n        }\r\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\r\n      },MAX_OPEN_FDS:4096,nextfd:(fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\r\n        for (var fd = fd_start; fd <= fd_end; fd++) {\r\n          if (!FS.streams[fd]) {\r\n            return fd;\r\n          }\r\n        }\r\n        throw new FS.ErrnoError(33);\r\n      },getStream:(fd) => FS.streams[fd],createStream:(stream, fd_start, fd_end) => {\r\n        if (!FS.FSStream) {\r\n          FS.FSStream = /** @constructor */ function() {\r\n            this.shared = { };\r\n          };\r\n          FS.FSStream.prototype = {};\r\n          Object.defineProperties(FS.FSStream.prototype, {\r\n            object: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.node; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.node = val; }\r\n            },\r\n            isRead: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 2097155) !== 1; }\r\n            },\r\n            isWrite: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 2097155) !== 0; }\r\n            },\r\n            isAppend: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 1024); }\r\n            },\r\n            flags: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.shared.flags; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.shared.flags = val; },\r\n            },\r\n            position : {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.shared.position; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.shared.position = val; },\r\n            },\r\n          });\r\n        }\r\n        // clone it, so we can return an instance of FSStream\r\n        stream = Object.assign(new FS.FSStream(), stream);\r\n        var fd = FS.nextfd(fd_start, fd_end);\r\n        stream.fd = fd;\r\n        FS.streams[fd] = stream;\r\n        return stream;\r\n      },closeStream:(fd) => {\r\n        FS.streams[fd] = null;\r\n      },chrdev_stream_ops:{open:(stream) => {\r\n          var device = FS.getDevice(stream.node.rdev);\r\n          // override node's stream ops with the device's\r\n          stream.stream_ops = device.stream_ops;\r\n          // forward the open call\r\n          if (stream.stream_ops.open) {\r\n            stream.stream_ops.open(stream);\r\n          }\r\n        },llseek:() => {\r\n          throw new FS.ErrnoError(70);\r\n        }},major:(dev) => ((dev) >> 8),minor:(dev) => ((dev) & 0xff),makedev:(ma, mi) => ((ma) << 8 | (mi)),registerDevice:(dev, ops) => {\r\n        FS.devices[dev] = { stream_ops: ops };\r\n      },getDevice:(dev) => FS.devices[dev],getMounts:(mount) => {\r\n        var mounts = [];\r\n        var check = [mount];\r\n  \r\n        while (check.length) {\r\n          var m = check.pop();\r\n  \r\n          mounts.push(m);\r\n  \r\n          check.push.apply(check, m.mounts);\r\n        }\r\n  \r\n        return mounts;\r\n      },syncfs:(populate, callback) => {\r\n        if (typeof populate == 'function') {\r\n          callback = populate;\r\n          populate = false;\r\n        }\r\n  \r\n        FS.syncFSRequests++;\r\n  \r\n        if (FS.syncFSRequests > 1) {\r\n          err('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');\r\n        }\r\n  \r\n        var mounts = FS.getMounts(FS.root.mount);\r\n        var completed = 0;\r\n  \r\n        function doCallback(errCode) {\r\n          FS.syncFSRequests--;\r\n          return callback(errCode);\r\n        }\r\n  \r\n        function done(errCode) {\r\n          if (errCode) {\r\n            if (!done.errored) {\r\n              done.errored = true;\r\n              return doCallback(errCode);\r\n            }\r\n            return;\r\n          }\r\n          if (++completed >= mounts.length) {\r\n            doCallback(null);\r\n          }\r\n        };\r\n  \r\n        // sync all mounts\r\n        mounts.forEach((mount) => {\r\n          if (!mount.type.syncfs) {\r\n            return done(null);\r\n          }\r\n          mount.type.syncfs(mount, populate, done);\r\n        });\r\n      },mount:(type, opts, mountpoint) => {\r\n        var root = mountpoint === '/';\r\n        var pseudo = !mountpoint;\r\n        var node;\r\n  \r\n        if (root && FS.root) {\r\n          throw new FS.ErrnoError(10);\r\n        } else if (!root && !pseudo) {\r\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n          mountpoint = lookup.path;  // use the absolute path\r\n          node = lookup.node;\r\n  \r\n          if (FS.isMountpoint(node)) {\r\n            throw new FS.ErrnoError(10);\r\n          }\r\n  \r\n          if (!FS.isDir(node.mode)) {\r\n            throw new FS.ErrnoError(54);\r\n          }\r\n        }\r\n  \r\n        var mount = {\r\n          type: type,\r\n          opts: opts,\r\n          mountpoint: mountpoint,\r\n          mounts: []\r\n        };\r\n  \r\n        // create a root node for the fs\r\n        var mountRoot = type.mount(mount);\r\n        mountRoot.mount = mount;\r\n        mount.root = mountRoot;\r\n  \r\n        if (root) {\r\n          FS.root = mountRoot;\r\n        } else if (node) {\r\n          // set as a mountpoint\r\n          node.mounted = mount;\r\n  \r\n          // add the new mount to the current mount's children\r\n          if (node.mount) {\r\n            node.mount.mounts.push(mount);\r\n          }\r\n        }\r\n  \r\n        return mountRoot;\r\n      },unmount:(mountpoint) => {\r\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n        if (!FS.isMountpoint(lookup.node)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n  \r\n        // destroy the nodes for this mount, and all its child mounts\r\n        var node = lookup.node;\r\n        var mount = node.mounted;\r\n        var mounts = FS.getMounts(mount);\r\n  \r\n        Object.keys(FS.nameTable).forEach((hash) => {\r\n          var current = FS.nameTable[hash];\r\n  \r\n          while (current) {\r\n            var next = current.name_next;\r\n  \r\n            if (mounts.includes(current.mount)) {\r\n              FS.destroyNode(current);\r\n            }\r\n  \r\n            current = next;\r\n          }\r\n        });\r\n  \r\n        // no longer a mountpoint\r\n        node.mounted = null;\r\n  \r\n        // remove this mount from the child mounts\r\n        var idx = node.mount.mounts.indexOf(mount);\r\n        node.mount.mounts.splice(idx, 1);\r\n      },lookup:(parent, name) => {\r\n        return parent.node_ops.lookup(parent, name);\r\n      },mknod:(path, mode, dev) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        if (!name || name === '.' || name === '..') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.mayCreate(parent, name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.mknod) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.mknod(parent, name, mode, dev);\r\n      },create:(path, mode) => {\r\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\r\n        mode &= 4095;\r\n        mode |= 32768;\r\n        return FS.mknod(path, mode, 0);\r\n      },mkdir:(path, mode) => {\r\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\r\n        mode &= 511 | 512;\r\n        mode |= 16384;\r\n        return FS.mknod(path, mode, 0);\r\n      },mkdirTree:(path, mode) => {\r\n        var dirs = path.split('/');\r\n        var d = '';\r\n        for (var i = 0; i < dirs.length; ++i) {\r\n          if (!dirs[i]) continue;\r\n          d += '/' + dirs[i];\r\n          try {\r\n            FS.mkdir(d, mode);\r\n          } catch(e) {\r\n            if (e.errno != 20) throw e;\r\n          }\r\n        }\r\n      },mkdev:(path, mode, dev) => {\r\n        if (typeof dev == 'undefined') {\r\n          dev = mode;\r\n          mode = 438 /* 0666 */;\r\n        }\r\n        mode |= 8192;\r\n        return FS.mknod(path, mode, dev);\r\n      },symlink:(oldpath, newpath) => {\r\n        if (!PATH_FS.resolve(oldpath)) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var lookup = FS.lookupPath(newpath, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var newname = PATH.basename(newpath);\r\n        var errCode = FS.mayCreate(parent, newname);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.symlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.symlink(parent, newname, oldpath);\r\n      },rename:(old_path, new_path) => {\r\n        var old_dirname = PATH.dirname(old_path);\r\n        var new_dirname = PATH.dirname(new_path);\r\n        var old_name = PATH.basename(old_path);\r\n        var new_name = PATH.basename(new_path);\r\n        // parents must exist\r\n        var lookup, old_dir, new_dir;\r\n  \r\n        // let the errors from non existant directories percolate up\r\n        lookup = FS.lookupPath(old_path, { parent: true });\r\n        old_dir = lookup.node;\r\n        lookup = FS.lookupPath(new_path, { parent: true });\r\n        new_dir = lookup.node;\r\n  \r\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\r\n        // need to be part of the same mount\r\n        if (old_dir.mount !== new_dir.mount) {\r\n          throw new FS.ErrnoError(75);\r\n        }\r\n        // source must exist\r\n        var old_node = FS.lookupNode(old_dir, old_name);\r\n        // old path should not be an ancestor of the new path\r\n        var relative = PATH_FS.relative(old_path, new_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        // new path should not be an ancestor of the old path\r\n        relative = PATH_FS.relative(new_path, old_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(55);\r\n        }\r\n        // see if the new path already exists\r\n        var new_node;\r\n        try {\r\n          new_node = FS.lookupNode(new_dir, new_name);\r\n        } catch (e) {\r\n          // not fatal\r\n        }\r\n        // early out if nothing needs to change\r\n        if (old_node === new_node) {\r\n          return;\r\n        }\r\n        // we'll need to delete the old entry\r\n        var isdir = FS.isDir(old_node.mode);\r\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        // need delete permissions if we'll be overwriting.\r\n        // need create permissions if new doesn't already exist.\r\n        errCode = new_node ?\r\n          FS.mayDelete(new_dir, new_name, isdir) :\r\n          FS.mayCreate(new_dir, new_name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!old_dir.node_ops.rename) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        // if we are going to change the parent, check write permissions\r\n        if (new_dir !== old_dir) {\r\n          errCode = FS.nodePermissions(old_dir, 'w');\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // remove the node from the lookup hash\r\n        FS.hashRemoveNode(old_node);\r\n        // do the underlying fs rename\r\n        try {\r\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          // add the node back to the hash (in case node_ops.rename\r\n          // changed its name)\r\n          FS.hashAddNode(old_node);\r\n        }\r\n      },rmdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, true);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.rmdir) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.rmdir(parent, name);\r\n        FS.destroyNode(node);\r\n      },readdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        if (!node.node_ops.readdir) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        return node.node_ops.readdir(node);\r\n      },unlink:(path) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, false);\r\n        if (errCode) {\r\n          // According to POSIX, we should map EISDIR to EPERM, but\r\n          // we instead do what Linux does (and we must, as we use\r\n          // the musl linux libc).\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.unlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.unlink(parent, name);\r\n        FS.destroyNode(node);\r\n      },readlink:(path) => {\r\n        var lookup = FS.lookupPath(path);\r\n        var link = lookup.node;\r\n        if (!link) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!link.node_ops.readlink) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\r\n      },stat:(path, dontFollow) => {\r\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n        var node = lookup.node;\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!node.node_ops.getattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return node.node_ops.getattr(node);\r\n      },lstat:(path) => {\r\n        return FS.stat(path, true);\r\n      },chmod:(path, mode, dontFollow) => {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          mode: (mode & 4095) | (node.mode & ~4095),\r\n          timestamp: Date.now()\r\n        });\r\n      },lchmod:(path, mode) => {\r\n        FS.chmod(path, mode, true);\r\n      },fchmod:(fd, mode) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        FS.chmod(stream.node, mode);\r\n      },chown:(path, uid, gid, dontFollow) => {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Date.now()\r\n          // we ignore the uid / gid for now\r\n        });\r\n      },lchown:(path, uid, gid) => {\r\n        FS.chown(path, uid, gid, true);\r\n      },fchown:(fd, uid, gid) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        FS.chown(stream.node, uid, gid);\r\n      },truncate:(path, len) => {\r\n        if (len < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: true });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!FS.isFile(node.mode)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.nodePermissions(node, 'w');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          size: len,\r\n          timestamp: Date.now()\r\n        });\r\n      },ftruncate:(fd, len) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        FS.truncate(stream.node, len);\r\n      },utime:(path, atime, mtime) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Math.max(atime, mtime)\r\n        });\r\n      },open:(path, flags, mode) => {\r\n        if (path === \"\") {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\r\n        mode = typeof mode == 'undefined' ? 438 /* 0666 */ : mode;\r\n        if ((flags & 64)) {\r\n          mode = (mode & 4095) | 32768;\r\n        } else {\r\n          mode = 0;\r\n        }\r\n        var node;\r\n        if (typeof path == 'object') {\r\n          node = path;\r\n        } else {\r\n          path = PATH.normalize(path);\r\n          try {\r\n            var lookup = FS.lookupPath(path, {\r\n              follow: !(flags & 131072)\r\n            });\r\n            node = lookup.node;\r\n          } catch (e) {\r\n            // ignore\r\n          }\r\n        }\r\n        // perhaps we need to create the node\r\n        var created = false;\r\n        if ((flags & 64)) {\r\n          if (node) {\r\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\r\n            if ((flags & 128)) {\r\n              throw new FS.ErrnoError(20);\r\n            }\r\n          } else {\r\n            // node doesn't exist, try to create it\r\n            node = FS.mknod(path, mode, 0);\r\n            created = true;\r\n          }\r\n        }\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        // can't truncate a device\r\n        if (FS.isChrdev(node.mode)) {\r\n          flags &= ~512;\r\n        }\r\n        // if asked only for a directory, then this must be one\r\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        // check permissions, if this is not a file we just created now (it is ok to\r\n        // create and write to a file with read-only permissions; it is read-only\r\n        // for later use)\r\n        if (!created) {\r\n          var errCode = FS.mayOpen(node, flags);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // do truncation if necessary\r\n        if ((flags & 512) && !created) {\r\n          FS.truncate(node, 0);\r\n        }\r\n        // we've already handled these, don't pass down to the underlying vfs\r\n        flags &= ~(128 | 512 | 131072);\r\n  \r\n        // register the stream with the filesystem\r\n        var stream = FS.createStream({\r\n          node: node,\r\n          path: FS.getPath(node),  // we want the absolute path to the node\r\n          flags: flags,\r\n          seekable: true,\r\n          position: 0,\r\n          stream_ops: node.stream_ops,\r\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\r\n          ungotten: [],\r\n          error: false\r\n        });\r\n        // call the new stream's open function\r\n        if (stream.stream_ops.open) {\r\n          stream.stream_ops.open(stream);\r\n        }\r\n        if (Module['logReadFiles'] && !(flags & 1)) {\r\n          if (!FS.readFiles) FS.readFiles = {};\r\n          if (!(path in FS.readFiles)) {\r\n            FS.readFiles[path] = 1;\r\n          }\r\n        }\r\n        return stream;\r\n      },close:(stream) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (stream.getdents) stream.getdents = null; // free readdir state\r\n        try {\r\n          if (stream.stream_ops.close) {\r\n            stream.stream_ops.close(stream);\r\n          }\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          FS.closeStream(stream.fd);\r\n        }\r\n        stream.fd = null;\r\n      },isClosed:(stream) => {\r\n        return stream.fd === null;\r\n      },llseek:(stream, offset, whence) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!stream.seekable || !stream.stream_ops.llseek) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        if (whence != 0 && whence != 1 && whence != 2) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n        stream.ungotten = [];\r\n        return stream.position;\r\n      },read:(stream, buffer, offset, length, position) => {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.read) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n        if (!seeking) stream.position += bytesRead;\r\n        return bytesRead;\r\n      },write:(stream, buffer, offset, length, position, canOwn) => {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.write) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (stream.seekable && stream.flags & 1024) {\r\n          // seek to the end before writing in append mode\r\n          FS.llseek(stream, 0, 2);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n        if (!seeking) stream.position += bytesWritten;\r\n        return bytesWritten;\r\n      },allocate:(stream, offset, length) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (offset < 0 || length <= 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (!stream.stream_ops.allocate) {\r\n          throw new FS.ErrnoError(138);\r\n        }\r\n        stream.stream_ops.allocate(stream, offset, length);\r\n      },mmap:(stream, length, position, prot, flags) => {\r\n        // User requests writing to file (prot & PROT_WRITE != 0).\r\n        // Checking if we have permissions to write to the file unless\r\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\r\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\r\n        // as all modifications will be visible only in the memory of\r\n        // the current process.\r\n        if ((prot & 2) !== 0\r\n            && (flags & 2) === 0\r\n            && (stream.flags & 2097155) !== 2) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if (!stream.stream_ops.mmap) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\r\n      },msync:(stream, buffer, offset, length, mmapFlags) => {\r\n        if (!stream.stream_ops.msync) {\r\n          return 0;\r\n        }\r\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\r\n      },munmap:(stream) => 0,ioctl:(stream, cmd, arg) => {\r\n        if (!stream.stream_ops.ioctl) {\r\n          throw new FS.ErrnoError(59);\r\n        }\r\n        return stream.stream_ops.ioctl(stream, cmd, arg);\r\n      },readFile:(path, opts = {}) => {\r\n        opts.flags = opts.flags || 0;\r\n        opts.encoding = opts.encoding || 'binary';\r\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\r\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\r\n        }\r\n        var ret;\r\n        var stream = FS.open(path, opts.flags);\r\n        var stat = FS.stat(path);\r\n        var length = stat.size;\r\n        var buf = new Uint8Array(length);\r\n        FS.read(stream, buf, 0, length, 0);\r\n        if (opts.encoding === 'utf8') {\r\n          ret = UTF8ArrayToString(buf, 0);\r\n        } else if (opts.encoding === 'binary') {\r\n          ret = buf;\r\n        }\r\n        FS.close(stream);\r\n        return ret;\r\n      },writeFile:(path, data, opts = {}) => {\r\n        opts.flags = opts.flags || 577;\r\n        var stream = FS.open(path, opts.flags, opts.mode);\r\n        if (typeof data == 'string') {\r\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\r\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\r\n        } else if (ArrayBuffer.isView(data)) {\r\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\r\n        } else {\r\n          throw new Error('Unsupported data type');\r\n        }\r\n        FS.close(stream);\r\n      },cwd:() => FS.currentPath,chdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        if (lookup.node === null) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!FS.isDir(lookup.node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        var errCode = FS.nodePermissions(lookup.node, 'x');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        FS.currentPath = lookup.path;\r\n      },createDefaultDirectories:() => {\r\n        FS.mkdir('/tmp');\r\n        FS.mkdir('/home');\r\n        FS.mkdir('/home/web_user');\r\n      },createDefaultDevices:() => {\r\n        // create /dev\r\n        FS.mkdir('/dev');\r\n        // setup /dev/null\r\n        FS.registerDevice(FS.makedev(1, 3), {\r\n          read: () => 0,\r\n          write: (stream, buffer, offset, length, pos) => length,\r\n        });\r\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\r\n        // setup /dev/tty and /dev/tty1\r\n        // stderr needs to print output using err() rather than out()\r\n        // so we register a second tty just for it.\r\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\r\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\r\n        // setup /dev/[u]random\r\n        // use a buffer to avoid overhead of individual crypto calls per byte\r\n        var randomBuffer = new Uint8Array(1024), randomLeft = 0;\r\n        var randomByte = () => {\r\n          if (randomLeft === 0) {\r\n            randomLeft = randomFill(randomBuffer).byteLength;\r\n          }\r\n          return randomBuffer[--randomLeft];\r\n        };\r\n        FS.createDevice('/dev', 'random', randomByte);\r\n        FS.createDevice('/dev', 'urandom', randomByte);\r\n        // we're not going to emulate the actual shm device,\r\n        // just create the tmp dirs that reside in it commonly\r\n        FS.mkdir('/dev/shm');\r\n        FS.mkdir('/dev/shm/tmp');\r\n      },createSpecialDirectories:() => {\r\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\r\n        // name of the stream for fd 6 (see test_unistd_ttyname)\r\n        FS.mkdir('/proc');\r\n        var proc_self = FS.mkdir('/proc/self');\r\n        FS.mkdir('/proc/self/fd');\r\n        FS.mount({\r\n          mount: () => {\r\n            var node = FS.createNode(proc_self, 'fd', 16384 | 511 /* 0777 */, 73);\r\n            node.node_ops = {\r\n              lookup: (parent, name) => {\r\n                var fd = +name;\r\n                var stream = FS.getStream(fd);\r\n                if (!stream) throw new FS.ErrnoError(8);\r\n                var ret = {\r\n                  parent: null,\r\n                  mount: { mountpoint: 'fake' },\r\n                  node_ops: { readlink: () => stream.path },\r\n                };\r\n                ret.parent = ret; // make it look like a simple root node\r\n                return ret;\r\n              }\r\n            };\r\n            return node;\r\n          }\r\n        }, {}, '/proc/self/fd');\r\n      },createStandardStreams:() => {\r\n        // TODO deprecate the old functionality of a single\r\n        // input / output callback and that utilizes FS.createDevice\r\n        // and instead require a unique set of stream ops\r\n  \r\n        // by default, we symlink the standard streams to the\r\n        // default tty devices. however, if the standard streams\r\n        // have been overwritten we create a unique device for\r\n        // them instead.\r\n        if (Module['stdin']) {\r\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdin');\r\n        }\r\n        if (Module['stdout']) {\r\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdout');\r\n        }\r\n        if (Module['stderr']) {\r\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\r\n        } else {\r\n          FS.symlink('/dev/tty1', '/dev/stderr');\r\n        }\r\n  \r\n        // open default streams for the stdin, stdout and stderr devices\r\n        var stdin = FS.open('/dev/stdin', 0);\r\n        var stdout = FS.open('/dev/stdout', 1);\r\n        var stderr = FS.open('/dev/stderr', 1);\r\n      },ensureErrnoError:() => {\r\n        if (FS.ErrnoError) return;\r\n        FS.ErrnoError = /** @this{Object} */ function ErrnoError(errno, node) {\r\n          // We set the `name` property to be able to identify `FS.ErrnoError`\r\n          // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\r\n          // - when using PROXYFS, an error can come from an underlying FS\r\n          // as different FS objects have their own FS.ErrnoError each,\r\n          // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\r\n          // we'll use the reliable test `err.name == \"ErrnoError\"` instead\r\n          this.name = 'ErrnoError';\r\n          this.node = node;\r\n          this.setErrno = /** @this{Object} */ function(errno) {\r\n            this.errno = errno;\r\n          };\r\n          this.setErrno(errno);\r\n          this.message = 'FS error';\r\n  \r\n        };\r\n        FS.ErrnoError.prototype = new Error();\r\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\r\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\r\n        [44].forEach((code) => {\r\n          FS.genericErrors[code] = new FS.ErrnoError(code);\r\n          FS.genericErrors[code].stack = '<generic error, no stack>';\r\n        });\r\n      },staticInit:() => {\r\n        FS.ensureErrnoError();\r\n  \r\n        FS.nameTable = new Array(4096);\r\n  \r\n        FS.mount(MEMFS, {}, '/');\r\n  \r\n        FS.createDefaultDirectories();\r\n        FS.createDefaultDevices();\r\n        FS.createSpecialDirectories();\r\n  \r\n        FS.filesystems = {\r\n          'MEMFS': MEMFS,\r\n          'IDBFS': IDBFS,\r\n        };\r\n      },init:(input, output, error) => {\r\n        FS.init.initialized = true;\r\n  \r\n        FS.ensureErrnoError();\r\n  \r\n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\r\n        Module['stdin'] = input || Module['stdin'];\r\n        Module['stdout'] = output || Module['stdout'];\r\n        Module['stderr'] = error || Module['stderr'];\r\n  \r\n        FS.createStandardStreams();\r\n      },quit:() => {\r\n        FS.init.initialized = false;\r\n        // force-flush all streams, so we get musl std streams printed out\r\n        // close all of our streams\r\n        for (var i = 0; i < FS.streams.length; i++) {\r\n          var stream = FS.streams[i];\r\n          if (!stream) {\r\n            continue;\r\n          }\r\n          FS.close(stream);\r\n        }\r\n      },getMode:(canRead, canWrite) => {\r\n        var mode = 0;\r\n        if (canRead) mode |= 292 | 73;\r\n        if (canWrite) mode |= 146;\r\n        return mode;\r\n      },findObject:(path, dontResolveLastLink) => {\r\n        var ret = FS.analyzePath(path, dontResolveLastLink);\r\n        if (!ret.exists) {\r\n          return null;\r\n        }\r\n        return ret.object;\r\n      },analyzePath:(path, dontResolveLastLink) => {\r\n        // operate from within the context of the symlink's target\r\n        try {\r\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          path = lookup.path;\r\n        } catch (e) {\r\n        }\r\n        var ret = {\r\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\r\n          parentExists: false, parentPath: null, parentObject: null\r\n        };\r\n        try {\r\n          var lookup = FS.lookupPath(path, { parent: true });\r\n          ret.parentExists = true;\r\n          ret.parentPath = lookup.path;\r\n          ret.parentObject = lookup.node;\r\n          ret.name = PATH.basename(path);\r\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          ret.exists = true;\r\n          ret.path = lookup.path;\r\n          ret.object = lookup.node;\r\n          ret.name = lookup.node.name;\r\n          ret.isRoot = lookup.path === '/';\r\n        } catch (e) {\r\n          ret.error = e.errno;\r\n        };\r\n        return ret;\r\n      },createPath:(parent, path, canRead, canWrite) => {\r\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n        var parts = path.split('/').reverse();\r\n        while (parts.length) {\r\n          var part = parts.pop();\r\n          if (!part) continue;\r\n          var current = PATH.join2(parent, part);\r\n          try {\r\n            FS.mkdir(current);\r\n          } catch (e) {\r\n            // ignore EEXIST\r\n          }\r\n          parent = current;\r\n        }\r\n        return current;\r\n      },createFile:(parent, name, properties, canRead, canWrite) => {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS.getMode(canRead, canWrite);\r\n        return FS.create(path, mode);\r\n      },createDataFile:(parent, name, data, canRead, canWrite, canOwn) => {\r\n        var path = name;\r\n        if (parent) {\r\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n          path = name ? PATH.join2(parent, name) : parent;\r\n        }\r\n        var mode = FS.getMode(canRead, canWrite);\r\n        var node = FS.create(path, mode);\r\n        if (data) {\r\n          if (typeof data == 'string') {\r\n            var arr = new Array(data.length);\r\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n            data = arr;\r\n          }\r\n          // make sure we can write to the file\r\n          FS.chmod(node, mode | 146);\r\n          var stream = FS.open(node, 577);\r\n          FS.write(stream, data, 0, data.length, 0, canOwn);\r\n          FS.close(stream);\r\n          FS.chmod(node, mode);\r\n        }\r\n        return node;\r\n      },createDevice:(parent, name, input, output) => {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS.getMode(!!input, !!output);\r\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\r\n        var dev = FS.makedev(FS.createDevice.major++, 0);\r\n        // Create a fake device that a set of stream ops to emulate\r\n        // the old behavior.\r\n        FS.registerDevice(dev, {\r\n          open: (stream) => {\r\n            stream.seekable = false;\r\n          },\r\n          close: (stream) => {\r\n            // flush any pending line data\r\n            if (output && output.buffer && output.buffer.length) {\r\n              output(10);\r\n            }\r\n          },\r\n          read: (stream, buffer, offset, length, pos /* ignored */) => {\r\n            var bytesRead = 0;\r\n            for (var i = 0; i < length; i++) {\r\n              var result;\r\n              try {\r\n                result = input();\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n              if (result === undefined && bytesRead === 0) {\r\n                throw new FS.ErrnoError(6);\r\n              }\r\n              if (result === null || result === undefined) break;\r\n              bytesRead++;\r\n              buffer[offset+i] = result;\r\n            }\r\n            if (bytesRead) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return bytesRead;\r\n          },\r\n          write: (stream, buffer, offset, length, pos) => {\r\n            for (var i = 0; i < length; i++) {\r\n              try {\r\n                output(buffer[offset+i]);\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n            }\r\n            if (length) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return i;\r\n          }\r\n        });\r\n        return FS.mkdev(path, mode, dev);\r\n      },forceLoadFile:(obj) => {\r\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\r\n        } else if (read_) {\r\n          // Command-line.\r\n          try {\r\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\r\n            //          read() will try to parse UTF8.\r\n            obj.contents = intArrayFromString(read_(obj.url), true);\r\n            obj.usedBytes = obj.contents.length;\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n        } else {\r\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\r\n        }\r\n      },createLazyFile:(parent, name, url, canRead, canWrite) => {\r\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\r\n        /** @constructor */\r\n        function LazyUint8Array() {\r\n          this.lengthKnown = false;\r\n          this.chunks = []; // Loaded chunks. Index is the chunk number\r\n        }\r\n        LazyUint8Array.prototype.get = /** @this{Object} */ function LazyUint8Array_get(idx) {\r\n          if (idx > this.length-1 || idx < 0) {\r\n            return undefined;\r\n          }\r\n          var chunkOffset = idx % this.chunkSize;\r\n          var chunkNum = (idx / this.chunkSize)|0;\r\n          return this.getter(chunkNum)[chunkOffset];\r\n        };\r\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\r\n          this.getter = getter;\r\n        };\r\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\r\n          // Find length\r\n          var xhr = new XMLHttpRequest();\r\n          xhr.open('HEAD', url, false);\r\n          xhr.send(null);\r\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n          var header;\r\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n  \r\n          var chunkSize = 1024*1024; // Chunk size in bytes\r\n  \r\n          if (!hasByteServing) chunkSize = datalength;\r\n  \r\n          // Function to get a range from the remote URL.\r\n          var doXHR = (from, to) => {\r\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n  \r\n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url, false);\r\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n  \r\n            // Some hints to the browser that we want binary data.\r\n            xhr.responseType = 'arraybuffer';\r\n            if (xhr.overrideMimeType) {\r\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\r\n            }\r\n  \r\n            xhr.send(null);\r\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n            if (xhr.response !== undefined) {\r\n              return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\r\n            }\r\n            return intArrayFromString(xhr.responseText || '', true);\r\n          };\r\n          var lazyArray = this;\r\n          lazyArray.setDataGetter((chunkNum) => {\r\n            var start = chunkNum * chunkSize;\r\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\r\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\r\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\r\n            }\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\r\n            return lazyArray.chunks[chunkNum];\r\n          });\r\n  \r\n          if (usesGzip || !datalength) {\r\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\r\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\r\n            datalength = this.getter(0).length;\r\n            chunkSize = datalength;\r\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\r\n          }\r\n  \r\n          this._length = datalength;\r\n          this._chunkSize = chunkSize;\r\n          this.lengthKnown = true;\r\n        };\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\r\n          var lazyArray = new LazyUint8Array();\r\n          Object.defineProperties(lazyArray, {\r\n            length: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._length;\r\n              }\r\n            },\r\n            chunkSize: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._chunkSize;\r\n              }\r\n            }\r\n          });\r\n  \r\n          var properties = { isDevice: false, contents: lazyArray };\r\n        } else {\r\n          var properties = { isDevice: false, url: url };\r\n        }\r\n  \r\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n        // This is a total hack, but I want to get this lazy file code out of the\r\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\r\n        // be its own thin LAZYFS proxying calls to MEMFS.\r\n        if (properties.contents) {\r\n          node.contents = properties.contents;\r\n        } else if (properties.url) {\r\n          node.contents = null;\r\n          node.url = properties.url;\r\n        }\r\n        // Add a function that defers querying the file size until it is asked the first time.\r\n        Object.defineProperties(node, {\r\n          usedBytes: {\r\n            get: /** @this {FSNode} */ function() { return this.contents.length; }\r\n          }\r\n        });\r\n        // override each stream op with one that tries to force load the lazy file first\r\n        var stream_ops = {};\r\n        var keys = Object.keys(node.stream_ops);\r\n        keys.forEach((key) => {\r\n          var fn = node.stream_ops[key];\r\n          stream_ops[key] = function forceLoadLazyFile() {\r\n            FS.forceLoadFile(node);\r\n            return fn.apply(null, arguments);\r\n          };\r\n        });\r\n        function writeChunks(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= contents.length)\r\n            return 0;\r\n          var size = Math.min(contents.length - position, length);\r\n          if (contents.slice) { // normal array\r\n            for (var i = 0; i < size; i++) {\r\n              buffer[offset + i] = contents[position + i];\r\n            }\r\n          } else {\r\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\r\n              buffer[offset + i] = contents.get(position + i);\r\n            }\r\n          }\r\n          return size;\r\n        }\r\n        // use a custom read function\r\n        stream_ops.read = (stream, buffer, offset, length, position) => {\r\n          FS.forceLoadFile(node);\r\n          return writeChunks(stream, buffer, offset, length, position)\r\n        };\r\n        // use a custom mmap function\r\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\r\n          FS.forceLoadFile(node);\r\n          var ptr = mmapAlloc(length);\r\n          if (!ptr) {\r\n            throw new FS.ErrnoError(48);\r\n          }\r\n          writeChunks(stream, HEAP8, ptr, length, position);\r\n          return { ptr: ptr, allocated: true };\r\n        };\r\n        node.stream_ops = stream_ops;\r\n        return node;\r\n      },createPreloadedFile:(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\r\n        // TODO we should allow people to just pass in a complete filename instead\r\n        // of parent and name being that we just join them anyways\r\n        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\r\n        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname\r\n        function processData(byteArray) {\r\n          function finish(byteArray) {\r\n            if (preFinish) preFinish();\r\n            if (!dontCreateFile) {\r\n              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\r\n            }\r\n            if (onload) onload();\r\n            removeRunDependency(dep);\r\n          }\r\n          if (Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\r\n            if (onerror) onerror();\r\n            removeRunDependency(dep);\r\n          })) {\r\n            return;\r\n          }\r\n          finish(byteArray);\r\n        }\r\n        addRunDependency(dep);\r\n        if (typeof url == 'string') {\r\n          asyncLoad(url, (byteArray) => processData(byteArray), onerror);\r\n        } else {\r\n          processData(url);\r\n        }\r\n      }};\r\n  \r\n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\r\n  \r\n    /**\r\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\r\n     * array that contains uint8 values, returns a copy of that string as a\r\n     * Javascript String object.\r\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\r\n     * @param {number} idx\r\n     * @param {number=} maxBytesToRead\r\n     * @return {string}\r\n     */\r\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\r\n      var endIdx = idx + maxBytesToRead;\r\n      var endPtr = idx;\r\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\r\n      // null terminator by itself.  Also, use the length info to avoid running tiny\r\n      // strings through TextDecoder, since .subarray() allocates garbage.\r\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\r\n      // so that undefined means Infinity)\r\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n  \r\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\r\n      }\r\n      var str = '';\r\n      // If building with TextDecoder, we have already computed the string length\r\n      // above, so test loop end condition against that\r\n      while (idx < endPtr) {\r\n        // For UTF8 byte structure, see:\r\n        // http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // https://www.ietf.org/rfc/rfc2279.txt\r\n        // https://tools.ietf.org/html/rfc3629\r\n        var u0 = heapOrArray[idx++];\r\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\r\n        var u1 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\r\n        var u2 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xF0) == 0xE0) {\r\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n        } else {\r\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\r\n        }\r\n  \r\n        if (u0 < 0x10000) {\r\n          str += String.fromCharCode(u0);\r\n        } else {\r\n          var ch = u0 - 0x10000;\r\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n        }\r\n      }\r\n      return str;\r\n    }\r\n  \r\n  \r\n    /**\r\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\r\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\r\n     *\r\n     * @param {number} ptr\r\n     * @param {number=} maxBytesToRead - An optional length that specifies the\r\n     *   maximum number of bytes to read. You can omit this parameter to scan the\r\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\r\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\r\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\r\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\r\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\r\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\r\n     * @return {string}\r\n     */\r\n  function UTF8ToString(ptr, maxBytesToRead) {\r\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\r\n    }\r\n  var SYSCALLS = {DEFAULT_POLLMASK:5,calculateAt:function(dirfd, path, allowEmpty) {\r\n        if (PATH.isAbs(path)) {\r\n          return path;\r\n        }\r\n        // relative path\r\n        var dir;\r\n        if (dirfd === -100) {\r\n          dir = FS.cwd();\r\n        } else {\r\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\r\n          dir = dirstream.path;\r\n        }\r\n        if (path.length == 0) {\r\n          if (!allowEmpty) {\r\n            throw new FS.ErrnoError(44);;\r\n          }\r\n          return dir;\r\n        }\r\n        return PATH.join2(dir, path);\r\n      },doStat:function(func, path, buf) {\r\n        try {\r\n          var stat = func(path);\r\n        } catch (e) {\r\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\r\n            // an error occurred while trying to look up the path; we should just report ENOTDIR\r\n            return -54;\r\n          }\r\n          throw e;\r\n        }\r\n        HEAP32[((buf)>>2)] = stat.dev;\r\n        HEAP32[(((buf)+(8))>>2)] = stat.ino;\r\n        HEAP32[(((buf)+(12))>>2)] = stat.mode;\r\n        HEAPU32[(((buf)+(16))>>2)] = stat.nlink;\r\n        HEAP32[(((buf)+(20))>>2)] = stat.uid;\r\n        HEAP32[(((buf)+(24))>>2)] = stat.gid;\r\n        HEAP32[(((buf)+(28))>>2)] = stat.rdev;\r\n        (tempI64 = [stat.size>>>0,(tempDouble=stat.size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(40))>>2)] = tempI64[0],HEAP32[(((buf)+(44))>>2)] = tempI64[1]);\r\n        HEAP32[(((buf)+(48))>>2)] = 4096;\r\n        HEAP32[(((buf)+(52))>>2)] = stat.blocks;\r\n        var atime = stat.atime.getTime();\r\n        var mtime = stat.mtime.getTime();\r\n        var ctime = stat.ctime.getTime();\r\n        (tempI64 = [Math.floor(atime / 1000)>>>0,(tempDouble=Math.floor(atime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(56))>>2)] = tempI64[0],HEAP32[(((buf)+(60))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(64))>>2)] = (atime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(mtime / 1000)>>>0,(tempDouble=Math.floor(mtime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(72))>>2)] = tempI64[0],HEAP32[(((buf)+(76))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(80))>>2)] = (mtime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(ctime / 1000)>>>0,(tempDouble=Math.floor(ctime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(88))>>2)] = tempI64[0],HEAP32[(((buf)+(92))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(96))>>2)] = (ctime % 1000) * 1000;\r\n        (tempI64 = [stat.ino>>>0,(tempDouble=stat.ino,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(104))>>2)] = tempI64[0],HEAP32[(((buf)+(108))>>2)] = tempI64[1]);\r\n        return 0;\r\n      },doMsync:function(addr, stream, len, flags, offset) {\r\n        if (!FS.isFile(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (flags & 2) {\r\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\r\n          return 0;\r\n        }\r\n        var buffer = HEAPU8.slice(addr, addr + len);\r\n        FS.msync(stream, buffer, offset, len, flags);\r\n      },varargs:undefined,get:function() {\r\n        SYSCALLS.varargs += 4;\r\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\r\n        return ret;\r\n      },getStr:function(ptr) {\r\n        var ret = UTF8ToString(ptr);\r\n        return ret;\r\n      },getStreamFromFD:function(fd) {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) throw new FS.ErrnoError(8);\r\n        return stream;\r\n      }};\r\n  function ___syscall_chmod(path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.chmod(path, mode);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fchmod(fd, mode) {\r\n  try {\r\n  \r\n      FS.fchmod(fd, mode);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function setErrNo(value) {\r\n      HEAP32[((___errno_location())>>2)] = value;\r\n      return value;\r\n    }\r\n  \r\n  function ___syscall_fcntl64(fd, cmd, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (cmd) {\r\n        case 0: {\r\n          var arg = SYSCALLS.get();\r\n          if (arg < 0) {\r\n            return -28;\r\n          }\r\n          var newStream;\r\n          newStream = FS.createStream(stream, arg);\r\n          return newStream.fd;\r\n        }\r\n        case 1:\r\n        case 2:\r\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\r\n        case 3:\r\n          return stream.flags;\r\n        case 4: {\r\n          var arg = SYSCALLS.get();\r\n          stream.flags |= arg;\r\n          return 0;\r\n        }\r\n        case 5:\r\n        /* case 5: Currently in musl F_GETLK64 has same value as F_GETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */ {\r\n          \r\n          var arg = SYSCALLS.get();\r\n          var offset = 0;\r\n          // We're always unlocked.\r\n          HEAP16[(((arg)+(offset))>>1)] = 2;\r\n          return 0;\r\n        }\r\n        case 6:\r\n        case 7:\r\n        /* case 6: Currently in musl F_SETLK64 has same value as F_SETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\r\n        /* case 7: Currently in musl F_SETLKW64 has same value as F_SETLKW, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\r\n          \r\n          \r\n          return 0; // Pretend that the locking is successful.\r\n        case 16:\r\n        case 8:\r\n          return -28; // These are for sockets. We don't have them fully implemented yet.\r\n        case 9:\r\n          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fcntl() returns that, and we set errno ourselves.\r\n          setErrNo(28);\r\n          return -1;\r\n        default: {\r\n          return -28;\r\n        }\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fstat64(fd, buf) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      return SYSCALLS.doStat(FS.stat, stream.path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function convertI32PairToI53Checked(lo, hi) {\r\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  function ___syscall_ftruncate64(fd, length_low, length_high) {\r\n  try {\r\n  \r\n      var length = convertI32PairToI53Checked(length_low, length_high); if (isNaN(length)) return -61;\r\n      FS.ftruncate(fd, length);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n      return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\r\n    }\r\n  \r\n  function ___syscall_getcwd(buf, size) {\r\n  try {\r\n  \r\n      if (size === 0) return -28;\r\n      var cwd = FS.cwd();\r\n      var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\r\n      if (size < cwdLengthInBytes) return -68;\r\n      stringToUTF8(cwd, buf, size);\r\n      return cwdLengthInBytes;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function ___syscall_getdents64(fd, dirp, count) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd)\r\n      if (!stream.getdents) {\r\n        stream.getdents = FS.readdir(stream.path);\r\n      }\r\n  \r\n      var struct_size = 280;\r\n      var pos = 0;\r\n      var off = FS.llseek(stream, 0, 1);\r\n  \r\n      var idx = Math.floor(off / struct_size);\r\n  \r\n      while (idx < stream.getdents.length && pos + struct_size <= count) {\r\n        var id;\r\n        var type;\r\n        var name = stream.getdents[idx];\r\n        if (name === '.') {\r\n          id = stream.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else if (name === '..') {\r\n          var lookup = FS.lookupPath(stream.path, { parent: true });\r\n          id = lookup.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else {\r\n          var child = FS.lookupNode(stream.node, name);\r\n          id = child.id;\r\n          type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.\r\n                 FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.\r\n                 FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.\r\n                 8;                             // DT_REG, regular file.\r\n        }\r\n        (tempI64 = [id>>>0,(tempDouble=id,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((dirp + pos)>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(4))>>2)] = tempI64[1]);\r\n        (tempI64 = [(idx + 1) * struct_size>>>0,(tempDouble=(idx + 1) * struct_size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((dirp + pos)+(8))>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(12))>>2)] = tempI64[1]);\r\n        HEAP16[(((dirp + pos)+(16))>>1)] = 280;\r\n        HEAP8[(((dirp + pos)+(18))>>0)] = type;\r\n        stringToUTF8(name, dirp + pos + 19, 256);\r\n        pos += struct_size;\r\n        idx += 1;\r\n      }\r\n      FS.llseek(stream, idx * struct_size, 0);\r\n      return pos;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_ioctl(fd, op, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (op) {\r\n        case 21509:\r\n        case 21505: {\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21510:\r\n        case 21511:\r\n        case 21512:\r\n        case 21506:\r\n        case 21507:\r\n        case 21508: {\r\n          if (!stream.tty) return -59;\r\n          return 0; // no-op, not actually adjusting terminal settings\r\n        }\r\n        case 21519: {\r\n          if (!stream.tty) return -59;\r\n          var argp = SYSCALLS.get();\r\n          HEAP32[((argp)>>2)] = 0;\r\n          return 0;\r\n        }\r\n        case 21520: {\r\n          if (!stream.tty) return -59;\r\n          return -28; // not supported\r\n        }\r\n        case 21531: {\r\n          var argp = SYSCALLS.get();\r\n          return FS.ioctl(stream, op, argp);\r\n        }\r\n        case 21523: {\r\n          // TODO: in theory we should write to the winsize struct that gets\r\n          // passed in, but for now musl doesn't read anything on it\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21524: {\r\n          // TODO: technically, this ioctl call should change the window size.\r\n          // but, since emscripten doesn't have any concept of a terminal window\r\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        default: return -28; // not supported\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_lstat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.lstat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_mkdirat(dirfd, path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      // remove a trailing slash, if one - /a/b/ has basename of '', but\r\n      // we want to create b in the context of this function\r\n      path = PATH.normalize(path);\r\n      if (path[path.length-1] === '/') path = path.substr(0, path.length-1);\r\n      FS.mkdir(path, mode, 0);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_newfstatat(dirfd, path, buf, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      var nofollow = flags & 256;\r\n      var allowEmpty = flags & 4096;\r\n      flags = flags & (~6400);\r\n      path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\r\n      return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_openat(dirfd, path, flags, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      var mode = varargs ? SYSCALLS.get() : 0;\r\n      return FS.open(path, flags, mode).fd;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_rmdir(path) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.rmdir(path);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_stat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_unlinkat(dirfd, path, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      if (flags === 0) {\r\n        FS.unlink(path);\r\n      } else if (flags === 512) {\r\n        FS.rmdir(path);\r\n      } else {\r\n        abort('Invalid flags passed to unlinkat');\r\n      }\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  var nowIsMonotonic = true;;\r\n  function __emscripten_get_now_is_monotonic() {\r\n      return nowIsMonotonic;\r\n    }\r\n\r\n  function readI53FromI64(ptr) {\r\n      return HEAPU32[ptr>>2] + HEAP32[ptr+4>>2] * 4294967296;\r\n    }\r\n  \r\n  function isLeapYear(year) {\r\n        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);\r\n    }\r\n  \r\n  var MONTH_DAYS_LEAP_CUMULATIVE = [0,31,60,91,121,152,182,213,244,274,305,335];\r\n  \r\n  var MONTH_DAYS_REGULAR_CUMULATIVE = [0,31,59,90,120,151,181,212,243,273,304,334];\r\n  function ydayFromDate(date) {\r\n      var leap = isLeapYear(date.getFullYear());\r\n      var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\r\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1; // -1 since it's days since Jan 1\r\n  \r\n      return yday;\r\n    }\r\n  function __localtime_js(time, tmPtr) {\r\n      var date = new Date(readI53FromI64(time)*1000);\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getFullYear()-1900;\r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n  \r\n      var yday = ydayFromDate(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      HEAP32[(((tmPtr)+(36))>>2)] = -(date.getTimezoneOffset() * 60);\r\n  \r\n      // Attention: DST is in December in South, and some regions don't have DST at all.\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\r\n      HEAP32[(((tmPtr)+(32))>>2)] = dst;\r\n    }\r\n\r\n  function __mktime_js(tmPtr) {\r\n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\r\n                          HEAP32[(((tmPtr)+(16))>>2)],\r\n                          HEAP32[(((tmPtr)+(12))>>2)],\r\n                          HEAP32[(((tmPtr)+(8))>>2)],\r\n                          HEAP32[(((tmPtr)+(4))>>2)],\r\n                          HEAP32[((tmPtr)>>2)],\r\n                          0);\r\n  \r\n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\r\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\r\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\r\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\r\n      var guessedOffset = date.getTimezoneOffset();\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\r\n      if (dst < 0) {\r\n        // Attention: some regions don't have DST at all.\r\n        HEAP32[(((tmPtr)+(32))>>2)] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\r\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\r\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\r\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\r\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\r\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\r\n      }\r\n  \r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n      var yday = ydayFromDate(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      // To match expected behavior, update fields from date\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getYear();\r\n  \r\n      return (date.getTime() / 1000)|0;\r\n    }\r\n\r\n  \r\n  \r\n  function stringToNewUTF8(str) {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = _malloc(size);\r\n      if (ret) stringToUTF8(str, ret, size);\r\n      return ret;\r\n    }\r\n  function __tzset_js(timezone, daylight, tzname) {\r\n      // TODO: Use (malleable) environment variables instead of system settings.\r\n      var currentYear = new Date().getFullYear();\r\n      var winter = new Date(currentYear, 0, 1);\r\n      var summer = new Date(currentYear, 6, 1);\r\n      var winterOffset = winter.getTimezoneOffset();\r\n      var summerOffset = summer.getTimezoneOffset();\r\n  \r\n      // Local standard timezone offset. Local standard time is not adjusted for daylight savings.\r\n      // This code uses the fact that getTimezoneOffset returns a greater value during Standard Time versus Daylight Saving Time (DST).\r\n      // Thus it determines the expected output during Standard Time, and it compares whether the output of the given date the same (Standard) or less (DST).\r\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\r\n  \r\n      // timezone is specified as seconds west of UTC (\"The external variable\r\n      // `timezone` shall be set to the difference, in seconds, between\r\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\r\n      // as returned by stdTimezoneOffset.\r\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\r\n      HEAPU32[((timezone)>>2)] = stdTimezoneOffset * 60;\r\n  \r\n      HEAP32[((daylight)>>2)] = Number(winterOffset != summerOffset);\r\n  \r\n      function extractZone(date) {\r\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\r\n        return match ? match[1] : \"GMT\";\r\n      };\r\n      var winterName = extractZone(winter);\r\n      var summerName = extractZone(summer);\r\n      var winterNamePtr = stringToNewUTF8(winterName);\r\n      var summerNamePtr = stringToNewUTF8(summerName);\r\n      if (summerOffset < winterOffset) {\r\n        // Northern hemisphere\r\n        HEAPU32[((tzname)>>2)] = winterNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = summerNamePtr;\r\n      } else {\r\n        HEAPU32[((tzname)>>2)] = summerNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = winterNamePtr;\r\n      }\r\n    }\r\n\r\n  function _abort() {\r\n      abort('');\r\n    }\r\n\r\n  function _emscripten_set_main_loop_timing(mode, value) {\r\n      Browser.mainLoop.timingMode = mode;\r\n      Browser.mainLoop.timingValue = value;\r\n  \r\n      if (!Browser.mainLoop.func) {\r\n        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.\r\n      }\r\n  \r\n      if (!Browser.mainLoop.running) {\r\n        \r\n        Browser.mainLoop.running = true;\r\n      }\r\n      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {\r\n          var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now())|0;\r\n          setTimeout(Browser.mainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop\r\n        };\r\n        Browser.mainLoop.method = 'timeout';\r\n      } else if (mode == 1 /*EM_TIMING_RAF*/) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {\r\n          Browser.requestAnimationFrame(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'rAF';\r\n      } else if (mode == 2 /*EM_TIMING_SETIMMEDIATE*/) {\r\n        if (typeof setImmediate == 'undefined') {\r\n          // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)\r\n          var setImmediates = [];\r\n          var emscriptenMainLoopMessageId = 'setimmediate';\r\n          /** @param {Event} event */\r\n          var Browser_setImmediate_messageHandler = (event) => {\r\n            // When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,\r\n            // so check for both cases.\r\n            if (event.data === emscriptenMainLoopMessageId || event.data.target === emscriptenMainLoopMessageId) {\r\n              event.stopPropagation();\r\n              setImmediates.shift()();\r\n            }\r\n          };\r\n          addEventListener(\"message\", Browser_setImmediate_messageHandler, true);\r\n          setImmediate = /** @type{function(function(): ?, ...?): number} */(function Browser_emulated_setImmediate(func) {\r\n            setImmediates.push(func);\r\n            if (ENVIRONMENT_IS_WORKER) {\r\n              if (Module['setImmediates'] === undefined) Module['setImmediates'] = [];\r\n              Module['setImmediates'].push(func);\r\n              postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js\r\n            } else postMessage(emscriptenMainLoopMessageId, \"*\"); // On the main thread, can just send the message to itself.\r\n          })\r\n        }\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {\r\n          setImmediate(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'immediate';\r\n      }\r\n      return 0;\r\n    }\r\n  \r\n  var _emscripten_get_now;_emscripten_get_now = () => performance.now();\r\n  ;\r\n  \r\n  \r\n    /**\r\n     * @param {number=} arg\r\n     * @param {boolean=} noSetTiming\r\n     */\r\n  function setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop, arg, noSetTiming) {\r\n      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');\r\n  \r\n      Browser.mainLoop.func = browserIterationFunc;\r\n      Browser.mainLoop.arg = arg;\r\n  \r\n      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;\r\n      function checkIsRunning() {\r\n        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) {\r\n          \r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n  \r\n      // We create the loop runner here but it is not actually running until\r\n      // _emscripten_set_main_loop_timing is called (which might happen a\r\n      // later time).  This member signifies that the current runner has not\r\n      // yet been started so that we can call runtimeKeepalivePush when it\r\n      // gets it timing set for the first time.\r\n      Browser.mainLoop.running = false;\r\n      Browser.mainLoop.runner = function Browser_mainLoop_runner() {\r\n        if (ABORT) return;\r\n        if (Browser.mainLoop.queue.length > 0) {\r\n          var start = Date.now();\r\n          var blocker = Browser.mainLoop.queue.shift();\r\n          blocker.func(blocker.arg);\r\n          if (Browser.mainLoop.remainingBlockers) {\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);\r\n            if (blocker.counted) {\r\n              Browser.mainLoop.remainingBlockers = next;\r\n            } else {\r\n              // not counted, but move the progress along a tiny bit\r\n              next = next + 0.5; // do not steal all the next one's progress\r\n              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;\r\n            }\r\n          }\r\n          out('main loop blocker \"' + blocker.name + '\" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);\r\n          Browser.mainLoop.updateStatus();\r\n  \r\n          // catches pause/resume main loop from blocker execution\r\n          if (!checkIsRunning()) return;\r\n  \r\n          setTimeout(Browser.mainLoop.runner, 0);\r\n          return;\r\n        }\r\n  \r\n        // catch pauses from non-main loop sources\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Implement very basic swap interval control\r\n        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;\r\n        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {\r\n          // Not the scheduled time to render this frame - skip.\r\n          Browser.mainLoop.scheduler();\r\n          return;\r\n        } else if (Browser.mainLoop.timingMode == 0/*EM_TIMING_SETTIMEOUT*/) {\r\n          Browser.mainLoop.tickStartTime = _emscripten_get_now();\r\n        }\r\n  \r\n        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize\r\n        // VBO double-buffering and reduce GPU stalls.\r\n        GL.newRenderingFrameStarted();\r\n  \r\n        Browser.mainLoop.runIter(browserIterationFunc);\r\n  \r\n        // catch pauses from the main loop itself\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able\r\n        // to queue the newest produced audio samples.\r\n        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()\r\n        //       do not need to be hardcoded into this function, but can be more generic.\r\n        if (typeof SDL == 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (!noSetTiming) {\r\n        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);\r\n        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (simulateInfiniteLoop) {\r\n        throw 'unwind';\r\n      }\r\n    }\r\n  \r\n  function handleException(e) {\r\n      // Certain exception types we do not treat as errors since they are used for\r\n      // internal control flow.\r\n      // 1. ExitStatus, which is thrown by exit()\r\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\r\n      //    that wish to return to JS event loop.\r\n      if (e instanceof ExitStatus || e == 'unwind') {\r\n        return EXITSTATUS;\r\n      }\r\n      quit_(1, e);\r\n    }\r\n  \r\n  \r\n  function _proc_exit(code) {\r\n      EXITSTATUS = code;\r\n      if (!keepRuntimeAlive()) {\r\n        if (Module['onExit']) Module['onExit'](code);\r\n        ABORT = true;\r\n      }\r\n      quit_(code, new ExitStatus(code));\r\n    }\r\n  /** @suppress {duplicate } */\r\n  /** @param {boolean|number=} implicit */\r\n  function exitJS(status, implicit) {\r\n      EXITSTATUS = status;\r\n  \r\n      _proc_exit(status);\r\n    }\r\n  var _exit = exitJS;\r\n  \r\n  function maybeExit() {\r\n      if (!keepRuntimeAlive()) {\r\n        try {\r\n          _exit(EXITSTATUS);\r\n        } catch (e) {\r\n          handleException(e);\r\n        }\r\n      }\r\n    }\r\n  function callUserCallback(func) {\r\n      if (ABORT) {\r\n        return;\r\n      }\r\n      try {\r\n        func();\r\n        maybeExit();\r\n      } catch (e) {\r\n        handleException(e);\r\n      }\r\n    }\r\n  \r\n  /** @param {number=} timeout */\r\n  function safeSetTimeout(func, timeout) {\r\n      \r\n      return setTimeout(() => {\r\n        \r\n        callUserCallback(func);\r\n      }, timeout);\r\n    }\r\n  \r\n  function warnOnce(text) {\r\n      if (!warnOnce.shown) warnOnce.shown = {};\r\n      if (!warnOnce.shown[text]) {\r\n        warnOnce.shown[text] = 1;\r\n        err(text);\r\n      }\r\n    }\r\n  \r\n  \r\n  var Browser = {mainLoop:{running:false,scheduler:null,method:\"\",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function() {\r\n          Browser.mainLoop.scheduler = null;\r\n          // Incrementing this signals the previous main loop that it's now become old, and it must return.\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n        },resume:function() {\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n          var timingMode = Browser.mainLoop.timingMode;\r\n          var timingValue = Browser.mainLoop.timingValue;\r\n          var func = Browser.mainLoop.func;\r\n          Browser.mainLoop.func = null;\r\n          // do not set timing and call scheduler, we will do it on the next lines\r\n          setMainLoop(func, 0, false, Browser.mainLoop.arg, true);\r\n          _emscripten_set_main_loop_timing(timingMode, timingValue);\r\n          Browser.mainLoop.scheduler();\r\n        },updateStatus:function() {\r\n          if (Module['setStatus']) {\r\n            var message = Module['statusMessage'] || 'Please wait...';\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var expected = Browser.mainLoop.expectedBlockers;\r\n            if (remaining) {\r\n              if (remaining < expected) {\r\n                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');\r\n              } else {\r\n                Module['setStatus'](message);\r\n              }\r\n            } else {\r\n              Module['setStatus']('');\r\n            }\r\n          }\r\n        },runIter:function(func) {\r\n          if (ABORT) return;\r\n          if (Module['preMainLoop']) {\r\n            var preRet = Module['preMainLoop']();\r\n            if (preRet === false) {\r\n              return; // |return false| skips a frame\r\n            }\r\n          }\r\n          callUserCallback(func);\r\n          if (Module['postMainLoop']) Module['postMainLoop']();\r\n        }},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function() {\r\n        if (!Module[\"preloadPlugins\"]) Module[\"preloadPlugins\"] = []; // needs to exist even in workers\r\n  \r\n        if (Browser.initted) return;\r\n        Browser.initted = true;\r\n  \r\n        try {\r\n          new Blob();\r\n          Browser.hasBlobConstructor = true;\r\n        } catch(e) {\r\n          Browser.hasBlobConstructor = false;\r\n          err(\"warning: no blob constructor, cannot create blobs with mimetypes\");\r\n        }\r\n        Browser.BlobBuilder = typeof MozBlobBuilder != \"undefined\" ? MozBlobBuilder : (typeof WebKitBlobBuilder != \"undefined\" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? err(\"warning: no BlobBuilder\") : null));\r\n        Browser.URLObject = typeof window != \"undefined\" ? (window.URL ? window.URL : window.webkitURL) : undefined;\r\n        if (!Module.noImageDecoding && typeof Browser.URLObject == 'undefined') {\r\n          err(\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\");\r\n          Module.noImageDecoding = true;\r\n        }\r\n  \r\n        // Support for plugins that can process preloaded files. You can add more of these to\r\n        // your app by creating and appending to Module.preloadPlugins.\r\n        //\r\n        // Each plugin is asked if it can handle a file based on the file's name. If it can,\r\n        // it is given the file's raw data. When it is done, it calls a callback with the file's\r\n        // (possibly modified) data. For example, a plugin might decompress a file, or it\r\n        // might create some side data structure for use later (like an Image element, etc.).\r\n  \r\n        var imagePlugin = {};\r\n        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {\r\n          return !Module.noImageDecoding && /\\.(jpg|jpeg|png|bmp)$/i.test(name);\r\n        };\r\n        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {\r\n          var b = null;\r\n          if (Browser.hasBlobConstructor) {\r\n            try {\r\n              b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n              if (b.size !== byteArray.length) { // Safari bug #118630\r\n                // Safari's Blob can only take an ArrayBuffer\r\n                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });\r\n              }\r\n            } catch(e) {\r\n              warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');\r\n            }\r\n          }\r\n          if (!b) {\r\n            var bb = new Browser.BlobBuilder();\r\n            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range\r\n            b = bb.getBlob();\r\n          }\r\n          var url = Browser.URLObject.createObjectURL(b);\r\n          var img = new Image();\r\n          img.onload = () => {\r\n            assert(img.complete, 'Image ' + name + ' could not be decoded');\r\n            var canvas = /** @type {!HTMLCanvasElement} */ (document.createElement('canvas'));\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            var ctx = canvas.getContext('2d');\r\n            ctx.drawImage(img, 0, 0);\r\n            preloadedImages[name] = canvas;\r\n            Browser.URLObject.revokeObjectURL(url);\r\n            if (onload) onload(byteArray);\r\n          };\r\n          img.onerror = (event) => {\r\n            out('Image ' + url + ' could not be decoded');\r\n            if (onerror) onerror();\r\n          };\r\n          img.src = url;\r\n        };\r\n        Module['preloadPlugins'].push(imagePlugin);\r\n  \r\n        var audioPlugin = {};\r\n        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {\r\n          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };\r\n        };\r\n        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {\r\n          var done = false;\r\n          function finish(audio) {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = audio;\r\n            if (onload) onload(byteArray);\r\n          }\r\n          function fail() {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = new Audio(); // empty shim\r\n            if (onerror) onerror();\r\n          }\r\n          if (Browser.hasBlobConstructor) {\r\n            try {\r\n              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n            } catch(e) {\r\n              return fail();\r\n            }\r\n            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!\r\n            var audio = new Audio();\r\n            audio.addEventListener('canplaythrough', () => finish(audio), false); // use addEventListener due to chromium bug 124926\r\n            audio.onerror = function audio_onerror(event) {\r\n              if (done) return;\r\n              err('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');\r\n              function encode64(data) {\r\n                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n                var PAD = '=';\r\n                var ret = '';\r\n                var leftchar = 0;\r\n                var leftbits = 0;\r\n                for (var i = 0; i < data.length; i++) {\r\n                  leftchar = (leftchar << 8) | data[i];\r\n                  leftbits += 8;\r\n                  while (leftbits >= 6) {\r\n                    var curr = (leftchar >> (leftbits-6)) & 0x3f;\r\n                    leftbits -= 6;\r\n                    ret += BASE[curr];\r\n                  }\r\n                }\r\n                if (leftbits == 2) {\r\n                  ret += BASE[(leftchar&3) << 4];\r\n                  ret += PAD + PAD;\r\n                } else if (leftbits == 4) {\r\n                  ret += BASE[(leftchar&0xf) << 2];\r\n                  ret += PAD;\r\n                }\r\n                return ret;\r\n              }\r\n              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);\r\n              finish(audio); // we don't wait for confirmation this worked - but it's worth trying\r\n            };\r\n            audio.src = url;\r\n            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror\r\n            safeSetTimeout(() => {\r\n              finish(audio); // try to use it even though it is not necessarily ready to play\r\n            }, 10000);\r\n          } else {\r\n            return fail();\r\n          }\r\n        };\r\n        Module['preloadPlugins'].push(audioPlugin);\r\n  \r\n        // Canvas event setup\r\n  \r\n        function pointerLockChange() {\r\n          Browser.pointerLock = document['pointerLockElement'] === Module['canvas'] ||\r\n                                document['mozPointerLockElement'] === Module['canvas'] ||\r\n                                document['webkitPointerLockElement'] === Module['canvas'] ||\r\n                                document['msPointerLockElement'] === Module['canvas'];\r\n        }\r\n        var canvas = Module['canvas'];\r\n        if (canvas) {\r\n          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module\r\n          // Module['forcedAspectRatio'] = 4 / 3;\r\n  \r\n          canvas.requestPointerLock = canvas['requestPointerLock'] ||\r\n                                      canvas['mozRequestPointerLock'] ||\r\n                                      canvas['webkitRequestPointerLock'] ||\r\n                                      canvas['msRequestPointerLock'] ||\r\n                                      (() => {});\r\n          canvas.exitPointerLock = document['exitPointerLock'] ||\r\n                                   document['mozExitPointerLock'] ||\r\n                                   document['webkitExitPointerLock'] ||\r\n                                   document['msExitPointerLock'] ||\r\n                                   (() => {}); // no-op if function does not exist\r\n          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\r\n  \r\n          document.addEventListener('pointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mozpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mspointerlockchange', pointerLockChange, false);\r\n  \r\n          if (Module['elementPointerLock']) {\r\n            canvas.addEventListener(\"click\", (ev) => {\r\n              if (!Browser.pointerLock && Module['canvas'].requestPointerLock) {\r\n                Module['canvas'].requestPointerLock();\r\n                ev.preventDefault();\r\n              }\r\n            }, false);\r\n          }\r\n        }\r\n      },handledByPreloadPlugin:function(byteArray, fullname, finish, onerror) {\r\n        // Ensure plugins are ready.\r\n        Browser.init();\r\n  \r\n        var handled = false;\r\n        Module['preloadPlugins'].forEach((plugin) => {\r\n          if (handled) return;\r\n          if (plugin['canHandle'](fullname)) {\r\n            plugin['handle'](byteArray, fullname, finish, onerror);\r\n            handled = true;\r\n          }\r\n        });\r\n        return handled;\r\n      },createContext:function(/** @type {HTMLCanvasElement} */ canvas, useWebGL, setInModule, webGLContextAttributes) {\r\n        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.\r\n  \r\n        var ctx;\r\n        var contextHandle;\r\n        if (useWebGL) {\r\n          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.\r\n          var contextAttributes = {\r\n            antialias: false,\r\n            alpha: false,\r\n            majorVersion: (typeof WebGL2RenderingContext != 'undefined') ? 2 : 1,\r\n          };\r\n  \r\n          if (webGLContextAttributes) {\r\n            for (var attribute in webGLContextAttributes) {\r\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\r\n            }\r\n          }\r\n  \r\n          // This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not\r\n          // actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function\r\n          // Browser.createContext() should not even be emitted.\r\n          if (typeof GL != 'undefined') {\r\n            contextHandle = GL.createContext(canvas, contextAttributes);\r\n            if (contextHandle) {\r\n              ctx = GL.getContext(contextHandle).GLctx;\r\n            }\r\n          }\r\n        } else {\r\n          ctx = canvas.getContext('2d');\r\n        }\r\n  \r\n        if (!ctx) return null;\r\n  \r\n        if (setInModule) {\r\n          if (!useWebGL) assert(typeof GLctx == 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');\r\n  \r\n          Module.ctx = ctx;\r\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\r\n          Module.useWebGL = useWebGL;\r\n          Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\r\n          Browser.init();\r\n        }\r\n        return ctx;\r\n      },destroyContext:function(canvas, useWebGL, setInModule) {},fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:function(lockPointer, resizeCanvas) {\r\n        Browser.lockPointer = lockPointer;\r\n        Browser.resizeCanvas = resizeCanvas;\r\n        if (typeof Browser.lockPointer == 'undefined') Browser.lockPointer = true;\r\n        if (typeof Browser.resizeCanvas == 'undefined') Browser.resizeCanvas = false;\r\n  \r\n        var canvas = Module['canvas'];\r\n        function fullscreenChange() {\r\n          Browser.isFullscreen = false;\r\n          var canvasContainer = canvas.parentNode;\r\n          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n               document['webkitCurrentFullScreenElement']) === canvasContainer) {\r\n            canvas.exitFullscreen = Browser.exitFullscreen;\r\n            if (Browser.lockPointer) canvas.requestPointerLock();\r\n            Browser.isFullscreen = true;\r\n            if (Browser.resizeCanvas) {\r\n              Browser.setFullscreenCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          } else {\r\n            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen\r\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\r\n            canvasContainer.parentNode.removeChild(canvasContainer);\r\n  \r\n            if (Browser.resizeCanvas) {\r\n              Browser.setWindowedCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          }\r\n          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullscreen);\r\n          if (Module['onFullscreen']) Module['onFullscreen'](Browser.isFullscreen);\r\n        }\r\n  \r\n        if (!Browser.fullscreenHandlersInstalled) {\r\n          Browser.fullscreenHandlersInstalled = true;\r\n          document.addEventListener('fullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('mozfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('MSFullscreenChange', fullscreenChange, false);\r\n        }\r\n  \r\n        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root\r\n        var canvasContainer = document.createElement(\"div\");\r\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\r\n        canvasContainer.appendChild(canvas);\r\n  \r\n        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)\r\n        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||\r\n                                            canvasContainer['mozRequestFullScreen'] ||\r\n                                            canvasContainer['msRequestFullscreen'] ||\r\n                                           (canvasContainer['webkitRequestFullscreen'] ? () => canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) : null) ||\r\n                                           (canvasContainer['webkitRequestFullScreen'] ? () => canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) : null);\r\n  \r\n        canvasContainer.requestFullscreen();\r\n      },exitFullscreen:function() {\r\n        // This is workaround for chrome. Trying to exit from fullscreen\r\n        // not in fullscreen state will cause \"TypeError: Document not active\"\r\n        // in chrome. See https://github.com/emscripten-core/emscripten/pull/8236\r\n        if (!Browser.isFullscreen) {\r\n          return false;\r\n        }\r\n  \r\n        var CFS = document['exitFullscreen'] ||\r\n                  document['cancelFullScreen'] ||\r\n                  document['mozCancelFullScreen'] ||\r\n                  document['msExitFullscreen'] ||\r\n                  document['webkitCancelFullScreen'] ||\r\n            (() => {});\r\n        CFS.apply(document, []);\r\n        return true;\r\n      },nextRAF:0,fakeRequestAnimationFrame:function(func) {\r\n        // try to keep 60fps between calls to here\r\n        var now = Date.now();\r\n        if (Browser.nextRAF === 0) {\r\n          Browser.nextRAF = now + 1000/60;\r\n        } else {\r\n          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0\r\n            Browser.nextRAF += 1000/60;\r\n          }\r\n        }\r\n        var delay = Math.max(Browser.nextRAF - now, 0);\r\n        setTimeout(func, delay);\r\n      },requestAnimationFrame:function(func) {\r\n        if (typeof requestAnimationFrame == 'function') {\r\n          requestAnimationFrame(func);\r\n          return;\r\n        }\r\n        var RAF = Browser.fakeRequestAnimationFrame;\r\n        RAF(func);\r\n      },safeSetTimeout:function(func, timeout) {\r\n        // Legacy function, this is used by the SDL2 port so we need to keep it\r\n        // around at least until that is updated.\r\n        // See https://github.com/libsdl-org/SDL/pull/6304\r\n        return safeSetTimeout(func, timeout);\r\n      },safeRequestAnimationFrame:function(func) {\r\n        \r\n        return Browser.requestAnimationFrame(() => {\r\n          \r\n          callUserCallback(func);\r\n        });\r\n      },getMimetype:function(name) {\r\n        return {\r\n          'jpg': 'image/jpeg',\r\n          'jpeg': 'image/jpeg',\r\n          'png': 'image/png',\r\n          'bmp': 'image/bmp',\r\n          'ogg': 'audio/ogg',\r\n          'wav': 'audio/wav',\r\n          'mp3': 'audio/mpeg'\r\n        }[name.substr(name.lastIndexOf('.')+1)];\r\n      },getUserMedia:function(func) {\r\n        if (!window.getUserMedia) {\r\n          window.getUserMedia = navigator['getUserMedia'] ||\r\n                                navigator['mozGetUserMedia'];\r\n        }\r\n        window.getUserMedia(func);\r\n      },getMovementX:function(event) {\r\n        return event['movementX'] ||\r\n               event['mozMovementX'] ||\r\n               event['webkitMovementX'] ||\r\n               0;\r\n      },getMovementY:function(event) {\r\n        return event['movementY'] ||\r\n               event['mozMovementY'] ||\r\n               event['webkitMovementY'] ||\r\n               0;\r\n      },getMouseWheelDelta:function(event) {\r\n        var delta = 0;\r\n        switch (event.type) {\r\n          case 'DOMMouseScroll':\r\n            // 3 lines make up a step\r\n            delta = event.detail / 3;\r\n            break;\r\n          case 'mousewheel':\r\n            // 120 units make up a step\r\n            delta = event.wheelDelta / 120;\r\n            break;\r\n          case 'wheel':\r\n            delta = event.deltaY\r\n            switch (event.deltaMode) {\r\n              case 0:\r\n                // DOM_DELTA_PIXEL: 100 pixels make up a step\r\n                delta /= 100;\r\n                break;\r\n              case 1:\r\n                // DOM_DELTA_LINE: 3 lines make up a step\r\n                delta /= 3;\r\n                break;\r\n              case 2:\r\n                // DOM_DELTA_PAGE: A page makes up 80 steps\r\n                delta *= 80;\r\n                break;\r\n              default:\r\n                throw 'unrecognized mouse wheel delta mode: ' + event.deltaMode;\r\n            }\r\n            break;\r\n          default:\r\n            throw 'unrecognized mouse wheel event: ' + event.type;\r\n        }\r\n        return delta;\r\n      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function(event) { // event should be mousemove, mousedown or mouseup\r\n        if (Browser.pointerLock) {\r\n          // When the pointer is locked, calculate the coordinates\r\n          // based on the movement of the mouse.\r\n          // Workaround for Firefox bug 764498\r\n          if (event.type != 'mousemove' &&\r\n              ('mozMovementX' in event)) {\r\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\r\n          } else {\r\n            Browser.mouseMovementX = Browser.getMovementX(event);\r\n            Browser.mouseMovementY = Browser.getMovementY(event);\r\n          }\r\n  \r\n          // check if SDL is available\r\n          if (typeof SDL != \"undefined\") {\r\n            Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;\r\n            Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;\r\n          } else {\r\n            // just add the mouse delta to the current absolut mouse position\r\n            // FIXME: ideally this should be clamped against the canvas size and zero\r\n            Browser.mouseX += Browser.mouseMovementX;\r\n            Browser.mouseY += Browser.mouseMovementY;\r\n          }\r\n        } else {\r\n          // Otherwise, calculate the movement based on the changes\r\n          // in the coordinates.\r\n          var rect = Module[\"canvas\"].getBoundingClientRect();\r\n          var cw = Module[\"canvas\"].width;\r\n          var ch = Module[\"canvas\"].height;\r\n  \r\n          // Neither .scrollX or .pageXOffset are defined in a spec, but\r\n          // we prefer .scrollX because it is currently in a spec draft.\r\n          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)\r\n          var scrollX = ((typeof window.scrollX != 'undefined') ? window.scrollX : window.pageXOffset);\r\n          var scrollY = ((typeof window.scrollY != 'undefined') ? window.scrollY : window.pageYOffset);\r\n  \r\n          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {\r\n            var touch = event.touch;\r\n            if (touch === undefined) {\r\n              return; // the \"touch\" property is only defined in SDL\r\n  \r\n            }\r\n            var adjustedX = touch.pageX - (scrollX + rect.left);\r\n            var adjustedY = touch.pageY - (scrollY + rect.top);\r\n  \r\n            adjustedX = adjustedX * (cw / rect.width);\r\n            adjustedY = adjustedY * (ch / rect.height);\r\n  \r\n            var coords = { x: adjustedX, y: adjustedY };\r\n  \r\n            if (event.type === 'touchstart') {\r\n              Browser.lastTouches[touch.identifier] = coords;\r\n              Browser.touches[touch.identifier] = coords;\r\n            } else if (event.type === 'touchend' || event.type === 'touchmove') {\r\n              var last = Browser.touches[touch.identifier];\r\n              if (!last) last = coords;\r\n              Browser.lastTouches[touch.identifier] = last;\r\n              Browser.touches[touch.identifier] = coords;\r\n            }\r\n            return;\r\n          }\r\n  \r\n          var x = event.pageX - (scrollX + rect.left);\r\n          var y = event.pageY - (scrollY + rect.top);\r\n  \r\n          // the canvas might be CSS-scaled compared to its backbuffer;\r\n          // SDL-using content will want mouse coordinates in terms\r\n          // of backbuffer units.\r\n          x = x * (cw / rect.width);\r\n          y = y * (ch / rect.height);\r\n  \r\n          Browser.mouseMovementX = x - Browser.mouseX;\r\n          Browser.mouseMovementY = y - Browser.mouseY;\r\n          Browser.mouseX = x;\r\n          Browser.mouseY = y;\r\n        }\r\n      },resizeListeners:[],updateResizeListeners:function() {\r\n        var canvas = Module['canvas'];\r\n        Browser.resizeListeners.forEach((listener) => listener(canvas.width, canvas.height));\r\n      },setCanvasSize:function(width, height, noUpdates) {\r\n        var canvas = Module['canvas'];\r\n        Browser.updateCanvasDimensions(canvas, width, height);\r\n        if (!noUpdates) Browser.updateResizeListeners();\r\n      },windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:function() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags | 0x00800000; // set SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },setWindowedCanvasSize:function() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },updateCanvasDimensions:function(canvas, wNative, hNative) {\r\n        if (wNative && hNative) {\r\n          canvas.widthNative = wNative;\r\n          canvas.heightNative = hNative;\r\n        } else {\r\n          wNative = canvas.widthNative;\r\n          hNative = canvas.heightNative;\r\n        }\r\n        var w = wNative;\r\n        var h = hNative;\r\n        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {\r\n          if (w/h < Module['forcedAspectRatio']) {\r\n            w = Math.round(h * Module['forcedAspectRatio']);\r\n          } else {\r\n            h = Math.round(w / Module['forcedAspectRatio']);\r\n          }\r\n        }\r\n        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {\r\n           var factor = Math.min(screen.width / w, screen.height / h);\r\n           w = Math.round(w * factor);\r\n           h = Math.round(h * factor);\r\n        }\r\n        if (Browser.resizeCanvas) {\r\n          if (canvas.width  != w) canvas.width  = w;\r\n          if (canvas.height != h) canvas.height = h;\r\n          if (typeof canvas.style != 'undefined') {\r\n            canvas.style.removeProperty( \"width\");\r\n            canvas.style.removeProperty(\"height\");\r\n          }\r\n        } else {\r\n          if (canvas.width  != wNative) canvas.width  = wNative;\r\n          if (canvas.height != hNative) canvas.height = hNative;\r\n          if (typeof canvas.style != 'undefined') {\r\n            if (w != wNative || h != hNative) {\r\n              canvas.style.setProperty( \"width\", w + \"px\", \"important\");\r\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\r\n            } else {\r\n              canvas.style.removeProperty( \"width\");\r\n              canvas.style.removeProperty(\"height\");\r\n            }\r\n          }\r\n        }\r\n      }};\r\n  \r\n  var EGL = {errorCode:12288,defaultDisplayInitialized:false,currentContext:0,currentReadSurface:0,currentDrawSurface:0,contextAttributes:{alpha:false,depth:false,stencil:false,antialias:false},stringCache:{},setErrorCode:function(code) {\r\n        EGL.errorCode = code;\r\n      },chooseConfig:function(display, attribList, config, config_size, numConfigs) {\r\n        if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n          EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n          return 0;\r\n        }\r\n  \r\n        if (attribList) {\r\n          // read attribList if it is non-null\r\n          for (;;) {\r\n            var param = HEAP32[((attribList)>>2)];\r\n            if (param == 0x3021 /*EGL_ALPHA_SIZE*/) {\r\n              var alphaSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.alpha = (alphaSize > 0);\r\n            } else if (param == 0x3025 /*EGL_DEPTH_SIZE*/) {\r\n              var depthSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.depth = (depthSize > 0);\r\n            } else if (param == 0x3026 /*EGL_STENCIL_SIZE*/) {\r\n              var stencilSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.stencil = (stencilSize > 0);\r\n            } else if (param == 0x3031 /*EGL_SAMPLES*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples > 0);\r\n            } else if (param == 0x3032 /*EGL_SAMPLE_BUFFERS*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples == 1);\r\n            } else if (param == 0x3100 /*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/) {\r\n              var requestedPriority = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.lowLatency = (requestedPriority != 0x3103 /*EGL_CONTEXT_PRIORITY_LOW_IMG*/);\r\n            } else if (param == 0x3038 /*EGL_NONE*/) {\r\n                break;\r\n            }\r\n            attribList += 8;\r\n          }\r\n        }\r\n  \r\n        if ((!config || !config_size) && !numConfigs) {\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n        }\r\n        if (numConfigs) {\r\n          HEAP32[((numConfigs)>>2)] = 1; // Total number of supported configs: 1.\r\n        }\r\n        if (config && config_size > 0) {\r\n          HEAP32[((config)>>2)] = 62002;\r\n        }\r\n  \r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }};\r\n  function _eglBindAPI(api) {\r\n      if (api == 0x30A0 /* EGL_OPENGL_ES_API */) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }\r\n      // if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {\r\n      EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n      return 0;\r\n    }\r\n\r\n  function _eglChooseConfig(display, attrib_list, configs, config_size, numConfigs) {\r\n      return EGL.chooseConfig(display, attrib_list, configs, config_size, numConfigs);\r\n    }\r\n\r\n  function webgl_enable_ANGLE_instanced_arrays(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 26 and Google Chrome 30 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('ANGLE_instanced_arrays');\r\n      if (ext) {\r\n        ctx['vertexAttribDivisor'] = function(index, divisor) { ext['vertexAttribDivisorANGLE'](index, divisor); };\r\n        ctx['drawArraysInstanced'] = function(mode, first, count, primcount) { ext['drawArraysInstancedANGLE'](mode, first, count, primcount); };\r\n        ctx['drawElementsInstanced'] = function(mode, count, type, indices, primcount) { ext['drawElementsInstancedANGLE'](mode, count, type, indices, primcount); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_OES_vertex_array_object(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 25 and WebKit 536.28/desktop Safari 6.0.3 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('OES_vertex_array_object');\r\n      if (ext) {\r\n        ctx['createVertexArray'] = function() { return ext['createVertexArrayOES'](); };\r\n        ctx['deleteVertexArray'] = function(vao) { ext['deleteVertexArrayOES'](vao); };\r\n        ctx['bindVertexArray'] = function(vao) { ext['bindVertexArrayOES'](vao); };\r\n        ctx['isVertexArray'] = function(vao) { return ext['isVertexArrayOES'](vao); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_draw_buffers(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 28 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('WEBGL_draw_buffers');\r\n      if (ext) {\r\n        ctx['drawBuffers'] = function(n, bufs) { ext['drawBuffersWEBGL'](n, bufs); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(ctx) {\r\n      // Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.dibvbi = ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance'));\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(ctx) {\r\n      // Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.mdibvbi = ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_multi_draw(ctx) {\r\n      // Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.\r\n      return !!(ctx.multiDrawWebgl = ctx.getExtension('WEBGL_multi_draw'));\r\n    }\r\n  \r\n  \r\n  var GL = {counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:[],offscreenCanvases:{},queries:[],samplers:[],transformFeedbacks:[],syncs:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],stringCache:{},stringiCache:{},unpackAlignment:4,recordError:function recordError(errorCode) {\r\n        if (!GL.lastError) {\r\n          GL.lastError = errorCode;\r\n        }\r\n      },getNewId:function(table) {\r\n        var ret = GL.counter++;\r\n        for (var i = table.length; i < ret; i++) {\r\n          table[i] = null;\r\n        }\r\n        return ret;\r\n      },MAX_TEMP_BUFFER_SIZE:2097152,numTempVertexBuffersPerSize:64,log2ceilLookup:function(i) {\r\n        return 32 - Math.clz32(i === 0 ? 0 : i - 1);\r\n      },generateTempBuffers:function(quads, context) {\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        context.tempVertexBufferCounters1 = [];\r\n        context.tempVertexBufferCounters2 = [];\r\n        context.tempVertexBufferCounters1.length = context.tempVertexBufferCounters2.length = largestIndex+1;\r\n        context.tempVertexBuffers1 = [];\r\n        context.tempVertexBuffers2 = [];\r\n        context.tempVertexBuffers1.length = context.tempVertexBuffers2.length = largestIndex+1;\r\n        context.tempIndexBuffers = [];\r\n        context.tempIndexBuffers.length = largestIndex+1;\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          context.tempIndexBuffers[i] = null; // Created on-demand\r\n          context.tempVertexBufferCounters1[i] = context.tempVertexBufferCounters2[i] = 0;\r\n          var ringbufferLength = GL.numTempVertexBuffersPerSize;\r\n          context.tempVertexBuffers1[i] = [];\r\n          context.tempVertexBuffers2[i] = [];\r\n          var ringbuffer1 = context.tempVertexBuffers1[i];\r\n          var ringbuffer2 = context.tempVertexBuffers2[i];\r\n          ringbuffer1.length = ringbuffer2.length = ringbufferLength;\r\n          for (var j = 0; j < ringbufferLength; ++j) {\r\n            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand\r\n          }\r\n        }\r\n  \r\n        if (quads) {\r\n          // GL_QUAD indexes can be precalculated\r\n          context.tempQuadIndexBuffer = GLctx.createBuffer();\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, context.tempQuadIndexBuffer);\r\n          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;\r\n          var quadIndexes = new Uint16Array(numIndexes);\r\n          var i = 0, v = 0;\r\n          while (1) {\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+1;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+3;\r\n            if (i >= numIndexes) break;\r\n            v += 4;\r\n          }\r\n          context.GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, quadIndexes, 0x88E4 /*GL_STATIC_DRAW*/);\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n        }\r\n      },getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ringbuffer = GL.currentContext.tempVertexBuffers1[idx];\r\n        var nextFreeBufferIndex = GL.currentContext.tempVertexBufferCounters1[idx];\r\n        GL.currentContext.tempVertexBufferCounters1[idx] = (GL.currentContext.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);\r\n        var vbo = ringbuffer[nextFreeBufferIndex];\r\n        if (vbo) {\r\n          return vbo;\r\n        }\r\n        var prevVBO = GLctx.getParameter(0x8894 /*GL_ARRAY_BUFFER_BINDING*/);\r\n        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, ringbuffer[nextFreeBufferIndex]);\r\n        GLctx.bufferData(0x8892 /*GL_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, prevVBO);\r\n        return ringbuffer[nextFreeBufferIndex];\r\n      },getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ibo = GL.currentContext.tempIndexBuffers[idx];\r\n        if (ibo) {\r\n          return ibo;\r\n        }\r\n        var prevIBO = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n        GL.currentContext.tempIndexBuffers[idx] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, GL.currentContext.tempIndexBuffers[idx]);\r\n        GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, prevIBO);\r\n        return GL.currentContext.tempIndexBuffers[idx];\r\n      },newRenderingFrameStarted:function newRenderingFrameStarted() {\r\n        if (!GL.currentContext) {\r\n          return;\r\n        }\r\n        var vb = GL.currentContext.tempVertexBuffers1;\r\n        GL.currentContext.tempVertexBuffers1 = GL.currentContext.tempVertexBuffers2;\r\n        GL.currentContext.tempVertexBuffers2 = vb;\r\n        vb = GL.currentContext.tempVertexBufferCounters1;\r\n        GL.currentContext.tempVertexBufferCounters1 = GL.currentContext.tempVertexBufferCounters2;\r\n        GL.currentContext.tempVertexBufferCounters2 = vb;\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          GL.currentContext.tempVertexBufferCounters1[i] = 0;\r\n        }\r\n      },getSource:function(shader, count, string, length) {\r\n        var source = '';\r\n        for (var i = 0; i < count; ++i) {\r\n          var len = length ? HEAP32[(((length)+(i*4))>>2)] : -1;\r\n          source += UTF8ToString(HEAP32[(((string)+(i*4))>>2)], len < 0 ? undefined : len);\r\n        }\r\n        return source;\r\n      },calcBufLength:function calcBufLength(size, type, stride, count) {\r\n        if (stride > 0) {\r\n          return count * stride;  // XXXvlad this is not exactly correct I don't think\r\n        }\r\n        var typeSize = GL.byteSizeByType[type - GL.byteSizeByTypeRoot];\r\n        return size * typeSize * count;\r\n      },usedTempBuffers:[],preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count) {\r\n        GL.resetBufferBinding = false;\r\n  \r\n        // TODO: initial pass to detect ranges we need to upload, might not need an upload per attrib\r\n        for (var i = 0; i < GL.currentContext.maxVertexAttribs; ++i) {\r\n          var cb = GL.currentContext.clientBuffers[i];\r\n          if (!cb.clientside || !cb.enabled) continue;\r\n  \r\n          GL.resetBufferBinding = true;\r\n  \r\n          var size = GL.calcBufLength(cb.size, cb.type, cb.stride, count);\r\n          var buf = GL.getTempVertexBuffer(size);\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, buf);\r\n          GLctx.bufferSubData(0x8892 /*GL_ARRAY_BUFFER*/,\r\n                                   0,\r\n                                   HEAPU8.subarray(cb.ptr, cb.ptr + size));\r\n          cb.vertexAttribPointerAdaptor.call(GLctx, i, cb.size, cb.type, cb.normalized, cb.stride, 0);\r\n        }\r\n      },postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings() {\r\n        if (GL.resetBufferBinding) {\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, GL.buffers[GLctx.currentArrayBufferBinding]);\r\n        }\r\n      },createContext:function(/** @type {HTMLCanvasElement} */ canvas, webGLContextAttributes) {\r\n  \r\n        // BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL context on a canvas,\r\n        // calling .getContext() will always return that context independent of which 'webgl' or 'webgl2'\r\n        // context version was passed. See https://bugs.webkit.org/show_bug.cgi?id=222758 and\r\n        // https://github.com/emscripten-core/emscripten/issues/13295.\r\n        // TODO: Once the bug is fixed and shipped in Safari, adjust the Safari version field in above check.\r\n        if (!canvas.getContextSafariWebGL2Fixed) {\r\n          canvas.getContextSafariWebGL2Fixed = canvas.getContext;\r\n          /** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */\r\n          function fixedGetContext(ver, attrs) {\r\n            var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\r\n            return ((ver == 'webgl') == (gl instanceof WebGLRenderingContext)) ? gl : null;\r\n          }\r\n          canvas.getContext = fixedGetContext;\r\n        }\r\n  \r\n        var ctx =\r\n          (webGLContextAttributes.majorVersion > 1)\r\n          ?\r\n            canvas.getContext(\"webgl2\", webGLContextAttributes)\r\n          :\r\n          (canvas.getContext(\"webgl\", webGLContextAttributes)\r\n            // https://caniuse.com/#feat=webgl\r\n            );\r\n  \r\n        if (!ctx) return 0;\r\n  \r\n        var handle = GL.registerContext(ctx, webGLContextAttributes);\r\n  \r\n        return handle;\r\n      },registerContext:function(ctx, webGLContextAttributes) {\r\n        // without pthreads a context is just an integer ID\r\n        var handle = GL.getNewId(GL.contexts);\r\n  \r\n        var context = {\r\n          handle: handle,\r\n          attributes: webGLContextAttributes,\r\n          version: webGLContextAttributes.majorVersion,\r\n          GLctx: ctx\r\n        };\r\n  \r\n        // Store the created context object so that we can access the context given a canvas without having to pass the parameters again.\r\n        if (ctx.canvas) ctx.canvas.GLctxObject = context;\r\n        GL.contexts[handle] = context;\r\n        if (typeof webGLContextAttributes.enableExtensionsByDefault == 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {\r\n          GL.initExtensions(context);\r\n        }\r\n  \r\n        context.maxVertexAttribs = context.GLctx.getParameter(0x8869 /*GL_MAX_VERTEX_ATTRIBS*/);\r\n        context.clientBuffers = [];\r\n        for (var i = 0; i < context.maxVertexAttribs; i++) {\r\n          context.clientBuffers[i] = { enabled: false, clientside: false, size: 0, type: 0, normalized: 0, stride: 0, ptr: 0, vertexAttribPointerAdaptor: null };\r\n        }\r\n  \r\n        GL.generateTempBuffers(false, context);\r\n  \r\n        return handle;\r\n      },makeContextCurrent:function(contextHandle) {\r\n  \r\n        GL.currentContext = GL.contexts[contextHandle]; // Active Emscripten GL layer context object.\r\n        Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx; // Active WebGL context object.\r\n        return !(contextHandle && !GLctx);\r\n      },getContext:function(contextHandle) {\r\n        return GL.contexts[contextHandle];\r\n      },deleteContext:function(contextHandle) {\r\n        if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = null;\r\n        if (typeof JSEvents == 'object') JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas); // Release all JS event handlers on the DOM element that the GL context is associated with since the context is now deleted.\r\n        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined; // Make sure the canvas object no longer refers to the context object so there are no GC surprises.\r\n        GL.contexts[contextHandle] = null;\r\n      },initExtensions:function(context) {\r\n        // If this function is called without a specific context object, init the extensions of the currently active context.\r\n        if (!context) context = GL.currentContext;\r\n  \r\n        if (context.initExtensionsDone) return;\r\n        context.initExtensionsDone = true;\r\n  \r\n        var GLctx = context.GLctx;\r\n  \r\n        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist.\r\n  \r\n        // Extensions that are only available in WebGL 1 (the calls will be no-ops if called on a WebGL 2 context active)\r\n        webgl_enable_ANGLE_instanced_arrays(GLctx);\r\n        webgl_enable_OES_vertex_array_object(GLctx);\r\n        webgl_enable_WEBGL_draw_buffers(GLctx);\r\n        // Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)\r\n        webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);\r\n        webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);\r\n  \r\n        // On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative\r\n        // that's based on core APIs, and exposes only the queryCounterEXT()\r\n        // entrypoint.\r\n        if (context.version >= 2) {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\");\r\n        }\r\n  \r\n        // However, Firefox exposes the WebGL 1 version on WebGL 2 as well and\r\n        // thus we look for the WebGL 1 version again if the WebGL 2 version\r\n        // isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882\r\n        if (context.version < 2 || !GLctx.disjointTimerQueryExt)\r\n        {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query\");\r\n        }\r\n  \r\n        webgl_enable_WEBGL_multi_draw(GLctx);\r\n  \r\n        // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n        var exts = GLctx.getSupportedExtensions() || [];\r\n        exts.forEach(function(ext) {\r\n          // WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders are not enabled by default.\r\n          if (!ext.includes('lose_context') && !ext.includes('debug')) {\r\n            // Call .getExtension() to enable that extension permanently.\r\n            GLctx.getExtension(ext);\r\n          }\r\n        });\r\n      }};\r\n  \r\n  function _eglCreateContext(display, config, hmm, contextAttribs) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n  \r\n      // EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.\r\n      // So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.\r\n      var glesContextVersion = 1;\r\n      for (;;) {\r\n        var param = HEAP32[((contextAttribs)>>2)];\r\n        if (param == 0x3098 /*EGL_CONTEXT_CLIENT_VERSION*/) {\r\n          glesContextVersion = HEAP32[(((contextAttribs)+(4))>>2)];\r\n        } else if (param == 0x3038 /*EGL_NONE*/) {\r\n          break;\r\n        } else {\r\n          /* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */\r\n          EGL.setErrorCode(0x3004 /*EGL_BAD_ATTRIBUTE*/);\r\n          return 0;\r\n        }\r\n        contextAttribs += 8;\r\n      }\r\n      if (glesContextVersion < 2 || glesContextVersion > 3) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n  \r\n      EGL.contextAttributes.majorVersion = glesContextVersion - 1; // WebGL 1 is GLES 2, WebGL2 is GLES3\r\n      EGL.contextAttributes.minorVersion = 0;\r\n  \r\n      EGL.context = GL.createContext(Module['canvas'], EGL.contextAttributes);\r\n  \r\n      if (EGL.context != 0) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n  \r\n        // Run callbacks so that GL emulation works\r\n        GL.makeContextCurrent(EGL.context);\r\n        Module.useWebGL = true;\r\n        Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });\r\n  \r\n        // Note: This function only creates a context, but it shall not make it active.\r\n        GL.makeContextCurrent(null);\r\n        return 62004; // Magic ID for Emscripten EGLContext\r\n      } else {\r\n        EGL.setErrorCode(0x3009 /* EGL_BAD_MATCH */); // By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n    }\r\n\r\n  function _eglCreateWindowSurface(display, config, win, attrib_list) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      // TODO: Examine attrib_list! Parameters that can be present there are:\r\n      // - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)\r\n      // - EGL_VG_COLORSPACE (can't be set)\r\n      // - EGL_VG_ALPHA_FORMAT (can't be set)\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 62006; /* Magic ID for Emscripten 'default surface' */\r\n    }\r\n\r\n  \r\n  function _eglDestroyContext(display, context) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (context != 62004 /* Magic ID for Emscripten EGLContext */) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.deleteContext(EGL.context);\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.currentContext == context) {\r\n        EGL.currentContext = 0;\r\n      }\r\n      return 1 /* EGL_TRUE */;\r\n    }\r\n\r\n  function _eglDestroySurface(display, surface) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (surface != 62006 /* Magic ID for the only EGLSurface supported by Emscripten */) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 1;\r\n      }\r\n      if (EGL.currentReadSurface == surface) {\r\n        EGL.currentReadSurface = 0;\r\n      }\r\n      if (EGL.currentDrawSurface == surface) {\r\n        EGL.currentDrawSurface = 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1; /* Magic ID for Emscripten 'default surface' */\r\n    }\r\n\r\n  function _eglGetConfigAttrib(display, config, attribute, value) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      if (!value) {\r\n        EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n        return 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      switch (attribute) {\r\n      case 0x3020: // EGL_BUFFER_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 32 : 24;\r\n        return 1;\r\n      case 0x3021: // EGL_ALPHA_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 8 : 0;\r\n        return 1;\r\n      case 0x3022: // EGL_BLUE_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3023: // EGL_GREEN_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3024: // EGL_RED_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3025: // EGL_DEPTH_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.depth ? 24 : 0;\r\n        return 1;\r\n      case 0x3026: // EGL_STENCIL_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.stencil ? 8 : 0;\r\n        return 1;\r\n      case 0x3027: // EGL_CONFIG_CAVEAT\r\n        // We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3028: // EGL_CONFIG_ID\r\n        HEAP32[((value)>>2)] = 62002;\r\n        return 1;\r\n      case 0x3029: // EGL_LEVEL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302A: // EGL_MAX_PBUFFER_HEIGHT\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302B: // EGL_MAX_PBUFFER_PIXELS\r\n        HEAP32[((value)>>2)] = 16777216;\r\n        return 1;\r\n      case 0x302C: // EGL_MAX_PBUFFER_WIDTH\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302D: // EGL_NATIVE_RENDERABLE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302E: // EGL_NATIVE_VISUAL_ID\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302F: // EGL_NATIVE_VISUAL_TYPE\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3031: // EGL_SAMPLES\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 4 : 0;\r\n        return 1;\r\n      case 0x3032: // EGL_SAMPLE_BUFFERS\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 1 : 0;\r\n        return 1;\r\n      case 0x3033: // EGL_SURFACE_TYPE\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3034: // EGL_TRANSPARENT_TYPE\r\n        // If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3035: // EGL_TRANSPARENT_BLUE_VALUE\r\n      case 0x3036: // EGL_TRANSPARENT_GREEN_VALUE\r\n      case 0x3037: // EGL_TRANSPARENT_RED_VALUE\r\n        // \"If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined.\"\r\n        HEAP32[((value)>>2)] = -1;\r\n        return 1;\r\n      case 0x3039: // EGL_BIND_TO_TEXTURE_RGB\r\n      case 0x303A: // EGL_BIND_TO_TEXTURE_RGBA\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303B: // EGL_MIN_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303C: // EGL_MAX_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 1;\r\n        return 1;\r\n      case 0x303D: // EGL_LUMINANCE_SIZE\r\n      case 0x303E: // EGL_ALPHA_MASK_SIZE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303F: // EGL_COLOR_BUFFER_TYPE\r\n        // EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.\r\n        HEAP32[((value)>>2)] = 0x308E;\r\n        return 1;\r\n      case 0x3040: // EGL_RENDERABLE_TYPE\r\n        // A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3042: // EGL_CONFORMANT\r\n        // \"EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API.\"\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      default:\r\n        EGL.setErrorCode(0x3004 /* EGL_BAD_ATTRIBUTE */);\r\n        return 0;\r\n      }\r\n    }\r\n\r\n  function _eglGetDisplay(nativeDisplayType) {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      // Note: As a 'conformant' implementation of EGL, we would prefer to init here only if the user\r\n      //       calls this function with EGL_DEFAULT_DISPLAY. Other display IDs would be preferred to be unsupported\r\n      //       and EGL_NO_DISPLAY returned. Uncomment the following code lines to do this.\r\n      // Instead, an alternative route has been preferred, namely that the Emscripten EGL implementation\r\n      // \"emulates\" X11, and eglGetDisplay is expected to accept/receive a pointer to an X11 Display object.\r\n      // Therefore, be lax and allow anything to be passed in, and return the magic handle to our default EGLDisplay object.\r\n  \r\n  //    if (nativeDisplayType == 0 /* EGL_DEFAULT_DISPLAY */) {\r\n          return 62000; // Magic ID for Emscripten 'default display'\r\n  //    }\r\n  //    else\r\n  //      return 0; // EGL_NO_DISPLAY\r\n    }\r\n\r\n  function _eglGetError() {\r\n      return EGL.errorCode;\r\n    }\r\n\r\n  function _eglInitialize(display, majorVersion, minorVersion) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (majorVersion) {\r\n        HEAP32[((majorVersion)>>2)] = 1; // Advertise EGL Major version: '1'\r\n      }\r\n      if (minorVersion) {\r\n        HEAP32[((minorVersion)>>2)] = 4; // Advertise EGL Minor version: '4'\r\n      }\r\n      EGL.defaultDisplayInitialized = true;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  \r\n  function _eglMakeCurrent(display, draw, read, context) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0 /* EGL_FALSE */;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      if (context != 0 && context != 62004 /* Magic ID for Emscripten EGLContext */) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n      if ((read != 0 && read != 62006) || (draw != 0 && draw != 62006 /* Magic ID for Emscripten 'default surface' */)) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.makeContextCurrent(context ? EGL.context : null);\r\n  \r\n      EGL.currentContext = context;\r\n      EGL.currentDrawSurface = draw;\r\n      EGL.currentReadSurface = read;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1 /* EGL_TRUE */;\r\n    }\r\n\r\n  \r\n  function _eglQueryString(display, name) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.stringCache[name]) return EGL.stringCache[name];\r\n      var ret;\r\n      switch (name) {\r\n        case 0x3053 /* EGL_VENDOR */: ret = stringToNewUTF8(\"Emscripten\"); break;\r\n        case 0x3054 /* EGL_VERSION */: ret = stringToNewUTF8(\"1.4 Emscripten EGL\"); break;\r\n        case 0x3055 /* EGL_EXTENSIONS */:  ret = stringToNewUTF8(\"\"); break; // Currently not supporting any EGL extensions.\r\n        case 0x308D /* EGL_CLIENT_APIS */: ret = stringToNewUTF8(\"OpenGL_ES\"); break;\r\n        default:\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n      }\r\n      EGL.stringCache[name] = ret;\r\n      return ret;\r\n    }\r\n\r\n  function _eglSwapBuffers() {\r\n  \r\n      if (!EGL.defaultDisplayInitialized) {\r\n        EGL.setErrorCode(0x3001 /* EGL_NOT_INITIALIZED */);\r\n      } else if (!Module.ctx) {\r\n        EGL.setErrorCode(0x3002 /* EGL_BAD_ACCESS */);\r\n      } else if (Module.ctx.isContextLost()) {\r\n        EGL.setErrorCode(0x300E /* EGL_CONTEXT_LOST */);\r\n      } else {\r\n        // According to documentation this does an implicit flush.\r\n        // Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871\r\n        // the flush was removed since this _may_ result in slowing code down.\r\n        //_glFlush();\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1 /* EGL_TRUE */;\r\n      }\r\n      return 0 /* EGL_FALSE */;\r\n    }\r\n\r\n  \r\n  function _eglSwapInterval(display, interval) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (interval == 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 0);\r\n      else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, interval);\r\n  \r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  function _eglTerminate(display) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      EGL.currentContext = 0;\r\n      EGL.currentReadSurface = 0;\r\n      EGL.currentDrawSurface = 0;\r\n      EGL.defaultDisplayInitialized = false;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _eglWaitClient() {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n  var _eglWaitGL = _eglWaitClient;\r\n\r\n  function _eglWaitNative(nativeEngineId) {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  var readEmAsmArgsArray = [];\r\n  function readEmAsmArgs(sigPtr, buf) {\r\n      readEmAsmArgsArray.length = 0;\r\n      var ch;\r\n      // Most arguments are i32s, so shift the buffer pointer so it is a plain\r\n      // index into HEAP32.\r\n      buf >>= 2;\r\n      while (ch = HEAPU8[sigPtr++]) {\r\n        // Floats are always passed as doubles, and doubles and int64s take up 8\r\n        // bytes (two 32-bit slots) in memory, align reads to these:\r\n        buf += (ch != 105/*i*/) & buf;\r\n        readEmAsmArgsArray.push(\r\n          ch == 105/*i*/ ? HEAP32[buf] :\r\n         HEAPF64[buf++ >> 1]\r\n        );\r\n        ++buf;\r\n      }\r\n      return readEmAsmArgsArray;\r\n    }\r\n  function runEmAsmFunction(code, sigPtr, argbuf) {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    }\r\n  function _emscripten_asm_const_int(code, sigPtr, argbuf) {\r\n      return runEmAsmFunction(code, sigPtr, argbuf);\r\n    }\r\n\r\n  function runMainThreadEmAsm(code, sigPtr, argbuf, sync) {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    }\r\n  function _emscripten_asm_const_int_sync_on_main_thread(code, sigPtr, argbuf) {\r\n      return runMainThreadEmAsm(code, sigPtr, argbuf, 1);\r\n    }\r\n\r\n  function _emscripten_date_now() {\r\n      return Date.now();\r\n    }\r\n\r\n  function withStackSave(f) {\r\n      var stack = stackSave();\r\n      var ret = f();\r\n      stackRestore(stack);\r\n      return ret;\r\n    }\r\n  var JSEvents = {inEventHandler:0,removeAllEventListeners:function() {\r\n        for (var i = JSEvents.eventHandlers.length-1; i >= 0; --i) {\r\n          JSEvents._removeHandler(i);\r\n        }\r\n        JSEvents.eventHandlers = [];\r\n        JSEvents.deferredCalls = [];\r\n      },registerRemoveEventListeners:function() {\r\n        if (!JSEvents.removeEventListenersRegistered) {\r\n          __ATEXIT__.push(JSEvents.removeAllEventListeners);\r\n          JSEvents.removeEventListenersRegistered = true;\r\n        }\r\n      },deferredCalls:[],deferCall:function(targetFunction, precedence, argsList) {\r\n        function arraysHaveEqualContent(arrA, arrB) {\r\n          if (arrA.length != arrB.length) return false;\r\n  \r\n          for (var i in arrA) {\r\n            if (arrA[i] != arrB[i]) return false;\r\n          }\r\n          return true;\r\n        }\r\n        // Test if the given call was already queued, and if so, don't add it again.\r\n        for (var i in JSEvents.deferredCalls) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\r\n            return;\r\n          }\r\n        }\r\n        JSEvents.deferredCalls.push({\r\n          targetFunction: targetFunction,\r\n          precedence: precedence,\r\n          argsList: argsList\r\n        });\r\n  \r\n        JSEvents.deferredCalls.sort(function(x,y) { return x.precedence < y.precedence; });\r\n      },removeDeferredCalls:function(targetFunction) {\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\r\n            JSEvents.deferredCalls.splice(i, 1);\r\n            --i;\r\n          }\r\n        }\r\n      },canPerformEventHandlerRequests:function() {\r\n        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\r\n      },runDeferredCalls:function() {\r\n        if (!JSEvents.canPerformEventHandlerRequests()) {\r\n          return;\r\n        }\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          JSEvents.deferredCalls.splice(i, 1);\r\n          --i;\r\n          call.targetFunction.apply(null, call.argsList);\r\n        }\r\n      },eventHandlers:[],removeAllHandlersOnTarget:function(target, eventTypeString) {\r\n        for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n          if (JSEvents.eventHandlers[i].target == target && \r\n            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\r\n             JSEvents._removeHandler(i--);\r\n           }\r\n        }\r\n      },_removeHandler:function(i) {\r\n        var h = JSEvents.eventHandlers[i];\r\n        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\r\n        JSEvents.eventHandlers.splice(i, 1);\r\n      },registerOrRemoveHandler:function(eventHandler) {\r\n        var jsEventHandler = function jsEventHandler(event) {\r\n          // Increment nesting count for the event handler.\r\n          ++JSEvents.inEventHandler;\r\n          JSEvents.currentEventHandler = eventHandler;\r\n          // Process any old deferred calls the user has placed.\r\n          JSEvents.runDeferredCalls();\r\n          // Process the actual event, calls back to user C code handler.\r\n          eventHandler.handlerFunc(event);\r\n          // Process any new deferred calls that were placed right now from this event handler.\r\n          JSEvents.runDeferredCalls();\r\n          // Out of event handler - restore nesting count.\r\n          --JSEvents.inEventHandler;\r\n        };\r\n        \r\n        if (eventHandler.callbackfunc) {\r\n          eventHandler.eventListenerFunc = jsEventHandler;\r\n          eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\r\n          JSEvents.eventHandlers.push(eventHandler);\r\n          JSEvents.registerRemoveEventListeners();\r\n        } else {\r\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n            if (JSEvents.eventHandlers[i].target == eventHandler.target\r\n             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\r\n               JSEvents._removeHandler(i--);\r\n             }\r\n          }\r\n        }\r\n      },getNodeNameForTarget:function(target) {\r\n        if (!target) return '';\r\n        if (target == window) return '#window';\r\n        if (target == screen) return '#screen';\r\n        return (target && target.nodeName) ? target.nodeName : '';\r\n      },fullscreenEnabled:function() {\r\n        return document.fullscreenEnabled\r\n        // Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.\r\n        // TODO: If Safari at some point ships with unprefixed version, update the version check above.\r\n        || document.webkitFullscreenEnabled\r\n         ;\r\n      }};\r\n  \r\n  function setLetterbox(element, topBottom, leftRight) {\r\n        // Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.\r\n        element.style.paddingLeft = element.style.paddingRight = leftRight + 'px';\r\n        element.style.paddingTop = element.style.paddingBottom = topBottom + 'px';\r\n    }\r\n  \r\n  function hideEverythingExceptGivenElement(onlyVisibleElement) {\r\n      var child = onlyVisibleElement;\r\n      var parent = child.parentNode;\r\n      var hiddenElements = [];\r\n      while (child != document.body) {\r\n        var children = parent.children;\r\n        for (var i = 0; i < children.length; ++i) {\r\n          if (children[i] != child) {\r\n            hiddenElements.push({ node: children[i], displayState: children[i].style.display });\r\n            children[i].style.display = 'none';\r\n          }\r\n        }\r\n        child = parent;\r\n        parent = parent.parentNode;\r\n      }\r\n      return hiddenElements;\r\n    }\r\n  \r\n  var restoreOldWindowedStyle = null;\r\n  \r\n  \r\n  \r\n  function maybeCStringToJsString(cString) {\r\n      // \"cString > 2\" checks if the input is a number, and isn't of the special\r\n      // values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).\r\n      // In other words, if cString > 2 then it's a pointer to a valid place in\r\n      // memory, and points to a C string.\r\n      return cString > 2 ? UTF8ToString(cString) : cString;\r\n    }\r\n  \r\n  var specialHTMLTargets = [0, document, window];\r\n  function findEventTarget(target) {\r\n      target = maybeCStringToJsString(target);\r\n      var domElement = specialHTMLTargets[target] || document.querySelector(target);\r\n      return domElement;\r\n    }\r\n  function findCanvasEventTarget(target) { return findEventTarget(target); }\r\n  function _emscripten_get_canvas_element_size(target, width, height) {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      HEAP32[((width)>>2)] = canvas.width;\r\n      HEAP32[((height)>>2)] = canvas.height;\r\n    }\r\n  \r\n  \r\n  \r\n  function stringToUTF8OnStack(str) {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = stackAlloc(size);\r\n      stringToUTF8(str, ret, size);\r\n      return ret;\r\n    }\r\n  function getCanvasElementSize(target) {\r\n      return withStackSave(function() {\r\n        var w = stackAlloc(8);\r\n        var h = w + 4;\r\n  \r\n        var targetInt = stringToUTF8OnStack(target.id);\r\n        var ret = _emscripten_get_canvas_element_size(targetInt, w, h);\r\n        var size = [HEAP32[((w)>>2)], HEAP32[((h)>>2)]];\r\n        return size;\r\n      });\r\n    }\r\n  \r\n  \r\n  function _emscripten_set_canvas_element_size(target, width, height) {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      return 0;\r\n    }\r\n  \r\n  \r\n  function setCanvasElementSize(target, width, height) {\r\n      if (!target.controlTransferredOffscreen) {\r\n        target.width = width;\r\n        target.height = height;\r\n      } else {\r\n        // This function is being called from high-level JavaScript code instead of asm.js/Wasm,\r\n        // and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.\r\n        withStackSave(function() {\r\n          var targetInt = stringToUTF8OnStack(target.id);\r\n          _emscripten_set_canvas_element_size(targetInt, width, height);\r\n        });\r\n      }\r\n    }\r\n  function registerRestoreOldStyle(canvas) {\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var oldWidth = canvasSize[0];\r\n      var oldHeight = canvasSize[1];\r\n      var oldCssWidth = canvas.style.width;\r\n      var oldCssHeight = canvas.style.height;\r\n      var oldBackgroundColor = canvas.style.backgroundColor; // Chrome reads color from here.\r\n      var oldDocumentBackgroundColor = document.body.style.backgroundColor; // IE11 reads color from here.\r\n      // Firefox always has black background color.\r\n      var oldPaddingLeft = canvas.style.paddingLeft; // Chrome, FF, Safari\r\n      var oldPaddingRight = canvas.style.paddingRight;\r\n      var oldPaddingTop = canvas.style.paddingTop;\r\n      var oldPaddingBottom = canvas.style.paddingBottom;\r\n      var oldMarginLeft = canvas.style.marginLeft; // IE11\r\n      var oldMarginRight = canvas.style.marginRight;\r\n      var oldMarginTop = canvas.style.marginTop;\r\n      var oldMarginBottom = canvas.style.marginBottom;\r\n      var oldDocumentBodyMargin = document.body.style.margin;\r\n      var oldDocumentOverflow = document.documentElement.style.overflow; // Chrome, Firefox\r\n      var oldDocumentScroll = document.body.scroll; // IE\r\n      var oldImageRendering = canvas.style.imageRendering;\r\n  \r\n      function restoreOldStyle() {\r\n        var fullscreenElement = document.fullscreenElement\r\n          || document.webkitFullscreenElement\r\n          ;\r\n        if (!fullscreenElement) {\r\n          document.removeEventListener('fullscreenchange', restoreOldStyle);\r\n  \r\n          // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n          // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n          document.removeEventListener('webkitfullscreenchange', restoreOldStyle);\r\n  \r\n          setCanvasElementSize(canvas, oldWidth, oldHeight);\r\n  \r\n          canvas.style.width = oldCssWidth;\r\n          canvas.style.height = oldCssHeight;\r\n          canvas.style.backgroundColor = oldBackgroundColor; // Chrome\r\n          // IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color\r\n          // before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user\r\n          // had explicitly set so subsequent fullscreen transitions would not set background color properly.\r\n          if (!oldDocumentBackgroundColor) document.body.style.backgroundColor = 'white';\r\n          document.body.style.backgroundColor = oldDocumentBackgroundColor; // IE11\r\n          canvas.style.paddingLeft = oldPaddingLeft; // Chrome, FF, Safari\r\n          canvas.style.paddingRight = oldPaddingRight;\r\n          canvas.style.paddingTop = oldPaddingTop;\r\n          canvas.style.paddingBottom = oldPaddingBottom;\r\n          canvas.style.marginLeft = oldMarginLeft; // IE11\r\n          canvas.style.marginRight = oldMarginRight;\r\n          canvas.style.marginTop = oldMarginTop;\r\n          canvas.style.marginBottom = oldMarginBottom;\r\n          document.body.style.margin = oldDocumentBodyMargin;\r\n          document.documentElement.style.overflow = oldDocumentOverflow; // Chrome, Firefox\r\n          document.body.scroll = oldDocumentScroll; // IE\r\n          canvas.style.imageRendering = oldImageRendering;\r\n          if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, oldWidth, oldHeight);\r\n  \r\n          if (currentFullscreenStrategy.canvasResizedCallback) {\r\n            ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n          }\r\n        }\r\n      }\r\n      document.addEventListener('fullscreenchange', restoreOldStyle);\r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      document.addEventListener('webkitfullscreenchange', restoreOldStyle);\r\n      return restoreOldStyle;\r\n    }\r\n  \r\n  function restoreHiddenElements(hiddenElements) {\r\n      for (var i = 0; i < hiddenElements.length; ++i) {\r\n        hiddenElements[i].node.style.display = hiddenElements[i].displayState;\r\n      }\r\n    }\r\n  \r\n  var currentFullscreenStrategy = {};\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  /** @suppress {checkTypes} */\r\n  function jstoi_q(str) {\r\n      return parseInt(str);\r\n    }\r\n  function softFullscreenResizeWebGLRenderTarget() {\r\n      var dpr = devicePixelRatio;\r\n      var inHiDPIFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode == 2;\r\n      var inAspectRatioFixedFullscreenMode = currentFullscreenStrategy.scaleMode == 2;\r\n      var inPixelPerfectFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode != 0;\r\n      var inCenteredWithoutScalingFullscreenMode = currentFullscreenStrategy.scaleMode == 3;\r\n      var screenWidth = inHiDPIFullscreenMode ? Math.round(innerWidth*dpr) : innerWidth;\r\n      var screenHeight = inHiDPIFullscreenMode ? Math.round(innerHeight*dpr) : innerHeight;\r\n      var w = screenWidth;\r\n      var h = screenHeight;\r\n      var canvas = currentFullscreenStrategy.target;\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var x = canvasSize[0];\r\n      var y = canvasSize[1];\r\n      var topMargin;\r\n  \r\n      if (inAspectRatioFixedFullscreenMode) {\r\n        if (w*y < x*h) h = (w * y / x) | 0;\r\n        else if (w*y > x*h) w = (h * x / y) | 0;\r\n        topMargin = ((screenHeight - h) / 2) | 0;\r\n      }\r\n  \r\n      if (inPixelPerfectFullscreenMode) {\r\n        setCanvasElementSize(canvas, w, h);\r\n        if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, w, h);\r\n      }\r\n  \r\n      // Back to CSS pixels.\r\n      if (inHiDPIFullscreenMode) {\r\n        topMargin /= dpr;\r\n        w /= dpr;\r\n        h /= dpr;\r\n        // Round to nearest 4 digits of precision.\r\n        w = Math.round(w*1e4)/1e4;\r\n        h = Math.round(h*1e4)/1e4;\r\n        topMargin = Math.round(topMargin*1e4)/1e4;\r\n      }\r\n  \r\n      if (inCenteredWithoutScalingFullscreenMode) {\r\n        var t = (innerHeight - jstoi_q(canvas.style.height)) / 2;\r\n        var b = (innerWidth - jstoi_q(canvas.style.width)) / 2;\r\n        setLetterbox(canvas, t, b);\r\n      } else {\r\n        canvas.style.width = w + 'px';\r\n        canvas.style.height = h + 'px';\r\n        var b = (innerWidth - w) / 2;\r\n        setLetterbox(canvas, topMargin, b);\r\n      }\r\n  \r\n      if (!inCenteredWithoutScalingFullscreenMode && currentFullscreenStrategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n      }\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  function getBoundingClientRect(e) {\r\n      return specialHTMLTargets.indexOf(e) < 0 ? e.getBoundingClientRect() : {'left':0,'top':0};\r\n    }\r\n  function JSEvents_resizeCanvasForFullscreen(target, strategy) {\r\n      var restoreOldStyle = registerRestoreOldStyle(target);\r\n      var cssWidth = strategy.softFullscreen ? innerWidth : screen.width;\r\n      var cssHeight = strategy.softFullscreen ? innerHeight : screen.height;\r\n      var rect = getBoundingClientRect(target);\r\n      var windowedCssWidth = rect.width;\r\n      var windowedCssHeight = rect.height;\r\n      var canvasSize = getCanvasElementSize(target);\r\n      var windowedRttWidth = canvasSize[0];\r\n      var windowedRttHeight = canvasSize[1];\r\n  \r\n      if (strategy.scaleMode == 3) {\r\n        setLetterbox(target, (cssHeight - windowedCssHeight) / 2, (cssWidth - windowedCssWidth) / 2);\r\n        cssWidth = windowedCssWidth;\r\n        cssHeight = windowedCssHeight;\r\n      } else if (strategy.scaleMode == 2) {\r\n        if (cssWidth*windowedRttHeight < windowedRttWidth*cssHeight) {\r\n          var desiredCssHeight = windowedRttHeight * cssWidth / windowedRttWidth;\r\n          setLetterbox(target, (cssHeight - desiredCssHeight) / 2, 0);\r\n          cssHeight = desiredCssHeight;\r\n        } else {\r\n          var desiredCssWidth = windowedRttWidth * cssHeight / windowedRttHeight;\r\n          setLetterbox(target, 0, (cssWidth - desiredCssWidth) / 2);\r\n          cssWidth = desiredCssWidth;\r\n        }\r\n      }\r\n  \r\n      // If we are adding padding, must choose a background color or otherwise Chrome will give the\r\n      // padding a default white color. Do it only if user has not customized their own background color.\r\n      if (!target.style.backgroundColor) target.style.backgroundColor = 'black';\r\n      // IE11 does the same, but requires the color to be set in the document body.\r\n      if (!document.body.style.backgroundColor) document.body.style.backgroundColor = 'black'; // IE11\r\n      // Firefox always shows black letterboxes independent of style color.\r\n  \r\n      target.style.width = cssWidth + 'px';\r\n      target.style.height = cssHeight + 'px';\r\n  \r\n      if (strategy.filteringMode == 1) {\r\n        target.style.imageRendering = 'optimizeSpeed';\r\n        target.style.imageRendering = '-moz-crisp-edges';\r\n        target.style.imageRendering = '-o-crisp-edges';\r\n        target.style.imageRendering = '-webkit-optimize-contrast';\r\n        target.style.imageRendering = 'optimize-contrast';\r\n        target.style.imageRendering = 'crisp-edges';\r\n        target.style.imageRendering = 'pixelated';\r\n      }\r\n  \r\n      var dpiScale = (strategy.canvasResolutionScaleMode == 2) ? devicePixelRatio : 1;\r\n      if (strategy.canvasResolutionScaleMode != 0) {\r\n        var newWidth = (cssWidth * dpiScale)|0;\r\n        var newHeight = (cssHeight * dpiScale)|0;\r\n        setCanvasElementSize(target, newWidth, newHeight);\r\n        if (target.GLctxObject) target.GLctxObject.GLctx.viewport(0, 0, newWidth, newHeight);\r\n      }\r\n      return restoreOldStyle;\r\n    }\r\n  \r\n  function _emscripten_enter_soft_fullscreen(target, fullscreenStrategy) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var strategy = {\r\n          scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n          canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n          filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n          canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n          canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)],\r\n          target: target,\r\n          softFullscreen: true\r\n      };\r\n  \r\n      var restoreOldStyle = JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n  \r\n      document.documentElement.style.overflow = 'hidden';  // Firefox, Chrome\r\n      document.body.scroll = \"no\"; // IE11\r\n      document.body.style.margin = '0px'; // Override default document margin area on all browsers.\r\n  \r\n      var hiddenElements = hideEverythingExceptGivenElement(target);\r\n  \r\n      function restoreWindowedState() {\r\n        restoreOldStyle();\r\n        restoreHiddenElements(hiddenElements);\r\n        removeEventListener('resize', softFullscreenResizeWebGLRenderTarget);\r\n        if (strategy.canvasResizedCallback) {\r\n          ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n        }\r\n        currentFullscreenStrategy = 0;\r\n      }\r\n      restoreOldWindowedStyle = restoreWindowedState;\r\n      currentFullscreenStrategy = strategy;\r\n      addEventListener('resize', softFullscreenResizeWebGLRenderTarget);\r\n  \r\n      // Inform the caller that the canvas size has changed.\r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function JSEvents_requestFullscreen(target, strategy) {\r\n      // EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.\r\n      if (strategy.scaleMode != 0 || strategy.canvasResolutionScaleMode != 0) {\r\n        JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n      }\r\n  \r\n      if (target.requestFullscreen) {\r\n        target.requestFullscreen();\r\n      } else if (target.webkitRequestFullscreen) {\r\n        target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n      } else {\r\n        return JSEvents.fullscreenEnabled() ? -3 : -1;\r\n      }\r\n  \r\n      currentFullscreenStrategy = strategy;\r\n  \r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n  \r\n  function _emscripten_exit_fullscreen() {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);\r\n  \r\n      var d = specialHTMLTargets[1];\r\n      if (d.exitFullscreen) {\r\n        d.fullscreenElement && d.exitFullscreen();\r\n      } else if (d.webkitExitFullscreen) {\r\n        d.webkitFullscreenElement && d.webkitExitFullscreen();\r\n      } else {\r\n        return -1;\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  function requestPointerLock(target) {\r\n      if (target.requestPointerLock) {\r\n        target.requestPointerLock();\r\n      } else {\r\n        // document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,\r\n        // or if the whole browser just doesn't support the feature.\r\n        if (document.body.requestPointerLock\r\n          ) {\r\n          return -3;\r\n        }\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n  function _emscripten_exit_pointerlock() {\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(requestPointerLock);\r\n  \r\n      if (document.exitPointerLock) {\r\n        document.exitPointerLock();\r\n      } else {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_exit_soft_fullscreen() {\r\n      if (restoreOldWindowedStyle) restoreOldWindowedStyle();\r\n      restoreOldWindowedStyle = null;\r\n  \r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_get_device_pixel_ratio() {\r\n      return devicePixelRatio;\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_get_element_css_size(target, width, height) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAPF64[((width)>>3)] = rect.width;\r\n      HEAPF64[((height)>>3)] = rect.height;\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  function fillGamepadEventData(eventStruct, e) {\r\n      HEAPF64[((eventStruct)>>3)] = e.timestamp;\r\n      for (var i = 0; i < e.axes.length; ++i) {\r\n        HEAPF64[(((eventStruct+i*8)+(16))>>3)] = e.axes[i];\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i].value;\r\n        } else {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i];\r\n        }\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i].pressed;\r\n        } else {\r\n          // Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:\r\n          /** @suppress {checkTypes} */\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i] == 1;\r\n        }\r\n      }\r\n      HEAP32[(((eventStruct)+(1296))>>2)] = e.connected;\r\n      HEAP32[(((eventStruct)+(1300))>>2)] = e.index;\r\n      HEAP32[(((eventStruct)+(8))>>2)] = e.axes.length;\r\n      HEAP32[(((eventStruct)+(12))>>2)] = e.buttons.length;\r\n      stringToUTF8(e.id, eventStruct + 1304, 64);\r\n      stringToUTF8(e.mapping, eventStruct + 1368, 64);\r\n    }\r\n  function _emscripten_get_gamepad_status(index, gamepadState) {\r\n  \r\n      // INVALID_PARAM is returned on a Gamepad index that never was there.\r\n      if (index < 0 || index >= JSEvents.lastGamepadState.length) return -5;\r\n  \r\n      // NO_DATA is returned on a Gamepad index that was removed.\r\n      // For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.\r\n      // This is because gamepads must keep their original position in the array.\r\n      // For example, removing the first of two gamepads produces [null/undefined/false, gamepad].\r\n      if (!JSEvents.lastGamepadState[index]) return -7;\r\n  \r\n      fillGamepadEventData(gamepadState, JSEvents.lastGamepadState[index]);\r\n      return 0;\r\n    }\r\n\r\n\r\n  function _emscripten_get_num_gamepads() {\r\n      // N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.\r\n      // Otherwise the following line will throw an exception.\r\n      return JSEvents.lastGamepadState.length;\r\n    }\r\n\r\n  function _emscripten_get_screen_size(width, height) {\r\n      HEAP32[((width)>>2)] = screen.width;\r\n      HEAP32[((height)>>2)] = screen.height;\r\n    }\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }\r\n  var _emscripten_glActiveTexture = _glActiveTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glAttachShader(program, shader) {\r\n      GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glAttachShader = _glAttachShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginQuery(target, id) {\r\n      GLctx.beginQuery(target, GL.queries[id]);\r\n    }\r\n  var _emscripten_glBeginQuery = _glBeginQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginQueryEXT(target, id) {\r\n      GLctx.disjointTimerQueryExt['beginQueryEXT'](target, GL.queries[id]);\r\n    }\r\n  var _emscripten_glBeginQueryEXT = _glBeginQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginTransformFeedback(x0) { GLctx.beginTransformFeedback(x0) }\r\n  var _emscripten_glBeginTransformFeedback = _glBeginTransformFeedback;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glBindAttribLocation(program, index, name) {\r\n      GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\r\n    }\r\n  var _emscripten_glBindAttribLocation = _glBindAttribLocation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBuffer(target, buffer) {\r\n      if (target == 0x8892 /*GL_ARRAY_BUFFER*/) {\r\n        GLctx.currentArrayBufferBinding = buffer;\r\n      } else if (target == 0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/) {\r\n        GLctx.currentElementArrayBufferBinding = buffer;\r\n      }\r\n  \r\n      if (target == 0x88EB /*GL_PIXEL_PACK_BUFFER*/) {\r\n        // In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that binding point is non-null to know what is\r\n        // the proper API function to call.\r\n        GLctx.currentPixelPackBufferBinding = buffer;\r\n      } else if (target == 0x88EC /*GL_PIXEL_UNPACK_BUFFER*/) {\r\n        // In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to\r\n        // use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that\r\n        // binding point is non-null to know what is the proper API function to\r\n        // call.\r\n        GLctx.currentPixelUnpackBufferBinding = buffer;\r\n      }\r\n      GLctx.bindBuffer(target, GL.buffers[buffer]);\r\n    }\r\n  var _emscripten_glBindBuffer = _glBindBuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBufferBase(target, index, buffer) {\r\n      GLctx.bindBufferBase(target, index, GL.buffers[buffer]);\r\n    }\r\n  var _emscripten_glBindBufferBase = _glBindBufferBase;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBufferRange(target, index, buffer, offset, ptrsize) {\r\n      GLctx.bindBufferRange(target, index, GL.buffers[buffer], offset, ptrsize);\r\n    }\r\n  var _emscripten_glBindBufferRange = _glBindBufferRange;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindFramebuffer(target, framebuffer) {\r\n  \r\n      GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\r\n  \r\n    }\r\n  var _emscripten_glBindFramebuffer = _glBindFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindRenderbuffer(target, renderbuffer) {\r\n      GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\r\n    }\r\n  var _emscripten_glBindRenderbuffer = _glBindRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindSampler(unit, sampler) {\r\n      GLctx.bindSampler(unit, GL.samplers[sampler]);\r\n    }\r\n  var _emscripten_glBindSampler = _glBindSampler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindTexture(target, texture) {\r\n      GLctx.bindTexture(target, GL.textures[texture]);\r\n    }\r\n  var _emscripten_glBindTexture = _glBindTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindTransformFeedback(target, id) {\r\n      GLctx.bindTransformFeedback(target, GL.transformFeedbacks[id]);\r\n    }\r\n  var _emscripten_glBindTransformFeedback = _glBindTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindVertexArray(vao) {\r\n      GLctx.bindVertexArray(GL.vaos[vao]);\r\n      var ibo = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n      GLctx.currentElementArrayBufferBinding = ibo ? (ibo.name | 0) : 0;\r\n    }\r\n  var _emscripten_glBindVertexArray = _glBindVertexArray;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glBindVertexArrayOES = _glBindVertexArray;\r\n  var _emscripten_glBindVertexArrayOES = _glBindVertexArrayOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendColor(x0, x1, x2, x3) { GLctx.blendColor(x0, x1, x2, x3) }\r\n  var _emscripten_glBlendColor = _glBlendColor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendEquation(x0) { GLctx.blendEquation(x0) }\r\n  var _emscripten_glBlendEquation = _glBlendEquation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendEquationSeparate(x0, x1) { GLctx.blendEquationSeparate(x0, x1) }\r\n  var _emscripten_glBlendEquationSeparate = _glBlendEquationSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }\r\n  var _emscripten_glBlendFunc = _glBlendFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendFuncSeparate(x0, x1, x2, x3) { GLctx.blendFuncSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glBlendFuncSeparate = _glBlendFuncSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) { GLctx.blitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) }\r\n  var _emscripten_glBlitFramebuffer = _glBlitFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBufferData(target, size, data, usage) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        // If size is zero, WebGL would interpret uploading the whole input arraybuffer (starting from given offset), which would\r\n        // not make sense in WebAssembly, so avoid uploading if size is zero. However we must still call bufferData to establish a\r\n        // backing storage of zero bytes.\r\n        if (data && size) {\r\n          GLctx.bufferData(target, HEAPU8, usage, data, size);\r\n        } else {\r\n          GLctx.bufferData(target, size, usage);\r\n        }\r\n      } else {\r\n        // N.b. here first form specifies a heap subarray, second form an integer size, so the ?: code here is polymorphic. It is advised to avoid\r\n        // randomly mixing both uses in calling code, to avoid any potential JS engine JIT issues.\r\n        GLctx.bufferData(target, data ? HEAPU8.subarray(data, data+size) : size, usage);\r\n      }\r\n    }\r\n  var _emscripten_glBufferData = _glBufferData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBufferSubData(target, offset, size, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        size && GLctx.bufferSubData(target, offset, HEAPU8, data, size);\r\n        return;\r\n      }\r\n      GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));\r\n    }\r\n  var _emscripten_glBufferSubData = _glBufferSubData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCheckFramebufferStatus(x0) { return GLctx.checkFramebufferStatus(x0) }\r\n  var _emscripten_glCheckFramebufferStatus = _glCheckFramebufferStatus;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClear(x0) { GLctx.clear(x0) }\r\n  var _emscripten_glClear = _glClear;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferfi(x0, x1, x2, x3) { GLctx.clearBufferfi(x0, x1, x2, x3) }\r\n  var _emscripten_glClearBufferfi = _glClearBufferfi;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferfv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferfv(buffer, drawbuffer, HEAPF32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferfv = _glClearBufferfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferiv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferiv(buffer, drawbuffer, HEAP32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferiv = _glClearBufferiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferuiv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferuiv(buffer, drawbuffer, HEAPU32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferuiv = _glClearBufferuiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }\r\n  var _emscripten_glClearColor = _glClearColor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearDepthf(x0) { GLctx.clearDepth(x0) }\r\n  var _emscripten_glClearDepthf = _glClearDepthf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearStencil(x0) { GLctx.clearStencil(x0) }\r\n  var _emscripten_glClearStencil = _glClearStencil;\r\n\r\n  function convertI32PairToI53(lo, hi) {\r\n      return (lo >>> 0) + hi * 4294967296;\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glClientWaitSync(sync, flags, timeout_low, timeout_high) {\r\n      // WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.\r\n      // In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.\r\n      // Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)\r\n      // See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      return GLctx.clientWaitSync(GL.syncs[sync], flags, timeout);\r\n    }\r\n  var _emscripten_glClientWaitSync = _glClientWaitSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glColorMask(red, green, blue, alpha) {\r\n      GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\r\n    }\r\n  var _emscripten_glColorMask = _glColorMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompileShader(shader) {\r\n      GLctx.compileShader(GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glCompileShader = _glCompileShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data);\r\n        } else {\r\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    }\r\n  var _emscripten_glCompressedTexImage2D = _glCompressedTexImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data);\r\n      } else {\r\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, HEAPU8, data, imageSize);\r\n      }\r\n    }\r\n  var _emscripten_glCompressedTexImage3D = _glCompressedTexImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\r\n        } else {\r\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    }\r\n  var _emscripten_glCompressedTexSubImage2D = _glCompressedTexSubImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\r\n      } else {\r\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, HEAPU8, data, imageSize);\r\n      }\r\n    }\r\n  var _emscripten_glCompressedTexSubImage3D = _glCompressedTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyBufferSubData(x0, x1, x2, x3, x4) { GLctx.copyBufferSubData(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glCopyBufferSubData = _glCopyBufferSubData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\r\n  var _emscripten_glCopyTexImage2D = _glCopyTexImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\r\n  var _emscripten_glCopyTexSubImage2D = _glCopyTexSubImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) { GLctx.copyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) }\r\n  var _emscripten_glCopyTexSubImage3D = _glCopyTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCreateProgram() {\r\n      var id = GL.getNewId(GL.programs);\r\n      var program = GLctx.createProgram();\r\n      // Store additional information needed for each shader program:\r\n      program.name = id;\r\n      // Lazy cache results of glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)\r\n      program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\r\n      program.uniformIdCounter = 1;\r\n      GL.programs[id] = program;\r\n      return id;\r\n    }\r\n  var _emscripten_glCreateProgram = _glCreateProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCreateShader(shaderType) {\r\n      var id = GL.getNewId(GL.shaders);\r\n      GL.shaders[id] = GLctx.createShader(shaderType);\r\n  \r\n      return id;\r\n    }\r\n  var _emscripten_glCreateShader = _glCreateShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCullFace(x0) { GLctx.cullFace(x0) }\r\n  var _emscripten_glCullFace = _glCullFace;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteBuffers(n, buffers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((buffers)+(i*4))>>2)];\r\n        var buffer = GL.buffers[id];\r\n  \r\n        // From spec: \"glDeleteBuffers silently ignores 0's and names that do not\r\n        // correspond to existing buffer objects.\"\r\n        if (!buffer) continue;\r\n  \r\n        GLctx.deleteBuffer(buffer);\r\n        buffer.name = 0;\r\n        GL.buffers[id] = null;\r\n  \r\n        if (id == GLctx.currentArrayBufferBinding) GLctx.currentArrayBufferBinding = 0;\r\n        if (id == GLctx.currentElementArrayBufferBinding) GLctx.currentElementArrayBufferBinding = 0;\r\n        if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\r\n        if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteBuffers = _glDeleteBuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteFramebuffers(n, framebuffers) {\r\n      for (var i = 0; i < n; ++i) {\r\n        var id = HEAP32[(((framebuffers)+(i*4))>>2)];\r\n        var framebuffer = GL.framebuffers[id];\r\n        if (!framebuffer) continue; // GL spec: \"glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects\".\r\n        GLctx.deleteFramebuffer(framebuffer);\r\n        framebuffer.name = 0;\r\n        GL.framebuffers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteFramebuffers = _glDeleteFramebuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteProgram(id) {\r\n      if (!id) return;\r\n      var program = GL.programs[id];\r\n      if (!program) { // glDeleteProgram actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteProgram(program);\r\n      program.name = 0;\r\n      GL.programs[id] = null;\r\n    }\r\n  var _emscripten_glDeleteProgram = _glDeleteProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteQueries(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.deleteQuery(query);\r\n        GL.queries[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteQueries = _glDeleteQueries;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteQueriesEXT(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);\r\n        GL.queries[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteQueriesEXT = _glDeleteQueriesEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteRenderbuffers(n, renderbuffers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];\r\n        var renderbuffer = GL.renderbuffers[id];\r\n        if (!renderbuffer) continue; // GL spec: \"glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects\".\r\n        GLctx.deleteRenderbuffer(renderbuffer);\r\n        renderbuffer.name = 0;\r\n        GL.renderbuffers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteRenderbuffers = _glDeleteRenderbuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteSamplers(n, samplers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((samplers)+(i*4))>>2)];\r\n        var sampler = GL.samplers[id];\r\n        if (!sampler) continue;\r\n        GLctx.deleteSampler(sampler);\r\n        sampler.name = 0;\r\n        GL.samplers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteSamplers = _glDeleteSamplers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteShader(id) {\r\n      if (!id) return;\r\n      var shader = GL.shaders[id];\r\n      if (!shader) { // glDeleteShader actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteShader(shader);\r\n      GL.shaders[id] = null;\r\n    }\r\n  var _emscripten_glDeleteShader = _glDeleteShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteSync(id) {\r\n      if (!id) return;\r\n      var sync = GL.syncs[id];\r\n      if (!sync) { // glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteSync(sync);\r\n      sync.name = 0;\r\n      GL.syncs[id] = null;\r\n    }\r\n  var _emscripten_glDeleteSync = _glDeleteSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteTextures(n, textures) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((textures)+(i*4))>>2)];\r\n        var texture = GL.textures[id];\r\n        if (!texture) continue; // GL spec: \"glDeleteTextures silently ignores 0s and names that do not correspond to existing textures\".\r\n        GLctx.deleteTexture(texture);\r\n        texture.name = 0;\r\n        GL.textures[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteTextures = _glDeleteTextures;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteTransformFeedbacks(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var transformFeedback = GL.transformFeedbacks[id];\r\n        if (!transformFeedback) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.deleteTransformFeedback(transformFeedback);\r\n        transformFeedback.name = 0;\r\n        GL.transformFeedbacks[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteTransformFeedbacks = _glDeleteTransformFeedbacks;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteVertexArrays(n, vaos) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\r\n        GLctx.deleteVertexArray(GL.vaos[id]);\r\n        GL.vaos[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteVertexArrays = _glDeleteVertexArrays;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDeleteVertexArraysOES = _glDeleteVertexArrays;\r\n  var _emscripten_glDeleteVertexArraysOES = _glDeleteVertexArraysOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthFunc(x0) { GLctx.depthFunc(x0) }\r\n  var _emscripten_glDepthFunc = _glDepthFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthMask(flag) {\r\n      GLctx.depthMask(!!flag);\r\n    }\r\n  var _emscripten_glDepthMask = _glDepthMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthRangef(x0, x1) { GLctx.depthRange(x0, x1) }\r\n  var _emscripten_glDepthRangef = _glDepthRangef;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDetachShader(program, shader) {\r\n      GLctx.detachShader(GL.programs[program], GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glDetachShader = _glDetachShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDisable(x0) { GLctx.disable(x0) }\r\n  var _emscripten_glDisable = _glDisable;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDisableVertexAttribArray(index) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = false;\r\n      GLctx.disableVertexAttribArray(index);\r\n    }\r\n  var _emscripten_glDisableVertexAttribArray = _glDisableVertexAttribArray;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawArrays(mode, first, count) {\r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(first + count);\r\n  \r\n      GLctx.drawArrays(mode, first, count);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings();\r\n    }\r\n  var _emscripten_glDrawArrays = _glDrawArrays;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawArraysInstanced(mode, first, count, primcount) {\r\n      GLctx.drawArraysInstanced(mode, first, count, primcount);\r\n    }\r\n  var _emscripten_glDrawArraysInstanced = _glDrawArraysInstanced;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedANGLE = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedANGLE = _glDrawArraysInstancedANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedARB = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedARB = _glDrawArraysInstancedARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedEXT = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedEXT = _glDrawArraysInstancedEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedNV = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedNV = _glDrawArraysInstancedNV;\r\n\r\n  var tempFixedLengthArray = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glDrawBuffers(n, bufs) {\r\n  \r\n      var bufArray = tempFixedLengthArray[n];\r\n      for (var i = 0; i < n; i++) {\r\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.drawBuffers(bufArray);\r\n    }\r\n  var _emscripten_glDrawBuffers = _glDrawBuffers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffersEXT = _glDrawBuffers;\r\n  var _emscripten_glDrawBuffersEXT = _glDrawBuffersEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffersWEBGL = _glDrawBuffers;\r\n  var _emscripten_glDrawBuffersWEBGL = _glDrawBuffersWEBGL;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawElements(mode, count, type, indices) {\r\n      var buf;\r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        var size = GL.calcBufLength(1, type, 0, count);\r\n        buf = GL.getTempIndexBuffer(size);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, buf);\r\n        GLctx.bufferSubData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/,\r\n                                 0,\r\n                                 HEAPU8.subarray(indices, indices + size));\r\n        // the index is now 0\r\n        indices = 0;\r\n      }\r\n  \r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      GLctx.drawElements(mode, count, type, indices);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n      }\r\n    }\r\n  var _emscripten_glDrawElements = _glDrawElements;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawElementsInstanced(mode, count, type, indices, primcount) {\r\n      GLctx.drawElementsInstanced(mode, count, type, indices, primcount);\r\n    }\r\n  var _emscripten_glDrawElementsInstanced = _glDrawElementsInstanced;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedANGLE = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedANGLE = _glDrawElementsInstancedANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedARB = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedARB = _glDrawElementsInstancedARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedEXT = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedEXT = _glDrawElementsInstancedEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedNV = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedNV = _glDrawElementsInstancedNV;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawRangeElements(mode, start, end, count, type, indices) {\r\n      // TODO: This should be a trivial pass-though function registered at the bottom of this page as\r\n      // glFuncs[6][1] += ' drawRangeElements';\r\n      // but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,\r\n      // we work around by ignoring the range.\r\n      _glDrawElements(mode, count, type, indices);\r\n    }\r\n  var _emscripten_glDrawRangeElements = _glDrawRangeElements;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEnable(x0) { GLctx.enable(x0) }\r\n  var _emscripten_glEnable = _glEnable;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEnableVertexAttribArray(index) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = true;\r\n      GLctx.enableVertexAttribArray(index);\r\n    }\r\n  var _emscripten_glEnableVertexAttribArray = _glEnableVertexAttribArray;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndQuery(x0) { GLctx.endQuery(x0) }\r\n  var _emscripten_glEndQuery = _glEndQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndQueryEXT(target) {\r\n      GLctx.disjointTimerQueryExt['endQueryEXT'](target);\r\n    }\r\n  var _emscripten_glEndQueryEXT = _glEndQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndTransformFeedback() { GLctx.endTransformFeedback() }\r\n  var _emscripten_glEndTransformFeedback = _glEndTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFenceSync(condition, flags) {\r\n      var sync = GLctx.fenceSync(condition, flags);\r\n      if (sync) {\r\n        var id = GL.getNewId(GL.syncs);\r\n        sync.name = id;\r\n        GL.syncs[id] = sync;\r\n        return id;\r\n      }\r\n      return 0; // Failed to create a sync object\r\n    }\r\n  var _emscripten_glFenceSync = _glFenceSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFinish() { GLctx.finish() }\r\n  var _emscripten_glFinish = _glFinish;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFlush() { GLctx.flush() }\r\n  var _emscripten_glFlush = _glFlush;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer) {\r\n      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,\r\n                                         GL.renderbuffers[renderbuffer]);\r\n    }\r\n  var _emscripten_glFramebufferRenderbuffer = _glFramebufferRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferTexture2D(target, attachment, textarget, texture, level) {\r\n      GLctx.framebufferTexture2D(target, attachment, textarget,\r\n                                      GL.textures[texture], level);\r\n    }\r\n  var _emscripten_glFramebufferTexture2D = _glFramebufferTexture2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferTextureLayer(target, attachment, texture, level, layer) {\r\n      GLctx.framebufferTextureLayer(target, attachment, GL.textures[texture], level, layer);\r\n    }\r\n  var _emscripten_glFramebufferTextureLayer = _glFramebufferTextureLayer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFrontFace(x0) { GLctx.frontFace(x0) }\r\n  var _emscripten_glFrontFace = _glFrontFace;\r\n\r\n  function __glGenObject(n, buffers, createFunction, objectTable\r\n      ) {\r\n      for (var i = 0; i < n; i++) {\r\n        var buffer = GLctx[createFunction]();\r\n        var id = buffer && GL.getNewId(objectTable);\r\n        if (buffer) {\r\n          buffer.name = id;\r\n          objectTable[id] = buffer;\r\n        } else {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n        }\r\n        HEAP32[(((buffers)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenBuffers(n, buffers) {\r\n      __glGenObject(n, buffers, 'createBuffer', GL.buffers\r\n        );\r\n    }\r\n  var _emscripten_glGenBuffers = _glGenBuffers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenFramebuffers(n, ids) {\r\n      __glGenObject(n, ids, 'createFramebuffer', GL.framebuffers\r\n        );\r\n    }\r\n  var _emscripten_glGenFramebuffers = _glGenFramebuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenQueries(n, ids) {\r\n      __glGenObject(n, ids, 'createQuery', GL.queries\r\n        );\r\n    }\r\n  var _emscripten_glGenQueries = _glGenQueries;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenQueriesEXT(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var query = GLctx.disjointTimerQueryExt['createQueryEXT']();\r\n        if (!query) {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n          while (i < n) HEAP32[(((ids)+(i++*4))>>2)] = 0;\r\n          return;\r\n        }\r\n        var id = GL.getNewId(GL.queries);\r\n        query.name = id;\r\n        GL.queries[id] = query;\r\n        HEAP32[(((ids)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  var _emscripten_glGenQueriesEXT = _glGenQueriesEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenRenderbuffers(n, renderbuffers) {\r\n      __glGenObject(n, renderbuffers, 'createRenderbuffer', GL.renderbuffers\r\n        );\r\n    }\r\n  var _emscripten_glGenRenderbuffers = _glGenRenderbuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenSamplers(n, samplers) {\r\n      __glGenObject(n, samplers, 'createSampler', GL.samplers\r\n        );\r\n    }\r\n  var _emscripten_glGenSamplers = _glGenSamplers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenTextures(n, textures) {\r\n      __glGenObject(n, textures, 'createTexture', GL.textures\r\n        );\r\n    }\r\n  var _emscripten_glGenTextures = _glGenTextures;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenTransformFeedbacks(n, ids) {\r\n      __glGenObject(n, ids, 'createTransformFeedback', GL.transformFeedbacks\r\n        );\r\n    }\r\n  var _emscripten_glGenTransformFeedbacks = _glGenTransformFeedbacks;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenVertexArrays(n, arrays) {\r\n      __glGenObject(n, arrays, 'createVertexArray', GL.vaos\r\n        );\r\n    }\r\n  var _emscripten_glGenVertexArrays = _glGenVertexArrays;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGenVertexArraysOES = _glGenVertexArrays;\r\n  var _emscripten_glGenVertexArraysOES = _glGenVertexArraysOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenerateMipmap(x0) { GLctx.generateMipmap(x0) }\r\n  var _emscripten_glGenerateMipmap = _glGenerateMipmap;\r\n\r\n  \r\n  function __glGetActiveAttribOrUniform(funcName, program, index, bufSize, length, size, type, name) {\r\n      program = GL.programs[program];\r\n      var info = GLctx[funcName](program, index);\r\n      if (info) { // If an error occurs, nothing will be written to length, size and type and name.\r\n        var numBytesWrittenExclNull = name && stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n        if (size) HEAP32[((size)>>2)] = info.size;\r\n        if (type) HEAP32[((type)>>2)] = info.type;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveAttrib(program, index, bufSize, length, size, type, name) {\r\n      __glGetActiveAttribOrUniform('getActiveAttrib', program, index, bufSize, length, size, type, name);\r\n    }\r\n  var _emscripten_glGetActiveAttrib = _glGetActiveAttrib;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniform(program, index, bufSize, length, size, type, name) {\r\n      __glGetActiveAttribOrUniform('getActiveUniform', program, index, bufSize, length, size, type, name);\r\n    }\r\n  var _emscripten_glGetActiveUniform = _glGetActiveUniform;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName) {\r\n      program = GL.programs[program];\r\n  \r\n      var result = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\r\n      if (!result) return; // If an error occurs, nothing will be written to uniformBlockName or length.\r\n      if (uniformBlockName && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(result, uniformBlockName, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformBlockName = _glGetActiveUniformBlockName;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8A41 /* GL_UNIFORM_BLOCK_NAME_LENGTH */) {\r\n        var name = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\r\n        HEAP32[((params)>>2)] = name.length+1;\r\n        return;\r\n      }\r\n  \r\n      var result = GLctx.getActiveUniformBlockParameter(program, uniformBlockIndex, pname);\r\n      if (result === null) return; // If an error occurs, nothing should be written to params.\r\n      if (pname == 0x8A43 /*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/) {\r\n        for (var i = 0; i < result.length; i++) {\r\n          HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n        }\r\n      } else {\r\n        HEAP32[((params)>>2)] = result;\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformBlockiv = _glGetActiveUniformBlockiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && uniformIndices == 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var ids = [];\r\n      for (var i = 0; i < uniformCount; i++) {\r\n        ids.push(HEAP32[(((uniformIndices)+(i*4))>>2)]);\r\n      }\r\n  \r\n      var result = GLctx.getActiveUniforms(program, ids, pname);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to params.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformsiv = _glGetActiveUniformsiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetAttachedShaders(program, maxCount, count, shaders) {\r\n      var result = GLctx.getAttachedShaders(GL.programs[program]);\r\n      var len = result.length;\r\n      if (len > maxCount) {\r\n        len = maxCount;\r\n      }\r\n      HEAP32[((count)>>2)] = len;\r\n      for (var i = 0; i < len; ++i) {\r\n        var id = GL.shaders.indexOf(result[i]);\r\n        HEAP32[(((shaders)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  var _emscripten_glGetAttachedShaders = _glGetAttachedShaders;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetAttribLocation(program, name) {\r\n      return GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\r\n    }\r\n  var _emscripten_glGetAttribLocation = _glGetAttribLocation;\r\n\r\n  function writeI53ToI64(ptr, num) {\r\n      HEAPU32[ptr>>2] = num;\r\n      HEAPU32[ptr+4>>2] = (num - HEAPU32[ptr>>2])/4294967296;\r\n    }\r\n  \r\n  function emscriptenWebGLGet(name_, p, type) {\r\n      // Guard against user passing a null pointer.\r\n      // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.\r\n      // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but\r\n      // better to report an error instead of doing anything random.\r\n      if (!p) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = undefined;\r\n      switch (name_) { // Handle a few trivial GLES values\r\n        case 0x8DFA: // GL_SHADER_COMPILER\r\n          ret = 1;\r\n          break;\r\n        case 0x8DF8: // GL_SHADER_BINARY_FORMATS\r\n          if (type != 0 && type != 1) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n          }\r\n          return; // Do not write anything to the out pointer, since no binary formats are supported.\r\n        case 0x87FE: // GL_NUM_PROGRAM_BINARY_FORMATS\r\n        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS\r\n          ret = 0;\r\n          break;\r\n        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS\r\n          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),\r\n          // so implement it ourselves to allow C++ GLES2 code get the length.\r\n          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);\r\n          ret = formats ? formats.length : 0;\r\n          break;\r\n  \r\n        case 0x821D: // GL_NUM_EXTENSIONS\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n            return;\r\n          }\r\n          // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          var exts = GLctx.getSupportedExtensions() || [];\r\n          ret = 2 * exts.length; // each extension is duplicated, first in unprefixed WebGL form, and then a second time with \"GL_\" prefix.\r\n          break;\r\n        case 0x821B: // GL_MAJOR_VERSION\r\n        case 0x821C: // GL_MINOR_VERSION\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          ret = name_ == 0x821B ? 3 : 0; // return version 3.0\r\n          break;\r\n      }\r\n  \r\n      if (ret === undefined) {\r\n        var result = GLctx.getParameter(name_);\r\n        switch (typeof result) {\r\n          case \"number\":\r\n            ret = result;\r\n            break;\r\n          case \"boolean\":\r\n            ret = result ? 1 : 0;\r\n            break;\r\n          case \"string\":\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          case \"object\":\r\n            if (result === null) {\r\n              // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise\r\n              // can mean an invalid name_, which we need to report as an error\r\n              switch (name_) {\r\n                case 0x8894: // ARRAY_BUFFER_BINDING\r\n                case 0x8B8D: // CURRENT_PROGRAM\r\n                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING\r\n                case 0x8CA6: // FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING\r\n                case 0x8CA7: // RENDERBUFFER_BINDING\r\n                case 0x8069: // TEXTURE_BINDING_2D\r\n                case 0x85B5: // WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES\r\n                case 0x8F36: // COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER\r\n                case 0x8F37: // COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER\r\n                case 0x88ED: // PIXEL_PACK_BUFFER_BINDING\r\n                case 0x88EF: // PIXEL_UNPACK_BUFFER_BINDING\r\n                case 0x8CAA: // READ_FRAMEBUFFER_BINDING\r\n                case 0x8919: // SAMPLER_BINDING\r\n                case 0x8C1D: // TEXTURE_BINDING_2D_ARRAY\r\n                case 0x806A: // TEXTURE_BINDING_3D\r\n                case 0x8E25: // TRANSFORM_FEEDBACK_BINDING\r\n                case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n                case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP\r\n                  ret = 0;\r\n                  break;\r\n                }\r\n                default: {\r\n                  GL.recordError(0x500); // GL_INVALID_ENUM\r\n                  return;\r\n                }\r\n              }\r\n            } else if (result instanceof Float32Array ||\r\n                       result instanceof Uint32Array ||\r\n                       result instanceof Int32Array ||\r\n                       result instanceof Array) {\r\n              for (var i = 0; i < result.length; ++i) {\r\n                switch (type) {\r\n                  case 0: HEAP32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 2: HEAPF32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 4: HEAP8[(((p)+(i))>>0)] = result[i] ? 1 : 0; break;\r\n                }\r\n              }\r\n              return;\r\n            } else {\r\n              try {\r\n                ret = result.name | 0;\r\n              } catch(e) {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                err('GL_INVALID_ENUM in glGet' + type + 'v: Unknown object returned from WebGL getParameter(' + name_ + ')! (error: ' + e + ')');\r\n                return;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            err('GL_INVALID_ENUM in glGet' + type + 'v: Native code calling glGet' + type + 'v(' + name_ + ') and it returns ' + result + ' of type ' + typeof(result) + '!');\r\n            return;\r\n        }\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(p, ret); break;\r\n        case 0: HEAP32[((p)>>2)] = ret; break;\r\n        case 2:   HEAPF32[((p)>>2)] = ret; break;\r\n        case 4: HEAP8[((p)>>0)] = ret ? 1 : 0; break;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetBooleanv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 4);\r\n    }\r\n  var _emscripten_glGetBooleanv = _glGetBooleanv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetBufferParameteri64v(target, value, data) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      writeI53ToI64(data, GLctx.getBufferParameter(target, value));\r\n    }\r\n  var _emscripten_glGetBufferParameteri64v = _glGetBufferParameteri64v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetBufferParameteriv(target, value, data) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((data)>>2)] = GLctx.getBufferParameter(target, value);\r\n    }\r\n  var _emscripten_glGetBufferParameteriv = _glGetBufferParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetError() {\r\n      var error = GLctx.getError() || GL.lastError;\r\n      GL.lastError = 0/*GL_NO_ERROR*/;\r\n      return error;\r\n    }\r\n  var _emscripten_glGetError = _glGetError;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetFloatv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 2);\r\n    }\r\n  var _emscripten_glGetFloatv = _glGetFloatv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetFragDataLocation(program, name) {\r\n      return GLctx.getFragDataLocation(GL.programs[program], UTF8ToString(name));\r\n    }\r\n  var _emscripten_glGetFragDataLocation = _glGetFragDataLocation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetFramebufferAttachmentParameteriv(target, attachment, pname, params) {\r\n      var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\r\n      if (result instanceof WebGLRenderbuffer ||\r\n          result instanceof WebGLTexture) {\r\n        result = result.name | 0;\r\n      }\r\n      HEAP32[((params)>>2)] = result;\r\n    }\r\n  var _emscripten_glGetFramebufferAttachmentParameteriv = _glGetFramebufferAttachmentParameteriv;\r\n\r\n  function emscriptenWebGLGetIndexed(target, index, data, type) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var result = GLctx.getIndexedParameter(target, index);\r\n      var ret;\r\n      switch (typeof result) {\r\n        case 'boolean':\r\n          ret = result ? 1 : 0;\r\n          break;\r\n        case 'number':\r\n          ret = result;\r\n          break;\r\n        case 'object':\r\n          if (result === null) {\r\n            switch (target) {\r\n              case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n              case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                ret = 0;\r\n                break;\r\n              default: {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                return;\r\n              }\r\n            }\r\n          } else if (result instanceof WebGLBuffer) {\r\n            ret = result.name | 0;\r\n          } else {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          GL.recordError(0x500); // GL_INVALID_ENUM\r\n          return;\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(data, ret); break;\r\n        case 0: HEAP32[((data)>>2)] = ret; break;\r\n        case 2: HEAPF32[((data)>>2)] = ret; break;\r\n        case 4: HEAP8[((data)>>0)] = ret ? 1 : 0; break;\r\n        default: throw 'internal emscriptenWebGLGetIndexed() error, bad type: ' + type;\r\n      }\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glGetInteger64i_v(target, index, data) {\r\n      emscriptenWebGLGetIndexed(target, index, data, 1);\r\n    }\r\n  var _emscripten_glGetInteger64i_v = _glGetInteger64i_v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetInteger64v(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 1);\r\n    }\r\n  var _emscripten_glGetInteger64v = _glGetInteger64v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetIntegeri_v(target, index, data) {\r\n      emscriptenWebGLGetIndexed(target, index, data, 0);\r\n    }\r\n  var _emscripten_glGetIntegeri_v = _glGetIntegeri_v;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetIntegerv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 0);\r\n    }\r\n  var _emscripten_glGetIntegerv = _glGetIntegerv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetInternalformativ(target, internalformat, pname, bufSize, params) {\r\n      if (bufSize < 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getInternalformatParameter(target, internalformat, pname);\r\n      if (ret === null) return;\r\n      for (var i = 0; i < ret.length && i < bufSize; ++i) {\r\n        HEAP32[(((params)+(i*4))>>2)] = ret[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetInternalformativ = _glGetInternalformativ;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramBinary(program, bufSize, length, binaryFormat, binary) {\r\n      GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n    }\r\n  var _emscripten_glGetProgramBinary = _glGetProgramBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramInfoLog(program, maxLength, length, infoLog) {\r\n      var log = GLctx.getProgramInfoLog(GL.programs[program]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetProgramInfoLog = _glGetProgramInfoLog;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramiv(program, pname, p) {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      if (program >= GL.counter) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getProgramInfoLog(program);\r\n        if (log === null) log = '(unknown error)';\r\n        HEAP32[((p)>>2)] = log.length + 1;\r\n      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\r\n        if (!program.maxUniformLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n            program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformLength;\r\n      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\r\n        if (!program.maxAttributeLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/); ++i) {\r\n            program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxAttributeLength;\r\n      } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\r\n        if (!program.maxUniformBlockNameLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/); ++i) {\r\n            program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformBlockNameLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getProgramParameter(program, pname);\r\n      }\r\n    }\r\n  var _emscripten_glGetProgramiv = _glGetProgramiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjecti64vEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param;\r\n      if (GL.currentContext.version < 2)\r\n      {\r\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      }\r\n      else {\r\n        param = GLctx.getQueryParameter(query, pname);\r\n      }\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      writeI53ToI64(params, ret);\r\n    }\r\n  var _emscripten_glGetQueryObjecti64vEXT = _glGetQueryObjecti64vEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjectivEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n  var _emscripten_glGetQueryObjectivEXT = _glGetQueryObjectivEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectui64vEXT = _glGetQueryObjecti64vEXT;\r\n  var _emscripten_glGetQueryObjectui64vEXT = _glGetQueryObjectui64vEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjectuiv(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.getQueryParameter(query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n  var _emscripten_glGetQueryObjectuiv = _glGetQueryObjectuiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectuivEXT = _glGetQueryObjectivEXT;\r\n  var _emscripten_glGetQueryObjectuivEXT = _glGetQueryObjectuivEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryiv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getQuery(target, pname);\r\n    }\r\n  var _emscripten_glGetQueryiv = _glGetQueryiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryivEXT(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.disjointTimerQueryExt['getQueryEXT'](target, pname);\r\n    }\r\n  var _emscripten_glGetQueryivEXT = _glGetQueryivEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetRenderbufferParameteriv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getRenderbufferParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetRenderbufferParameteriv = _glGetRenderbufferParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSamplerParameterfv(sampler, pname, params) {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\r\n    }\r\n  var _emscripten_glGetSamplerParameterfv = _glGetSamplerParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSamplerParameteriv(sampler, pname, params) {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\r\n    }\r\n  var _emscripten_glGetSamplerParameteriv = _glGetSamplerParameteriv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderInfoLog(shader, maxLength, length, infoLog) {\r\n      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetShaderInfoLog = _glGetShaderInfoLog;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderPrecisionFormat(shaderType, precisionType, range, precision) {\r\n      var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\r\n      HEAP32[((range)>>2)] = result.rangeMin;\r\n      HEAP32[(((range)+(4))>>2)] = result.rangeMax;\r\n      HEAP32[((precision)>>2)] = result.precision;\r\n    }\r\n  var _emscripten_glGetShaderPrecisionFormat = _glGetShaderPrecisionFormat;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderSource(shader, bufSize, length, source) {\r\n      var result = GLctx.getShaderSource(GL.shaders[shader]);\r\n      if (!result) return; // If an error occurs, nothing will be written to length or source.\r\n      var numBytesWrittenExclNull = (bufSize > 0 && source) ? stringToUTF8(result, source, bufSize) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetShaderSource = _glGetShaderSource;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderiv(shader, pname, p) {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n        if (log === null) log = '(unknown error)';\r\n        // The GLES2 specification says that if the shader has an empty info log,\r\n        // a value of 0 is returned. Otherwise the log has a null char appended.\r\n        // (An empty string is falsey, so we can just check that instead of\r\n        // looking at log.length.)\r\n        var logLength = log ? log.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = logLength;\r\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\r\n        var source = GLctx.getShaderSource(GL.shaders[shader]);\r\n        // source may be a null, or the empty string, both of which are falsey\r\n        // values that we report a 0 length for.\r\n        var sourceLength = source ? source.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = sourceLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getShaderParameter(GL.shaders[shader], pname);\r\n      }\r\n    }\r\n  var _emscripten_glGetShaderiv = _glGetShaderiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetString(name_) {\r\n      var ret = GL.stringCache[name_];\r\n      if (!ret) {\r\n        switch (name_) {\r\n          case 0x1F03 /* GL_EXTENSIONS */:\r\n            var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n            exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\r\n            ret = stringToNewUTF8(exts.join(' '));\r\n            break;\r\n          case 0x1F00 /* GL_VENDOR */:\r\n          case 0x1F01 /* GL_RENDERER */:\r\n          case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\r\n          case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\r\n            var s = GLctx.getParameter(name_);\r\n            if (!s) {\r\n              GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            }\r\n            ret = s && stringToNewUTF8(s);\r\n            break;\r\n  \r\n          case 0x1F02 /* GL_VERSION */:\r\n            var glVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\r\n            // return GLES version string corresponding to the version of the WebGL context\r\n            if (GL.currentContext.version >= 2) glVersion = 'OpenGL ES 3.0 (' + glVersion + ')';\r\n            else\r\n            {\r\n              glVersion = 'OpenGL ES 2.0 (' + glVersion + ')';\r\n            }\r\n            ret = stringToNewUTF8(glVersion);\r\n            break;\r\n          case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\r\n            var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\r\n            // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\r\n            var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\r\n            var ver_num = glslVersion.match(ver_re);\r\n            if (ver_num !== null) {\r\n              if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\r\n              glslVersion = 'OpenGL ES GLSL ES ' + ver_num[1] + ' (' + glslVersion + ')';\r\n            }\r\n            ret = stringToNewUTF8(glslVersion);\r\n            break;\r\n          default:\r\n            GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            // fall through\r\n        }\r\n        GL.stringCache[name_] = ret;\r\n      }\r\n      return ret;\r\n    }\r\n  var _emscripten_glGetString = _glGetString;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetStringi(name, index) {\r\n      if (GL.currentContext.version < 2) {\r\n        GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n        return 0;\r\n      }\r\n      var stringiCache = GL.stringiCache[name];\r\n      if (stringiCache) {\r\n        if (index < 0 || index >= stringiCache.length) {\r\n          GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n          return 0;\r\n        }\r\n        return stringiCache[index];\r\n      }\r\n      switch (name) {\r\n        case 0x1F03 /* GL_EXTENSIONS */:\r\n          var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\r\n          exts = exts.map(function(e) { return stringToNewUTF8(e); });\r\n  \r\n          stringiCache = GL.stringiCache[name] = exts;\r\n          if (index < 0 || index >= stringiCache.length) {\r\n            GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n            return 0;\r\n          }\r\n          return stringiCache[index];\r\n        default:\r\n          GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n          return 0;\r\n      }\r\n    }\r\n  var _emscripten_glGetStringi = _glGetStringi;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSynciv(sync, pname, bufSize, length, values) {\r\n      if (bufSize < 0) {\r\n        // GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,\r\n        // so raise GL_INVALID_VALUE here as well.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!values) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getSyncParameter(GL.syncs[sync], pname);\r\n      if (ret !== null) {\r\n        HEAP32[((values)>>2)] = ret;\r\n        if (length) HEAP32[((length)>>2)] = 1; // Report a single value outputted.\r\n      }\r\n    }\r\n  var _emscripten_glGetSynciv = _glGetSynciv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTexParameterfv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetTexParameterfv = _glGetTexParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTexParameteriv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetTexParameteriv = _glGetTexParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name) {\r\n      program = GL.programs[program];\r\n      var info = GLctx.getTransformFeedbackVarying(program, index);\r\n      if (!info) return; // If an error occurred, the return parameters length, size, type and name will be unmodified.\r\n  \r\n      if (name && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n  \r\n      if (size) HEAP32[((size)>>2)] = info.size;\r\n      if (type) HEAP32[((type)>>2)] = info.type;\r\n    }\r\n  var _emscripten_glGetTransformFeedbackVarying = _glGetTransformFeedbackVarying;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformBlockIndex(program, uniformBlockName) {\r\n      return GLctx.getUniformBlockIndex(GL.programs[program], UTF8ToString(uniformBlockName));\r\n    }\r\n  var _emscripten_glGetUniformBlockIndex = _glGetUniformBlockIndex;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformIndices(program, uniformCount, uniformNames, uniformIndices) {\r\n      if (!uniformIndices) {\r\n        // GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense\r\n        // if uniformIndices == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && (uniformNames == 0 || uniformIndices == 0)) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var names = [];\r\n      for (var i = 0; i < uniformCount; i++)\r\n        names.push(UTF8ToString(HEAP32[(((uniformNames)+(i*4))>>2)]));\r\n  \r\n      var result = GLctx.getUniformIndices(program, names);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to uniformIndices.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((uniformIndices)+(i*4))>>2)] = result[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetUniformIndices = _glGetUniformIndices;\r\n\r\n  \r\n  /** @noinline */\r\n  function webglGetLeftBracePos(name) {\r\n      return name.slice(-1) == ']' && name.lastIndexOf('[');\r\n    }\r\n  \r\n  function webglPrepareUniformLocationsBeforeFirstUse(program) {\r\n      var uniformLocsById = program.uniformLocsById, // Maps GLuint -> WebGLUniformLocation\r\n        uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, // Maps name -> [uniform array length, GLuint]\r\n        i, j;\r\n  \r\n      // On the first time invocation of glGetUniformLocation on this shader program:\r\n      // initialize cache data structures and discover which uniforms are arrays.\r\n      if (!uniformLocsById) {\r\n        // maps GLint integer locations to WebGLUniformLocations\r\n        program.uniformLocsById = uniformLocsById = {};\r\n        // maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations\r\n        program.uniformArrayNamesById = {};\r\n  \r\n        for (i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n          var u = GLctx.getActiveUniform(program, i);\r\n          var nm = u.name;\r\n          var sz = u.size;\r\n          var lb = webglGetLeftBracePos(nm);\r\n          var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\r\n  \r\n          // Assign a new location.\r\n          var id = program.uniformIdCounter;\r\n          program.uniformIdCounter += sz;\r\n          // Eagerly get the location of the uniformArray[0] base element.\r\n          // The remaining indices >0 will be left for lazy evaluation to\r\n          // improve performance. Those may never be needed to fetch, if the\r\n          // application fills arrays always in full starting from the first\r\n          // element of the array.\r\n          uniformSizeAndIdsByName[arrayName] = [sz, id];\r\n  \r\n          // Store placeholder integers in place that highlight that these\r\n          // >0 index locations are array indices pending population.\r\n          for(j = 0; j < sz; ++j) {\r\n            uniformLocsById[id] = j;\r\n            program.uniformArrayNamesById[id++] = arrayName;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformLocation(program, name) {\r\n  \r\n      name = UTF8ToString(name);\r\n  \r\n      if (program = GL.programs[program]) {\r\n        webglPrepareUniformLocationsBeforeFirstUse(program);\r\n        var uniformLocsById = program.uniformLocsById; // Maps GLuint -> WebGLUniformLocation\r\n        var arrayIndex = 0;\r\n        var uniformBaseName = name;\r\n  \r\n        // Invariant: when populating integer IDs for uniform locations, we must maintain the precondition that\r\n        // arrays reside in contiguous addresses, i.e. for a 'vec4 colors[10];', colors[4] must be at location colors[0]+4.\r\n        // However, user might call glGetUniformLocation(program, \"colors\") for an array, so we cannot discover based on the user\r\n        // input arguments whether the uniform we are dealing with is an array. The only way to discover which uniforms are arrays\r\n        // is to enumerate over all the active uniforms in the program.\r\n        var leftBrace = webglGetLeftBracePos(name);\r\n  \r\n        // If user passed an array accessor \"[index]\", parse the array index off the accessor.\r\n        if (leftBrace > 0) {\r\n          arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0; // \"index]\", coerce parseInt(']') with >>>0 to treat \"foo[]\" as \"foo[0]\" and foo[-1] as unsigned out-of-bounds.\r\n          uniformBaseName = name.slice(0, leftBrace);\r\n        }\r\n  \r\n        // Have we cached the location of this uniform before?\r\n        var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName]; // A pair [array length, GLint of the uniform location]\r\n  \r\n        // If an uniform with this name exists, and if its index is within the array limits (if it's even an array),\r\n        // query the WebGLlocation, or return an existing cached location.\r\n        if (sizeAndId && arrayIndex < sizeAndId[0]) {\r\n          arrayIndex += sizeAndId[1]; // Add the base location of the uniform to the array index offset.\r\n          if ((uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name))) {\r\n            return arrayIndex;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // N.b. we are currently unable to distinguish between GL program IDs that never existed vs GL program IDs that have been deleted,\r\n        // so report GL_INVALID_VALUE in both cases.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n      }\r\n      return -1;\r\n    }\r\n  var _emscripten_glGetUniformLocation = _glGetUniformLocation;\r\n\r\n  function webglGetUniformLocation(location) {\r\n      var p = GLctx.currentProgram;\r\n  \r\n      if (p) {\r\n        var webglLoc = p.uniformLocsById[location];\r\n        // p.uniformLocsById[location] stores either an integer, or a WebGLUniformLocation.\r\n  \r\n        // If an integer, we have not yet bound the location, so do it now. The integer value specifies the array index\r\n        // we should bind to.\r\n        if (typeof webglLoc == 'number') {\r\n          p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? '[' + webglLoc + ']' : ''));\r\n        }\r\n        // Else an already cached WebGLUniformLocation, return it.\r\n        return webglLoc;\r\n      } else {\r\n        GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n      }\r\n    }\r\n  \r\n  \r\n  /** @suppress{checkTypes} */\r\n  function emscriptenWebGLGetUniform(program, location, params, type) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      webglPrepareUniformLocationsBeforeFirstUse(program);\r\n      var data = GLctx.getUniform(program, webglGetUniformLocation(location));\r\n      if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformfv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 2);\r\n    }\r\n  var _emscripten_glGetUniformfv = _glGetUniformfv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformiv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    }\r\n  var _emscripten_glGetUniformiv = _glGetUniformiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformuiv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    }\r\n  var _emscripten_glGetUniformuiv = _glGetUniformuiv;\r\n\r\n  /** @suppress{checkTypes} */\r\n  function emscriptenWebGLGetVertexAttrib(index, pname, params, type) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttrib*v on client-side array: not supported, bad data returned\");\r\n      }\r\n      var data = GLctx.getVertexAttrib(index, pname);\r\n      if (pname == 0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/) {\r\n        HEAP32[((params)>>2)] = data && data[\"name\"];\r\n      } else if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n          case 5: HEAP32[((params)>>2)] = Math.fround(data); break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 5: HEAP32[(((params)+(i*4))>>2)] = Math.fround(data[i]); break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribIiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\r\n    }\r\n  var _emscripten_glGetVertexAttribIiv = _glGetVertexAttribIiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetVertexAttribIuiv = _glGetVertexAttribIiv;\r\n  var _emscripten_glGetVertexAttribIuiv = _glGetVertexAttribIuiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribPointerv(index, pname, pointer) {\r\n      if (!pointer) {\r\n        // GLES2 specification does not specify how to behave if pointer is a null pointer. Since calling this function does not make sense\r\n        // if pointer == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttribPointer on client-side array: not supported, bad data returned\");\r\n      }\r\n      HEAP32[((pointer)>>2)] = GLctx.getVertexAttribOffset(index, pname);\r\n    }\r\n  var _emscripten_glGetVertexAttribPointerv = _glGetVertexAttribPointerv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribfv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2);\r\n    }\r\n  var _emscripten_glGetVertexAttribfv = _glGetVertexAttribfv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5);\r\n    }\r\n  var _emscripten_glGetVertexAttribiv = _glGetVertexAttribiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glHint(x0, x1) { GLctx.hint(x0, x1) }\r\n  var _emscripten_glHint = _glHint;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glInvalidateFramebuffer(target, numAttachments, attachments) {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.invalidateFramebuffer(target, list);\r\n    }\r\n  var _emscripten_glInvalidateFramebuffer = _glInvalidateFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glInvalidateSubFramebuffer(target, numAttachments, attachments, x, y, width, height) {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.invalidateSubFramebuffer(target, list, x, y, width, height);\r\n    }\r\n  var _emscripten_glInvalidateSubFramebuffer = _glInvalidateSubFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsBuffer(buffer) {\r\n      var b = GL.buffers[buffer];\r\n      if (!b) return 0;\r\n      return GLctx.isBuffer(b);\r\n    }\r\n  var _emscripten_glIsBuffer = _glIsBuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsEnabled(x0) { return GLctx.isEnabled(x0) }\r\n  var _emscripten_glIsEnabled = _glIsEnabled;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsFramebuffer(framebuffer) {\r\n      var fb = GL.framebuffers[framebuffer];\r\n      if (!fb) return 0;\r\n      return GLctx.isFramebuffer(fb);\r\n    }\r\n  var _emscripten_glIsFramebuffer = _glIsFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsProgram(program) {\r\n      program = GL.programs[program];\r\n      if (!program) return 0;\r\n      return GLctx.isProgram(program);\r\n    }\r\n  var _emscripten_glIsProgram = _glIsProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsQuery(id) {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.isQuery(query);\r\n    }\r\n  var _emscripten_glIsQuery = _glIsQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsQueryEXT(id) {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.disjointTimerQueryExt['isQueryEXT'](query);\r\n    }\r\n  var _emscripten_glIsQueryEXT = _glIsQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsRenderbuffer(renderbuffer) {\r\n      var rb = GL.renderbuffers[renderbuffer];\r\n      if (!rb) return 0;\r\n      return GLctx.isRenderbuffer(rb);\r\n    }\r\n  var _emscripten_glIsRenderbuffer = _glIsRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsSampler(id) {\r\n      var sampler = GL.samplers[id];\r\n      if (!sampler) return 0;\r\n      return GLctx.isSampler(sampler);\r\n    }\r\n  var _emscripten_glIsSampler = _glIsSampler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsShader(shader) {\r\n      var s = GL.shaders[shader];\r\n      if (!s) return 0;\r\n      return GLctx.isShader(s);\r\n    }\r\n  var _emscripten_glIsShader = _glIsShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsSync(sync) {\r\n      return GLctx.isSync(GL.syncs[sync]);\r\n    }\r\n  var _emscripten_glIsSync = _glIsSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsTexture(id) {\r\n      var texture = GL.textures[id];\r\n      if (!texture) return 0;\r\n      return GLctx.isTexture(texture);\r\n    }\r\n  var _emscripten_glIsTexture = _glIsTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsTransformFeedback(id) {\r\n      return GLctx.isTransformFeedback(GL.transformFeedbacks[id]);\r\n    }\r\n  var _emscripten_glIsTransformFeedback = _glIsTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsVertexArray(array) {\r\n  \r\n      var vao = GL.vaos[array];\r\n      if (!vao) return 0;\r\n      return GLctx.isVertexArray(vao);\r\n    }\r\n  var _emscripten_glIsVertexArray = _glIsVertexArray;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glIsVertexArrayOES = _glIsVertexArray;\r\n  var _emscripten_glIsVertexArrayOES = _glIsVertexArrayOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glLineWidth(x0) { GLctx.lineWidth(x0) }\r\n  var _emscripten_glLineWidth = _glLineWidth;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glLinkProgram(program) {\r\n      program = GL.programs[program];\r\n      GLctx.linkProgram(program);\r\n      // Invalidate earlier computed uniform->ID mappings, those have now become stale\r\n      program.uniformLocsById = 0; // Mark as null-like so that glGetUniformLocation() knows to populate this again.\r\n      program.uniformSizeAndIdsByName = {};\r\n  \r\n    }\r\n  var _emscripten_glLinkProgram = _glLinkProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPauseTransformFeedback() { GLctx.pauseTransformFeedback() }\r\n  var _emscripten_glPauseTransformFeedback = _glPauseTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPixelStorei(pname, param) {\r\n      if (pname == 0xCF5 /* GL_UNPACK_ALIGNMENT */) {\r\n        GL.unpackAlignment = param;\r\n      }\r\n      GLctx.pixelStorei(pname, param);\r\n    }\r\n  var _emscripten_glPixelStorei = _glPixelStorei;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPolygonOffset(x0, x1) { GLctx.polygonOffset(x0, x1) }\r\n  var _emscripten_glPolygonOffset = _glPolygonOffset;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glProgramBinary(program, binaryFormat, binary, length) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glProgramBinary = _glProgramBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glProgramParameteri(program, pname, value) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glProgramParameteri = _glProgramParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glQueryCounterEXT(id, target) {\r\n      GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id], target);\r\n    }\r\n  var _emscripten_glQueryCounterEXT = _glQueryCounterEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glReadBuffer(x0) { GLctx.readBuffer(x0) }\r\n  var _emscripten_glReadBuffer = _glReadBuffer;\r\n\r\n  function computeUnpackAlignedImageSize(width, height, sizePerPixel, alignment) {\r\n      function roundedToNextMultipleOf(x, y) {\r\n        return (x + y - 1) & -y;\r\n      }\r\n      var plainRowSize = width * sizePerPixel;\r\n      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);\r\n      return height * alignedRowSize;\r\n    }\r\n  \r\n  function colorChannelsInGlTextureFormat(format) {\r\n      // Micro-optimizations for size: map format to size by subtracting smallest enum value (0x1902) from all values first.\r\n      // Also omit the most common size value (1) from the list, which is assumed by formats not on the list.\r\n      var colorChannels = {\r\n        // 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,\r\n        // 0x1906 /* GL_ALPHA */ - 0x1902: 1,\r\n        5: 3,\r\n        6: 4,\r\n        // 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,\r\n        8: 2,\r\n        29502: 3,\r\n        29504: 4,\r\n        // 0x1903 /* GL_RED */ - 0x1902: 1,\r\n        26917: 2,\r\n        26918: 2,\r\n        // 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,\r\n        29846: 3,\r\n        29847: 4\r\n      };\r\n      return colorChannels[format - 0x1902]||1;\r\n    }\r\n  \r\n  function heapObjectForWebGLType(type) {\r\n      // Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare\r\n      // smaller values for the heap, for shorter generated code size.\r\n      // Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.\r\n      // (since most types are HEAPU16)\r\n      type -= 0x1400;\r\n      if (type == 0) return HEAP8;\r\n  \r\n      if (type == 1) return HEAPU8;\r\n  \r\n      if (type == 2) return HEAP16;\r\n  \r\n      if (type == 4) return HEAP32;\r\n  \r\n      if (type == 6) return HEAPF32;\r\n  \r\n      if (type == 5\r\n        || type == 28922\r\n        || type == 28520\r\n        || type == 30779\r\n        || type == 30782\r\n        )\r\n        return HEAPU32;\r\n  \r\n      return HEAPU16;\r\n    }\r\n  \r\n  function heapAccessShiftForWebGLHeap(heap) {\r\n      return 31 - Math.clz32(heap.BYTES_PER_ELEMENT);\r\n    }\r\n  \r\n  function emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) {\r\n      var heap = heapObjectForWebGLType(type);\r\n      var shift = heapAccessShiftForWebGLHeap(heap);\r\n      var byteSize = 1<<shift;\r\n      var sizePerPixel = colorChannelsInGlTextureFormat(format) * byteSize;\r\n      var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel, GL.unpackAlignment);\r\n      return heap.subarray(pixels >> shift, pixels + bytes >> shift);\r\n    }\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glReadPixels(x, y, width, height, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelPackBufferBinding) {\r\n          GLctx.readPixels(x, y, width, height, format, type, pixels);\r\n        } else {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.readPixels(x, y, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);\r\n      if (!pixelData) {\r\n        GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n        return;\r\n      }\r\n      GLctx.readPixels(x, y, width, height, format, type, pixelData);\r\n    }\r\n  var _emscripten_glReadPixels = _glReadPixels;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glReleaseShaderCompiler() {\r\n      // NOP (as allowed by GLES 2.0 spec)\r\n    }\r\n  var _emscripten_glReleaseShaderCompiler = _glReleaseShaderCompiler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glRenderbufferStorage(x0, x1, x2, x3) { GLctx.renderbufferStorage(x0, x1, x2, x3) }\r\n  var _emscripten_glRenderbufferStorage = _glRenderbufferStorage;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glRenderbufferStorageMultisample(x0, x1, x2, x3, x4) { GLctx.renderbufferStorageMultisample(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glRenderbufferStorageMultisample = _glRenderbufferStorageMultisample;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glResumeTransformFeedback() { GLctx.resumeTransformFeedback() }\r\n  var _emscripten_glResumeTransformFeedback = _glResumeTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSampleCoverage(value, invert) {\r\n      GLctx.sampleCoverage(value, !!invert);\r\n    }\r\n  var _emscripten_glSampleCoverage = _glSampleCoverage;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameterf(sampler, pname, param) {\r\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameterf = _glSamplerParameterf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameterfv(sampler, pname, params) {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameterfv = _glSamplerParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameteri(sampler, pname, param) {\r\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameteri = _glSamplerParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameteriv(sampler, pname, params) {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameteriv = _glSamplerParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glScissor(x0, x1, x2, x3) { GLctx.scissor(x0, x1, x2, x3) }\r\n  var _emscripten_glScissor = _glScissor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glShaderBinary(count, shaders, binaryformat, binary, length) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glShaderBinary = _glShaderBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glShaderSource(shader, count, string, length) {\r\n      var source = GL.getSource(shader, count, string, length);\r\n  \r\n      GLctx.shaderSource(GL.shaders[shader], source);\r\n    }\r\n  var _emscripten_glShaderSource = _glShaderSource;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilFunc(x0, x1, x2) { GLctx.stencilFunc(x0, x1, x2) }\r\n  var _emscripten_glStencilFunc = _glStencilFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilFuncSeparate(x0, x1, x2, x3) { GLctx.stencilFuncSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glStencilFuncSeparate = _glStencilFuncSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilMask(x0) { GLctx.stencilMask(x0) }\r\n  var _emscripten_glStencilMask = _glStencilMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilMaskSeparate(x0, x1) { GLctx.stencilMaskSeparate(x0, x1) }\r\n  var _emscripten_glStencilMaskSeparate = _glStencilMaskSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilOp(x0, x1, x2) { GLctx.stencilOp(x0, x1, x2) }\r\n  var _emscripten_glStencilOp = _glStencilOp;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilOpSeparate(x0, x1, x2, x3) { GLctx.stencilOpSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glStencilOpSeparate = _glStencilOpSeparate;\r\n\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null);\r\n    }\r\n  var _emscripten_glTexImage2D = _glTexImage2D;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, null);\r\n      }\r\n    }\r\n  var _emscripten_glTexImage3D = _glTexImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameterf(x0, x1, x2) { GLctx.texParameterf(x0, x1, x2) }\r\n  var _emscripten_glTexParameterf = _glTexParameterf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameterfv(target, pname, params) {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.texParameterf(target, pname, param);\r\n    }\r\n  var _emscripten_glTexParameterfv = _glTexParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }\r\n  var _emscripten_glTexParameteri = _glTexParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameteriv(target, pname, params) {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.texParameteri(target, pname, param);\r\n    }\r\n  var _emscripten_glTexParameteriv = _glTexParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexStorage2D(x0, x1, x2, x3, x4) { GLctx.texStorage2D(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glTexStorage2D = _glTexStorage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexStorage3D(x0, x1, x2, x3, x4, x5) { GLctx.texStorage3D(x0, x1, x2, x3, x4, x5) }\r\n  var _emscripten_glTexStorage3D = _glTexStorage3D;\r\n\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = null;\r\n      if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0);\r\n      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\r\n    }\r\n  var _emscripten_glTexSubImage2D = _glTexSubImage2D;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, null);\r\n      }\r\n    }\r\n  var _emscripten_glTexSubImage3D = _glTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTransformFeedbackVaryings(program, count, varyings, bufferMode) {\r\n      program = GL.programs[program];\r\n      var vars = [];\r\n      for (var i = 0; i < count; i++)\r\n        vars.push(UTF8ToString(HEAP32[(((varyings)+(i*4))>>2)]));\r\n  \r\n      GLctx.transformFeedbackVaryings(program, vars, bufferMode);\r\n    }\r\n  var _emscripten_glTransformFeedbackVaryings = _glTransformFeedbackVaryings;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1f(location, v0) {\r\n      GLctx.uniform1f(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1f = _glUniform1f;\r\n\r\n  \r\n  var miniTempWebGLFloatBuffers = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform1fv = _glUniform1fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1i(location, v0) {\r\n      GLctx.uniform1i(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1i = _glUniform1i;\r\n\r\n  \r\n  var miniTempWebGLIntBuffers = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform1iv = _glUniform1iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform1ui(location, v0) {\r\n      GLctx.uniform1ui(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1ui = _glUniform1ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform1uiv(location, count, value) {\r\n      count && GLctx.uniform1uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count);\r\n    }\r\n  var _emscripten_glUniform1uiv = _glUniform1uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2f(location, v0, v1) {\r\n      GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2f = _glUniform2f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform2fv = _glUniform2fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2i(location, v0, v1) {\r\n      GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2i = _glUniform2i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform2iv = _glUniform2iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform2ui(location, v0, v1) {\r\n      GLctx.uniform2ui(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2ui = _glUniform2ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform2uiv(location, count, value) {\r\n      count && GLctx.uniform2uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*2);\r\n    }\r\n  var _emscripten_glUniform2uiv = _glUniform2uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3f(location, v0, v1, v2) {\r\n      GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3f = _glUniform3f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform3fv = _glUniform3fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3i(location, v0, v1, v2) {\r\n      GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3i = _glUniform3i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform3iv = _glUniform3iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform3ui(location, v0, v1, v2) {\r\n      GLctx.uniform3ui(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3ui = _glUniform3ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform3uiv(location, count, value) {\r\n      count && GLctx.uniform3uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*3);\r\n    }\r\n  var _emscripten_glUniform3uiv = _glUniform3uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4f(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4f = _glUniform4f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 4 * count; i += 4) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform4fv = _glUniform4fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4i(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4i = _glUniform4i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAP32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform4iv = _glUniform4iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform4ui(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4ui(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4ui = _glUniform4ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform4uiv(location, count, value) {\r\n      count && GLctx.uniform4uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*4);\r\n    }\r\n  var _emscripten_glUniform4uiv = _glUniform4uiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding) {\r\n      program = GL.programs[program];\r\n  \r\n      GLctx.uniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding);\r\n    }\r\n  var _emscripten_glUniformBlockBinding = _glUniformBlockBinding;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix2fv = _glUniformMatrix2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2x3fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    }\r\n  var _emscripten_glUniformMatrix2x3fv = _glUniformMatrix2x3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2x4fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    }\r\n  var _emscripten_glUniformMatrix2x4fv = _glUniformMatrix2x4fv;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*9);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 32) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[9*count-1];\r\n        for (var i = 0; i < 9*count; i += 9) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n          view[i+4] = HEAPF32[(((value)+(4*i+16))>>2)];\r\n          view[i+5] = HEAPF32[(((value)+(4*i+20))>>2)];\r\n          view[i+6] = HEAPF32[(((value)+(4*i+24))>>2)];\r\n          view[i+7] = HEAPF32[(((value)+(4*i+28))>>2)];\r\n          view[i+8] = HEAPF32[(((value)+(4*i+32))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*36)>>2);\r\n      }\r\n      GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix3fv = _glUniformMatrix3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3x2fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    }\r\n  var _emscripten_glUniformMatrix3x2fv = _glUniformMatrix3x2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3x4fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    }\r\n  var _emscripten_glUniformMatrix3x4fv = _glUniformMatrix3x4fv;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*16);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 18) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[16*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 16 * count; i += 16) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n          view[i + 4] = heap[dst + 4];\r\n          view[i + 5] = heap[dst + 5];\r\n          view[i + 6] = heap[dst + 6];\r\n          view[i + 7] = heap[dst + 7];\r\n          view[i + 8] = heap[dst + 8];\r\n          view[i + 9] = heap[dst + 9];\r\n          view[i + 10] = heap[dst + 10];\r\n          view[i + 11] = heap[dst + 11];\r\n          view[i + 12] = heap[dst + 12];\r\n          view[i + 13] = heap[dst + 13];\r\n          view[i + 14] = heap[dst + 14];\r\n          view[i + 15] = heap[dst + 15];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*64)>>2);\r\n      }\r\n      GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix4fv = _glUniformMatrix4fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4x2fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    }\r\n  var _emscripten_glUniformMatrix4x2fv = _glUniformMatrix4x2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4x3fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    }\r\n  var _emscripten_glUniformMatrix4x3fv = _glUniformMatrix4x3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUseProgram(program) {\r\n      program = GL.programs[program];\r\n      GLctx.useProgram(program);\r\n      // Record the currently active program so that we can access the uniform\r\n      // mapping table of that program.\r\n      GLctx.currentProgram = program;\r\n    }\r\n  var _emscripten_glUseProgram = _glUseProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glValidateProgram(program) {\r\n      GLctx.validateProgram(GL.programs[program]);\r\n    }\r\n  var _emscripten_glValidateProgram = _glValidateProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib1f(x0, x1) { GLctx.vertexAttrib1f(x0, x1) }\r\n  var _emscripten_glVertexAttrib1f = _glVertexAttrib1f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib1fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib1f(index, HEAPF32[v>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib1fv = _glVertexAttrib1fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib2f(x0, x1, x2) { GLctx.vertexAttrib2f(x0, x1, x2) }\r\n  var _emscripten_glVertexAttrib2f = _glVertexAttrib2f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib2fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib2f(index, HEAPF32[v>>2], HEAPF32[v+4>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib2fv = _glVertexAttrib2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib3f(x0, x1, x2, x3) { GLctx.vertexAttrib3f(x0, x1, x2, x3) }\r\n  var _emscripten_glVertexAttrib3f = _glVertexAttrib3f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib3fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib3f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib3fv = _glVertexAttrib3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib4f(x0, x1, x2, x3, x4) { GLctx.vertexAttrib4f(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttrib4f = _glVertexAttrib4f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib4fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib4f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2], HEAPF32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib4fv = _glVertexAttrib4fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribDivisor(index, divisor) {\r\n      GLctx.vertexAttribDivisor(index, divisor);\r\n    }\r\n  var _emscripten_glVertexAttribDivisor = _glVertexAttribDivisor;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorANGLE = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorANGLE = _glVertexAttribDivisorANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorARB = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorARB = _glVertexAttribDivisorARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorEXT = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorEXT = _glVertexAttribDivisorEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorNV = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorNV = _glVertexAttribDivisorNV;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4i(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4i(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttribI4i = _glVertexAttribI4i;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4iv(index, v) {\r\n      GLctx.vertexAttribI4i(index, HEAP32[v>>2], HEAP32[v+4>>2], HEAP32[v+8>>2], HEAP32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttribI4iv = _glVertexAttribI4iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4ui(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4ui(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttribI4ui = _glVertexAttribI4ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4uiv(index, v) {\r\n      GLctx.vertexAttribI4ui(index, HEAPU32[v>>2], HEAPU32[v+4>>2], HEAPU32[v+8>>2], HEAPU32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttribI4uiv = _glVertexAttribI4uiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribIPointer(index, size, type, stride, ptr) {\r\n      GLctx.vertexAttribIPointer(index, size, type, stride, ptr);\r\n    }\r\n  var _emscripten_glVertexAttribIPointer = _glVertexAttribIPointer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      if (!GLctx.currentArrayBufferBinding) {\r\n        cb.size = size;\r\n        cb.type = type;\r\n        cb.normalized = normalized;\r\n        cb.stride = stride;\r\n        cb.ptr = ptr;\r\n        cb.clientside = true;\r\n        cb.vertexAttribPointerAdaptor = function(index, size, type, normalized, stride, ptr) {\r\n          this.vertexAttribPointer(index, size, type, normalized, stride, ptr);\r\n        };\r\n        return;\r\n      }\r\n      cb.clientside = false;\r\n      GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\r\n    }\r\n  var _emscripten_glVertexAttribPointer = _glVertexAttribPointer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }\r\n  var _emscripten_glViewport = _glViewport;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glWaitSync(sync, flags, timeout_low, timeout_high) {\r\n      // See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      GLctx.waitSync(GL.syncs[sync], flags, timeout);\r\n    }\r\n  var _emscripten_glWaitSync = _glWaitSync;\r\n\r\n  function _emscripten_has_asyncify() {\r\n      return 1;\r\n    }\r\n\r\n  function _emscripten_memcpy_big(dest, src, num) {\r\n      HEAPU8.copyWithin(dest, src, src + num);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  function doRequestFullscreen(target, strategy) {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      if (!target.requestFullscreen\r\n        && !target.webkitRequestFullscreen\r\n        ) {\r\n        return -3;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (strategy.deferUntilInEventHandler) {\r\n          JSEvents.deferCall(JSEvents_requestFullscreen, 1 /* priority over pointer lock */, [target, strategy]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return JSEvents_requestFullscreen(target, strategy);\r\n    }\r\n  \r\n  \r\n  function _emscripten_request_fullscreen_strategy(target, deferUntilInEventHandler, fullscreenStrategy) {\r\n      var strategy = {\r\n        scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n        canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n        filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n        deferUntilInEventHandler: deferUntilInEventHandler,\r\n        canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n        canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)]\r\n      };\r\n  \r\n      return doRequestFullscreen(target, strategy);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_request_pointerlock(target, deferUntilInEventHandler) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      if (!target.requestPointerLock\r\n        ) {\r\n        return -1;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (deferUntilInEventHandler) {\r\n          JSEvents.deferCall(requestPointerLock, 2 /* priority below fullscreen */, [target]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return requestPointerLock(target);\r\n    }\r\n\r\n  function getHeapMax() {\r\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\r\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\r\n      // for any code that deals with heap sizes, which would require special\r\n      // casing all heap size related code to treat 0 specially.\r\n      return 2147483648;\r\n    }\r\n  \r\n  function emscripten_realloc_buffer(size) {\r\n      var b = wasmMemory.buffer;\r\n      try {\r\n        // round size grow request up to wasm page size (fixed 64KB per spec)\r\n        wasmMemory.grow((size - b.byteLength + 65535) >>> 16); // .grow() takes a delta compared to the previous size\r\n        updateMemoryViews();\r\n        return 1 /*success*/;\r\n      } catch(e) {\r\n      }\r\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\r\n      // anyhow)\r\n    }\r\n  function _emscripten_resize_heap(requestedSize) {\r\n      var oldSize = HEAPU8.length;\r\n      requestedSize = requestedSize >>> 0;\r\n      // With multithreaded builds, races can happen (another thread might increase the size\r\n      // in between), so return a failure, and let the caller retry.\r\n  \r\n      // Memory resize rules:\r\n      // 1.  Always increase heap size to at least the requested size, rounded up\r\n      //     to next page multiple.\r\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\r\n      //     geometrically: increase the heap size according to\r\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\r\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\r\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\r\n      //     linearly: increase the heap size by at least\r\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\r\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\r\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\r\n      // 4.  If we were unable to allocate as much memory, it may be due to\r\n      //     over-eager decision to excessively reserve due to (3) above.\r\n      //     Hence if an allocation fails, cut down on the amount of excess\r\n      //     growth, in an attempt to succeed to perform a smaller allocation.\r\n  \r\n      // A limit is set for how much we can grow. We should not exceed that\r\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\r\n      var maxHeapSize = getHeapMax();\r\n      if (requestedSize > maxHeapSize) {\r\n        return false;\r\n      }\r\n  \r\n      let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\r\n  \r\n      // Loop through potential heap size increases. If we attempt a too eager\r\n      // reservation that fails, cut down on the attempted size and reserve a\r\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\r\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\r\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\r\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\r\n  \r\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\r\n  \r\n        var replacement = emscripten_realloc_buffer(newSize);\r\n        if (replacement) {\r\n  \r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n  function _emscripten_sample_gamepad_data() {\r\n      return (JSEvents.lastGamepadState = (navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : null)))\r\n        ? 0 : -1;\r\n    }\r\n\r\n  \r\n  \r\n  function registerBeforeUnloadEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {\r\n      var beforeUnloadEventHandlerFunc = function(e = event) {\r\n        // Note: This is always called on the main browser thread, since it needs synchronously return a value!\r\n        var confirmationMessage = ((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, 0, userData);\r\n        \r\n        if (confirmationMessage) {\r\n          confirmationMessage = UTF8ToString(confirmationMessage);\r\n        }\r\n        if (confirmationMessage) {\r\n          e.preventDefault();\r\n          e.returnValue = confirmationMessage;\r\n          return confirmationMessage;\r\n        }\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: beforeUnloadEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_beforeunload_callback_on_thread(userData, callbackfunc, targetThread) {\r\n      if (typeof onbeforeunload == 'undefined') return -1;\r\n      // beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,\r\n      // and there is no time to start proxying it anywhere.\r\n      if (targetThread !== 1) return -5;\r\n      registerBeforeUnloadEventCallback(2, userData, true, callbackfunc, 28, \"beforeunload\");\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerFocusEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.focusEvent) JSEvents.focusEvent = _malloc( 256 );\r\n  \r\n      var focusEventHandlerFunc = function(e = event) {\r\n        var nodeName = JSEvents.getNodeNameForTarget(e.target);\r\n        var id = e.target.id ? e.target.id : '';\r\n  \r\n        var focusEvent = JSEvents.focusEvent;\r\n        stringToUTF8(nodeName, focusEvent + 0, 128);\r\n        stringToUTF8(id, focusEvent + 128, 128);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, focusEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: focusEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_blur_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 12, \"blur\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n\r\n  \r\n  function _emscripten_set_element_css_size(target, width, height) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      target.style.width = width + \"px\";\r\n      target.style.height = height + \"px\";\r\n  \r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_focus_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 13, \"focus\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillFullscreenChangeEventData(eventStruct) {\r\n      var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\r\n      var isFullscreen = !!fullscreenElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isFullscreen;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = JSEvents.fullscreenEnabled();\r\n      // If transitioning to fullscreen, report info about the element that is now fullscreen.\r\n      // If transitioning to windowed mode, report info about the element that just was fullscreen.\r\n      var reportedElement = isFullscreen ? fullscreenElement : JSEvents.previousFullscreenElement;\r\n      var nodeName = JSEvents.getNodeNameForTarget(reportedElement);\r\n      var id = (reportedElement && reportedElement.id) ? reportedElement.id : '';\r\n      stringToUTF8(nodeName, eventStruct + 8, 128);\r\n      stringToUTF8(id, eventStruct + 136, 128);\r\n      HEAP32[(((eventStruct)+(264))>>2)] = reportedElement ? reportedElement.clientWidth : 0;\r\n      HEAP32[(((eventStruct)+(268))>>2)] = reportedElement ? reportedElement.clientHeight : 0;\r\n      HEAP32[(((eventStruct)+(272))>>2)] = screen.width;\r\n      HEAP32[(((eventStruct)+(276))>>2)] = screen.height;\r\n      if (isFullscreen) {\r\n        JSEvents.previousFullscreenElement = fullscreenElement;\r\n      }\r\n    }\r\n  \r\n  \r\n  function registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.fullscreenChangeEvent) JSEvents.fullscreenChangeEvent = _malloc( 280 );\r\n  \r\n      var fullscreenChangeEventhandlerFunc = function(e = event) {\r\n        var fullscreenChangeEvent = JSEvents.fullscreenChangeEvent;\r\n  \r\n        fillFullscreenChangeEventData(fullscreenChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, fullscreenChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: fullscreenChangeEventhandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  \r\n  function _emscripten_set_fullscreenchange_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"fullscreenchange\", targetThread);\r\n  \r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"webkitfullscreenchange\", targetThread);\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerGamepadEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.gamepadEvent) JSEvents.gamepadEvent = _malloc( 1432 );\r\n  \r\n      var gamepadEventHandlerFunc = function(e = event) {\r\n        var gamepadEvent = JSEvents.gamepadEvent;\r\n        fillGamepadEventData(gamepadEvent, e[\"gamepad\"]);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, gamepadEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: gamepadEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_gamepadconnected_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\r\n      registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 26, \"gamepadconnected\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_gamepaddisconnected_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\r\n      registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 27, \"gamepaddisconnected\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerKeyEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.keyEvent) JSEvents.keyEvent = _malloc( 176 );\r\n  \r\n      var keyEventHandlerFunc = function(e) {\r\n  \r\n        var keyEventData = JSEvents.keyEvent;\r\n        HEAPF64[((keyEventData)>>3)] = e.timeStamp;\r\n  \r\n        var idx = keyEventData >> 2;\r\n  \r\n        HEAP32[idx + 2] = e.location;\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        HEAP32[idx + 7] = e.repeat;\r\n        HEAP32[idx + 8] = e.charCode;\r\n        HEAP32[idx + 9] = e.keyCode;\r\n        HEAP32[idx + 10] = e.which;\r\n        stringToUTF8(e.key || '', keyEventData + 44, 32);\r\n        stringToUTF8(e.code || '', keyEventData + 76, 32);\r\n        stringToUTF8(e.char || '', keyEventData + 108, 32);\r\n        stringToUTF8(e.locale || '', keyEventData + 140, 32);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, keyEventData, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: keyEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_keydown_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 2, \"keydown\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_keypress_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 1, \"keypress\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_keyup_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 3, \"keyup\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop) {\r\n      var browserIterationFunc = (() => dynCall_v.call(null, func));\r\n      setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillMouseEventData(eventStruct, e, target) {\r\n      HEAPF64[((eventStruct)>>3)] = e.timeStamp;\r\n      var idx = eventStruct >> 2;\r\n      HEAP32[idx + 2] = e.screenX;\r\n      HEAP32[idx + 3] = e.screenY;\r\n      HEAP32[idx + 4] = e.clientX;\r\n      HEAP32[idx + 5] = e.clientY;\r\n      HEAP32[idx + 6] = e.ctrlKey;\r\n      HEAP32[idx + 7] = e.shiftKey;\r\n      HEAP32[idx + 8] = e.altKey;\r\n      HEAP32[idx + 9] = e.metaKey;\r\n      HEAP16[idx*2 + 20] = e.button;\r\n      HEAP16[idx*2 + 21] = e.buttons;\r\n  \r\n      HEAP32[idx + 11] = e[\"movementX\"]\r\n        ;\r\n  \r\n      HEAP32[idx + 12] = e[\"movementY\"]\r\n        ;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAP32[idx + 13] = e.clientX - rect.left;\r\n      HEAP32[idx + 14] = e.clientY - rect.top;\r\n  \r\n    }\r\n  \r\n  \r\n  function registerMouseEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.mouseEvent) JSEvents.mouseEvent = _malloc( 72 );\r\n      target = findEventTarget(target);\r\n  \r\n      var mouseEventHandlerFunc = function(e = event) {\r\n        // TODO: Make this access thread safe, or this could update live while app is reading it.\r\n        fillMouseEventData(JSEvents.mouseEvent, e, target);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, JSEvents.mouseEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: eventTypeString != 'mousemove' && eventTypeString != 'mouseenter' && eventTypeString != 'mouseleave', // Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: mouseEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_mousedown_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 5, \"mousedown\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseenter_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 33, \"mouseenter\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseleave_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 34, \"mouseleave\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mousemove_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 8, \"mousemove\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseup_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 6, \"mouseup\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillPointerlockChangeEventData(eventStruct) {\r\n      var pointerLockElement = document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement || document.msPointerLockElement;\r\n      var isPointerlocked = !!pointerLockElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isPointerlocked;\r\n      var nodeName = JSEvents.getNodeNameForTarget(pointerLockElement);\r\n      var id = (pointerLockElement && pointerLockElement.id) ? pointerLockElement.id : '';\r\n      stringToUTF8(nodeName, eventStruct + 4, 128);\r\n      stringToUTF8(id, eventStruct + 132, 128);\r\n    }\r\n  \r\n  \r\n  function registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.pointerlockChangeEvent) JSEvents.pointerlockChangeEvent = _malloc( 260 );\r\n  \r\n      var pointerlockChangeEventHandlerFunc = function(e = event) {\r\n        var pointerlockChangeEvent = JSEvents.pointerlockChangeEvent;\r\n        fillPointerlockChangeEventData(pointerlockChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, pointerlockChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: pointerlockChangeEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  \r\n  /** @suppress {missingProperties} */\r\n  function _emscripten_set_pointerlockchange_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      // TODO: Currently not supported in pthreads or in --proxy-to-worker mode. (In pthreads mode, document object is not defined)\r\n      if (!document || !document.body || (!document.body.requestPointerLock && !document.body.mozRequestPointerLock && !document.body.webkitRequestPointerLock && !document.body.msRequestPointerLock)) {\r\n        return -1;\r\n      }\r\n  \r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"pointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mozpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"webkitpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mspointerlockchange\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  function registerUiEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.uiEvent) JSEvents.uiEvent = _malloc( 36 );\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var uiEventHandlerFunc = function(e = event) {\r\n        if (e.target != target) {\r\n          // Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that\r\n          // was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log\r\n          // message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,\r\n          // causing a new scroll, etc..\r\n          return;\r\n        }\r\n        var b = document.body; // Take document.body to a variable, Closure compiler does not outline access to it on its own.\r\n        if (!b) {\r\n          // During a page unload 'body' can be null, with \"Cannot read property 'clientWidth' of null\" being thrown\r\n          return;\r\n        }\r\n        var uiEvent = JSEvents.uiEvent;\r\n        HEAP32[((uiEvent)>>2)] = e.detail;\r\n        HEAP32[(((uiEvent)+(4))>>2)] = b.clientWidth;\r\n        HEAP32[(((uiEvent)+(8))>>2)] = b.clientHeight;\r\n        HEAP32[(((uiEvent)+(12))>>2)] = innerWidth;\r\n        HEAP32[(((uiEvent)+(16))>>2)] = innerHeight;\r\n        HEAP32[(((uiEvent)+(20))>>2)] = outerWidth;\r\n        HEAP32[(((uiEvent)+(24))>>2)] = outerHeight;\r\n        HEAP32[(((uiEvent)+(28))>>2)] = pageXOffset;\r\n        HEAP32[(((uiEvent)+(32))>>2)] = pageYOffset;\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, uiEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: uiEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_resize_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerUiEventCallback(target, userData, useCapture, callbackfunc, 10, \"resize\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerTouchEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.touchEvent) JSEvents.touchEvent = _malloc( 1696 );\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var touchEventHandlerFunc = function(e) {\r\n        var t, touches = {}, et = e.touches;\r\n        // To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches, \r\n        // only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in\r\n        // each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.\r\n  \r\n        for (var i = 0; i < et.length; ++i) {\r\n          t = et[i];\r\n          // Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any\r\n          // changed/target states we may have set from previous frame.\r\n          t.isChanged = t.onTarget = 0;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the changedTouches list.\r\n        for (var i = 0; i < e.changedTouches.length; ++i) {\r\n          t = e.changedTouches[i];\r\n          t.isChanged = 1;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the targetTouches list.\r\n        for (var i = 0; i < e.targetTouches.length; ++i) {\r\n          touches[e.targetTouches[i].identifier].onTarget = 1;\r\n        }\r\n  \r\n        var touchEvent = JSEvents.touchEvent;\r\n        HEAPF64[((touchEvent)>>3)] = e.timeStamp;\r\n        var idx = touchEvent>>2; // Pre-shift the ptr to index to HEAP32 to save code size\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        idx += 7; // Advance to the start of the touch array.\r\n        var targetRect = getBoundingClientRect(target);\r\n        var numTouches = 0;\r\n        for (var i in touches) {\r\n          t = touches[i];\r\n          HEAP32[idx + 0] = t.identifier;\r\n          HEAP32[idx + 1] = t.screenX;\r\n          HEAP32[idx + 2] = t.screenY;\r\n          HEAP32[idx + 3] = t.clientX;\r\n          HEAP32[idx + 4] = t.clientY;\r\n          HEAP32[idx + 5] = t.pageX;\r\n          HEAP32[idx + 6] = t.pageY;\r\n          HEAP32[idx + 7] = t.isChanged;\r\n          HEAP32[idx + 8] = t.onTarget;\r\n          HEAP32[idx + 9] = t.clientX - targetRect.left;\r\n          HEAP32[idx + 10] = t.clientY - targetRect.top;\r\n  \r\n          idx += 13;\r\n  \r\n          if (++numTouches > 31) {\r\n            break;\r\n          }\r\n        }\r\n        HEAP32[(((touchEvent)+(8))>>2)] = numTouches;\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, touchEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: eventTypeString == 'touchstart' || eventTypeString == 'touchend',\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: touchEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_touchcancel_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 25, \"touchcancel\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchend_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 23, \"touchend\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchmove_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 24, \"touchmove\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchstart_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 22, \"touchstart\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function fillVisibilityChangeEventData(eventStruct) {\r\n      var visibilityStates = [ \"hidden\", \"visible\", \"prerender\", \"unloaded\" ];\r\n      var visibilityState = visibilityStates.indexOf(document.visibilityState);\r\n  \r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = document.hidden;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = visibilityState;\r\n    }\r\n  \r\n  \r\n  function registerVisibilityChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.visibilityChangeEvent) JSEvents.visibilityChangeEvent = _malloc( 8 );\r\n  \r\n      var visibilityChangeEventHandlerFunc = function(e = event) {\r\n        var visibilityChangeEvent = JSEvents.visibilityChangeEvent;\r\n  \r\n        fillVisibilityChangeEventData(visibilityChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, visibilityChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: visibilityChangeEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  function _emscripten_set_visibilitychange_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      registerVisibilityChangeEventCallback(specialHTMLTargets[1], userData, useCapture, callbackfunc, 21, \"visibilitychange\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  function registerWheelEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.wheelEvent) JSEvents.wheelEvent = _malloc( 104 );\r\n  \r\n      // The DOM Level 3 events spec event 'wheel'\r\n      var wheelHandlerFunc = function(e = event) {\r\n        var wheelEvent = JSEvents.wheelEvent;\r\n        fillMouseEventData(wheelEvent, e, target);\r\n        HEAPF64[(((wheelEvent)+(72))>>3)] = e[\"deltaX\"];\r\n        HEAPF64[(((wheelEvent)+(80))>>3)] = e[\"deltaY\"];\r\n        HEAPF64[(((wheelEvent)+(88))>>3)] = e[\"deltaZ\"];\r\n        HEAP32[(((wheelEvent)+(96))>>2)] = e[\"deltaMode\"];\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, wheelEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: wheelHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  function _emscripten_set_wheel_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      target = findEventTarget(target);\r\n      if (typeof target.onwheel != 'undefined') {\r\n        registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, \"wheel\", targetThread);\r\n        return 0;\r\n      } else {\r\n        return -1;\r\n      }\r\n    }\r\n\r\n  \r\n  function _emscripten_set_window_title(title) {\r\n      setWindowTitle(UTF8ToString(title));\r\n    }\r\n\r\n  function _emscripten_sleep(ms) {\r\n      // emscripten_sleep() does not return a value, but we still need a |return|\r\n      // here for stack switching support (ASYNCIFY=2). In that mode this function\r\n      // returns a Promise instead of nothing, and that Promise is what tells the\r\n      // wasm VM to pause the stack.\r\n      return Asyncify.handleSleep((wakeUp) => safeSetTimeout(wakeUp, ms));\r\n    }\r\n  _emscripten_sleep.isAsync = true;\r\n\r\n  var ENV = {};\r\n  \r\n  function getExecutableName() {\r\n      return thisProgram || './this.program';\r\n    }\r\n  function getEnvStrings() {\r\n      if (!getEnvStrings.strings) {\r\n        // Default values.\r\n        // Browser language detection #8751\r\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\r\n        var env = {\r\n          'USER': 'web_user',\r\n          'LOGNAME': 'web_user',\r\n          'PATH': '/',\r\n          'PWD': '/',\r\n          'HOME': '/home/web_user',\r\n          'LANG': lang,\r\n          '_': getExecutableName()\r\n        };\r\n        // Apply the user-provided values, if any.\r\n        for (var x in ENV) {\r\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\r\n          // explicitly set to be so. We allow user code to do that to\r\n          // force variables with default values to remain unset.\r\n          if (ENV[x] === undefined) delete env[x];\r\n          else env[x] = ENV[x];\r\n        }\r\n        var strings = [];\r\n        for (var x in env) {\r\n          strings.push(x + '=' + env[x]);\r\n        }\r\n        getEnvStrings.strings = strings;\r\n      }\r\n      return getEnvStrings.strings;\r\n    }\r\n  \r\n  function stringToAscii(str, buffer) {\r\n      for (var i = 0; i < str.length; ++i) {\r\n        HEAP8[((buffer++)>>0)] = str.charCodeAt(i);\r\n      }\r\n      // Null-terminate the string\r\n      HEAP8[((buffer)>>0)] = 0;\r\n    }\r\n  \r\n  function _environ_get(__environ, environ_buf) {\r\n      var bufSize = 0;\r\n      getEnvStrings().forEach(function(string, i) {\r\n        var ptr = environ_buf + bufSize;\r\n        HEAPU32[(((__environ)+(i*4))>>2)] = ptr;\r\n        stringToAscii(string, ptr);\r\n        bufSize += string.length + 1;\r\n      });\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function _environ_sizes_get(penviron_count, penviron_buf_size) {\r\n      var strings = getEnvStrings();\r\n      HEAPU32[((penviron_count)>>2)] = strings.length;\r\n      var bufSize = 0;\r\n      strings.forEach(function(string) {\r\n        bufSize += string.length + 1;\r\n      });\r\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\r\n      return 0;\r\n    }\r\n\r\n\r\n  function _fd_close(fd) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.close(stream);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  function _fd_fdstat_get(fd, pbuf) {\r\n  try {\r\n  \r\n      var rightsBase = 0;\r\n      var rightsInheriting = 0;\r\n      var flags = 0;\r\n      {\r\n        var stream = SYSCALLS.getStreamFromFD(fd);\r\n        // All character devices are terminals (other things a Linux system would\r\n        // assume is a character device, like the mouse, we have special APIs for).\r\n        var type = stream.tty ? 2 :\r\n                   FS.isDir(stream.mode) ? 3 :\r\n                   FS.isLink(stream.mode) ? 7 :\r\n                   4;\r\n      }\r\n      HEAP8[((pbuf)>>0)] = type;\r\n      HEAP16[(((pbuf)+(2))>>1)] = flags;\r\n      (tempI64 = [rightsBase>>>0,(tempDouble=rightsBase,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(8))>>2)] = tempI64[0],HEAP32[(((pbuf)+(12))>>2)] = tempI64[1]);\r\n      (tempI64 = [rightsInheriting>>>0,(tempDouble=rightsInheriting,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(16))>>2)] = tempI64[0],HEAP32[(((pbuf)+(20))>>2)] = tempI64[1]);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  function doReadv(stream, iov, iovcnt, offset) {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.read(stream, HEAP8,ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (curr < len) break; // nothing more to read\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n  \r\n  function _fd_read(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doReadv(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\r\n  try {\r\n  \r\n      var offset = convertI32PairToI53Checked(offset_low, offset_high); if (isNaN(offset)) return 61;\r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.llseek(stream, offset, whence);\r\n      (tempI64 = [stream.position>>>0,(tempDouble=stream.position,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((newOffset)>>2)] = tempI64[0],HEAP32[(((newOffset)+(4))>>2)] = tempI64[1]);\r\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  function doWritev(stream, iov, iovcnt, offset) {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.write(stream, HEAP8,ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n  \r\n  function _fd_write(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doWritev(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n\r\n  \r\n  function arraySum(array, index) {\r\n      var sum = 0;\r\n      for (var i = 0; i <= index; sum += array[i++]) {\r\n        // no-op\r\n      }\r\n      return sum;\r\n    }\r\n  \r\n  \r\n  var MONTH_DAYS_LEAP = [31,29,31,30,31,30,31,31,30,31,30,31];\r\n  \r\n  var MONTH_DAYS_REGULAR = [31,28,31,30,31,30,31,31,30,31,30,31];\r\n  function addDays(date, days) {\r\n      var newDate = new Date(date.getTime());\r\n      while (days > 0) {\r\n        var leap = isLeapYear(newDate.getFullYear());\r\n        var currentMonth = newDate.getMonth();\r\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\r\n  \r\n        if (days > daysInCurrentMonth-newDate.getDate()) {\r\n          // we spill over to next month\r\n          days -= (daysInCurrentMonth-newDate.getDate()+1);\r\n          newDate.setDate(1);\r\n          if (currentMonth < 11) {\r\n            newDate.setMonth(currentMonth+1)\r\n          } else {\r\n            newDate.setMonth(0);\r\n            newDate.setFullYear(newDate.getFullYear()+1);\r\n          }\r\n        } else {\r\n          // we stay in current month\r\n          newDate.setDate(newDate.getDate()+days);\r\n          return newDate;\r\n        }\r\n      }\r\n  \r\n      return newDate;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  function writeArrayToMemory(array, buffer) {\r\n      HEAP8.set(array, buffer);\r\n    }\r\n  \r\n  function _strftime(s, maxsize, format, tm) {\r\n      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);\r\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html\r\n  \r\n      var tm_zone = HEAP32[(((tm)+(40))>>2)];\r\n  \r\n      var date = {\r\n        tm_sec: HEAP32[((tm)>>2)],\r\n        tm_min: HEAP32[(((tm)+(4))>>2)],\r\n        tm_hour: HEAP32[(((tm)+(8))>>2)],\r\n        tm_mday: HEAP32[(((tm)+(12))>>2)],\r\n        tm_mon: HEAP32[(((tm)+(16))>>2)],\r\n        tm_year: HEAP32[(((tm)+(20))>>2)],\r\n        tm_wday: HEAP32[(((tm)+(24))>>2)],\r\n        tm_yday: HEAP32[(((tm)+(28))>>2)],\r\n        tm_isdst: HEAP32[(((tm)+(32))>>2)],\r\n        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],\r\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''\r\n      };\r\n  \r\n      var pattern = UTF8ToString(format);\r\n  \r\n      // expand format\r\n      var EXPANSION_RULES_1 = {\r\n        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013\r\n        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y\r\n        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d\r\n        '%h': '%b',                       // Equivalent to %b\r\n        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation\r\n        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation\r\n        '%T': '%H:%M:%S',                 // Replaced by the time\r\n        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation\r\n        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation\r\n        // Modified Conversion Specifiers\r\n        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.\r\n        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.\r\n        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.\r\n        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.\r\n        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.\r\n        '%EY': '%Y',                      // Replaced by the full alternative year representation.\r\n        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.\r\n        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.\r\n        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.\r\n        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.\r\n        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.\r\n        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.\r\n        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.\r\n        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).\r\n        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.\r\n        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.\r\n        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.\r\n        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.\r\n        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.\r\n      };\r\n      for (var rule in EXPANSION_RULES_1) {\r\n        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\r\n      }\r\n  \r\n      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  \r\n      function leadingSomething(value, digits, character) {\r\n        var str = typeof value == 'number' ? value.toString() : (value || '');\r\n        while (str.length < digits) {\r\n          str = character[0]+str;\r\n        }\r\n        return str;\r\n      }\r\n  \r\n      function leadingNulls(value, digits) {\r\n        return leadingSomething(value, digits, '0');\r\n      }\r\n  \r\n      function compareByDay(date1, date2) {\r\n        function sgn(value) {\r\n          return value < 0 ? -1 : (value > 0 ? 1 : 0);\r\n        }\r\n  \r\n        var compare;\r\n        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {\r\n          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {\r\n            compare = sgn(date1.getDate()-date2.getDate());\r\n          }\r\n        }\r\n        return compare;\r\n      }\r\n  \r\n      function getFirstWeekStartDate(janFourth) {\r\n          switch (janFourth.getDay()) {\r\n            case 0: // Sunday\r\n              return new Date(janFourth.getFullYear()-1, 11, 29);\r\n            case 1: // Monday\r\n              return janFourth;\r\n            case 2: // Tuesday\r\n              return new Date(janFourth.getFullYear(), 0, 3);\r\n            case 3: // Wednesday\r\n              return new Date(janFourth.getFullYear(), 0, 2);\r\n            case 4: // Thursday\r\n              return new Date(janFourth.getFullYear(), 0, 1);\r\n            case 5: // Friday\r\n              return new Date(janFourth.getFullYear()-1, 11, 31);\r\n            case 6: // Saturday\r\n              return new Date(janFourth.getFullYear()-1, 11, 30);\r\n          }\r\n      }\r\n  \r\n      function getWeekBasedYear(date) {\r\n          var thisDate = addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);\r\n  \r\n          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\r\n          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);\r\n  \r\n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\r\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\r\n  \r\n          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\r\n            // this date is after the start of the first week of this year\r\n            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\r\n              return thisDate.getFullYear()+1;\r\n            }\r\n            return thisDate.getFullYear();\r\n          }\r\n          return thisDate.getFullYear()-1;\r\n      }\r\n  \r\n      var EXPANSION_RULES_2 = {\r\n        '%a': function(date) {\r\n          return WEEKDAYS[date.tm_wday].substring(0,3);\r\n        },\r\n        '%A': function(date) {\r\n          return WEEKDAYS[date.tm_wday];\r\n        },\r\n        '%b': function(date) {\r\n          return MONTHS[date.tm_mon].substring(0,3);\r\n        },\r\n        '%B': function(date) {\r\n          return MONTHS[date.tm_mon];\r\n        },\r\n        '%C': function(date) {\r\n          var year = date.tm_year+1900;\r\n          return leadingNulls((year/100)|0,2);\r\n        },\r\n        '%d': function(date) {\r\n          return leadingNulls(date.tm_mday, 2);\r\n        },\r\n        '%e': function(date) {\r\n          return leadingSomething(date.tm_mday, 2, ' ');\r\n        },\r\n        '%g': function(date) {\r\n          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.\r\n          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes\r\n          // January 4th, which is also the week that includes the first Thursday of the year, and\r\n          // is also the first week that contains at least four days in the year.\r\n          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of\r\n          // the last week of the preceding year; thus, for Saturday 2nd January 1999,\r\n          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,\r\n          // or 31st is a Monday, it and any following days are part of week 1 of the following year.\r\n          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.\r\n  \r\n          return getWeekBasedYear(date).toString().substring(2);\r\n        },\r\n        '%G': function(date) {\r\n          return getWeekBasedYear(date);\r\n        },\r\n        '%H': function(date) {\r\n          return leadingNulls(date.tm_hour, 2);\r\n        },\r\n        '%I': function(date) {\r\n          var twelveHour = date.tm_hour;\r\n          if (twelveHour == 0) twelveHour = 12;\r\n          else if (twelveHour > 12) twelveHour -= 12;\r\n          return leadingNulls(twelveHour, 2);\r\n        },\r\n        '%j': function(date) {\r\n          // Day of the year (001-366)\r\n          return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year+1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon-1), 3);\r\n        },\r\n        '%m': function(date) {\r\n          return leadingNulls(date.tm_mon+1, 2);\r\n        },\r\n        '%M': function(date) {\r\n          return leadingNulls(date.tm_min, 2);\r\n        },\r\n        '%n': function() {\r\n          return '\\n';\r\n        },\r\n        '%p': function(date) {\r\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\r\n            return 'AM';\r\n          }\r\n          return 'PM';\r\n        },\r\n        '%S': function(date) {\r\n          return leadingNulls(date.tm_sec, 2);\r\n        },\r\n        '%t': function() {\r\n          return '\\t';\r\n        },\r\n        '%u': function(date) {\r\n          return date.tm_wday || 7;\r\n        },\r\n        '%U': function(date) {\r\n          var days = date.tm_yday + 7 - date.tm_wday;\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%V': function(date) {\r\n          // Replaced by the week number of the year (Monday as the first day of the week)\r\n          // as a decimal number [01,53]. If the week containing 1 January has four\r\n          // or more days in the new year, then it is considered week 1.\r\n          // Otherwise, it is the last week of the previous year, and the next week is week 1.\r\n          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]\r\n          var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7 ) / 7);\r\n          // If 1 Jan is just 1-3 days past Monday, the previous week\r\n          // is also in this year.\r\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\r\n            val++;\r\n          }\r\n          if (!val) {\r\n            val = 52;\r\n            // If 31 December of prev year a Thursday, or Friday of a\r\n            // leap year, then the prev year has 53 weeks.\r\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\r\n            if (dec31 == 4 || (dec31 == 5 && isLeapYear(date.tm_year%400-1))) {\r\n              val++;\r\n            }\r\n          } else if (val == 53) {\r\n            // If 1 January is not a Thursday, and not a Wednesday of a\r\n            // leap year, then this year has only 52 weeks.\r\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\r\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year)))\r\n              val = 1;\r\n          }\r\n          return leadingNulls(val, 2);\r\n        },\r\n        '%w': function(date) {\r\n          return date.tm_wday;\r\n        },\r\n        '%W': function(date) {\r\n          var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%y': function(date) {\r\n          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]\r\n          return (date.tm_year+1900).toString().substring(2);\r\n        },\r\n        '%Y': function(date) {\r\n          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]\r\n          return date.tm_year+1900;\r\n        },\r\n        '%z': function(date) {\r\n          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).\r\n          // For example, \"-0430\" means 4 hours 30 minutes behind UTC (west of Greenwich).\r\n          var off = date.tm_gmtoff;\r\n          var ahead = off >= 0;\r\n          off = Math.abs(off) / 60;\r\n          // convert from minutes into hhmm format (which means 60 minutes = 100 units)\r\n          off = (off / 60)*100 + (off % 60);\r\n          return (ahead ? '+' : '-') + String(\"0000\" + off).slice(-4);\r\n        },\r\n        '%Z': function(date) {\r\n          return date.tm_zone;\r\n        },\r\n        '%%': function() {\r\n          return '%';\r\n        }\r\n      };\r\n  \r\n      // Replace %% with a pair of NULLs (which cannot occur in a C string), then\r\n      // re-inject them after processing.\r\n      pattern = pattern.replace(/%%/g, '\\0\\0')\r\n      for (var rule in EXPANSION_RULES_2) {\r\n        if (pattern.includes(rule)) {\r\n          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\r\n        }\r\n      }\r\n      pattern = pattern.replace(/\\0\\0/g, '%')\r\n  \r\n      var bytes = intArrayFromString(pattern, false);\r\n      if (bytes.length > maxsize) {\r\n        return 0;\r\n      }\r\n  \r\n      writeArrayToMemory(bytes, s);\r\n      return bytes.length-1;\r\n    }\r\n\r\n  function _strftime_l(s, maxsize, format, tm, loc) {\r\n      return _strftime(s, maxsize, format, tm); // no locale support yet\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  function runAndAbortIfError(func) {\r\n      try {\r\n        return func();\r\n      } catch (e) {\r\n        abort(e);\r\n      }\r\n    }\r\n  \r\n  \r\n  function sigToWasmTypes(sig) {\r\n      var typeNames = {\r\n        'i': 'i32',\r\n        // i64 values will be split into two i32s.\r\n        'j': 'i32',\r\n        'f': 'f32',\r\n        'd': 'f64',\r\n        'p': 'i32',\r\n      };\r\n      var type = {\r\n        parameters: [],\r\n        results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\r\n      };\r\n      for (var i = 1; i < sig.length; ++i) {\r\n        type.parameters.push(typeNames[sig[i]]);\r\n        if (sig[i] === 'j') {\r\n          type.parameters.push('i32');\r\n        }\r\n      }\r\n      return type;\r\n    }\r\n  \r\n  function runtimeKeepalivePush() {\r\n      runtimeKeepaliveCounter += 1;\r\n    }\r\n  \r\n  function runtimeKeepalivePop() {\r\n      runtimeKeepaliveCounter -= 1;\r\n    }\r\n  \r\n  \r\n  var Asyncify = {instrumentWasmImports:function(imports) {\r\n        var ASYNCIFY_IMPORTS = [\"invoke_*\",\"fd_sync\",\"__wasi_fd_sync\",\"__asyncjs__*\",\"emscripten_idb_load\",\"emscripten_idb_store\",\"emscripten_idb_delete\",\"emscripten_idb_exists\",\"emscripten_idb_load_blob\",\"emscripten_idb_store_blob\",\"emscripten_sleep\",\"emscripten_wget\",\"emscripten_wget_data\",\"emscripten_scan_registers\",\"emscripten_lazy_load_code\",\"_load_secondary_module\",\"emscripten_fiber_swap\"];\r\n        for (var x in imports) {\r\n          (function(x) {\r\n            var original = imports[x];\r\n            var sig = original.sig;\r\n            if (typeof original == 'function') {\r\n              var isAsyncifyImport = original.isAsync ||\r\n                                     ASYNCIFY_IMPORTS.indexOf(x) >= 0 ||\r\n                                     x.startsWith('__asyncjs__');\r\n            }\r\n          })(x);\r\n        }\r\n      },instrumentWasmExports:function(exports) {\r\n        var ret = {};\r\n        for (var x in exports) {\r\n          (function(x) {\r\n            var original = exports[x];\r\n            if (typeof original == 'function') {\r\n              ret[x] = function() {\r\n                Asyncify.exportCallStack.push(x);\r\n                try {\r\n                  return original.apply(null, arguments);\r\n                } finally {\r\n                  if (!ABORT) {\r\n                    var y = Asyncify.exportCallStack.pop();\r\n                    assert(y === x);\r\n                    Asyncify.maybeStopUnwind();\r\n                  }\r\n                }\r\n              };\r\n            } else {\r\n              ret[x] = original;\r\n            }\r\n          })(x);\r\n        }\r\n        return ret;\r\n      },State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId:function(funcName) {\r\n        var id = Asyncify.callStackNameToId[funcName];\r\n        if (id === undefined) {\r\n          id = Asyncify.callStackId++;\r\n          Asyncify.callStackNameToId[funcName] = id;\r\n          Asyncify.callStackIdToName[id] = funcName;\r\n        }\r\n        return id;\r\n      },maybeStopUnwind:function() {\r\n        if (Asyncify.currData &&\r\n            Asyncify.state === Asyncify.State.Unwinding &&\r\n            Asyncify.exportCallStack.length === 0) {\r\n          // We just finished unwinding.\r\n          // Be sure to set the state before calling any other functions to avoid\r\n          // possible infinite recursion here (For example in debug pthread builds\r\n          // the dbg() function itself can call back into WebAssembly to get the\r\n          // current pthread_self() pointer).\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          \r\n          // Keep the runtime alive so that a re-wind can be done later.\r\n          runAndAbortIfError(_asyncify_stop_unwind);\r\n          if (typeof Fibers != 'undefined') {\r\n            Fibers.trampoline();\r\n          }\r\n        }\r\n      },whenDone:function() {\r\n        return new Promise((resolve, reject) => {\r\n          Asyncify.asyncPromiseHandlers = {\r\n            resolve: resolve,\r\n            reject: reject\r\n          };\r\n        });\r\n      },allocateData:function() {\r\n        // An asyncify data structure has three fields:\r\n        //  0  current stack pos\r\n        //  4  max stack pos\r\n        //  8  id of function at bottom of the call stack (callStackIdToName[id] == name of js function)\r\n        //\r\n        // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\r\n        // We also embed a stack in the same memory region here, right next to the structure.\r\n        // This struct is also defined as asyncify_data_t in emscripten/fiber.h\r\n        var ptr = _malloc(12 + Asyncify.StackSize);\r\n        Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\r\n        Asyncify.setDataRewindFunc(ptr);\r\n        return ptr;\r\n      },setDataHeader:function(ptr, stack, stackSize) {\r\n        HEAP32[((ptr)>>2)] = stack;\r\n        HEAP32[(((ptr)+(4))>>2)] = stack + stackSize;\r\n      },setDataRewindFunc:function(ptr) {\r\n        var bottomOfCallStack = Asyncify.exportCallStack[0];\r\n        var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\r\n        HEAP32[(((ptr)+(8))>>2)] = rewindId;\r\n      },getDataRewindFunc:function(ptr) {\r\n        var id = HEAP32[(((ptr)+(8))>>2)];\r\n        var name = Asyncify.callStackIdToName[id];\r\n        var func = Module['asm'][name];\r\n        return func;\r\n      },doRewind:function(ptr) {\r\n        var start = Asyncify.getDataRewindFunc(ptr);\r\n        // Once we have rewound and the stack we no longer need to artificially\r\n        // keep the runtime alive.\r\n        \r\n        return start();\r\n      },handleSleep:function(startAsync) {\r\n        if (ABORT) return;\r\n        if (Asyncify.state === Asyncify.State.Normal) {\r\n          // Prepare to sleep. Call startAsync, and see what happens:\r\n          // if the code decided to call our callback synchronously,\r\n          // then no async operation was in fact begun, and we don't\r\n          // need to do anything.\r\n          var reachedCallback = false;\r\n          var reachedAfterCallback = false;\r\n          startAsync((handleSleepReturnValue = 0) => {\r\n            if (ABORT) return;\r\n            Asyncify.handleSleepReturnValue = handleSleepReturnValue;\r\n            reachedCallback = true;\r\n            if (!reachedAfterCallback) {\r\n              // We are happening synchronously, so no need for async.\r\n              return;\r\n            }\r\n            Asyncify.state = Asyncify.State.Rewinding;\r\n            runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.resume();\r\n            }\r\n            var asyncWasmReturnValue, isError = false;\r\n            try {\r\n              asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\r\n            } catch (err) {\r\n              asyncWasmReturnValue = err;\r\n              isError = true;\r\n            }\r\n            // Track whether the return value was handled by any promise handlers.\r\n            var handled = false;\r\n            if (!Asyncify.currData) {\r\n              // All asynchronous execution has finished.\r\n              // `asyncWasmReturnValue` now contains the final\r\n              // return value of the exported async WASM function.\r\n              //\r\n              // Note: `asyncWasmReturnValue` is distinct from\r\n              // `Asyncify.handleSleepReturnValue`.\r\n              // `Asyncify.handleSleepReturnValue` contains the return\r\n              // value of the last C function to have executed\r\n              // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\r\n              // contains the return value of the exported WASM function\r\n              // that may have called C functions that\r\n              // call `Asyncify.handleSleep()`.\r\n              var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\r\n              if (asyncPromiseHandlers) {\r\n                Asyncify.asyncPromiseHandlers = null;\r\n                (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\r\n                handled = true;\r\n              }\r\n            }\r\n            if (isError && !handled) {\r\n              // If there was an error and it was not handled by now, we have no choice but to\r\n              // rethrow that error into the global scope where it can be caught only by\r\n              // `onerror` or `onunhandledpromiserejection`.\r\n              throw asyncWasmReturnValue;\r\n            }\r\n          });\r\n          reachedAfterCallback = true;\r\n          if (!reachedCallback) {\r\n            // A true async operation was begun; start a sleep.\r\n            Asyncify.state = Asyncify.State.Unwinding;\r\n            // TODO: reuse, don't alloc/free every sleep\r\n            Asyncify.currData = Asyncify.allocateData();\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.pause();\r\n            }\r\n            runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\r\n          }\r\n        } else if (Asyncify.state === Asyncify.State.Rewinding) {\r\n          // Stop a resume.\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          runAndAbortIfError(_asyncify_stop_rewind);\r\n          _free(Asyncify.currData);\r\n          Asyncify.currData = null;\r\n          // Call all sleep callbacks now that the sleep-resume is all done.\r\n          Asyncify.sleepCallbacks.forEach((func) => callUserCallback(func));\r\n        } else {\r\n          abort('invalid state: ' + Asyncify.state);\r\n        }\r\n        return Asyncify.handleSleepReturnValue;\r\n      },handleAsync:function(startAsync) {\r\n        return Asyncify.handleSleep((wakeUp) => {\r\n          // TODO: add error handling as a second param when handleSleep implements it.\r\n          startAsync().then(wakeUp);\r\n        });\r\n      }};\r\n\r\n\r\n  var FSNode = /** @constructor */ function(parent, name, mode, rdev) {\r\n    if (!parent) {\r\n      parent = this;  // root node sets parent to itself\r\n    }\r\n    this.parent = parent;\r\n    this.mount = parent.mount;\r\n    this.mounted = null;\r\n    this.id = FS.nextInode++;\r\n    this.name = name;\r\n    this.mode = mode;\r\n    this.node_ops = {};\r\n    this.stream_ops = {};\r\n    this.rdev = rdev;\r\n  };\r\n  var readMode = 292/*292*/ | 73/*73*/;\r\n  var writeMode = 146/*146*/;\r\n  Object.defineProperties(FSNode.prototype, {\r\n   read: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & readMode) === readMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= readMode : this.mode &= ~readMode;\r\n    }\r\n   },\r\n   write: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & writeMode) === writeMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= writeMode : this.mode &= ~writeMode;\r\n    }\r\n   },\r\n   isFolder: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isDir(this.mode);\r\n    }\r\n   },\r\n   isDevice: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isChrdev(this.mode);\r\n    }\r\n   }\r\n  });\r\n  FS.FSNode = FSNode;\r\n  FS.staticInit();Module[\"FS_createPath\"] = FS.createPath;Module[\"FS_createDataFile\"] = FS.createDataFile;Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;Module[\"FS_unlink\"] = FS.unlink;Module[\"FS_createLazyFile\"] = FS.createLazyFile;Module[\"FS_createDevice\"] = FS.createDevice;;\r\n\r\n      // exports\r\n      Module[\"requestFullscreen\"] = function Module_requestFullscreen(lockPointer, resizeCanvas) { Browser.requestFullscreen(lockPointer, resizeCanvas) };\r\n      Module[\"requestAnimationFrame\"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };\r\n      Module[\"setCanvasSize\"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };\r\n      Module[\"pauseMainLoop\"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };\r\n      Module[\"resumeMainLoop\"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };\r\n      Module[\"getUserMedia\"] = function Module_getUserMedia() { Browser.getUserMedia() };\r\n      Module[\"createContext\"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) };\r\n      var preloadedImages = {};\r\n      var preloadedAudios = {};;\r\nvar GLctx;;\r\nfor (var i = 0; i < 32; ++i) tempFixedLengthArray.push(new Array(i));;\r\nvar miniTempWebGLFloatBuffersStorage = new Float32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n  miniTempWebGLFloatBuffers[i] = miniTempWebGLFloatBuffersStorage.subarray(0, i+1);\r\n  }\r\n  ;\r\nvar miniTempWebGLIntBuffersStorage = new Int32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n  miniTempWebGLIntBuffers[i] = miniTempWebGLIntBuffersStorage.subarray(0, i+1);\r\n  }\r\n  ;\r\n// include: base64Utils.js\r\n// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149\r\n\r\n// This code was written by Tyler Akins and has been placed in the\r\n// public domain.  It would be nice if you left this header intact.\r\n// Base64 code from Tyler Akins -- http://rumkin.com\r\n\r\n/**\r\n * Decodes a base64 string.\r\n * @param {string} input The string to decode.\r\n */\r\nvar decodeBase64 = typeof atob == 'function' ? atob : function (input) {\r\n  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\n  var output = '';\r\n  var chr1, chr2, chr3;\r\n  var enc1, enc2, enc3, enc4;\r\n  var i = 0;\r\n  // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\r\n  do {\r\n    enc1 = keyStr.indexOf(input.charAt(i++));\r\n    enc2 = keyStr.indexOf(input.charAt(i++));\r\n    enc3 = keyStr.indexOf(input.charAt(i++));\r\n    enc4 = keyStr.indexOf(input.charAt(i++));\r\n\r\n    chr1 = (enc1 << 2) | (enc2 >> 4);\r\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n    chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n    output = output + String.fromCharCode(chr1);\r\n\r\n    if (enc3 !== 64) {\r\n      output = output + String.fromCharCode(chr2);\r\n    }\r\n    if (enc4 !== 64) {\r\n      output = output + String.fromCharCode(chr3);\r\n    }\r\n  } while (i < input.length);\r\n  return output;\r\n};\r\n\r\n// Converts a string of base64 into a byte array.\r\n// Throws error on invalid input.\r\nfunction intArrayFromBase64(s) {\r\n\r\n  try {\r\n    var decoded = decodeBase64(s);\r\n    var bytes = new Uint8Array(decoded.length);\r\n    for (var i = 0 ; i < decoded.length ; ++i) {\r\n      bytes[i] = decoded.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n  } catch (_) {\r\n    throw new Error('Converting base64 string to bytes failed.');\r\n  }\r\n}\r\n\r\n// If filename is a base64 data URI, parses and returns data (Buffer on node,\r\n// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.\r\nfunction tryParseAsDataURI(filename) {\r\n  if (!isDataURI(filename)) {\r\n    return;\r\n  }\r\n\r\n  return intArrayFromBase64(filename.slice(dataURIPrefix.length));\r\n}\r\n\r\n\r\n// end include: base64Utils.js\r\nvar wasmImports = {\r\n  \"__cxa_throw\": ___cxa_throw,\r\n  \"__syscall_chmod\": ___syscall_chmod,\r\n  \"__syscall_fchmod\": ___syscall_fchmod,\r\n  \"__syscall_fcntl64\": ___syscall_fcntl64,\r\n  \"__syscall_fstat64\": ___syscall_fstat64,\r\n  \"__syscall_ftruncate64\": ___syscall_ftruncate64,\r\n  \"__syscall_getcwd\": ___syscall_getcwd,\r\n  \"__syscall_getdents64\": ___syscall_getdents64,\r\n  \"__syscall_ioctl\": ___syscall_ioctl,\r\n  \"__syscall_lstat64\": ___syscall_lstat64,\r\n  \"__syscall_mkdirat\": ___syscall_mkdirat,\r\n  \"__syscall_newfstatat\": ___syscall_newfstatat,\r\n  \"__syscall_openat\": ___syscall_openat,\r\n  \"__syscall_rmdir\": ___syscall_rmdir,\r\n  \"__syscall_stat64\": ___syscall_stat64,\r\n  \"__syscall_unlinkat\": ___syscall_unlinkat,\r\n  \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\r\n  \"_localtime_js\": __localtime_js,\r\n  \"_mktime_js\": __mktime_js,\r\n  \"_tzset_js\": __tzset_js,\r\n  \"abort\": _abort,\r\n  \"eglBindAPI\": _eglBindAPI,\r\n  \"eglChooseConfig\": _eglChooseConfig,\r\n  \"eglCreateContext\": _eglCreateContext,\r\n  \"eglCreateWindowSurface\": _eglCreateWindowSurface,\r\n  \"eglDestroyContext\": _eglDestroyContext,\r\n  \"eglDestroySurface\": _eglDestroySurface,\r\n  \"eglGetConfigAttrib\": _eglGetConfigAttrib,\r\n  \"eglGetDisplay\": _eglGetDisplay,\r\n  \"eglGetError\": _eglGetError,\r\n  \"eglInitialize\": _eglInitialize,\r\n  \"eglMakeCurrent\": _eglMakeCurrent,\r\n  \"eglQueryString\": _eglQueryString,\r\n  \"eglSwapBuffers\": _eglSwapBuffers,\r\n  \"eglSwapInterval\": _eglSwapInterval,\r\n  \"eglTerminate\": _eglTerminate,\r\n  \"eglWaitGL\": _eglWaitGL,\r\n  \"eglWaitNative\": _eglWaitNative,\r\n  \"emscripten_asm_const_int\": _emscripten_asm_const_int,\r\n  \"emscripten_asm_const_int_sync_on_main_thread\": _emscripten_asm_const_int_sync_on_main_thread,\r\n  \"emscripten_date_now\": _emscripten_date_now,\r\n  \"emscripten_enter_soft_fullscreen\": _emscripten_enter_soft_fullscreen,\r\n  \"emscripten_exit_fullscreen\": _emscripten_exit_fullscreen,\r\n  \"emscripten_exit_pointerlock\": _emscripten_exit_pointerlock,\r\n  \"emscripten_exit_soft_fullscreen\": _emscripten_exit_soft_fullscreen,\r\n  \"emscripten_get_device_pixel_ratio\": _emscripten_get_device_pixel_ratio,\r\n  \"emscripten_get_element_css_size\": _emscripten_get_element_css_size,\r\n  \"emscripten_get_gamepad_status\": _emscripten_get_gamepad_status,\r\n  \"emscripten_get_now\": _emscripten_get_now,\r\n  \"emscripten_get_num_gamepads\": _emscripten_get_num_gamepads,\r\n  \"emscripten_get_screen_size\": _emscripten_get_screen_size,\r\n  \"emscripten_glActiveTexture\": _emscripten_glActiveTexture,\r\n  \"emscripten_glAttachShader\": _emscripten_glAttachShader,\r\n  \"emscripten_glBeginQuery\": _emscripten_glBeginQuery,\r\n  \"emscripten_glBeginQueryEXT\": _emscripten_glBeginQueryEXT,\r\n  \"emscripten_glBeginTransformFeedback\": _emscripten_glBeginTransformFeedback,\r\n  \"emscripten_glBindAttribLocation\": _emscripten_glBindAttribLocation,\r\n  \"emscripten_glBindBuffer\": _emscripten_glBindBuffer,\r\n  \"emscripten_glBindBufferBase\": _emscripten_glBindBufferBase,\r\n  \"emscripten_glBindBufferRange\": _emscripten_glBindBufferRange,\r\n  \"emscripten_glBindFramebuffer\": _emscripten_glBindFramebuffer,\r\n  \"emscripten_glBindRenderbuffer\": _emscripten_glBindRenderbuffer,\r\n  \"emscripten_glBindSampler\": _emscripten_glBindSampler,\r\n  \"emscripten_glBindTexture\": _emscripten_glBindTexture,\r\n  \"emscripten_glBindTransformFeedback\": _emscripten_glBindTransformFeedback,\r\n  \"emscripten_glBindVertexArray\": _emscripten_glBindVertexArray,\r\n  \"emscripten_glBindVertexArrayOES\": _emscripten_glBindVertexArrayOES,\r\n  \"emscripten_glBlendColor\": _emscripten_glBlendColor,\r\n  \"emscripten_glBlendEquation\": _emscripten_glBlendEquation,\r\n  \"emscripten_glBlendEquationSeparate\": _emscripten_glBlendEquationSeparate,\r\n  \"emscripten_glBlendFunc\": _emscripten_glBlendFunc,\r\n  \"emscripten_glBlendFuncSeparate\": _emscripten_glBlendFuncSeparate,\r\n  \"emscripten_glBlitFramebuffer\": _emscripten_glBlitFramebuffer,\r\n  \"emscripten_glBufferData\": _emscripten_glBufferData,\r\n  \"emscripten_glBufferSubData\": _emscripten_glBufferSubData,\r\n  \"emscripten_glCheckFramebufferStatus\": _emscripten_glCheckFramebufferStatus,\r\n  \"emscripten_glClear\": _emscripten_glClear,\r\n  \"emscripten_glClearBufferfi\": _emscripten_glClearBufferfi,\r\n  \"emscripten_glClearBufferfv\": _emscripten_glClearBufferfv,\r\n  \"emscripten_glClearBufferiv\": _emscripten_glClearBufferiv,\r\n  \"emscripten_glClearBufferuiv\": _emscripten_glClearBufferuiv,\r\n  \"emscripten_glClearColor\": _emscripten_glClearColor,\r\n  \"emscripten_glClearDepthf\": _emscripten_glClearDepthf,\r\n  \"emscripten_glClearStencil\": _emscripten_glClearStencil,\r\n  \"emscripten_glClientWaitSync\": _emscripten_glClientWaitSync,\r\n  \"emscripten_glColorMask\": _emscripten_glColorMask,\r\n  \"emscripten_glCompileShader\": _emscripten_glCompileShader,\r\n  \"emscripten_glCompressedTexImage2D\": _emscripten_glCompressedTexImage2D,\r\n  \"emscripten_glCompressedTexImage3D\": _emscripten_glCompressedTexImage3D,\r\n  \"emscripten_glCompressedTexSubImage2D\": _emscripten_glCompressedTexSubImage2D,\r\n  \"emscripten_glCompressedTexSubImage3D\": _emscripten_glCompressedTexSubImage3D,\r\n  \"emscripten_glCopyBufferSubData\": _emscripten_glCopyBufferSubData,\r\n  \"emscripten_glCopyTexImage2D\": _emscripten_glCopyTexImage2D,\r\n  \"emscripten_glCopyTexSubImage2D\": _emscripten_glCopyTexSubImage2D,\r\n  \"emscripten_glCopyTexSubImage3D\": _emscripten_glCopyTexSubImage3D,\r\n  \"emscripten_glCreateProgram\": _emscripten_glCreateProgram,\r\n  \"emscripten_glCreateShader\": _emscripten_glCreateShader,\r\n  \"emscripten_glCullFace\": _emscripten_glCullFace,\r\n  \"emscripten_glDeleteBuffers\": _emscripten_glDeleteBuffers,\r\n  \"emscripten_glDeleteFramebuffers\": _emscripten_glDeleteFramebuffers,\r\n  \"emscripten_glDeleteProgram\": _emscripten_glDeleteProgram,\r\n  \"emscripten_glDeleteQueries\": _emscripten_glDeleteQueries,\r\n  \"emscripten_glDeleteQueriesEXT\": _emscripten_glDeleteQueriesEXT,\r\n  \"emscripten_glDeleteRenderbuffers\": _emscripten_glDeleteRenderbuffers,\r\n  \"emscripten_glDeleteSamplers\": _emscripten_glDeleteSamplers,\r\n  \"emscripten_glDeleteShader\": _emscripten_glDeleteShader,\r\n  \"emscripten_glDeleteSync\": _emscripten_glDeleteSync,\r\n  \"emscripten_glDeleteTextures\": _emscripten_glDeleteTextures,\r\n  \"emscripten_glDeleteTransformFeedbacks\": _emscripten_glDeleteTransformFeedbacks,\r\n  \"emscripten_glDeleteVertexArrays\": _emscripten_glDeleteVertexArrays,\r\n  \"emscripten_glDeleteVertexArraysOES\": _emscripten_glDeleteVertexArraysOES,\r\n  \"emscripten_glDepthFunc\": _emscripten_glDepthFunc,\r\n  \"emscripten_glDepthMask\": _emscripten_glDepthMask,\r\n  \"emscripten_glDepthRangef\": _emscripten_glDepthRangef,\r\n  \"emscripten_glDetachShader\": _emscripten_glDetachShader,\r\n  \"emscripten_glDisable\": _emscripten_glDisable,\r\n  \"emscripten_glDisableVertexAttribArray\": _emscripten_glDisableVertexAttribArray,\r\n  \"emscripten_glDrawArrays\": _emscripten_glDrawArrays,\r\n  \"emscripten_glDrawArraysInstanced\": _emscripten_glDrawArraysInstanced,\r\n  \"emscripten_glDrawArraysInstancedANGLE\": _emscripten_glDrawArraysInstancedANGLE,\r\n  \"emscripten_glDrawArraysInstancedARB\": _emscripten_glDrawArraysInstancedARB,\r\n  \"emscripten_glDrawArraysInstancedEXT\": _emscripten_glDrawArraysInstancedEXT,\r\n  \"emscripten_glDrawArraysInstancedNV\": _emscripten_glDrawArraysInstancedNV,\r\n  \"emscripten_glDrawBuffers\": _emscripten_glDrawBuffers,\r\n  \"emscripten_glDrawBuffersEXT\": _emscripten_glDrawBuffersEXT,\r\n  \"emscripten_glDrawBuffersWEBGL\": _emscripten_glDrawBuffersWEBGL,\r\n  \"emscripten_glDrawElements\": _emscripten_glDrawElements,\r\n  \"emscripten_glDrawElementsInstanced\": _emscripten_glDrawElementsInstanced,\r\n  \"emscripten_glDrawElementsInstancedANGLE\": _emscripten_glDrawElementsInstancedANGLE,\r\n  \"emscripten_glDrawElementsInstancedARB\": _emscripten_glDrawElementsInstancedARB,\r\n  \"emscripten_glDrawElementsInstancedEXT\": _emscripten_glDrawElementsInstancedEXT,\r\n  \"emscripten_glDrawElementsInstancedNV\": _emscripten_glDrawElementsInstancedNV,\r\n  \"emscripten_glDrawRangeElements\": _emscripten_glDrawRangeElements,\r\n  \"emscripten_glEnable\": _emscripten_glEnable,\r\n  \"emscripten_glEnableVertexAttribArray\": _emscripten_glEnableVertexAttribArray,\r\n  \"emscripten_glEndQuery\": _emscripten_glEndQuery,\r\n  \"emscripten_glEndQueryEXT\": _emscripten_glEndQueryEXT,\r\n  \"emscripten_glEndTransformFeedback\": _emscripten_glEndTransformFeedback,\r\n  \"emscripten_glFenceSync\": _emscripten_glFenceSync,\r\n  \"emscripten_glFinish\": _emscripten_glFinish,\r\n  \"emscripten_glFlush\": _emscripten_glFlush,\r\n  \"emscripten_glFramebufferRenderbuffer\": _emscripten_glFramebufferRenderbuffer,\r\n  \"emscripten_glFramebufferTexture2D\": _emscripten_glFramebufferTexture2D,\r\n  \"emscripten_glFramebufferTextureLayer\": _emscripten_glFramebufferTextureLayer,\r\n  \"emscripten_glFrontFace\": _emscripten_glFrontFace,\r\n  \"emscripten_glGenBuffers\": _emscripten_glGenBuffers,\r\n  \"emscripten_glGenFramebuffers\": _emscripten_glGenFramebuffers,\r\n  \"emscripten_glGenQueries\": _emscripten_glGenQueries,\r\n  \"emscripten_glGenQueriesEXT\": _emscripten_glGenQueriesEXT,\r\n  \"emscripten_glGenRenderbuffers\": _emscripten_glGenRenderbuffers,\r\n  \"emscripten_glGenSamplers\": _emscripten_glGenSamplers,\r\n  \"emscripten_glGenTextures\": _emscripten_glGenTextures,\r\n  \"emscripten_glGenTransformFeedbacks\": _emscripten_glGenTransformFeedbacks,\r\n  \"emscripten_glGenVertexArrays\": _emscripten_glGenVertexArrays,\r\n  \"emscripten_glGenVertexArraysOES\": _emscripten_glGenVertexArraysOES,\r\n  \"emscripten_glGenerateMipmap\": _emscripten_glGenerateMipmap,\r\n  \"emscripten_glGetActiveAttrib\": _emscripten_glGetActiveAttrib,\r\n  \"emscripten_glGetActiveUniform\": _emscripten_glGetActiveUniform,\r\n  \"emscripten_glGetActiveUniformBlockName\": _emscripten_glGetActiveUniformBlockName,\r\n  \"emscripten_glGetActiveUniformBlockiv\": _emscripten_glGetActiveUniformBlockiv,\r\n  \"emscripten_glGetActiveUniformsiv\": _emscripten_glGetActiveUniformsiv,\r\n  \"emscripten_glGetAttachedShaders\": _emscripten_glGetAttachedShaders,\r\n  \"emscripten_glGetAttribLocation\": _emscripten_glGetAttribLocation,\r\n  \"emscripten_glGetBooleanv\": _emscripten_glGetBooleanv,\r\n  \"emscripten_glGetBufferParameteri64v\": _emscripten_glGetBufferParameteri64v,\r\n  \"emscripten_glGetBufferParameteriv\": _emscripten_glGetBufferParameteriv,\r\n  \"emscripten_glGetError\": _emscripten_glGetError,\r\n  \"emscripten_glGetFloatv\": _emscripten_glGetFloatv,\r\n  \"emscripten_glGetFragDataLocation\": _emscripten_glGetFragDataLocation,\r\n  \"emscripten_glGetFramebufferAttachmentParameteriv\": _emscripten_glGetFramebufferAttachmentParameteriv,\r\n  \"emscripten_glGetInteger64i_v\": _emscripten_glGetInteger64i_v,\r\n  \"emscripten_glGetInteger64v\": _emscripten_glGetInteger64v,\r\n  \"emscripten_glGetIntegeri_v\": _emscripten_glGetIntegeri_v,\r\n  \"emscripten_glGetIntegerv\": _emscripten_glGetIntegerv,\r\n  \"emscripten_glGetInternalformativ\": _emscripten_glGetInternalformativ,\r\n  \"emscripten_glGetProgramBinary\": _emscripten_glGetProgramBinary,\r\n  \"emscripten_glGetProgramInfoLog\": _emscripten_glGetProgramInfoLog,\r\n  \"emscripten_glGetProgramiv\": _emscripten_glGetProgramiv,\r\n  \"emscripten_glGetQueryObjecti64vEXT\": _emscripten_glGetQueryObjecti64vEXT,\r\n  \"emscripten_glGetQueryObjectivEXT\": _emscripten_glGetQueryObjectivEXT,\r\n  \"emscripten_glGetQueryObjectui64vEXT\": _emscripten_glGetQueryObjectui64vEXT,\r\n  \"emscripten_glGetQueryObjectuiv\": _emscripten_glGetQueryObjectuiv,\r\n  \"emscripten_glGetQueryObjectuivEXT\": _emscripten_glGetQueryObjectuivEXT,\r\n  \"emscripten_glGetQueryiv\": _emscripten_glGetQueryiv,\r\n  \"emscripten_glGetQueryivEXT\": _emscripten_glGetQueryivEXT,\r\n  \"emscripten_glGetRenderbufferParameteriv\": _emscripten_glGetRenderbufferParameteriv,\r\n  \"emscripten_glGetSamplerParameterfv\": _emscripten_glGetSamplerParameterfv,\r\n  \"emscripten_glGetSamplerParameteriv\": _emscripten_glGetSamplerParameteriv,\r\n  \"emscripten_glGetShaderInfoLog\": _emscripten_glGetShaderInfoLog,\r\n  \"emscripten_glGetShaderPrecisionFormat\": _emscripten_glGetShaderPrecisionFormat,\r\n  \"emscripten_glGetShaderSource\": _emscripten_glGetShaderSource,\r\n  \"emscripten_glGetShaderiv\": _emscripten_glGetShaderiv,\r\n  \"emscripten_glGetString\": _emscripten_glGetString,\r\n  \"emscripten_glGetStringi\": _emscripten_glGetStringi,\r\n  \"emscripten_glGetSynciv\": _emscripten_glGetSynciv,\r\n  \"emscripten_glGetTexParameterfv\": _emscripten_glGetTexParameterfv,\r\n  \"emscripten_glGetTexParameteriv\": _emscripten_glGetTexParameteriv,\r\n  \"emscripten_glGetTransformFeedbackVarying\": _emscripten_glGetTransformFeedbackVarying,\r\n  \"emscripten_glGetUniformBlockIndex\": _emscripten_glGetUniformBlockIndex,\r\n  \"emscripten_glGetUniformIndices\": _emscripten_glGetUniformIndices,\r\n  \"emscripten_glGetUniformLocation\": _emscripten_glGetUniformLocation,\r\n  \"emscripten_glGetUniformfv\": _emscripten_glGetUniformfv,\r\n  \"emscripten_glGetUniformiv\": _emscripten_glGetUniformiv,\r\n  \"emscripten_glGetUniformuiv\": _emscripten_glGetUniformuiv,\r\n  \"emscripten_glGetVertexAttribIiv\": _emscripten_glGetVertexAttribIiv,\r\n  \"emscripten_glGetVertexAttribIuiv\": _emscripten_glGetVertexAttribIuiv,\r\n  \"emscripten_glGetVertexAttribPointerv\": _emscripten_glGetVertexAttribPointerv,\r\n  \"emscripten_glGetVertexAttribfv\": _emscripten_glGetVertexAttribfv,\r\n  \"emscripten_glGetVertexAttribiv\": _emscripten_glGetVertexAttribiv,\r\n  \"emscripten_glHint\": _emscripten_glHint,\r\n  \"emscripten_glInvalidateFramebuffer\": _emscripten_glInvalidateFramebuffer,\r\n  \"emscripten_glInvalidateSubFramebuffer\": _emscripten_glInvalidateSubFramebuffer,\r\n  \"emscripten_glIsBuffer\": _emscripten_glIsBuffer,\r\n  \"emscripten_glIsEnabled\": _emscripten_glIsEnabled,\r\n  \"emscripten_glIsFramebuffer\": _emscripten_glIsFramebuffer,\r\n  \"emscripten_glIsProgram\": _emscripten_glIsProgram,\r\n  \"emscripten_glIsQuery\": _emscripten_glIsQuery,\r\n  \"emscripten_glIsQueryEXT\": _emscripten_glIsQueryEXT,\r\n  \"emscripten_glIsRenderbuffer\": _emscripten_glIsRenderbuffer,\r\n  \"emscripten_glIsSampler\": _emscripten_glIsSampler,\r\n  \"emscripten_glIsShader\": _emscripten_glIsShader,\r\n  \"emscripten_glIsSync\": _emscripten_glIsSync,\r\n  \"emscripten_glIsTexture\": _emscripten_glIsTexture,\r\n  \"emscripten_glIsTransformFeedback\": _emscripten_glIsTransformFeedback,\r\n  \"emscripten_glIsVertexArray\": _emscripten_glIsVertexArray,\r\n  \"emscripten_glIsVertexArrayOES\": _emscripten_glIsVertexArrayOES,\r\n  \"emscripten_glLineWidth\": _emscripten_glLineWidth,\r\n  \"emscripten_glLinkProgram\": _emscripten_glLinkProgram,\r\n  \"emscripten_glPauseTransformFeedback\": _emscripten_glPauseTransformFeedback,\r\n  \"emscripten_glPixelStorei\": _emscripten_glPixelStorei,\r\n  \"emscripten_glPolygonOffset\": _emscripten_glPolygonOffset,\r\n  \"emscripten_glProgramBinary\": _emscripten_glProgramBinary,\r\n  \"emscripten_glProgramParameteri\": _emscripten_glProgramParameteri,\r\n  \"emscripten_glQueryCounterEXT\": _emscripten_glQueryCounterEXT,\r\n  \"emscripten_glReadBuffer\": _emscripten_glReadBuffer,\r\n  \"emscripten_glReadPixels\": _emscripten_glReadPixels,\r\n  \"emscripten_glReleaseShaderCompiler\": _emscripten_glReleaseShaderCompiler,\r\n  \"emscripten_glRenderbufferStorage\": _emscripten_glRenderbufferStorage,\r\n  \"emscripten_glRenderbufferStorageMultisample\": _emscripten_glRenderbufferStorageMultisample,\r\n  \"emscripten_glResumeTransformFeedback\": _emscripten_glResumeTransformFeedback,\r\n  \"emscripten_glSampleCoverage\": _emscripten_glSampleCoverage,\r\n  \"emscripten_glSamplerParameterf\": _emscripten_glSamplerParameterf,\r\n  \"emscripten_glSamplerParameterfv\": _emscripten_glSamplerParameterfv,\r\n  \"emscripten_glSamplerParameteri\": _emscripten_glSamplerParameteri,\r\n  \"emscripten_glSamplerParameteriv\": _emscripten_glSamplerParameteriv,\r\n  \"emscripten_glScissor\": _emscripten_glScissor,\r\n  \"emscripten_glShaderBinary\": _emscripten_glShaderBinary,\r\n  \"emscripten_glShaderSource\": _emscripten_glShaderSource,\r\n  \"emscripten_glStencilFunc\": _emscripten_glStencilFunc,\r\n  \"emscripten_glStencilFuncSeparate\": _emscripten_glStencilFuncSeparate,\r\n  \"emscripten_glStencilMask\": _emscripten_glStencilMask,\r\n  \"emscripten_glStencilMaskSeparate\": _emscripten_glStencilMaskSeparate,\r\n  \"emscripten_glStencilOp\": _emscripten_glStencilOp,\r\n  \"emscripten_glStencilOpSeparate\": _emscripten_glStencilOpSeparate,\r\n  \"emscripten_glTexImage2D\": _emscripten_glTexImage2D,\r\n  \"emscripten_glTexImage3D\": _emscripten_glTexImage3D,\r\n  \"emscripten_glTexParameterf\": _emscripten_glTexParameterf,\r\n  \"emscripten_glTexParameterfv\": _emscripten_glTexParameterfv,\r\n  \"emscripten_glTexParameteri\": _emscripten_glTexParameteri,\r\n  \"emscripten_glTexParameteriv\": _emscripten_glTexParameteriv,\r\n  \"emscripten_glTexStorage2D\": _emscripten_glTexStorage2D,\r\n  \"emscripten_glTexStorage3D\": _emscripten_glTexStorage3D,\r\n  \"emscripten_glTexSubImage2D\": _emscripten_glTexSubImage2D,\r\n  \"emscripten_glTexSubImage3D\": _emscripten_glTexSubImage3D,\r\n  \"emscripten_glTransformFeedbackVaryings\": _emscripten_glTransformFeedbackVaryings,\r\n  \"emscripten_glUniform1f\": _emscripten_glUniform1f,\r\n  \"emscripten_glUniform1fv\": _emscripten_glUniform1fv,\r\n  \"emscripten_glUniform1i\": _emscripten_glUniform1i,\r\n  \"emscripten_glUniform1iv\": _emscripten_glUniform1iv,\r\n  \"emscripten_glUniform1ui\": _emscripten_glUniform1ui,\r\n  \"emscripten_glUniform1uiv\": _emscripten_glUniform1uiv,\r\n  \"emscripten_glUniform2f\": _emscripten_glUniform2f,\r\n  \"emscripten_glUniform2fv\": _emscripten_glUniform2fv,\r\n  \"emscripten_glUniform2i\": _emscripten_glUniform2i,\r\n  \"emscripten_glUniform2iv\": _emscripten_glUniform2iv,\r\n  \"emscripten_glUniform2ui\": _emscripten_glUniform2ui,\r\n  \"emscripten_glUniform2uiv\": _emscripten_glUniform2uiv,\r\n  \"emscripten_glUniform3f\": _emscripten_glUniform3f,\r\n  \"emscripten_glUniform3fv\": _emscripten_glUniform3fv,\r\n  \"emscripten_glUniform3i\": _emscripten_glUniform3i,\r\n  \"emscripten_glUniform3iv\": _emscripten_glUniform3iv,\r\n  \"emscripten_glUniform3ui\": _emscripten_glUniform3ui,\r\n  \"emscripten_glUniform3uiv\": _emscripten_glUniform3uiv,\r\n  \"emscripten_glUniform4f\": _emscripten_glUniform4f,\r\n  \"emscripten_glUniform4fv\": _emscripten_glUniform4fv,\r\n  \"emscripten_glUniform4i\": _emscripten_glUniform4i,\r\n  \"emscripten_glUniform4iv\": _emscripten_glUniform4iv,\r\n  \"emscripten_glUniform4ui\": _emscripten_glUniform4ui,\r\n  \"emscripten_glUniform4uiv\": _emscripten_glUniform4uiv,\r\n  \"emscripten_glUniformBlockBinding\": _emscripten_glUniformBlockBinding,\r\n  \"emscripten_glUniformMatrix2fv\": _emscripten_glUniformMatrix2fv,\r\n  \"emscripten_glUniformMatrix2x3fv\": _emscripten_glUniformMatrix2x3fv,\r\n  \"emscripten_glUniformMatrix2x4fv\": _emscripten_glUniformMatrix2x4fv,\r\n  \"emscripten_glUniformMatrix3fv\": _emscripten_glUniformMatrix3fv,\r\n  \"emscripten_glUniformMatrix3x2fv\": _emscripten_glUniformMatrix3x2fv,\r\n  \"emscripten_glUniformMatrix3x4fv\": _emscripten_glUniformMatrix3x4fv,\r\n  \"emscripten_glUniformMatrix4fv\": _emscripten_glUniformMatrix4fv,\r\n  \"emscripten_glUniformMatrix4x2fv\": _emscripten_glUniformMatrix4x2fv,\r\n  \"emscripten_glUniformMatrix4x3fv\": _emscripten_glUniformMatrix4x3fv,\r\n  \"emscripten_glUseProgram\": _emscripten_glUseProgram,\r\n  \"emscripten_glValidateProgram\": _emscripten_glValidateProgram,\r\n  \"emscripten_glVertexAttrib1f\": _emscripten_glVertexAttrib1f,\r\n  \"emscripten_glVertexAttrib1fv\": _emscripten_glVertexAttrib1fv,\r\n  \"emscripten_glVertexAttrib2f\": _emscripten_glVertexAttrib2f,\r\n  \"emscripten_glVertexAttrib2fv\": _emscripten_glVertexAttrib2fv,\r\n  \"emscripten_glVertexAttrib3f\": _emscripten_glVertexAttrib3f,\r\n  \"emscripten_glVertexAttrib3fv\": _emscripten_glVertexAttrib3fv,\r\n  \"emscripten_glVertexAttrib4f\": _emscripten_glVertexAttrib4f,\r\n  \"emscripten_glVertexAttrib4fv\": _emscripten_glVertexAttrib4fv,\r\n  \"emscripten_glVertexAttribDivisor\": _emscripten_glVertexAttribDivisor,\r\n  \"emscripten_glVertexAttribDivisorANGLE\": _emscripten_glVertexAttribDivisorANGLE,\r\n  \"emscripten_glVertexAttribDivisorARB\": _emscripten_glVertexAttribDivisorARB,\r\n  \"emscripten_glVertexAttribDivisorEXT\": _emscripten_glVertexAttribDivisorEXT,\r\n  \"emscripten_glVertexAttribDivisorNV\": _emscripten_glVertexAttribDivisorNV,\r\n  \"emscripten_glVertexAttribI4i\": _emscripten_glVertexAttribI4i,\r\n  \"emscripten_glVertexAttribI4iv\": _emscripten_glVertexAttribI4iv,\r\n  \"emscripten_glVertexAttribI4ui\": _emscripten_glVertexAttribI4ui,\r\n  \"emscripten_glVertexAttribI4uiv\": _emscripten_glVertexAttribI4uiv,\r\n  \"emscripten_glVertexAttribIPointer\": _emscripten_glVertexAttribIPointer,\r\n  \"emscripten_glVertexAttribPointer\": _emscripten_glVertexAttribPointer,\r\n  \"emscripten_glViewport\": _emscripten_glViewport,\r\n  \"emscripten_glWaitSync\": _emscripten_glWaitSync,\r\n  \"emscripten_has_asyncify\": _emscripten_has_asyncify,\r\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\r\n  \"emscripten_request_fullscreen_strategy\": _emscripten_request_fullscreen_strategy,\r\n  \"emscripten_request_pointerlock\": _emscripten_request_pointerlock,\r\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\r\n  \"emscripten_sample_gamepad_data\": _emscripten_sample_gamepad_data,\r\n  \"emscripten_set_beforeunload_callback_on_thread\": _emscripten_set_beforeunload_callback_on_thread,\r\n  \"emscripten_set_blur_callback_on_thread\": _emscripten_set_blur_callback_on_thread,\r\n  \"emscripten_set_canvas_element_size\": _emscripten_set_canvas_element_size,\r\n  \"emscripten_set_element_css_size\": _emscripten_set_element_css_size,\r\n  \"emscripten_set_focus_callback_on_thread\": _emscripten_set_focus_callback_on_thread,\r\n  \"emscripten_set_fullscreenchange_callback_on_thread\": _emscripten_set_fullscreenchange_callback_on_thread,\r\n  \"emscripten_set_gamepadconnected_callback_on_thread\": _emscripten_set_gamepadconnected_callback_on_thread,\r\n  \"emscripten_set_gamepaddisconnected_callback_on_thread\": _emscripten_set_gamepaddisconnected_callback_on_thread,\r\n  \"emscripten_set_keydown_callback_on_thread\": _emscripten_set_keydown_callback_on_thread,\r\n  \"emscripten_set_keypress_callback_on_thread\": _emscripten_set_keypress_callback_on_thread,\r\n  \"emscripten_set_keyup_callback_on_thread\": _emscripten_set_keyup_callback_on_thread,\r\n  \"emscripten_set_main_loop\": _emscripten_set_main_loop,\r\n  \"emscripten_set_mousedown_callback_on_thread\": _emscripten_set_mousedown_callback_on_thread,\r\n  \"emscripten_set_mouseenter_callback_on_thread\": _emscripten_set_mouseenter_callback_on_thread,\r\n  \"emscripten_set_mouseleave_callback_on_thread\": _emscripten_set_mouseleave_callback_on_thread,\r\n  \"emscripten_set_mousemove_callback_on_thread\": _emscripten_set_mousemove_callback_on_thread,\r\n  \"emscripten_set_mouseup_callback_on_thread\": _emscripten_set_mouseup_callback_on_thread,\r\n  \"emscripten_set_pointerlockchange_callback_on_thread\": _emscripten_set_pointerlockchange_callback_on_thread,\r\n  \"emscripten_set_resize_callback_on_thread\": _emscripten_set_resize_callback_on_thread,\r\n  \"emscripten_set_touchcancel_callback_on_thread\": _emscripten_set_touchcancel_callback_on_thread,\r\n  \"emscripten_set_touchend_callback_on_thread\": _emscripten_set_touchend_callback_on_thread,\r\n  \"emscripten_set_touchmove_callback_on_thread\": _emscripten_set_touchmove_callback_on_thread,\r\n  \"emscripten_set_touchstart_callback_on_thread\": _emscripten_set_touchstart_callback_on_thread,\r\n  \"emscripten_set_visibilitychange_callback_on_thread\": _emscripten_set_visibilitychange_callback_on_thread,\r\n  \"emscripten_set_wheel_callback_on_thread\": _emscripten_set_wheel_callback_on_thread,\r\n  \"emscripten_set_window_title\": _emscripten_set_window_title,\r\n  \"emscripten_sleep\": _emscripten_sleep,\r\n  \"environ_get\": _environ_get,\r\n  \"environ_sizes_get\": _environ_sizes_get,\r\n  \"exit\": _exit,\r\n  \"fd_close\": _fd_close,\r\n  \"fd_fdstat_get\": _fd_fdstat_get,\r\n  \"fd_read\": _fd_read,\r\n  \"fd_seek\": _fd_seek,\r\n  \"fd_write\": _fd_write,\r\n  \"glGetFloatv\": _glGetFloatv,\r\n  \"strftime\": _strftime,\r\n  \"strftime_l\": _strftime_l\r\n};\r\nvar asm = createWasm();\r\n/** @type {function(...*):?} */\r\nvar ___wasm_call_ctors = function() {\r\n  return (___wasm_call_ctors = Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _free = function() {\r\n  return (_free = Module[\"asm\"][\"free\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _malloc = function() {\r\n  return (_malloc = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___errno_location = function() {\r\n  return (___errno_location = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebSetFullscreen = Module[\"_I_WebSetFullscreen\"] = function() {\r\n  return (_I_WebSetFullscreen = Module[\"_I_WebSetFullscreen\"] = Module[\"asm\"][\"I_WebSetFullscreen\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebOpenGameMenu = Module[\"_I_WebOpenGameMenu\"] = function() {\r\n  return (_I_WebOpenGameMenu = Module[\"_I_WebOpenGameMenu\"] = Module[\"asm\"][\"I_WebOpenGameMenu\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebSyncScreenSize = Module[\"_I_WebSyncScreenSize\"] = function() {\r\n  return (_I_WebSyncScreenSize = Module[\"_I_WebSyncScreenSize\"] = Module[\"asm\"][\"I_WebSyncScreenSize\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebMain = Module[\"_I_WebMain\"] = function() {\r\n  return (_I_WebMain = Module[\"_I_WebMain\"] = Module[\"asm\"][\"I_WebMain\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _main = Module[\"_main\"] = function() {\r\n  return (_main = Module[\"_main\"] = Module[\"asm\"][\"__main_argc_argv\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_set_limits = function() {\r\n  return (_emscripten_stack_set_limits = Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_get_base = function() {\r\n  return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_get_end = function() {\r\n  return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackSave = function() {\r\n  return (stackSave = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackRestore = function() {\r\n  return (stackRestore = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackAlloc = function() {\r\n  return (stackAlloc = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___cxa_increment_exception_refcount = function() {\r\n  return (___cxa_increment_exception_refcount = Module[\"asm\"][\"__cxa_increment_exception_refcount\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___cxa_is_pointer_type = function() {\r\n  return (___cxa_is_pointer_type = Module[\"asm\"][\"__cxa_is_pointer_type\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vi = Module[\"dynCall_vi\"] = function() {\r\n  return (dynCall_vi = Module[\"dynCall_vi\"] = Module[\"asm\"][\"dynCall_vi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() {\r\n  return (dynCall_ii = Module[\"dynCall_ii\"] = Module[\"asm\"][\"dynCall_ii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iii = Module[\"dynCall_iii\"] = function() {\r\n  return (dynCall_iii = Module[\"dynCall_iii\"] = Module[\"asm\"][\"dynCall_iii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vif = Module[\"dynCall_vif\"] = function() {\r\n  return (dynCall_vif = Module[\"dynCall_vif\"] = Module[\"asm\"][\"dynCall_vif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vffff = Module[\"dynCall_vffff\"] = function() {\r\n  return (dynCall_vffff = Module[\"dynCall_vffff\"] = Module[\"asm\"][\"dynCall_vffff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vii = Module[\"dynCall_vii\"] = function() {\r\n  return (dynCall_vii = Module[\"dynCall_vii\"] = Module[\"asm\"][\"dynCall_vii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() {\r\n  return (dynCall_iiii = Module[\"dynCall_iiii\"] = Module[\"asm\"][\"dynCall_iiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viii = Module[\"dynCall_viii\"] = function() {\r\n  return (dynCall_viii = Module[\"dynCall_viii\"] = Module[\"asm\"][\"dynCall_viii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vfff = Module[\"dynCall_vfff\"] = function() {\r\n  return (dynCall_vfff = Module[\"dynCall_vfff\"] = Module[\"asm\"][\"dynCall_vfff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_v = Module[\"dynCall_v\"] = function() {\r\n  return (dynCall_v = Module[\"dynCall_v\"] = Module[\"asm\"][\"dynCall_v\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function() {\r\n  return (dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = Module[\"asm\"][\"dynCall_iiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = function() {\r\n  return (dynCall_viiii = Module[\"dynCall_viiii\"] = Module[\"asm\"][\"dynCall_viiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiid = Module[\"dynCall_iiid\"] = function() {\r\n  return (dynCall_iiid = Module[\"dynCall_iiid\"] = Module[\"asm\"][\"dynCall_iiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = function() {\r\n  return (dynCall_iiiii = Module[\"dynCall_iiiii\"] = Module[\"asm\"][\"dynCall_iiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iijii = Module[\"dynCall_iijii\"] = function() {\r\n  return (dynCall_iijii = Module[\"dynCall_iijii\"] = Module[\"asm\"][\"dynCall_iijii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vf = Module[\"dynCall_vf\"] = function() {\r\n  return (dynCall_vf = Module[\"dynCall_vf\"] = Module[\"asm\"][\"dynCall_vf\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viif = Module[\"dynCall_viif\"] = function() {\r\n  return (dynCall_viif = Module[\"dynCall_viif\"] = Module[\"asm\"][\"dynCall_viif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = function() {\r\n  return (dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vff = Module[\"dynCall_vff\"] = function() {\r\n  return (dynCall_vff = Module[\"dynCall_vff\"] = Module[\"asm\"][\"dynCall_vff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viffff = Module[\"dynCall_viffff\"] = function() {\r\n  return (dynCall_viffff = Module[\"dynCall_viffff\"] = Module[\"asm\"][\"dynCall_viffff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiji = Module[\"dynCall_iiji\"] = function() {\r\n  return (dynCall_iiji = Module[\"dynCall_iiji\"] = Module[\"asm\"][\"dynCall_iiji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iji = Module[\"dynCall_iji\"] = function() {\r\n  return (dynCall_iji = Module[\"dynCall_iji\"] = Module[\"asm\"][\"dynCall_iji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function() {\r\n  return (dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = Module[\"asm\"][\"dynCall_viiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = function() {\r\n  return (dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = Module[\"asm\"][\"dynCall_iidiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\r\n  return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"dynCall_jiji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\r\n  return (dynCall_ji = Module[\"dynCall_ji\"] = Module[\"asm\"][\"dynCall_ji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = function() {\r\n  return (dynCall_viiiii = Module[\"dynCall_viiiii\"] = Module[\"asm\"][\"dynCall_viiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_i = Module[\"dynCall_i\"] = function() {\r\n  return (dynCall_i = Module[\"dynCall_i\"] = Module[\"asm\"][\"dynCall_i\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vfi = Module[\"dynCall_vfi\"] = function() {\r\n  return (dynCall_vfi = Module[\"dynCall_vfi\"] = Module[\"asm\"][\"dynCall_vfi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viff = Module[\"dynCall_viff\"] = function() {\r\n  return (dynCall_viff = Module[\"dynCall_viff\"] = Module[\"asm\"][\"dynCall_viff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vifff = Module[\"dynCall_vifff\"] = function() {\r\n  return (dynCall_vifff = Module[\"dynCall_vifff\"] = Module[\"asm\"][\"dynCall_vifff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifi = Module[\"dynCall_viifi\"] = function() {\r\n  return (dynCall_viifi = Module[\"dynCall_viifi\"] = Module[\"asm\"][\"dynCall_viifi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifff = Module[\"dynCall_viifff\"] = function() {\r\n  return (dynCall_viifff = Module[\"dynCall_viifff\"] = Module[\"asm\"][\"dynCall_viifff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifffii = Module[\"dynCall_viifffii\"] = function() {\r\n  return (dynCall_viifffii = Module[\"dynCall_viifffii\"] = Module[\"asm\"][\"dynCall_viifffii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiifiiiii = Module[\"dynCall_viiiifiiiii\"] = function() {\r\n  return (dynCall_viiiifiiiii = Module[\"dynCall_viiiifiiiii\"] = Module[\"asm\"][\"dynCall_viiiifiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = function() {\r\n  return (dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_diii = Module[\"dynCall_diii\"] = function() {\r\n  return (dynCall_diii = Module[\"dynCall_diii\"] = Module[\"asm\"][\"dynCall_diii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiid = Module[\"dynCall_viiid\"] = function() {\r\n  return (dynCall_viiid = Module[\"dynCall_viiid\"] = Module[\"asm\"][\"dynCall_viiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiddd = Module[\"dynCall_viiiddd\"] = function() {\r\n  return (dynCall_viiiddd = Module[\"dynCall_viiiddd\"] = Module[\"asm\"][\"dynCall_viiiddd\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vid = Module[\"dynCall_vid\"] = function() {\r\n  return (dynCall_vid = Module[\"dynCall_vid\"] = Module[\"asm\"][\"dynCall_vid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiffi = Module[\"dynCall_viiffi\"] = function() {\r\n  return (dynCall_viiffi = Module[\"dynCall_viiffi\"] = Module[\"asm\"][\"dynCall_viiffi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiifii = Module[\"dynCall_iiiifii\"] = function() {\r\n  return (dynCall_iiiifii = Module[\"dynCall_iiiifii\"] = Module[\"asm\"][\"dynCall_iiiifii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiif = Module[\"dynCall_iiiiif\"] = function() {\r\n  return (dynCall_iiiiif = Module[\"dynCall_iiiiif\"] = Module[\"asm\"][\"dynCall_iiiiif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vijji = Module[\"dynCall_vijji\"] = function() {\r\n  return (dynCall_vijji = Module[\"dynCall_vijji\"] = Module[\"asm\"][\"dynCall_vijji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\r\n  return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"dynCall_viijii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = function() {\r\n  return (dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\r\n  return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"dynCall_iiiiij\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = function() {\r\n  return (dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = Module[\"asm\"][\"dynCall_iiiiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\r\n  return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiijj\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = function() {\r\n  return (dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\r\n  return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiiijj\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_start_unwind = function() {\r\n  return (_asyncify_start_unwind = Module[\"asm\"][\"asyncify_start_unwind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_stop_unwind = function() {\r\n  return (_asyncify_stop_unwind = Module[\"asm\"][\"asyncify_stop_unwind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_start_rewind = function() {\r\n  return (_asyncify_start_rewind = Module[\"asm\"][\"asyncify_start_rewind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_stop_rewind = function() {\r\n  return (_asyncify_stop_rewind = Module[\"asm\"][\"asyncify_stop_rewind\"]).apply(null, arguments);\r\n};\r\n\r\n\r\n\r\n// include: postamble.js\r\n// === Auto-generated postamble setup entry stuff ===\r\n\r\nModule[\"addRunDependency\"] = addRunDependency;\r\nModule[\"removeRunDependency\"] = removeRunDependency;\r\nModule[\"FS_createPath\"] = FS.createPath;\r\nModule[\"FS_createDataFile\"] = FS.createDataFile;\r\nModule[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\r\nModule[\"FS_createLazyFile\"] = FS.createLazyFile;\r\nModule[\"FS_createDevice\"] = FS.createDevice;\r\nModule[\"FS_unlink\"] = FS.unlink;\r\nModule[\"LZ4\"] = LZ4;\r\n\r\n\r\nvar calledRun;\r\n\r\ndependenciesFulfilled = function runCaller() {\r\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\r\n  if (!calledRun) run();\r\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\r\n};\r\n\r\nfunction callMain(args = []) {\r\n\r\n  var entryFunction = _main;\r\n\r\n  args.unshift(thisProgram);\r\n\r\n  var argc = args.length;\r\n  var argv = stackAlloc((argc + 1) * 4);\r\n  var argv_ptr = argv >> 2;\r\n  args.forEach((arg) => {\r\n    HEAP32[argv_ptr++] = stringToUTF8OnStack(arg);\r\n  });\r\n  HEAP32[argv_ptr] = 0;\r\n\r\n  try {\r\n\r\n    var ret = entryFunction(argc, argv);\r\n\r\n    // if we're not running an evented main loop, it's time to exit\r\n    exitJS(ret, /* implicit = */ true);\r\n    return ret;\r\n  }\r\n  catch (e) {\r\n    return handleException(e);\r\n  }\r\n}\r\n\r\nfunction run(args = arguments_) {\r\n\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  preRun();\r\n\r\n  // a preRun added a dependency, run will be called later\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  function doRun() {\r\n    // run may have just been called through dependencies being fulfilled just in this very frame,\r\n    // or while the async setStatus time below was happening\r\n    if (calledRun) return;\r\n    calledRun = true;\r\n    Module['calledRun'] = true;\r\n\r\n    if (ABORT) return;\r\n\r\n    initRuntime();\r\n\r\n    preMain();\r\n\r\n    readyPromiseResolve(Module);\r\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\r\n\r\n    if (shouldRunNow) callMain(args);\r\n\r\n    postRun();\r\n  }\r\n\r\n  if (Module['setStatus']) {\r\n    Module['setStatus']('Running...');\r\n    setTimeout(function() {\r\n      setTimeout(function() {\r\n        Module['setStatus']('');\r\n      }, 1);\r\n      doRun();\r\n    }, 1);\r\n  } else\r\n  {\r\n    doRun();\r\n  }\r\n}\r\n\r\nif (Module['preInit']) {\r\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\r\n  while (Module['preInit'].length > 0) {\r\n    Module['preInit'].pop()();\r\n  }\r\n}\r\n\r\n// shouldRunNow refers to calling main(), not run().\r\nvar shouldRunNow = true;\r\n\r\nif (Module['noInitialRun']) shouldRunNow = false;\r\n\r\nrun();\r\n\r\n\r\n// end include: postamble.js\r\n\r\n\r\n  return createEdgeModule.ready\r\n}\r\n\r\n);\r\n})();\r\nexport default createEdgeModule;","import { Signal, signal } from '@preact/signals';\r\nimport { h } from 'preact';\r\nimport style from './style.css';\r\nimport { useEffect, useRef, useState } from 'preact/hooks';\r\nimport createEdgeModule from '../../edge-classic';\r\n\r\nconst defaultIWad = \"freedoom2.wad\"\r\nconst deathmatchIWad = \"freedm.wad\";\r\n\r\ntype PlayerConfig = {\r\n\tindexDBName: string;\r\n}\r\n\r\ntype WadState = {\r\n\terror?: string;\r\n\twadName?: string;\r\n\tisIWAD?: boolean;\r\n}\r\n\r\nconst config: PlayerConfig = {\r\n\tindexDBName: '/edge-classic'\r\n}\r\n\r\nclass WadHandler {\r\n\r\n\tconstructor(config: PlayerConfig) {\r\n\t\tthis.config = config;\r\n\t}\r\n\r\n\tprivate error(message: string) {\r\n\t\talert(message);\r\n\t\tconsole.error(message);\r\n\t\tconsole.trace();\r\n\t}\r\n\r\n\tsetWad(wadName: string, isIWAD?: boolean) {\r\n\t\tthis.wadState.value = { wadName: wadName, isIWAD: isIWAD };\r\n\t}\r\n\r\n\tasync uploadWad(file: File) {\r\n\r\n\t\tlet database: IDBDatabase | undefined;\r\n\r\n\t\ttry {\r\n\t\t\tdatabase = await this.openDatabase();\r\n\t\t\tif (!database) {\r\n\t\t\t\tthis.error(\"Unable to open database\")\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis.error(e);\r\n\t\t\tdatabase?.close();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst upload = new Promise<{ wadName: string, iwad: boolean }>((resolve, reject) => {\r\n\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\r\n\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\tconst bits = e.target.result;\r\n\t\t\t\tconst contents = new Uint8Array(bits as ArrayBuffer);\r\n\r\n\t\t\t\tconst iwad = contents[0] === 73;\r\n\r\n\t\t\t\tconst trans = database.transaction(['FILE_DATA'], 'readwrite');\r\n\t\t\t\tconst path = `${this.config.indexDBName}/${file.name}`;\r\n\t\t\t\tconst addReq = trans.objectStore('FILE_DATA').put({ timestamp: new Date(), mode: 33206, contents: contents }, path);\r\n\r\n\t\t\t\taddReq.onerror = (e) => {\r\n\t\t\t\t\treject(\"Error storing wad data\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttrans.oncomplete = (e) => {\r\n\t\t\t\t\tresolve({ wadName: file.name, iwad: iwad });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treader.onerror = (e) => {\r\n\t\t\t\treject(\"Error reading wad\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst wad = await upload;\r\n\t\t\tdatabase?.close();\r\n\t\t\tdatabase = undefined;\r\n\t\t\tthis.setWad(wad.wadName, wad.iwad);\r\n\t\t} catch (e) {\r\n\t\t\tthis.error(e);\r\n\t\t} finally {\r\n\t\t\tdatabase?.close();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate async openDatabase() {\r\n\r\n\t\treturn new Promise<IDBDatabase | undefined>((resolve, reject) => {\r\n\r\n\t\t\t// build pre-render guard\r\n\t\t\tif (typeof window !== 'undefined') {\r\n\t\t\t\tconst dbrequest = window.indexedDB.open(this.config.indexDBName);\r\n\r\n\t\t\t\tdbrequest.onerror = (e) => {\r\n\t\t\t\t\treject(`unable to load database ${this.config.indexDBName}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdbrequest.onupgradeneeded = (e) => {\r\n\r\n\t\t\t\t\tconsole.log(\"upgrade needed\");\r\n\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tif (!db.objectStoreNames.contains(\"FILE_DATA\")) {\r\n\t\t\t\t\t\tconsole.log(\"Creating FILE_DATA object store\");\r\n\t\t\t\t\t\tconst store = db.createObjectStore(\"FILE_DATA\", {});\r\n\t\t\t\t\t\tstore.createIndex(\"timestamp\", \"timestamp\", { unique: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tdbrequest.onsuccess = (e) => {\r\n\t\t\t\t\tconsole.log(\"db open\");\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tresolve(db);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\twadState: Signal<WadState> = signal({});\r\n\r\n\tconfig: PlayerConfig;\r\n\r\n\tstatic get singleton(): WadHandler {\r\n\t\tif (!WadHandler.instance) {\r\n\t\t\tWadHandler.instance = new WadHandler(config);\r\n\t\t}\r\n\t\treturn WadHandler.instance;\r\n\t}\r\n\r\n\tprivate static instance?: WadHandler;\r\n}\r\n\r\ntype Project = {\r\n\tname: string;\r\n\timage: string;\r\n\tlink: string;\r\n}\r\n\r\nconst projects: Project[] = [\r\n\r\n\t{ name: \"Operation: Arctic Wolf Revisited\", image: \"./assets/images/articwolf.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/arctic-wolf-revisited\" },\r\n\t{ name: \"Astral Pathfinder\", image: \"./assets/images/astralpathfinder.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/astral-pathfinder1\" },\r\n\t{ name: \"Aliens: Stranded\", image: \"./assets/images/aliensstranded.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/aliens-stranded\" }\r\n]\r\n\r\nconst WadChooser = () => {\r\n\r\n\tconst pelements = projects.map(p => {\r\n\t\treturn <a href={p.link} target=\"_blank\" style=\"display:flex;flex:1;flex-direction:column;height:100%;align-items:flex-end\">\r\n\t\t\t<div style={{ display: \"flex\", flex: 0 }}>\r\n\t\t\t\t<div style={{ paddingTop: 12, paddingBottom: 4, fontSize: 14, whiteSpace: \"pre\", fontWeight: \"normal\" }}>{p.name}</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", position: \"relative\", flexGrow: 1, width: \"100%\" }} >\r\n\t\t\t\t<img style=\"width:100%;height:100%;object-fit:cover;position:absolute\" src={p.image} />\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t});\r\n\r\n\treturn <div style={{ display: \"flex\", width: \"100%\", maxWidth: \"1440px\", padding: 24, paddingLeft: 42 }}>\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1 }}>\r\n\t\t\t<div style={{ display: \"flex\", width: \"80%\" }}>\r\n\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"start\" }}>\r\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t\t<div style={{ fontSize: 18, fontWeight: \"normal\", paddingBottom: 24, width: 800 }}>Play EDGE-Classic in your browser by selecting an option below\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:24px;width:292px;height:64px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWad(defaultIWad, true)\r\n\t\t\t\t\t\t}}>Play Freedoom</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:24px;width:292px;height:64px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWad(deathmatchIWad, true)\r\n\t\t\t\t\t\t}}>Play Bot Death Match</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:24px;width:292px;height:64px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tdocument.getElementById('getWadFile').click()\r\n\t\t\t\t\t\t}}>Choose Wad</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<input id=\"getWadFile\" style=\"display:none\" type=\"file\" onChange={(e) => {\r\n\t\t\t\t\tconst files = (e.target as any).files as File[];\r\n\t\t\t\t\tif (files.length !== 1) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(\"Please select a single wad file\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst file = files[0];\r\n\t\t\t\t\tif (!file.name.toLowerCase().endsWith(\".wad\")) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(\"Please select a single wad file\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst wadHandler = WadHandler.singleton;\r\n\t\t\t\t\twadHandler.uploadWad(file);\r\n\r\n\t\t\t\t}} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1, width: \"50%\", flexDirection: \"column\" }}>\r\n\t\t\t<div style={{ display: \"flex\", flex: \"0 0 24px\", position: \"relative\" }}>\r\n\t\t\t\t<div style={{ position: \"absolute\", fontSize: 18, fontWeight: 400, whiteSpace: \"pre\" }}>Suggested Projects</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", flexShrink: 0, flexGrow: 1, flexDirection: \"column\" }}>\r\n\t\t\t\t{pelements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n}\r\n\r\nconst EdgeClassic = () => {\r\n\r\n\tconst canvasRef = useRef<HTMLCanvasElement>(null);\r\n\tconst canvasContainerRef = useRef<HTMLDivElement>(null);\r\n\tconst [state, setState] = useState<{ loading: boolean }>({ loading: true });\r\n\tconst wadState = WadHandler.singleton.wadState.value;\r\n\r\n\r\n\tconst pointerLockChange = () => {\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst lock = canvas === document.pointerLockElement;\r\n\r\n\t\tModule._I_WebSetFullscreen(lock ? 1 : 0);\r\n\r\n\t\t/*\r\n\t\t// It feels good to open the menu when releasing pointer lock\r\n\t\t// though, it makes the interaction tricky to close the menu\r\n\t\tif (!lock) {\r\n\t\t\tModule._I_WebOpenGameMenu(1);\r\n\t\t} \r\n\t\t*/\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst canvasContainer = canvasContainerRef?.current;\r\n\r\n\t\tconst wadName = wadState.wadName!;\r\n\r\n\t\tif (!canvasContainer) {\r\n\t\t\tthrow \"Unable to get canvas container\";\r\n\t\t}\r\n\r\n\t\tif (!canvas) {\r\n\t\t\tthrow \"Unable to get canvas\";\r\n\t\t}\r\n\r\n\t\tconst syncCanvasSize = () => {\r\n\t\t\tconst w = Math.floor(canvasContainer.offsetWidth);\r\n\t\t\tconst h = Math.floor(canvasContainer.offsetHeight);\r\n\t\t\tconsole.log(\"Setting canvas size\", w, h);\r\n\t\t\tcanvas.style.width = `${w}px`;\r\n\t\t\tcanvas.style.height = `${h}px`;\r\n\t\t\tcanvas.width = w;\r\n\t\t\tcanvas.height = h;\r\n\t\t}\r\n\r\n\t\t// initial update\t\t\r\n\t\tsyncCanvasSize();\r\n\r\n\t\tconst canvasSync = () => {\r\n\t\t\tsyncCanvasSize();\r\n\t\t\tModule._I_WebSyncScreenSize();\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"pointerlockchange\", pointerLockChange, false);\r\n\r\n\t\tlet doSyncTimeout;\r\n\t\twindow.addEventListener(\"resize\", (ev) => {\r\n\r\n\t\t\tclearTimeout(doSyncTimeout);\r\n\t\t\tdoSyncTimeout = setTimeout(canvasSync, 250);\r\n\r\n\t\t});\r\n\r\n\t\tcanvas.addEventListener(\"webglcontextlost\", function (e) { alert('FIXME: WebGL context lost, please reload the page'); e.preventDefault(); }, false);\r\n\r\n\r\n\t\tlet iwad = defaultIWad;\r\n\t\tif (wadState.wadName === deathmatchIWad) {\r\n\t\t\tiwad = deathmatchIWad;\r\n\t\t}\r\n\t\t\r\n\t\tif (wadState.wadName !== iwad && wadState.isIWAD) {\r\n\t\t\tiwad = `edge-classic/${wadName}`;\r\n\t\t}\r\n\r\n\t\tconst args = [\"-home\", \"edge-classic\", \"-windowed\", \"-width\", canvas.offsetWidth.toString(), \"-height\", canvas.offsetHeight.toString(), \"-iwad\", iwad];\r\n\r\n\t\tif (iwad === deathmatchIWad) {\r\n\t\t\targs.push(...[\"-deathmatch\", \"1\", \"-nomonsters\", \"-skill\", \"2\", \"-bots\", \"1\", \"-warp\", \"map03\"])\r\n\t\t}\r\n\r\n\t\tif (!wadState.isIWAD) {\r\n\t\t\targs.push(\"-file\")\r\n\t\t\targs.push(`edge-classic/${wadName}`);\r\n\t\t}\r\n\r\n\t\tcreateEdgeModule({\r\n\t\t\tedgePostInit: () => {\r\n\t\t\t\tconsole.log(\"Post-Init!\");\r\n\t\t\t\t// jump \r\n\t\t\t\tif (!args.find( a => a.startsWith(\"-warp\"))) {\r\n\t\t\t\t\tModule._I_WebOpenGameMenu(1);\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tsetState({ ...state, loading: false });\r\n\t\t\t},\r\n\t\t\tonFullscreen: () => {\r\n\t\t\t\t/*\r\n\t\t\t\tconsole.log(\"On fullscreen\");\r\n\t\t\t\tconst elements = document.querySelectorAll(\".playercontrols\");\r\n\t\t\t\telements?.forEach(e => {\r\n\t\t\t\t\t(e as any).style.display = \"flex\";\r\n\t\t\t\t});\r\n\t\t\t\t*/\r\n\t\t\t},\r\n\t\t\tpreEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\tpostEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\targuments: args,\r\n\t\t\tpreInit: () => {\r\n\t\t\t\tconsole.log(\"Pre-Init\");\r\n\t\t\t},\r\n\t\t\tpreRun: [],\r\n\t\t\tpostRun: [],\r\n\t\t\tprint: (function () {\r\n\t\t\t\treturn function (text) {\r\n\t\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\t\tconsole.log(text);\r\n\t\t\t\t};\r\n\t\t\t})(),\r\n\t\t\tprintErr: function (text) {\r\n\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\tconsole.error(text);\r\n\t\t\t},\r\n\t\t\tcanvas: canvas,\r\n\t\t\tsetStatus: function (text) { console.log(\"status\", text) },\r\n\t\t\tmonitorRunDependencies: function (left) { console.log(left) },\r\n\t\t}).then(module => {\r\n\t\t\tglobalThis.Module = module;\r\n\t\t\tmodule.canvas = canvas;\r\n\t\t});\r\n\r\n\r\n\t\treturn () => {\r\n\r\n\t\t};\r\n\r\n\t}, []);\r\n\r\n\r\n\treturn <div id=\"canvas-container\" ref={canvasContainerRef} style={{ display: \"flex\", width: \"100%\", height: \"100%\", position: \"relative\" }}>\r\n\t\t<canvas id=\"canvas\" ref={canvasRef} style={{ visibility: state.loading ? \"hidden\" : \"visible\" }}\r\n\t\t\tonClick={async (ev) => {\r\n\t\t\t\tconst lock = canvasRef.current === document.pointerLockElement;\r\n\t\t\t\tif (!lock) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait canvasRef.current?.requestPointerLock();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}} />\r\n\r\n\t\t{!!state.loading && <div style={{ position: \"absolute\", display: \"flex\", width: \"100%\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n\t\t\t<div class={style.loading}>\r\n\t\t\t\t<span style=\"--i:1\">L</span>\r\n\t\t\t\t<span style=\"--i:2\">O</span>\r\n\t\t\t\t<span style=\"--i:3\">A</span>\r\n\t\t\t\t<span style=\"--i:4\">D</span>\r\n\t\t\t\t<span style=\"--i:5\">I</span>\r\n\t\t\t\t<span style=\"--i:6\">N</span>\r\n\t\t\t\t<span style=\"--i:7\">G</span>\r\n\t\t\t\t<span style=\"--i:8\">.</span>\r\n\t\t\t\t<span style=\"--i:9\">.</span>\r\n\t\t\t\t<span style=\"--i:10\">.</span>\r\n\t\t\t</div>\r\n\t\t</div>}\r\n\r\n\t</div>\r\n}\r\n// floating player controls, not currently used\r\n// {!state.loading && <PlayerControls />} \r\n\r\nconst PlayerControls = () => {\r\n\tconst [fullscreen, setFullscreen] = useState(false);\r\n\treturn <div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\", padding: \"24px\", zIndex: 1, position: \"absolute\" }}>\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\" }} />\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", flexShrink: 1, paddingRight: \"48px\" }}>\r\n\t\t\t<button style={{ opacity: 1 }} className=\"playercontrols\" onClick={() => { Module._I_WebSetFullscreen(fullscreen ? 0 : 1, setFullscreen(!fullscreen)) }}>{fullscreen ? \"Minimize\" : \"Maximize\"}</button>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst Player = () => {\r\n\r\n\tconst wadHandler = WadHandler.singleton;\r\n\tconst wadState = wadHandler.wadState.value;\r\n\r\n\treturn (\r\n\t\t<div style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\r\n\t\t\t{!wadState.wadName && <WadChooser />}\r\n\t\t\t{!!wadState.wadName && <EdgeClassic />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Player;\r\n","import './style/index.css';\r\nimport App from './components/app';\r\n\r\nexport default App;\r\n","import { h } from 'preact';\r\n\r\nimport Player from './player';\r\n\r\nconst App = () => (\r\n\t<div id=\"app\">\r\n\t\t<main>\r\n\t\t\t<Player/>\r\n\t\t</main>\r\n\t</div>\r\n);\r\n\r\nexport default App;\r\n"],"sourceRoot":""}