{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/preact-cli/src/lib/entry.js","webpack:///../node_modules/preact/src/util.js","webpack:///../node_modules/preact/src/create-element.js","webpack:///../node_modules/preact/src/component.js","webpack:///../node_modules/preact/src/diff/children.js","webpack:///../node_modules/preact/src/diff/props.js","webpack:///../node_modules/preact/src/diff/index.js","webpack:///../node_modules/preact/src/render.js","webpack:///../node_modules/preact/src/clone-element.js","webpack:///../node_modules/preact/src/create-context.js","webpack:///../node_modules/preact/src/options.js","webpack:///../node_modules/preact/src/constants.js","webpack:///../node_modules/preact/src/diff/catch-error.js","webpack:///../node_modules/preact/hooks/src/index.js","webpack:///../node_modules/@preact/signals-core/src/index.ts","webpack:///../node_modules/@preact/signals/src/index.ts","webpack:///./components/player/style.css","webpack:///./edge-classic.js","webpack:///./components/licenses/style.css","webpack:///./components/licenses/index.tsx","webpack:///./components/player/index.tsx","webpack:///./index.ts","webpack:///./components/app.tsx"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","h","render","hydrate","Preact","interopDefault","default","normalizeURL","url","length","navigator","serviceWorker","register","__webpack_public_path__","require","root","document","getElementById","body","firstElementChild","init","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","innerHTML","CLI_DATA","currentURL","location","pathname","u","v","parentNode","removeChild","y","f","arguments","children","defaultProps","type","props","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","current","_","k","this","context","b","indexOf","g","base","push","w","__r","debounceRendering","e","sort","shift","__P","L","__n","ownerSVGElement","M","x","a","Array","isArray","A","C","$","nextSibling","S","O","P","some","appendChild","insertBefore","I","setProperty","test","T","style","cssText","replace","toLowerCase","slice","addEventListener","z","j","removeEventListener","removeAttribute","setAttribute","event","H","contextType","__E","q","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","diffed","localName","nodeType","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","checked","unmount","componentWillUnmount","B","firstChild","D","E","F","Consumer","Provider","splice","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","resolve","setTimeout","__H","__V","__N","filter","every","clearTimeout","cancelAnimationFrame","requestAnimationFrame","Error","U","useSignal","__$f","__$u","peek","subscribe","valueOf","toString","set","displayName","defineProperties","configurable","__np","_scriptDir","createEdgeModule","currentScript","src","undefined","assert","condition","text","abort","updateMemoryViews","wasmMemory","buffer","Module","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","Uint8Array","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","keepRuntimeAlive","noExitRuntime","runtimeKeepaliveCounter","addRunDependency","runDependencies","removeRunDependency","runDependencyWatcher","clearInterval","dependenciesFulfilled","callback","what","err","ABORT","EXITSTATUS","WebAssembly","RuntimeError","readyPromiseReject","isDataURI","filename","startsWith","dataURIPrefix","getBinary","file","wasmBinaryFile","wasmBinary","readBinary","instantiateArrayBuffer","binaryFile","imports","receiver","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","fetch","credentials","response","catch","getBinaryPromise","binary","instantiate","instance","reason","ExitStatus","status","message","callRuntimeCallbacks","callbacks","dynCall","sig","ptr","args","apply","concat","dynCallLegacy","setValue","endsWith","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","set_adjusted_ptr","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","randomFill","view","crypto","getRandomValues","initRandomFill","lengthBytesUTF8","str","len","charCodeAt","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","endIdx","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endPtr","UTF8Decoder","decode","subarray","u0","u1","u2","String","fromCharCode","ch","mmapAlloc","FS_getMode","canRead","canWrite","UTF8ToString","convertI32PairToI53Checked","lo","hi","NaN","stringToUTF8","outPtr","isLeapYear","year","ydayFromDate","date","getFullYear","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","getMonth","getDate","stringToNewUTF8","size","ret","_malloc","_emscripten_set_main_loop_timing","Browser","mainLoop","timingMode","timingValue","func","running","scheduler","timeUntilNextTick","Math","max","tickStartTime","_emscripten_get_now","runner","method","setImmediate","setImmediates","emscriptenMainLoopMessageId","target","stopPropagation","postMessage","setMainLoop","browserIterationFunc","fps","simulateInfiniteLoop","arg","noSetTiming","checkIsRunning","thisMainLoopId","currentlyRunningMainloop","queue","start","Date","now","blocker","remainingBlockers","remaining","next","floor","counted","out","updateStatus","currentFrameNumber","GL","newRenderingFrameStarted","runIter","SDL","audio","queueNewAudioData","handleException","quit_","exitJS","code","callUserCallback","_exit","maybeExit","safeSetTimeout","timeout","readEmAsmArgs","sigPtr","buf","readEmAsmArgsArray","withStackSave","stack","stackSave","stackRestore","setLetterbox","element","topBottom","leftRight","paddingLeft","paddingRight","paddingTop","paddingBottom","findEventTarget","cString","specialHTMLTargets","findCanvasEventTarget","stringToUTF8OnStack","stackAlloc","getCanvasElementSize","width","height","canvas","_emscripten_get_canvas_element_size","id","_emscripten_set_canvas_element_size","setCanvasElementSize","controlTransferredOffscreen","jstoi_q","parseInt","softFullscreenResizeWebGLRenderTarget","topMargin","dpr","devicePixelRatio","inHiDPIFullscreenMode","currentFullscreenStrategy","canvasResolutionScaleMode","inAspectRatioFixedFullscreenMode","scaleMode","inPixelPerfectFullscreenMode","inCenteredWithoutScalingFullscreenMode","screenWidth","round","innerWidth","screenHeight","innerHeight","canvasSize","GLctxObject","GLctx","viewport","canvasResizedCallback","dynCall_iiii","canvasResizedCallbackUserData","getBoundingClientRect","JSEvents_resizeCanvasForFullscreen","strategy","restoreOldStyle","fullscreenElement","webkitFullscreenElement","oldWidth","oldHeight","oldCssWidth","oldCssHeight","backgroundColor","oldBackgroundColor","oldDocumentBackgroundColor","oldPaddingLeft","oldPaddingRight","oldPaddingTop","oldPaddingBottom","marginLeft","oldMarginLeft","marginRight","oldMarginRight","marginTop","oldMarginTop","marginBottom","oldMarginBottom","margin","oldDocumentBodyMargin","documentElement","overflow","oldDocumentOverflow","scroll","oldDocumentScroll","imageRendering","oldImageRendering","registerRestoreOldStyle","cssWidth","softFullscreen","screen","cssHeight","rect","windowedCssWidth","windowedCssHeight","windowedRttWidth","windowedRttHeight","desiredCssHeight","desiredCssWidth","filteringMode","dpiScale","newWidth","newHeight","JSEvents_requestFullscreen","requestFullscreen","webkitRequestFullscreen","JSEvents","fullscreenEnabled","Element","ALLOW_KEYBOARD_INPUT","requestPointerLock","fillGamepadEventData","eventStruct","timestamp","axes","buttons","pressed","connected","index","mapping","_glBindVertexArray","vao","bindVertexArray","vaos","ibo","getParameter","currentElementArrayBufferBinding","convertI32PairToI53","_glDeleteVertexArrays","deleteVertexArray","_glDrawArraysInstanced","first","count","primcount","drawArraysInstanced","_glDrawBuffers","bufs","bufArray","tempFixedLengthArray","drawBuffers","_glDrawElements","indices","calcBufLength","getTempIndexBuffer","bindBuffer","bufferSubData","preDrawHandleClientVertexAttribBindings","drawElements","postDrawHandleClientVertexAttribBindings","_glDrawElementsInstanced","drawElementsInstanced","__glGenObject","buffers","createFunction","objectTable","getNewId","recordError","_glGenVertexArrays","arrays","__glGetActiveAttribOrUniform","funcName","program","bufSize","info","programs","numBytesWrittenExclNull","writeI53ToI64","num","emscriptenWebGLGet","name_","formats","currentContext","version","getSupportedExtensions","result","_glGetFloatv","emscriptenWebGLGetIndexed","getIndexedParameter","WebGLBuffer","_glGetQueryObjecti64vEXT","pname","params","param","query","queries","disjointTimerQueryExt","getQueryParameter","_glGetQueryObjectivEXT","webglGetLeftBracePos","lastIndexOf","webglPrepareUniformLocationsBeforeFirstUse","uniformLocsById","uniformSizeAndIdsByName","uniformArrayNamesById","getProgramParameter","getActiveUniform","nm","sz","lb","arrayName","uniformIdCounter","webglGetUniformLocation","currentProgram","webglLoc","getUniformLocation","emscriptenWebGLGetUniform","getUniform","emscriptenWebGLGetVertexAttrib","clientBuffers","enabled","getVertexAttrib","fround","_glGetVertexAttribIiv","_glIsVertexArray","array","isVertexArray","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","clz32","BYTES_PER_ELEMENT","emscriptenWebGLGetTexPixelData","format","pixels","byteSize","sizePerPixel","colorChannelsInGlTextureFormat","bytes","alignment","alignedRowSize","roundedToNextMultipleOf","computeUnpackAlignedImageSize","unpackAlignment","_glVertexAttribDivisor","divisor","vertexAttribDivisor","emscripten_realloc_buffer","pages","byteLength","grow","registerFocusEventCallback","userData","useCapture","callbackfunc","eventTypeId","eventTypeString","focusEvent","eventHandler","handlerFunc","nodeName","getNodeNameForTarget","preventDefault","registerOrRemoveHandler","registerFullscreenChangeEventCallback","fullscreenChangeEvent","mozFullScreenElement","msFullscreenElement","isFullscreen","reportedElement","previousFullscreenElement","clientWidth","clientHeight","fillFullscreenChangeEventData","registerGamepadEventCallback","gamepadEvent","allowsDeferredCalls","registerKeyEventCallback","keyEvent","keyEventData","timeStamp","ctrlKey","shiftKey","altKey","metaKey","repeat","charCode","keyCode","which","char","locale","fillMouseEventData","screenX","screenY","clientX","clientY","button","left","top","registerMouseEventCallback","mouseEvent","registerPointerlockChangeEventCallback","pointerlockChangeEvent","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","msPointerLockElement","fillPointerlockChangeEventData","registerTouchEventCallback","touchEvent","touches","et","isChanged","onTarget","identifier","changedTouches","targetTouches","targetRect","numTouches","pageX","pageY","registerVisibilityChangeEventCallback","visibilityChangeEvent","visibilityState","hidden","_emscripten_sleep","ms","Asyncify","handleSleep","wakeUp","getEnvStrings","strings","env","languages","thisProgram","ENV","_strftime","maxsize","tm","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","getTime","leap","currentMonth","daysInCurrentMonth","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","setDate","setMonth","setFullYear","addDays","tm_year","tm_yday","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_wday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","EXPANSION_RULES_2","substring","twelveHour","sum","arraySum","val","jan1","dec31","off","ahead","abs","includes","runAndAbortIfError","run","arguments_","doRun","calledRun","FS","initialized","ignorePermissions","TTY","__ATINIT__","__ATMAIN__","readyPromiseResolve","shouldRunNow","entryFunction","_main","unshift","argc","argv","argv_ptr","callMain","cb","__ATPOSTRUN__","postRun","__ATPRERUN__","preRun","reject","expectedDataFileDownloads","metadata","fetchRemotePackage","packageName","packageSize","xhr","XMLHttpRequest","open","responseType","onprogress","total","loaded","addedTotal","dataFileDownloads","download","ceil","onerror","onload","statusText","responseURL","send","runWithFS","check","msg","processPackageData","arrayBuffer","ArrayBuffer","byteArray","compressedData","loadPackage","preloadFallback","error","console","REMOTE_PACKAGE_NAME","REMOTE_PACKAGE_SIZE","indexedDB","PACKAGE_UUID","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","self","IDB_RO","IDB_RW","DB_NAME","DB_VERSION","METADATA_STORE_NAME","PACKAGE_STORE_NAME","CHUNK_SIZE","preloadResults","errback","openRequest","onupgradeneeded","db","objectStoreNames","contains","deleteObjectStore","createObjectStore","onsuccess","openDatabase","getRequest","transaction","objectStore","checkCachedPackage","PACKAGE_PATH","PACKAGE_NAME","useCached","fromCache","packages","chunksDone","totalSize","chunkCount","chunks","chunkId","tempTyped","byteOffset","fetchCachedPackage","packageData","packageMeta","chunkSliceStart","nextChunkSliceStart","finishedChunks","putPackageRequest","put","putMetadataRequest","uuid","cacheRemotePackage","process","encodeURIComponent","REMOTE_PACKAGE_BASE","read_","readAsync","setWindowTitle","moduleOverrides","_extends","toThrow","scriptDirectory","href","substr","responseText","title","log","path","tempDouble","tempI64","__ATEXIT__","ASM_CONSTS","edgePostInit","$0","$1","homeIndex","homeDir","analyzePath","exists","mkdirTree","mount","IDBFS","syncfs","_I_WebMain","onFullscreen","edgePreSyncFS","edgePostSyncFS","AudioContext","webkitAudioContext","mediaDevices","getUserMedia","webkitGetUserMedia","ctx","elements","SDL2","capture","audioContext","listenOnce","resume","sampleRate","$2","$3","have_microphone","stream","silenceTimer","mediaStreamNode","createMediaStreamSource","scriptProcessorNode","createScriptProcessor","onaudioprocess","audioProcessingEvent","outputBuffer","getChannelData","fill","currentCaptureBuffer","inputBuffer","connect","destination","no_microphone","silenceBuffer","createBuffer","video","currentOutputBuffer","numChannels","numberOfChannels","channelData","tracks","getAudioTracks","removeTrack","disconnect","close","ctxCanvas","imageCtx","image","createImageData","dst","CanvasPixelArray","data32Data","data32","data8","putImageData","$4","hot_x","hot_y","getContext","toDataURL","urlBuf","alert","PATH","isAbs","charAt","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","normalize","isAbsolute","trailingSlash","split","join","dirname","dir","basename","lastSlash","paths","join2","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","end","fromParts","toParts","min","samePartsLength","outputParts","TextDecoder","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","tty","node","rdev","ErrnoError","seekable","fsync","read","offset","get_char","bytesRead","write","put_char","default_tty_ops","prompt","readline","default_tty1_ops","MEMFS","ops_table","createNode","parent","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","prot","flags","allocated","preloadPlugins","dbs","DB_STORE_NAME","populate","getLocalSet","local","getRemoteSet","remote","reconcile","quit","values","getDB","req","fileStore","indexNames","createIndex","unique","isRealDir","toAbsolute","mountpoint","map","stat","pop","openKeyCursor","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","removeRemoteEntry","delete","done","errored","keys","e2","remove","oncomplete","reverse","LZ4","DIR_MODE","FILE_MODE","codec","MiniLZ4","sIdx","eIdx","token","literals_length","match_length","pos","maxInputSize","minMatch","hashShift","mfLimit","skipStrength","mlBits","mlMask","runMask","hasher","hashTable","empty","compressBound","isize","compress","dpos","dlen","anchor","findMatchAttempts","srcLength","sequenceLowBits","sequenceHighBits","hash","imul","ln","compressBlock","compressPackage","verify","temp","compressedChunks","successes","chunk","bound","compressed","compressedSize","back","uncompress","pack","preloadPlugin","files","createPath","handled","fullname","plugin","finish","readFile","written","currChunk","desired","chunkIndex","compressedStart","found","originalSize","startInChunk","endInChunk","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","opts","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","hashName","parentid","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","FSNode","destroyNode","isSocket","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd","getStream","createStream","FSStream","shared","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","completed","pseudo","mountRoot","mkdir","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","dontFollow","lstat","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","FS_modeStringToFlags","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","mmapFlags","munmap","ioctl","cmd","encoding","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","staticInit","findObject","dontResolveLastLink","parentExists","parentPath","parentObject","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","writeChunks","chunkOffset","chunkSize","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","chunkNum","doXHR","setRequestHeader","overrideMimeType","_length","_chunkSize","fn","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","doMsync","addr","varargs","getStr","nowIsMonotonic","performance","pause","expected","expectedBlockers","pointerLock","moduleContextCreatedCallbacks","workers","pointerLockChange","initted","imagePlugin","noImageDecoding","Blob","getMimetype","URL","createObjectURL","img","Image","complete","drawImage","preloadedImages","revokeObjectURL","audioPlugin","noAudioDecoding","preloadedAudios","Audio","BASE","leftchar","leftbits","curr","PAD","encode64","exitPointerLock","ev","createContext","useWebGL","setInModule","webGLContextAttributes","contextHandle","contextAttributes","antialias","alpha","majorVersion","WebGL2RenderingContext","attribute","makeContextCurrent","destroyContext","fullscreenHandlersInstalled","lockPointer","resizeCanvas","fullscreenChange","canvasContainer","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","setWindowedCanvasSize","nextRAF","fakeRequestAnimationFrame","delay","RAF","safeRequestAnimationFrame","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","deltaY","deltaMode","mouseX","mouseY","mouseMovementX","mouseMovementY","lastTouches","calculateMouseEvent","cw","scrollX","pageXOffset","scrollY","pageYOffset","touch","adjustedX","adjustedY","coords","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","wNative","hNative","widthNative","heightNative","factor","removeProperty","EGL","errorCode","defaultDisplayInitialized","currentReadSurface","currentDrawSurface","depth","stencil","stringCache","setErrorCode","chooseConfig","display","attribList","config","config_size","numConfigs","lowLatency","counter","framebuffers","renderbuffers","textures","shaders","contexts","offscreenCanvases","samplers","transformFeedbacks","syncs","byteSizeByTypeRoot","byteSizeByType","stringiCache","lastError","table","MAX_TEMP_BUFFER_SIZE","numTempVertexBuffersPerSize","log2ceilLookup","generateTempBuffers","quads","largestIndex","tempVertexBufferCounters1","tempVertexBufferCounters2","tempVertexBuffers1","tempVertexBuffers2","tempIndexBuffers","ringbufferLength","ringbuffer1","ringbuffer2","tempQuadIndexBuffer","numIndexes","quadIndexes","bufferData","getTempVertexBuffer","sizeBytes","ringbuffer","nextFreeBufferIndex","vbo","prevVBO","prevIBO","vb","getSource","shader","string","source","stride","usedTempBuffers","resetBufferBinding","maxVertexAttribs","clientside","vertexAttribPointerAdaptor","normalized","currentArrayBufferBinding","getContextSafariWebGL2Fixed","fixedGetContext","ver","attrs","gl","WebGLRenderingContext","registerContext","handle","enableExtensionsByDefault","initExtensions","deleteContext","removeAllHandlersOnTarget","initExtensionsDone","ext","getExtension","webgl_enable_ANGLE_instanced_arrays","webgl_enable_OES_vertex_array_object","webgl_enable_WEBGL_draw_buffers","dibvbi","mdibvbi","webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance","multiDrawWebgl","webgl_enable_WEBGL_multi_draw","_eglWaitGL","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","runDeferredCalls","eventListenerFunc","jsEventHandler","webkitFullscreenEnabled","restoreOldWindowedStyle","_emscripten_glActiveTexture","x0","activeTexture","_emscripten_glAttachShader","attachShader","_emscripten_glBeginQuery","beginQuery","_emscripten_glBeginQueryEXT","_emscripten_glBeginTransformFeedback","beginTransformFeedback","_emscripten_glBindAttribLocation","bindAttribLocation","_emscripten_glBindBuffer","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","_emscripten_glBindBufferBase","bindBufferBase","_emscripten_glBindBufferRange","ptrsize","bindBufferRange","_emscripten_glBindFramebuffer","framebuffer","bindFramebuffer","_emscripten_glBindRenderbuffer","renderbuffer","bindRenderbuffer","_emscripten_glBindSampler","unit","sampler","bindSampler","_emscripten_glBindTexture","texture","bindTexture","_emscripten_glBindTransformFeedback","bindTransformFeedback","_emscripten_glBindVertexArray","_glBindVertexArrayOES","_emscripten_glBindVertexArrayOES","_emscripten_glBlendColor","x1","x2","x3","blendColor","_emscripten_glBlendEquation","blendEquation","_emscripten_glBlendEquationSeparate","blendEquationSeparate","_emscripten_glBlendFunc","blendFunc","_emscripten_glBlendFuncSeparate","blendFuncSeparate","_emscripten_glBlitFramebuffer","x4","x5","x6","x7","x8","x9","blitFramebuffer","_emscripten_glBufferData","usage","_emscripten_glBufferSubData","_emscripten_glCheckFramebufferStatus","checkFramebufferStatus","_emscripten_glClear","clear","_emscripten_glClearBufferfi","clearBufferfi","_emscripten_glClearBufferfv","drawbuffer","clearBufferfv","_emscripten_glClearBufferiv","clearBufferiv","_emscripten_glClearBufferuiv","clearBufferuiv","_emscripten_glClearColor","clearColor","_emscripten_glClearDepthf","clearDepth","_emscripten_glClearStencil","clearStencil","_emscripten_glClientWaitSync","sync","timeout_low","timeout_high","clientWaitSync","_emscripten_glColorMask","red","green","blue","colorMask","_emscripten_glCompileShader","compileShader","_emscripten_glCompressedTexImage2D","level","internalFormat","border","imageSize","compressedTexImage2D","_emscripten_glCompressedTexImage3D","compressedTexImage3D","_emscripten_glCompressedTexSubImage2D","xoffset","yoffset","compressedTexSubImage2D","_emscripten_glCompressedTexSubImage3D","zoffset","compressedTexSubImage3D","_emscripten_glCopyBufferSubData","copyBufferSubData","_emscripten_glCopyTexImage2D","copyTexImage2D","_emscripten_glCopyTexSubImage2D","copyTexSubImage2D","_emscripten_glCopyTexSubImage3D","copyTexSubImage3D","_emscripten_glCreateProgram","createProgram","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","_emscripten_glCreateShader","shaderType","createShader","_emscripten_glCullFace","cullFace","_emscripten_glDeleteBuffers","deleteBuffer","_emscripten_glDeleteFramebuffers","deleteFramebuffer","_emscripten_glDeleteProgram","deleteProgram","_emscripten_glDeleteQueries","ids","deleteQuery","_emscripten_glDeleteQueriesEXT","_emscripten_glDeleteRenderbuffers","deleteRenderbuffer","_emscripten_glDeleteSamplers","deleteSampler","_emscripten_glDeleteShader","deleteShader","_emscripten_glDeleteSync","deleteSync","_emscripten_glDeleteTextures","deleteTexture","_emscripten_glDeleteTransformFeedbacks","transformFeedback","deleteTransformFeedback","_emscripten_glDeleteVertexArrays","_glDeleteVertexArraysOES","_emscripten_glDeleteVertexArraysOES","_emscripten_glDepthFunc","depthFunc","_emscripten_glDepthMask","depthMask","_emscripten_glDepthRangef","depthRange","_emscripten_glDetachShader","detachShader","_emscripten_glDisable","disable","_emscripten_glDisableVertexAttribArray","disableVertexAttribArray","_emscripten_glDrawArrays","drawArrays","_emscripten_glDrawArraysInstanced","_glDrawArraysInstancedANGLE","_emscripten_glDrawArraysInstancedANGLE","_glDrawArraysInstancedARB","_emscripten_glDrawArraysInstancedARB","_glDrawArraysInstancedEXT","_emscripten_glDrawArraysInstancedEXT","_glDrawArraysInstancedNV","_emscripten_glDrawArraysInstancedNV","_emscripten_glDrawBuffers","_glDrawBuffersEXT","_emscripten_glDrawBuffersEXT","_glDrawBuffersWEBGL","_emscripten_glDrawBuffersWEBGL","_emscripten_glDrawElements","_emscripten_glDrawElementsInstanced","_glDrawElementsInstancedANGLE","_emscripten_glDrawElementsInstancedANGLE","_glDrawElementsInstancedARB","_emscripten_glDrawElementsInstancedARB","_glDrawElementsInstancedEXT","_emscripten_glDrawElementsInstancedEXT","_glDrawElementsInstancedNV","_emscripten_glDrawElementsInstancedNV","_emscripten_glDrawRangeElements","_emscripten_glEnable","enable","_emscripten_glEnableVertexAttribArray","enableVertexAttribArray","_emscripten_glEndQuery","endQuery","_emscripten_glEndQueryEXT","_emscripten_glEndTransformFeedback","endTransformFeedback","_emscripten_glFenceSync","fenceSync","_emscripten_glFinish","_emscripten_glFlush","flush","_emscripten_glFramebufferRenderbuffer","attachment","renderbuffertarget","framebufferRenderbuffer","_emscripten_glFramebufferTexture2D","textarget","framebufferTexture2D","_emscripten_glFramebufferTextureLayer","layer","framebufferTextureLayer","_emscripten_glFrontFace","frontFace","_emscripten_glGenBuffers","_emscripten_glGenFramebuffers","_emscripten_glGenQueries","_emscripten_glGenQueriesEXT","_emscripten_glGenRenderbuffers","_emscripten_glGenSamplers","_emscripten_glGenTextures","_emscripten_glGenTransformFeedbacks","_emscripten_glGenVertexArrays","_emscripten_glGenVertexArraysOES","_emscripten_glGenerateMipmap","generateMipmap","_emscripten_glGetActiveAttrib","_emscripten_glGetActiveUniform","_emscripten_glGetActiveUniformBlockName","uniformBlockIndex","uniformBlockName","getActiveUniformBlockName","_emscripten_glGetActiveUniformBlockiv","getActiveUniformBlockParameter","_emscripten_glGetActiveUniformsiv","uniformCount","uniformIndices","getActiveUniforms","_emscripten_glGetAttachedShaders","maxCount","getAttachedShaders","_emscripten_glGetAttribLocation","getAttribLocation","_emscripten_glGetBooleanv","_emscripten_glGetBufferParameteri64v","getBufferParameter","_emscripten_glGetBufferParameteriv","_emscripten_glGetError","getError","_emscripten_glGetFloatv","_emscripten_glGetFragDataLocation","getFragDataLocation","_emscripten_glGetFramebufferAttachmentParameteriv","getFramebufferAttachmentParameter","WebGLRenderbuffer","WebGLTexture","_emscripten_glGetInteger64i_v","_emscripten_glGetInteger64v","_emscripten_glGetIntegeri_v","_emscripten_glGetIntegerv","_emscripten_glGetInternalformativ","internalformat","getInternalformatParameter","_emscripten_glGetProgramBinary","_emscripten_glGetProgramInfoLog","maxLength","infoLog","getProgramInfoLog","_emscripten_glGetProgramiv","getActiveAttrib","_emscripten_glGetQueryObjecti64vEXT","_emscripten_glGetQueryObjectivEXT","_emscripten_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectuiv","_emscripten_glGetQueryObjectuivEXT","_emscripten_glGetQueryiv","getQuery","_emscripten_glGetQueryivEXT","_emscripten_glGetRenderbufferParameteriv","getRenderbufferParameter","_emscripten_glGetSamplerParameterfv","getSamplerParameter","_emscripten_glGetSamplerParameteriv","_emscripten_glGetShaderInfoLog","getShaderInfoLog","_emscripten_glGetShaderPrecisionFormat","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","_emscripten_glGetShaderSource","getShaderSource","_emscripten_glGetShaderiv","getShaderParameter","_emscripten_glGetString","exts","glVersion","glslVersion","ver_num","match","_emscripten_glGetStringi","_emscripten_glGetSynciv","getSyncParameter","_emscripten_glGetTexParameterfv","getTexParameter","_emscripten_glGetTexParameteriv","_emscripten_glGetTransformFeedbackVarying","getTransformFeedbackVarying","_emscripten_glGetUniformBlockIndex","getUniformBlockIndex","_emscripten_glGetUniformIndices","uniformNames","names","getUniformIndices","_emscripten_glGetUniformLocation","arrayIndex","uniformBaseName","leftBrace","sizeAndId","_emscripten_glGetUniformfv","_emscripten_glGetUniformiv","_emscripten_glGetUniformuiv","_emscripten_glGetVertexAttribIiv","_emscripten_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribPointerv","pointer","getVertexAttribOffset","_emscripten_glGetVertexAttribfv","_emscripten_glGetVertexAttribiv","_emscripten_glHint","hint","_emscripten_glInvalidateFramebuffer","numAttachments","attachments","list","invalidateFramebuffer","_emscripten_glInvalidateSubFramebuffer","invalidateSubFramebuffer","_emscripten_glIsBuffer","isBuffer","_emscripten_glIsEnabled","isEnabled","_emscripten_glIsFramebuffer","fb","isFramebuffer","_emscripten_glIsProgram","isProgram","_emscripten_glIsQuery","isQuery","_emscripten_glIsQueryEXT","_emscripten_glIsRenderbuffer","rb","isRenderbuffer","_emscripten_glIsSampler","isSampler","_emscripten_glIsShader","isShader","_emscripten_glIsSync","isSync","_emscripten_glIsTexture","isTexture","_emscripten_glIsTransformFeedback","isTransformFeedback","_emscripten_glIsVertexArray","_emscripten_glIsVertexArrayOES","_emscripten_glLineWidth","lineWidth","_emscripten_glLinkProgram","linkProgram","_emscripten_glPauseTransformFeedback","pauseTransformFeedback","_emscripten_glPixelStorei","pixelStorei","_emscripten_glPolygonOffset","polygonOffset","_emscripten_glProgramBinary","_emscripten_glProgramParameteri","_emscripten_glQueryCounterEXT","_emscripten_glReadBuffer","readBuffer","_emscripten_glReadPixels","readPixels","pixelData","_emscripten_glReleaseShaderCompiler","_emscripten_glRenderbufferStorage","renderbufferStorage","_emscripten_glRenderbufferStorageMultisample","renderbufferStorageMultisample","_emscripten_glResumeTransformFeedback","resumeTransformFeedback","_emscripten_glSampleCoverage","invert","sampleCoverage","_emscripten_glSamplerParameterf","samplerParameterf","_emscripten_glSamplerParameterfv","_emscripten_glSamplerParameteri","samplerParameteri","_emscripten_glSamplerParameteriv","_emscripten_glScissor","scissor","_emscripten_glShaderBinary","_emscripten_glShaderSource","shaderSource","_emscripten_glStencilFunc","stencilFunc","_emscripten_glStencilFuncSeparate","stencilFuncSeparate","_emscripten_glStencilMask","stencilMask","_emscripten_glStencilMaskSeparate","stencilMaskSeparate","_emscripten_glStencilOp","stencilOp","_emscripten_glStencilOpSeparate","stencilOpSeparate","_emscripten_glTexImage2D","texImage2D","_emscripten_glTexImage3D","texImage3D","_emscripten_glTexParameterf","texParameterf","_emscripten_glTexParameterfv","_emscripten_glTexParameteri","texParameteri","_emscripten_glTexParameteriv","_emscripten_glTexStorage2D","texStorage2D","_emscripten_glTexStorage3D","texStorage3D","_emscripten_glTexSubImage2D","texSubImage2D","_emscripten_glTexSubImage3D","texSubImage3D","_emscripten_glTransformFeedbackVaryings","varyings","bufferMode","vars","transformFeedbackVaryings","_emscripten_glUniform1f","v0","uniform1f","miniTempWebGLFloatBuffers","_emscripten_glUniform1fv","uniform1fv","_emscripten_glUniform1i","uniform1i","miniTempWebGLIntBuffers","_emscripten_glUniform1iv","uniform1iv","_emscripten_glUniform1ui","uniform1ui","_emscripten_glUniform1uiv","uniform1uiv","_emscripten_glUniform2f","v1","uniform2f","_emscripten_glUniform2fv","uniform2fv","_emscripten_glUniform2i","uniform2i","_emscripten_glUniform2iv","uniform2iv","_emscripten_glUniform2ui","uniform2ui","_emscripten_glUniform2uiv","uniform2uiv","_emscripten_glUniform3f","v2","uniform3f","_emscripten_glUniform3fv","uniform3fv","_emscripten_glUniform3i","uniform3i","_emscripten_glUniform3iv","uniform3iv","_emscripten_glUniform3ui","uniform3ui","_emscripten_glUniform3uiv","uniform3uiv","_emscripten_glUniform4f","v3","uniform4f","_emscripten_glUniform4fv","uniform4fv","_emscripten_glUniform4i","uniform4i","_emscripten_glUniform4iv","uniform4iv","_emscripten_glUniform4ui","uniform4ui","_emscripten_glUniform4uiv","uniform4uiv","_emscripten_glUniformBlockBinding","uniformBlockBinding","_emscripten_glUniformMatrix2fv","transpose","uniformMatrix2fv","_emscripten_glUniformMatrix2x3fv","uniformMatrix2x3fv","_emscripten_glUniformMatrix2x4fv","uniformMatrix2x4fv","_emscripten_glUniformMatrix3fv","uniformMatrix3fv","_emscripten_glUniformMatrix3x2fv","uniformMatrix3x2fv","_emscripten_glUniformMatrix3x4fv","uniformMatrix3x4fv","_emscripten_glUniformMatrix4fv","uniformMatrix4fv","_emscripten_glUniformMatrix4x2fv","uniformMatrix4x2fv","_emscripten_glUniformMatrix4x3fv","uniformMatrix4x3fv","_emscripten_glUseProgram","useProgram","_emscripten_glValidateProgram","validateProgram","_emscripten_glVertexAttrib1f","vertexAttrib1f","_emscripten_glVertexAttrib1fv","_emscripten_glVertexAttrib2f","vertexAttrib2f","_emscripten_glVertexAttrib2fv","_emscripten_glVertexAttrib3f","vertexAttrib3f","_emscripten_glVertexAttrib3fv","_emscripten_glVertexAttrib4f","vertexAttrib4f","_emscripten_glVertexAttrib4fv","_emscripten_glVertexAttribDivisor","_emscripten_glVertexAttribDivisorANGLE","_emscripten_glVertexAttribDivisorARB","_emscripten_glVertexAttribDivisorEXT","_emscripten_glVertexAttribDivisorNV","_emscripten_glVertexAttribI4i","vertexAttribI4i","_emscripten_glVertexAttribI4iv","_emscripten_glVertexAttribI4ui","vertexAttribI4ui","_emscripten_glVertexAttribI4uiv","_emscripten_glVertexAttribIPointer","vertexAttribIPointer","_emscripten_glVertexAttribPointer","vertexAttribPointer","_emscripten_glViewport","_emscripten_glWaitSync","waitSync","isAsync","instrumentWasmImports","importPatterns","original","instrumentWasmExports","exportCallStack","maybeStopUnwind","State","Normal","Unwinding","Rewinding","Disabled","StackSize","currData","handleSleepReturnValue","callStackNameToId","callStackIdToName","callStackId","asyncPromiseHandlers","sleepCallbacks","getCallStackId","_asyncify_stop_unwind","Fibers","trampoline","whenDone","allocateData","setDataHeader","setDataRewindFunc","stackSize","rewindId","getDataRewindFunc","doRewind","startAsync","reachedCallback","reachedAfterCallback","_asyncify_start_rewind","asyncWasmReturnValue","isError","_asyncify_start_unwind","_asyncify_stop_rewind","_free","handleAsync","readMode","writeMode","createPreloadedFile","dontCreateFile","preFinish","processData","FS_handledByPreloadPlugin","noRunDep","dep","asyncLoad","miniTempWebGLFloatBuffersStorage","miniTempWebGLIntBuffersStorage","atob","wasmImports","___errno_location","length_low","length_high","isNaN","cwdLengthInBytes","dirp","struct_size","child","op","argp","nofollow","time","tmPtr","getSeconds","getMinutes","getHours","yday","getTimezoneOffset","summerOffset","winterOffset","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","timezone","daylight","tzname","extractZone","toTimeString","currentYear","winter","summer","stdTimezoneOffset","winterName","summerName","winterNamePtr","summerNamePtr","api","attrib_list","configs","hmm","contextAttribs","glesContextVersion","minorVersion","surface","draw","isContextLost","interval","argbuf","runEmAsmFunction","runMainThreadEmAsm","fullscreenStrategy","hiddenElements","onlyVisibleElement","displayState","hideEverythingExceptGivenElement","restoreHiddenElements","webkitExitFullscreen","gamepadState","lastGamepadState","dest","copyWithin","deferUntilInEventHandler","doRequestFullscreen","requestedSize","oldSize","maxHeapSize","alignUp","multiple","cutDown","overGrownHeapSize","getGamepads","webkitGetGamepads","targetThread","onbeforeunload","confirmationMessage","returnValue","registerBeforeUnloadEventCallback","dynCall_v","mozRequestPointerLock","webkitRequestPointerLock","msRequestPointerLock","uiEvent","outerWidth","outerHeight","registerUiEventCallback","onwheel","wheelEvent","registerWheelEventCallback","__environ","environ_buf","stringToAscii","penviron_count","penviron_buf_size","pbuf","rightsBase","rightsInheriting","iov","iovcnt","pnum","doReadv","offset_low","offset_high","newOffset","doWritev","receiveInstance","instantiateStreaming","createWasm","runCaller","ready","license","LicenseModal","onClose","class","onClick","overflowY","overflowX","fontFamily","whiteSpace","fontSize","defaultIWad","deathmatchIWad","indexDBName","WadHandler","_defineProperty","signal","trace","setWad","wadName","isIWAD","wadState","async","database","_database","upload","reader","FileReader","readAsArrayBuffer","iwad","trans","_database2","wad","_database3","dbrequest","singleton","projects","WadChooser","showLicense","setShowLicense","useState","pelements","flex","fontWeight","flexGrow","maxWidth","padding","flexDirection","justifyContent","alignItems","click","onChange","uploadWad","flexShrink","EdgeClassic","canvasRef","useRef","canvasContainerRef","loading","useEffect","syncCanvasSize","offsetWidth","offsetHeight","canvasSync","_I_WebSyncScreenSize","doSyncTimeout","find","_I_WebOpenGameMenu","_objectSpread","preEdgeSyncFS","postEdgeSyncFS","preInit","print","printErr","setStatus","monitorRunDependencies","globalThis","visibility","_canvasRef$current","Player","App"],"mappings":"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Q,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,sCAAuC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,qCAAsC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,wCAAyC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,sCAAuC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,sCAAuC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,oCAAqC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,oCAAqC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,uCAAwC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,qCAAsC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,qCAAsC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,qCAAsC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,sCAAuC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,sCAAuC,MAAS,OAAQ,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,4CAA6C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,QAAU,CAAC,SAAY,0DAA2D,MAAS,OAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,4CAA6C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,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AY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,M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AkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,M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","file":"bundle.f128a.esm.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Pq/i\");\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {import('./internal').Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function(p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","function cycleDetected(): never {\n\tthrow new Error(\"Cycle detected\");\n}\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\nfunction batch<T>(callback: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn callback();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\tpeek(): T;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\tconst signal = this;\n\treturn effect(function (this: Effect) {\n\t\tconst value = signal.value;\n\t\tconst flag = this._flags & TRACKING;\n\t\tthis._flags &= ~TRACKING;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tthis._flags |= flag;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.peek = function () {\n\treturn this._value;\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget() {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tcycleDetected();\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\nfunction signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_compute: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(compute: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, compute: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._compute = compute;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._compute();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when the it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nComputed.prototype.peek = function () {\n\tif (!this._refresh()) {\n\t\tcycleDetected();\n\t}\n\tif (this._flags & HAS_ERROR) {\n\t\tthrow this._value;\n\t}\n\treturn this._value;\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget() {\n\t\tif (this._flags & RUNNING) {\n\t\t\tcycleDetected();\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\ninterface ReadonlySignal<T = any> extends Signal<T> {\n\treadonly value: T;\n}\n\nfunction computed<T>(compute: () => T): ReadonlySignal<T> {\n\treturn new Computed(compute);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._compute = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ndeclare class Effect {\n\t_compute?: () => unknown;\n\t_cleanup?: unknown;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(compute: () => void);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, compute: () => void) {\n\tthis._compute = compute;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (!(this._flags & DISPOSED) && this._compute !== undefined) {\n\t\t\tthis._cleanup = this._compute();\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tcycleDetected();\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nfunction effect(compute: () => unknown): () => void {\n\tconst effect = new Effect(compute);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { signal, computed, effect, batch, Signal, ReadonlySignal };\n","import { options, Component } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport { signal, computed, batch, effect, Signal, type ReadonlySignal };\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction Text(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst s = useMemo(() => {\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Replace this component's vdom updater with a direct text one:\n\t\tthis._updater!._callback = () => {\n\t\t\t(this.base as Text).data = s.peek();\n\t\t};\n\n\t\treturn computed(() => {\n\t\t\tlet data = currentSignal.value;\n\t\t\tlet s = data.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\t}, []);\n\n\treturn s.value;\n}\nText.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: Text },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(() => {\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// let reason;\n\t// if (!hasSignals && !hasComputeds.has(this)) {\n\t// \treason = \"no signals or computeds\";\n\t// } else if (hasPendingUpdate.has(this)) {\n\t// \treason = \"has pending update\";\n\t// } else if (hasHookState.has(this)) {\n\t// \treason = \"has hook state\";\n\t// }\n\t// if (reason) {\n\t// \tif (!this) reason += \" (`this` bug)\";\n\t// \tconsole.log(\"not optimizing\", this?.constructor?.name, \": \", reason, {\n\t// \t\tdetails: {\n\t// \t\t\thasSignals,\n\t// \t\t\thasComputeds: hasComputeds.has(this),\n\t// \t\t\thasPendingUpdate: hasPendingUpdate.has(this),\n\t// \t\t\thasHookState: hasHookState.has(this),\n\t// \t\t\tdeps: Array.from(updater._deps),\n\t// \t\t\tupdater,\n\t// \t\t},\n\t// \t});\n\t// }\n\n\t// if this component used no signals or computeds, update:\n\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t// if there is a pending re-render triggered from Signals,\n\t// or if there is hook or class state, update:\n\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T) {\n\treturn useMemo(() => signal<T>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(() => callback.current());\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"loading__O14bA\"};","\r\nvar createEdgeModule = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  \r\n  return (\r\nfunction(createEdgeModule = {})  {\r\n\r\n// include: shell.js\r\n// The Module object: Our interface to the outside world. We import\r\n// and export values on it. There are various ways Module can be used:\r\n// 1. Not defined. We create it here\r\n// 2. A function parameter, function(Module) { ..generated code.. }\r\n// 3. pre-run appended it, var Module = {}; ..generated code..\r\n// 4. External script tag defines var Module.\r\n// We need to check if Module already exists (e.g. case 3 above).\r\n// Substitution will be replaced with actual code on later stage of the build,\r\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\r\n// Note that if you want to run closure, and also to use Module\r\n// after the generated code, you will need to define   var Module = {};\r\n// before the code. Then that object will be used in the code, and you\r\n// can continue to use Module afterwards as well.\r\nvar Module = typeof createEdgeModule != 'undefined' ? createEdgeModule : {};\r\n\r\n// Set up the promise that indicates the Module is initialized\r\nvar readyPromiseResolve, readyPromiseReject;\r\nModule['ready'] = new Promise((resolve, reject) => {\r\n  readyPromiseResolve = resolve;\r\n  readyPromiseReject = reject;\r\n});\r\n\r\n// --pre-jses are emitted after the Module integration code, so that they can\r\n// refer to Module (if they choose; they can also define Module)\r\n\r\n  var Module = typeof Module !== 'undefined' ? Module : {};\r\n\r\n  if (!Module.expectedDataFileDownloads) {\r\n    Module.expectedDataFileDownloads = 0;\r\n  }\r\n\r\n  Module.expectedDataFileDownloads++;\r\n  (function() {\r\n    // Do not attempt to redownload the virtual filesystem data when in a pthread or a Wasm Worker context.\r\n    if (Module['ENVIRONMENT_IS_PTHREAD'] || Module['$ww']) return;\r\n    var loadPackage = function(metadata) {\r\n\r\n      var PACKAGE_PATH = '';\r\n      if (typeof window === 'object') {\r\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');\r\n      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {\r\n        // web worker\r\n        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');\r\n      }\r\n      var PACKAGE_NAME = 'C:/Dev/EDGE-classic/web/site/edge-classic.data';\r\n      var REMOTE_PACKAGE_BASE = 'edge-classic.data';\r\n      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {\r\n        Module['locateFile'] = Module['locateFilePackage'];\r\n        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');\r\n      }\r\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\r\nvar REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\r\n\r\n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\r\n        \r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', packageName, true);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.onprogress = function(event) {\r\n          var url = packageName;\r\n          var size = packageSize;\r\n          if (event.total) size = event.total;\r\n          if (event.loaded) {\r\n            if (!xhr.addedTotal) {\r\n              xhr.addedTotal = true;\r\n              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};\r\n              Module.dataFileDownloads[url] = {\r\n                loaded: event.loaded,\r\n                total: size\r\n              };\r\n            } else {\r\n              Module.dataFileDownloads[url].loaded = event.loaded;\r\n            }\r\n            var total = 0;\r\n            var loaded = 0;\r\n            var num = 0;\r\n            for (var download in Module.dataFileDownloads) {\r\n            var data = Module.dataFileDownloads[download];\r\n              total += data.total;\r\n              loaded += data.loaded;\r\n              num++;\r\n            }\r\n            total = Math.ceil(total * Module.expectedDataFileDownloads/num);\r\n            if (Module['setStatus']) Module['setStatus'](`Downloading data... (${loaded}/${total})`);\r\n          } else if (!Module.dataFileDownloads) {\r\n            if (Module['setStatus']) Module['setStatus']('Downloading data...');\r\n          }\r\n        };\r\n        xhr.onerror = function(event) {\r\n          throw new Error(\"NetworkError for: \" + packageName);\r\n        }\r\n        xhr.onload = function(event) {\r\n          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n            var packageData = xhr.response;\r\n            callback(packageData);\r\n          } else {\r\n            throw new Error(xhr.statusText + \" : \" + xhr.responseURL);\r\n          }\r\n        };\r\n        xhr.send(null);\r\n      };\r\n\r\n      function handleError(error) {\r\n        console.error('package error:', error);\r\n      };\r\n\r\n    function runWithFS() {\r\n\r\n      function assert(check, msg) {\r\n        if (!check) throw msg + new Error().stack;\r\n      }\r\nModule['FS_createPath'](\"/\", \"edge_base\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"blasphemer\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"chex\", true, true);\r\nModule['FS_createPath'](\"/edge_base/chex\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/chex/graphics\", \"chex_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/chex\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom1\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom2\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"freedoom1\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1/graphics\", \"freedoom_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"freedoom2\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2/graphics\", \"freedoom_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"hacx\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"harmony\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"heretic\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"plutonia\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"rekkr\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"tnt\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/\", \"edge_defs\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"colormaps\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"crosshairs\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"edge1_font\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"overlays\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"sounds\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/sprites\", \"mbf_dog\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"ttf\", true, true);\r\nModule['FS_createPath'](\"/\", \"soundfont\", true, true);\r\n\r\n        var PACKAGE_UUID = metadata['package_uuid'];\r\n        var indexedDB;\r\n        if (typeof window === 'object') {\r\n          indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        } else if (typeof location !== 'undefined') {\r\n          // worker\r\n          indexedDB = self.indexedDB;\r\n        } else {\r\n          throw 'using IndexedDB to cache data can only be done on a web page or in a web worker';\r\n        }\r\n        var IDB_RO = \"readonly\";\r\n        var IDB_RW = \"readwrite\";\r\n        var DB_NAME = \"EM_PRELOAD_CACHE\";\r\n        var DB_VERSION = 1;\r\n        var METADATA_STORE_NAME = 'METADATA';\r\n        var PACKAGE_STORE_NAME = 'PACKAGES';\r\n        function openDatabase(callback, errback) {\r\n          try {\r\n            var openRequest = indexedDB.open(DB_NAME, DB_VERSION);\r\n          } catch (e) {\r\n            return errback(e);\r\n          }\r\n          openRequest.onupgradeneeded = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n\r\n            if (db.objectStoreNames.contains(PACKAGE_STORE_NAME)) {\r\n              db.deleteObjectStore(PACKAGE_STORE_NAME);\r\n            }\r\n            var packages = db.createObjectStore(PACKAGE_STORE_NAME);\r\n\r\n            if (db.objectStoreNames.contains(METADATA_STORE_NAME)) {\r\n              db.deleteObjectStore(METADATA_STORE_NAME);\r\n            }\r\n            var metadata = db.createObjectStore(METADATA_STORE_NAME);\r\n          };\r\n          openRequest.onsuccess = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n            callback(db);\r\n          };\r\n          openRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        };\r\n\r\n        // This is needed as chromium has a limit on per-entry files in IndexedDB\r\n        // https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177\r\n        // https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60\r\n        // We set the chunk size to 64MB to stay well-below the limit\r\n        var CHUNK_SIZE = 64 * 1024 * 1024;\r\n\r\n        function cacheRemotePackage(\r\n          db,\r\n          packageName,\r\n          packageData,\r\n          packageMeta,\r\n          callback,\r\n          errback\r\n        ) {\r\n          var transactionPackages = db.transaction([PACKAGE_STORE_NAME], IDB_RW);\r\n          var packages = transactionPackages.objectStore(PACKAGE_STORE_NAME);\r\n          var chunkSliceStart = 0;\r\n          var nextChunkSliceStart = 0;\r\n          var chunkCount = Math.ceil(packageData.byteLength / CHUNK_SIZE);\r\n          var finishedChunks = 0;\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            nextChunkSliceStart += CHUNK_SIZE;\r\n            var putPackageRequest = packages.put(\r\n              packageData.slice(chunkSliceStart, nextChunkSliceStart),\r\n              `package/${packageName}/${chunkId}`\r\n            );\r\n            chunkSliceStart = nextChunkSliceStart;\r\n            putPackageRequest.onsuccess = function(event) {\r\n              finishedChunks++;\r\n              if (finishedChunks == chunkCount) {\r\n                var transaction_metadata = db.transaction(\r\n                  [METADATA_STORE_NAME],\r\n                  IDB_RW\r\n                );\r\n                var metadata = transaction_metadata.objectStore(METADATA_STORE_NAME);\r\n                var putMetadataRequest = metadata.put(\r\n                  {\r\n                    'uuid': packageMeta.uuid,\r\n                    'chunkCount': chunkCount\r\n                  },\r\n                  `metadata/${packageName}`\r\n                );\r\n                putMetadataRequest.onsuccess = function(event) {\r\n                  callback(packageData);\r\n                };\r\n                putMetadataRequest.onerror = function(error) {\r\n                  errback(error);\r\n                };\r\n              }\r\n            };\r\n            putPackageRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n        /* Check if there's a cached package, and if so whether it's the latest available */\r\n        function checkCachedPackage(db, packageName, callback, errback) {\r\n          var transaction = db.transaction([METADATA_STORE_NAME], IDB_RO);\r\n          var metadata = transaction.objectStore(METADATA_STORE_NAME);\r\n          var getRequest = metadata.get(`metadata/${packageName}`);\r\n          getRequest.onsuccess = function(event) {\r\n            var result = event.target.result;\r\n            if (!result) {\r\n              return callback(false, null);\r\n            } else {\r\n              return callback(PACKAGE_UUID === result['uuid'], result);\r\n            }\r\n          };\r\n          getRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        }\r\n\r\n        function fetchCachedPackage(db, packageName, metadata, callback, errback) {\r\n          var transaction = db.transaction([PACKAGE_STORE_NAME], IDB_RO);\r\n          var packages = transaction.objectStore(PACKAGE_STORE_NAME);\r\n\r\n          var chunksDone = 0;\r\n          var totalSize = 0;\r\n          var chunkCount = metadata['chunkCount'];\r\n          var chunks = new Array(chunkCount);\r\n\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            var getRequest = packages.get(`package/${packageName}/${chunkId}`);\r\n            getRequest.onsuccess = function(event) {\r\n              // If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now\r\n              if (chunkCount == 1) {\r\n                callback(event.target.result);\r\n              } else {\r\n                chunksDone++;\r\n                totalSize += event.target.result.byteLength;\r\n                chunks.push(event.target.result);\r\n                if (chunksDone == chunkCount) {\r\n                  if (chunksDone == 1) {\r\n                    callback(event.target.result);\r\n                  } else {\r\n                    var tempTyped = new Uint8Array(totalSize);\r\n                    var byteOffset = 0;\r\n                    for (var chunkId in chunks) {\r\n                      var buffer = chunks[chunkId];\r\n                      tempTyped.set(new Uint8Array(buffer), byteOffset);\r\n                      byteOffset += buffer.byteLength;\r\n                      buffer = undefined;\r\n                    }\r\n                    chunks = undefined;\r\n                    callback(tempTyped.buffer);\r\n                    tempTyped = undefined;\r\n                  }\r\n                }\r\n              }\r\n            };\r\n            getRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n      function processPackageData(arrayBuffer) {\r\n        assert(arrayBuffer, 'Loading data file failed.');\r\n        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');\r\n        var byteArray = new Uint8Array(arrayBuffer);\r\n        var curr;\r\n        var compressedData = {\"data\":null,\"cachedOffset\":51947434,\"cachedIndexes\":[-1,-1],\"cachedChunks\":[null,null],\"offsets\":[0,2048,4096,6153,8201,10249,12297,14345,16393,18441,20489,22537,24585,26633,28681,30729,32777,34825,36873,38921,40969,43017,44466,45771,47201,48265,49199,50021,50834,51687,52729,53827,54595,55519,56490,57322,58291,59165,60072,60814,61702,62669,63456,64255,65131,65960,66892,68129,69004,70001,70982,72132,73260,74246,75385,76453,77255,78031,79475,80696,81960,83232,84206,84804,85431,86010,86566,87085,88155,89193,90243,90889,91469,92012,92840,93358,94064,94933,95873,96736,97333,98041,98764,99379,100502,101359,102374,103514,104253,104927,105514,106047,106605,107216,107924,108589,109515,110228,110972,111674,112563,113808,114517,115408,116399,117403,118425,118972,120015,120663,121629,122317,123182,124157,125090,125965,126513,126906,127600,128455,129463,129812,130414,131358,132003,132691,133232,133839,134492,135382,136285,137032,137687,138370,138938,140556,142604,143662,144625,145827,147085,148209,149003,150302,151497,152540,153448,154642,155933,157243,158823,160422,161805,163823,164280,164325,164368,164452,164538,164597,164667,164839,165155,165538,166030,166650,167262,167901,168626,169356,170207,171574,173012,174509,175918,177471,179151,180657,182262,183907,185533,187253,188918,190634,192396,194074,195683,197353,199027,200661,202121,203642,205049,206254,207152,207899,208593,209197,209801,210338,210911,211482,211981,212360,212690,212914,212986,213069,213114,213158,213203,214569,215532,215581,215626,215671,215716,215764,215813,215858,215903,215948,215996,216161,216568,217945,219259,220659,222090,223516,224882,225969,227080,228071,228798,229444,230364,231185,232021,232839,233715,234683,235629,236459,237250,237989,238773,239748,240575,241380,242161,243000,243749,244435,245090,245698,245980,246062,246111,246156,246200,246245,246293,246342,246387,246431,246476,246524,246573,247433,249362,250800,252204,253570,254871,256187,257518,258834,260106,261446,262807,264103,265264,266552,267826,268936,269944,270871,271825,272808,273671,274385,275324,276451,277580,278821,280184,281734,283391,284998,286603,288264,289720,291184,292471,293587,294742,296063,297484,298943,300412,301586,302549,303565,304691,305877,307145,308339,309641,310820,312066,313333,314634,316004,317298,318645,319949,321444,323410,323458,323507,323552,323591,323636,323729,324129,324915,325805,326876,328195,329836,331535,333322,335104,336817,338558,340298,342066,343855,345703,347505,349285,350931,352264,353725,354919,356549,358340,360159,362033,363960,365866,367791,369731,371535,373406,375244,377090,378853,380633,382321,384078,385917,387751,389185,390637,391941,392925,393289,393337,393384,393429,393473,393518,393566,393613,394603,395576,396960,398126,399396,400020,400860,402004,402903,403796,404842,406555,408259,409704,411182,412658,414168,415696,417208,418715,420241,421733,423325,425089,426917,428856,430833,432842,434839,436844,438865,440878,442861,444784,446586,448390,450245,452180,454055,456029,458054,459995,461838,463667,465481,467208,468945,470684,472500,474332,476225,478173,480136,482138,484140,486148,488025,489689,491223,492709,494209,495732,497236,498749,500242,501724,503167,504597,506032,507771,509608,510874,512179,513466,514756,516013,517299,518679,519969,521210,522514,523759,524985,526364,527755,529214,530604,532031,533453,534876,536376,537914,539397,540913,542431,543987,545635,547284,548843,550466,552026,553619,555148,556656,558167,559848,561564,563108,564834,566457,567844,569221,570600,571902,573162,574424,575696,576956,578127,579299,580524,581694,582869,584092,585329,586674,587922,589387,591341,592405,593527,594683,595785,596757,597719,598791,599897,601021,602218,603298,604564,605745,607108,608525,610033,611578,613200,614748,616304,617909,619404,620804,622348,623948,625468,627033,628540,629908,631376,632625,633957,635354,636590,637903,639366,640838,642381,643874,645366,646802,648075,649298,650344,651380,652425,653501,654656,655834,656890,657738,658754,659813,660712,661657,662659,663729,665774,667304,668871,670453,672059,673657,675274,676954,678543,680144,681790,683469,685122,686541,688060,689672,691232,692836,694581,696206,697733,699362,700880,702359,703819,705349,706979,708466,709972,711485,713072,714608,716161,717689,719300,720867,722513,724184,725878,727483,729027,730601,732280,733840,735356,736643,737895,739467,740982,742493,743888,745467,747096,748785,750520,752108,753608,755182,757153,758571,759510,760595,761568,762715,763834,764874,766037,767055,768124,769247,770349,771524,772638,773753,774830,775960,777122,778357,779599,780831,782082,783408,784715,785912,787065,788103,789150,790190,791222,792220,793241,794267,795191,796176,797110,798029,799022,800051,801134,802132,803121,804155,805163,806110,807131,808055,809097,810158,811273,812402,813472,814575,815674,816701,817651,818493,819988,821812,823070,824370,825650,826930,828201,829484,830851,832149,833389,834695,835936,837100,838388,839704,841081,842411,843737,845063,846429,847895,849530,851149,852754,854158,855459,856860,858428,859978,861720,863416,865042,866506,867765,869124,870526,872008,873471,874993,876471,877848,879223,880592,881894,883141,884393,885685,886935,888096,889289,890502,891688,892869,894095,895323,896651,897895,899376,901383,902926,904521,906112,907715,909312,910852,912403,914020,915574,917150,918775,920496,922229,924043,925867,927625,929121,930823,932452,934220,936097,937919,939680,941582,943423,945223,947137,948975,950707,952517,954203,955927,957697,959364,961017,962784,964436,966306,968141,969903,971268,972624,974027,975284,976652,978179,979666,981130,982652,984191,985719,987270,988861,990337,991760,993245,994745,996793,997699,998530,999302,1000195,1001129,1001897,1002586,1003511,1004330,1005208,1006018,1006830,1007791,1008957,1010254,1011496,1012791,1014051,1015418,1016881,1018405,1019949,1021498,1023170,1024748,1026410,1027983,1029602,1031231,1032857,1034457,1035924,1037408,1038877,1040397,1041956,1043483,1044948,1046420,1047872,1049241,1050570,1051777,1052943,1054180,1055351,1056470,1057502,1058488,1059531,1060579,1061513,1062476,1063503,1064522,1065433,1066201,1067927,1069779,1071620,1073507,1075381,1077231,1079029,1080870,1082731,1084540,1086273,1087888,1089416,1090812,1092606,1094569,1096467,1098275,1100170,1102015,1103885,1105797,1107730,1109565,1111278,1112925,1114508,1115938,1117637,1119662,1121402,1123229,1125133,1127043,1128912,1130675,1132426,1133947,1135403,1136907,1138481,1140097,1141759,1143680,1145340,1147356,1149219,1150979,1152992,1154721,1156599,1158624,1160122,1161429,1163069,1164604,1166069,1167887,1169651,1170999,1172537,1174147,1175661,1177146,1179152,1180611,1182011,1183692,1185243,1186784,1188599,1190516,1192191,1193887,1195601,1197376,1199119,1200874,1202623,1204412,1206239,1208066,1209915,1211781,1213528,1215296,1217077,1218879,1220715,1222542,1224356,1226231,1228067,1229847,1231619,1233378,1235141,1236916,1238646,1240403,1242216,1243955,1245717,1247474,1249310,1251089,1252869,1254623,1256374,1258097,1259800,1261533,1263292,1265030,1266751,1268393,1270143,1271988,1273889,1275723,1277566,1279359,1281218,1283121,1284990,1286768,1288475,1290114,1291837,1293885,1295824,1297740,1299645,1301600,1303505,1305390,1307301,1309214,1311097,1312961,1314879,1316790,1318588,1320399,1322148,1323911,1325658,1327492,1329282,1331087,1332876,1334709,1336539,1338360,1340176,1341938,1343682,1345372,1346966,1348525,1350196,1351939,1353746,1355508,1357249,1358978,1360672,1362402,1364107,1365838,1367600,1369368,1371173,1372918,1374696,1376614,1378496,1380450,1382301,1384065,1385912,1387831,1389750,1391663,1393555,1395466,1397322,1399370,1401342,1403296,1405281,1407301,1409291,1411297,1413285,1415252,1417190,1419084,1421067,1423076,1425063,1427017,1428911,1430830,1432818,1434791,1436764,1438742,1440745,1442768,1444717,1446641,1448554,1450451,1452374,1454217,1455945,1457700,1459501,1461418,1463351,1465290,1467245,1469210,1471192,1473187,1475121,1477034,1479046,1480987,1482793,1484640,1486511,1488359,1490202,1492019,1493834,1495640,1497500,1499333,1501053,1502729,1504317,1505840,1507279,1508021,1510001,1512049,1514097,1516145,1518193,1520241,1522289,1524337,1526385,1528433,1530481,1532529,1534577,1536625,1538673,1540721,1542769,1544817,1546865,1548913,1550961,1553009,1555057,1557105,1559153,1561201,1563249,1565297,1567345,1569393,1571441,1573489,1575537,1577585,1579633,1581681,1583729,1585777,1587825,1589873,1591921,1593969,1596017,1598065,1600113,1602161,1604209,1606257,1608305,1610353,1612401,1614449,1616497,1618545,1620602,1622650,1624698,1626746,1628794,1630842,1632890,1634938,1636986,1639034,1641082,1643130,1645178,1647226,1649274,1651322,1653370,1655418,1657466,1659514,1661562,1663610,1665658,1667706,1669754,1671802,1673850,1675898,1677946,1679994,1682042,1684090,1686138,1688186,1690234,1692282,1694330,1696378,1698426,1700474,1702522,1704570,1706618,1708666,1710714,1712762,1714810,1716858,1718906,1720954,1723002,1725050,1727098,1729146,1731194,1733251,1735299,1737347,1739395,1741443,1743491,1745539,1747587,1749635,1751683,1753731,1755779,1757827,1759875,1761923,1763971,1766019,1768067,1770115,1772163,1774211,1776259,1778307,1780355,1782403,1784451,1786499,1788547,1790595,1792643,1794691,1796739,1798787,1800835,1802883,1804931,1806979,1809027,1811075,1813123,1815171,1817219,1819267,1821315,1823363,1825411,1827459,1829507,1831555,1833603,1835651,1837699,1839747,1841795,1843843,1845891,1847939,1849987,1852035,1854083,1856131,1858179,1860227,1862275,1864323,1866371,1868419,1870467,1872515,1874563,1876611,1878659,1880707,1882755,1884803,1886851,1888899,1890947,1892995,1895043,1897091,1899139,1901187,1903235,1905283,1907331,1909379,1911427,1913475,1915523,1917571,1919619,1921667,1923715,1925763,1927811,1929859,1931907,1933955,1936003,1938051,1940099,1942147,1944195,1946243,1948291,1950339,1952387,1954435,1956483,1958531,1960579,1962627,1964675,1966723,1968771,1970819,1972867,1974915,1976963,1979011,1981059,1983107,1985155,1987203,1989251,1991299,1993347,1995395,1997443,1999491,2001539,2003587,2005635,2007683,2009731,2011779,2013827,2015875,2017923,2019971,2022019,2024067,2026115,2028163,2030211,2032268,2033783,2035232,2036597,2038135,2039633,2041209,2042646,2044069,2045379,2046578,2047921,2049437,2050833,2052016,2053322,2054765,2056319,2057713,2059201,2060622,2062002,2063345,2064843,2066325,2067758,2069245,2070722,2072220,2073699,2075195,2076738,2078244,2079821,2081295,2082885,2084404,2085968,2087469,2088966,2090404,2091974,2093547,2094979,2096406,2097762,2099392,2101063,2102713,2104347,2105920,2107445,2109048,2110730,2112326,2113860,2115485,2117014,2118953,2120389,2121468,2122606,2123715,2124783,2125770,2126835,2127932,2129022,2130156,2131262,2132419,2133618,2134950,2136307,2137795,2139314,2140908,2142477,2144010,2145650,2147217,2148626,2150040,2151633,2153214,2154715,2156264,2157650,2159089,2160448,2161761,2163059,2164431,2165684,2167107,2168565,2170095,2171614,2173113,2174604,2175941,2177164,2178326,2179311,2180356,2181391,2182578,2183741,2184885,2185860,2186761,2187816,2188761,2189658,2190613,2191669,2193249,2194940,2195994,2197086,2198244,2199361,2200315,2201316,2202373,2203473,2204621,2205823,2207083,2208369,2209557,2211081,2212614,2214106,2215628,2217118,2218572,2220196,2221791,2223273,2224749,2226331,2227966,2229347,2230894,2232377,2233958,2235604,2237291,2239133,2241029,2242889,2244461,2246250,2248045,2249795,2251261,2252956,2254240,2255653,2256962,2257887,2258998,2260131,2261227,2262370,2263571,2264625,2265502,2266534,2267552,2268458,2269375,2270338,2271676,2273680,2275169,2276690,2278237,2279778,2281320,2282793,2284275,2285823,2287301,2288792,2290365,2292020,2293740,2295517,2297315,2299027,2300514,2302209,2303815,2305544,2307429,2309204,2310889,2312778,2314521,2316265,2318187,2319905,2321516,2323371,2325047,2326736,2328510,2330035,2331596,2333310,2334923,2336775,2338572,2340307,2341649,2343009,2344382,2345624,2346973,2348425,2349906,2351354,2352795,2354258,2355714,2357203,2358720,2360123,2361483,2362917,2364375,2366423,2368126,2369780,2371449,2373182,2374969,2376715,2378444,2380229,2382004,2383837,2385649,2387542,2389316,2391068,2392866,2394654,2396470,2398288,2400110,2401881,2403761,2405558,2407322,2409099,2410865,2412606,2414373,2416049,2417826,2419623,2421360,2423111,2424899,2426719,2428484,2430246,2431998,2433706,2435438,2437144,2438880,2440606,2442329,2444033,2445659,2447507,2449367,2451259,2453090,2454917,2456753,2458630,2460507,2462354,2464138,2465833,2467397,2468240,2470103,2472151,2474199,2476247,2478295,2480343,2482391,2484439,2486487,2488535,2490583,2492631,2494679,2496727,2498775,2500823,2502871,2504919,2506967,2509015,2511063,2513111,2515159,2517207,2519255,2521303,2523351,2525399,2527447,2529495,2531543,2533591,2535639,2537687,2539735,2541783,2543831,2545879,2547927,2549975,2552023,2554071,2556119,2558167,2560215,2562263,2564311,2566359,2568407,2570455,2572503,2574551,2576599,2578647,2580695,2582743,2584791,2586839,2588887,2590935,2592983,2595031,2597079,2599127,2601175,2603223,2604777,2606020,2607372,2608771,2610225,2611773,2613321,2614749,2616210,2617684,2619172,2620591,2622039,2623489,2624842,2626157,2626806,2627712,2628871,2630336,2631910,2633626,2635468,2637300,2639179,2641040,2642858,2644582,2646232,2647974,2649726,2651579,2653452,2655304,2657113,2658926,2660737,2662546,2664129,2665409,2666441,2667544,2668803,2670089,2671215,2672639,2673888,2674996,2676267,2677581,2678991,2680454,2681914,2683399,2684784,2686189,2687573,2689342,2691149,2692575,2694017,2695505,2697062,2698516,2700018,2701548,2702960,2704424,2705973,2707597,2709031,2710516,2712171,2713850,2715482,2717234,2719032,2720676,2722404,2724047,2725625,2727175,2728670,2730250,2731890,2733468,2735073,2736678,2738318,2739900,2741425,2742986,2744613,2746247,2747853,2749486,2751072,2752617,2754184,2755794,2757429,2759027,2760483,2761639,2763043,2764544,2766024,2767395,2768822,2770299,2771879,2773478,2775074,2776497,2777927,2779571,2781545,2782914,2784303,2785707,2787160,2788509,2789924,2791393,2792808,2794239,2795631,2797166,2798521,2799698,2801233,2802763,2804301,2805895,2807565,2809170,2810748,2812336,2813807,2815291,2816788,2818339,2819887,2821366,2822811,2824337,2825909,2827413,2828888,2830388,2831986,2833533,2835094,2836665,2838264,2839830,2841348,2842898,2844399,2845782,2847094,2848087,2849120,2850461,2851870,2853150,2854427,2855893,2857384,2858908,2860460,2861814,2863104,2864523,2866579,2868218,2869873,2871521,2873266,2875023,2876729,2878492,2880181,2881872,2883608,2885408,2887154,2888596,2890172,2891850,2893491,2895159,2896967,2898669,2900273,2901962,2903552,2905085,2906610,2908212,2909913,2911464,2913009,2914559,2916203,2917843,2919479,2921100,2922795,2924458,2926198,2927925,2929713,2931396,2933027,2934649,2936361,2937938,2939489,2940791,2942181,2943884,2945570,2947196,2948759,2950464,2952204,2954007,2955851,2957547,2959149,2960815,2962812,2963876,2964443,2965061,2965677,2966354,2967099,2967850,2968804,2969792,2970894,2971804,2972820,2974301,2975765,2977378,2979008,2980205,2981669,2983169,2984876,2986594,2988322,2989907,2991569,2993206,2994960,2996585,2998294,2999741,3001476,3003142,3004913,3006637,3008385,3010046,3011660,3013348,3015111,3016865,3018569,3020191,3021589,3023010,3024272,3025460,3026742,3028198,3029462,3030649,3031959,3033252,3034674,3036249,3037795,3039292,3040833,3042437,3043626,3045399,3047447,3049495,3051543,3053591,3055639,3057687,3059735,3061783,3063831,3065879,3067927,3069975,3072023,3074071,3076119,3078167,3080215,3082263,3084320,3086368,3088416,3090464,3092512,3094560,3096608,3098656,3100704,3102752,3104800,3106848,3108896,3110944,3112992,3115040,3117088,3119136,3121184,3123232,3125280,3127328,3129376,3131424,3133472,3135520,3137568,3139616,3141664,3143712,3145760,3147808,3149856,3151904,3153952,3156000,3158048,3160096,3162144,3164192,3166240,3168288,3170336,3172384,3174432,3176480,3178528,3180576,3182624,3184672,3186720,3188768,3190816,3192864,3194912,3196960,3199008,3201056,3203104,3205152,3207200,3209248,3211296,3213344,3215392,3217440,3219488,3221536,3223584,3225632,3227680,3229728,3231776,3233824,3235872,3237920,3239968,3242016,3244064,3246112,3248160,3250208,3252256,3254304,3256352,3258400,3260448,3262496,3264544,3266592,3268640,3270688,3272736,3274784,3276832,3278880,3280928,3282976,3285024,3287072,3289120,3291168,3293216,3295264,3297312,3299360,3301408,3303456,3305504,3307552,3309600,3311648,3313696,3315744,3317792,3319840,3321888,3323936,3325984,3328032,3330080,3332128,3334176,3336224,3338272,3340320,3342368,3344416,3346464,3348512,3350560,3352608,3354656,3356704,3358752,3360800,3362848,3364896,3366944,3368992,3371040,3373088,3375136,3377184,3379232,3381280,3383328,3385376,3387424,3389472,3391520,3393568,3395616,3397664,3399712,3401760,3403808,3405856,3407904,3409952,3412000,3414048,3416096,3418144,3420192,3422249,3424295,3426314,3428334,3430383,3432440,3434495,3436543,3438596,3440653,3442701,3444749,3446797,3448845,3450893,3452941,3454989,3457037,3459085,3461133,3463181,3465229,3467277,3469325,3471373,3473421,3475469,3477521,3479569,3481617,3483665,3485713,3487761,3489809,3491857,3493905,3495953,3498001,3500049,3502097,3504145,3506193,3508241,3510289,3512337,3514385,3516433,3518481,3520538,3522581,3524590,3526638,3528688,3530745,3532793,3534849,3536898,3538946,3540994,3543042,3545090,3547138,3549186,3551234,3553282,3555330,3557378,3559426,3561474,3563522,3565570,3567618,3569666,3571714,3573762,3575814,3577862,3579910,3581958,3584006,3586054,3588102,3590150,3592198,3594246,3596294,3598342,3600390,3602447,3604495,3606543,3608591,3610639,3612687,3614735,3616783,3618840,3620881,3622889,3624923,3626971,3629027,3631084,3633132,3635180,3637228,3639276,3641324,3643372,3645420,3647468,3649516,3651564,3653612,3655660,3657708,3659756,3661804,3663852,3665900,3667948,3669996,3672044,3674101,3676149,3678197,3680245,3682293,3684341,3686389,3688437,3690485,3692533,3694581,3696629,3698677,3700725,3702773,3704821,3706869,3708917,3710965,3713013,3715061,3717109,3719157,3721205,3723253,3725301,3727349,3729397,3731445,3733493,3735541,3737589,3739637,3741685,3743733,3745781,3747829,3749877,3751925,3753973,3756021,3758069,3760117,3762165,3764213,3766261,3768309,3770357,3772405,3774453,3776501,3778549,3780597,3782645,3784693,3786741,3788789,3790837,3792885,3794933,3796981,3799029,3801077,3803125,3805173,3807221,3809269,3811317,3813365,3815413,3817461,3819509,3821557,3823605,3825653,3827701,3829749,3831797,3833845,3835893,3837941,3839989,3842037,3844085,3846133,3848181,3850229,3852277,3854325,3856373,3858421,3860469,3862517,3864565,3866613,3868661,3870709,3872757,3874805,3876853,3878901,3880949,3882997,3885045,3887093,3889141,3891189,3893237,3895285,3897333,3899381,3901429,3903476,3905482,3907504,3909552,3911608,3913656,3915704,3917754,3919811,3921859,3923907,3925955,3928003,3930051,3932099,3934147,3936195,3938243,3940291,3942339,3944387,3946435,3948483,3950531,3952579,3954465,3955720,3957120,3958427,3959526,3960503,3961521,3962664,3963782,3964822,3966063,3967141,3968353,3969450,3970579,3971781,3972753,3973915,3975085,3976320,3977502,3978686,3979907,3980798,3981608,3982500,3983486,3984417,3985293,3986071,3987034,3987870,3988723,3989327,3989669,3990008,3990345,3991657,3992945,3994434,3995861,3997318,3998765,3999526,4000630,4001686,4002582,4003482,4004311,4005728,4007032,4008524,4009829,4010935,4011968,4013033,4014201,4015272,4016497,4017596,4018725,4019926,4021007,4022243,4023309,4024397,4025500,4026678,4027852,4029049,4030169,4031388,4032359,4033283,4034230,4035228,4036164,4036866,4037812,4038589,4039457,4040424,4040928,4041265,4041618,4042195,4043341,4044643,4046098,4047489,4048896,4050118,4051136,4052308,4053171,4054074,4054935,4055984,4058006,4058053,4058098,4058144,4058206,4058311,4058435,4058592,4058788,4058961,4059202,4059432,4059675,4060145,4061028,4062033,4063051,4064107,4065467,4067049,4068628,4070297,4071936,4073641,4075391,4077153,4078815,4080374,4081932,4083502,4085207,4086854,4088594,4090383,4092090,4093728,4095373,4096964,4098576,4100202,4101469,4102433,4103434,4104289,4104902,4105234,4105448,4105588,4105706,4105813,4105988,4106134,4106197,4106262,4106310,4106359,4106404,4106449,4108284,4108870,4109035,4109220,4109441,4109662,4109953,4110383,4110746,4111149,4111575,4111878,4112201,4112795,4113622,4114587,4115495,4116594,4117750,4119289,4120998,4122754,4124567,4126328,4128201,4130023,4131822,4133473,4135145,4136863,4138687,4140545,4142404,4144295,4146134,4147878,4149771,4151647,4153516,4155374,4157027,4157999,4158937,4159848,4160647,4161207,4161647,4161966,4162324,4162678,4163065,4163478,4163715,4163884,4164031,4164271,4164474,4164609,4165977,4167646,4168905,4170271,4171510,4172780,4174155,4175554,4176905,4178293,4179606,4181044,4182549,4183997,4185371,4186825,4188272,4189713,4191205,4192613,4194181,4195563,4196922,4198299,4199697,4201060,4202201,4203380,4204722,4206047,4207388,4208789,4210172,4211398,4212717,4214165,4215512,4216809,4218155,4219623,4221141,4222544,4224088,4225448,4226830,4228231,4229652,4231104,4232617,4233995,4235309,4236711,4238014,4239412,4240800,4242115,4243310,4244483,4245921,4246708,4247746,4248694,4250742,4250862,4250911,4250956,4251027,4252009,4252928,4253967,4255179,4256563,4258140,4259404,4261150,4262989,4264766,4266388,4268095,4269671,4270427,4271785,4273389,4275153,4276956,4278724,4280516,4282337,4284116,4285804,4287419,4289089,4290801,4292723,4294540,4296442,4298279,4300096,4301917,4303809,4305665,4307526,4309438,4311114,4312697,4314254,4315857,4317575,4318938,4320190,4321556,4322713,4323943,4325025,4325895,4326826,4327069,4327114,4327162,4327209,4327989,4328934,4329857,4330709,4331537,4332719,4334023,4335353,4336688,4337454,4338511,4339326,4340084,4340775,4341500,4342192,4342904,4343673,4344601,4345481,4346389,4347342,4348206,4349168,4350047,4350887,4351485,4352423,4353405,4354314,4355199,4356157,4356676,4357425,4358197,4358948,4359687,4360447,4361360,4362160,4363133,4363738,4364454,4365294,4366120,4366904,4367770,4368607,4369548,4370453,4371315,4372125,4372955,4373786,4374636,4375694,4376518,4377365,4379151,4380603,4382114,4383558,4385243,4386833,4388346,4389975,4391521,4393047,4394544,4396219,4397827,4399340,4400945,4402486,4403802,4405317,4406955,4408575,4410127,4411659,4413107,4414607,4416363,4418133,4419615,4421030,4422259,4423419,4424689,4426072,4427317,4428355,4429496,4430698,4431801,4432984,4434199,4435517,4436740,4437723,4438522,4439326,4440631,4442193,4443719,4445134,4446607,4447934,4449240,4450607,4451779,4453076,4454451,4455758,4456917,4457920,4458881,4459694,4460347,4461787,4463468,4465027,4466435,4467929,4469275,4470590,4471963,4473111,4474374,4475713,4476999,4478141,4478930,4479756,4480385,4481504,4483331,4484837,4486258,4487722,4489140,4490429,4491807,4493062,4494248,4495601,4496945,4498244,4499379,4500347,4501302,4502066,4502731,4504255,4505913,4507350,4508778,4510220,4511683,4513220,4514741,4516008,4517120,4517980,4518742,4519537,4520432,4521308,4522282,4524151,4525665,4527098,4528552,4529951,4531205,4532578,4533772,4534962,4536312,4537656,4538930,4540072,4540995,4541910,4542573,4543459,4545340,4546874,4548307,4549709,4550777,4552078,4553561,4554992,4556120,4556999,4558095,4559614,4561369,4562953,4564505,4565800,4566963,4568317,4569807,4571109,4572251,4573423,4574694,4575918,4577207,4578072,4579667,4581217,4583054,4584846,4586660,4588371,4589707,4591276,4593155,4595047,4596744,4598550,4600565,4602259,4603346,4604705,4606013,4607352,4608732,4610502,4612258,4613445,4614864,4616197,4617533,4618893,4620682,4621825,4622642,4623513,4625111,4626557,4627488,4628424,4629550,4631386,4632580,4634096,4635823,4637349,4638947,4640706,4642476,4644027,4645301,4646923,4648603,4650113,4651822,4653707,4655643,4656929,4658309,4659999,4661585,4663157,4664998,4666894,4668745,4669974,4671479,4673216,4674823,4676455,4678330,4680252,4682033,4683230,4684765,4686537,4688139,4689672,4691532,4693408,4695223,4696527,4698060,4699783,4701337,4702897,4704696,4706486,4708328,4709581,4711090,4712822,4714332,4715934,4717693,4719523,4720995,4722281,4723913,4725587,4727092,4728800,4730576,4732423,4733661,4735145,4736855,4738407,4739990,4741756,4743495,4745233,4746436,4748006,4749724,4751229,4752923,4754767,4756566,4758082,4759755,4761375,4762917,4764441,4766020,4767591,4769251,4770765,4772301,4773899,4775486,4776940,4778601,4780202,4781713,4783183,4784639,4786061,4787630,4789087,4790461,4791596,4792662,4793953,4795320,4796528,4797723,4799168,4800773,4802216,4803509,4804772,4806181,4807637,4808916,4810163,4811490,4812694,4814225,4815407,4815456,4815501,4815546,4815591,4815639,4815843,4816339,4817105,4817888,4818749,4819735,4820684,4821700,4822708,4823692,4824889,4826054,4827391,4828686,4829859,4831177,4832429,4833630,4834822,4835845,4836957,4838122,4839147,4840325,4841448,4842439,4843359,4844255,4844926,4845576,4846355,4846910,4847068,4847113,4847161,4847210,4847255,4847299,4849100,4849768,4850489,4851380,4852564,4853942,4855084,4855994,4857092,4858040,4859012,4859708,4860538,4861344,4862382,4863320,4864524,4865694,4866847,4868080,4869353,4870517,4871767,4873154,4874484,4875860,4877194,4878530,4879859,4880933,4881824,4882548,4883051,4883572,4884192,4885015,4885925,4886708,4887567,4888492,4889542,4890466,4891399,4892436,4893619,4894693,4895702,4896754,4897898,4899277,4899994,4901381,4902022,4903022,4904230,4905285,4906290,4907200,4908213,4909919,4911193,4912401,4913761,4915091,4916634,4918049,4919588,4921242,4923028,4924822,4926659,4928483,4930187,4931943,4933649,4935233,4937001,4938722,4940378,4941990,4943621,4945272,4946794,4948355,4950003,4951707,4953222,4954802,4956336,4957960,4959479,4960839,4961946,4963044,4964615,4966159,4967755,4969337,4970872,4972267,4973603,4975059,4976665,4978252,4978953,4979824,4980905,4981989,4983229,4984561,4985979,4987286,4988624,4990144,4991555,4992676,4993428,4994400,4995665,4997019,4998392,4999616,5000873,5002065,5003246,5004398,5005579,5006815,5008087,5009318,5010630,5011992,5013194,5014499,5015870,5017192,5018514,5019772,5021043,5022261,5023423,5024394,5025438,5026646,5027820,5029104,5030250,5031487,5032459,5033663,5034630,5035727,5037025,5038851,5040281,5041188,5041880,5043448,5044689,5045516,5046306,5047268,5048319,5049376,5050331,5051404,5052483,5053740,5055126,5056792,5058449,5060104,5061664,5063076,5064451,5065873,5067446,5069125,5070782,5072471,5074099,5075695,5077282,5078803,5080292,5081741,5083512,5085358,5087229,5089062,5090852,5092619,5094282,5095684,5097057,5098439,5099778,5101074,5102277,5103115,5103709,5105086,5106048,5107288,5108217,5109228,5110245,5111085,5112331,5113418,5114327,5115182,5116272,5117131,5118318,5119589,5120997,5121632,5122219,5122815,5123558,5124217,5124866,5125509,5126464,5127619,5128821,5129657,5130652,5131462,5132272,5133088,5133923,5134734,5135688,5136573,5137470,5138410,5139297,5140095,5141054,5141859,5142837,5143849,5144826,5145727,5146710,5147302,5148054,5148693,5149380,5150098,5150893,5151776,5152642,5153467,5154338,5155103,5155935,5156742,5157764,5158510,5159908,5161536,5163584,5164877,5166925,5168973,5171021,5173069,5175117,5177165,5179213,5181261,5183309,5185357,5187405,5189453,5191501,5193549,5195597,5197645,5199693,5201741,5203789,5205837,5207885,5209933,5211850,5213744,5215453,5217154,5218907,5220616,5222359,5224214,5226116,5228143,5229192,5229237,5229282,5229324,5229373,5229418,5229463,5229508,5229550,5229599,5229644,5229689,5229734,5230397,5231330,5232717,5234118,5235658,5237228,5238668,5240216,5241737,5243301,5244969,5246683,5248392,5250117,5251831,5253518,5255151,5256820,5258428,5260067,5261676,5263278,5264772,5266090,5267396,5268559,5269745,5270727,5271252,5271633,5271845,5271981,5272077,5272115,5272160,5272208,5272257,5272302,5272341,5272386,5272434,5272483,5272528,5272568,5273351,5275399,5277447,5279495,5281543,5283591,5285639,5287687,5289735,5291783,5293831,5295879,5297927,5299975,5302023,5304071,5306119,5308167,5310215,5312263,5314311,5316359,5318407,5320455,5322503,5324551,5326599,5328647,5330695,5332273,5333521,5334724,5335953,5337225,5338366,5339528,5340690,5341905,5343150,5344358,5345672,5346833,5348155,5349511,5350783,5352461,5354079,5355602,5357040,5358396,5359791,5361373,5362880,5364284,5365771,5367449,5368998,5370488,5371997,5373527,5375051,5376369,5377827,5379259,5380716,5382155,5383465,5384657,5385982,5387244,5388496,5389658,5390723,5391645,5392654,5393667,5394764,5395797,5396638,5397366,5398014,5398874,5399616,5400247,5400913,5401515,5402918,5404759,5406049,5407084,5408239,5409243,5410386,5411671,5413043,5414161,5415397,5416599,5417864,5419184,5420509,5421931,5423440,5425199,5426938,5428583,5430354,5432136,5433733,5435369,5436786,5438361,5439668,5441252,5442897,5444400,5445798,5447411,5448965,5450568,5452109,5453786,5455385,5456843,5458147,5459494,5460794,5461993,5463103,5464123,5465106,5466174,5467100,5468050,5469058,5470127,5471207,5472177,5473027,5473739,5474344,5474715,5475180,5475569,5476471,5478251,5478907,5479557,5480226,5480936,5481637,5482303,5482944,5483614,5484348,5485006,5485695,5486345,5487323,5488890,5490492,5491992,5493604,5495240,5496891,5498459,5499973,5501441,5502653,5503585,5504645,5506142,5507579,5509141,5510657,5512158,5513671,5515071,5516414,5517672,5518674,5519686,5521049,5522572,5524049,5525475,5526977,5528355,5529610,5530708,5531425,5532064,5532731,5533420,5534092,5534754,5535420,5536070,5536745,5537426,5538114,5538738,5539489,5541537,5542220,5542903,5543588,5544222,5544869,5545537,5546245,5546964,5547627,5548263,5548954,5549669,5550436,5551644,5553253,5554846,5556452,5558179,5559881,5561465,5562993,5564453,5565892,5567174,5568556,5569933,5571200,5572458,5573772,5575122,5576470,5577711,5578885,5580475,5582158,5583809,5585428,5587096,5588705,5590250,5591692,5592893,5593977,5594718,5595464,5596139,5596842,5597505,5598140,5598803,5599501,5600207,5600857,5601509,5602206,5602907,5603628,5605447,5606810,5607150,5607614,5608266,5608951,5609656,5610453,5611322,5612268,5613373,5614414,5615482,5616758,5618187,5619709,5621272,5622842,5624419,5625924,5627390,5628843,5630309,5631773,5633163,5634624,5636170,5637594,5639060,5640438,5641744,5643093,5644496,5645906,5647443,5649114,5650669,5652140,5653471,5654607,5655761,5657006,5658232,5659476,5660761,5661944,5663097,5664193,5665101,5666098,5667124,5668185,5669161,5670044,5670957,5671708,5672371,5672820,5673571,5675389,5675655,5676086,5676606,5677260,5677929,5678723,5679604,5680546,5681490,5682505,5683591,5684807,5686113,5687555,5689155,5690860,5692574,5694253,5695883,5697443,5698848,5700261,5701537,5702838,5704166,5705583,5707046,5708472,5709945,5711411,5712843,5714309,5715731,5717215,5718671,5720109,5721782,5723453,5725011,5726419,5727708,5728984,5730211,5731435,5732644,5733797,5735038,5736116,5737190,5738238,5739250,5740228,5741054,5741844,5742538,5743089,5743532,5745588,5746038,5746442,5746976,5747610,5748267,5749041,5749939,5750797,5751799,5752901,5753943,5755161,5756653,5758150,5759629,5761170,5762706,5764178,5765523,5766777,5768127,5769494,5770847,5772219,5773595,5775011,5776425,5777667,5779018,5780382,5781782,5783116,5784414,5785736,5787034,5788354,5789847,5791404,5792988,5794476,5795928,5797348,5798717,5799968,5801180,5802423,5803613,5804799,5805863,5806941,5807910,5808895,5809739,5810574,5811290,5811891,5812241,5813789,5815837,5817804,5819852,5821826,5823825,5825824,5827872,5829840,5831888,5833918,5835964,5837679,5839396,5840828,5842526,5844392,5846440,5848488,5850536,5852584,5854632,5856680,5858728,5860776,5862824,5864872,5866920,5868968,5871016,5873064,5875112,5877160,5879208,5881256,5883304,5885352,5887400,5889448,5891496,5893544,5895581,5896798,5897763,5898592,5899367,5900271,5901292,5902386,5903213,5904079,5905026,5905862,5906817,5907664,5908524,5909324,5910141,5911151,5911938,5912744,5913625,5914441,5915397,5916525,5917525,5918392,5919247,5920272,5921407,5922520,5923618,5924632,5925526,5926142,5926971,5928330,5929586,5930855,5932191,5932927,5933552,5934177,5934765,5935305,5935889,5936874,5937784,5938703,5939398,5940174,5940709,5941423,5942005,5942686,5943442,5944443,5945350,5945937,5946622,5947345,5947956,5948996,5949857,5950883,5952041,5952787,5953407,5954091,5954638,5955187,5955715,5956412,5957112,5958063,5958711,5959434,5960081,5961010,5962128,5962996,5963907,5964736,5965771,5966779,5967420,5968341,5969274,5970162,5970935,5971887,5972934,5973880,5974545,5975501,5975784,5976409,5977307,5978292,5978710,5979259,5980176,5980888,5981572,5982132,5982774,5983491,5984395,5985220,5985996,5986635,5987248,5987827,5989043,5990856,5992515,5994030,5995460,5996911,5998302,5999789,6001331,6003327,6005073,6006843,6008382,6009816,6011221,6012603,6014151,6015793,6017841,6019432,6021064,6022816,6024466,6026100,6027741,6029475,6031255,6033063,6034807,6036516,6038237,6039567,6040767,6042001,6043362,6044966,6046566,6048259,6050034,6051822,6053547,6055250,6056973,6058721,6060461,6062116,6063841,6065501,6067283,6069038,6070713,6072460,6074238,6075947,6077727,6079461,6081245,6082897,6084491,6086117,6087607,6088915,6090243,6091552,6093065,6094598,6096162,6097802,6099404,6101017,6102700,6104192,6105704,6107352,6108947,6110580,6112632,6114114,6115527,6117029,6118580,6120068,6121520,6123072,6124556,6126031,6127517,6129128,6130747,6132168,6133781,6135460,6137113,6138795,6140564,6142312,6143946,6145655,6147242,6148812,6150324,6151879,6153470,6155067,6156646,6158261,6159882,6161469,6163029,6164568,6166175,6167767,6169418,6171002,6172639,6174180,6175774,6177360,6179009,6180622,6182193,6183503,6184689,6186180,6187676,6189108,6190444,6191932,6193458,6195047,6196669,6198140,6199521,6201013,6202936,6204482,6205706,6206916,6208153,6209400,6210634,6211886,6213142,6214380,6215654,6216945,6218274,6219793,6221079,6222366,6223635,6224933,6226262,6227560,6228867,6230081,6231359,6232637,6233893,6235149,6236416,6237628,6238875,6240147,6241398,6242615,6243807,6244992,6246215,6247448,6248650,6249886,6251121,6252390,6253628,6254871,6256099,6257379,6258675,6259990,6261551,6262828,6264114,6265406,6266732,6268034,6269335,6270601,6271844,6273131,6274413,6275640,6277272,6279275,6281011,6282804,6284596,6286369,6288159,6289940,6291726,6293507,6295289,6297050,6298785,6300534,6302228,6303961,6305612,6307254,6308913,6310476,6312127,6313747,6315393,6316997,6318675,6320390,6322069,6323791,6325555,6327297,6329069,6330810,6332585,6334347,6336101,6337811,6339417,6341096,6342815,6344466,6346134,6347744,6349422,6351172,6352843,6354511,6356236,6357984,6359715,6361495,6363256,6364997,6366727,6368466,6370204,6371954,6373741,6375520,6377147,6378053,6379560,6381569,6383617,6385665,6387713,6389761,6391809,6393857,6395905,6397953,6400001,6402049,6404097,6406145,6408193,6410241,6412289,6414337,6416385,6418433,6420481,6422529,6424577,6426625,6428673,6430721,6432769,6434817,6436865,6438913,6440961,6443009,6445057,6447105,6449153,6451201,6453249,6455297,6457345,6459393,6461441,6463489,6465537,6467594,6469642,6471690,6473738,6475786,6477834,6479882,6481930,6483978,6486026,6488074,6490122,6492170,6494218,6496266,6498314,6500362,6502410,6504458,6506506,6508554,6510602,6512650,6514698,6516746,6518794,6520842,6522890,6524938,6526986,6529034,6531082,6533130,6535178,6537226,6539274,6541322,6543370,6545418,6547466,6549514,6551562,6553610,6555658,6557706,6559754,6561802,6563850,6565898,6567946,6569994,6572042,6574090,6576138,6578186,6580234,6582282,6584330,6586378,6588426,6590474,6592522,6594570,6596618,6598666,6600714,6602762,6604810,6606858,6608906,6610954,6613002,6615050,6617098,6619146,6621194,6623242,6625290,6627338,6629386,6631434,6633482,6635530,6637578,6639626,6641674,6643722,6645770,6647818,6649866,6651914,6653962,6656010,6658058,6660106,6662154,6664202,6666250,6668298,6670346,6672394,6674442,6676490,6678538,6680586,6682634,6684682,6686730,6688778,6690826,6692874,6694922,6696970,6699018,6701066,6703114,6705162,6707210,6709258,6711306,6713354,6715402,6717450,6719498,6721546,6723594,6725642,6727690,6729738,6731786,6733834,6735882,6737930,6739978,6742026,6744074,6746122,6748170,6750218,6752266,6754314,6756362,6758410,6760458,6762506,6764554,6766602,6768650,6770698,6772746,6774794,6776842,6778890,6780938,6782986,6785034,6787082,6789130,6791178,6793226,6795274,6797322,6799370,6801418,6803466,6805514,6807562,6809610,6811658,6813706,6815754,6817802,6819850,6821898,6823946,6825994,6828042,6830090,6832138,6834186,6836234,6838282,6840330,6842378,6844426,6846474,6848522,6850570,6852618,6854666,6856714,6858762,6860810,6862858,6864906,6866954,6869002,6871050,6873098,6875146,6877194,6879242,6881290,6883338,6885386,6887434,6889482,6891530,6893578,6895626,6897674,6899722,6901770,6903818,6905866,6907914,6909962,6912010,6914058,6916106,6918154,6920202,6922250,6924298,6926346,6928394,6930442,6932490,6934538,6936586,6938634,6940682,6942730,6944778,6946826,6948874,6950922,6952970,6955018,6957066,6959114,6961162,6963210,6965258,6967306,6969354,6971402,6973450,6975498,6977546,6979594,6981642,6983690,6985738,6987786,6989834,6991882,6993930,6995978,6998026,7000074,7002122,7004170,7006218,7008266,7010314,7012362,7014410,7016458,7018506,7020554,7022602,7024650,7026698,7028746,7030794,7032842,7034890,7036938,7038986,7041034,7043082,7045130,7047178,7049226,7051274,7053322,7055370,7057418,7059466,7061514,7063562,7065610,7067658,7069706,7071754,7073802,7075850,7077898,7079946,7081994,7084042,7086090,7088138,7090186,7092234,7094282,7096330,7098378,7100426,7102474,7104522,7106570,7108618,7110666,7112714,7114762,7116810,7118858,7120906,7122954,7125002,7127050,7129098,7131146,7133194,7135242,7137290,7139338,7141386,7143434,7145482,7147530,7149578,7151626,7153674,7155722,7157770,7159818,7161866,7163914,7165962,7168010,7170058,7172106,7174154,7176202,7178250,7180298,7182346,7184394,7186442,7188490,7190538,7192586,7194634,7196682,7198730,7200778,7202826,7204874,7206922,7208970,7211018,7213066,7215114,7217162,7219210,7221258,7223306,7225354,7227402,7229450,7231498,7233546,7235594,7237642,7239690,7241738,7243786,7245834,7247882,7249930,7251978,7254026,7256074,7258122,7260170,7262218,7264266,7266314,7268362,7270410,7272458,7274515,7276563,7278611,7280659,7282707,7284755,7286803,7288851,7290899,7292947,7294995,7297043,7299091,7301139,7303187,7305235,7307283,7309331,7311379,7313427,7315475,7316113,7316741,7317324,7317931,7318534,7319100,7319713,7320347,7320972,7321559,7322164,7323140,7324181,7324659,7325227,7325878,7326398,7326795,7327201,7327631,7329117,7330857,7332296,7333242,7334202,7335478,7336812,7338150,7339795,7340959,7342136,7343862,7345293,7346312,7347519,7348160,7348526,7348992,7349447,7349987,7350459,7350910,7351278,7351655,7351994,7352277,7352560,7352907,7354281,7356298,7357900,7359637,7360975,7362717,7363691,7364829,7365713,7366676,7367879,7368945,7369838,7371070,7372351,7373088,7374177,7375012,7375937,7377043,7378188,7379223,7380520,7381641,7382692,7383503,7384516,7385738,7386790,7388049,7388944,7389915,7390799,7391958,7392786,7393812,7394956,7396136,7397057,7398142,7399176,7400260,7401323,7402442,7403518,7404424,7405509,7406575,7407024,7407335,7407646,7408410,7409485,7410468,7411363,7412270,7413941,7415020,7416819,7417913,7419950,7421584,7423096,7424600,7426201,7427816,7429388,7431010,7432644,7434347,7435969,7437587,7439252,7440877,7442527,7444157,7445811,7447416,7449041,7450742,7452477,7454151,7455845,7457602,7459391,7461145,7462789,7464502,7466277,7468064,7469848,7471671,7473573,7475480,7477353,7479251,7481137,7482982,7484760,7486569,7488378,7490191,7492016,7493785,7495598,7497405,7499194,7500838,7502364,7503978,7505617,7507211,7508727,7510172,7511754,7513348,7515003,7516654,7518555,7520298,7521715,7523177,7524704,7526235,7527691,7529218,7530741,7532152,7533616,7535173,7536801,7538240,7539738,7541411,7543091,7544736,7546495,7548287,7549915,7551652,7553283,7554871,7556400,7557896,7559482,7561118,7562691,7564305,7565908,7567544,7569129,7570667,7572225,7573858,7575487,7577074,7578709,7580282,7581815,7583373,7584991,7586631,7588218,7589650,7590807,7592189,7593686,7595180,7596557,7598024,7599525,7601132,7602736,7604314,7605733,7607201,7608887,7610640,7611195,7611817,7612379,7613002,7613725,7614503,7615154,7616064,7617024,7618053,7619148,7620090,7621312,7622593,7623929,7625241,7626571,7627977,7629354,7630713,7632119,7633548,7634913,7636332,7637882,7639370,7640784,7642185,7643611,7644830,7645780,7646833,7647781,7649045,7650366,7651626,7652734,7653814,7654809,7655735,7656789,7657852,7658659,7659616,7660552,7661452,7662186,7663021,7663950,7664634,7664996,7665754,7666430,7667082,7667831,7668408,7669043,7671091,7671833,7672568,7673380,7674308,7675284,7676375,7677446,7678565,7679682,7680842,7681884,7682736,7683538,7684297,7685492,7686791,7688192,7689668,7691166,7692654,7694149,7695634,7696941,7698508,7700070,7701679,7703177,7704736,7706366,7708061,7709725,7711334,7712832,7714403,7715916,7717477,7718936,7720419,7721794,7723073,7724362,7725536,7726541,7727500,7728622,7729672,7730767,7731872,7733039,7734250,7735454,7736522,7737440,7738208,7739015,7739835,7740591,7741288,7742674,7744427,7746475,7748523,7750571,7752619,7754667,7756715,7758763,7760811,7762859,7764907,7766955,7769003,7771051,7773099,7775147,7777195,7779243,7781300,7783348,7785396,7787444,7789492,7791540,7793588,7795636,7797684,7799732,7801780,7803828,7805876,7807924,7809972,7812020,7814068,7816116,7818164,7820212,7822260,7824308,7826356,7828404,7830452,7832500,7834548,7836596,7838644,7840692,7842740,7844788,7846836,7848884,7850932,7852980,7855028,7857076,7859124,7861172,7863220,7865268,7867316,7869364,7871412,7873451,7875508,7877556,7879579,7881627,7883675,7885723,7887771,7889819,7891867,7893915,7895963,7898011,7900059,7902107,7904155,7906203,7908251,7910299,7912347,7914395,7916443,7918491,7920539,7922587,7924635,7926683,7928731,7930779,7932827,7934875,7936923,7938971,7941019,7943067,7945115,7947163,7949211,7951259,7953307,7955355,7957403,7959451,7961499,7963547,7965595,7967643,7969691,7971290,7972587,7973863,7974997,7975908,7976248,7976897,7977901,7978921,7980051,7981114,7982182,7982758,7983864,7985411,7986953,7988274,7989718,7991026,7992401,7993766,7994867,7995995,7997204,7998180,7999875,8001146,8002487,8003783,8004955,8006159,8007364,8008513,8009749,8011147,8012582,8013993,8015289,8016579,8017836,8019142,8020605,8022137,8023794,8025361,8026949,8028546,8030087,8031645,8033224,8034771,8036295,8037810,8039286,8040691,8042052,8043373,8044888,8046941,8048989,8051037,8053085,8055133,8057181,8059199,8061159,8063207,8065255,8067303,8069351,8071399,8073447,8075495,8077543,8079591,8081639,8083687,8085735,8087783,8089831,8091879,8093927,8095975,8098023,8100071,8102119,8104167,8106215,8108272,8110320,8112377,8114425,8116460,8118486,8120477,8122379,8124427,8126475,8128523,8130571,8132619,8134667,8136715,8138763,8140811,8142859,8144907,8146955,8149003,8151051,8153099,8155147,8157195,8159243,8161291,8163339,8165387,8167435,8169483,8171531,8173579,8175627,8177675,8179723,8181771,8183819,8185867,8187915,8189963,8192011,8194059,8196107,8198155,8200203,8202251,8204299,8206347,8208395,8210443,8212491,8214539,8216587,8218635,8220683,8222731,8224779,8226827,8228875,8230923,8232971,8235019,8237067,8239115,8241163,8243211,8245259,8247307,8249355,8251403,8253451,8255499,8257547,8259595,8261643,8263691,8265739,8267787,8269835,8271883,8273931,8275979,8278027,8280075,8282123,8284171,8286219,8288267,8290315,8291815,8293175,8294622,8296009,8297354,8298733,8300166,8301620,8303128,8304795,8306475,8308009,8309446,8310873,8312161,8313710,8315364,8317080,8318837,8320468,8322098,8323616,8325058,8326639,8328285,8329927,8331595,8333252,8334835,8336384,8337821,8339402,8341371,8343417,8345472,8347443,8349491,8351502,8353516,8355564,8357579,8359602,8361650,8363653,8365697,8367745,8369768,8371816,8373864,8375906,8377954,8380002,8382035,8384012,8385925,8387973,8390015,8391976,8393497,8395076,8396676,8398260,8399843,8401454,8402245,8402485,8402698,8402918,8403134,8403344,8403721,8403940,8404159,8404406,8404625,8404937,8406205,8408071,8409323,8410575,8411875,8413097,8414150,8415327,8416510,8417723,8419001,8420178,8421371,8422481,8423633,8425652,8427316,8428032,8429380,8431428,8432588,8433223,8434909,8436957,8437845,8438646,8440703,8442294,8442958,8444138,8445138,8446023,8446916,8447841,8448832,8449770,8450675,8451344,8452323,8453133,8453850,8454857,8455619,8456614,8457741,8458626,8459617,8460519,8461285,8462287,8463313,8464313,8465324,8466416,8467431,8468283,8469450,8470430,8471606,8472870,8473591,8474373,8474783,8475197,8476063,8477252,8478181,8479178,8479732,8480098,8480436,8480772,8481207,8481569,8482001,8482531,8483078,8484479,8485668,8486507,8487682,8489030,8490481,8492011,8493399,8494723,8495865,8497078,8498492,8499889,8501137,8502364,8503491,8504918,8506344,8507772,8509315,8510394,8511625,8512795,8513919,8515359,8516756,8518224,8519775,8521134,8522208,8523367,8524548,8526002,8527410,8528919,8530490,8531614,8532780,8533884,8535145,8536613,8538034,8539549,8541045,8542092,8543168,8544308,8545618,8547077,8548561,8550066,8551434,8552520,8553662,8554918,8556405,8557800,8558801,8559538,8560148,8560745,8561507,8562156,8562804,8563440,8564038,8564753,8565578,8566549,8567440,8568065,8569069,8569903,8570709,8571450,8572303,8573171,8573944,8574672,8575111,8575845,8576546,8577368,8578132,8578910,8579618,8580368,8580992,8581799,8582329,8583087,8583628,8584102,8584810,8585446,8586208,8586928,8587684,8588359,8588957,8589553,8590135,8590753,8591260,8591842,8592269,8592868,8593351,8593843,8594578,8595071,8595856,8596564,8596997,8597751,8598425,8599334,8600432,8601145,8601749,8602255,8602782,8603368,8604349,8605058,8605691,8606349,8606964,8607626,8608717,8609735,8610870,8611830,8612317,8613131,8613930,8614575,8615287,8615828,8616498,8617325,8617934,8618507,8619022,8619838,8620599,8621346,8622342,8623324,8624062,8624897,8625497,8626346,8627271,8628126,8628983,8629890,8630755,8631628,8632470,8633328,8634369,8634843,8635647,8636545,8637440,8638272,8639060,8639888,8640827,8641786,8642741,8643653,8644557,8645434,8646327,8647210,8648164,8649159,8650133,8651102,8652078,8653039,8653995,8654953,8655824,8656827,8657674,8658471,8659276,8660126,8661023,8661831,8662639,8663483,8664212,8664987,8665835,8666687,8667546,8668379,8669203,8669641,8670516,8671193,8671854,8672417,8673742,8674649,8675408,8676451,8678107,8679879,8681581,8683451,8685297,8687345,8689393,8691450,8693460,8695004,8696382,8698256,8700078,8702126,8704079,8705903,8707848,8709879,8711750,8713565,8715613,8717661,8719709,8721574,8723338,8725386,8727244,8729024,8731072,8733030,8734860,8736500,8737677,8738690,8739133,8739807,8740819,8742782,8744835,8746679,8748108,8749398,8750593,8751720,8753423,8755412,8756958,8758130,8759387,8760241,8761937,8763304,8764871,8766227,8767021,8767309,8767413,8768642,8770690,8772738,8774786,8776834,8778882,8780930,8782978,8785026,8787074,8789122,8791170,8793223,8795273,8797284,8799022,8800674,8802722,8804770,8806818,8808866,8810914,8812962,8815019,8816847,8816872,8817802,8819792,8821849,8823906,8825952,8827742,8829271,8831120,8833168,8835197,8837064,8839112,8841160,8843208,8845256,8847286,8849147,8851195,8853243,8855111,8857159,8859212,8861179,8863227,8865280,8867317,8869362,8871416,8873380,8874990,8876522,8878395,8880346,8882394,8884442,8886490,8888538,8890586,8892634,8894682,8896480,8897494,8898583,8899763,8901050,8902290,8903396,8904848,8906378,8907264,8908343,8909795,8910875,8912075,8913215,8914185,8915300,8916492,8917928,8919827,8921731,8923618,8925493,8927410,8929065,8930870,8932583,8934268,8935870,8937537,8939261,8940281,8941334,8942525,8943557,8944655,8945712,8946669,8947830,8949048,8950049,8951153,8952306,8953443,8954919,8956009,8957571,8959628,8961613,8963661,8965694,8967667,8969707,8971687,8973743,8975769,8977746,8979777,8981817,8983843,8985870,8987854,8989902,8991959,8993931,8995964,8997956,9000004,9002041,9004019,9006067,9008115,9010163,9012206,9014178,9016226,9018274,9020246,9022303,9024332,9026311,9028359,9030389,9032363,9034411,9036459,9038445,9040493,9042541,9044519,9046573,9048601,9050649,9052684,9054741,9056713,9058761,9060818,9062864,9064912,9066969,9069017,9071065,9073113,9075161,9077209,9079110,9081158,9083206,9085254,9087302,9089350,9091398,9093446,9095494,9097542,9099590,9101485,9103533,9105581,9107629,9109677,9111725,9113773,9115821,9117869,9119763,9121811,9123859,9125907,9127955,9130003,9132051,9134064,9136112,9138160,9140208,9142256,9144304,9146352,9148400,9150298,9152346,9154394,9156442,9158490,9160538,9162586,9164482,9166530,9168578,9170626,9172674,9174722,9176770,9178818,9180835,9182836,9184884,9186932,9188980,9191028,9193076,9195124,9197172,9199220,9201268,9202740,9204551,9206149,9207785,9209463,9210603,9211831,9213844,9215873,9217921,9219881,9221881,9223934,9225962,9227935,9229875,9231914,9233933,9235875,9237929,9239716,9240901,9242609,9243648,9245509,9246883,9248767,9249756,9250903,9251992,9253004,9254601,9256085,9257571,9259052,9260239,9260866,9261568,9262250,9262959,9263666,9264394,9265055,9265570,9266102,9266680,9267227,9269023,9270757,9272447,9274143,9275851,9277524,9279442,9281190,9282924,9284662,9285503,9286932,9288637,9290261,9291767,9293244,9294715,9295282,9295695,9296022,9296473,9296898,9297304,9297729,9298538,9300466,9302174,9303857,9305538,9307440,9309205,9310992,9312217,9313958,9315488,9316954,9318461,9319781,9320142,9320638,9321195,9321694,9322114,9322490,9322997,9323505,9323902,9325568,9327293,9328979,9330655,9332332,9334226,9335965,9337744,9339447,9340501,9342261,9343837,9345313,9346784,9348279,9349731,9350286,9350916,9351531,9352124,9352568,9353185,9353718,9354297,9354813,9355359,9355994,9356365,9356594,9358240,9360098,9361798,9363479,9365148,9366835,9368530,9370485,9372311,9374020,9375726,9377493,9378244,9379939,9381649,9383276,9384768,9386246,9387729,9388548,9389135,9389694,9390330,9390890,9391469,9392072,9392618,9393223,9393806,9394361,9394887,9396832,9398548,9400241,9401921,9403607,9405286,9407171,9408903,9410604,9412317,9414023,9414769,9416235,9417929,9419543,9421029,9422521,9424002,9424997,9425606,9426124,9426711,9427187,9427638,9428173,9428754,9429333,9429767,9430126,9430654,9432404,9434093,9435794,9437470,9439121,9440785,9442663,9444444,9446169,9447810,9448948,9450228,9452000,9453623,9455105,9456589,9457424,9457846,9458291,9458669,9459145,9459676,9460138,9460616,9461818,9463544,9465199,9466875,9468537,9470380,9472085,9473766,9474898,9476461,9478049,9479513,9480991,9482452,9483944,9485420,9486477,9487119,9487711,9488273,9488858,9489507,9489941,9490617,9491203,9491780,9492376,9493055,9493642,9494373,9495093,9495738,9496446,9497014,9497682,9498222,9498668,9500135,9502097,9503750,9505435,9507135,9508816,9510479,9512169,9513887,9515584,9517280,9519309,9520957,9522749,9524445,9526182,9528018,9529832,9531496,9532134,9532918,9534229,9535985,9537758,9539454,9541226,9542725,9544198,9545677,9547143,9548531,9549119,9549546,9550096,9550626,9551162,9551797,9552342,9552944,9553407,9553911,9554513,9554955,9555523,9555989,9557472,9559377,9561074,9562765,9564454,9566139,9567830,9569514,9571498,9573191,9574980,9576744,9578515,9579551,9580200,9581917,9583847,9585510,9587172,9588651,9590130,9591623,9593093,9594300,9594941,9595578,9596242,9596843,9597426,9597989,9598488,9599078,9599773,9600310,9600768,9601280,9601689,9602246,9603047,9605072,9606775,9608446,9610129,9611833,9613529,9615226,9617111,9618917,9620623,9622351,9624147,9625930,9627052,9627797,9629734,9631524,9633241,9634737,9636227,9637722,9639203,9640324,9640802,9641438,9642026,9642632,9643218,9643788,9644207,9644490,9644711,9644867,9645124,9645331,9645732,9647762,9649593,9651306,9652987,9654703,9656423,9658157,9659954,9661920,9663679,9665418,9667220,9669004,9670669,9671815,9673400,9675018,9676524,9677997,9678703,9679371,9680015,9680675,9681556,9683323,9684996,9686798,9688189,9689778,9691289,9692746,9694228,9695064,9695665,9696271,9696841,9697357,9697800,9698282,9698679,9699221,9700860,9702535,9704195,9705861,9707580,9709351,9711052,9712635,9713527,9715317,9716919,9718368,9719854,9721307,9722270,9722863,9723450,9724076,9724600,9725171,9725766,9726286,9726711,9727391,9727915,9728755,9730698,9732357,9734031,9735710,9737389,9739201,9740904,9742634,9744411,9745849,9746601,9748528,9750322,9751777,9753250,9754689,9755610,9756167,9756660,9757069,9757588,9758048,9758421,9758729,9759028,9759507,9760476,9762316,9763983,9765672,9767321,9768975,9770820,9772501,9774223,9775852,9777010,9778223,9780039,9781609,9783062,9784513,9785966,9786431,9786711,9787110,9787456,9787890,9788307,9788679,9788950,9789316,9789772,9790044,9790844,9792720,9794356,9796006,9797656,9799326,9801107,9802836,9804526,9806199,9807364,9808933,9810621,9812102,9813593,9814837,9815265,9815732,9816220,9816835,9817434,9818075,9818683,9819269,9819768,9821627,9823291,9824955,9826613,9828307,9830141,9831842,9833554,9835003,9836277,9838030,9839565,9841047,9842533,9844010,9845128,9845659,9846141,9846684,9847252,9847855,9848427,9849072,9849501,9849987,9850570,9850959,9851468,9852464,9854365,9856021,9857694,9859373,9861024,9862700,9864485,9866343,9868011,9869679,9871433,9872762,9873498,9875473,9877151,9878788,9880229,9881715,9883213,9884680,9886173,9887661,9889155,9890638,9892131,9892742,9893452,9894160,9894732,9895410,9895919,9896599,9897296,9897781,9898333,9898905,9899504,9900179,9900829,9901461,9902074,9902737,9903198,9903651,9904353,9905053,9905648,9906089,9906632,9907174,9907631,9907891,9908227,9909571,9911584,9913528,9915256,9916983,9918700,9920365,9922074,9923755,9925449,9927137,9928799,9930478,9932179,9933968,9936016,9937770,9939462,9941231,9942875,9944517,9946257,9947924,9949597,9951321,9952497,9953217,9954023,9955880,9957772,9959417,9959529,9960568,9961170,9962046,9963727,9965434,9967012,9968504,9970008,9971519,9973030,9974532,9976023,9977511,9978991,9980473,9981952,9982636,9983384,9984193,9984719,9985441,9986137,9986836,9987529,9988244,9988840,9989531,9990224,9990949,9991603,9992271,9992919,9993674,9994303,9994957,9995450,9995936,9996485,9996930,9997143,9997415,9997865,9998433,9998794,9999367,9999620,9999811,10000134,10001914,10003940,10005896,10007580,10009270,10010971,10012649,10014318,10016018,10017713,10019415,10021064,10022737,10024423,10026112,10027793,10029509,10031522,10033521,10035283,10036993,10038713,10040423,10042149,10043856,10045495,10047103,10048752,10050467,10052177,10053234,10054025,10055510,10057399,10059237,10060929,10062697,10064461,10065973,10067457,10068935,10070431,10071586,10072120,10072696,10073253,10073764,10074189,10074716,10075158,10075630,10076131,10076481,10076754,10077363,10077873,10079561,10081352,10083030,10084690,10086369,10088051,10089751,10091701,10093331,10095040,10096769,10098496,10099333,10100944,10102634,10104269,10105668,10107143,10108606,10110089,10111596,10113096,10114569,10116051,10117159,10117808,10118385,10119049,10119621,10120206,10120861,10121525,10122186,10122856,10123387,10123894,10124649,10125277,10125899,10126534,10127255,10127702,10128318,10128910,10129580,10130088,10130497,10131094,10131652,10133527,10135540,10137248,10138929,10140610,10142291,10144001,10145691,10147398,10149075,10150749,10152457,10154388,10156311,10158003,10159646,10161361,10163033,10164726,10166413,10168193,10169476,10170348,10171828,10173575,10175054,10176694,10178336,10179983,10181471,10182936,10184410,10185888,10187380,10188716,10189235,10189753,10190260,10190833,10191560,10192140,10192806,10193354,10194091,10194727,10195264,10195682,10196301,10197028,10197624,10198000,10198477,10200515,10202345,10204023,10205688,10207373,10209070,10210761,10212428,10214108,10216112,10217856,10219579,10221328,10223094,10224839,10226408,10227424,10229195,10230978,10232746,10234279,10235771,10237269,10238751,10240263,10241737,10243225,10244718,10246225,10247731,10249244,10250747,10252160,10252650,10253369,10254028,10254615,10255219,10255809,10256334,10256938,10257605,10258199,10258796,10259443,10260026,10260629,10261142,10261776,10262354,10262836,10263379,10264042,10264553,10265042,10265673,10266270,10266821,10267407,10267919,10268465,10269067,10269657,10270253,10270814,10271391,10271887,10272425,10272954,10273386,10274025,10274469,10275045,10276927,10278957,10280976,10282854,10284555,10286285,10287992,10289710,10291429,10293115,10294818,10296531,10298250,10299963,10301688,10303394,10305097,10306816,10308523,10310236,10311940,10313988,10316027,10317749,10319496,10321195,10322964,10324659,10326356,10328053,10329807,10331496,10333261,10335033,10336796,10337977,10338860,10339743,10340594,10341888,10343540,10345209,10346727,10348346,10349906,10351489,10352658,10353731,10354656,10356415,10358178,10359944,10361493,10362957,10364435,10365914,10367404,10368383,10369041,10369722,10370314,10370759,10371192,10371572,10371977,10372421,10372748,10373241,10373767,10374092,10375514,10377403,10379094,10380772,10382451,10384135,10385811,10387630,10389473,10391165,10392914,10394618,10396111,10397186,10398993,10400715,10402185,10403652,10405049,10405692,10406142,10406592,10407093,10407349,10407655,10408152,10408545,10409937,10411679,10413341,10415020,10416718,10418584,10420297,10421983,10423216,10424922,10426464,10427936,10429409,10430865,10432348,10433021,10433592,10434200,10434816,10435407,10435980,10436506,10437112,10437745,10438026,10438471,10438921,10439347,10439761,10441692,10443419,10445074,10446747,10448428,10450084,10451771,10453608,10455352,10457044,10458745,10460438,10461221,10461705,10463099,10464374,10465899,10467527,10469017,10470497,10471489,10471751,10472041,10472493,10472764,10473054,10473510,10473685,10474634,10476393,10478021,10479665,10481424,10483135,10484746,10485962,10487274,10488831,10490315,10491764,10492916,10493474,10493991,10494346,10494879,10495339,10495741,10497193,10498875,10500543,10502234,10504031,10505662,10506870,10508502,10509975,10511464,10512933,10514402,10515871,10517344,10518696,10519391,10519938,10520563,10521228,10521813,10522326,10522826,10523458,10523881,10524291,10524802,10525376,10525901,10526426,10526917,10527281,10527678,10528075,10528488,10529969,10531906,10533579,10535247,10536948,10538644,10540337,10542022,10543675,10545341,10547119,10549047,10550752,10552508,10554208,10555923,10557564,10559121,10559989,10561020,10562641,10564201,10565686,10567378,10568990,10570459,10571949,10573418,10574860,10575263,10575612,10576060,10576574,10577048,10577315,10577699,10578206,10578698,10579141,10579514,10579888,10580288,10581370,10583260,10584906,10586573,10588240,10589888,10591555,10593265,10595161,10596829,10598506,10600182,10601373,10602006,10603432,10605064,10606711,10608195,10609685,10610584,10611120,10611650,10611886,10612194,10612705,10612944,10614269,10615945,10617648,10619344,10621229,10622965,10624700,10625796,10627568,10629623,10631677,10633712,10635763,10637817,10639310,10640917,10642414,10643746,10644574,10645364,10646124,10647007,10647905,10648586,10650584,10652624,10654599,10656496,10658420,10659728,10660836,10662319,10663475,10664920,10665824,10666955,10668081,10668880,10669822,10670955,10672127,10673077,10674164,10675238,10676253,10677326,10678291,10679231,10680357,10681433,10682525,10683493,10684321,10685294,10686219,10687183,10688120,10688947,10689914,10690868,10691741,10692802,10693773,10694814,10695787,10696878,10697869,10698766,10699626,10700472,10701426,10702292,10703295,10704315,10705207,10706186,10707158,10708012,10709046,10710063,10711042,10712005,10712876,10713986,10715030,10716072,10717159,10718077,10719086,10720210,10721385,10722475,10723597,10724695,10725836,10726976,10728102,10729153,10730321,10731428,10732548,10733583,10734644,10735362,10736298,10737426,10738560,10739631,10740580,10741717,10742852,10743995,10745028,10746138,10747249,10748252,10749308,10750434,10751704,10752821,10753806,10754887,10756027,10757099,10758262,10759429,10760505,10761682,10762748,10763862,10765078,10766201,10767407,10768484,10769646,10770847,10772019,10773098,10774199,10775380,10776476,10778232,10780280,10781353,10782448,10783509,10784447,10785402,10786441,10787581,10788607,10789631,10790564,10791758,10792661,10793713,10794783,10795722,10796706,10797671,10798541,10799287,10800060,10800925,10802162,10803580,10805154,10806461,10808165,10810177,10812225,10814282,10816043,10817576,10819601,10821649,10823697,10825754,10827625,10829530,10831578,10833181,10835172,10837220,10839268,10841316,10843364,10845412,10847460,10849508,10851553,10853586,10855627,10857683,10859713,10861749,10863735,10865655,10867443,10869079,10871127,10873175,10875223,10877271,10879319,10881367,10883415,10885463,10887520,10889568,10891616,10893664,10895648,10897586,10899427,10901165,10902358,10904384,10906302,10908162,10909934,10911885,10913940,10915996,10918044,10920092,10922140,10924188,10926236,10928284,10930332,10932380,10934428,10936476,10938524,10940580,10942511,10943839,10945137,10947187,10949235,10951283,10953331,10955379,10957427,10959475,10961523,10963571,10965619,10967667,10969715,10971763,10973811,10975859,10977907,10979955,10982003,10984051,10986054,10987630,10989678,10991726,10993774,10995828,10997632,10999168,11000514,11001710,11002667,11003325,11004029,11006085,11008133,11010189,11012237,11014285,11016333,11018381,11020429,11022477,11024525,11026280,11027658,11028625,11030673,11032718,11034732,11036639,11038488,11040148,11041627,11042683,11043514,11043987,11044174,11044889,11046894,11048942,11050990,11053039,11055087,11057135,11059183,11061231,11063279,11065336,11067392,11069446,11071501,11073467,11075260,11076822,11078289,11079729,11081775,11083823,11085871,11087919,11089973,11092021,11094069,11096117,11098165,11100219,11102276,11104316,11106346,11108199,11109836,11111240,11112128,11113553,11115453,11117368,11119391,11121439,11123496,11125548,11127408,11129047,11130209,11131444,11133492,11135541,11137589,11139305,11141353,11143401,11145449,11147110,11147331,11147464,11147595,11147620,11148871,11150928,11152976,11155033,11157081,11159129,11161177,11163225,11165259,11167173,11169221,11171269,11173317,11175346,11177394,11179442,11181490,11183538,11185586,11187634,11189682,11191739,11193796,11195844,11197645,11199291,11201295,11203142,11204846,11206476,11208524,11210464,11211956,11213233,11214921,11216871,11218903,11220960,11223017,11225065,11227115,11229135,11230945,11232225,11232397,11233934,11235988,11238036,11240093,11242142,11244190,11246238,11248295,11250343,11252383,11254424,11256410,11258234,11260136,11262083,11263623,11265679,11267727,11269784,11271840,11273888,11275936,11277984,11280032,11281939,11283994,11286042,11288090,11290138,11292194,11294242,11296298,11298354,11300142,11302023,11303991,11305956,11307528,11308952,11311006,11313054,11315049,11316813,11318673,11320721,11322769,11324817,11326865,11328918,11330966,11333014,11335062,11337110,11338824,11340081,11341880,11343835,11345839,11347853,11349909,11351951,11353985,11356027,11358075,11360128,11362173,11364221,11366224,11368238,11370222,11372203,11374192,11376247,11378284,11380330,11382380,11384396,11386429,11388464,11390508,11392562,11394599,11396654,11398681,11400572,11402335,11403880,11405270,11406536,11407726,11408847,11410082,11411080,11412105,11413209,11414209,11415247,11416139,11416982,11417874,11418593,11419260,11419743,11420187,11420375,11420531,11420626,11420685,11421061,11423118,11425143,11427199,11429255,11431294,11433162,11434910,11436485,11437566,11438703,11440751,11442799,11444847,11446895,11448788,11450836,11452884,11454932,11456892,11458940,11460988,11463036,11465051,11467108,11469156,11471210,11473258,11475304,11477342,11479390,11481445,11483485,11485531,11487583,11489605,11491547,11493422,11495217,11496960,11498715,11500270,11502315,11504363,11506411,11508468,11510516,11512567,11514620,11516357,11518411,11520459,11522507,11524555,11526610,11528665,11530716,11532748,11534708,11536765,11538772,11540688,11542101,11544155,11546203,11548240,11549705,11551648,11553696,11555744,11557792,11559840,11561888,11563936,11565986,11568033,11570037,11571869,11573609,11575133,11576486,11577773,11578895,11580622,11582670,11584718,11586766,11588821,11590839,11592697,11594323,11595144,11595526,11596657,11598194,11599948,11601860,11603828,11605748,11607693,11609687,11611588,11613285,11614784,11616114,11617084,11617628,11618178,11619944,11621984,11624013,11625307,11626121,11628178,11630226,11632274,11634322,11636370,11638418,11640466,11642514,11644532,11646515,11648550,11650552,11652310,11653728,11654595,11656463,11658498,11660258,11661664,11663514,11665562,11667610,11669658,11671714,11673767,11675823,11677871,11679910,11681856,11683603,11685363,11687411,11688820,11689663,11691355,11693412,11695460,11697508,11699556,11701604,11703652,11705675,11707465,11709437,11711485,11713541,11715589,11717637,11719685,11721733,11723488,11724491,11726045,11727988,11730027,11732084,11734141,11736155,11737325,11739138,11740955,11743007,11745055,11747103,11749159,11751215,11753201,11754957,11756205,11757172,11757900,11758338,11758655,11758877,11759241,11761289,11763337,11765385,11767433,11769481,11771529,11773577,11775625,11777673,11779721,11781769,11783817,11785865,11787913,11789961,11792009,11794057,11796101,11797437,11799485,11801533,11803581,11805629,11807677,11809725,11811773,11813822,11814447,11814945,11816412,11818161,11820170,11822224,11824272,11826320,11828368,11830416,11832464,11834512,11836560,11838608,11840652,11842454,11844059,11845506,11846854,11847963,11848984,11850054,11850897,11851636,11852491,11853476,11854183,11855297,11857080,11859136,11861193,11863241,11865289,11867337,11869385,11871433,11873481,11875529,11877577,11879625,11881673,11883721,11885398,11886550,11887233,11887922,11889773,11891830,11893878,11895935,11897983,11899194,11901239,11903162,11904889,11906038,11906982,11907574,11908210,11909695,11911752,11913477,11914391,11915279,11917135,11919072,11921102,11923152,11925208,11927264,11929316,11931363,11933296,11934848,11936584,11938516,11940400,11942429,11944485,11946540,11948588,11950636,11952684,11954732,11956789,11958845,11960809,11962530,11963855,11964405,11965350,11967211,11969259,11971307,11973355,11975403,11977451,11979499,11981547,11983595,11985639,11987570,11989257,11990633,11991537,11992420,11992635,11993549,11995597,11997623,11999559,12001457,12003180,12004919,12006797,12008845,12010822,12012503,12013969,12015512,12017198,12019033,12021078,12023126,12025046,12026894,12028114,12030091,12031902,12033656,12035662,12037702,12039379,12041232,12042548,12043904,12045046,12046901,12048857,12050890,12052913,12054864,12056874,12058756,12060800,12062856,12064908,12066918,12068381,12069211,12070947,12072995,12075043,12077091,12079139,12081187,12081859,12083515,12085569,12087617,12089665,12091713,12092826,12093405,12095449,12097497,12099531,12101579,12103636,12105684,12107732,12109660,12111708,12113631,12115268,12117316,12119217,12121165,12123213,12125158,12126943,12128976,12130952,12132260,12133516,12135564,12136685,12137809,12139857,12141905,12143960,12145983,12146779,12146883,12147281,12148963,12151019,12153075,12155132,12157180,12159228,12161285,12163318,12165297,12167345,12169393,12171297,12173354,12175328,12177376,12179424,12181439,12183487,12185516,12187564,12189418,12191474,12193114,12195123,12196546,12198421,12199837,12201253,12202911,12204624,12206077,12207380,12208876,12210924,12212832,12214528,12216576,12218624,12220681,12222729,12224661,12225875,12226817,12227465,12229367,12231042,12232472,12234516,12236559,12238616,12240664,12242712,12244760,12246808,12248856,12250904,12252952,12255000,12257045,12258960,12260674,12262197,12263529,12264609,12265421,12267182,12269230,12271278,12273326,12275374,12277422,12278441,12279619,12281661,12283713,12285769,12287702,12289633,12291683,12293737,12295785,12297833,12299881,12301937,12303991,12306035,12307947,12309651,12310928,12311364,12312954,12315002,12317050,12319098,12321146,12322024,12322180,12323731,12325785,12327833,12329881,12331929,12333982,12336037,12338085,12340133,12341897,12343041,12343290,12344059,12345642,12347665,12349713,12351761,12353809,12355857,12357905,12359961,12362017,12364073,12366130,12368187,12370170,12372007,12373798,12375575,12377242,12378740,12380106,12381332,12382567,12383773,12384721,12385462,12385997,12386559,12387026,12387478,12387940,12388332,12388725,12389177,12389622,12390170,12390698,12391126,12391284,12391787,12392885,12394072,12395264,12396492,12397589,12398589,12399549,12400370,12400993,12401422,12401653,12401753,12402120,12403415,12405104,12407059,12409115,12411163,12413214,12415239,12417192,12419120,12420977,12422911,12424767,12426738,12428714,12430165,12431980,12434032,12436083,12438135,12440135,12442170,12444216,12446245,12448281,12450300,12452258,12454314,12456267,12458181,12460211,12462259,12464307,12466298,12467965,12469890,12471830,12473564,12475550,12477595,12479095,12480477,12482285,12484338,12486386,12488341,12490231,12492185,12493979,12495961,12497829,12499877,12501933,12503981,12505979,12507879,12509927,12511897,12513355,12514950,12516473,12517805,12518733,12519146,12519705,12520064,12520673,12521308,12522103,12523361,12524968,12526359,12527762,12529049,12530391,12531882,12533567,12535344,12537152,12538962,12540908,12542944,12544959,12547013,12549061,12551117,12553170,12555218,12557273,12559329,12561385,12563431,12565401,12567366,12569354,12571348,12573194,12574915,12576636,12578366,12580050,12581688,12583211,12584647,12586113,12587558,12588968,12590282,12591472,12592687,12593893,12595041,12596150,12597156,12598096,12599077,12600144,12601683,12603083,12604595,12606139,12607546,12609035,12610593,12612150,12613582,12615211,12616641,12618194,12619873,12621542,12623082,12624758,12626264,12627732,12629431,12631084,12632904,12634621,12636392,12638209,12640047,12641916,12643817,12645725,12647698,12649647,12651655,12653703,12655759,12657807,12659855,12661903,12663958,12666003,12668012,12669871,12671586,12673107,12674039,12675667,12677475,12679522,12681575,12683630,12685678,12686604,12686704,12688296,12690344,12692392,12694339,12695837,12697831,12698999,12701047,12703095,12704482,12706252,12708309,12710357,12712405,12714453,12716022,12718078,12719996,12721415,12722913,12724961,12727009,12729057,12731114,12733170,12735218,12737152,12739200,12741248,12743305,12745353,12747401,12749449,12751497,12753545,12755593,12757641,12759689,12761731,12763762,12765810,12767867,12769915,12771963,12774011,12775947,12777914,12779941,12781989,12784037,12786093,12788144,12790200,12792248,12794296,12796344,12798392,12800444,12801966,12803564,12805616,12807664,12809721,12811769,12813825,12815874,12817931,12819799,12821760,12823489,12825012,12826616,12828069,12829832,12831610,12833169,12834568,12835897,12837001,12837826,12838055,12840095,12842143,12844191,12846239,12848292,12850220,12851742,12852534,12852840,12854134,12856182,12858230,12860045,12861590,12863071,12864911,12866763,12867319,12867517,12868502,12869208,12869565,12870025,12870382,12870722,12871114,12871458,12871692,12872206,12872905,12873780,12874617,12875187,12875792,12876357,12876797,12877310,12877935,12878291,12879067,12879708,12880106,12880742,12881474,12882384,12883170,12883517,12883970,12884360,12884745,12885338,12886481,12887053,12887451,12887753,12888235,12889246,12889919,12890589,12891069,12891861,12892666,12893434,12894633,12895737,12896868,12898088,12898482,12899040,12899362,12899558,12899872,12900312,12900573,12901193,12901859,12902232,12902440,12902732,12903026,12903234,12903415,12903800,12903984,12904155,12904359,12904698,12904943,12905236,12905520,12905725,12905771,12905981,12906175,12906372,12906886,12907616,12907980,12908474,12908819,12909730,12910573,12911194,12912025,12912971,12914001,12914639,12915120,12915819,12915955,12916578,12916782,12917229,12917390,12917790,12918159,12918621,12919067,12919606,12920140,12920904,12921811,12923039,12923825,12924484,12925211,12925945,12926390,12926814,12927428,12927792,12929149,12930828,12932260,12933358,12934769,12936244,12937655,12939250,12939894,12940880,12941843,12942751,12943689,12944642,12945378,12946331,12947191,12948031,12948689,12949551,12949851,12950606,12950974,12951470,12952209,12952572,12953194,12954021,12954482,12955013,12955638,12956094,12956651,12957274,12958372,12959587,12960621,12961476,12962435,12963644,12964701,12965534,12967099,12968605,12969536,12970489,12971591,12972574,12973828,12975175,12976302,12977172,12978331,12979325,12980291,12981187,12982129,12983096,12983774,12985036,12986110,12986565,12987133,12987369,12987723,12988146,12988285,12988494,12988575,12988899,12989212,12989838,12990244,12990836,12991158,12991729,12992528,12993244,12994135,12994930,12995610,12996611,12997598,12998978,13000145,13001148,13002420,13003347,13004657,13005385,13005697,13006082,13007234,13008146,13009005,13009848,13010558,13010929,13011239,13011798,13012505,13013048,13014049,13015438,13016132,13016484,13017229,13017456,13018276,13018807,13019221,13019468,13020009,13020450,13020851,13021289,13021874,13022178,13022893,13023219,13023492,13024229,13024993,13025608,13026221,13027444,13028230,13028557,13029267,13029861,13030442,13030995,13031434,13031847,13032395,13032735,13033070,13033595,13034204,13035118,13035853,13037096,13037764,13038678,13039506,13040236,13040348,13040652,13040915,13041338,13042149,13042632,13043287,13043765,13044295,13044679,13045170,13045448,13045724,13045995,13046254,13046766,13046968,13047253,13047449,13047777,13047985,13048309,13048495,13048737,13048967,13049291,13049408,13049518,13049737,13049844,13049959,13050085,13050192,13050307,13050537,13050628,13051121,13051406,13051666,13052108,13052938,13053763,13054565,13055302,13056112,13056838,13057721,13058474,13058897,13059353,13060222,13061370,13062815,13063940,13065275,13066393,13067863,13069409,13070931,13072354,13073608,13074802,13075578,13076592,13077658,13079066,13080730,13082420,13083659,13085243,13086773,13087571,13088317,13088950,13089593,13089941,13090239,13090969,13091491,13092422,13093138,13093559,13093980,13094585,13094951,13095301,13095656,13096188,13096414,13096712,13097160,13097658,13097944,13098215,13098526,13098699,13098925,13099160,13099305,13099718,13100077,13100873,13102236,13102886,13103295,13103729,13104093,13104520,13105341,13105746,13106280,13106565,13107114,13107375,13107897,13108646,13109727,13110484,13111184,13111845,13112327,13112796,13113453,13114174,13114379,13114981,13115561,13116101,13116775,13117585,13118013,13118475,13118855,13119311,13119746,13120174,13120604,13120642,13120679,13120717,13120878,13121080,13121397,13121637,13121775,13121967,13122176,13122358,13122527,13122879,13123196,13123524,13123830,13124119,13124303,13124384,13125556,13126952,13128019,13129345,13130643,13131784,13132575,13133673,13134329,13134779,13135350,13136388,13137669,13138302,13139889,13141479,13142899,13144346,13145925,13147390,13148936,13150393,13151750,13153331,13154800,13156292,13157794,13159194,13160737,13162272,13163751,13165199,13166673,13168144,13169489,13170865,13172258,13173798,13175353,13176935,13178374,13179962,13181626,13183163,13184877,13186527,13188208,13189962,13191165,13192269,13193295,13194326,13195509,13196960,13198839,13200561,13202336,13204041,13205725,13207428,13209190,13210877,13212624,13214346,13216056,13217790,13219552,13221323,13223071,13224800,13226353,13228036,13229684,13231313,13233024,13234738,13236450,13238171,13239878,13241555,13243218,13244874,13246551,13248180,13249747,13251391,13252981,13254892,13256512,13258226,13259861,13261510,13263165,13264840,13266587,13268346,13270176,13271969,13273788,13275631,13277456,13279207,13280895,13282589,13284344,13286144,13287971,13289749,13291486,13293126,13294954,13296761,13298424,13300238,13301992,13303715,13305425,13307053,13308701,13310264,13312125,13313680,13315358,13316970,13318545,13320179,13321789,13323480,13325137,13326831,13328492,13330203,13331925,13333599,13335334,13337100,13338815,13340455,13342228,13343934,13345656,13347371,13349014,13350649,13352357,13354013,13355675,13357289,13358913,13360504,13362045,13363515,13365032,13366752,13368085,13369262,13370203,13371013,13371520,13372675,13374056,13375466,13376928,13378175,13379202,13380425,13381653,13382877,13384276,13385607,13386909,13388206,13389462,13390719,13391813,13392762,13393591,13394431,13395318,13396237,13396897,13397579,13398531,13399612,13400607,13401794,13402992,13404820,13406248,13407696,13409065,13410448,13412040,13413422,13414918,13416398,13417990,13419377,13420712,13421936,13423244,13423527,13423739,13424122,13424343,13424573,13425253,13426297,13427699,13428913,13429814,13431080,13432421,13433553,13435142,13436824,13437946,13439247,13440870,13442099,13442961,13444306,13445594,13447240,13448435,13450060,13451543,13453146,13454774,13456397,13457782,13459031,13460631,13461971,13463718,13464956,13466436,13468229,13469431,13471160,13472756,13474093,13475569,13476866,13478310,13479785,13481355,13483104,13484361,13485522,13487211,13488913,13490228,13491928,13493196,13494608,13496073,13497678,13499305,13500704,13502147,13503727,13505121,13506891,13508231,13509837,13511349,13512629,13514135,13515656,13517023,13518467,13519776,13521380,13522886,13524588,13526023,13527632,13529333,13530364,13531921,13533372,13535006,13536031,13537527,13539145,13540786,13542183,13543725,13545184,13546451,13548173,13549687,13550881,13552201,13553708,13555171,13556358,13557866,13559317,13560729,13562030,13563699,13565289,13566975,13568597,13569913,13571079,13572430,13574006,13575364,13576824,13578384,13580125,13581449,13582871,13584389,13586070,13587514,13589134,13590888,13592516,13594193,13595944,13597466,13599140,13600323,13602185,13603707,13605092,13606689,13608312,13609727,13611271,13612877,13614438,13615869,13617459,13619174,13620709,13621883,13623602,13625345,13626704,13628141,13629653,13631508,13633366,13634735,13636565,13637811,13639555,13641363,13642847,13644493,13646395,13648224,13650119,13652162,13654210,13656235,13658274,13660306,13662335,13664358,13666383,13668407,13670434,13672488,13674533,13676581,13678628,13680648,13682646,13684485,13686499,13688512,13690548,13692591,13694638,13696684,13698721,13700762,13702786,13704814,13706826,13708868,13710906,13712957,13715000,13717036,13719072,13721098,13723105,13725125,13727069,13729046,13731092,13733148,13735202,13737223,13739255,13741306,13743326,13745329,13747319,13749322,13751319,13753304,13755312,13757316,13759334,13761366,13763404,13765436,13767438,13769466,13771466,13773452,13775444,13777452,13779459,13781466,13783511,13785539,13787577,13789592,13791581,13793572,13795558,13797539,13799548,13801548,13803596,13805644,13807676,13809707,13811716,13813699,13815744,13817756,13819755,13821803,13823834,13825880,13827933,13829975,13832011,13834050,13836098,13838127,13840175,13842165,13844189,13846216,13848253,13850223,13852215,13854214,13856167,13858181,13860144,13862156,13864127,13866054,13868030,13869993,13871969,13873951,13875954,13877911,13879896,13881884,13883871,13885829,13887819,13889791,13891789,13893767,13895743,13897709,13899691,13901662,13903682,13905640,13907605,13909584,13911576,13913561,13915550,13917512,13919484,13921472,13923478,13925464,13927464,13929434,13931442,13933434,13935411,13937400,13939302,13941274,13943267,13945257,13947222,13949228,13951203,13953200,13955147,13957128,13959083,13961069,13963058,13965054,13967064,13969038,13971031,13973035,13975050,13977049,13979052,13981049,13983020,13984964,13986977,13988981,13990981,13992918,13994854,13996894,13998931,14000861,14002880,14004911,14006939,14008888,14010903,14012917,14014924,14016894,14018924,14020910,14022943,14024989,14027017,14029011,14031044,14033071,14035091,14037086,14039067,14041068,14043093,14045109,14047113,14049026,14050890,14052931,14054982,14057009,14059010,14060938,14062850,14064811,14066682,14068424,14070391,14072287,14074132,14075933,14077816,14079743,14081716,14083718,14085671,14087517,14089409,14091373,14093119,14095022,14096957,14098913,14100828,14102835,14104729,14106664,14108567,14110469,14112376,14114232,14116196,14118190,14120108,14122046,14123952,14125872,14127726,14129579,14131445,14133329,14135312,14137301,14139206,14141215,14143246,14145051,14146969,14148746,14150762,14152570,14154528,14156481,14158445,14160357,14162380,14164373,14166243,14168116,14169892,14171829,14173791,14175687,14177668,14179568,14181497,14183428,14185392,14187337,14189174,14191159,14193156,14194997,14196823,14198623,14200387,14202149,14204023,14205914,14207838,14209609,14211537,14213372,14215241,14217240,14219150,14221086,14223014,14224890,14226799,14228658,14230592,14232481,14234412,14236275,14238247,14240208,14242099,14244056,14245912,14247897,14249803,14251667,14253590,14255428,14257273,14259159,14261015,14262926,14264762,14266605,14268186,14269906,14271353,14273038,14274935,14276581,14278542,14280507,14282443,14284424,14286442,14288406,14290373,14292316,14294274,14296278,14298246,14300200,14302188,14303772,14305166,14306499,14307921,14309332,14310820,14312346,14313744,14315335,14316858,14318336,14319937,14321547,14323275,14324879,14326489,14328476,14330477,14332424,14334403,14336349,14338341,14340169,14342077,14344046,14346044,14348047,14349939,14351958,14353881,14355777,14357657,14359502,14361488,14363520,14365528,14367443,14369441,14371386,14373245,14375161,14377045,14379016,14381019,14383009,14384974,14386992,14388939,14390778,14392688,14394591,14396555,14398539,14400491,14402445,14404358,14406252,14408089,14409981,14411890,14413854,14415860,14417785,14419753,14421686,14423657,14425445,14427370,14429310,14431307,14433305,14435261,14437241,14439209,14441135,14443007,14444901,14446855,14448814,14450745,14452705,14454595,14456569,14458510,14460415,14462347,14464172,14465923,14467613,14469259,14470925,14472653,14474366,14476108,14477813,14479505,14481207,14482858,14484597,14486321,14488040,14489760,14491431,14493102,14494776,14496477,14498210,14499959,14501610,14503216,14504896,14506614,14508311,14510036,14511790,14513410,14514994,14516636,14518316,14520073,14521746,14523416,14525076,14526680,14528317,14530054,14531771,14533536,14535194,14536867,14538541,14540200,14541975,14543750,14545483,14547094,14548722,14550477,14552274,14554141,14555933,14557676,14559435,14561193,14563068,14564903,14566758,14568577,14570389,14572201,14573993,14575714,14577584,14579224,14580910,14582546,14584301,14586081,14587702,14589280,14590986,14592763,14594430,14596084,14597906,14599506,14601219,14603003,14604693,14606209,14607952,14609679,14611340,14613028,14614809,14616602,14618324,14620007,14621812,14623623,14625333,14627021,14628757,14630490,14632221,14634023,14635790,14637570,14639540,14641444,14643453,14645418,14647396,14649330,14651269,14653210,14655118,14657099,14659078,14661043,14663047,14665044,14667023,14669020,14671035,14673024,14674982,14676946,14678919,14680886,14682894,14684901,14686895,14688860,14690823,14692803,14694762,14696741,14698765,14700758,14702762,14704716,14706703,14708681,14710652,14712623,14714594,14716569,14718535,14720499,14722486,14724446,14726418,14728399,14730350,14732326,14734280,14736228,14738198,14740156,14742131,14744091,14746066,14748019,14750002,14751950,14753926,14755867,14757856,14759774,14761766,14763680,14765676,14767603,14769587,14771519,14773502,14775429,14777408,14779339,14781318,14783251,14785225,14787158,14789087,14790986,14792900,14794829,14796730,14798627,14800542,14802454,14804364,14806301,14808185,14810098,14812008,14813901,14815823,14817729,14819632,14821488,14823444,14825327,14827158,14829089,14830968,14832791,14834721,14836619,14838444,14840375,14842273,14844103,14846029,14847933,14849757,14851684,14853589,14855422,14857326,14859242,14861076,14862970,14864896,14866712,14868586,14870481,14872224,14874100,14875991,14877752,14879632,14881501,14883292,14885177,14887011,14888812,14890706,14892518,14894350,14896237,14898055,14899876,14901761,14903550,14905380,14907277,14909066,14910939,14912847,14914655,14916548,14918406,14920266,14922177,14924005,14925859,14927773,14929579,14931460,14933325,14935164,14937078,14938914,14940757,14942667,14944481,14946372,14948254,14950145,14951990,14953864,14955750,14957596,14959478,14961364,14963208,14965089,14966979,14968819,14970697,14972590,14974434,14976311,14978208,14980050,14981924,14983828,14985671,14987540,14989447,14991288,14993151,14995059,14996928,14998800,15000676,15002555,15004431,15006290,15008172,15010061,15011911,15013805,15015707,15017546,15019434,15021340,15023172,15025067,15026980,15028808,15030711,15032619,15034452,15036368,15038274,15040144,15042068,15043986,15045899,15047823,15049760,15051676,15053585,15055499,15057402,15059323,15061242,15063159,15065071,15067021,15068934,15070847,15072763,15074718,15076721,15078710,15080698,15082665,15084664,15086649,15088634,15090617,15092615,15094594,15096560,15098459,15100436,15102302,15104251,15106121,15108114,15109956,15111902,15113760,15115645,15117599,15119511,15121426,15123408,15125334,15127323,15129250,15131233,15133170,15135136,15137074,15139041,15140988,15142948,15144916,15146897,15148855,15150817,15152719,15154608,15156502,15158442,15160288,15162267,15164095,15166071,15167922,15169853,15171747,15173633,15175531,15177418,15179365,15181205,15183185,15184933,15186856,15188675,15190549,15192395,15194241,15196132,15197937,15199867,15201659,15203549,15205413,15207252,15209114,15210926,15212838,15214630,15216558,15218427,15220479,15222529,15224557,15226555,15228576,15230594,15232617,15234631,15236669,15238684,15240725,15242754,15244781,15246820,15248841,15250817,15252785,15254747,15256771,15258820,15260868,15262917,15264932,15266977,15269010,15271013,15273020,15275043,15277070,15279124,15281147,15283201,15285251,15287297,15289325,15291312,15293269,15295286,15297309,15299318,15301333,15303363,15305412,15307388,15309381,15311399,15313381,15315337,15317317,15319333,15321373,15323402,15325416,15327428,15329416,15331439,15333438,15335435,15337403,15339400,15341406,15343438,15345472,15347501,15349507,15351514,15353535,15355520,15357505,15359502,15361477,15363468,15365509,15367546,15369576,15371614,15373644,15375685,15377672,15379686,15381696,15383688,15385681,15387706,15389733,15391788,15393831,15395887,15397930,15399963,15401966,15403981,15406022,15408043,15410095,15412149,15414170,15416200,15418211,15420221,15422204,15424192,15426199,15428177,15430178,15432164,15434123,15436101,15438091,15440005,15441987,15443946,15445919,15447900,15449883,15451893,15453864,15455813,15457819,15459779,15461671,15463475,15465437,15467454,15469465,15471456,15473464,15475422,15477385,15479372,15481374,15483368,15485344,15487224,15489129,15491029,15492989,15494968,15496870,15498790,15500735,15502681,15504643,15506529,15508378,15510327,15512334,15514314,15516160,15518071,15519993,15521947,15523869,15525711,15527605,15529489,15531351,15533302,15535262,15537199,15539159,15541070,15542917,15544828,15546672,15548578,15550528,15552454,15554449,15556377,15558244,15560077,15561947,15563854,15565820,15567806,15569711,15571514,15573430,15575285,15577220,15579176,15581116,15582997,15584866,15586683,15588343,15590278,15592170,15594050,15595973,15597832,15599706,15601589,15603489,15605343,15607240,15609155,15610991,15612860,15614670,15616463,15618368,15620359,15622308,15624235,15626124,15628001,15629825,15631684,15633526,15635356,15637274,15639225,15641174,15643152,15645067,15646939,15648787,15650675,15652671,15654594,15656629,15658654,15660660,15662538,15664526,15666541,15668548,15670553,15672522,15674484,15676455,15678492,15680471,15682469,15684192,15686172,15688173,15690222,15692173,15693949,15695951,15697959,15699984,15701946,15703751,15705763,15707774,15709798,15711803,15713786,15715583,15717536,15719551,15721576,15723583,15725595,15727618,15729660,15731659,15733664,15735675,15737605,15739620,15741620,15743605,15745569,15747587,15749622,15751590,15753454,15755203,15757052,15758990,15760987,15762978,15764956,15766972,15768928,15770910,15772851,15774815,15776775,15778732,15780617,15782585,15784528,15786496,15788445,15790428,15792425,15794445,15796424,15798405,15800359,15802316,15804290,15806301,15808245,15810076,15812035,15813972,15815965,15817819,15819732,15821689,15823618,15825502,15827460,15829458,15831457,15833428,15835413,15837407,15839440,15841439,15843431,15845349,15847234,15849189,15851099,15853050,15854940,15856921,15858866,15860784,15862745,15864719,15866732,15868724,15870720,15872688,15874662,15876645,15878648,15880638,15882629,15884604,15886534,15888507,15890453,15892412,15894354,15896310,15898303,15900260,15902256,15904290,15906280,15908279,15910272,15912223,15914246,15916195,15918142,15920117,15922101,15924032,15926063,15927960,15929920,15931911,15933908,15935887,15937830,15939798,15941799,15943802,15945818,15947701,15949692,15951649,15953684,15955619,15957638,15959602,15961591,15963617,15965582,15967571,15969595,15971563,15973569,15975574,15977514,15979558,15981491,15983447,15985446,15987370,15989399,15991398,15993352,15995262,15997246,15999186,16001168,16003082,16005042,16007013,16008972,16010914,16012880,16014863,16016881,16018813,16020790,16022718,16024707,16026639,16028590,16030544,16032494,16034379,16036236,16038146,16040146,16042076,16043982,16045931,16047788,16049730,16051677,16053615,16055559,16057567,16059526,16061479,16063494,16065464,16067434,16069451,16071341,16073323,16075263,16077263,16079296,16081282,16083308,16085334,16087370,16089254,16091271,16093249,16095277,16097325,16099366,16101395,16103430,16105438,16107399,16109411,16111378,16113410,16115441,16117470,16119485,16121470,16123503,16125509,16127548,16129556,16131597,16133637,16135654,16137702,16139741,16141756,16143714,16145732,16147698,16149730,16151766,16153798,16155848,16157896,16159922,16161893,16163920,16165897,16167941,16169965,16172005,16174042,16176078,16178099,16180046,16181985,16183919,16185738,16187697,16189690,16191672,16193664,16195690,16197697,16199704,16201730,16203570,16205577,16207552,16209526,16211491,16213499,16215508,16217429,16219443,16221361,16223326,16225305,16227316,16229324,16231237,16233244,16235163,16237113,16238978,16240783,16242370,16244095,16245601,16247154,16248833,16250288,16251770,16253363,16254743,16256252,16257592,16259065,16260452,16261539,16263155,16264289,16265713,16266923,16268513,16269559,16270884,16272182,16273157,16274397,16275851,16277281,16278377,16279735,16281263,16282162,16283247,16284628,16285863,16287168,16288595,16289751,16291150,16292288,16293868,16295042,16296396,16297874,16299303,16300727,16302118,16303675,16305120,16306714,16308223,16309552,16310980,16312483,16313879,16315123,16316723,16317968,16319360,16320452,16322079,16323259,16324733,16326043,16326909,16328528,16329883,16331222,16332375,16333616,16335238,16336184,16337268,16338672,16339965,16341434,16342626,16343888,16345198,16346355,16348016,16349285,16350739,16352248,16353505,16355149,16356542,16358043,16359573,16360997,16362619,16363895,16365374,16366922,16368143,16369658,16370958,16372304,16373631,16374769,16376391,16377620,16379054,16380317,16381180,16382802,16384216,16385528,16386731,16387960,16389560,16390420,16391588,16393010,16394242,16395742,16396852,16398159,16399479,16400651,16402285,16403589,16405073,16406552,16407789,16409450,16410808,16412327,16413887,16415231,16416804,16418121,16419627,16421113,16422226,16423814,16425037,16426476,16427794,16429111,16430612,16431739,16433200,16434404,16435277,16436869,16438257,16439417,16440646,16441952,16443424,16444310,16445567,16446934,16448034,16449594,16450715,16452107,16453244,16454893,16455991,16457308,16458769,16460220,16461597,16463095,16464678,16466111,16467681,16469060,16470507,16471883,16473367,16474856,16476062,16477684,16478864,16480285,16481430,16483006,16484176,16485660,16486983,16487928,16489328,16490697,16492134,16493223,16494570,16496128,16497177,16498217,16499564,16500908,16502184,16503600,16504783,16506094,16507237,16508882,16510087,16511607,16513113,16514402,16516012,16517325,16518832,16520365,16521785,16523444,16524685,16526153,16527653,16529023,16530480,16531852,16533196,16534543,16535691,16537264,16538450,16539902,16541134,16541991,16543580,16544936,16546274,16547442,16548729,16550333,16551153,16552401,16553848,16555040,16556527,16557676,16559021,16560336,16561511,16563159,16564444,16565963,16567483,16568756,16570382,16571745,16573324,16574915,16576298,16577887,16579242,16580794,16582335,16583579,16584938,16586362,16587652,16588950,16590095,16591673,16592864,16594291,16595590,16596424,16598001,16599353,16600675,16601830,16603066,16604651,16605484,16606707,16608116,16609300,16610723,16611835,16613142,16614487,16615735,16617337,16618458,16619948,16621498,16622884,16624488,16625900,16627464,16629018,16630481,16632074,16633432,16634981,16636553,16637811,16639061,16640643,16641927,16643231,16644376,16645972,16647151,16648553,16649850,16650778,16652126,16653549,16654975,16656046,16657416,16658968,16659893,16660968,16662331,16663599,16664723,16666204,16667355,16668752,16669951,16671659,16672764,16674121,16675674,16677130,16678527,16680106,16681646,16683078,16684637,16686110,16687654,16689007,16690521,16691989,16693142,16694825,16696001,16697444,16698624,16700230,16701424,16702799,16704193,16705181,16706451,16707849,16709292,16710412,16711704,16712980,16714421,16715330,16716670,16718115,16719317,16720938,16722009,16723397,16724601,16726259,16727500,16728882,16730331,16731739,16733125,16734664,16736250,16737741,16739319,16740852,16742335,16743762,16745312,16746758,16747919,16749604,16750827,16752270,16753450,16755039,16756257,16757637,16759035,16760041,16761225,16762661,16764085,16765215,16766508,16767675,16769308,16770113,16771398,16772896,16774226,16775864,16776949,16778317,16779639,16781085,16782551,16783885,16785405,16786956,16788200,16789896,16791514,16793121,16794742,16796155,16797892,16799087,16800338,16801628,16802967,16804286,16806094,16807608,16809054,16810231,16811478,16813069,16814560,16816038,16817844,16819252,16820572,16821828,16823386,16824807,16826263,16828091,16829541,16830979,16832269,16833567,16835052,16836439,16837836,16839676,16841097,16842702,16844088,16845345,16846816,16848057,16849325,16850735,16852497,16853588,16854833,16856116,16857535,16859183,16860515,16861886,16863310,16864893,16866278,16867972,16869689,16871438,16873356,16874949,16876913,16878802,16880598,16882351,16884209,16886033,16887808,16889722,16891123,16892604,16894289,16895968,16897735,16899400,16901072,16902671,16904263,16905016,16906763,16908757,16910722,16912492,16914061,16914817,16916622,16918472,16920273,16922120,16923933,16925680,16927545,16928853,16930488,16932367,16933913,16935832,16937707,16939589,16941423,16943082,16944859,16946704,16948651,16950645,16952254,16954215,16956106,16958015,16959909,16961793,16963542,16965072,16966927,16968768,16970651,16972517,16974291,16975926,16977702,16979230,16981045,16982681,16984355,16986010,16987585,16989157,16990514,16992233,16994167,16996193,16998199,17000149,17002094,17004114,17006146,17008118,17010075,17012113,17014142,17016121,17018077,17020121,17022159,17024098,17026111,17028028,17029973,17031957,17033946,17035926,17037919,17039916,17041945,17043959,17045962,17047973,17049999,17052026,17054038,17055959,17057826,17059870,17061924,17063952,17065902,17067888,17069803,17071712,17073666,17075560,17077475,17079437,17081308,17083258,17085146,17087047,17088969,17090816,17092751,17094680,17096540,17098472,17100447,17102326,17104207,17106135,17108043,17109924,17111256,17113152,17115031,17116779,17118201,17119598,17120847,17122612,17124246,17125904,17127517,17129368,17130860,17132473,17134045,17135629,17137099,17138666,17140352,17142044,17143503,17144667,17146125,17147823,17149271,17150461,17152146,17154046,17155849,17157579,17159352,17161150,17162737,17164674,17166529,17168229,17169900,17171592,17173328,17174898,17176634,17178382,17179894,17181387,17182878,17184703,17185977,17187319,17188598,17190148,17191784,17193297,17194452,17195603,17197220,17198865,17200386,17201773,17203786,17205748,17207722,17209720,17211680,17213539,17215312,17217034,17218890,17220783,17222632,17224200,17226087,17228099,17229916,17231802,17233712,17235544,17237326,17239028,17240875,17242641,17244067,17245546,17247313,17248715,17250100,17251779,17253305,17254753,17256470,17257977,17259758,17261229,17262855,17264487,17266317,17267788,17269592,17271150,17272828,17274266,17275943,17277712,17279202,17280964,17282249,17283882,17285262,17287096,17289012,17290804,17292538,17293899,17295253,17296990,17298680,17300300,17301778,17303359,17305071,17306690,17308199,17309860,17311405,17313099,17314719,17315982,17317585,17319058,17320666,17322356,17323597,17325223,17326679,17328379,17330040,17331388,17332883,17334470,17336041,17337198,17338418,17339817,17340989,17342456,17343702,17345277,17346396,17347768,17349207,17350516,17352029,17353295,17354595,17356110,17357561,17359062,17360749,17362686,17364132,17365873,17367670,17369539,17371404,17373354,17374902,17376845,17378371,17379891,17381816,17383437,17385366,17386596,17388504,17390322,17391803,17393491,17395195,17396956,17398517,17399999,17401601,17403176,17404708,17406310,17407678,17409291,17410776,17412320,17413860,17415390,17416907,17418451,17419965,17421488,17423035,17424660,17426489,17428171,17430121,17431874,17433724,17435290,17436856,17438313,17439998,17441588,17443596,17445438,17447310,17449161,17451006,17452998,17454870,17456767,17457299,17457937,17458362,17458912,17459715,17460350,17461003,17461576,17462510,17464542,17466508,17468497,17470431,17472377,17474336,17476308,17478266,17480158,17481801,17483439,17485075,17486834,17488381,17489970,17491742,17493295,17494998,17496572,17498306,17499734,17501232,17502695,17504256,17505608,17507051,17508502,17510140,17511519,17512797,17513968,17515457,17516836,17518412,17519870,17521191,17522711,17524171,17525621,17527206,17528621,17529991,17531390,17532788,17534219,17535604,17536988,17538656,17540407,17542193,17544029,17545917,17547796,17549694,17551443,17553160,17554954,17556593,17558335,17560124,17561946,17563723,17565462,17567148,17568815,17569660,17570479,17571308,17572076,17573841,17575563,17577195,17578826,17580533,17582121,17583780,17585432,17587092,17588844,17590506,17592247,17593900,17595629,17597407,17599213,17601131,17602459,17604251,17605813,17607619,17608732,17610533,17612100,17613995,17615782,17617631,17619397,17621246,17623089,17624862,17626708,17628569,17630048,17631100,17632170,17633189,17634271,17635345,17636407,17637437,17638788,17640313,17641868,17643402,17644989,17646545,17648097,17649661,17651192,17652832,17654281,17655894,17657480,17659148,17660228,17661260,17662312,17663378,17664848,17666270,17667985,17669800,17671343,17672631,17673768,17675299,17676718,17677791,17679199,17680768,17682191,17683694,17685312,17686913,17688460,17690067,17691674,17693072,17694418,17695208,17696227,17696987,17697645,17698595,17699291,17700607,17701993,17703430,17703927,17704480,17705244,17705789,17706649,17707193,17708049,17708764,17709646,17710161,17710670,17711596,17712250,17713112,17713641,17714502,17715194,17715852,17716556,17717098,17718015,17718745,17719681,17720149,17720854,17721503,17722201,17722821,17723121,17723752,17723960,17724513,17724776,17725031,17725452,17725655,17726309,17726495,17727033,17727228,17727705,17727813,17727851,17728450,17728628,17729258,17729471,17730280,17731727,17733149,17734410,17735637,17736864,17738077,17739344,17740331,17741352,17742333,17743300,17744283,17745264,17746254,17747527,17748874,17750249,17751641,17753118,17754596,17756017,17757428,17758835,17760435,17761892,17763379,17764894,17766494,17768116,17769594,17771121,17772704,17774164,17775565,17776992,17778421,17779827,17781210,17782704,17784117,17785461,17786879,17788277,17789623,17791041,17791973,17792904,17793846,17794762,17795875,17796832,17797772,17798732,17799790,17800674,17801644,17802532,17803755,17805126,17806558,17807898,17809333,17810281,17811189,17812129,17813073,17814724,17816314,17817945,17819524,17821068,17822592,17824120,17825716,17827416,17828787,17830168,17831518,17832863,17834080,17835390,17836718,17838040,17839657,17841210,17842766,17844009,17845544,17846996,17848265,17849698,17851249,17852805,17854435,17856013,17857624,17859303,17861022,17862749,17864472,17866045,17867262,17868650,17870013,17871436,17872861,17874046,17875458,17876877,17878264,17879854,17881292,17882908,17884328,17886003,17887627,17889297,17890934,17892583,17894212,17895864,17897530,17899157,17900888,17902551,17904192,17905843,17907340,17908966,17910600,17912216,17913890,17915486,17917171,17918796,17920455,17922015,17923660,17925323,17926898,17928564,17930234,17931923,17933603,17935166,17936808,17938492,17940124,17941728,17943468,17945087,17946709,17948327,17950172,17951821,17953449,17955082,17956781,17958608,17960289,17961962,17963618,17965431,17967057,17968733,17970382,17972092,17973027,17974000,17974953,17975903,17977490,17978977,17980525,17982000,17983591,17984833,17986078,17987422,17988829,17989964,17991106,17992373,17993677,17995013,17996019,17996909,17997983,17999374,18000560,18001659,18002744,18004006,18005107,18005991,18006981,18008081,18009651,18011153,18012685,18014230,18015753,18017275,18018792,18020310,18021974,18023375,18024766,18026136,18027530,18028914,18030285,18031655,18033080,18034762,18036263,18037823,18039370,18040969,18042535,18044081,18045627,18047371,18048954,18050559,18052215,18053858,18055457,18057086,18058705,18060355,18062049,18063504,18064909,18066317,18067757,18069227,18070639,18072000,18073706,18075478,18077216,18078920,18080617,18082343,18084065,18085789,18087498,18089356,18091105,18092801,18094446,18096175,18097889,18099579,18101257,18103097,18104157,18105059,18106370,18107432,18108529,18109571,18110821,18111927,18112985,18114050,18114993,18115653,18116281,18117028,18117775,18119639,18121281,18122999,18124680,18126401,18128071,18129792,18131482,18133335,18135113,18136841,18138518,18140154,18141861,18143541,18145284,18146997,18148890,18150626,18152401,18154146,18155934,18157651,18159419,18161168,18163040,18164804,18166522,18168181,18169822,18171515,18173171,18174895,18176556,18178164,18179640,18181067,18182485,18184051,18185037,18186038,18187036,18188426,18190238,18192014,18193839,18195692,18197353,18199179,18200967,18202821,18204546,18205773,18206959,18208191,18209907,18211155,18212153,18213218,18214752,18216444,18218071,18219667,18221280,18222778,18224419,18226005,18227609,18229260,18230775,18232214,18233647,18234978,18236548,18237989,18239430,18240814,18242362,18244006,18245435,18247089,18248351,18249836,18251294,18252812,18254251,18255920,18257554,18259148,18260801,18262420,18264031,18265624,18267325,18268885,18270368,18271807,18273244,18274633,18276092,18277508,18278912,18280512,18282308,18284097,18285940,18287821,18289518,18291333,18293152,18295014,18296686,18298321,18299974,18301602,18303161,18304832,18306486,18308100,18309814,18311413,18312883,18314336,18315847,18317284,18318768,18320199,18321663,18323258,18325093,18326926,18328785,18330496,18332369,18334168,18336031,18337832,18339578,18341228,18342824,18344449,18345961,18347607,18349223,18350828,18352506,18354052,18355518,18356961,18358350,18359858,18361339,18362795,18364245,18365971,18367769,18369593,18371464,18373139,18374997,18376820,18378665,18380446,18381424,18382836,18384131,18384824,18385801,18386636,18387336,18388505,18389189,18389978,18391714,18392393,18393079,18393773,18395100,18396347,18397334,18398584,18399929,18401013,18401883,18403157,18404263,18405535,18406858,18408262,18410014,18411474,18412486,18413504,18415289,18416846,18418533,18420182,18421867,18423496,18425011,18426739,18428368,18429559,18430889,18432212,18433402,18435010,18436340,18437347,18438352,18439366,18440709,18441818,18442941,18444052,18445152,18446616,18448658,18450696,18452697,18454697,18456723,18458730,18460741,18462720,18464752,18466790,18468831,18470837,18472841,18474855,18476864,18478823,18480818,18482839,18484878,18486880,18488882,18490904,18492886,18494895,18496851,18498882,18500905,18502950,18504946,18506925,18508941,18510947,18512913,18514927,18516977,18518865,18520784,18522677,18524575,18526485,18528348,18530204,18532091,18533966,18535868,18537754,18539616,18541475,18543310,18545138,18547033,18548929,18550597,18552277,18553940,18555612,18557289,18558938,18560577,18562214,18564013,18565668,18567318,18568979,18570616,18572283,18573917,18575523,18577270,18578704,18580146,18581588,18582991,18584448,18585878,18587280,18588646,18590256,18591676,18593136,18594746,18596147,18597614,18599110,18600730,18602272,18603607,18605182,18606726,18608332,18609750,18611356,18612832,18614518,18615829,18617231,18618627,18620354,18622193,18623769,18625334,18627006,18628570,18630143,18631650,18633344,18635020,18636555,18638126,18639795,18641506,18643223,18644775,18646368,18648019,18649553,18651084,18652644,18654222,18655765,18657295,18658858,18660375,18661895,18663397,18664924,18666667,18668196,18669868,18671560,18673195,18674769,18676504,18678366,18679918,18681427,18683292,18685223,18686982,18688685,18690416,18692369,18694301,18696235,18698205,18700142,18702095,18704007,18705925,18707818,18709625,18711467,18713359,18715355,18717219,18719089,18720958,18722784,18724563,18726329,18728106,18729901,18731920,18733906,18735887,18737842,18739767,18741670,18743598,18745510,18747525,18749379,18751272,18753156,18754989,18756791,18758608,18760405,18762222,18764247,18766236,18768228,18770201,18772145,18774079,18776034,18777954,18779975,18781790,18783603,18785395,18787142,18788921,18790707,18792436,18794220,18796161,18798013,18799819,18801619,18803457,18805289,18807114,18808922,18810742,18812233,18813666,18815128,18816579,18818001,18819454,18820852,18822246,18824042,18826019,18827969,18829982,18831923,18833870,18835745,18837687,18839597,18841501,18843368,18845307,18847281,18849234,18851181,18853108,18855031,18856936,18858864,18860765,18862742,18864297,18865804,18867376,18868978,18870564,18872201,18873734,18875227,18877163,18878964,18880768,18882527,18884302,18886009,18887747,18889463,18891316,18892640,18893978,18895257,18896579,18897968,18899267,18900620,18901994,18903608,18905101,18906550,18908078,18909653,18911188,18912670,18914126,18915630,18917295,18918917,18920505,18922127,18923789,18925305,18926974,18928355,18929691,18931021,18932329,18933579,18934793,18935983,18937309,18939186,18941082,18942948,18944841,18946731,18948611,18950471,18952351,18954313,18956210,18958077,18959927,18961807,18963700,18965603,18967479,18969334,18971130,18972520,18973950,18975300,18976707,18978179,18979649,18981106,18982648,18984371,18986056,18987753,18989484,18991126,18992746,18994331,18995873,18997087,18998621,19000182,19001786,19003419,19005176,19006869,19008561,19010268,19011855,19013302,19014780,19016282,19017703,19019030,19020439,19021857,19023538,19025015,19026526,19028035,19029504,19031050,19032557,19034080,19035528,19037202,19038692,19040225,19041703,19042600,19044077,19045612,19047126,19048840,19050816,19052738,19054702,19056165,19057581,19058982,19060384,19061558,19062978,19064382,19065790,19067307,19068475,19069635,19070721,19071684,19072820,19073953,19075074,19076324,19077840,19079255,19080752,19082794,19084683,19086586,19088479,19090382,19092279,19094184,19096067,19097702,19099378,19100826,19102307,19103770,19104952,19105893,19106730,19107590,19108481,19109299,19110188,19110988,19111851,19112813,19113740,19114552,19115453,19116440,19117425,19118396,19119581,19120913,19122181,19123470,19124793,19125232,19125726,19126358,19126984,19127221,19127659,19127826,19128830,19130183,19130885,19131891,19132634,19133959,19135009,19135969,19137304,19137708,19137970,19138413,19138796,19139395,19140717,19142223,19143704,19145579,19147414,19149181,19151000,19152824,19154645,19156424,19158176,19159991,19161611,19163266,19164908,19166440,19168067,19169675,19171305,19172852,19174489,19175800,19177126,19178482,19179816,19181525,19183199,19184884,19186567,19188231,19189891,19191563,19193214,19194856,19196546,19198228,19199887,19201258,19203099,19204931,19206770,19208531,19210323,19212156,19214014,19215785,19217625,19219117,19220552,19222028,19223473,19225226,19227126,19228958,19230817,19232667,19234520,19236379,19238258,19240120,19241951,19243506,19245324,19246323,19247386,19248561,19249721,19251202,19253204,19255208,19257158,19259118,19261072,19263030,19264908,19266797,19268700,19270663,19272601,19274530,19276465,19278392,19280297,19282245,19284259,19285934,19287613,19289369,19291197,19293018,19294778,19296430,19298042,19300048,19302096,19304143,19306177,19308225,19310260,19312308,19314364,19316420,19318476,19320527,19322579,19324626,19326668,19328723,19330755,19332807,19334826,19336701,19338614,19340435,19342286,19344133,19345984,19347825,19349736,19351644,19353553,19355419,19357282,19359132,19360985,19362826,19364690,19366467,19367805,19369112,19369853,19370656,19371446,19372028,19372606,19373354,19374200,19375060,19375566,19376070,19376848,19377697,19378607,19379140,19379530,19380341,19381191,19382063,19382588,19383016,19383819,19384700,19385502,19385932,19386780,19387937,19388964,19389915,19390308,19391366,19392506,19393589,19394314,19394753,19395910,19397040,19398245,19398755,19399377,19400576,19401607,19402802,19403508,19404810,19406228,19407790,19409212,19411114,19412165,19413213,19414326,19415493,19416610,19417738,19418764,19419909,19421001,19422176,19423264,19424445,19425594,19426670,19427739,19428861,19430375,19431464,19432556,19433668,19434804,19435881,19436939,19438030,19439052,19440026,19440995,19441934,19443009,19444057,19444854,19445670,19446552,19447782,19448602,19449079,19449636,19450157,19450697,19451255,19451749,19452310,19452845,19453344,19453844,19454322,19454828,19455351,19455875,19456455,19457245,19458739,19460186,19461676,19463189,19464697,19466209,19467736,19469237,19470648,19471690,19472685,19473808,19475443,19476926,19478365,19479731,19481027,19482450,19483959,19485751,19487389,19489079,19490732,19492326,19493954,19495608,19497262,19499056,19500557,19502021,19503514,19505037,19506494,19508043,19509542,19511019,19512427,19513506,19514681,19515946,19517308,19518601,19519916,19521169,19522397,19523765,19525205,19526611,19528041,19529595,19531167,19532667,19534237,19536077,19537132,19538187,19539314,19540473,19541600,19542753,19543798,19544914,19545986,19547143,19548268,19549430,19550571,19551679,19552714,19553820,19555394,19556407,19557498,19558623,19559790,19560831,19561870,19563014,19564044,19565060,19566030,19566976,19568014,19569046,19569859,19570636,19571495,19572797,19573501,19573989,19574547,19575055,19575600,19576136,19576657,19577223,19577708,19578221,19578725,19579204,19579715,19580232,19580749,19581308,19582212,19583970,19585814,19587611,19589367,19591182,19592954,19594743,19596247,19597649,19599069,19600483,19601873,19603463,19604651,19605834,19607110,19608718,19610082,19611379,19612701,19614299,19615370,19616389,19617433,19618475,19620103,19621809,19623395,19625029,19626626,19627933,19629102,19630187,19631500,19632919,19634487,19636149,19637832,19639393,19641100,19642781,19644371,19646021,19647615,19649162,19650299,19651851,19652854,19654496,19656285,19658129,19659996,19661788,19663400,19665088,19666798,19668559,19670172,19671919,19673763,19675360,19676908,19678389,19679960,19681507,19683028,19684608,19686165,19687501,19689135,19690756,19692369,19693972,19695532,19697117,19698681,19700306,19701999,19703587,19705368,19707096,19708453,19710014,19711798,19713534,19715050,19716531,19717528,19718699,19719846,19720970,19722140,19723241,19724333,19725434,19726582,19727713,19728887,19730049,19731164,19732259,19733316,19734407,19735410,19736600,19737767,19738950,19739345,19740314,19741561,19742652,19743599,19744619,19745796,19746939,19748097,19748549,19749473,19750720,19751866,19752832,19753828,19754942,19756143,19757265,19757915,19758759,19759954,19761075,19762061,19763080,19764140,19765381,19766542,19767338,19768070,19769198,19770357,19771437,19772394,19773365,19774611,19775706,19776638,19777252,19778345,19779585,19780706,19782109,19783118,19784206,19785326,19786473,19787527,19788586,19789723,19790744,19791782,19792732,19793679,19794725,19795779,19796596,19797364,19798243,19799503,19800355,19801513,19802646,19803658,19804063,19805277,19806474,19807633,19808552,19809667,19810798,19811967,19813153,19814452,19815570,19816719,19817960,19819061,19820366,19821528,19822688,19823904,19825050,19826322,19827432,19828602,19829815,19830987,19832324,19833417,19834389,19835449,19836738,19837969,19839039,19840054,19841141,19842411,19843659,19844736,19845681,19846799,19848099,19849249,19850305,19851300,19852428,19853936,19854365,19854889,19855552,19856972,19858594,19860393,19862242,19864112,19865916,19867432,19868525,19869031,19869551,19870062,19870605,19871134,19872369,19873581,19874618,19875962,19877456,19878531,19879760,19881253,19882483,19883513,19884831,19886354,19887444,19888663,19890299,19892075,19893912,19895639,19897490,19899239,19901024,19902915,19904670,19906402,19908286,19910018,19911864,19913654,19915408,19917302,19919011,19920841,19922597,19924499,19926235,19928085,19929844,19931583,19933487,19935156,19936977,19938871,19940610,19942374,19944187,19946018,19947735,19949588,19951408,19953136,19955032,19956754,19958509,19960399,19962203,19963968,19965772,19967528,19969380,19971211,19973037,19974711,19976616,19978352,19980185,19981971,19983720,19985607,19987316,19989149,19990994,19992785,19994535,19996354,19998204,19999910,20001694,20003571,20005279,20007189,20008927,20010693,20012591,20014328,20016060,20017877,20019757,20021491,20023301,20025125,20026804,20028798,20029843,20031092,20032199,20033500,20034805,20035935,20037207,20038267,20038952,20039697,20040529,20041432,20041911,20042419,20043209,20044026,20044945,20045522,20045862,20046679,20047545,20048393,20048921,20049367,20050143,20051049,20051836,20052891,20053982,20055019,20056157,20057322,20058437,20059602,20060648,20061783,20062849,20063996,20065077,20066273,20067439,20068511,20069564,20070681,20072107,20073564,20075125,20076364,20077478,20078547,20079749,20080827,20081888,20082998,20084035,20085051,20086031,20086940,20087995,20089025,20089842,20090610,20091451,20092497,20093905,20095330,20097066,20097710,20098224,20098767,20099272,20099832,20100370,20100882,20101447,20101942,20102452,20102961,20103428,20103945,20104466,20104992,20105535,20106497,20108092,20109761,20111337,20113014,20114716,20116336,20117977,20119657,20121326,20123044,20124826,20126466,20128056,20129666,20131349,20133007,20133422,20134075,20135381,20135689,20136149,20136500,20137565,20139074,20141124,20143159,20145175,20147185,20149197,20151197,20153181,20155188,20157204,20159245,20161248,20163266,20165286,20167269,20169277,20171253,20173101,20174465,20175922,20177519,20178772,20180130,20181613,20182738,20183857,20184977,20186100,20187223,20188346,20189466,20189952,20190033,20191499,20193503,20195509,20197390,20199285,20201173,20203017,20204897,20206789,20208684,20210570,20212519,20214412,20216373,20218293,20220154,20222066,20223988,20225877,20227724,20229642,20231602,20233481,20235416,20237357,20239281,20241006,20242784,20244609,20246336,20248328,20250240,20252108,20253994,20255877,20257802,20259687,20261580,20263452,20265424,20267199,20269029,20270894,20272805,20274626,20276155,20277020,20277563,20278020,20278736,20279379,20280021,20280667,20281270,20282041,20282837,20283517,20284334,20285149,20285999,20286709,20287461,20287500,20288736,20288992,20289946,20291144,20292042,20292825,20293098,20293498,20293776,20295285,20296743,20298231,20299845,20301470,20303052,20304596,20306044,20307605,20309215,20310843,20312484,20314026,20315542,20317130,20318681,20320198,20322081,20323732,20325266,20326788,20328459,20330407,20332240,20334018,20335777,20337642,20339496,20341348,20343186,20345079,20346561,20347846,20349145,20350508,20351820,20353194,20354501,20355756,20357357,20358822,20360275,20361710,20363190,20364681,20366139,20367596,20369025,20370661,20372101,20373546,20374995,20376495,20377960,20379409,20380854,20382461,20383924,20385385,20386853,20388316,20389826,20391293,20392745,20394186,20395806,20397229,20398630,20400025,20401542,20402989,20404438,20405844,20407434,20408831,20410240,20411606,20413045,20414517,20415958,20417386,20418799,20420391,20421807,20423177,20424613,20426090,20427552,20428961,20430331,20431842,20433363,20434738,20436154,20437593,20439055,20440486,20441912,20443300,20444929,20446344,20447738,20449206,20450701,20452170,20453621,20455024,20456446,20458098,20459567,20461017,20462497,20463975,20465483,20466975,20468360,20469973,20471335,20472667,20474013,20475398,20476729,20478085,20479399,20480682,20482268,20483613,20484904,20486248,20487634,20488978,20490288,20491569,20493112,20494452,20495735,20497051,20498405,20499684,20501049,20502357,20503578,20505207,20506637,20508084,20509550,20511021,20512523,20513978,20515403,20516939,20518442,20519841,20521275,20522773,20524252,20525725,20527159,20528577,20530200,20531604,20532986,20534416,20535865,20537349,20538783,20540181,20541629,20543217,20544607,20545979,20547457,20548931,20550386,20551776,20553171,20554765,20556193,20557568,20558968,20560424,20561902,20563335,20564753,20566162,20567804,20569213,20570626,20572055,20573558,20575013,20576443,20577864,20579506,20581164,20582989,20584775,20586515,20588366,20589992,20591769,20593612,20595427,20597236,20598975,20600528,20602403,20604130,20605912,20607606,20609417,20611251,20613100,20614983,20616807,20618689,20620585,20622427,20624318,20626260,20628101,20629923,20631693,20633528,20635327,20637105,20638878,20640723,20642594,20644364,20646135,20647869,20649662,20651392,20653101,20654843,20656746,20658561,20660381,20662111,20663887,20665636,20667383,20669103,20670892,20672873,20674736,20676566,20678380,20680181,20681993,20683812,20685626,20687508,20689246,20690992,20692768,20694497,20696225,20697939,20699702,20701458,20703329,20705211,20707065,20708912,20710739,20712562,20714310,20716102,20717874,20719716,20721419,20723157,20724930,20726443,20728178,20729928,20731617,20733340,20735138,20736924,20738651,20740433,20742042,20743711,20745314,20747085,20748890,20750689,20752379,20753991,20755634,20757324,20759013,20760703,20762353,20764128,20765770,20767407,20769067,20770729,20772425,20774097,20775807,20777480,20779321,20781142,20782862,20784646,20786477,20788266,20790068,20791849,20793713,20795465,20797242,20798957,20800696,20802494,20804267,20806067,20807808,20809677,20811478,20813348,20815219,20817096,20818992,20820961,20822790,20824625,20826361,20828042,20829776,20831510,20833248,20835010,20836759,20838487,20840282,20841955,20843668,20845507,20847300,20849076,20850943,20852688,20854426,20856035,20857466,20858977,20860515,20862001,20863534,20865080,20866531,20868322,20870337,20872279,20874219,20876238,20878214,20880170,20882151,20884051,20885989,20887978,20889984,20891993,20893919,20895877,20897873,20899880,20901867,20903285,20903323,20903363,20903403,20903441,20903754,20903792,20903832,20903872,20905244,20907049,20908875,20910701,20912558,20914394,20916215,20918010,20919892,20921426,20922886,20924322,20925753,20927198,20928610,20930042,20931495,20933268,20935104,20936913,20938654,20940439,20942207,20944022,20945776,20947576,20948404,20948912,20948952,20948990,20949030,20949347,20949387,20949427,20949465,20949798,20950964,20952193,20953999,20955714,20957461,20959234,20960978,20962694,20964422,20966161,20967943,20969319,20970621,20972033,20973526,20974251,20975555,20977102,20978430,20979508,20980937,20982732,20984312,20985850,20985888,20985928,20985968,20986006,20986319,20986357,20986397,20986437,20987368,20988721,20989906,20991048,20992269,20994026,20995620,20997266,20998976,21000633,21002309,21003977,21005620,21006656,21006696,21006735,21006775,21007363,21008298,21008382,21008796,21010420,21012294,21014317,21015961,21017601,21019223,21020873,21022513,21024190,21025913,21027643,21029323,21031087,21032796,21034570,21036288,21038003,21039676,21041350,21043063,21043846,21044995,21045035,21046738,21048541,21050263,21051973,21053732,21055477,21057229,21058936,21060757,21062620,21064458,21066341,21068234,21070049,21071940,21073729,21075536,21077513,21079282,21080893,21082587,21084262,21086014,21087803,21089626,21091326,21093205,21095050,21096978,21098794,21100735,21102527,21104501,21106284,21108260,21109957,21111168,21112339,21113422,21114436,21115763,21117167,21118515,21119898,21121315,21122651,21123780,21124910,21126006,21127130,21128322,21129560,21130984,21131704,21132562,21133531,21134643,21136213,21137835,21138701,21139390,21140138,21141080,21142666,21144364,21146113,21147387,21148321,21149700,21151397,21152654,21153787,21154587,21155519,21156447,21157037,21157669,21158702,21159987,21161288,21162480,21163796,21165178,21166540,21167914,21169198,21170866,21172790,21174698,21176598,21178428,21180293,21182207,21184058,21186020,21187844,21189765,21191675,21193615,21195461,21197343,21199247,21201154,21202089,21203016,21203937,21204863,21206778,21208740,21210335,21212322,21213940,21215093,21216306,21217438,21218970,21220950,21222960,21224986,21227006,21228867,21230804,21232691,21234555,21236567,21238614,21240668,21242704,21244666,21246454,21248196,21250076,21251874,21253709,21255503,21257259,21259033,21260967,21262932,21264874,21266781,21268772,21270114,21271392,21272704,21274436,21275626,21276847,21278107,21279472,21280708,21281912,21283163,21284447,21286242,21287411,21288647,21289949,21291315,21292531,21293269,21294223,21295900,21297454,21298221,21299043,21300655,21302366,21303223,21303941,21305337,21306694,21308045,21309419,21310777,21312689,21314443,21316212,21318037,21319826,21321622,21323426,21325295,21327077,21328870,21330541,21332211,21333873,21335659,21337432,21339238,21341053,21342848,21344312,21345715,21347155,21348641,21350209,21351646,21353062,21354531,21356131,21357628,21359076,21360558,21362195,21363707,21365160,21366670,21368287,21370267,21372253,21374223,21376140,21378172,21380161,21382120,21384113,21386091,21387862,21389649,21391387,21393209,21394862,21396417,21397980,21399561,21401520,21403413,21405200,21407096,21408987,21410783,21412584,21414387,21416324,21418229,21420094,21421974,21423919,21425702,21427520,21429280,21431111,21432881,21434363,21435870,21437297,21438594,21439838,21441062,21442755,21443899,21445124,21446358,21447622,21449228,21450319,21451545,21453086,21454945,21456732,21458490,21460265,21462175,21463958,21465737,21467510,21469377,21471181,21473019,21474837,21476637,21477760,21478671,21479476,21480202,21481341,21482519,21483670,21484835,21486128,21487303,21488533,21489702,21490953,21492318,21493695,21495069,21496359,21498157,21499992,21501854,21503687,21505583,21507415,21509263,21511126,21513021,21514916,21516830,21518755,21520643,21522594,21524529,21526458,21528406,21530285,21532120,21533992,21535798,21537573,21539399,21541137,21542816,21544429,21546031,21547931,21549738,21551588,21553494,21555386,21557228,21559155,21560923,21562406,21563802,21565258,21566825,21568307,21570011,21571739,21573274,21574837,21576540,21578169,21579886,21581573,21583332,21585080,21586855,21588696,21590653,21592710,21594760,21596628,21598648,21600632,21602641,21604589,21606629,21608590,21610534,21612416,21614094,21615229,21616627,21617927,21619168,21620925,21622726,21624478,21626224,21627894,21629410,21630991,21632595,21634297,21636096,21637882,21639656,21641463,21643262,21645109,21646900,21648686,21650417,21652083,21653797,21655440,21657073,21658837,21660649,21662406,21663932,21664988,21666155,21667100,21668560,21669607,21670516,21671386,21672468,21673715,21674716,21675892,21676785,21677904,21678452,21679059,21679569,21680308,21681016,21681724,21682409,21683253,21684158,21685378,21686564,21687579,21688882,21690209,21691670,21693016,21694386,21695800,21697228,21698959,21700499,21701744,21703299,21704926,21706319,21707928,21709654,21711265,21712938,21713930,21714143,21714363,21714567,21715345,21715842,21716310,21716761,21717493,21719548,21721569,21723615,21725659,21727682,21729720,21731758,21733780,21735829,21737793,21739728,21741701,21743591,21745498,21747444,21749352,21751242,21752760,21754165,21755600,21757060,21758394,21759570,21760741,21761895,21763111,21764550,21765902,21767412,21768835,21770695,21772505,21774343,21776216,21778100,21779929,21781719,21783520,21785410,21787187,21788926,21790685,21792510,21794171,21795873,21797640,21799354,21800805,21802254,21803753,21805187,21806622,21808067,21809602,21811078,21812602,21814498,21816390,21818240,21820163,21821441,21822664,21823874,21825104,21826928,21828751,21830534,21832318,21834025,21835476,21836831,21838381,21839880,21841907,21843939,21845988,21848005,21850018,21852007,21853978,21855978,21857780,21859288,21860793,21862280,21863968,21865662,21867303,21868967,21870650,21872659,21874638,21876612,21878626,21880496,21882207,21883927,21885668,21887618,21889673,21891721,21893775,21895789,21897071,21898311,21899131,21899666,21900200,21900740,21901609,21903033,21904459,21905886,21907055,21908315,21909919,21911535,21912724,21914108,21915675,21917187,21918712,21920191,21921733,21923452,21925126,21927020,21928845,21930223,21931447,21932793,21934035,21935263,21936203,21937223,21938174,21939474,21940330,21941247,21942212,21943051,21944671,21946646,21948615,21950580,21952550,21954605,21956613,21958581,21960583,21962430,21963925,21965418,21967032,21968812,21970440,21972129,21973760,21975491,21977145,21978619,21980194,21981845,21983611,21985285,21987013,21988616,21990252,21991866,21993530,21995033,21996537,21998044,21999655,22001158,22002660,22004552,22006460,22008322,22010186,22012081,22013982,22015851,22017708,22019599,22021133,22022597,22024054,22025922,22027873,22029851,22031862,22033875,22035737,22037546,22039346,22041145,22042995,22044887,22046789,22048703,22050422,22051831,22053307,22054710,22056170,22057629,22059154,22060647,22062084,22063640,22065302,22067016,22068655,22070200,22071730,22073324,22074867,22076454,22078195,22079816,22081548,22083278,22084971,22086703,22088377,22090120,22091763,22093441,22094957,22096681,22098344,22099992,22101505,22103207,22104933,22106379,22107948,22109518,22111072,22112461,22114111,22115678,22117392,22118901,22120381,22121969,22123486,22124990,22126449,22127996,22129719,22131225,22132508,22133783,22135291,22136815,22138426,22140201,22141616,22143292,22144818,22146350,22148097,22149824,22151408,22153047,22154511,22155734,22156879,22158175,22159446,22160831,22162030,22163405,22165204,22166504,22167909,22169298,22170551,22171707,22172826,22174125,22175280,22176690,22178154,22179521,22180874,22182453,22183841,22185036,22186374,22188197,22189885,22191690,22193246,22194548,22195574,22196594,22197491,22198418,22199471,22200651,22201990,22203230,22204809,22206456,22207987,22209692,22211655,22212762,22214014,22214987,22216012,22216882,22217498,22218655,22219816,22221163,22222338,22223616,22224923,22226205,22227790,22229509,22231316,22233286,22234999,22236802,22238581,22240221,22241504,22242744,22243960,22245290,22246566,22247886,22249236,22250485,22251711,22253020,22254294,22255526,22257104,22258788,22260445,22262131,22263625,22265066,22266627,22268392,22269939,22271597,22272893,22274108,22275325,22276613,22277876,22279169,22280638,22282159,22283844,22285311,22286621,22287988,22289207,22290376,22291565,22292894,22294353,22296061,22297800,22299472,22301047,22302428,22303857,22305255,22306668,22308371,22309937,22311258,22312498,22313685,22314985,22316152,22317396,22318878,22320637,22322291,22324043,22325686,22327218,22328928,22330571,22332032,22333722,22335345,22335832,22336114,22337602,22339192,22339721,22339971,22341382,22342933,22343481,22343731,22345161,22346759,22347311,22347561,22349008,22350583,22351151,22351415,22352775,22354358,22354946,22355220,22356395,22357656,22358939,22360172,22361605,22362882,22364193,22365503,22366903,22368257,22369492,22370829,22372098,22373524,22374830,22376158,22377440,22378850,22380415,22381699,22382942,22384191,22385404,22386635,22387899,22389173,22390413,22391948,22393177,22394330,22395584,22396790,22397994,22399198,22400404,22401894,22403163,22404395,22405667,22406961,22408224,22409503,22410800,22412042,22413873,22415597,22417363,22419059,22420730,22422353,22424163,22425942,22427495,22428759,22430106,22431433,22432796,22434146,22435525,22436776,22438163,22439478,22440870,22442217,22443565,22444936,22446355,22447686,22449152,22451030,22452698,22454266,22455847,22457480,22459068,22460590,22461986,22463280,22464686,22466081,22467568,22469108,22470681,22472093,22473662,22475374,22477262,22478945,22480509,22482095,22483744,22485325,22486838,22488260,22489554,22490921,22492318,22493791,22495367,22496912,22498348,22499864,22501579,22503463,22505150,22506715,22508324,22509991,22511574,22513100,22514559,22515826,22517184,22518563,22520031,22521571,22523102,22524527,22526025,22527760,22529656,22531335,22532943,22534531,22536180,22537748,22539277,22540734,22541981,22543367,22544740,22546182,22547760,22549282,22550728,22552259,22553957,22555888,22557070,22558310,22559372,22560282,22561160,22562197,22563217,22564193,22565307,22566592,22567786,22569007,22569972,22570937,22572003,22573032,22574535,22575803,22577036,22578173,22579106,22580006,22581012,22582066,22583017,22584136,22585397,22586623,22587841,22588811,22589749,22590819,22591861,22593237,22595223,22597146,22599065,22601018,22602984,22604948,22606892,22608814,22610687,22612489,22614275,22616130,22618010,22619941,22621864,22623816,22625652,22627249,22629219,22631147,22633124,22635148,22637135,22639049,22641014,22643019,22644802,22646540,22648314,22650073,22651861,22653629,22655486,22657248,22658970,22660764,22662526,22664301,22666092,22667653,22669546,22671551,22673503,22675355,22677216,22679150,22681054,22682228,22683038,22684402,22686322,22688300,22690302,22692280,22694212,22696213,22698176,22700118,22702159,22704128,22706086,22708046,22709985,22711974,22713918,22715876,22717876,22719453,22721008,22722585,22724163,22725749,22727295,22728894,22730447,22732218,22733949,22735576,22737281,22738838,22740679,22742483,22744314,22746111,22747950,22749428,22750991,22752549,22754092,22755799,22757460,22759175,22760773,22762545,22764152,22765871,22767565,22769422,22771225,22773078,22774925,22776813,22778498,22780184,22781877,22783463,22785339,22787139,22788984,22790791,22792616,22794149,22795782,22797334,22798940,22800554,22802255,22803966,22805644,22807382,22809095,22810854,22812614,22814361,22815902,22817604,22819301,22821094,22822603,22824261,22826075,22827670,22829381,22831155,22832933,22834546,22836222,22837813,22839562,22841206,22842788,22844344,22846095,22847724,22849474,22850503,22852356,22854263,22855862,22857285,22859217,22861097,22862569,22864128,22865773,22867765,22869770,22871737,22873359,22874708,22875650,22876841,22878159,22879316,22881008,22882578,22884127,22885589,22886989,22888468,22889957,22891451,22893189,22894321,22895462,22896380,22897402,22898657,22899738,22900673,22901703,22902815,22904066,22905926,22907707,22909591,22911384,22913230,22915038,22916898,22918682,22920522,22922222,22923833,22925596,22927189,22928948,22930666,22932373,22934193,22936105,22937876,22939745,22941582,22943412,22945226,22947077,22948860,22950767,22952512,22954095,22955835,22957492,22959230,22960988,22962697,22964500,22966318,22968140,22969995,22971842,22973740,22975565,22977456,22979259,22981221,22983157,22985046,22987022,22988917,22990846,22992801,22994828,22996737,22998690,23000459,23002206,23004006,23005755,23007598,23009406,23011256,23013061,23014714,23016178,23017444,23018965,23020531,23022218,23023647,23024750,23025984,23027045,23027860,23028135,23028808,23030131,23031381,23032733,23033963,23035393,23036730,23037997,23039351,23040640,23042075,23043382,23044665,23045998,23047319,23048754,23050087,23051428,23052769,23054066,23055552,23057211,23058082,23059716,23061138,23063015,23064936,23066943,23068997,23071001,23073021,23074999,23076918,23078848,23080494,23082032,23083546,23085111,23086792,23088433,23090165,23091901,23093737,23095478,23097222,23098849,23100559,23102122,23103734,23105382,23106819,23108483,23110305,23112231,23114093,23115832,23117456,23119231,23121152,23123140,23125050,23126855,23128505,23130337,23132239,23134177,23135975,23137721,23139358,23141286,23143199,23145084,23146880,23148424,23150351,23152279,23154209,23156126,23158017,23159620,23161424,23163290,23165147,23167024,23168762,23169708,23170680,23171671,23172614,23174243,23175717,23177431,23179000,23180668,23182291,23183983,23185639,23187169,23188984,23190674,23192348,23194096,23195801,23197451,23199104,23200728,23202414,23204060,23205804,23207749,23209483,23211254,23212970,23214609,23216412,23218111,23219713,23221503,23223140,23224963,23226575,23228216,23229885,23231520,23233228,23235116,23237022,23238925,23240812,23242755,23244684,23246513,23248200,23249952,23251588,23253285,23255177,23257110,23258991,23260878,23262805,23264733,23266723,23268645,23270590,23272530,23274450,23276232,23277997,23279770,23281571,23283528,23285452,23287337,23289225,23291128,23292990,23294873,23296762,23298208,23299566,23300894,23302454,23304050,23305705,23307322,23309004,23310923,23312762,23314633,23316465,23318332,23320146,23322008,23323907,23325736,23327632,23329531,23331350,23331974,23332486,23333039,23334280,23335316,23336397,23337788,23338994,23340205,23341648,23343314,23344963,23346589,23348234,23350001,23351489,23353165,23354904,23356217,23357901,23359434,23360801,23362066,23363521,23365146,23366832,23368530,23370302,23371972,23373698,23375373,23376987,23378596,23379934,23381418,23382900,23384384,23385858,23387297,23388827,23390261,23391731,23393119,23394597,23396005,23397799,23399604,23401440,23403341,23405190,23407040,23408885,23410730,23412628,23414456,23416286,23418163,23420059,23421940,23423824,23425682,23427584,23429520,23431510,23433441,23435339,23437259,23439166,23441098,23443025,23444922,23446857,23448773,23450687,23452534,23454393,23456276,23458165,23460033,23461647,23463029,23464497,23466284,23467904,23469498,23471138,23472748,23474360,23476011,23477632,23479300,23481028,23482684,23484305,23485979,23487619,23489246,23490884,23492536,23494289,23495941,23497596,23499247,23500869,23502496,23504127,23505792,23507420,23509389,23511267,23513128,23514978,23516868,23518718,23520575,23522424,23524355,23526178,23528015,23529831,23531662,23533519,23535359,23537196,23539043,23540988,23542835,23544696,23546574,23548413,23550255,23552101,23553968,23555918,23557251,23558663,23560110,23561501,23562822,23564260,23565854,23567274,23568634,23570014,23571538,23572985,23574435,23575931,23577877,23579769,23581559,23583333,23585148,23586995,23588855,23590754,23592646,23594261,23596026,23597804,23599469,23601162,23602864,23604605,23606193,23607891,23609585,23611306,23612972,23614761,23616482,23618272,23619900,23621598,23623283,23625167,23626972,23628829,23630565,23632165,23634067,23635911,23637846,23639673,23641531,23643150,23644941,23646670,23648438,23650265,23651959,23653577,23655318,23656995,23658751,23660514,23662058,23663885,23665608,23667376,23669104,23670934,23672548,23674279,23675903,23677517,23679259,23680956,23682076,23683339,23684587,23685828,23687106,23688442,23689487,23691118,23692741,23694265,23695832,23697465,23699066,23700628,23702162,23703733,23705317,23706869,23708446,23710172,23711995,23713891,23715827,23717672,23719353,23721283,23722685,23724065,23725820,23727589,23729441,23731183,23732879,23734530,23736025,23737717,23739419,23741203,23742902,23744282,23745558,23747332,23749163,23750995,23752481,23753918,23755483,23756895,23758586,23760164,23761566,23763186,23764713,23766229,23767717,23769226,23770679,23772235,23773717,23775073,23776618,23778137,23779732,23781236,23782686,23784191,23785889,23787427,23788934,23790360,23791714,23793203,23794694,23796378,23798205,23800069,23801897,23803729,23805560,23807357,23809112,23810824,23812464,23814092,23815907,23817591,23819383,23821129,23822844,23824618,23826376,23828074,23829960,23831892,23833716,23835565,23837415,23839253,23841123,23842854,23844518,23846209,23847908,23849625,23851405,23853145,23854802,23856521,23858333,23860100,23861690,23863540,23865230,23866963,23868669,23870395,23872037,23873738,23875421,23877145,23878984,23880656,23882355,23883986,23885771,23887455,23889213,23890897,23892496,23894296,23896030,23897436,23898857,23900619,23902397,23904057,23905764,23907494,23909005,23910508,23912080,23913610,23915092,23916506,23918095,23919597,23921091,23922864,23924637,23926308,23928049,23929806,23931439,23933163,23934918,23936525,23938156,23939808,23941462,23943135,23944755,23946378,23948014,23949712,23951375,23952988,23954588,23956290,23957916,23959564,23961199,23962930,23964578,23966224,23967867,23969450,23971178,23972805,23974472,23976102,23977798,23979428,23981081,23982728,23984421,23986034,23987675,23989276,23990945,23992609,23994240,23995942,23997704,23999428,24001068,24002676,24004296,24006023,24007625,24009273,24010927,24012710,24014391,24015997,24017618,24019219,24020970,24022748,24024611,24026328,24027980,24029682,24031494,24033190,24034888,24036631,24038467,24040268,24041971,24043878,24045766,24047632,24049626,24051595,24053548,24055492,24057442,24059353,24061181,24063029,24064993,24066995,24069010,24071000,24072946,24074781,24076736,24078505,24080329,24082308,24084326,24086351,24088341,24090334,24092312,24094237,24096155,24098054,24099964,24101890,24103801,24105765,24107720,24109551,24111372,24113293,24115209,24117088,24118908,24120536,24122169,24123956,24125816,24127645,24129321,24130942,24132556,24134181,24135823,24137454,24139075,24140492,24141870,24143216,24144657,24146087,24147613,24149070,24150478,24151867,24153377,24154936,24156262,24157710,24159244,24160714,24162135,24163748,24165456,24167146,24168905,24170577,24172259,24173975,24175767,24177441,24179157,24180885,24182679,24184389,24186077,24187723,24189410,24191089,24192807,24194474,24196171,24197831,24199544,24201222,24202959,24204612,24206271,24208001,24209646,24211284,24212941,24214853,24216742,24218630,24220544,24222450,24224361,24226253,24228137,24230049,24231891,24233684,24235470,24237274,24239288,24241295,24243298,24245344,24247387,24249424,24251453,24253486,24255521,24257563,24259600,24261651,24263703,24265758,24267807,24269844,24271875,24273894,24275745,24277599,24279495,24281418,24283334,24285206,24287060,24288948,24290458,24291891,24293373,24294851,24296565,24298177,24299725,24301269,24302891,24304455,24306022,24307702,24309140,24310595,24312209,24313789,24315305,24316892,24318491,24319907,24321417,24322831,24324415,24326154,24328082,24329854,24331579,24333279,24334918,24336838,24338708,24340591,24342405,24344179,24345965,24347710,24349527,24351395,24352985,24354843,24356833,24358841,24360818,24362723,24364630,24366523,24368132,24369794,24371531,24373236,24375014,24376768,24378577,24380260,24381952,24383722,24385401,24387124,24388811,24390156,24391670,24393188,24394724,24396216,24397784,24399320,24400837,24402339,24403872,24405386,24406900,24408422,24409987,24411485,24412985,24414526,24416012,24417403,24418694,24420012,24421280,24422791,24424720,24426646,24428544,24430423,24432366,24434300,24436233,24438173,24439825,24441151,24442433,24443754,24445095,24446414,24447720,24449082,24450634,24452139,24453625,24455134,24456782,24458388,24459894,24461521,24463034,24464861,24466476,24468131,24469850,24471195,24472920,24474582,24476228,24478084,24479331,24480567,24481825,24483122,24484370,24485629,24486868,24488059,24489560,24490765,24491727,24492890,24493973,24495242,24496346,24497459,24498759,24500171,24501454,24502736,24503912,24505177,24506412,24507746,24509117,24510704,24512132,24513441,24514740,24516076,24517402,24518705,24519999,24521359,24523326,24524808,24526468,24528220,24529904,24531452,24532946,24534350,24536319,24538249,24539392,24540572,24541709,24542958,24544233,24545297,24547231,24549194,24551120,24552602,24554414,24556236,24558065,24559633,24561464,24563440,24563942,24564512,24565004,24565509,24566106,24566593,24567173,24567559,24568432,24568958,24570285,24571688,24573073,24574309,24575454,24576316,24576872,24577608,24578590,24579988,24581502,24582958,24584411,24585799,24586474,24587693,24588683,24590154,24591587,24592712,24594075,24595373,24596654,24597963,24599899,24601653,24603398,24605155,24606526,24606609,24607050,24608189,24608936,24609467,24610130,24610553,24611219,24611805,24612455,24613129,24614434,24615258,24616388,24617828,24619259,24620658,24622063,24623483,24625156,24626750,24628453,24630043,24631616,24633163,24634902,24636688,24638117,24639183,24640283,24641478,24642737,24644089,24645297,24646603,24647932,24649390,24650986,24652536,24654211,24655892,24657370,24658676,24660128,24661387,24661802,24661827,24661857,24661882,24662735,24663329,24664699,24665441,24667080,24668675,24670344,24671954,24673596,24674782,24676443,24677975,24679535,24681075,24682929,24684834,24686773,24688689,24690634,24692530,24693753,24694613,24696021,24697542,24698589,24699558,24700651,24701931,24703327,24704732,24706215,24707692,24709253,24710764,24712478,24714214,24715794,24717407,24718934,24720461,24722029,24723597,24725092,24726683,24728609,24730665,24732722,24734751,24736701,24738564,24740592,24742596,24744436,24746210,24748154,24750029,24752036,24754025,24756080,24758068,24760112,24762103,24764123,24766100,24768152,24770196,24772081,24773820,24775784,24777790,24779799,24781793,24783589,24785237,24786653,24787878,24789109,24790295,24792063,24794072,24795854,24797567,24799411,24801316,24803162,24804919,24806685,24808434,24810363,24812297,24814279,24816232,24818177,24820181,24822156,24824147,24825840,24827392,24828948,24830486,24832028,24833546,24835106,24836639,24838084,24839477,24840816,24842144,24843435,24844711,24846092,24847396,24849221,24851227,24853224,24855217,24857208,24859199,24861151,24863078,24865090,24867083,24868828,24870525,24872175,24873829,24875502,24877179,24877855,24878031,24878871,24880213,24881535,24882763,24883745,24884825,24885718,24886750,24888181,24889879,24891516,24893138,24894881,24896594,24898201,24899718,24901324,24902880,24904487,24906030,24907607,24909071,24910580,24911841,24913082,24914143,24915397,24916667,24917945,24919175,24920579,24922002,24923575,24925127,24926674,24928145,24929523,24930971,24931987,24932970,24934343,24935918,24937167,24937903,24939218,24940518,24941951,24943446,24944954,24946445,24947797,24948963,24950370,24951852,24953414,24955129,24956914,24958755,24960538,24962360,24964053,24965594,24967254,24968867,24970508,24972063,24973660,24975151,24976730,24978243,24979560,24980869,24982351,24983893,24985397,24986779,24988162,24989565,24990959,24992315,24993234,24993702,24994293,24994730,24995920,24997358,24998962,25000462,25001916,25003323,25004852,25006373,25007865,25009225,25010495,25011602,25012849,25014180,25015616,25017122,25018324,25019360,25019926,25020208,25021667,25023442,25025330,25027114,25028785,25030326,25031470,25032515,25033886,25035431,25036995,25038546,25040111,25041692,25043255,25044838,25046658,25048410,25050252,25051984,25053867,25055647,25057514,25059291,25060690,25062075,25063487,25064851,25066278,25067691,25069292,25070970,25072601,25074135,25075652,25077141,25078660,25080164,25081661,25083124,25084932,25086857,25088506,25090048,25090908,25091627,25092569,25093424,25094593,25096154,25097812,25099470,25101119,25102603,25104202,25105519,25106763,25108020,25108849,25109396,25110283,25111096,25111848,25112450,25113578,25115074,25115931,25116433,25117035,25117539,25119000,25120817,25122189,25123263,25124356,25125381,25126696,25128107,25129364,25130418,25131375,25132246,25133632,25135070,25136521,25137959,25139367,25140806,25142455,25144151,25145896,25147544,25149420,25151313,25153000,25154563,25155723,25156753,25157958,25159103,25160212,25161202,25162185,25163061,25164230,25165215,25166471,25167647,25168445,25168938,25169556,25170159,25170758,25171261,25171865,25172465,25173037,25173519,25174182,25174787,25175381,25175899,25176540,25177132,25177697,25178128,25178683,25179222,25180776,25182654,25183991,25185017,25186128,25187142,25188253,25189269,25190427,25191540,25193180,25194948,25196584,25198314,25199997,25201695,25203368,25205053,25206373,25207544,25209093,25210758,25212443,25214152,25216012,25217880,25218572,25218729,25219092,25219380,25219668,25219875,25220272,25220535,25220818,25220867,25221118,25221143,25221356,25221466,25221733,25222006,25222353,25222587,25223705,25225198,25226747,25228439,25229672,25230774,25231822,25232916,25234075,25235277,25236744,25238211,25239695,25241124,25242940,25244794,25246588,25248297,25249931,25251290,25252927,25254527,25256048,25257436,25258808,25260073,25261330,25263132,25264697,25266020,25267481,25269008,25270458,25271964,25273455,25274686,25276063,25277512,25278941,25280387,25281936,25283448,25284948,25286039,25287286,25288549,25290017,25291196,25292464,25293757,25294884,25295932,25297079,25298624,25300143,25301624,25303128,25304661,25306189,25307706,25309200,25309915,25310634,25311170,25311788,25312479,25313240,25313890,25314488,25315101,25315734,25316258,25316906,25317643,25318296,25319001,25319724,25320417,25321104,25321903,25322666,25323436,25324003,25324581,25325077,25326651,25328689,25330553,25332290,25334030,25335694,25337372,25339075,25340795,25342506,25344201,25345905,25347592,25349623,25351485,25353260,25354990,25356687,25358433,25360193,25361949,25363520,25364489,25365478,25367074,25368746,25370325,25372149,25373868,25375335,25376814,25378300,25379775,25381237,25382719,25384209,25385678,25387178,25388040,25388671,25389191,25389827,25390488,25391073,25391564,25392141,25392769,25393319,25393956,25394571,25395211,25395755,25396189,25396487,25396996,25397567,25397839,25398227,25398755,25399218,25399519,25400005,25400262,25400779,25401095,25403082,25404967,25406700,25408353,25410009,25411699,25413361,25415020,25416678,25418361,25420058,25421754,25423424,25425110,25427162,25428879,25430566,25432243,25433974,25435717,25437468,25439178,25440851,25441466,25442210,25442950,25444719,25446622,25448255,25449901,25451511,25453330,25455077,25456599,25458070,25459571,25461080,25462563,25464063,25465551,25467045,25468549,25470042,25471555,25473048,25474531,25476035,25477517,25479029,25480504,25482006,25483492,25484966,25486126,25486665,25487054,25487611,25488205,25488916,25489405,25490000,25490596,25491135,25491451,25491992,25492525,25493014,25493398,25493876,25494250,25494678,25495261,25495880,25496547,25497173,25497804,25498436,25499136,25499744,25500260,25500956,25501380,25501869,25502191,25502863,25503242,25503685,25504039,25504533,25505017,25505375,25505965,25506447,25506915,25507246,25507857,25508440,25509024,25509673,25510055,25510508,25511022,25511406,25512004,25512470,25512757,25513209,25513794,25514187,25514731,25515157,25515430,25515844,25516867,25518859,25520881,25522903,25524904,25526931,25528843,25530547,25532231,25533932,25535615,25537331,25539048,25540754,25542419,25544112,25545789,25547499,25549190,25550856,25552541,25554235,25555949,25557628,25559349,25561068,25562776,25564486,25566157,25567866,25569562,25571275,25572965,25574672,25576720,25578768,25580811,25582507,25584120,25585825,25587514,25589199,25590942,25592628,25594302,25596028,25597762,25599490,25601145,25602802,25604535,25606261,25607976,25609603,25611218,25612917,25614526,25615867,25616767,25617714,25618557,25619331,25620022,25621041,25622047,25623123,25624132,25625376,25626524,25627603,25628519,25629597,25630548,25631531,25632430,25633444,25634368,25635840,25637827,25639776,25641611,25643307,25644782,25646298,25647851,25649335,25650858,25652390,25653875,25655325,25656849,25658336,25659830,25660879,25661480,25661869,25662315,25662755,25663215,25663649,25664066,25664525,25665130,25665781,25666295,25666865,25667500,25667969,25668374,25668726,25668882,25668993,25669560,25670154,25670772,25671276,25671635,25672244,25672562,25673034,25673513,25673779,25674125,25674770,25676783,25678786,25680599,25682307,25683989,25685685,25687377,25689083,25690796,25692473,25694160,25695885,25697640,25699328,25701008,25702854,25704902,25706644,25708345,25710039,25711716,25713507,25715220,25716906,25718757,25720522,25722135,25723442,25724399,25725824,25727097,25728885,25730754,25732280,25733841,25735347,25736831,25738337,25739825,25741304,25742789,25744274,25745731,25747200,25748294,25748556,25748751,25748950,25749321,25749863,25750145,25750370,25750607,25751060,25751370,25751766,25752196,25752580,25752755,25752857,25753084,25753298,25753756,25754053,25754487,25754899,25755210,25755525,25756014,25756492,25756955,25757248,25757684,25759684,25761738,25763615,25765316,25767008,25768716,25770389,25772088,25773764,25775431,25777105,25778800,25780526,25782224,25783945,25785961,25787920,25789725,25791622,25793297,25795091,25796773,25798445,25800227,25802070,25803858,25805736,25806652,25807138,25807806,25808708,25809685,25810533,25812218,25813864,25815623,25817272,25818762,25820257,25821747,25823253,25824727,25826195,25826552,25827003,25827303,25827757,25828129,25828405,25828737,25829218,25829667,25830049,25830376,25830876,25831161,25831381,25831692,25832103,25832551,25834451,25836393,25838094,25839794,25841472,25843142,25844829,25846513,25848213,25849990,25852015,25853740,25855460,25857122,25858827,25860655,25862516,25864034,25864822,25866390,25867622,25869340,25870928,25872436,25873926,25875425,25876484,25877135,25877535,25878039,25878530,25878956,25879509,25879996,25880533,25880796,25881094,25881512,25883019,25884821,25886482,25888133,25889775,25891462,25893232,25895025,25896716,25898324,25900073,25901051,25902816,25904462,25906041,25907556,25909020,25910535,25912040,25913533,25915029,25916520,25918003,25919486,25921009,25922507,25924018,25925511,25927002,25928514,25929997,25931001,25931515,25932007,25932441,25932768,25933158,25933661,25934144,25934493,25934783,25935333,25935802,25936255,25936759,25937110,25937520,25937967,25938441,25938837,25939285,25939544,25939721,25939974,25940335,25940638,25940888,25941083,25941311,25941664,25941962,25942167,25942601,25942880,25943272,25943454,25943912,25944267,25944664,25945101,25945362,25945801,25946209,25946730,25946967,25947409,25947665,25947926,25948293,25948656,25948939,25949449,25949968,25950400,25951710,25953688,25955614,25957568,25959587,25961324,25962988,25964663,25966332,25968026,25969714,25971408,25973087,25974752,25976483,25978180,25979846,25981523,25983189,25984860,25986527,25988203,25989870,25991557,25993217,25994887,25996582,25998262,25999941,26001989,26004037,26005902,26007516,26009168,26010786,26012444,26014061,26015841,26017544,26019268,26021005,26022694,26024345,26025921,26027616,26029296,26031002,26032687,26034327,26034871,26035537,26036121,26036761,26037379,26038229,26039235,26040767,26042123,26043168,26044216,26045385,26046930,26048311,26049820,26051129,26052486,26053832,26055564,26057412,26059222,26061067,26062782,26064402,26065882,26067336,26068822,26070304,26071807,26073288,26074795,26076283,26077776,26079278,26080773,26081618,26082112,26082641,26083279,26083909,26084496,26084935,26085394,26085795,26086101,26086380,26086863,26087120,26087616,26088121,26088616,26089096,26089514,26089978,26090573,26091143,26091808,26092405,26092951,26093339,26093788,26094059,26094579,26095126,26095794,26096443,26097013,26097271,26097772,26098124,26098680,26098909,26099063,26101062,26103031,26105050,26106872,26108582,26110270,26111947,26113654,26115351,26117028,26118717,26120434,26122122,26123808,26125532,26127274,26128972,26130697,26132379,26134210,26136258,26138235,26140011,26141770,26143510,26145300,26147103,26148838,26150677,26152365,26154079,26155930,26157684,26159416,26161254,26162393,26163324,26164217,26165660,26167172,26168723,26170324,26171979,26173882,26175595,26177139,26178753,26180472,26181946,26183433,26184922,26186429,26187913,26189411,26190903,26192381,26193866,26195363,26196861,26198356,26199835,26201322,26202794,26204270,26205739,26207212,26208704,26210212,26211715,26212730,26213353,26213950,26214634,26215119,26215706,26216247,26216842,26217465,26218035,26218629,26219099,26219511,26219940,26220502,26221045,26221530,26221896,26222403,26222946,26223493,26223988,26224541,26225122,26225588,26225953,26226351,26226912,26227354,26227956,26228438,26228771,26229304,26229731,26230051,26230596,26230961,26231309,26231811,26232050,26232607,26233038,26233610,26234093,26234334,26234699,26235182,26235495,26235804,26236309,26236535,26236852,26237248,26237596,26238031,26238544,26238988,26239311,26239733,26240289,26240720,26240946,26241344,26241734,26242208,26242556,26242788,26243133,26243776,26244288,26244671,26245062,26245550,26245856,26246591,26247159,26248315,26250371,26252428,26254476,26256530,26258587,26260643,26262549,26264268,26266005,26267741,26269499,26271272,26273020,26274758,26276472,26278202,26279951,26281671,26283416,26285106,26286859,26288626,26290365,26292140,26293893,26295641,26297389,26299150,26300903,26302628,26304321,26306062,26307831,26309608,26311364,26313112,26314857,26316622,26318381,26320102,26321841,26323794,26325842,26327890,26329938,26331986,26333811,26335499,26337310,26339139,26341014,26342894,26344589,26346447,26348220,26350032,26351805,26353502,26355295,26357132,26358926,26360758,26362534,26364371,26366200,26368066,26369916,26371644,26373435,26375294,26377147,26378995,26380844,26382700,26384545,26386398,26388278,26390127,26391825,26392917,26393782,26394644,26395412,26396151,26397285,26398624,26400020,26401194,26402551,26403765,26405268,26406387,26407202,26408012,26409029,26410368,26411660,26413154,26414681,26416650,26418601,26420408,26422135,26423696,26425231,26426865,26428438,26430039,26431536,26433015,26434521,26436032,26437555,26439062,26440532,26441980,26443466,26444977,26446445,26447916,26449415,26450900,26452449,26453928,26455420,26456922,26458413,26459914,26461397,26461931,26462421,26463074,26463558,26464107,26464556,26464942,26465531,26466170,26466815,26467380,26468032,26468659,26469302,26469790,26470320,26470859,26471415,26471988,26472327,26472815,26473250,26473815,26474359,26474945,26475365,26475834,26476255,26476683,26477329,26477578,26477821,26478036,26478447,26478960,26479287,26479648,26480086,26480382,26480780,26481261,26481698,26481924,26482288,26482690,26483078,26483602,26483847,26484192,26484410,26484844,26485367,26485624,26485822,26485982,26486312,26486511,26486929,26487443,26487983,26488407,26489019,26489471,26489955,26491011,26493052,26494988,26496936,26498906,26500921,26502708,26504351,26506038,26507713,26509386,26511060,26512775,26514484,26516171,26517853,26519521,26521168,26522819,26524521,26526227,26527915,26529599,26531312,26533007,26534702,26536382,26538062,26539735,26541393,26543077,26544741,26546409,26548078,26549940,26551988,26554036,26555852,26557524,26559216,26560911,26562662,26564480,26566200,26567847,26569492,26571185,26572966,26574716,26576500,26578184,26579926,26581642,26583407,26585035,26586715,26588461,26590202,26591323,26592198,26592787,26593382,26593996,26594707,26595513,26596496,26597635,26598388,26599167,26599747,26600446,26601214,26601943,26602489,26603229,26604042,26604697,26605027,26605592,26606254,26606978,26607863,26608491,26608931,26609529,26610719,26611869,26612777,26614408,26616095,26617896,26619672,26621441,26623059,26624673,26626248,26627880,26629502,26630995,26632464,26633953,26635431,26636912,26638373,26639857,26641329,26642804,26644255,26645749,26647232,26648693,26650166,26651655,26653116,26654582,26656061,26657528,26658990,26660468,26661956,26663438,26664921,26666409,26667901,26669380,26670849,26672303,26673763,26675222,26676675,26678147,26679587,26681065,26682543,26684002,26685460,26686927,26688391,26689871,26691357,26692847,26694328,26695782,26697242,26698722,26700199,26701660,26703094,26704521,26705946,26707396,26708865,26710362,26711831,26713272,26714745,26716223,26717690,26719162,26720632,26722121,26723611,26725066,26726551,26727992,26729468,26730939,26732418,26733908,26735375,26736850,26738259,26739323,26739937,26740333,26740906,26741456,26741942,26742355,26742756,26743220,26743608,26743870,26744296,26744933,26745409,26745926,26746386,26746832,26747364,26748021,26748585,26749155,26749785,26750158,26750748,26751255,26751583,26752140,26752696,26753260,26753818,26754183,26754669,26755178,26755687,26756227,26756603,26757092,26757581,26758096,26758588,26759174,26759810,26760387,26760984,26761457,26761759,26761988,26762631,26763134,26763649,26764203,26764804,26765418,26765934,26766486,26767027,26767518,26768068,26768429,26768882,26769449,26769903,26770394,26770825,26771366,26771890,26772244,26772655,26773165,26773615,26774162,26774610,26775058,26775574,26776073,26776681,26777221,26777840,26778448,26779059,26779554,26780158,26780644,26781196,26781837,26782255,26782504,26782944,26783348,26783846,26784354,26784837,26785286,26785577,26785901,26786420,26786725,26787122,26787524,26788096,26788649,26788817,26789363,26789881,26790430,26790922,26791394,26791902,26792262,26792556,26793103,26793390,26793618,26793810,26794283,26794869,26795439,26795972,26796216,26796675,26797110,26797433,26797748,26798052,26798418,26798869,26799315,26799772,26800236,26800779,26801214,26801768,26802369,26802825,26803393,26803963,26804474,26804975,26805416,26805811,26806297,26806931,26807455,26807993,26808563,26809006,26809525,26810027,26810264,26810474,26811084,26811496,26812018,26812544,26813083,26813619,26814096,26814514,26814850,26815310,26815837,26816405,26816864,26817337,26817797,26818214,26818700,26819213,26819799,26820302,26820786,26821257,26821723,26822188,26822668,26823334,26823945,26824386,26824766,26825188,26825678,26826176,26826560,26827159,26827638,26828011,26828285,26828724,26829052,26829364,26829746,26830121,26830470,26830894,26831164,26831515,26832025,26832554,26833185,26833601,26834087,26834467,26834872,26835461,26835952,26836422,26836954,26837447,26837945,26838449,26838942,26839455,26839869,26840342,26840543,26840918,26841417,26841827,26842421,26842973,26843437,26843864,26844407,26844940,26845390,26845848,26846446,26847033,26847504,26847914,26848464,26848961,26849470,26849983,26850441,26850904,26851379,26851468,26851788,26852366,26852920,26853410,26853983,26854437,26855020,26855536,26856018,26856531,26856830,26858131,26860053,26862014,26863932,26865854,26867775,26869732,26871775,26873721,26875737,26877685,26879647,26881637,26883553,26885538,26887527,26889494,26891397,26893442,26895496,26897228,26898891,26900514,26902147,26903836,26905527,26907248,26908958,26910667,26912357,26914047,26915729,26917397,26919091,26920768,26922452,26924121,26925815,26927484,26929173,26930852,26932541,26934217,26935916,26937602,26939298,26940987,26942665,26944344,26946024,26947710,26949407,26951083,26952759,26954445,26956101,26957776,26959457,26961137,26962815,26964509,26966158,26967810,26969468,26971161,26972844,26974520,26976189,26977855,26979521,26981135,26982807,26984503,26986167,26987830,26989512,26991219,26992900,26994584,26996265,26997941,26999616,27001292,27002973,27004628,27006324,27008031,27009755,27011409,27013073,27014737,27016383,27018073,27019764,27021408,27023081,27024747,27026391,27028048,27029719,27031391,27033063,27034736,27036397,27038067,27039732,27041445,27043155,27044841,27046528,27048217,27049926,27051619,27053297,27054970,27056678,27058373,27060071,27061746,27063421,27065084,27066756,27068433,27070128,27071817,27073486,27075158,27077179,27079227,27081275,27083323,27085371,27087419,27089467,27091515,27093563,27095611,27097659,27099373,27100965,27102616,27104329,27106069,27107836,27109599,27111266,27112986,27114724,27116414,27118059,27119764,27121460,27123186,27124857,27126589,27128331,27129990,27131731,27133443,27135188,27136939,27138637,27140330,27141954,27143710,27145431,27147089,27148744,27150415,27152060,27153714,27155375,27157102,27158727,27160393,27162146,27163863,27165611,27167369,27169098,27170859,27172557,27174261,27175912,27177658,27179370,27181077,27182753,27184368,27186093,27187869,27189435,27190966,27192481,27194011,27195696,27197393,27199118,27200830,27202609,27204402,27206120,27207831,27209531,27211190,27213007,27214710,27216316,27218023,27219771,27221533,27223315,27225053,27226762,27228401,27229223,27230091,27230898,27231659,27232451,27233113,27233950,27234686,27235297,27235914,27236396,27237179,27237697,27238315,27238576,27238969,27239670,27240393,27241215,27241992,27242702,27243407,27243968,27244671,27245434,27246279,27246989,27247736,27248543,27249338,27249965,27250825,27251792,27252446,27253198,27254035,27254860,27255591,27256331,27256957,27257697,27258332,27258979,27259788,27260572,27261354,27262163,27262755,27263440,27264240,27264797,27265313,27265671,27266183,27266916,27267444,27268292,27268940,27269344,27270211,27270616,27271577,27272438,27273271,27274018,27274615,27275021,27275548,27276179,27276814,27277577,27278251,27278845,27279391,27279944,27280453,27280973,27281591,27282389,27283090,27283787,27284635,27285316,27285892,27286584,27287407,27288033,27288459,27289163,27290023,27290915,27291705,27292393,27293014,27293748,27294303,27295013,27295828,27296492,27297132,27297677,27298390,27299135,27299863,27300609,27301161,27301724,27302243,27302672,27303640,27304498,27305364,27306248,27306936,27307580,27308515,27308986,27309405,27310283,27311092,27311885,27312588,27313333,27314077,27314737,27315427,27316190,27316891,27317527,27318111,27318811,27319313,27319807,27320475,27321199,27321584,27321987,27322288,27322611,27322911,27323225,27323645,27323953,27324219,27324514,27324810,27325115,27325416,27325831,27326389,27326853,27327598,27327965,27328499,27328994,27329684,27330266,27330921,27331577,27332098,27332883,27333642,27334208,27334856,27335708,27336516,27337045,27337376,27337819,27338286,27338619,27338979,27339374,27339664,27340044,27340485,27340780,27341095,27341395,27341623,27341998,27342560,27343060,27343660,27344249,27344965,27345479,27345753,27345924,27346196,27346456,27346698,27346862,27347038,27347294,27348117,27349752,27351411,27352955,27354866,27356772,27358719,27360627,27362563,27364472,27366416,27368362,27370291,27372243,27374186,27376074,27377859,27379765,27381672,27383472,27385321,27386797,27388282,27389755,27391244,27392736,27394233,27395721,27397201,27398698,27400192,27401165,27401672,27402099,27402626,27403144,27403502,27404028,27404525,27404929,27405315,27405619,27406167,27406595,27407140,27407582,27408100,27408669,27408875,27409272,27409608,27410044,27410452,27410832,27411169,27411585,27411859,27412142,27412687,27412840,27413208,27413575,27414016,27415219,27417173,27419175,27421015,27422696,27424388,27426085,27427796,27429513,27431211,27432899,27434600,27436291,27437977,27439651,27441320,27442990,27444661,27446601,27448649,27450377,27452160,27453869,27455630,27457441,27459097,27460916,27462674,27464471,27466192,27467878,27469587,27470489,27471187,27471958,27473343,27474846,27476132,27477462,27478788,27480294,27482007,27483722,27485253,27486716,27488227,27489708,27491175,27492634,27494135,27495633,27497131,27498627,27499719,27499991,27500437,27500918,27501297,27501784,27502483,27502948,27503524,27504126,27504673,27505176,27505597,27506062,27506488,27506632,27507174,27507605,27507869,27508263,27508616,27508924,27509477,27510035,27510173,27510607,27511056,27511247,27511515,27513316,27515335,27517291,27518957,27520644,27522336,27524050,27525777,27527474,27529178,27530860,27532583,27534267,27535961,27537672,27539347,27541378,27543391,27545027,27546695,27548512,27550349,27552174,27553921,27555645,27557457,27559269,27561016,27562796,27564450,27565017,27565795,27566728,27567797,27568923,27570384,27571696,27573314,27575049,27576740,27578274,27579890,27581406,27582918,27584394,27585887,27587370,27588861,27590356,27591853,27593342,27594790,27596266,27597738,27599242,27600698,27602169,27603647,27605154,27606634,27608109,27609602,27611059,27612510,27613986,27615454,27616944,27618406,27619878,27621364,27622847,27624333,27625810,27627296,27628802,27630301,27631790,27633270,27634656,27635231,27635807,27636333,27637035,27637763,27638428,27639024,27639553,27640170,27640701,27641333,27642007,27642654,27643244,27643862,27644493,27645127,27645671,27646253,27646889,27647587,27648150,27648706,27649298,27649824,27650498,27651084,27651690,27652286,27652875,27653252,27653865,27654391,27655056,27655628,27656100,27656690,27657236,27657725,27658312,27658846,27659417,27659963,27660598,27661115,27661556,27661858,27662038,27662491,27662976,27663320,27663890,27664337,27664716,27665180,27665810,27666471,27667021,27667282,27667509,27667871,27668075,27668226,27668412,27668906,27669287,27669830,27670326,27670799,27671376,27672020,27672511,27673105,27673732,27674363,27674960,27675438,27675890,27676353,27676889,27677516,27678049,27678595,27679195,27679643,27679945,27680518,27680994,27681531,27681978,27682317,27682509,27682932,27683548,27684192,27684732,27685258,27685647,27686130,27686733,27687269,27687760,27688285,27688964,27689589,27690140,27690650,27691088,27691725,27693724,27695733,27697700,27699703,27701698,27703625,27705586,27707543,27709552,27711429,27713144,27714860,27716571,27718279,27719999,27721720,27723419,27725127,27726832,27728518,27730218,27731888,27733611,27735318,27737016,27738706,27740383,27742063,27743769,27745457,27747085,27748761,27750399,27752065,27753747,27755428,27757100,27758804,27760499,27762180,27763851,27765536,27767220,27768919,27770618,27772311,27773965,27775640,27777322,27779023,27780693,27782357,27784021,27785691,27787359,27789099,27791147,27793195,27795243,27797291,27799232,27800959,27802716,27804428,27806045,27807746,27809494,27811264,27813009,27814837,27816552,27818243,27819929,27821652,27823340,27824953,27826646,27828329,27830037,27831755,27833506,27835205,27836903,27838648,27840427,27842100,27843708,27845386,27847092,27848784,27850504,27852191,27853756,27854742,27855610,27856470,27857312,27858123,27858961,27859828,27860577,27861347,27862137,27863192,27864215,27865063,27865934,27866833,27867844,27869169,27870293,27871311,27872368,27873527,27874710,27875848,27877085,27878131,27879512,27880886,27882340,27883685,27884633,27885909,27886964,27887718,27888435,27889041,27889726,27890358,27890694,27891188,27892088,27893070,27894000,27895134,27896290,27897199,27898033,27898657,27899259,27900212,27901634,27902412,27903571,27904770,27906270,27908102,27909952,27911819,27913705,27915623,27917561,27919473,27921414,27923148,27924730,27926201,27927689,27929172,27930659,27932143,27933647,27935101,27936583,27938064,27939554,27941051,27941608,27941995,27942210,27942755,27943268,27943632,27944018,27944552,27944977,27945243,27945424,27945573,27945829,27946155,27946434,27946913,27947321,27947764,27948253,27948575,27948883,27949263,27949656,27949992,27950437,27950753,27951093,27951436,27951756,27952162,27952500,27952964,27953294,27953606,27955141,27957120,27959116,27961021,27962701,27964399,27966054,27967757,27969435,27971116,27972816,27974521,27976236,27977938,27979627,27981350,27983033,27984711,27986558,27988606,27990365,27992091,27993783,27995562,27997266,27999001,28000788,28002631,28004369,28006124,28007829,28009543,28010820,28011475,28012324,28013878,28015292,28015870,28016672,28017887,28019637,28021467,28023180,28024774,28026302,28027770,28029275,28030769,28032273,28033781,28035102,28035574,28036130,28036692,28037293,28037665,28038165,28038716,28039121,28039539,28039992,28040379,28040726,28041013,28041322,28041657,28042166,28042637,28042824,28043268,28043717,28043981,28044310,28045634,28047599,28049443,28051151,28052873,28054545,28056244,28057952,28059597,28061282,28062968,28064671,28066494,28068542,28070235,28072055,28073800,28075608,28077315,28079055,28080872,28082714,28083825,28084618,28085675,28087417,28088971,28090500,28091908,28093527,28095136,28096592,28098047,28099472,28100941,28102423,28103910,28105406,28106871,28108356,28109835,28111323,28112838,28114340,28115817,28117326,28118820,28119733,28120253,28120686,28121273,28121831,28122328,28122902,28123395,28123760,28124449,28124978,28125472,28126063,28126703,28127118,28127433,28127908,28128278,28128667,28129103,28129574,28130058,28130480,28130989,28131266,28131497,28131810,28132419,28133006,28133615,28134200,28134765,28135259,28135761,28136291,28136589,28137137,28137559,28138094,28138698,28139291,28139661,28140200,28140687,28141120,28142149,28144144,28146146,28148143,28150053,28151740,28153460,28155159,28156864,28158557,28160241,28161912,28163575,28165300,28167006,28168690,28170365,28172063,28173805,28175516,28177224,28178949,28180684,28182396,28184132,28186180,28188228,28190006,28191726,28193395,28195147,28196928,28198574,28200253,28201956,28203571,28205246,28207017,28208803,28210524,28212281,28214074,28215783,28216698,28217575,28218362,28219446,28221168,28222674,28223961,28225512,28226966,28228663,28230101,28231931,28233736,28235414,28237016,28238376,28239866,28241368,28242841,28244315,28245783,28247272,28248756,28250235,28251705,28253185,28254669,28256170,28257633,28259125,28260207,28260685,28261339,28261946,28262483,28262918,28263352,28263911,28264450,28265030,28265362,28265814,28266272,28266712,28267021,28267357,28267807,28268332,28268853,28269376,28269873,28270367,28270921,28271343,28271648,28271877,28272081,28272371,28272920,28273389,28273635,28273839,28273935,28274143,28274524,28274823,28275052,28275477,28275949,28276235,28276732,28277051,28277322,28277605,28277959,28278669,28280604,28282532,28284486,28286475,28288159,28289839,28291533,28293204,28294894,28296579,28298245,28299968,28301629,28303290,28304951,28306642,28308333,28309993,28311672,28313334,28315013,28316695,28318386,28320053,28322105,28324153,28326037,28327755,28329463,28331155,28332925,28334610,28336438,28338094,28339761,28341475,28343168,28344823,28346561,28348265,28349988,28351817,28352761,28353516,28354032,28354653,28355553,28356396,28357191,28357929,28358797,28359647,28360288,28360828,28362299,28363697,28365466,28367146,28368804,28370425,28372068,28373528,28375015,28376529,28378035,28379525,28381042,28382471,28383930,28385409,28386901,28388420,28389917,28391412,28392898,28394398,28395893,28397370,28398803,28400281,28401815,28403321,28404678,28405147,28405709,28406208,28406500,28406976,28407466,28408029,28408561,28409134,28409495,28409828,28410343,28410923,28411179,28411410,28412018,28412564,28413072,28413553,28413944,28414380,28414622,28414799,28415012,28415600,28416134,28416624,28417189,28417723,28418226,28418660,28419111,28419501,28419929,28420429,28420999,28421571,28421934,28422335,28422767,28423151,28423498,28423878,28424043,28424192,28424606,28425173,28425580,28426161,28426696,28427070,28427423,28427846,28428317,28428635,28428994,28429260,28429383,28429817,28430198,28430612,28431034,28431457,28431921,28432223,28432655,28433091,28433480,28433960,28434255,28436183,28438199,28440211,28442201,28444240,28446280,28448025,28449736,28451413,28453068,28454723,28456432,28458117,28459764,28461484,28463179,28464843,28466551,28468247,28469929,28471596,28473289,28474955,28476652,28478362,28480044,28481752,28483428,28485088,28486749,28488456,28490191,28491877,28493564,28495272,28496996,28498704,28500486,28502534,28504582,28506639,28508472,28510212,28511856,28513553,28515274,28516950,28518575,28520395,28522122,28523919,28525653,28527402,28529094,28530794,28532553,28534272,28535980,28537726,28539434,28541118,28542951,28544694,28546389,28548120,28549967,28551768,28552543,28553007,28553661,28554260,28554763,28555593,28556241,28557075,28557610,28557881,28558076,28558810,28559456,28560060,28560517,28561005,28561400,28561701,28562171,28562644,28562973,28563072,28563682,28564874,28565827,28566762,28568339,28570054,28571870,28573607,28575399,28577102,28578570,28580024,28581508,28583003,28584527,28586023,28586802,28587241,28587465,28587697,28588031,28588412,28588645,28588766,28589032,28589277,28589584,28590076,28590512,28590789,28591209,28591696,28592260,28594285,28596150,28597844,28599536,28601256,28602923,28604613,28606268,28607947,28609964,28611712,28613458,28615246,28616966,28618637,28620225,28620979,28621864,28623096,28624541,28626258,28627812,28629440,28630943,28632459,28633962,28635452,28636939,28638430,28639903,28641403,28642894,28644359,28645833,28647322,28648819,28650328,28651797,28653287,28654762,28656157,28656690,28657320,28657974,28658426,28658987,28659522,28660078,28660551,28661107,28661662,28662234,28662698,28663255,28663808,28664426,28664902,28665491,28665866,28666401,28667022,28667556,28668089,28668636,28669235,28669768,28670091,28670575,28671206,28671641,28672079,28672482,28672904,28673400,28673867,28674447,28674766,28675224,28675719,28676239,28676617,28677156,28677626,28678151,28678752,28679253,28679848,28680416,28680886,28681229,28681906,28682344,28682808,28683366,28683923,28684384,28684946,28685610,28686219,28686809,28687367,28689307,28691335,28693364,28695383,28697409,28699122,28700832,28702536,28704249,28705935,28707631,28709340,28711030,28712744,28714442,28716099,28717775,28719485,28721161,28722871,28724549,28726274,28727968,28729655,28731325,28732985,28734652,28736335,28738033,28739749,28741467,28743398,28745446,28747494,28749266,28750979,28752785,28754479,28756170,28757833,28759499,28761215,28762947,28764825,28766586,28768419,28770207,28771829,28773506,28775329,28777091,28778819,28779923,28780652,28781475,28782245,28782881,28784106,28785826,28787268,28788534,28790100,28791864,28793470,28794871,28796079,28797490,28799344,28801198,28803001,28804784,28806563,28808149,28809553,28811144,28812647,28814135,28815611,28817090,28818570,28820056,28821523,28823002,28824495,28825985,28827445,28828936,28830423,28831919,28833435,28834929,28836420,28837918,28839405,28840898,28841950,28842312,28842443,28842715,28843038,28843493,28844058,28844545,28844950,28845471,28845964,28846623,28847145,28847422,28847904,28848279,28848750,28849126,28849528,28850058,28850632,28851080,28851449,28851749,28851844,28852417,28852588,28852904,28853400,28853900,28854475,28855007,28855549,28855929,28856521,28857012,28857298,28857705,28858228,28858583,28859160,28859784,28860311,28860908,28861297,28861516,28861793,28862209,28862685,28863060,28863515,28863946,28864532,28865073,28865645,28866294,28866815,28867371,28867891,28868293,28868654,28869108,28869543,28869684,28869952,28870320,28870700,28871154,28871441,28871974,28874001,28876049,28878055,28880071,28882123,28883964,28885629,28887317,28889033,28890715,28892360,28894035,28895723,28897368,28899055,28900743,28902409,28904099,28905777,28907479,28909201,28910883,28912574,28914252,28915932,28917643,28919341,28921025,28922728,28924455,28926155,28927831,28929529,28931188,28932876,28934749,28936797,28938845,28940851,28942480,28944268,28946045,28947725,28949462,28951130,28952853,28954611,28956305,28958051,28959805,28961611,28963393,28965109,28966857,28968625,28970335,28971974,28973760,28975435,28977095,28978604,28980331,28981063,28981806,28982557,28983349,28984167,28984894,28985518,28986255,28986920,28987594,28988507,28989510,28990527,28991560,28992303,28993134,28993863,28994900,28995981,28996912,28997950,28998897,28999952,29000802,29001714,29002620,29003423,29003851,29004605,29005061,29005241,29006143,29007426,29009026,29010828,29012665,29014496,29016338,29018067,29019609,29021133,29022665,29024174,29025652,29027144,29028636,29030149,29031641,29033117,29034639,29036168,29036705,29037168,29037423,29037685,29038102,29038649,29039128,29039588,29040050,29040480,29040897,29041439,29041756,29042154,29042540,29042931,29043328,29043751,29044159,29044446,29044810,29045265,29045649,29046054,29046433,29046740,29046975,29047300,29047576,29047844,29048348,29048836,29049086,29049353,29049624,29050066,29052074,29054041,29056058,29057755,29059440,29061135,29062816,29064479,29066143,29067824,29069496,29071178,29072840,29074521,29076207,29077904,29079620,29081300,29083110,29085158,29087097,29088840,29090575,29092325,29094080,29095745,29097474,29099159,29100773,29102498,29104264,29105993,29107727,29109354,29110040,29110690,29111386,29112343,29113513,29114612,29115504,29116816,29118680,29120574,29122392,29123930,29125483,29126947,29128450,29129946,29131435,29132941,29134435,29135941,29137435,29138934,29140422,29141917,29143423,29144927,29146451,29147944,29149425,29150916,29152420,29153927,29155425,29156902,29158405,29159898,29161377,29162865,29164389,29165910,29167388,29168882,29170406,29171910,29173374,29174700,29175094,29175644,29176193,29176504,29177090,29177680,29178202,29178830,29179381,29180023,29180624,29181051,29181485,29182029,29182559,29183011,29183398,29183991,29184556,29185182,29185735,29186249,29186792,29187381,29187773,29188277,29188806,29189395,29190051,29190462,29190865,29191324,29191798,29192389,29192878,29193359,29193846,29194342,29194898,29195471,29195844,29196433,29196889,29197292,29197624,29197835,29198213,29198715,29199056,29199380,29199734,29200228,29200463,29200995,29201345,29201855,29202451,29203066,29203435,29203842,29204376,29204957,29205599,29206153,29206720,29207263,29207700,29208219,29208692,29209256,29209748,29210194,29210651,29211000,29211533,29212055,29212497,29212987,29213455,29213820,29214260,29214793,29215198,29215620,29216183,29216481,29216873,29217182,29217414,29218042,29218528,29218903,29219318,29219725,29220088,29220467,29221114,29221409,29221881,29222240,29222491,29222777,29223124,29223515,29223866,29224160,29224611,29224856,29225130,29225572,29225850,29227814,29229811,29231859,29233844,29235815,29237846,29239852,29241868,29243919,29245900,29247586,29249277,29250964,29252639,29254339,29256036,29257723,29259431,29261132,29262852,29264584,29266293,29268020,29269748,29271460,29273196,29274931,29276674,29278390,29280126,29281825,29283507,29285209,29286875,29288571,29290257,29291926,29293605,29295312,29296991,29298704,29300390,29302051,29303711,29305393,29307090,29308796,29310520,29312229,29313978,29315713,29317469,29319176,29320833,29322548,29324252,29325945,29327595,29329279,29330926,29332974,29335022,29337070,29339118,29341166,29343100,29344797,29346470,29348130,29349770,29351462,29353142,29354855,29356543,29358369,29360119,29361855,29363613,29365381,29367088,29368780,29370453,29372187,29373849,29375562,29377226,29378851,29380570,29382239,29384012,29385735,29387390,29389077,29390676,29392363,29394050,29395771,29397565,29399261,29401007,29402750,29404369,29406022,29407505,29408292,29409092,29409815,29410641,29411502,29412028,29412834,29413523,29414083,29415124,29415960,29416846,29417833,29418755,29419094,29419697,29420258,29421044,29421967,29422458,29423228,29423830,29424580,29425260,29425923,29426570,29427164,29427821,29428070,29428464,29429309,29430095,29430960,29431917,29432998,29434052,29434936,29435810,29436678,29437397,29437956,29438734,29440306,29441670,29443486,29445319,29447131,29449020,29450830,29452637,29454483,29456340,29457970,29459624,29461156,29462659,29464172,29465661,29467156,29468649,29470137,29471614,29473103,29474587,29475487,29475882,29476407,29476901,29477283,29477849,29478295,29478828,29479182,29479559,29479933,29480317,29480431,29480555,29480633,29481186,29481750,29482417,29482924,29483462,29484091,29484618,29484914,29485026,29485111,29485526,29485851,29486227,29486508,29486947,29487004,29487129,29487996,29490051,29492090,29494024,29495721,29497390,29499093,29500783,29502494,29504228,29505963,29507661,29509331,29511027,29512739,29514457,29516164,29517963,29520011,29522014,29523842,29525667,29527517,29529276,29531045,29532771,29534565,29536285,29538048,29539850,29541669,29543476,29544084,29544823,29545674,29546495,29547246,29548044,29549560,29550151,29551655,29553258,29554906,29556433,29558013,29559580,29561090,29562556,29564048,29565545,29567050,29568530,29570028,29571498,29572995,29574483,29575977,29577446,29578939,29580426,29580824,29581203,29581532,29581814,29582179,29582630,29582951,29583315,29583715,29583939,29584307,29584844,29585355,29585900,29586464,29586964,29587431,29587763,29588048,29588472,29588768,29589123,29589481,29589900,29590453,29590762,29591120,29591437,29591820,29592328,29592681,29592961,29593443,29593863,29594319,29594760,29595199,29595400,29596782,29598791,29600839,29602787,29604442,29606112,29607772,29609476,29611177,29612871,29614561,29616281,29618003,29619713,29621416,29623081,29624739,29626387,29628067,29629708,29631522,29633570,29635473,29637133,29638862,29640698,29642563,29644420,29646199,29647994,29649842,29651672,29653435,29655100,29656809,29658385,29658995,29659667,29660334,29661042,29661502,29661870,29662172,29662630,29663015,29663359,29663787,29664291,29665170,29666656,29667656,29667987,29669079,29670567,29672086,29673602,29675116,29676878,29678520,29680114,29681739,29683224,29684735,29686256,29687768,29689287,29690808,29692327,29693845,29695349,29696863,29698373,29699882,29701397,29702918,29704412,29705932,29707458,29708969,29710465,29711973,29713484,29714999,29716522,29718025,29719536,29721066,29722571,29724065,29725623,29727151,29728674,29730229,29731748,29733267,29734798,29736298,29737801,29739302,29740806,29742308,29743798,29745285,29746745,29748227,29749727,29751215,29752717,29753900,29754436,29754921,29755519,29755945,29756447,29757062,29757520,29757856,29758490,29759143,29759806,29760523,29761239,29761908,29762631,29763275,29763933,29764583,29765240,29765980,29766708,29767255,29767918,29768534,29768995,29769461,29770062,29770657,29771188,29771889,29772581,29773186,29773875,29774479,29775121,29775713,29776384,29776871,29777509,29778090,29778590,29779264,29779823,29780377,29780970,29781454,29782033,29782586,29783086,29783674,29784267,29784893,29785467,29786007,29786592,29787186,29787768,29788277,29788855,29789402,29790076,29790525,29790977,29791554,29792015,29792573,29793209,29793767,29794376,29794965,29795593,29796169,29796773,29797322,29797773,29798390,29799096,29799695,29800182,29800749,29801315,29801788,29802299,29802856,29803385,29804027,29804563,29804980,29805441,29806077,29806639,29807195,29807899,29808472,29809198,29809937,29810674,29811297,29811939,29812635,29813339,29814056,29814673,29815233,29815890,29816566,29817227,29817831,29818321,29818793,29819396,29820000,29820542,29821187,29821829,29822380,29822998,29823616,29824204,29824830,29825424,29826007,29826522,29826992,29827382,29827918,29828487,29829088,29829603,29830179,29830717,29831262,29831768,29832216,29832809,29833363,29833999,29834507,29834909,29835303,29835881,29836419,29836932,29837477,29837808,29838252,29838825,29839308,29839825,29840326,29840747,29841101,29843023,29845071,29847125,29849160,29851214,29853270,29855318,29857370,29859418,29861472,29863521,29865548,29867596,29869459,29871170,29872879,29874562,29876263,29877975,29879705,29881391,29883091,29884802,29886500,29888221,29889920,29891619,29893330,29895034,29896741,29898483,29900208,29901919,29903648,29905377,29907121,29908859,29910610,29912362,29914128,29915884,29917629,29919352,29921074,29922756,29924463,29926157,29927857,29929534,29931208,29932924,29934658,29936342,29938033,29939732,29941456,29943149,29944863,29946597,29948346,29950114,29951873,29953609,29955364,29957079,29958791,29960527,29962267,29963994,29965736,29967466,29969224,29970979,29972719,29974471,29976217,29977963,29979712,29981442,29983294,29985342,29987390,29989438,29991486,29993534,29995582,29997630,29999478,30001184,30002831,30004545,30006346,30007997,30009698,30011428,30013186,30014880,30016659,30018458,30020257,30022094,30023873,30025708,30027506,30029340,30031110,30032897,30034620,30036435,30038210,30039839,30041453,30043237,30044966,30046618,30048181,30049917,30051679,30053330,30055082,30056750,30058466,30060194,30062058,30063868,30065693,30067524,30069330,30071054,30072758,30074439,30076059,30077749,30079528,30081364,30083180,30084993,30086863,30088722,30090531,30092259,30093074,30093985,30094973,30095851,30096843,30097636,30098396,30099222,30100188,30101056,30102295,30103619,30104995,30106153,30107377,30108570,30109817,30111116,30112443,30113687,30114910,30116091,30117182,30117900,30118619,30119460,30120342,30121281,30122274,30123373,30124716,30125443,30125894,30126900,30128619,30129954,30131857,30133741,30135410,30137281,30139146,30141060,30142881,30144690,30146497,30148308,30150200,30151884,30153521,30154977,30156480,30157966,30159467,30160956,30162449,30163957,30165445,30166922,30167943,30168044,30168221,30168539,30168589,30168753,30169059,30169426,30169719,30170098,30170383,30170724,30170951,30171207,30171552,30171760,30171941,30172029,30172335,30172767,30173244,30173409,30173753,30174272,30174676,30175119,30175423,30175675,30175805,30177698,30179723,30181697,30183383,30185093,30186776,30188484,30190214,30191877,30193558,30195269,30196997,30198720,30200419,30202093,30203754,30205755,30207776,30209575,30211357,30212936,30214670,30216411,30218178,30219951,30221713,30223587,30225464,30227133,30228476,30229184,30230466,30232063,30233657,30235234,30236827,30238444,30239964,30241331,30242645,30244152,30245348,30245779,30246236,30246767,30247305,30247822,30248321,30249010,30250898,30252615,30254302,30256130,30257918,30259695,30260935,30261559,30262582,30264059,30265594,30267083,30268581,30270081,30270718,30270974,30271465,30271847,30272431,30272727,30272834,30273235,30273677,30274137,30274291,30274611,30275162,30276356,30278260,30279929,30281605,30283294,30284990,30286666,30288454,30290280,30291900,30293629,30295391,30297063,30297937,30299139,30300866,30302652,30304289,30305730,30307230,30308714,30310222,30311722,30312413,30312853,30313255,30313651,30314080,30314529,30314929,30315222,30315771,30316194,30316622,30316972,30317499,30318013,30318461,30319030,30320490,30322385,30324038,30325709,30327382,30329059,30330732,30332428,30334220,30336030,30337742,30339448,30341157,30342961,30343881,30344497,30345626,30346626,30347636,30349246,30350858,30352908,30354964,30357020,30359072,30361127,30362735,30364331,30365848,30367245,30368154,30368964,30369813,30370605,30371467,30372298,30373882,30375899,30377900,30379833,30381825,30383249,30383773,30384995,30386130,30387614,30388839,30390209,30391600,30392862,30394003,30394869,30395485,30396585,30397775,30398970,30400023,30400956,30401721,30402702,30403674,30404655,30405749,30406707,30407829,30408940,30410078,30410823,30411479,30412243,30413171,30414127,30414852,30415754,30416518,30417349,30419005,30421053,30422048,30423134,30424199,30425103,30426066,30427148,30428246,30429246,30430268,30431231,30432433,30433294,30434342,30435404,30436332,30437328,30438258,30439125,30439866,30440676,30441539,30442856,30444274,30445866,30447170,30448987,30451006,30453061,30455104,30456798,30458437,30460462,30462510,30464558,30466606,30468396,30470445,30472493,30474106,30476138,30478186,30480234,30482282,30484330,30486378,30488435,30490483,30492510,30494537,30496557,30498576,30500606,30502635,30504611,30506519,30508304,30509957,30512005,30514053,30516101,30518149,30520197,30522245,30524293,30526341,30528389,30530437,30532485,30534539,30536508,30538406,30540238,30541930,30543168,30545202,30547158,30548879,30550735,30552762,30554810,30556862,30558910,30560958,30563015,30565071,30567119,30569167,30571215,30573263,30575311,30577359,30579407,30581462,30583275,30584459,30585978,30588035,30590083,30592131,30594179,30596227,30598275,30600323,30602371,30604419,30606467,30608515,30610563,30612611,30614659,30616707,30618764,30620812,30622860,30624908,30626873,30628498,30630546,30632594,30634642,30636667,30638428,30639901,30641208,30642350,30643274,30643877,30644846,30646903,30648951,30651008,30653056,30655112,30657160,30659217,30661274,30663322,30665370,30666986,30668287,30669435,30671483,30673531,30675543,30677459,30679274,30680874,30682287,30683318,30684113,30684530,30684700,30685735,30687770,30689818,30691872,30693928,30695976,30698024,30700079,30702127,30704175,30706223,30708271,30710319,30712366,30714288,30716013,30717591,30719013,30720604,30722658,30724706,30726754,30728802,30730850,30732898,30734955,30737003,30739051,30741106,30743154,30745162,30747172,30748978,30750590,30751946,30752700,30754370,30756174,30758203,30760218,30762274,30764331,30766365,30768210,30769764,30770827,30772266,30774315,30776363,30778411,30780131,30782179,30784227,30786242,30787757,30787855,30788013,30788117,30788142,30789732,30791780,30793828,30795876,30797924,30799972,30802027,30804080,30806089,30808042,30810090,30812147,30814195,30816201,30818249,30820297,30822345,30824393,30826441,30828489,30830546,30832594,30834642,30836695,30838420,30840127,30842158,30843983,30845912,30847575,30849632,30851497,30852960,30854300,30856022,30858005,30860041,30862094,30864151,30866203,30868242,30870212,30871969,30873066,30873131,30875008,30877064,30879112,30881160,30883208,30885256,30887311,30889368,30891424,30893457,30895495,30897433,30899270,30901194,30903028,30904648,30906696,30908753,30910801,30912849,30914897,30916954,30919002,30921050,30922950,30925007,30927055,30929103,30931151,30933199,30935247,30937295,30939343,30940933,30942975,30944939,30946912,30948194,30949915,30951963,30954019,30955988,30957648,30959617,30961665,30963713,30965761,30967818,30969874,30971922,30973970,30976018,30978063,30979669,30980974,30982824,30984794,30986808,30988834,30990882,30992923,30994960,30997010,30999061,31001111,31003156,31005194,31007214,31009220,31011191,31013164,31015186,31017234,31019288,31021329,31023379,31025393,31027445,31029480,31031525,31033582,31035616,31037659,31039671,31041541,31043274,31044794,31046132,31047389,31048598,31049762,31050907,31051945,31053002,31054084,31055064,31056060,31056898,31057773,31058619,31059317,31059920,31060381,31060791,31060987,31061161,31061235,31061286,31062002,31064045,31066082,31068134,31070189,31072202,31073996,31075742,31077208,31078185,31079552,31081600,31083648,31085696,31087744,31089648,31091696,31093744,31095792,31097754,31099802,31101850,31103898,31105900,31107957,31110014,31112071,31114126,31116179,31118231,31120279,31122332,31124378,31126419,31128470,31130476,31132398,31134268,31136036,31137807,31139572,31141180,31143229,31145277,31147327,31149375,31151431,31153483,31155539,31157295,31159349,31161405,31163453,31165501,31167558,31169606,31171654,31173679,31175644,31177692,31179701,31181592,31183046,31185101,31187149,31189140,31190572,31192610,31194658,31196706,31198754,31200802,31202850,31204905,31206953,31209000,31210971,31212731,31214441,31215927,31217290,31218523,31219684,31221591,31223639,31225687,31227744,31229797,31231780,31233613,31235127,31235813,31236296,31237472,31239061,31240835,31242768,31244717,31246647,31248594,31250587,31252451,31254134,31255596,31256873,31257796,31258293,31259019,31260906,31262955,31264931,31266191,31267073,31269130,31271178,31273226,31275274,31277322,31279370,31281418,31283466,31285450,31287452,31289502,31291496,31293202,31294542,31295367,31297419,31299464,31301124,31302494,31304490,31306538,31308586,31310636,31312684,31314740,31316788,31318838,31320852,31322819,31324400,31326338,31328394,31329815,31330410,31332349,31334397,31336445,31338493,31340541,31342589,31344645,31346676,31348419,31350454,31352502,31354550,31356598,31358646,31360694,31362747,31364295,31365385,31367010,31368969,31371014,31373071,31375119,31377046,31378218,31380137,31381953,31384007,31386055,31388103,31390160,31392195,31394169,31395810,31397054,31397929,31398612,31399027,31399362,31399543,31400244,31402292,31404340,31406388,31408436,31410484,31412532,31414580,31416628,31418676,31420724,31422772,31424820,31426868,31428916,31430964,31433012,31435060,31436989,31438446,31440494,31442542,31444590,31446638,31448686,31450734,31452782,31454753,31455133,31455808,31457349,31459148,31461184,31463239,31465287,31467335,31469383,31471431,31473479,31475527,31477575,31479623,31481609,31483335,31484912,31486293,31487627,31488740,31489743,31490759,31491548,31492294,31493147,31494130,31494871,31496057,31497953,31500001,31502049,31504106,31506154,31508202,31510250,31512298,31514346,31516394,31518442,31520490,31522538,31524593,31526161,31527191,31527861,31528663,31530675,31532732,31534780,31536836,31538784,31540037,31542094,31543999,31545627,31546701,31547541,31548237,31548789,31550544,31552592,31554219,31554937,31556095,31557979,31559931,31561961,31564009,31566056,31568113,31570157,31572199,31573968,31575617,31577407,31579353,31581247,31583296,31585348,31587396,31589444,31591492,31593549,31595597,31597653,31599687,31601591,31603227,31604417,31605031,31606166,31608081,31610129,31612186,31614234,31616282,31618330,31620378,31622426,31624482,31626529,31628408,31630040,31631374,31632238,31632993,31633224,31634431,31636479,31638512,31640455,31642362,31644041,31645774,31647728,31649776,31651702,31653334,31654670,31656398,31658101,31659967,31662014,31664062,31665979,31667597,31669036,31670886,31672802,31674451,31676502,31678416,31680161,31681896,31683277,31684567,31685732,31687737,31689689,31691720,31693753,31695738,31697744,31699651,31701699,31703754,31705805,31707794,31709105,31709900,31711854,31713902,31715950,31717998,31720046,31721956,31722527,31724431,31726479,31728535,31730583,31732620,31733464,31734306,31736361,31738408,31740464,31742512,31744569,31746626,31748683,31750606,31752654,31754424,31756163,31758211,31759992,31762029,31764085,31765907,31767778,31769831,31771669,31772992,31774411,31776459,31777293,31778740,31780788,31782836,31784890,31786833,31787385,31787464,31788076,31789889,31791937,31793985,31796033,31798089,31800146,31802202,31804107,31806155,31808203,31810233,31812205,31814253,31816223,31818271,31820319,31822347,31824395,31826427,31828475,31830312,31832340,31833971,31835968,31837331,31839282,31840592,31842092,31843698,31845406,31846772,31848099,31849711,31851768,31853606,31855553,31857601,31859649,31861697,31863753,31865573,31866816,31867731,31868432,31870487,31872002,31873299,31875324,31877372,31879420,31881468,31883516,31885564,31887612,31889660,31891708,31893763,31895814,31897832,31899721,31901402,31902898,31904193,31905216,31905965,31907980,31910028,31912076,31914124,31916172,31918228,31918919,31920425,31922466,31924517,31926565,31928468,31930430,31932479,31934533,31936581,31938629,31940677,31942734,31944789,31946820,31948725,31950324,31951539,31951875,31953765,31955813,31957861,31959909,31961850,31962535,31962763,31964536,31966592,31968640,31970688,31972745,31974799,31976847,31978895,31980943,31982649,31983573,31983855,31984785,31986496,31988542,31990590,31992638,31994686,31996734,31998782,32000830,32002878,32004935,32006992,32009040,32011005,32012842,32014622,32016412,32018081,32019566,32020877,32022155,32023371,32024525,32025439,32026094,32026668,32027189,32027700,32028139,32028600,32029038,32029451,32029869,32030346,32030867,32031332,32031792,32031959,32032533,32033714,32034896,32036142,32037346,32038411,32039438,32040341,32041121,32041722,32042122,32042333,32042399,32042893,32044300,32046037,32048043,32050097,32052145,32054186,32056213,32058171,32060073,32061942,32063795,32065723,32067709,32069658,32071051,32072993,32075038,32077094,32079148,32081146,32083183,32085230,32087267,32089299,32091307,32093280,32095328,32097267,32099200,32101220,32103268,32105316,32107221,32108954,32110888,32112780,32114551,32116560,32118571,32119985,32121492,32123356,32125412,32127464,32129380,32131276,32133283,32135037,32137019,32138944,32140992,32143048,32145096,32147045,32148999,32151054,32152952,32154401,32156041,32157536,32158835,32159592,32160054,32160588,32160941,32161669,32162216,32163075,32164494,32165993,32167429,32168860,32170129,32171548,32173098,32174734,32176549,32178371,32180201,32182147,32184190,32186211,32188265,32190320,32192368,32194425,32196481,32198538,32200592,32202641,32204671,32206650,32208627,32210620,32212593,32214439,32216121,32217830,32219524,32221205,32222794,32224279,32225705,32227169,32228609,32230013,32231271,32232490,32233688,32234907,32236108,32237180,32238147,32239061,32240007,32241161,32242728,32244160,32245629,32247125,32248555,32250040,32251595,32253148,32254567,32256128,32257614,32259168,32260849,32262495,32264064,32265689,32267251,32268711,32270429,32272076,32273911,32275616,32277368,32279206,32281046,32282937,32284818,32286715,32288689,32290628,32292646,32294692,32296749,32298797,32300845,32302902,32304950,32306998,32308985,32310839,32312521,32313990,32314868,32316631,32318456,32320508,32322559,32324607,32326608,32327244,32327484,32329243,32331291,32333348,32335139,32336809,32338676,32339947,32341995,32344052,32345310,32347198,32349246,32351294,32353342,32355286,32356934,32358991,32360860,32362210,32363836,32365884,32367932,32369980,32372037,32374094,32376148,32378084,32380132,32382188,32384236,32386284,32388332,32390380,32392428,32394476,32396524,32398572,32400620,32402653,32404699,32406756,32408804,32410861,32412909,32414957,32416890,32418871,32420895,32422952,32425000,32427044,32429092,32431140,32433188,32435236,32437284,32439332,32441372,32442594,32444498,32446549,32448597,32450650,32452698,32454741,32456792,32458824,32460683,32462623,32464267,32465824,32467399,32468865,32470675,32472413,32473931,32475344,32476627,32477692,32478440,32478886,32480934,32482982,32485030,32487086,32489134,32491032,32492524,32493141,32493559,32495043,32497091,32499139,32500859,32502474,32503936,32505778,32507573,32507940,32508141,32509237,32509872,32510079,32510644,32511033,32511434,32511784,32512188,32512419,32513009,32513789,32514582,32515428,32515933,32516517,32517285,32518248,32518878,32519728,32521179,32522637,32524045,32525241,32526422,32527554,32528375,32528973,32529617,32529876,32530202,32530723,32531155,32531840,32532892,32533552,32534023,32534492,32534829,32535646,32536361,32536949,32537518,32538114,32538608,32539020,32539838,32540670,32541704,32542458,32543265,32543900,32544688,32545612,32546232,32547015,32547916,32548740,32548955,32549685,32550277,32550834,32551725,32552242,32552556,32552839,32553173,32553462,32553974,32554223,32554657,32554839,32555223,32555701,32556146,32556908,32557544,32557856,32558264,32558579,32559065,32559751,32560112,32560543,32561205,32561564,32561867,32562096,32562716,32563413,32563671,32564127,32564449,32565001,32565833,32566622,32566722,32566839,32567202,32567448,32568112,32568993,32569314,32569702,32570163,32570467,32570813,32571435,32571728,32572277,32573215,32573765,32574001,32574392,32574684,32575146,32575459,32575681,32576015,32576416,32577375,32577874,32578325,32578794,32579482,32579972,32580434,32580858,32581098,32581807,32582132,32582457,32583093,32583671,32584466,32584720,32584905,32585314,32585748,32586395,32586740,32587491,32587724,32588534,32589052,32589458,32589710,32590396,32590720,32591390,32591943,32592432,32592943,32593373,32594112,32594670,32595011,32595441,32596049,32596899,32597351,32598289,32599459,32600636,32601736,32602909,32604105,32604695,32605120,32605842,32606906,32608067,32608876,32609319,32610080,32611216,32611694,32611962,32612165,32612366,32612689,32612878,32613034,32613153,32613383,32613852,32614165,32614316,32614449,32614583,32614991,32615514,32616163,32616481,32617192,32617809,32618376,32619167,32619460,32620020,32620219,32620681,32621097,32621366,32621690,32622204,32622797,32623220,32623700,32624233,32624511,32624794,32625215,32625756,32625907,32626125,32626404,32626610,32626984,32627170,32627324,32627752,32628066,32628336,32628517,32628801,32628984,32629233,32629759,32630266,32630899,32631184,32631797,32632760,32633024,32633497,32633983,32634502,32635136,32635635,32636055,32636657,32637383,32638312,32639314,32639730,32640221,32640469,32640867,32641275,32641523,32641949,32642293,32642626,32642877,32643151,32643283,32643409,32644342,32645437,32646019,32646642,32647496,32647895,32648539,32648971,32649259,32649762,32650384,32650878,32651131,32651400,32651811,32652790,32653388,32654283,32654950,32655335,32655956,32656164,32656439,32656768,32656993,32657292,32657504,32658096,32658683,32659336,32659750,32660173,32660945,32661425,32662176,32662530,32662594,32663092,32663722,32664364,32665078,32665505,32665927,32666525,32666889,32667235,32667588,32668179,32669329,32670597,32671976,32673023,32674392,32675672,32677169,32678478,32678823,32678943,32679119,32679558,32680047,32680211,32680336,32680610,32681072,32681397,32681881,32682348,32683062,32684147,32684922,32685208,32685633,32685808,32686174,32686370,32686713,32686958,32687145,32687529,32687873,32688219,32688533,32689043,32689428,32689810,32690226,32690828,32691489,32691909,32692352,32692663,32693100,32693432,32693823,32694040,32694348,32694553,32695069,32695417,32695736,32695974,32696152,32696450,32696961,32697264,32697521,32697911,32698069,32698791,32698982,32699414,32699567,32700155,32700727,32701348,32701632,32701772,32702069,32702518,32702883,32703319,32703804,32704158,32704846,32705611,32706087,32706339,32706956,32707708,32707932,32708550,32709287,32709525,32709686,32709867,32710042,32710180,32710395,32710828,32711008,32711158,32711313,32711481,32711695,32711968,32712123,32712432,32712683,32713097,32713602,32714103,32714279,32714525,32714771,32715006,32715549,32716075,32716335,32716941,32717427,32717573,32717790,32717977,32718465,32718796,32719161,32719495,32719674,32720069,32720264,32720439,32720649,32721018,32721347,32721767,32722116,32722242,32722585,32722743,32722988,32723224,32723350,32723608,32724238,32724739,32725165,32725605,32726031,32726394,32726663,32726873,32727344,32727805,32727936,32728353,32729175,32729544,32729979,32730316,32730701,32731070,32731760,32732573,32733552,32734410,32735082,32735813,32737509,32738507,32739718,32741042,32742452,32743911,32745352,32746829,32748356,32749820,32751360,32752931,32754357,32755864,32757369,32758895,32760458,32761979,32763488,32764987,32766564,32768030,32769455,32770782,32772039,32773228,32774524,32775941,32777257,32778464,32779657,32780742,32781845,32783327,32784798,32786469,32788353,32790086,32791863,32793580,32795272,32796975,32798723,32800417,32802158,32803886,32805593,32807328,32809088,32810863,32812602,32814303,32815859,32817538,32819193,32820847,32822546,32824250,32825939,32827669,32829385,32831060,32832730,32834379,32836058,32837707,32839278,32840921,32842520,32844441,32846049,32847764,32849411,32851050,32852700,32854377,32856120,32857867,32859709,32861504,32863339,32865166,32866979,32868738,32870427,32872143,32873890,32875690,32877508,32879291,32881034,32882666,32884485,32886307,32887964,32889777,32891526,32893256,32894966,32896591,32898253,32899815,32901669,32903219,32904878,32906483,32908075,32909699,32911319,32912996,32914647,32916349,32918016,32919726,32921439,32923119,32924847,32926614,32928345,32929978,32931737,32933438,32935154,32936870,32938516,32940130,32941837,32943491,32945153,32946773,32948394,32949964,32951528,32953018,32954544,32956245,32957611,32958792,32959720,32960504,32961018,32962167,32963536,32964951,32966412,32967620,32968669,32969907,32971108,32972305,32973722,32975054,32976334,32977602,32978840,32980126,32981263,32982210,32983014,32983882,32984735,32985654,32986305,32986951,32987863,32988936,32989931,32991128,32992336,32994153,32995581,32997031,32998413,32999818,33001409,33002781,33004283,33005746,33007347,33008753,33010098,33011346,33012680,33013028,33013241,33013625,33013840,33014065,33014765,33015775,33017164,33018378,33019271,33020565,33021945,33023130,33024716,33026409,33027576,33028811,33030390,33031587,33032383,33033732,33035059,33036633,33037846,33039478,33041003,33042609,33044200,33045775,33047191,33048429,33050038,33051378,33053093,33054370,33055846,33057627,33058819,33060548,33062168,33063433,33064906,33066234,33067683,33069133,33070696,33072450,33073741,33074874,33076550,33078199,33079553,33081233,33082490,33083866,33085336,33086950,33088639,33090031,33091421,33093051,33094434,33096197,33097547,33099138,33100624,33101906,33103420,33104982,33106352,33107770,33109072,33110644,33112160,33113866,33115286,33116903,33118573,33119659,33121260,33122662,33124237,33125230,33126736,33128351,33129941,33131327,33132862,33134306,33135583,33137328,33138785,33139906,33141244,33142763,33144175,33145362,33146859,33148328,33149744,33151011,33152656,33154250,33155929,33157525,33158908,33160047,33161327,33162948,33164352,33166183,33167508,33169182,33170536,33172297,33173584,33175262,33176714,33178271,33179793,33181698,33183032,33184694,33186298,33188071,33189716,33191115,33192619,33194138,33195900,33197244,33199008,33200702,33202135,33203740,33205304,33207063,33208853,33210329,33211991,33213281,33215126,33216659,33218206,33219814,33221625,33223055,33224558,33226376,33227664,33229310,33231041,33232649,33234078,33235834,33237463,33239275,33241182,33243013,33244898,33246943,33248984,33251006,33253044,33255076,33257126,33259148,33261172,33263201,33265228,33267284,33269330,33271381,33273429,33275445,33277441,33279274,33281291,33283301,33285337,33287376,33289428,33291476,33293515,33295552,33297577,33299608,33301616,33303653,33305692,33307729,33309774,33311814,33313857,33315880,33317892,33319914,33321864,33323854,33325895,33327946,33329999,33332020,33334041,33336086,33338108,33340110,33342104,33344108,33346105,33348082,33350094,33352094,33354104,33356135,33358176,33360208,33362207,33364235,33366241,33368232,33370238,33372253,33374260,33376268,33378308,33380344,33382382,33384391,33386373,33388374,33390353,33392335,33394345,33396343,33398383,33400437,33402470,33404514,33406538,33408525,33410546,33412567,33414560,33416609,33418637,33420683,33422734,33424778,33426800,33428841,33430890,33432915,33434963,33436954,33438946,33440975,33443006,33444967,33446956,33448984,33450935,33452932,33454917,33456927,33458892,33460797,33462787,33464756,33466735,33468715,33470719,33472675,33474648,33476634,33478621,33480578,33482571,33484539,33486548,33488531,33490505,33492467,33494455,33496430,33498448,33500425,33502381,33504362,33506351,33508336,33510322,33512286,33514242,33516224,33518224,33520210,33522210,33524176,33526182,33528173,33530148,33532117,33534071,33536038,33538035,33540025,33541990,33543996,33545968,33547961,33549908,33551890,33553855,33555850,33557845,33559843,33561853,33563833,33565830,33567834,33569847,33571843,33573845,33575832,33577830,33579774,33581773,33583779,33585780,33587717,33589652,33591691,33593723,33595655,33597675,33599716,33601739,33603687,33605726,33607740,33609745,33611715,33613743,33615729,33617760,33619809,33621848,33623847,33625877,33627908,33629923,33631919,33633899,33635905,33637929,33639930,33641931,33643849,33645721,33647767,33649815,33651842,33653830,33655763,33657675,33659633,33661500,33663247,33665207,33667120,33668964,33670763,33672637,33674574,33676552,33678552,33680495,33682339,33684237,33686193,33687937,33689845,33691780,33693734,33695647,33697656,33699551,33701481,33703390,33705292,33707202,33709067,33711033,33713024,33714953,33716887,33718797,33720711,33722569,33724437,33726304,33728192,33730173,33732158,33734072,33736066,33738090,33739895,33741833,33743608,33745628,33747435,33749393,33751340,33753297,33755208,33757209,33759214,33761082,33762959,33764720,33766675,33768636,33770528,33772514,33774413,33776332,33778262,33780228,33782170,33784013,33785998,33787994,33789823,33791651,33793446,33795211,33796979,33798851,33800733,33802661,33804425,33806348,33808180,33810055,33812055,33813961,33815894,33817818,33819701,33821611,33823473,33825406,33827287,33829221,33831077,33833041,33835008,33836899,33838857,33840715,33842698,33844608,33846476,33848399,33850242,33852076,33853964,33855821,33857719,33859554,33861379,33862969,33864682,33866134,33867821,33869716,33871359,33873332,33875295,33877227,33879214,33881228,33883191,33885151,33887106,33889062,33891070,33893041,33895002,33896991,33898575,33899964,33901290,33902705,33904129,33905630,33907154,33908569,33910185,33911700,33913191,33914800,33916418,33918156,33919764,33921373,33923363,33925367,33927311,33929289,33931236,33933221,33935048,33936956,33938929,33940921,33942925,33944814,33946809,33948729,33950632,33952511,33954361,33956348,33958391,33960417,33962322,33964317,33966255,33968108,33970018,33971905,33973875,33975878,33977852,33979821,33981837,33983785,33985618,33987533,33989438,33991400,33993391,33995336,33997288,33999198,34001095,34002936,34004827,34006730,34008699,34010701,34012626,34014600,34016530,34018511,34020297,34022215,34024156,34026157,34028156,34030101,34032087,34034038,34035962,34037829,34039725,34041675,34043634,34045561,34047520,34049406,34051383,34053324,34055224,34057163,34058989,34060726,34062407,34064056,34065731,34067452,34069161,34070898,34072601,34074301,34075996,34077642,34079383,34081110,34082836,34084561,34086218,34087892,34089560,34091265,34092998,34094739,34096364,34097981,34099654,34101374,34103065,34104799,34106548,34108167,34109759,34111404,34113077,34114841,34116503,34118168,34119818,34121425,34123057,34124810,34126531,34128297,34129956,34131628,34133299,34134967,34136735,34138509,34140239,34141857,34143474,34145223,34147024,34148896,34150695,34152435,34154184,34155948,34157814,34159648,34161497,34163310,34165115,34166928,34168713,34170445,34172288,34173911,34175593,34177235,34178995,34180773,34182386,34183966,34185680,34187459,34189139,34190804,34192620,34194214,34195934,34197718,34199388,34200938,34202678,34204405,34206069,34207762,34209552,34211327,34213044,34214727,34216558,34218360,34220074,34221757,34223500,34225209,34226931,34228755,34230515,34232271,34234232,34236139,34238147,34240115,34242083,34244013,34245955,34247907,34249812,34251796,34253775,34255744,34257740,34259737,34261715,34263720,34265707,34267688,34269648,34271611,34273596,34275559,34277555,34279560,34281545,34283519,34285486,34287470,34289436,34291415,34293439,34295435,34297425,34299379,34301361,34303340,34305311,34307277,34309250,34311217,34313184,34315147,34317138,34319104,34321076,34323058,34325005,34326971,34328925,34330870,34332843,34334800,34336775,34338739,34340705,34342660,34344648,34346595,34348567,34350504,34352500,34354427,34356411,34358343,34360326,34362253,34364232,34366163,34368142,34370075,34372049,34373987,34375959,34377895,34379868,34381804,34383730,34385617,34387526,34389449,34391352,34393259,34395170,34397078,34398993,34400934,34402820,34404734,34406640,34408530,34410454,34412358,34414258,34416115,34418072,34419949,34421777,34423719,34425605,34427430,34429361,34431261,34433092,34435019,34436924,34438751,34440670,34442570,34444400,34446326,34448233,34450061,34451977,34453887,34455728,34457626,34459548,34461362,34463228,34465125,34466869,34468748,34470639,34472405,34474284,34476148,34477930,34479818,34481655,34483464,34485358,34487152,34489013,34490901,34492710,34494524,34496407,34498194,34500028,34501923,34503702,34505580,34507480,34509283,34511175,34513021,34514891,34516794,34518622,34520487,34522404,34524206,34526095,34527957,34529804,34531712,34533555,34535401,34537312,34539125,34541022,34542896,34544791,34546635,34548516,34550406,34552246,34554124,34556017,34557861,34559738,34561635,34563477,34565351,34567255,34569098,34570967,34572874,34574715,34576578,34578485,34580328,34582190,34584097,34585942,34587805,34589718,34591585,34593447,34595326,34597201,34599070,34600936,34602818,34604702,34606558,34608448,34610339,34612175,34614063,34615967,34617803,34619699,34621607,34623443,34625349,34627259,34629091,34631007,34632912,34634781,34636708,34638629,34640541,34642457,34644400,34646317,34648226,34650141,34652047,34653968,34655886,34657800,34659712,34661653,34663573,34665483,34667398,34669361,34671368,34673360,34675345,34677320,34679314,34681300,34683285,34685263,34687268,34689248,34691216,34693109,34695084,34696954,34698915,34700782,34702757,34704604,34706550,34708406,34710290,34712247,34714160,34716075,34718059,34719981,34721967,34723897,34725871,34727813,34729779,34731719,34733693,34735640,34737604,34739569,34741537,34743486,34745466,34747375,34749264,34751155,34753089,34754945,34756917,34758744,34760721,34762569,34764506,34766390,34768280,34770164,34772063,34774003,34775846,34777830,34779574,34781502,34783316,34785193,34787025,34788878,34790771,34792576,34794510,34796303,34798204,34800074,34801911,34803770,34805585,34807498,34809293,34811221,34813095,34815140,34817191,34819219,34821217,34823235,34825249,34827271,34829283,34831322,34833335,34835375,34837403,34839436,34841464,34843483,34845458,34847422,34849389,34851413,34853453,34855510,34857560,34859574,34861618,34863640,34865639,34867649,34869680,34871707,34873759,34875782,34877837,34879893,34881936,34883964,34885947,34887906,34889915,34891929,34893940,34895959,34898002,34900056,34902039,34904027,34906050,34908039,34910000,34911982,34913998,34916038,34918060,34920078,34922092,34924078,34926115,34928112,34930110,34932079,34934071,34936084,34938113,34940148,34942175,34944183,34946181,34948200,34950187,34952172,34954167,34956144,34958136,34960176,34962216,34964256,34966300,34968328,34970384,34972379,34974394,34976395,34978386,34980379,34982404,34984429,34986481,34988519,34990573,34992616,34994643,34996643,34998659,35000703,35002724,35004777,35006811,35008831,35010860,35012869,35014880,35016866,35018853,35020867,35022844,35024843,35026827,35028787,35030760,35032755,35034677,35036655,35038617,35040588,35042557,35044546,35046555,35048522,35050460,35052469,35054430,35056307,35058130,35060094,35062100,35064104,35066083,35068083,35070037,35071997,35073971,35075963,35077955,35079927,35081803,35083705,35085607,35087571,35089548,35091452,35093368,35095328,35097271,35099227,35101098,35102951,35104903,35106908,35108889,35110727,35112640,35114562,35116515,35118426,35120268,35122162,35124048,35125910,35127860,35129820,35131762,35133719,35135630,35137463,35139370,35141201,35143112,35145061,35146988,35148969,35150891,35152763,35154620,35156487,35158395,35160360,35162342,35164247,35166043,35167963,35169808,35171748,35173702,35175639,35177526,35179398,35181212,35182878,35184803,35186705,35188583,35190511,35192375,35194250,35196144,35198036,35199883,35201787,35203699,35205538,35207415,35209219,35211013,35212925,35214897,35216846,35218771,35220664,35222535,35224361,35226228,35228068,35229906,35231824,35233780,35235731,35237706,35239621,35241493,35243348,35245242,35247244,35249168,35251202,35253221,35255225,35257086,35259074,35261095,35263107,35265114,35267080,35269034,35271016,35273052,35275028,35277027,35278756,35280739,35282739,35284787,35286736,35288509,35290511,35292517,35294546,35296509,35298301,35300314,35302327,35304350,35306355,35308355,35310159,35312105,35314124,35316144,35318146,35320158,35322180,35324207,35326202,35328204,35330210,35332149,35334169,35336167,35338147,35340109,35342132,35344162,35346119,35347976,35349722,35351585,35353525,35355519,35357506,35359487,35361505,35363464,35365446,35367382,35369347,35371305,35373258,35375132,35377101,35379045,35381013,35382972,35384953,35386950,35388967,35390952,35392932,35394885,35396850,35398825,35400853,35402796,35404646,35406608,35408535,35410535,35412381,35414285,35416240,35418174,35420057,35422017,35424007,35426013,35427982,35429975,35431993,35434026,35436033,35438018,35439938,35441827,35443779,35445687,35447622,35449514,35451494,35453442,35455371,35457334,35459311,35461322,35463315,35465309,35467274,35469266,35471257,35473258,35475248,35477239,35479216,35481140,35483117,35485056,35487021,35488959,35490924,35492917,35494873,35496871,35498903,35500890,35502898,35504890,35506841,35508863,35510813,35512762,35514735,35516721,35518644,35520673,35522555,35524526,35526512,35528511,35530502,35532441,35534418,35536420,35538424,35540437,35542317,35544304,35546257,35548297,35550230,35552249,35554210,35556196,35558223,35560187,35562176,35564201,35566164,35568177,35570186,35572129,35574174,35576107,35578056,35580055,35581984,35584011,35586014,35587969,35589878,35591856,35593803,35595789,35597705,35599668,35601636,35603606,35605541,35607503,35609484,35611503,35613437,35615421,35617352,35619328,35621269,35623219,35625164,35627111,35628996,35630855,35632773,35634776,35636697,35638598,35640551,35642403,35644344,35646296,35648223,35650188,35652190,35654147,35656100,35658108,35660076,35662049,35664064,35665955,35667933,35669875,35671877,35673903,35675888,35677917,35679944,35681949,35683852,35685866,35687841,35689838,35691874,35693915,35695941,35697979,35699989,35701951,35703961,35705929,35707956,35709989,35712013,35714029,35716018,35718047,35720055,35722091,35724100,35726137,35728174,35730203,35732253,35734288,35736303,35738262,35740277,35742243,35744294,35746320,35748356,35750407,35752456,35754482,35756457,35758482,35760463,35762495,35764518,35766559,35768594,35770637,35772660,35774613,35776548,35778490,35780301,35782271,35784254,35786237,35788235,35790261,35792269,35794275,35796301,35798159,35800168,35802141,35804103,35806068,35808080,35810091,35811988,35813996,35815910,35817844,35819831,35821843,35823850,35825775,35827778,35829702,35831657,35833521,35835321,35836900,35838623,35840116,35841674,35843347,35844844,35846301,35847890,35849274,35850761,35852114,35853590,35854960,35856036,35857665,35858814,35860241,35861447,35863060,35864092,35865437,35866713,35867662,35868928,35870372,35871790,35872884,35874235,35875783,35876667,35877767,35879145,35880370,35881697,35883106,35884278,35885667,35886800,35888369,35889545,35890917,35892394,35893816,35895259,35896646,35898212,35899654,35901245,35902780,35904087,35905525,35907034,35908424,35909686,35911258,35912513,35913871,35914962,35916594,35917779,35919247,35920551,35921429,35923049,35924425,35925767,35926940,35928177,35929817,35930738,35931837,35933244,35934522,35936005,35937174,35938446,35939761,35940926,35942563,35943837,35945297,35946796,35948062,35949709,35951112,35952631,35954164,35955566,35957176,35958451,35959939,35961487,35962725,35964260,35965548,35966889,35968222,35969377,35970980,35972232,35973675,35974924,35975778,35977420,35978825,35980128,35981310,35982560,35984169,35985035,35986204,35987639,35988840,35990363,35991450,35992759,35994086,35995270,35996876,35998199,35999674,36001166,36002399,36004052,36005413,36006941,36008491,36009832,36011405,36012723,36014231,36015728,36016844,36018419,36019611,36021062,36022359,36023698,36025187,36026320,36027794,36028983,36029839,36031415,36032802,36033971,36035216,36036547,36037996,36038898,36040155,36041510,36042589,36044147,36045264,36046637,36047780,36049424,36050504,36051817,36053269,36054712,36056118,36057604,36059179,36060629,36062203,36063599,36065022,36066401,36067878,36069366,36070575,36072190,36073370,36074792,36075937,36077517,36078686,36080191,36081514,36082444,36083884,36085250,36086656,36087742,36089086,36090657,36091681,36092758,36094112,36095467,36096763,36098161,36099348,36100630,36101777,36103437,36104639,36106162,36107671,36108946,36110544,36111880,36113397,36114924,36116351,36118014,36119265,36120747,36122239,36123593,36125071,36126417,36127760,36129107,36130250,36131847,36133057,36134490,36135720,36136561,36138150,36139510,36140824,36142004,36143293,36144888,36145698,36146962,36148387,36149593,36151099,36152227,36153567,36154888,36156101,36157734,36159032,36160547,36162053,36163334,36164959,36166308,36167887,36169488,36170856,36172455,36173821,36175379,36176921,36178148,36179530,36180930,36182218,36183520,36184674,36186249,36187423,36188847,36190130,36190994,36192588,36193938,36195248,36196406,36197653,36199223,36200052,36201295,36202701,36203882,36205330,36206424,36207734,36209075,36210339,36211915,36213053,36214540,36216101,36217477,36219080,36220499,36222066,36223617,36225083,36226673,36228033,36229598,36231169,36232424,36233699,36235272,36236543,36237857,36238990,36240585,36241774,36243193,36244498,36245409,36246801,36248220,36249648,36250729,36252071,36253626,36254561,36255640,36257008,36258264,36259391,36260851,36262015,36263420,36264626,36266332,36267451,36268849,36270407,36271864,36273268,36274831,36276361,36277799,36279369,36280850,36282378,36283724,36285235,36286715,36287872,36289558,36290714,36292149,36293332,36294924,36296136,36297533,36298926,36299891,36301172,36302554,36303990,36305097,36306391,36307672,36309090,36310039,36311385,36312818,36314021,36315644,36316710,36318110,36319299,36320965,36322196,36323604,36325055,36326459,36327857,36329384,36330977,36332462,36334035,36335573,36337049,36338477,36340026,36341466,36342636,36344329,36345546,36347005,36348176,36349781,36350983,36352374,36353780,36354789,36356011,36357429,36358866,36360001,36361299,36362461,36364085,36364904,36366180,36367676,36368986,36370623,36371693,36373073,36374381,36375848,36377297,36378613,36380127,36381654,36382896,36384602,36386231,36387842,36389464,36390877,36392602,36393790,36395028,36396315,36397677,36398994,36400799,36402305,36403746,36404935,36406200,36407783,36409276,36410750,36412567,36413978,36415285,36416536,36418100,36419514,36420976,36422804,36424258,36425695,36427001,36428299,36429773,36431166,36432545,36434386,36435806,36437406,36438795,36440055,36441548,36442786,36444066,36445480,36447236,36448327,36449583,36450861,36452299,36453928,36455243,36456613,36458014,36459608,36460992,36462685,36464395,36466125,36468035,36469615,36471582,36473470,36475266,36477011,36478868,36480682,36482457,36484380,36485755,36487267,36488953,36490646,36492405,36494070,36495741,36497330,36498907,36499658,36501440,36503435,36505401,36507164,36508732,36509498,36511340,36513157,36514946,36516794,36518614,36520353,36522228,36523520,36525160,36527034,36528578,36530503,36532383,36534264,36536098,36537737,36539511,36541343,36543288,36545276,36546873,36548836,36550754,36552658,36554546,36556428,36558188,36559730,36561581,36563424,36565309,36567164,36568955,36570590,36572359,36573886,36575714,36577338,36579020,36580685,36582251,36583830,36585200,36586941,36588879,36590893,36592904,36594843,36596781,36598802,36600828,36602804,36604764,36606800,36608829,36610796,36612756,36614788,36616810,36618749,36620760,36622680,36624629,36626592,36628588,36630571,36632573,36634577,36636602,36638618,36640615,36642629,36644655,36646662,36648674,36650601,36652482,36654531,36656579,36658607,36660634,36662612,36664519,36666428,36668386,36670284,36672195,36674161,36676031,36677977,36679869,36681765,36683684,36685521,36687451,36689355,36691234,36693154,36695105,36696986,36698868,36700801,36702703,36704546,36705879,36707775,36709633,36711394,36712822,36714221,36715495,36717254,36718890,36720548,36722170,36724011,36725505,36727115,36728688,36730275,36731738,36733342,36735057,36736740,36738188,36739363,36740846,36742540,36743986,36745150,36746870,36748769,36750562,36752291,36754060,36755859,36757429,36759376,36761214,36762911,36764581,36766265,36768001,36769570,36771322,36773063,36774555,36776064,36777553,36779387,36780663,36781997,36783258,36784828,36786452,36787960,36789107,36790245,36791867,36793512,36795061,36796442,36798458,36800430,36802411,36804409,36806367,36808217,36809995,36811727,36813589,36815484,36817349,36818914,36820802,36822811,36824630,36826514,36828428,36830281,36832083,36833744,36835632,36837393,36838813,36840296,36842054,36843454,36844833,36846527,36848049,36849479,36851186,36852699,36854485,36855964,36857593,36859226,36861044,36862528,36864338,36865901,36867573,36869006,36870684,36872456,36873970,36875692,36876961,36878612,36879975,36881822,36883732,36885522,36887250,36888628,36889969,36891716,36893407,36895028,36896513,36898091,36899800,36901425,36902936,36904604,36906152,36907832,36909467,36910733,36912348,36913839,36915452,36917147,36918376,36920009,36921460,36923145,36924800,36926136,36927643,36929232,36930801,36931956,36933194,36934597,36935772,36937241,36938473,36940060,36941177,36942538,36943969,36945251,36946775,36948052,36949360,36950886,36952336,36953835,36955531,36957458,36958913,36960677,36962481,36964356,36966211,36968147,36969689,36971634,36973114,36974678,36976558,36978185,36980117,36981336,36983246,36985030,36986545,36988225,36989916,36991697,36993257,36994734,36996340,36997906,36999453,37001043,37002417,37004013,37005503,37007069,37008616,37010169,37011671,37013208,37014725,37016272,37017812,37019451,37021289,37022965,37024914,37026654,37028500,37030050,37031609,37033074,37034761,37036347,37038356,37040220,37042111,37043950,37045818,37047797,37049674,37051545,37052033,37052643,37053088,37053639,37054480,37055086,37055752,37056339,37057323,37059342,37061303,37063291,37065238,37067199,37069160,37071126,37073070,37074955,37076605,37078234,37079875,37081639,37083191,37084784,37086555,37088123,37089819,37091388,37093142,37094576,37096083,37097529,37099113,37100471,37101895,37103349,37104989,37106373,37107641,37108831,37110318,37111701,37113270,37114720,37116061,37117590,37119052,37120495,37122098,37123512,37124875,37126263,37127640,37129082,37130462,37131856,37133536,37135292,37137073,37138911,37140788,37142678,37144572,37146323,37148048,37149835,37151480,37153225,37155024,37156858,37158630,37160372,37162062,37163716,37164522,37165329,37166144,37166934,37168733,37170450,37172089,37173712,37175410,37176997,37178673,37180311,37181977,37183724,37185401,37187149,37188805,37190538,37192313,37194103,37195984,37197340,37199126,37200707,37202521,37203638,37205444,37207000,37208899,37210679,37212537,37214310,37216157,37218002,37219807,37221626,37223493,37225032,37226102,37227147,37228182,37229255,37230328,37231411,37232428,37233796,37235321,37236879,37238424,37239999,37241551,37243108,37244674,37246221,37247846,37249286,37250885,37252474,37254147,37255205,37256245,37257336,37258372,37259823,37261239,37262953,37264767,37266317,37267582,37268706,37270259,37271689,37272757,37274179,37275758,37277148,37278654,37280278,37281874,37283429,37285036,37286628,37288041,37289363,37290165,37291191,37291956,37292630,37293570,37294296,37295608,37296989,37298411,37298930,37299512,37300247,37300799,37301657,37302145,37303015,37303729,37304650,37305181,37305701,37306633,37307274,37308143,37308642,37309504,37310167,37310861,37311540,37312082,37313020,37313748,37314670,37315142,37315863,37316518,37317190,37317781,37318072,37318692,37318884,37319490,37319747,37320053,37320426,37320676,37321317,37321524,37322058,37322245,37322738,37322826,37322866,37323464,37323646,37324268,37324485,37325300,37326757,37328175,37329421,37330656,37331893,37333082,37334364,37335372,37336377,37337370,37338327,37339308,37340309,37341290,37342566,37343911,37345314,37346722,37348195,37349676,37351085,37352501,37353898,37355480,37356946,37358427,37359937,37361531,37363153,37364645,37366162,37367773,37369199,37370603,37372034,37373469,37374867,37376245,37377723,37379144,37380491,37381898,37383285,37384623,37386037,37386968,37387922,37388836,37389765,37390849,37391776,37392731,37393674,37394725,37395628,37396585,37397484,37398703,37400100,37401546,37402879,37404307,37405235,37406139,37407088,37408035,37409713,37411298,37412917,37414501,37416043,37417591,37419117,37420694,37422384,37423759,37425121,37426484,37427830,37429061,37430408,37431731,37433049,37434662,37436233,37437806,37439036,37440586,37442018,37443255,37444704,37446260,37447830,37449460,37451029,37452661,37454346,37456057,37457796,37459513,37461068,37462277,37463665,37465052,37466471,37467886,37469067,37470486,37471898,37473305,37474885,37476334,37477955,37479362,37481049,37482677,37484356,37485999,37487643,37489263,37490909,37492578,37494206,37495942,37497605,37499236,37500895,37502394,37504021,37505649,37507254,37508941,37510527,37512218,37513850,37515501,37517080,37518721,37520402,37521980,37523657,37525324,37527010,37528701,37530247,37531880,37533559,37535183,37536803,37538544,37540168,37541791,37543411,37545263,37546903,37548535,37550174,37551882,37553702,37555394,37557062,37558714,37560507,37562141,37563808,37565457,37567136,37568077,37569051,37569991,37570959,37572547,37574026,37575573,37577033,37578639,37579877,37581137,37582477,37583882,37584996,37586144,37587400,37588692,37590012,37591014,37591911,37592987,37594363,37595540,37596660,37597738,37599016,37600113,37600988,37601983,37603099,37604657,37606177,37607703,37609262,37610794,37612315,37613833,37615353,37616999,37618396,37619805,37621171,37622565,37623964,37625324,37626680,37628125,37629800,37631286,37632845,37634418,37635989,37637551,37639082,37640611,37642360,37643945,37645553,37647208,37648858,37650444,37652075,37653711,37655355,37657045,37658501,37659893,37661311,37662735,37664205,37665630,37667003,37668728,37670494,37672233,37673937,37675643,37677391,37679108,37680835,37682544,37684417,37686171,37687856,37689507,37691234,37692932,37694627,37696296,37698133,37699227,37700131,37701451,37702512,37703606,37704672,37705929,37707051,37708121,37709167,37710110,37710767,37711403,37712157,37712920,37714803,37716455,37718166,37719839,37721576,37723232,37724949,37726632,37728487,37730258,37731990,37733667,37735302,37737007,37738685,37740427,37742140,37744036,37745788,37747563,37749299,37751084,37752791,37754578,37756316,37758181,37759962,37761684,37763361,37765014,37766706,37768366,37770077,37771747,37773338,37774818,37776227,37777661,37779207,37780211,37781204,37782207,37783619,37785420,37787196,37789020,37790892,37792566,37794387,37796196,37798042,37799745,37800986,37802173,37803415,37805135,37806366,37807372,37808428,37810008,37811686,37813311,37814901,37816531,37818027,37819677,37821259,37822866,37824512,37826000,37827446,37828879,37830220,37831781,37833235,37834677,37836028,37837605,37839262,37840706,37842377,37843673,37845147,37846596,37848126,37849562,37851233,37852859,37854441,37856085,37857697,37859306,37860918,37862626,37864193,37865666,37867136,37868545,37869936,37871414,37872827,37874255,37875840,37877646,37879449,37881295,37883167,37884858,37886670,37888482,37890352,37892019,37893635,37895293,37896921,37898491,37900151,37901800,37903406,37905127,37906711,37908183,37909624,37911140,37912577,37914072,37915514,37916972,37918580,37920422,37922276,37924128,37925840,37927723,37929524,37931377,37933190,37934924,37936564,37938150,37939784,37941306,37942950,37944557,37946171,37947832,37949376,37950831,37952281,37953660,37955193,37956661,37958111,37959577,37961309,37963101,37964921,37966791,37968466,37970326,37972141,37974004,37975785,37976749,37978200,37979472,37980150,37981144,37981958,37982662,37983826,37984503,37985312,37987031,37987696,37988384,37989055,37990401,37991668,37992674,37993928,37995277,37996340,37997223,37998488,37999603,38000890,38002219,38003626,38005379,38006852,38007867,38008905,38010685,38012242,38013919,38015579,38017274,38018888,38020411,38022142,38023780,38024956,38026284,38027638,38028831,38030426,38031745,38032754,38033752,38034766,38036124,38037237,38038343,38039438,38040536,38042003,38044046,38046081,38048080,38050079,38052108,38054120,38056133,38058109,38060140,38062180,38064202,38066217,38068234,38070241,38072251,38074206,38076206,38078231,38080258,38082268,38084276,38086297,38088281,38090297,38092260,38094280,38096308,38098340,38100344,38102325,38104336,38106333,38108294,38110314,38112365,38114256,38116174,38118063,38119962,38121873,38123740,38125597,38127470,38129343,38131243,38133132,38134991,38136847,38138689,38140519,38142419,38144312,38145973,38147657,38149312,38150982,38152660,38154303,38155938,38157573,38159363,38161014,38162669,38164313,38165950,38167614,38169245,38170845,38172591,38174039,38175488,38176902,38178322,38179770,38181206,38182580,38183948,38185571,38186982,38188441,38190063,38191464,38192907,38194431,38196069,38197606,38198929,38200504,38202054,38203659,38205052,38206680,38208157,38209827,38211125,38212541,38213914,38215669,38217509,38219057,38220634,38222312,38223901,38225486,38226983,38228675,38230351,38231894,38233458,38235116,38236834,38238560,38240122,38241695,38243332,38244853,38246386,38247945,38249523,38251065,38252608,38254170,38255699,38257233,38258738,38260273,38262001,38263525,38265191,38266879,38268514,38270081,38271829,38273701,38275246,38276764,38278643,38280578,38282329,38284046,38285782,38287729,38289669,38291600,38293567,38295501,38297461,38299369,38301280,38303176,38304980,38306822,38308709,38310701,38312579,38314446,38316297,38318129,38319912,38321674,38323459,38325263,38327279,38329239,38331218,38333172,38335093,38337004,38338916,38340833,38342852,38344716,38346622,38348496,38350330,38352135,38353946,38355736,38357551,38359587,38361588,38363582,38365553,38367498,38369436,38371376,38373300,38375315,38377128,38378941,38380719,38382469,38384243,38386028,38387754,38389553,38391502,38393356,38395154,38396956,38398786,38400617,38402438,38404238,38406063,38407536,38408978,38410452,38411890,38413304,38414749,38416159,38417551,38419360,38421333,38423265,38425284,38427217,38429161,38431040,38432973,38434877,38436783,38438632,38440561,38442547,38444495,38446436,38448359,38450277,38452194,38454123,38456033,38458009,38459550,38461075,38462644,38464266,38465848,38467492,38469033,38470534,38472472,38474278,38476082,38477843,38479603,38481311,38483054,38484772,38486633,38487945,38489278,38490588,38491916,38493319,38494635,38496003,38497366,38498992,38500492,38501953,38503484,38505055,38506609,38508102,38509557,38511063,38512749,38514363,38515966,38517575,38519230,38520773,38522430,38523807,38525162,38526495,38527795,38529037,38530257,38531478,38532813,38534709,38536606,38538469,38540357,38542257,38544140,38546005,38547883,38549842,38551734,38553609,38555449,38557330,38559219,38561108,38562980,38564829,38566615,38568003,38569405,38570761,38572176,38573673,38575157,38576629,38578189,38579902,38581583,38583273,38585011,38586652,38588265,38589841,38591373,38592563,38594088,38595649,38597243,38598868,38600635,38602326,38604027,38605738,38607314,38608775,38610268,38611756,38613194,38614519,38615937,38617362,38619052,38620506,38622038,38623544,38625005,38626560,38628068,38629594,38631043,38632722,38634221,38635756,38637231,38638148,38639613,38641148,38642653,38644379,38646356,38648283,38650248,38651697,38653122,38654531,38655921,38657124,38658553,38659950,38661357,38662884,38664065,38665206,38666291,38667255,38668388,38669511,38670612,38671893,38673398,38674813,38676331,38678323,38680197,38682103,38684000,38685905,38687803,38689717,38691600,38693238,38694899,38696338,38697815,38699291,38700470,38701409,38702255,38703079,38703979,38704804,38705719,38706527,38707404,38708370,38709317,38710133,38711026,38711995,38712995,38713967,38715157,38716487,38717758,38719027,38720337,38720776,38721289,38721924,38722551,38722777,38723219,38723385,38724402,38725782,38726472,38727467,38728196,38729550,38730606,38731549,38732853,38733258,38733462,38733904,38734289,38734911,38736239,38737753,38739248,38741127,38742949,38744705,38746520,38748350,38750167,38751946,38753693,38755511,38757124,38758767,38760412,38761945,38763567,38765190,38766822,38768374,38770003,38771314,38772644,38773993,38775324,38777028,38778689,38780358,38782056,38783724,38785394,38787075,38788715,38790357,38792047,38793727,38795398,38796764,38798610,38800439,38802276,38804032,38805831,38807663,38809527,38811295,38813119,38814614,38816041,38817517,38818968,38820722,38822615,38824442,38826307,38828149,38830010,38831856,38833732,38835612,38837447,38839029,38840854,38841804,38842844,38843978,38845164,38846678,38848677,38850677,38852631,38854577,38856533,38858483,38860366,38862251,38864154,38866106,38868045,38869982,38871920,38873841,38875746,38877699,38879716,38881383,38883069,38884820,38886646,38888464,38890227,38891889,38893501,38895516,38897572,38899620,38901653,38903707,38905742,38907795,38909846,38911903,38913954,38916009,38918046,38920087,38922140,38924190,38926240,38928288,38930290,38932170,38934084,38935908,38937749,38939589,38941439,38943277,38945195,38947104,38949017,38950880,38952735,38954582,38956438,38958280,38960146,38961914,38963254,38964544,38965294,38966107,38966866,38967430,38968018,38968764,38969600,38970496,38970983,38971483,38972272,38973096,38974009,38974579,38974927,38975735,38976600,38977448,38977979,38978424,38979193,38980100,38980891,38981316,38982200,38983332,38984372,38985296,38985688,38986758,38987905,38989004,38989706,38990164,38991333,38992452,38993638,38994142,38994757,38995975,38996998,38998170,38998881,39000166,39001585,39003134,39004565,39006478,39007551,39008618,39009758,39010931,39012057,39013210,39014241,39015365,39016451,39017607,39018719,39019922,39021062,39022136,39023229,39024331,39025894,39026969,39028060,39029171,39030306,39031381,39032423,39033555,39034616,39035629,39036609,39037553,39038635,39039672,39040464,39041256,39042104,39043382,39044167,39044630,39045181,39045693,39046237,39046799,39047286,39047850,39048374,39048884,39049362,39049844,39050345,39050858,39051375,39051942,39052768,39054241,39055704,39057204,39058704,39060215,39061722,39063240,39064725,39066124,39067185,39068175,39069308,39070957,39072443,39073890,39075242,39076565,39077992,39079501,39081296,39082948,39084628,39086280,39087867,39089504,39091161,39092818,39094608,39096126,39097597,39099085,39100613,39102045,39103606,39105101,39106568,39107973,39109064,39110244,39111487,39112857,39114140,39115487,39116720,39117928,39119307,39120741,39122158,39123599,39125176,39126754,39128240,39129811,39131621,39132694,39133767,39134897,39136057,39137188,39138333,39139367,39140502,39141603,39142746,39143881,39145088,39146240,39147321,39148366,39149488,39151094,39152099,39153184,39154323,39155482,39156529,39157565,39158705,39159730,39160750,39161682,39162661,39163706,39164736,39165551,39166335,39167205,39168544,39169207,39169721,39170280,39170778,39171339,39171872,39172404,39172974,39173462,39173964,39174477,39174942,39175471,39175987,39176511,39177065,39178002,39179757,39181592,39183385,39185140,39186963,39188718,39190508,39192012,39193401,39194800,39196218,39197636,39199207,39200402,39201598,39202901,39204520,39205866,39207165,39208475,39210055,39211141,39212171,39213235,39214281,39215907,39217604,39219208,39220838,39222431,39223726,39224882,39225965,39227306,39228715,39230287,39231952,39233639,39235207,39236910,39238587,39240189,39241823,39243421,39244959,39246072,39247642,39248622,39250262,39252040,39253889,39255750,39257539,39259164,39260847,39262553,39264307,39265901,39267654,39269481,39271082,39272652,39274141,39275720,39277244,39278753,39280344,39281897,39283261,39284893,39286505,39288121,39289730,39291296,39292876,39294423,39296044,39297730,39299342,39301135,39302859,39304239,39305783,39307597,39309326,39310845,39312316,39313303,39314479,39315615,39316747,39317895,39318999,39320106,39321203,39322359,39323493,39324685,39325870,39326964,39328050,39329072,39330169,39331153,39332333,39333540,39334741,39335086,39336077,39337324,39338413,39339345,39340402,39341588,39342760,39343901,39344344,39345277,39346547,39347678,39348675,39349694,39350822,39352015,39353158,39353782,39354605,39355803,39356911,39357918,39358947,39360014,39361232,39362393,39363174,39363965,39365115,39366273,39367358,39368324,39369323,39370575,39371679,39372590,39373244,39374338,39375566,39376686,39378131,39379122,39380214,39381363,39382510,39383557,39384602,39385690,39386728,39387727,39388681,39389650,39390703,39391740,39392551,39393343,39394210,39395492,39396342,39397539,39398665,39399652,39400067,39401266,39402497,39403646,39404574,39405688,39406811,39407997,39409192,39410455,39411573,39412732,39413968,39415078,39416352,39417527,39418667,39419898,39421067,39422360,39423482,39424673,39425849,39427025,39428369,39429459,39430440,39431498,39432790,39434021,39435098,39436070,39437171,39438433,39439678,39440755,39441711,39442838,39444173,39445332,39446379,39447378,39448500,39449980,39450408,39450944,39451638,39453050,39454694,39456494,39458340,39460209,39461987,39463472,39464547,39465069,39465593,39466109,39466671,39467186,39468439,39469650,39470709,39472067,39473543,39474617,39475840,39477334,39478551,39479583,39480900,39482424,39483518,39484737,39486391,39488194,39490038,39491745,39493601,39495350,39497119,39499010,39500761,39502491,39504374,39506109,39507923,39509716,39511469,39513356,39515106,39516936,39518664,39520562,39522297,39524161,39525914,39527651,39529566,39531229,39533052,39534942,39536696,39538442,39540253,39542083,39543798,39545659,39547521,39549249,39551148,39552868,39554618,39556515,39558261,39560013,39561819,39563579,39565394,39567216,39569073,39570749,39572653,39574393,39576237,39578021,39579769,39581667,39583416,39585246,39587066,39588864,39590613,39592428,39594307,39596010,39597758,39599641,39601345,39603256,39605023,39606777,39608695,39610440,39612166,39613976,39615892,39617628,39619438,39621285,39622965,39624920,39625948,39627214,39628315,39629574,39630863,39632001,39633272,39634333,39634999,39635755,39636609,39637506,39637961,39638494,39639270,39640104,39641039,39641651,39641970,39642804,39643640,39644512,39645035,39645486,39646283,39647193,39647965,39649053,39650122,39651155,39652292,39653466,39654589,39655734,39656794,39657914,39658983,39660133,39661223,39662398,39663561,39664647,39665718,39666801,39668252,39669705,39671276,39672493,39673630,39674700,39675895,39676950,39678016,39679151,39680170,39681157,39682153,39683066,39684095,39685154,39685967,39686766,39687609,39688675,39690098,39691528,39693271,39693892,39694416,39694960,39695470,39696014,39696552,39697076,39697637,39698123,39698636,39699144,39699618,39700129,39700661,39701185,39701728,39702725,39704322,39705988,39707568,39709244,39710946,39712553,39714190,39715897,39717567,39719292,39721067,39722709,39724283,39725891,39727559,39729233,39729615,39730283,39731608,39731917,39732370,39732725,39733792,39735303,39737339,39739366,39741387,39743398,39745412,39747414,39749379,39751383,39753396,39755428,39757429,39759446,39761462,39763444,39765448,39767419,39769262,39770648,39772095,39773688,39774929,39776267,39777748,39778870,39779989,39781112,39782235,39783358,39784481,39785602,39786064,39786144,39787649,39789668,39791673,39793558,39795455,39797343,39799165,39801043,39802930,39804826,39806721,39808635,39810531,39812484,39814411,39816265,39818184,39820106,39821990,39823827,39825751,39827706,39829582,39831498,39833451,39835377,39837104,39838883,39840710,39842459,39844452,39846368,39848234,39850114,39852004,39853929,39855833,39857730,39859594,39861571,39863354,39865181,39867041,39868958,39870799,39872330,39874086,39875563,39877128,39878737,39880347,39881914,39883405,39884892,39886470,39888083,39889697,39891349,39892833,39894376,39895938,39897480,39899032,39900909,39902411,39903949,39905592,39907175,39909106,39910900,39912659,39914474,39916356,39918202,39920048,39921898,39923769,39925092,39926368,39927693,39929060,39930367,39931684,39933039,39934271,39935929,39937365,39938818,39940242,39941757,39943228,39944668,39946083,39947694,39949137,39950605,39952060,39953517,39955039,39956521,39957977,39959414,39961016,39962470,39963916,39965353,39966865,39968329,39969808,39971242,39972807,39974307,39975744,39977164,39978632,39980126,39981579,39983006,39984414,39986003,39987418,39988819,39990255,39991713,39993196,39994598,39996025,39997474,39999029,40000389,40001751,40003222,40004685,40006139,40007509,40008933,40010524,40011908,40013295,40014703,40016162,40017620,40019055,40020465,40021880,40023495,40024897,40026304,40027805,40029297,40030770,40032212,40033621,40035252,40036708,40038148,40039607,40041091,40042577,40044051,40045490,40046886,40048460,40049807,40051075,40052429,40053811,40055152,40056483,40057779,40059304,40060662,40061992,40063301,40064677,40066003,40067376,40068692,40069969,40071540,40072861,40074142,40075477,40076829,40078144,40079464,40080804,40082168,40083724,40085192,40086636,40088109,40089579,40091085,40092550,40093936,40095582,40097002,40098403,40099866,40101369,40102832,40104288,40105690,40107129,40108719,40110082,40111480,40112917,40114352,40115820,40117214,40118611,40120237,40121656,40123067,40124447,40125911,40127402,40128825,40130232,40131644,40133270,40134637,40136023,40137448,40138953,40140406,40141832,40143254,40144840,40146299,40147723,40149131,40150592,40152110,40153558,40154998,40156401,40158211,40159906,40161736,40163453,40165358,40166993,40168707,40170499,40172331,40174161,40175957,40177652,40179327,40181095,40182863,40184594,40186341,40188205,40189975,40191878,40193720,40195605,40197462,40199351,40201210,40203060,40204986,40206809,40208593,40210389,40212203,40213994,40215774,40217554,40219508,40221291,40223080,40224801,40226576,40228317,40230073,40231784,40233555,40235453,40237273,40239062,40240799,40242580,40244327,40246076,40247818,40249732,40251618,40253451,40255284,40257092,40258877,40260737,40262535,40264340,40266263,40267982,40269749,40271485,40273232,40274942,40276697,40278474,40280318,40282037,40283951,40285788,40287617,40289456,40291250,40293009,40294791,40296566,40298433,40300109,40301858,40303581,40305145,40306911,40308643,40310271,40312038,40313868,40315591,40317364,40319074,40320688,40322373,40323966,40325787,40327705,40329336,40330975,40332631,40334269,40335955,40337633,40339332,40340982,40342738,40344413,40346017,40347643,40349346,40351049,40352753,40354417,40356201,40358002,40359806,40361551,40363338,40365165,40366952,40368771,40370547,40372405,40374205,40375930,40377668,40379439,40381238,40383010,40384795,40386559,40388415,40390218,40392107,40393971,40395829,40397752,40399716,40401519,40403356,40405011,40406676,40408451,40410197,40411914,40413703,40415415,40417129,40418939,40420589,40422372,40424176,40425967,40427786,40429669,40431379,40433198,40434598,40436116,40437629,40439165,40440667,40442152,40443669,40445173,40447161,40449142,40451072,40453039,40455047,40456990,40458966,40460944,40462851,40464795,40466785,40468814,40470776,40472707,40474676,40476664,40478690,40480453,40481314,40481354,40481393,40481433,40481751,40481791,40481831,40481870,40482036,40483967,40485747,40487583,40489425,40491240,40493079,40494878,40496669,40498532,40499979,40501438,40502866,40504328,40505768,40507223,40508640,40510089,40511997,40513826,40515648,40517405,40519189,40520959,40522770,40524545,40526084,40526976,40527016,40527056,40527094,40527134,40527451,40527491,40527531,40527569,40528349,40529462,40531063,40532783,40534509,40536255,40538023,40539752,40541452,40543201,40544953,40546744,40547902,40549120,40550591,40552072,40552636,40554196,40555699,40557013,40558020,40559802,40561513,40563134,40564054,40564092,40564132,40564172,40564490,40564530,40564568,40564608,40564778,40566168,40567588,40568662,40569861,40571463,40573132,40574731,40576415,40578089,40579757,40581410,40583040,40584670,40585053,40585093,40585132,40585172,40586190,40586893,40586962,40587720,40589605,40591546,40593443,40595124,40596734,40598366,40600021,40601691,40603404,40605136,40606840,40608560,40610286,40612020,40613752,40615477,40617192,40618872,40620516,40621796,40622793,40623664,40624252,40626065,40627841,40629577,40631284,40633040,40634829,40636523,40638266,40640131,40642006,40643797,40645693,40647535,40649395,40651241,40653109,40654905,40656760,40658484,40660142,40661949,40663577,40665360,40667103,40668844,40670672,40672473,40674417,40676285,40678163,40680045,40681910,40683838,40685677,40687690,40689067,40690230,40691396,40692424,40693528,40694954,40696319,40697675,40699061,40700483,40701719,40702871,40703988,40705142,40706251,40707483,40709002,40709917,40710712,40711620,40712628,40713878,40715611,40716978,40717749,40718368,40719145,40720392,40722016,40723726,40725428,40726361,40727556,40729026,40730601,40731847,40732878,40733693,40734657,40735499,40735999,40736787,40737963,40739323,40740581,40741730,40743095,40744465,40745863,40747186,40748493,40750348,40752247,40754108,40756026,40757879,40759717,40761645,40763513,40765345,40767252,40769179,40771111,40773009,40774863,40776744,40778694,40780181,40781139,40782076,40783043,40784329,40786274,40788169,40789877,40791864,40793128,40794286,40795497,40796710,40798548,40800575,40802541,40804571,40806561,40808483,40810376,40812290,40814158,40816178,40818221,40820265,40822296,40824140,40825952,40827715,40829571,40831381,40833191,40834907,40836713,40838528,40840477,40842412,40844353,40846278,40848003,40849312,40850599,40852171,40853665,40854844,40856107,40857316,40858693,40859884,40861128,40862347,40863792,40865431,40866596,40867798,40869440,40871204,40872086,40872793,40874116,40875420,40876488,40877239,40878215,40879767,40881222,40881958,40882828,40884517,40886240,40887609,40888992,40890600,40892494,40894232,40896005,40897799,40899605,40901372,40903215,40905070,40906891,40908550,40910228,40911917,40913582,40915425,40917182,40919000,40920774,40922482,40923909,40925338,40926770,40928339,40929797,40931173,40932639,40934132,40935700,40937191,40938635,40940167,40941791,40943291,40944749,40946249,40948084,40950057,40952025,40953959,40955927,40957899,40959888,40961858,40963854,40965749,40967504,40969273,40971009,40972840,40974440,40975996,40977565,40979343,40981260,40983103,40984953,40986871,40988667,40990501,40992267,40994097,40996084,40997950,40999790,41001682,41003595,41005381,41007178,41008975,41010820,41012448,41014053,41015590,41017279,41018441,41019696,41021172,41022696,41023862,41025108,41026292,41027791,41029162,41030342,41031642,41033298,41035049,41036840,41038614,41040388,41042306,41044103,41045885,41047652,41049527,41051358,41053183,41055005,41056686,41057520,41058406,41059252,41059951,41061261,41062441,41063592,41064755,41066043,41067244,41068421,41069627,41070963,41072302,41073723,41075070,41076490,41078327,41080168,41082028,41083861,41085745,41087566,41089407,41091253,41093179,41095072,41096999,41098921,41100852,41102759,41104690,41106639,41108581,41110367,41112199,41114038,41115823,41117640,41119502,41121225,41122816,41124526,41126236,41128121,41129931,41131820,41133688,41135514,41137372,41139256,41140867,41142352,41143763,41145237,41146784,41148317,41150084,41151745,41153296,41154886,41156540,41158253,41159886,41161666,41163452,41165204,41167009,41168874,41170912,41172969,41175025,41176933,41178916,41180903,41182870,41184835,41186789,41188739,41190673,41192535,41193920,41195115,41196590,41197653,41199206,41200986,41202727,41204485,41206219,41207785,41209364,41210898,41212412,41214256,41216024,41217822,41219552,41221397,41223194,41225011,41226816,41228599,41230303,41232028,41233723,41235441,41237011,41238813,41240610,41242275,41243665,41244666,41245765,41246708,41248170,41249153,41250069,41250933,41252255,41253258,41254435,41255460,41256567,41257295,41257875,41258415,41258957,41259842,41260608,41261301,41262041,41262870,41263864,41265171,41266392,41267420,41268691,41270053,41271507,41272877,41274212,41275687,41277187,41278914,41280281,41281646,41283267,41284854,41286300,41287943,41289555,41291230,41292768,41293308,41293547,41293727,41293948,41294857,41295350,41295791,41296226,41297568,41299605,41301646,41303701,41305748,41307792,41309832,41311884,41313892,41315945,41317883,41319804,41321763,41323647,41325554,41327487,41329392,41331230,41332636,41334026,41335471,41336881,41338118,41339305,41340449,41341511,41342906,41344328,41345757,41347209,41348808,41350670,41352484,41354291,41356172,41358043,41359852,41361635,41363501,41365353,41367104,41368851,41370567,41372295,41374023,41375784,41377474,41379144,41380529,41381965,41383477,41384896,41386340,41387823,41389394,41390878,41392588,41394462,41396359,41398230,41399960,41401206,41402460,41403676,41405102,41406954,41408757,41410525,41412369,41413867,41415317,41416749,41418210,41419974,41421997,41424018,41426048,41428100,41430102,41432100,41434070,41436069,41437648,41439152,41440636,41442127,41443918,41445591,41447263,41448952,41450834,41452816,41454796,41456779,41458794,41460500,41462200,41463939,41465677,41467723,41469772,41471810,41473866,41475552,41476824,41478115,41478639,41479162,41479698,41480236,41481461,41482871,41484282,41485626,41486705,41488139,41489539,41491086,41492293,41493769,41495339,41496986,41498426,41499840,41501400,41503245,41504912,41506796,41508510,41509762,41511038,41512328,41513712,41514682,41515640,41516682,41517626,41518859,41519728,41520781,41521616,41522616,41524546,41526514,41528457,41530420,41532436,41534455,41536448,41538441,41540451,41542111,41543582,41545161,41546793,41548554,41550215,41551914,41553527,41555349,41556860,41558376,41560017,41561791,41563428,41565162,41566848,41568534,41569974,41571668,41573299,41574734,41576218,41577794,41579353,41580817,41582546,41584447,41586335,41588172,41590066,41591940,41593823,41595673,41597554,41599342,41600824,41602280,41603836,41605782,41607763,41609729,41611741,41613726,41615547,41617334,41619143,41620963,41622818,41624723,41626641,41628496,41630046,41631487,41632930,41634300,41635764,41637236,41638779,41640260,41641763,41643286,41645043,41646734,41648339,41649875,41651469,41653028,41654521,41656218,41657955,41659554,41661309,41663022,41664714,41666369,41668177,41669892,41671535,41673210,41674760,41676450,41678097,41679747,41681259,41682961,41684627,41686155,41687637,41689219,41690716,41692415,41693792,41695495,41697212,41698673,41700196,41701713,41703254,41704719,41706247,41707898,41709560,41710958,41712270,41713488,41715034,41716623,41718334,41719887,41721412,41723107,41724522,41726203,41727964,41729716,41731270,41732875,41734148,41735390,41736549,41737835,41739160,41740459,41741655,41743232,41744776,41746299,41747595,41749002,41750193,41751358,41752523,41753797,41755056,41756462,41757908,41759269,41760665,41762244,41763549,41764786,41766192,41768048,41769869,41771587,41773041,41774266,41775237,41776254,41777125,41778153,41779258,41780448,41781765,41783127,41784754,41786334,41787972,41789745,41791474,41792611,41793674,41794714,41795649,41796433,41797085,41798426,41799441,41800845,41802066,41803332,41804614,41806085,41807664,41809393,41811231,41813210,41814893,41816670,41818427,41819934,41821201,41822402,41823718,41824992,41826318,41827619,41828945,41830167,41831397,41832709,41833966,41835209,41836981,41838551,41840249,41841901,41843412,41844804,41846379,41848119,41849729,41851246,41852477,41853660,41854978,41856183,41857459,41858828,41860334,41862119,41863609,41864874,41866232,41867499,41868763,41869861,41871124,41872526,41874023,41875744,41877416,41879065,41880562,41881945,41883437,41884746,41886432,41887957,41889462,41890717,41892011,41893259,41894447,41895686,41896979,41898558,41900309,41901992,41903718,41905242,41906823,41908562,41910139,41911751,41913314,41914615,41914877,41915550,41917146,41918480,41918742,41919379,41920961,41922270,41922532,41923147,41924719,41926066,41926338,41926929,41928513,41929862,41930134,41930698,41932261,41933631,41933903,41934462,41935744,41936988,41938282,41939568,41940971,41942250,41943561,41944819,41946251,41947533,41948813,41950144,41951529,41952863,41954150,41955493,41956797,41958203,41959686,41960928,41962158,41963423,41964676,41965937,41967169,41968453,41969963,41971182,41972395,41973597,41974829,41976003,41977169,41978387,41979617,41981139,41982406,41983669,41984934,41986198,41987482,41988735,41989992,41991426,41993264,41994993,41996770,41998444,42000079,42001762,42003686,42005703,42006906,42008250,42009582,42010976,42012323,42013741,42015038,42016360,42017720,42019065,42020460,42021795,42023170,42024553,42025956,42027313,42029011,42030686,42032296,42033871,42035535,42037121,42038700,42040226,42041518,42042899,42044260,42045637,42047176,42048661,42050176,42051683,42053322,42055179,42056914,42058532,42060141,42061754,42063340,42064956,42066438,42067754,42069120,42070505,42071894,42073426,42074935,42076475,42077943,42079530,42081344,42083147,42084790,42086365,42087948,42089568,42091186,42092711,42094069,42095411,42096801,42098195,42099708,42101204,42102739,42104165,42105758,42107519,42109354,42111012,42112583,42114165,42115797,42117387,42118909,42120307,42121596,42123003,42124403,42125891,42127434,42128988,42130397,42131967,42133682,42135417,42136611,42137860,42138921,42139786,42140685,42141742,42142731,42143782,42144898,42146168,42147369,42148503,42149424,42150423,42151423,42152523,42154152,42155347,42156549,42157602,42158453,42159314,42160387,42161430,42162470,42163604,42164880,42166084,42167233,42168143,42169112,42170172,42171230,42173003,42174949,42176856,42178809,42180763,42182741,42184669,42186624,42188506,42190366,42192139,42193927,42195817,42197705,42199668,42201600,42203537,42205000,42206957,42208898,42210849,42212829,42214822,42216798,42218729,42220680,42222635,42224386,42226146,42227899,42229659,42231430,42233201,42235049,42236807,42238617,42240395,42242183,42243981,42245774,42247381,42249345,42251315,42253228,42255126,42257021,42258995,42260690,42261379,42262205,42264127,42266066,42268065,42270042,42272021,42273970,42275968,42277923,42279896,42281866,42283832,42285813,42287792,42289739,42291714,42293645,42295597,42297499,42299090,42300642,42302210,42303769,42305363,42306908,42308479,42310077,42311823,42313451,42315125,42316798,42318380,42320242,42322037,42323860,42325671,42327430,42328936,42330529,42332027,42333666,42335311,42337069,42338706,42340358,42342049,42343697,42345437,42347166,42349028,42350850,42352669,42354538,42356398,42358047,42359770,42361353,42363047,42364887,42366681,42368547,42370382,42372046,42373641,42375238,42376764,42378423,42380074,42381842,42383449,42385204,42386915,42388713,42390456,42392236,42393868,42395417,42397161,42398870,42400592,42402115,42403969,42405672,42407377,42409002,42410813,42412512,42414142,42415803,42417434,42419150,42420665,42422240,42423907,42425617,42427267,42428838,42430182,42432084,42433949,42435040,42436814,42438750,42440638,42442586,42444175,42446195,42448204,42450218,42451820,42453460,42454825,42455958,42457220,42458389,42459820,42461397,42462989,42464490,42465971,42467464,42468955,42470455,42471970,42473525,42474765,42475766,42476649,42477681,42479010,42480114,42481080,42482198,42483256,42484881,42486732,42488572,42490473,42492231,42494122,42495895,42497722,42499613,42501465,42503095,42504700,42506372,42508050,42509861,42511615,42513276,42515176,42517015,42518845,42520716,42522458,42524370,42526133,42527981,42529850,42531677,42533356,42534993,42536724,42538355,42540141,42541917,42543620,42545500,42547239,42549169,42550939,42552848,42554656,42556558,42558415,42560283,42562238,42564154,42566148,42568125,42570019,42571982,42573943,42575908,42577903,42579818,42581525,42583241,42585014,42586798,42588647,42590515,42592323,42594035,42595709,42597034,42598310,42599948,42601471,42603207,42604531,42605576,42606694,42607715,42608392,42608675,42609767,42611053,42612326,42613669,42614989,42616416,42617697,42619034,42620380,42621703,42623196,42624495,42625807,42627116,42628502,42629869,42631213,42632543,42633856,42635369,42636811,42638262,42639376,42640946,42642597,42644474,42646435,42648468,42650508,42652507,42654510,42656495,42658430,42660138,42661765,42663289,42664794,42666491,42668070,42669784,42671494,42673231,42674998,42676750,42678397,42680141,42681746,42683326,42684917,42686563,42688021,42689775,42691650,42693579,42695422,42697080,42698781,42700560,42702539,42704501,42706375,42708123,42709820,42711660,42713594,42715445,42717233,42718681,42720459,42722388,42724280,42726184,42727834,42729523,42731432,42733411,42735421,42737370,42739149,42740781,42742651,42744524,42746408,42748236,42749708,42750687,42751667,42752649,42753922,42755373,42756954,42758555,42760215,42761826,42763469,42765121,42766821,42768288,42770228,42771925,42773644,42775380,42776983,42778707,42780353,42781977,42783674,42785363,42787242,42789012,42790755,42792513,42794253,42795939,42797716,42799327,42801004,42802700,42804435,42806159,42807770,42809440,42811096,42812703,42814628,42816505,42818361,42820296,42822250,42824168,42826076,42827803,42829526,42831246,42832934,42834641,42836582,42838490,42840402,42842297,42844196,42846185,42848090,42850032,42851979,42853921,42855760,42857548,42859338,42861126,42862967,42864928,42866802,42868718,42870604,42872521,42874373,42876247,42878042,42879353,42880426,42881783,42883481,42885090,42886758,42888363,42890212,42892084,42893927,42895791,42897621,42899503,42901329,42903155,42905080,42906906,42908806,42910701,42911933,42912477,42913048,42913762,42915011,42916064,42917360,42918607,42919823,42920798,42922609,42924322,42925975,42927522,42929258,42930865,42932499,42934191,42935866,42937210,42938924,42940424,42941786,42942912,42944484,42946105,42947821,42949561,42951272,42952967,42954728,42956317,42957930,42959404,42960741,42962284,42963756,42965285,42966740,42968224,42969660,42971057,42972523,42973915,42975505,42977110,42978919,42980741,42982600,42984477,42986330,42988172,42989993,42991882,42993717,42995537,42997365,42999282,43001173,43003056,43004924,43006788,43008755,43010775,43012739,43014659,43016551,43018465,43020399,43022319,43024236,43026165,43028110,43030018,43031885,43033759,43035598,43037507,43039395,43041204,43042754,43044240,43045669,43047410,43049033,43050650,43052305,43053914,43055534,43057180,43058792,43060517,43062159,43063812,43065467,43067108,43068734,43070391,43072025,43073647,43075394,43077056,43078694,43080327,43081959,43083592,43085227,43086880,43088693,43090551,43092433,43094277,43096139,43097989,43099838,43101704,43103546,43105482,43107332,43109175,43110999,43112859,43114697,43116545,43118387,43120320,43122200,43124051,43125898,43127758,43129615,43131445,43133307,43135196,43136957,43138301,43139735,43141166,43142509,43143934,43145367,43146965,43148356,43149706,43151132,43152617,43154022,43155430,43157144,43159016,43160878,43162717,43164478,43166292,43168099,43170015,43171910,43173625,43175329,43177053,43178766,43180490,43182176,43183917,43185578,43187271,43188860,43190632,43192357,43194027,43195789,43197539,43199231,43200844,43202545,43204378,43206219,43208025,43209906,43211551,43213294,43215162,43217057,43218935,43220778,43222524,43224204,43225982,43227764,43229554,43231341,43232741,43234450,43236146,43237796,43239635,43241279,43242938,43244721,43246516,43248328,43250093,43251861,43253492,43255207,43256840,43258503,43260274,43261731,43262900,43264152,43265375,43266626,43267948,43269156,43270374,43272026,43273633,43275139,43276767,43278461,43280068,43281592,43283168,43284756,43286266,43287863,43289375,43291208,43293048,43294986,43296870,43298729,43299848,43301628,43303056,43304498,43306267,43308086,43309876,43311615,43313318,43314839,43316333,43317992,43319731,43321470,43323079,43324409,43325719,43327636,43329477,43331190,43332514,43334157,43335566,43337046,43338715,43340126,43341832,43343331,43344792,43346290,43347826,43349355,43350918,43352395,43353747,43355251,43356781,43358379,43359899,43361394,43362899,43364483,43366072,43367563,43369128,43370495,43371964,43373403,43374898,43376734,43378571,43380439,43382241,43384058,43385888,43387674,43389406,43391142,43392623,43394439,43396176,43397908,43399700,43401329,43403084,43404854,43406548,43408333,43410264,43412162,43414022,43415905,43417644,43419536,43421282,43423065,43424823,43426426,43428178,43429902,43431688,43433366,43435073,43436807,43438584,43440315,43442020,43443785,43445499,43447217,43448872,43450530,43452205,43453981,43455637,43457428,43459099,43460854,43462544,43464234,43465945,43467671,43469362,43471070,43472716,43474521,43476116,43477556,43479020,43480768,43482525,43484159,43485874,43487539,43488972,43490492,43492017,43493580,43494966,43496460,43497990,43499491,43501115,43502912,43504647,43506330,43508115,43509752,43511495,43513249,43514988,43516594,43518262,43519914,43521599,43523211,43524810,43526439,43528148,43529777,43531473,43533113,43534732,43536432,43538064,43539734,43541379,43543123,43544768,43546421,43548057,43549737,43551368,43553021,43554667,43556346,43558024,43559672,43561331,43562983,43564696,43566336,43567943,43569547,43571324,43572930,43574602,43576271,43578060,43579723,43581381,43583007,43584634,43586341,43587942,43589613,43591285,43593093,43594710,43596325,43597950,43599632,43601281,43603127,43604950,43606643,43608259,43610021,43611849,43613474,43615187,43616980,43618803,43620546,43622382,43624302,43626166,43628071,43630092,43632047,43633997,43635942,43637897,43639683,43641531,43643457,43645443,43647450,43649456,43651452,43653316,43655224,43657087,43658920,43660790,43662791,43664812,43666817,43668823,43670790,43672765,43674669,43676568,43678462,43680389,43682302,43684236,43686190,43688220,43689919,43691795,43693682,43695593,43697450,43699254,43700832,43702440,43704335,43706150,43707957,43709549,43711168,43712788,43714413,43716047,43717854,43719215,43720585,43721926,43723268,43724707,43726248,43727686,43729093,43730556,43732046,43733536,43735006,43736419,43737836,43739376,43740883,43742201,43743935,43745645,43747408,43749122,43750786,43752489,43754183,43755941,43757591,43759286,43760994,43762781,43764493,43766134,43767802,43769523,43771165,43772878,43774543,43776237,43777887,43779644,43781339,43783007,43784628,43786348,43788007,43789652,43791291,43792902,43794911,43796773,43798672,43800619,43802507,43804424,43806310,43808214,43810153,43811924,43813696,43815504,43817359,43819371,43821358,43823383,43825436,43827463,43829500,43831530,43833548,43835569,43837615,43839645,43841687,43843743,43845791,43847844,43849890,43851923,43853859,43855713,43857583,43859525,43861438,43863339,43865215,43867077,43868890,43870365,43871869,43873238,43874855,43876550,43878184,43879729,43881312,43882949,43884483,43886094,43887646,43889109,43890612,43892232,43893822,43895307,43896934,43898442,43899845,43901393,43902830,43904555,43906323,43908211,43909930,43911586,43913210,43914953,43916887,43918749,43920627,43922423,43924186,43925878,43927703,43929529,43931390,43932903,43934919,43936876,43938903,43940824,43942735,43944646,43946297,43948046,43949716,43951489,43953183,43954954,43956752,43958505,43960169,43961954,43963641,43965335,43967016,43968732,43970068,43971575,43973054,43974579,43976130,43977634,43979157,43980688,43982177,43983739,43985239,43986745,43988258,43989800,43991301,43992831,43994352,43995876,43997188,43998539,43999811,44001086,44002920,44004846,44006766,44008662,44010567,44012530,44014462,44016396,44018374,44019744,44021028,44022325,44023656,44025021,44026321,44027613,44029054,44030721,44032167,44033620,44035216,44036895,44038370,44039925,44041528,44043157,44044935,44046586,44048277,44049958,44051600,44053260,44054937,44056616,44058410,44059649,44060942,44062227,44063469,44064773,44066046,44067246,44068417,44069888,44071024,44072024,44073195,44074340,44075603,44076605,44077859,44079359,44080589,44081906,44083172,44084346,44085652,44086871,44088281,44089567,44091207,44092580,44093903,44095201,44096573,44097876,44099156,44100468,44102082,44103907,44105397,44107069,44108796,44110453,44111991,44113425,44115064,44117021,44118710,44119725,44120994,44122149,44123466,44124654,44126033,44127996,44129937,44131579,44133294,44135125,44136939,44138710,44140232,44142158,44143635,44144050,44144743,44145247,44145748,44146304,44146757,44147283,44147775,44148567,44149478,44150789,44152232,44153549,44154750,44155910,44156499,44157361,44157731,44159095,44160502,44162034,44163509,44164918,44166201,44166638,44168196,44169158,44170535,44171795,44173245,44174614,44175847,44177036,44178742,44180548,44182281,44184036,44185836,44186539,44186616,44187460,44188269,44189006,44189614,44190207,44190660,44191472,44192018,44192646,44193821,44194720,44195545,44196944,44198377,44199771,44201190,44202614,44204078,44205727,44207424,44209050,44210691,44212250,44213805,44215633,44217313,44218541,44219631,44220825,44222036,44223344,44224668,44225907,44227154,44228590,44230084,44231681,44233290,44234960,44236614,44238005,44239346,44240788,44241928,44241953,44241983,44242008,44242199,44243050,44244076,44245042,44246281,44247902,44249561,44251170,44252785,44254154,44255657,44257218,44258816,44260346,44261947,44263840,44265749,44267668,44269593,44271477,44273368,44274237,44275219,44276697,44278162,44279068,44279993,44281218,44282495,44283934,44285374,44286862,44288369,44289898,44291469,44293199,44294972,44296500,44298094,44299594,44301166,44302739,44304264,44305817,44307434,44309487,44311544,44313579,44315601,44317472,44319359,44321395,44323403,44325147,44326986,44328868,44330770,44332786,44334814,44336824,44338849,44340857,44342880,44344879,44346879,44348927,44350975,44352702,44354467,44356471,44358468,44360475,44362464,44364128,44365765,44366999,44368241,44369436,44370713,44372687,44374664,44376352,44378085,44379968,44381878,44383640,44385429,44387186,44388977,44390933,44392887,44394869,44396834,44398795,44400773,44402802,44404745,44406274,44407829,44409335,44410869,44412412,44413955,44415524,44417058,44418397,44419794,44421080,44422407,44423688,44424961,44426282,44427670,44429681,44431694,44433681,44435647,44437656,44439639,44441576,44443477,44445486,44447398,44449101,44450783,44452428,44454114,44455756,44457320,44457574,44457860,44459039,44460415,44461767,44462862,44463865,44464876,44465926,44467006,44468598,44470333,44471905,44473582,44475294,44477006,44478518,44480044,44481616,44483221,44484761,44486326,44487831,44489314,44490656,44492070,44493136,44494232,44495538,44496870,44498104,44499400,44500855,44502289,44503871,44505481,44506927,44508386,44509760,44511156,44512081,44513054,44514632,44516202,44517099,44518141,44519421,44520787,44522267,44523702,44525182,44526713,44527919,44529147,44530592,44532081,44533733,44535402,44537235,44539091,44540853,44542668,44544232,44545829,44547430,44549068,44550647,44552243,44553764,44555302,44556815,44558316,44559525,44560882,44562423,44563987,44565368,44566764,44568141,44569548,44570928,44572345,44572870,44573477,44573887,44574386,44575864,44577399,44579006,44580604,44582004,44583465,44585000,44586530,44587945,44589309,44590454,44591641,44592926,44594269,44595788,44597250,44598319,44599225,44599506,44599992,44601758,44603619,44605396,44607198,44608747,44610245,44611202,44612231,44613818,44615385,44616931,44618508,44620076,44621653,44623222,44624852,44626675,44628489,44630280,44632077,44633919,44635768,44637598,44639421,44640785,44642197,44643576,44644942,44646337,44647793,44649467,44651164,44652735,44654298,44655780,44657251,44658806,44660339,44661806,44663352,44665238,44667157,44668705,44670165,44670799,44671450,44672306,44673331,44674599,44676130,44677800,44679522,44681009,44682539,44683941,44685315,44686491,44687529,44688195,44688985,44689805,44690664,44691286,44691953,44693456,44694828,44695341,44695868,44696353,44696988,44698757,44700568,44701668,44702800,44703851,44704940,44706299,44707657,44708803,44709804,44710717,44711702,44713142,44714612,44716052,44717497,44718930,44720424,44722124,44723866,44725510,44727217,44729085,44730976,44732524,44734034,44735009,44736027,44737182,44738365,44739290,44740251,44741134,44742076,44743077,44744133,44745345,44746551,44747050,44747559,44748192,44748850,44749348,44749851,44750463,44751100,44751609,44752132,44752760,44753416,44753938,44754468,44755075,44755704,44756146,44756595,44757144,44757873,44759766,44761576,44762618,44763701,44764732,44765811,44766839,44767923,44769006,44770185,44771995,44773701,44775378,44777103,44778737,44780410,44782141,44783782,44784905,44786142,44787797,44789443,44791131,44792862,44794743,44796488,44796758,44797079,44797368,44797725,44797920,44798146,44798441,44798807,44798878,44799153,44799178,44799322,44799470,44799691,44799932,44800156,44800346,44800746,44802158,44803649,44805223,44806844,44807914,44809007,44810075,44811184,44812370,44813602,44815083,44816592,44818049,44819566,44821424,44823281,44824975,44826680,44828122,44829655,44831282,44832953,44834349,44835791,44837072,44838361,44839864,44841494,44843137,44844278,44845920,44847373,44848845,44850339,44851800,44852996,44854438,44855900,44857295,44858825,44860349,44861855,44863270,44864278,44865594,44866957,44868324,44869474,44870806,44871956,44873099,44874160,44875739,44877461,44879353,44881209,44882958,44884131,44885317,44886615,44887792,44888722,44889715,44890786,44892001,44893495,44895168,44896796,44898435,44900105,44901763,44903429,44905148,44906841,44908527,44910149,44911765,44913465,44915169,44916819,44918490,44920169,44921836,44923549,44925225,44926952,44928592,44930164,44931842,44933533,44935232,44936880,44938145,44939332,44940807,44942333,44944007,44945851,44947759,44949699,44951553,44953245,44954438,44955593,44956765,44957975,44959856,44961726,44963618,44965510,44967344,44969224,44971197,44973245,44975293,44977341,44979389,44981437,44983485,44985533,44987581,44989629,44991677,44993725,44995773,44997821,44999869,45001917,45003971,45006019,45008067,45010046,45012094,45014142,45016190,45018238,45020286,45022334,45024382,45026430,45028478,45030526,45032574,45034630,45036678,45038726,45040774,45042822,45044870,45046926,45048974,45050950,45052998,45055046,45057094,45059142,45061190,45063238,45065286,45067334,45069382,45071430,45073478,45075526,45077574,45079622,45081670,45083718,45085766,45087814,45089796,45091844,45093892,45095940,45097988,45100036,45102084,45104132,45106180,45108228,45110276,45112324,45114372,45116420,45118468,45120516,45122564,45124612,45126660,45128708,45130684,45132732,45134780,45136828,45138876,45140924,45142972,45145020,45147068,45149116,45151164,45153212,45155260,45157308,45159356,45161404,45163452,45165500,45167548,45169586,45171602,45173650,45175698,45177746,45179794,45181842,45183890,45185938,45187986,45190034,45192082,45194130,45196178,45198226,45200274,45202322,45204370,45206418,45208466,45210447,45212495,45214543,45216591,45218639,45220687,45222735,45224783,45226831,45228879,45230927,45232975,45235023,45237071,45239119,45241167,45243215,45245263,45247311,45249359,45251334,45253382,45255430,45257478,45259526,45261574,45263622,45265670,45267718,45269766,45271814,45273862,45275910,45277958,45280006,45282054,45284102,45286150,45288198,45290175,45292223,45294271,45296319,45298293,45300341,45302315,45304192,45305533,45306909,45308696,45309951,45311077,45312716,45314060,45315270,45316067,45316918,45317699,45318512,45319412,45320775,45322823,45324822,45326793,45328841,45330889,45332937,45334985,45337033,45339035,45341083,45343131,45345136,45347184,45349130,45351178,45353226,45355274,45357322,45359370,45361418,45363466,45365355,45367295,45369239,45371191,45373140,45375082,45377030,45379036,45380977,45383025,45385073,45387121,45389169,45391217,45393113,45394986,45397034,45399082,45401130,45403178,45405178,45407160,45409130,45411178,45413226,45415233,45417281,45419261,45421309,45423357,45425405,45427453,45429501,45431549,45433597,45435645,45437642,45439690,45441738,45443786,45445834,45447882,45449826,45451874,45453922,45455927,45457975,45459846,45461894,45463942,45465990,45468038,45470086,45472134,45474135,45476183,45478231,45480279,45482327,45484268,45486316,45488189,45490237,45492132,45494180,45496180,45498115,45500060,45502005,45503951,45505766,45507814,45509862,45511910,45513958,45516006,45518054,45520102,45522150,45524198,45526177,45528225,45530190,45532238,45534200,45536248,45538252,45540194,45542075,45544113,45546110,45548053,45549883,45551931,45553979,45556027,45558028,45560076,45562124,45564172,45566173,45568221,45570211,45572259,45574307,45576355,45578403,45580451,45582499,45584547,45586595,45588643,45590691,45592739,45594787,45596792,45598840,45600888,45602936,45604984,45607032,45608974,45611022,45613070,45615118,45617166,45619214,45621262,45623203,45625251,45627299,45629347,45631395,45633443,45635491,45637539,45639483,45641433,45643481,45645343,45647391,45649439,45651487,45653535,45655583,45657631,45659679,45661727,45663717,45665765,45667813,45669766,45671814,45673862,45675834,45677795,45679843,45681891,45683939,45685987,45688035,45690083,45692085,45694133,45696181,45698229,45700277,45702325,45704373,45706421,45708469,45710517,45712565,45714613,45716661,45718709,45720757,45722805,45724853,45726901,45728902,45730789,45732797,45734845,45736843,45738848,45740896,45742773,45744647,45746695,45748743,45750791,45752839,45754887,45756891,45758939,45760987,45763035,45765083,45767131,45769139,45771007,45773015,45775014,45776956,45779004,45780888,45782777,45784825,45786873,45788921,45790969,45792954,45795002,45796933,45798812,45800860,45802908,45804956,45807004,45809052,45811100,45813148,45815196,45817204,45819252,45821300,45823348,45825396,45827444,45829492,45831540,45833588,45835636,45837684,45839732,45841780,45843777,45845825,45847873,45849921,45851969,45854017,45856016,45858064,45860112,45861870,45863709,45865406,45867454,45869502,45871550,45873598,45875530,45877578,45879626,45881674,45883674,45885722,45887770,45889710,45891758,45893704,45895752,45897594,45899642,45901641,45903689,45905734,45907474,45909522,45911395,45913443,45915491,45917539,45919587,45921635,45923606,45925654,45927702,45929750,45931798,45933846,45935894,45937942,45939990,45941990,45944038,45946086,45948134,45950182,45952230,45954178,45956226,45958274,45960322,45962370,45964240,45966288,45968336,45970302,45972350,45974353,45976306,45978271,45980319,45982316,45984364,45986315,45988363,45990411,45992459,45994507,45996555,45998603,46000606,46002654,46004614,46006662,46008710,46010758,46012806,46014809,46016857,46018905,46020953,46023001,46025003,46027056,46029104,46031152,46033154,46035202,46037072,46039120,46041168,46043216,46045264,46047266,46049314,46051362,46053343,46055391,46057439,46059487,46061488,46063536,46065491,46067539,46069469,46071413,46073344,46075274,46077322,46079273,46081321,46083369,46085417,46087229,46089180,46091134,46093081,46095129,46097177,46099225,46101273,46103330,46105333,46107381,46109255,46111198,46113083,46115026,46117074,46119122,46121170,46123218,46125266,46127274,46129322,46131273,46133291,46135259,46137247,46139036,46141084,46143132,46145180,46147228,46149276,46151324,46153326,46155217,46157265,46159313,46161361,46163364,46165412,46167460,46169508,46171459,46173507,46175434,46177384,46179432,46181480,46183528,46185527,46187575,46189623,46191629,46193677,46195725,46197773,46199776,46201824,46203872,46205920,46207968,46209975,46212023,46214071,46216009,46218057,46220105,46222153,46224201,46226067,46228115,46230163,46232211,46234259,46236220,46238268,46240316,46242364,46244339,46246387,46248392,46250440,46252435,46254310,46256358,46258300,46260348,46262396,46264153,46266201,46268249,46270258,46272306,46274354,46276402,46278405,46280369,46282417,46284465,46286513,46288561,46290609,46292657,46294705,46296753,46298801,46300800,46302848,46304896,46306944,46308992,46310951,46312999,46315047,46317052,46319100,46321148,46323196,46325244,46327292,46329160,46331208,46333081,46334805,46336853,46338901,46340949,46342997,46345045,46347093,46348202,46350144,46352192,46354240,46356288,46358291,46360339,46362387,46364324,46366372,46368420,46370143,46372191,46374159,46376207,46378066,46380114,46381992,46384040,46385909,46387957,46390005,46392053,46393822,46395870,46397918,46399966,46402014,46404062,46406065,46408113,46410161,46412108,46414156,46416204,46418143,46420148,46422196,46424131,46426179,46428227,46430275,46432228,46434172,46436084,46438132,46440180,46442228,46444276,46446324,46448332,46450380,46452428,46454476,46456524,46458473,46460521,46462569,46464617,46466567,46468615,46470663,46472711,46473957,46476005,46478053,46480101,46482149,46484150,46486198,46488246,46490294,46492293,46494341,46496389,46498437,46500485,46502533,46504535,46506583,46508631,46510679,46512727,46514775,46516778,46518826,46520874,46522922,46524970,46527018,46529017,46531065,46533113,46535161,46537113,46539161,46541209,46543257,46545305,46547309,46549357,46551405,46553443,46555440,46557488,46559495,46561543,46563591,46565639,46567687,46569701,46571454,46573324,46575264,46577312,46579267,46581191,46583239,46585238,46587286,46589334,46591382,46593430,46595304,46597352,46599400,46601448,46603496,46605544,46607592,46609640,46611688,46613736,46615784,46617832,46619880,46621928,46623976,46626024,46628072,46629947,46631995,46633874,46635922,46637970,46640018,46642066,46643938,46645986,46648034,46650082,46652130,46654178,46656226,46658103,46660151,46661839,46663887,46665762,46667768,46669437,46671485,46673484,46675485,46677533,46679581,46681525,46683573,46685531,46687533,46689581,46691456,46693504,46695467,46697515,46699453,46701407,46703455,46705453,46707394,46709350,46711398,46713446,46715494,46717542,46719541,46721589,46723637,46725591,46727639,46729687,46731696,46733744,46735792,46737799,46739758,46741714,46743762,46745810,46747858,46749863,46751911,46753959,46756007,46758055,46760054,46762102,46764150,46766151,46768199,46770247,46772182,46774230,46776166,46778111,46780159,46782207,46784176,46786224,46788230,46790278,46792280,46794328,46796210,46798169,46800217,46802265,46804272,46806280,46808163,46810211,46812259,46814127,46816175,46818050,46820098,46822146,46824194,46826242,46828290,46830338,46832386,46834434,46836482,46838485,46840533,46842581,46844629,46846612,46848626,46850674,46852722,46854685,46856733,46858781,46860675,46862723,46864771,46866819,46868787,46870835,46872768,46874706,46876712,46878723,46880771,46882587,46884635,46886683,46888731,46890779,46892827,46894875,46896923,46898971,46901019,46903067,46905115,46907171,46909219,46911267,46913275,46915323,46917328,46919271,46921319,46923367,46925415,46927463,46929511,46931559,46933500,46935548,46937596,46939644,46941692,46943740,46945788,46947790,46949838,46951886,46953834,46955882,46957930,46959978,46962026,46964074,46966122,46968170,46970218,46972266,46974314,46976362,46978410,46980458,46982462,46984510,46986558,46988606,46990654,46992702,46994750,46996798,46998846,47000894,47002942,47004990,47007038,47009037,47011085,47013133,47015181,47017229,47019277,47021325,47023373,47025421,47027469,47029517,47031516,47033564,47035612,47037660,47039708,47041756,47043804,47045852,47047900,47049909,47051957,47054005,47056053,47058101,47060149,47062197,47064245,47066293,47068341,47070389,47072388,47074436,47076484,47078532,47080580,47082628,47084676,47086679,47088727,47090775,47092823,47094871,47096919,47098967,47101015,47103014,47105062,47107110,47109158,47111206,47113254,47115302,47117304,47119352,47121400,47123448,47125496,47127544,47129548,47131596,47133644,47135692,47137740,47139697,47141676,47143619,47145620,47147668,47149716,47151764,47153605,47155601,47157649,47159596,47161644,47163692,47165740,47167743,47169791,47171839,47173887,47175935,47177983,47179952,47182000,47184048,47186096,47188144,47190192,47192132,47194180,47196228,47198276,47200324,47202302,47204306,47206354,47208402,47210366,47212414,47214462,47216465,47218513,47220561,47222564,47224612,47226660,47228664,47230712,47232760,47234638,47236686,47238734,47240782,47242830,47244878,47246926,47248974,47251022,47253026,47255074,47257122,47259170,47261218,47263266,47265314,47267362,47269410,47271414,47273355,47275360,47277408,47279415,47281463,47283511,47285508,47287556,47289524,47291231,47293279,47295278,47297326,47299374,47301422,47303470,47305518,47307566,47309614,47311662,47313710,47315758,47317806,47319854,47321902,47323958,47325957,47328005,47330053,47332101,47334149,47336197,47338245,47340293,47342341,47344389,47346390,47348438,47350486,47352534,47354582,47356630,47358678,47360726,47362774,47364822,47365796,47367510,47369558,47371496,47373544,47375314,47377362,47379410,47381458,47383506,47385554,47387602,47389574,47391622,47393670,47395718,47397766,47399814,47401821,47403869,47405917,47407965,47410013,47412061,47414109,47416157,47418160,47420208,47422256,47424304,47426352,47428400,47430403,47432451,47434499,47436547,47438595,47440643,47442649,47444697,47446745,47448793,47450687,47452735,47454783,47456831,47458879,47460927,47462975,47465023,47467071,47469119,47471120,47473168,47475216,47477264,47479312,47481260,47483308,47485356,47487404,47489405,47491453,47493501,47495549,47497597,47499645,47501693,47503563,47505611,47507659,47509707,47511755,47513803,47515649,47517697,47519745,47521793,47523841,47525889,47527937,47529985,47532033,47533904,47535952,47538000,47540048,47541924,47543972,47546020,47548068,47550116,47552164,47554212,47556260,47558308,47560356,47562404,47564452,47566500,47568482,47570343,47572391,47574439,47576487,47578535,47580583,47582588,47584636,47586684,47588732,47590780,47592783,47594831,47596879,47598927,47600931,47602979,47604918,47606966,47609014,47611062,47612836,47614884,47616932,47618980,47621028,47623029,47624784,47626466,47628514,47630562,47632610,47634482,47636530,47638578,47640626,47642674,47644722,47646770,47648818,47650817,47652782,47654830,47656735,47658737,47660722,47662770,47664818,47666686,47668734,47670782,47672830,47674878,47676926,47678974,47680979,47683027,47685075,47687123,47689171,47691178,47693226,47695274,47697145,47699148,47701160,47703208,47705072,47707120,47709168,47711216,47713264,47715312,47717360,47719408,47721456,47723504,47725552,47727600,47729599,47731647,47733695,47735743,47737791,47739839,47741887,47743935,47745983,47747984,47750032,47752080,47754128,47756176,47758224,47760228,47762276,47764157,47766205,47768076,47770124,47772172,47774220,47776268,47778316,47780319,47782367,47784415,47786463,47788511,47790559,47792607,47794655,47796654,47798711,47800759,47802807,47804855,47806903,47808951,47810953,47813001,47815049,47817097,47819145,47821193,47823241,47825246,47827294,47829342,47831390,47833438,47835486,47837534,47839533,47841581,47843584,47845632,47847680,47849728,47851776,47853824,47855872,47857920,47859968,47862016,47864064,47866071,47868119,47870167,47872215,47874263,47876311,47878359,47880407,47882455,47884503,47886551,47888554,47890602,47892650,47894698,47896746,47898794,47900842,47902890,47904938,47906945,47908993,47911041,47913089,47915137,47917185,47919233,47921281,47923329,47925377,47927425,47929473,47931521,47933569,47935578,47937626,47939674,47941722,47943770,47945818,47947824,47949872,47951920,47953968,47956016,47957902,47959876,47961856,47963728,47965776,47967824,47969771,47971819,47973867,47975915,47977963,47980011,47982059,47984107,47986155,47988162,47990210,47992258,47994306,47996354,47998402,48000407,48002455,48004503,48006551,48008599,48010537,48012585,48014633,48016681,48018729,48020677,48022725,48024773,48026821,48028769,48030817,48032865,48034808,48036856,48038904,48040952,48043000,48045048,48047096,48049144,48051192,48053203,48055251,48057299,48059347,48061395,48063443,48065491,48067539,48069587,48071635,48073639,48075687,48077735,48079783,48081831,48083879,48085927,48087975,48090023,48092071,48094119,48096130,48098178,48100226,48102274,48104322,48106370,48108418,48110466,48112468,48114439,48116487,48118535,48120583,48122631,48124639,48126687,48128559,48130607,48132655,48134703,48136751,48138799,48140847,48142895,48144943,48146991,48149046,48151094,48153142,48155197,48157245,48159293,48161340,48163336,48165384,48167432,48169410,48171458,48173506,48175421,48177469,48179517,48181565,48183613,48185661,48187709,48189763,48191811,48193859,48195799,48197847,48199895,48201500,48203548,48205596,48207585,48209633,48211681,48213729,48215777,48217825,48219873,48221921,48223969,48225908,48227956,48230004,48232052,48234100,48236148,48237894,48239704,48241752,48243759,48245701,48247749,48249797,48251845,48253893,48255871,48257919,48259921,48261969,48263892,48265897,48267945,48269993,48272041,48273952,48276000,48278048,48279995,48281988,48284036,48286093,48288141,48290198,48292185,48294233,48296231,48298279,48300327,48302214,48303829,48305877,48307874,48309922,48311970,48314024,48316008,48318056,48320104,48322152,48324200,48326174,48328222,48330270,48332318,48334287,48336335,48338383,48340431,48342479,48344527,48346365,48348413,48350461,48352509,48354557,48356605,48358653,48360707,48362755,48364803,48366851,48368899,48370897,48372945,48374942,48376990,48379038,48381035,48383083,48385131,48387179,48389227,48391275,48393323,48395371,48397419,48399467,48401515,48403563,48405611,48407659,48409707,48411755,48413803,48415851,48417899,48419947,48421944,48423992,48426040,48428088,48430136,48432184,48434232,48436280,48438328,48440376,48442424,48444472,48446520,48448568,48450616,48452664,48454712,48456760,48458808,48460856,48462904,48464952,48467000,48469048,48471096,48473144,48475141,48477189,48479237,48481285,48483333,48485381,48487429,48489477,48491475,48493523,48495571,48497619,48499667,48501715,48503763,48505811,48507859,48509859,48511907,48513955,48516003,48518051,48520099,48522147,48524195,48526243,48528291,48530339,48532387,48534435,48536483,48538531,48540579,48542627,48544675,48546723,48548771,48550819,48552867,48554915,48556912,48558960,48561008,48563056,48565048,48567096,48569093,48571141,48573171,48575220,48577268,48579316,48581353,48583217,48585265,48587313,48589169,48591217,48593272,48594878,48596926,48598974,48601022,48603070,48605118,48607088,48609136,48611184,48613232,48615280,48617284,48619332,48621380,48623428,48625476,48627524,48629572,48631620,48633668,48635666,48637714,48639762,48641810,48643858,48645906,48647960,48650008,48652064,48654060,48656108,48658156,48660204,48662252,48664250,48666298,48668295,48670343,48672391,48674385,48676382,48678430,48680478,48682422,48684470,48686518,48688566,48690614,48692662,48694710,48696709,48698757,48700691,48702739,48704729,48706777,48708825,48710813,48712861,48714909,48716904,48718952,48721000,48722986,48725034,48727029,48729077,48731125,48733173,48735221,48737269,48739272,48741320,48743368,48745416,48747464,48749512,48751560,48753608,48755656,48757704,48759752,48761751,48763807,48765845,48767792,48769840,48771888,48773936,48775984,48778032,48780027,48782075,48784123,48786171,48788167,48790215,48792263,48794311,48796359,48798407,48800455,48802503,48804551,48806599,48808647,48810695,48812743,48814791,48816790,48818838,48820886,48822934,48824933,48826981,48829029,48831077,48833125,48835173,48837221,48839269,48841317,48843365,48845413,48847461,48849509,48851557,48853614,48855670,48857617,48859665,48861713,48863761,48865809,48867857,48869905,48871953,48874001,48876002,48878050,48880098,48882146,48884184,48886216,48888264,48890312,48892360,48894408,48896456,48898504,48900552,48902549,48904597,48906645,48908693,48910741,48912789,48914837,48916859,48918910,48920958,48923006,48925054,48927015,48929012,48931060,48933108,48935156,48937204,48939252,48941300,48943348,48945396,48947444,48949492,48951540,48953588,48955636,48957684,48959732,48961780,48963779,48965827,48967875,48969923,48971971,48974019,48976067,48978115,48980112,48982160,48984208,48986256,48988304,48990352,48992400,48994448,48996404,48998452,49000500,49002548,49004596,49006644,49008692,49010740,49012743,49014791,49016839,49018887,49020935,49022983,49025031,49027079,49029080,49031128,49033176,49035224,49037272,49039320,49041368,49043416,49045464,49047512,49049560,49051608,49053604,49055652,49057700,49059748,49061796,49063844,49065892,49067940,49069988,49072036,49074084,49076132,49078180,49080228,49082276,49084283,49086331,49088379,49090427,49092475,49094523,49096571,49098619,49100667,49102715,49104772,49106820,49108872,49110667,49112715,49114763,49116767,49118815,49120863,49122911,49124959,49127007,49129055,49131103,49133151,49135199,49137247,49139295,49141343,49143391,49145439,49147487,49149535,49151583,49153576,49155624,49157672,49159720,49161768,49163816,49165864,49167863,49169911,49171959,49173958,49176006,49178008,49180056,49182104,49184152,49186154,49188202,49190250,49192298,49194342,49196398,49198406,49200454,49202502,49204550,49206598,49208592,49210640,49212688,49214736,49216784,49218832,49220880,49222928,49224976,49227024,49229072,49231120,49233168,49235216,49237264,49239312,49241360,49243359,49245407,49247455,49249503,49251551,49253599,49255647,49257695,49259743,49261791,49263839,49265887,49267935,49269983,49272031,49274079,49275458,49276515,49277631,49278757,49280050,49281859,49282583,49283277,49284798,49286846,49288894,49289484,49289518,49289552,49289586,49289620,49289654,49289906,49290399,49290794,49291310,49291887,49292547,49293205,49293793,49294353,49294983,49295573,49296227,49296729,49297394,49298088,49298669,49299327,49299936,49300721,49301522,49302248,49303032,49303704,49304425,49305578,49306597,49307489,49308416,49309379,49310309,49311250,49312231,49313186,49314148,49315175,49316119,49316841,49317957,49319258,49320439,49321764,49323043,49324425,49325585,49326724,49327876,49329015,49330190,49331323,49332488,49333629,49334797,49335841,49336786,49338163,49339665,49340773,49341592,49342379,49343098,49344157,49345491,49346670,49347996,49348835,49349105,49349202,49349304,49349418,49349656,49349704,49349821,49349869,49349917,49349965,49350077,49350126,49350231,49350400,49350510,49350557,49350604,49350706,49350753,49350800,49350843,49350940,49350987,49351034,49351081,49351191,49351235,49351285,49351335,49351515,49351560,49351604,49351646,49351687,49351734,49351855,49351903,49352028,49352076,49352124,49352194,49352273,49352320,49352367,49352414,49352512,49352557,49352602,49352647,49352692,49352737,49352835,49352880,49352921,49352960,49353010,49353118,49353168,49353218,49353311,49353364,49353474,49353524,49353573,49353619,49353662,49353755,49353801,49353847,49353893,49353991,49354037,49354083,49354129,49354175,49354222,49354330,49354377,49354422,49354467,49354563,49354608,49354653,49354698,49354795,49354840,49355067,49356163,49357326,49357373,49357420,49358345,49359536,49359695,49359745,49360523,49361736,49362079,49362983,49364959,49366941,49368989,49370962,49372938,49374986,49376962,49378939,49380987,49382965,49385013,49386995,49389043,49391019,49393067,49395115,49397088,49399136,49401117,49403165,49405141,49407189,49409165,49411213,49413261,49415236,49417217,49419265,49421238,49423286,49425266,49427314,49429362,49431337,49433385,49435362,49437410,49439388,49441436,49443412,49445386,49447434,49449411,49451459,49453507,49455552,49457557,49459529,49461509,49463557,49465534,49467514,49469494,49471468,49473450,49475498,49477474,49479522,49481500,49483477,49485525,49487496,49489544,49491592,49493567,49495615,49497663,49499639,49501619,49503598,49505646,49507694,49509742,49511735,49513714,49515762,49517737,49519785,49521833,49523808,49525856,49527904,49529882,49531930,49533978,49535955,49538003,49539987,49542035,49544083,49546131,49548179,49550154,49552202,49554174,49556222,49558270,49560318,49562366,49564341,49566389,49568437,49570485,49572533,49574581,49576629,49578677,49580659,49582707,49584685,49586663,49588711,49590686,49592664,49594639,49596617,49598599,49600647,49602627,49604609,49606588,49608567,49610615,49612590,49614638,49616611,49618659,49620635,49622613,49624590,49626638,49628620,49630668,49632645,49634627,49636675,49638650,49640698,49642746,49644794,49646770,49648818,49650798,49652846,49654825,49656873,49658848,49660896,49662873,49664852,49666832,49668880,49670859,49672907,49674880,49676928,49678976,49680956,49683004,49685052,49687100,49689070,49691118,49693096,49695144,49697192,49699174,49701222,49703202,49705250,49707224,49709272,49711320,49713297,49715345,49717393,49719441,49721417,49723465,49725440,49727488,49729536,49731512,49733490,49735538,49737512,49739490,49741538,49743518,49745566,49747614,49749587,49751635,49753612,49755584,49757632,49759609,49761586,49763561,49765609,49767589,49769637,49771611,49773589,49775560,49777535,49779519,49781567,49783546,49785594,49787568,49789545,49791593,49793566,49795614,49797662,49799710,49801758,49803730,49805778,49807826,49809874,49811922,49813900,49815948,49817996,49820044,49822092,49824140,49826188,49828159,49830207,49832255,49834303,49836351,49838399,49840380,49842428,49844476,49846524,49848572,49850554,49852602,49854650,49856698,49858746,49860794,49862842,49864818,49866866,49868914,49870962,49873010,49875058,49877030,49879078,49881126,49883174,49885222,49887263,49888844,49890892,49892940,49894988,49897036,49899084,49900509,49902557,49904531,49906579,49908550,49910527,49912509,49914557,49916605,49918653,49920633,49922681,49924729,49926777,49928825,49930801,49932849,49934897,49936945,49938993,49941041,49943012,49945060,49947108,49949156,49951204,49953252,49955300,49957276,49959324,49961372,49963420,49965468,49967516,49969564,49971612,49973590,49975638,49977686,49979734,49981782,49983830,49985878,49987926,49989974,49991947,49993995,49996043,49998091,50000139,50002187,50004235,50006283,50008331,50010307,50012355,50014403,50016451,50018499,50020547,50022524,50024572,50026620,50028668,50030643,50032691,50034739,50036787,50038760,50040808,50042856,50044904,50046875,50048923,50050971,50053019,50054999,50057047,50059095,50061143,50063191,50065239,50067219,50069267,50071315,50073363,50075411,50077441,50079468,50081516,50083564,50085612,50087660,50089708,50091684,50093732,50095780,50097828,50099802,50101850,50103898,50105946,50107994,50110042,50112090,50114138,50116186,50118234,50120257,50122043,50124018,50125992,50127965,50129942,50131919,50133897,50135875,50137854,50139902,50141875,50143923,50145971,50148019,50150067,50152115,50154163,50156211,50158259,50160237,50162285,50164333,50166381,50168429,50170477,50172525,50174573,50176621,50178603,50180651,50182699,50184747,50186795,50188843,50190891,50192939,50194987,50196966,50199014,50201062,50203110,50205158,50207206,50209254,50211302,50213350,50215398,50217446,50219422,50221470,50223518,50225566,50227614,50229591,50231639,50233687,50235735,50237783,50239831,50241879,50243861,50245909,50247957,50250005,50252053,50254101,50256149,50258197,50260177,50262225,50264273,50266321,50268369,50270417,50272465,50274440,50276488,50278536,50280584,50282632,50284680,50286728,50288776,50290824,50292872,50294848,50296896,50298944,50300992,50303040,50305088,50307136,50309109,50311157,50313205,50315253,50317301,50319349,50321397,50323373,50325421,50327469,50329517,50331565,50333613,50335585,50337633,50339681,50341729,50343777,50345825,50347801,50349849,50351897,50353945,50355993,50358041,50360089,50362137,50364114,50366162,50368210,50370101,50372081,50374059,50376033,50378011,50379989,50381966,50383941,50385915,50387891,50389871,50391850,50393898,50395870,50397849,50399897,50401873,50403853,50405827,50407802,50409688,50411664,50413552,50415532,50417580,50419557,50421530,50423506,50425480,50427453,50429431,50431409,50433300,50435348,50437322,50439294,50441274,50443288,50445330,50447305,50449283,50451331,50453310,50455294,50457342,50459326,50461374,50463352,50465400,50467448,50469496,50471544,50473592,50475640,50477688,50479665,50481713,50483761,50485743,50487791,50489839,50491823,50493871,50495919,50497967,50500015,50501995,50504043,50506091,50508070,50510118,50512166,50514144,50516192,50518172,50520152,50522200,50524248,50526296,50528344,50530392,50532440,50534420,50536468,50538516,50540564,50542612,50544660,50546708,50548685,50550733,50552781,50554829,50556811,50558859,50560907,50562879,50564927,50566975,50569023,50571071,50573050,50575098,50577146,50579194,50581242,50583290,50585338,50587316,50589364,50591412,50593460,50595437,50597485,50599533,50601581,50603560,50605608,50607656,50609704,50611752,50613800,50615848,50617896,50619944,50621923,50623971,50626019,50628067,50630115,50632163,50634211,50636264,50638265,50640313,50642361,50644409,50646457,50648505,50650481,50652529,50654577,50656625,50658673,50660721,50662769,50664817,50666865,50668842,50670890,50672938,50674986,50677034,50679082,50681130,50683178,50685155,50687203,50689251,50691299,50693347,50695395,50697443,50699491,50701539,50703512,50705560,50707536,50709584,50711567,50713615,50715591,50717639,50719687,50721735,50723783,50725831,50727879,50729927,50731975,50734023,50736008,50738056,50740104,50742152,50744200,50746176,50748224,50750272,50752320,50754368,50756416,50758464,50760512,50762560,50764538,50766586,50768634,50770682,50772730,50774711,50776759,50778807,50780855,50782903,50784951,50786999,50789047,50791095,50793077,50795125,50797173,50799221,50801269,50803317,50805365,50807344,50809392,50811440,50813488,50815536,50817584,50819567,50821615,50823663,50825711,50827759,50829807,50831855,50833830,50835878,50837926,50839974,50842022,50844070,50846118,50848166,50850172,50852222,50854270,50856318,50858366,50860414,50862393,50864441,50866489,50868537,50870585,50872633,50874681,50876729,50878712,50880760,50882808,50884856,50886904,50888952,50890950,50893006,50895054,50897033,50899081,50901129,50903177,50905225,50907273,50909321,50911369,50913417,50915393,50917441,50919418,50921466,50923445,50925421,50927402,50929450,50931424,50933399,50935374,50937372,50939428,50941400,50943375,50945351,50947320,50949237,50951285,50953263,50955311,50957359,50959407,50961455,50963424,50965472,50967446,50969494,50971463,50973511,50975483,50977531,50979579,50981627,50983598,50985646,50987694,50989669,50991717,50993765,50995712,50997760,50999808,51001773,51003752,51005800,51007848,51009822,51011870,51013918,51015966,51017943,51019991,51022039,51024015,51026063,51028111,51030082,51032130,51034114,51036162,51038210,51040258,51042306,51044354,51046402,51048375,51050423,51052471,51054519,51056567,51058487,51060352,51062177,51064225,51066278,51068241,51070289,51072267,51074230,51076278,51078326,51080297,51082345,51084393,51086368,51088416,51090464,51092512,51094560,51096608,51098587,51100635,51102581,51104629,51106677,51108725,51110773,51112821,51114869,51116917,51118899,51120947,51122995,51125043,51127091,51129139,51131134,51133182,51135230,51137278,51139259,51141307,51143355,51145403,51147451,51149499,51151478,51153526,51155574,51157622,51159670,51161645,51163693,51165741,51167789,51169837,51171885,51173933,51175981,51177956,51180004,51182052,51184100,51186148,51188196,51190172,51192147,51194119,51196003,51198051,51200099,51202073,51204121,51206090,51208073,51210095,51212122,51214098,51216065,51218046,51220094,51222074,51224122,51226170,51228138,51230186,51232234,51234198,51236246,51238225,51240273,51242247,51244295,51246253,51248301,51250274,51252322,51254298,51256271,51258319,51260367,51262340,51264308,51266281,51268258,51270306,51272269,51274243,51276299,51278269,51280317,51282365,51284413,51286387,51288435,51290483,51292531,51294579,51296627,51298604,51300573,51302621,51304600,51306515,51308563,51310539,51312519,51314567,51316546,51318594,51320479,51322443,51324423,51326471,51328442,51330417,51332465,51334437,51336417,51338465,51340446,51342494,51344466,51346444,51348423,51350401,51352381,51354429,51356409,51358457,51360505,51362553,51364503,51366551,51368599,51370647,51372566,51374614,51376662,51378710,51380758,51382808,51384734,51386782,51388830,51390878,51392926,51394974,51396946,51398994,51400961,51403009,51404979,51407027,51409075,51411043,51413091,51415139,51417115,51419163,51421123,51423171,51425132,51427180,51429153,51431201,51433063,51435111,51437089,51439065,51441113,51443094,51445142,51447190,51449238,51451286,51453258,51455234,51457282,51459250,51461298,51463349,51465248,51467304,51469272,51471320,51473368,51475416,51477392,51479440,51481488,51483536,51485507,51487555,51489603,51491651,51493708,51495756,51497716,51499764,51501812,51503860,51505791,51507839,51509887,51511935,51513906,51515943,51517991,51520039,51522087,51524135,51526183,51528231,51530279,51532254,51534302,51536350,51538398,51540446,51542494,51544542,51546590,51548638,51550686,51552667,51554715,51556602,51558578,51560626,51562514,51564562,51566610,51568658,51570706,51572754,51574802,51576774,51578822,51580870,51582918,51584966,51587014,51589062,51591044,51593092,51595140,51597111,51599159,51601207,51603186,51605234,51607179,51609227,51611275,51613323,51615371,51617419,51619467,51621515,51623563,51625611,51627659,51629632,51631680,51633728,51635776,51637751,51639799,51641847,51643819,51645867,51647915,51649963,51652011,51654059,51656107,51658155,51660203,51662183,51664231,51666279,51668327,51670375,51672423,51674471,51676449,51678497,51680545,51682593,51684641,51686689,51688737,51690785,51692833,51694810,51696858,51698906,51700954,51703002,51705050,51707098,51709146,51711194,51713242,51715178,51717226,51719274,51721322,51723370,51725342,51727390,51729367,51731415,51733463,51735511,51737559,51739607,51741655,51743703,51745751,51747532,51749580,51751628,51753676,51755724,51757772,51759820,51761868,51763916,51765964,51768012,51770060,51772108,51774156,51776204,51778252,51780300,51782348,51784396,51786444,51788501,51790469,51792517,51794565,51796613,51798661,51800709,51802757,51804805,51806853,51808901,51810949,51812997,51815045,51817093,51819010,51821058,51823030,51825078,51827051,51829099,51831147,51833195,51835243,51837116,51839164,51841135,51843183,51845231,51847211,51849259,51851307,51853355,51855403,51857384,51859432,51861480,51863528,51865576,51867624,51869672,51871720,51873768,51875816,51877864,51879912,51881960,51883916,51885964,51888012,51890060,51892034,51894082,51896130,51898178,51900156,51902204,51904252,51906300,51908275,51910000,51910928,51911936,51913496,51914492,51915871,51917853,51919769,51920893,51922111,51923447,51924340,51925381,51926351,51927531,51928783,51930100,51931420,51932694,51933978,51935258,51936622,51938078,51939494,51940919,51942223,51943448,51944656,51945443,51946300,51947182],\"sizes\":[2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1449,1305,1430,1064,934,822,813,853,1042,1098,768,924,971,832,969,874,907,742,888,967,787,799,876,829,932,1237,875,997,981,1150,1128,986,1139,1068,802,776,1444,1221,1264,1272,974,598,627,579,556,519,1070,1038,1050,646,580,543,828,518,706,869,940,863,597,708,723,615,1123,857,1015,1140,739,674,587,533,558,611,708,665,926,713,744,702,889,1245,709,891,991,1004,1022,547,1043,648,966,688,865,975,933,875,548,393,694,855,1008,349,602,944,645,688,541,607,653,890,903,747,655,683,568,1618,2048,1058,963,1202,1258,1124,794,1299,1195,1043,908,1194,1291,1310,1580,1599,1383,2018,457,45,43,84,86,59,70,172,316,383,492,620,612,639,725,730,851,1367,1438,1497,1409,1553,1680,1506,1605,1645,1626,1720,1665,1716,1762,1678,1609,1670,1674,1634,1460,1521,1407,1205,898,747,694,604,604,537,573,571,499,379,330,224,72,83,45,44,45,1366,963,49,45,45,45,48,49,45,45,45,48,165,407,1377,1314,1400,1431,1426,1366,1087,1111,991,727,646,920,821,836,818,876,968,946,830,791,739,784,975,827,805,781,839,749,686,655,608,282,82,49,45,44,45,48,49,45,44,45,48,49,860,1929,1438,1404,1366,1301,1316,1331,1316,1272,1340,1361,1296,1161,1288,1274,1110,1008,927,954,983,863,714,939,1127,1129,1241,1363,1550,1657,1607,1605,1661,1456,1464,1287,1116,1155,1321,1421,1459,1469,1174,963,1016,1126,1186,1268,1194,1302,1179,1246,1267,1301,1370,1294,1347,1304,1495,1966,48,49,45,39,45,93,400,786,890,1071,1319,1641,1699,1787,1782,1713,1741,1740,1768,1789,1848,1802,1780,1646,1333,1461,1194,1630,1791,1819,1874,1927,1906,1925,1940,1804,1871,1838,1846,1763,1780,1688,1757,1839,1834,1434,1452,1304,984,364,48,47,45,44,45,48,47,990,973,1384,1166,1270,624,840,1144,899,893,1046,1713,1704,1445,1478,1476,1510,1528,1512,1507,1526,1492,1592,1764,1828,1939,1977,2009,1997,2005,2021,2013,1983,1923,1802,1804,1855,1935,1875,1974,2025,1941,1843,1829,1814,1727,1737,1739,1816,1832,1893,1948,1963,2002,2002,2008,1877,1664,1534,1486,1500,1523,1504,1513,1493,1482,1443,1430,1435,1739,1837,1266,1305,1287,1290,1257,1286,1380,1290,1241,1304,1245,1226,1379,1391,1459,1390,1427,1422,1423,1500,1538,1483,1516,1518,1556,1648,1649,1559,1623,1560,1593,1529,1508,1511,1681,1716,1544,1726,1623,1387,1377,1379,1302,1260,1262,1272,1260,1171,1172,1225,1170,1175,1223,1237,1345,1248,1465,1954,1064,1122,1156,1102,972,962,1072,1106,1124,1197,1080,1266,1181,1363,1417,1508,1545,1622,1548,1556,1605,1495,1400,1544,1600,1520,1565,1507,1368,1468,1249,1332,1397,1236,1313,1463,1472,1543,1493,1492,1436,1273,1223,1046,1036,1045,1076,1155,1178,1056,848,1016,1059,899,945,1002,1070,2045,1530,1567,1582,1606,1598,1617,1680,1589,1601,1646,1679,1653,1419,1519,1612,1560,1604,1745,1625,1527,1629,1518,1479,1460,1530,1630,1487,1506,1513,1587,1536,1553,1528,1611,1567,1646,1671,1694,1605,1544,1574,1679,1560,1516,1287,1252,1572,1515,1511,1395,1579,1629,1689,1735,1588,1500,1574,1971,1418,939,1085,973,1147,1119,1040,1163,1018,1069,1123,1102,1175,1114,1115,1077,1130,1162,1235,1242,1232,1251,1326,1307,1197,1153,1038,1047,1040,1032,998,1021,1026,924,985,934,919,993,1029,1083,998,989,1034,1008,947,1021,924,1042,1061,1115,1129,1070,1103,1099,1027,950,842,1495,1824,1258,1300,1280,1280,1271,1283,1367,1298,1240,1306,1241,1164,1288,1316,1377,1330,1326,1326,1366,1466,1635,1619,1605,1404,1301,1401,1568,1550,1742,1696,1626,1464,1259,1359,1402,1482,1463,1522,1478,1377,1375,1369,1302,1247,1252,1292,1250,1161,1193,1213,1186,1181,1226,1228,1328,1244,1481,2007,1543,1595,1591,1603,1597,1540,1551,1617,1554,1576,1625,1721,1733,1814,1824,1758,1496,1702,1629,1768,1877,1822,1761,1902,1841,1800,1914,1838,1732,1810,1686,1724,1770,1667,1653,1767,1652,1870,1835,1762,1365,1356,1403,1257,1368,1527,1487,1464,1522,1539,1528,1551,1591,1476,1423,1485,1500,2048,906,831,772,893,934,768,689,925,819,878,810,812,961,1166,1297,1242,1295,1260,1367,1463,1524,1544,1549,1672,1578,1662,1573,1619,1629,1626,1600,1467,1484,1469,1520,1559,1527,1465,1472,1452,1369,1329,1207,1166,1237,1171,1119,1032,986,1043,1048,934,963,1027,1019,911,768,1726,1852,1841,1887,1874,1850,1798,1841,1861,1809,1733,1615,1528,1396,1794,1963,1898,1808,1895,1845,1870,1912,1933,1835,1713,1647,1583,1430,1699,2025,1740,1827,1904,1910,1869,1763,1751,1521,1456,1504,1574,1616,1662,1921,1660,2016,1863,1760,2013,1729,1878,2025,1498,1307,1640,1535,1465,1818,1764,1348,1538,1610,1514,1485,2006,1459,1400,1681,1551,1541,1815,1917,1675,1696,1714,1775,1743,1755,1749,1789,1827,1827,1849,1866,1747,1768,1781,1802,1836,1827,1814,1875,1836,1780,1772,1759,1763,1775,1730,1757,1813,1739,1762,1757,1836,1779,1780,1754,1751,1723,1703,1733,1759,1738,1721,1642,1750,1845,1901,1834,1843,1793,1859,1903,1869,1778,1707,1639,1723,2048,1939,1916,1905,1955,1905,1885,1911,1913,1883,1864,1918,1911,1798,1811,1749,1763,1747,1834,1790,1805,1789,1833,1830,1821,1816,1762,1744,1690,1594,1559,1671,1743,1807,1762,1741,1729,1694,1730,1705,1731,1762,1768,1805,1745,1778,1918,1882,1954,1851,1764,1847,1919,1919,1913,1892,1911,1856,2048,1972,1954,1985,2020,1990,2006,1988,1967,1938,1894,1983,2009,1987,1954,1894,1919,1988,1973,1973,1978,2003,2023,1949,1924,1913,1897,1923,1843,1728,1755,1801,1917,1933,1939,1955,1965,1982,1995,1934,1913,2012,1941,1806,1847,1871,1848,1843,1817,1815,1806,1860,1833,1720,1676,1588,1523,1439,742,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1515,1449,1365,1538,1498,1576,1437,1423,1310,1199,1343,1516,1396,1183,1306,1443,1554,1394,1488,1421,1380,1343,1498,1482,1433,1487,1477,1498,1479,1496,1543,1506,1577,1474,1590,1519,1564,1501,1497,1438,1570,1573,1432,1427,1356,1630,1671,1650,1634,1573,1525,1603,1682,1596,1534,1625,1529,1939,1436,1079,1138,1109,1068,987,1065,1097,1090,1134,1106,1157,1199,1332,1357,1488,1519,1594,1569,1533,1640,1567,1409,1414,1593,1581,1501,1549,1386,1439,1359,1313,1298,1372,1253,1423,1458,1530,1519,1499,1491,1337,1223,1162,985,1045,1035,1187,1163,1144,975,901,1055,945,897,955,1056,1580,1691,1054,1092,1158,1117,954,1001,1057,1100,1148,1202,1260,1286,1188,1524,1533,1492,1522,1490,1454,1624,1595,1482,1476,1582,1635,1381,1547,1483,1581,1646,1687,1842,1896,1860,1572,1789,1795,1750,1466,1695,1284,1413,1309,925,1111,1133,1096,1143,1201,1054,877,1032,1018,906,917,963,1338,2004,1489,1521,1547,1541,1542,1473,1482,1548,1478,1491,1573,1655,1720,1777,1798,1712,1487,1695,1606,1729,1885,1775,1685,1889,1743,1744,1922,1718,1611,1855,1676,1689,1774,1525,1561,1714,1613,1852,1797,1735,1342,1360,1373,1242,1349,1452,1481,1448,1441,1463,1456,1489,1517,1403,1360,1434,1458,2048,1703,1654,1669,1733,1787,1746,1729,1785,1775,1833,1812,1893,1774,1752,1798,1788,1816,1818,1822,1771,1880,1797,1764,1777,1766,1741,1767,1676,1777,1797,1737,1751,1788,1820,1765,1762,1752,1708,1732,1706,1736,1726,1723,1704,1626,1848,1860,1892,1831,1827,1836,1877,1877,1847,1784,1695,1564,843,1863,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1554,1243,1352,1399,1454,1548,1548,1428,1461,1474,1488,1419,1448,1450,1353,1315,649,906,1159,1465,1574,1716,1842,1832,1879,1861,1818,1724,1650,1742,1752,1853,1873,1852,1809,1813,1811,1809,1583,1280,1032,1103,1259,1286,1126,1424,1249,1108,1271,1314,1410,1463,1460,1485,1385,1405,1384,1769,1807,1426,1442,1488,1557,1454,1502,1530,1412,1464,1549,1624,1434,1485,1655,1679,1632,1752,1798,1644,1728,1643,1578,1550,1495,1580,1640,1578,1605,1605,1640,1582,1525,1561,1627,1634,1606,1633,1586,1545,1567,1610,1635,1598,1456,1156,1404,1501,1480,1371,1427,1477,1580,1599,1596,1423,1430,1644,1974,1369,1389,1404,1453,1349,1415,1469,1415,1431,1392,1535,1355,1177,1535,1530,1538,1594,1670,1605,1578,1588,1471,1484,1497,1551,1548,1479,1445,1526,1572,1504,1475,1500,1598,1547,1561,1571,1599,1566,1518,1550,1501,1383,1312,993,1033,1341,1409,1280,1277,1466,1491,1524,1552,1354,1290,1419,2056,1639,1655,1648,1745,1757,1706,1763,1689,1691,1736,1800,1746,1442,1576,1678,1641,1668,1808,1702,1604,1689,1590,1533,1525,1602,1701,1551,1545,1550,1644,1640,1636,1621,1695,1663,1740,1727,1788,1683,1631,1622,1712,1577,1551,1302,1390,1703,1686,1626,1563,1705,1740,1803,1844,1696,1602,1666,1997,1064,567,618,616,677,745,751,954,988,1102,910,1016,1481,1464,1613,1630,1197,1464,1500,1707,1718,1728,1585,1662,1637,1754,1625,1709,1447,1735,1666,1771,1724,1748,1661,1614,1688,1763,1754,1704,1622,1398,1421,1262,1188,1282,1456,1264,1187,1310,1293,1422,1575,1546,1497,1541,1604,1189,1773,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2046,2019,2020,2049,2057,2055,2048,2053,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2043,2009,2048,2050,2057,2048,2056,2049,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2057,2041,2008,2034,2048,2056,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2047,2006,2022,2048,2056,2048,2048,2050,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1886,1255,1400,1307,1099,977,1018,1143,1118,1040,1241,1078,1212,1097,1129,1202,972,1162,1170,1235,1182,1184,1221,891,810,892,986,931,876,778,963,836,853,604,342,339,337,1312,1288,1489,1427,1457,1447,761,1104,1056,896,900,829,1417,1304,1492,1305,1106,1033,1065,1168,1071,1225,1099,1129,1201,1081,1236,1066,1088,1103,1178,1174,1197,1120,1219,971,924,947,998,936,702,946,777,868,967,504,337,353,577,1146,1302,1455,1391,1407,1222,1018,1172,863,903,861,1049,2022,47,45,46,62,105,124,157,196,173,241,230,243,470,883,1005,1018,1056,1360,1582,1579,1669,1639,1705,1750,1762,1662,1559,1558,1570,1705,1647,1740,1789,1707,1638,1645,1591,1612,1626,1267,964,1001,855,613,332,214,140,118,107,175,146,63,65,48,49,45,45,1835,586,165,185,221,221,291,430,363,403,426,303,323,594,827,965,908,1099,1156,1539,1709,1756,1813,1761,1873,1822,1799,1651,1672,1718,1824,1858,1859,1891,1839,1744,1893,1876,1869,1858,1653,972,938,911,799,560,440,319,358,354,387,413,237,169,147,240,203,135,1368,1669,1259,1366,1239,1270,1375,1399,1351,1388,1313,1438,1505,1448,1374,1454,1447,1441,1492,1408,1568,1382,1359,1377,1398,1363,1141,1179,1342,1325,1341,1401,1383,1226,1319,1448,1347,1297,1346,1468,1518,1403,1544,1360,1382,1401,1421,1452,1513,1378,1314,1402,1303,1398,1388,1315,1195,1173,1438,787,1038,948,2048,120,49,45,71,982,919,1039,1212,1384,1577,1264,1746,1839,1777,1622,1707,1576,756,1358,1604,1764,1803,1768,1792,1821,1779,1688,1615,1670,1712,1922,1817,1902,1837,1817,1821,1892,1856,1861,1912,1676,1583,1557,1603,1718,1363,1252,1366,1157,1230,1082,870,931,243,45,48,47,780,945,923,852,828,1182,1304,1330,1335,766,1057,815,758,691,725,692,712,769,928,880,908,953,864,962,879,840,598,938,982,909,885,958,519,749,772,751,739,760,913,800,973,605,716,840,826,784,866,837,941,905,862,810,830,831,850,1058,824,847,1786,1452,1511,1444,1685,1590,1513,1629,1546,1526,1497,1675,1608,1513,1605,1541,1316,1515,1638,1620,1552,1532,1448,1500,1756,1770,1482,1415,1229,1160,1270,1383,1245,1038,1141,1202,1103,1183,1215,1318,1223,983,799,804,1305,1562,1526,1415,1473,1327,1306,1367,1172,1297,1375,1307,1159,1003,961,813,653,1440,1681,1559,1408,1494,1346,1315,1373,1148,1263,1339,1286,1142,789,826,629,1119,1827,1506,1421,1464,1418,1289,1378,1255,1186,1353,1344,1299,1135,968,955,764,665,1524,1658,1437,1428,1442,1463,1537,1521,1267,1112,860,762,795,895,876,974,1869,1514,1433,1454,1399,1254,1373,1194,1190,1350,1344,1274,1142,923,915,663,886,1881,1534,1433,1402,1068,1301,1483,1431,1128,879,1096,1519,1755,1584,1552,1295,1163,1354,1490,1302,1142,1172,1271,1224,1289,865,1595,1550,1837,1792,1814,1711,1336,1569,1879,1892,1697,1806,2015,1694,1087,1359,1308,1339,1380,1770,1756,1187,1419,1333,1336,1360,1789,1143,817,871,1598,1446,931,936,1126,1836,1194,1516,1727,1526,1598,1759,1770,1551,1274,1622,1680,1510,1709,1885,1936,1286,1380,1690,1586,1572,1841,1896,1851,1229,1505,1737,1607,1632,1875,1922,1781,1197,1535,1772,1602,1533,1860,1876,1815,1304,1533,1723,1554,1560,1799,1790,1842,1253,1509,1732,1510,1602,1759,1830,1472,1286,1632,1674,1505,1708,1776,1847,1238,1484,1710,1552,1583,1766,1739,1738,1203,1570,1718,1505,1694,1844,1799,1516,1673,1620,1542,1524,1579,1571,1660,1514,1536,1598,1587,1454,1661,1601,1511,1470,1456,1422,1569,1457,1374,1135,1066,1291,1367,1208,1195,1445,1605,1443,1293,1263,1409,1456,1279,1247,1327,1204,1531,1182,49,45,45,45,48,204,496,766,783,861,986,949,1016,1008,984,1197,1165,1337,1295,1173,1318,1252,1201,1192,1023,1112,1165,1025,1178,1123,991,920,896,671,650,779,555,158,45,48,49,45,44,1801,668,721,891,1184,1378,1142,910,1098,948,972,696,830,806,1038,938,1204,1170,1153,1233,1273,1164,1250,1387,1330,1376,1334,1336,1329,1074,891,724,503,521,620,823,910,783,859,925,1050,924,933,1037,1183,1074,1009,1052,1144,1379,717,1387,641,1000,1208,1055,1005,910,1013,1706,1274,1208,1360,1330,1543,1415,1539,1654,1786,1794,1837,1824,1704,1756,1706,1584,1768,1721,1656,1612,1631,1651,1522,1561,1648,1704,1515,1580,1534,1624,1519,1360,1107,1098,1571,1544,1596,1582,1535,1395,1336,1456,1606,1587,701,871,1081,1084,1240,1332,1418,1307,1338,1520,1411,1121,752,972,1265,1354,1373,1224,1257,1192,1181,1152,1181,1236,1272,1231,1312,1362,1202,1305,1371,1322,1322,1258,1271,1218,1162,971,1044,1208,1174,1284,1146,1237,972,1204,967,1097,1298,1826,1430,907,692,1568,1241,827,790,962,1051,1057,955,1073,1079,1257,1386,1666,1657,1655,1560,1412,1375,1422,1573,1679,1657,1689,1628,1596,1587,1521,1489,1449,1771,1846,1871,1833,1790,1767,1663,1402,1373,1382,1339,1296,1203,838,594,1377,962,1240,929,1011,1017,840,1246,1087,909,855,1090,859,1187,1271,1408,635,587,596,743,659,649,643,955,1155,1202,836,995,810,810,816,835,811,954,885,897,940,887,798,959,805,978,1012,977,901,983,592,752,639,687,718,795,883,866,825,871,765,832,807,1022,746,1398,1628,2048,1293,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1917,1894,1709,1701,1753,1709,1743,1855,1902,2027,1049,45,45,42,49,45,45,45,42,49,45,45,45,663,933,1387,1401,1540,1570,1440,1548,1521,1564,1668,1714,1709,1725,1714,1687,1633,1669,1608,1639,1609,1602,1494,1318,1306,1163,1186,982,525,381,212,136,96,38,45,48,49,45,39,45,48,49,45,40,783,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1578,1248,1203,1229,1272,1141,1162,1162,1215,1245,1208,1314,1161,1322,1356,1272,1678,1618,1523,1438,1356,1395,1582,1507,1404,1487,1678,1549,1490,1509,1530,1524,1318,1458,1432,1457,1439,1310,1192,1325,1262,1252,1162,1065,922,1009,1013,1097,1033,841,728,648,860,742,631,666,602,1403,1841,1290,1035,1155,1004,1143,1285,1372,1118,1236,1202,1265,1320,1325,1422,1509,1759,1739,1645,1771,1782,1597,1636,1417,1575,1307,1584,1645,1503,1398,1613,1554,1603,1541,1677,1599,1458,1304,1347,1300,1199,1110,1020,983,1068,926,950,1008,1069,1080,970,850,712,605,371,465,389,902,1780,656,650,669,710,701,666,641,670,734,658,689,650,978,1567,1602,1500,1612,1636,1651,1568,1514,1468,1212,932,1060,1497,1437,1562,1516,1501,1513,1400,1343,1258,1002,1012,1363,1523,1477,1426,1502,1378,1255,1098,717,639,667,689,672,662,666,650,675,681,688,624,751,2048,683,683,685,634,647,668,708,719,663,636,691,715,767,1208,1609,1593,1606,1727,1702,1584,1528,1460,1439,1282,1382,1377,1267,1258,1314,1350,1348,1241,1174,1590,1683,1651,1619,1668,1609,1545,1442,1201,1084,741,746,675,703,663,635,663,698,706,650,652,697,701,721,1819,1363,340,464,652,685,705,797,869,946,1105,1041,1068,1276,1429,1522,1563,1570,1577,1505,1466,1453,1466,1464,1390,1461,1546,1424,1466,1378,1306,1349,1403,1410,1537,1671,1555,1471,1331,1136,1154,1245,1226,1244,1285,1183,1153,1096,908,997,1026,1061,976,883,913,751,663,449,751,1818,266,431,520,654,669,794,881,942,944,1015,1086,1216,1306,1442,1600,1705,1714,1679,1630,1560,1405,1413,1276,1301,1328,1417,1463,1426,1473,1466,1432,1466,1422,1484,1456,1438,1673,1671,1558,1408,1289,1276,1227,1224,1209,1153,1241,1078,1074,1048,1012,978,826,790,694,551,443,2056,450,404,534,634,657,774,898,858,1002,1102,1042,1218,1492,1497,1479,1541,1536,1472,1345,1254,1350,1367,1353,1372,1376,1416,1414,1242,1351,1364,1400,1334,1298,1322,1298,1320,1493,1557,1584,1488,1452,1420,1369,1251,1212,1243,1190,1186,1064,1078,969,985,844,835,716,601,350,1548,2048,1967,2048,1974,1999,1999,2048,1968,2048,2030,2046,1715,1717,1432,1698,1866,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2037,1217,965,829,775,904,1021,1094,827,866,947,836,955,847,860,800,817,1010,787,806,881,816,956,1128,1000,867,855,1025,1135,1113,1098,1014,894,616,829,1359,1256,1269,1336,736,625,625,588,540,584,985,910,919,695,776,535,714,582,681,756,1001,907,587,685,723,611,1040,861,1026,1158,746,620,684,547,549,528,697,700,951,648,723,647,929,1118,868,911,829,1035,1008,641,921,933,888,773,952,1047,946,665,956,283,625,898,985,418,549,917,712,684,560,642,717,904,825,776,639,613,579,1216,1813,1659,1515,1430,1451,1391,1487,1542,1996,1746,1770,1539,1434,1405,1382,1548,1642,2048,1591,1632,1752,1650,1634,1641,1734,1780,1808,1744,1709,1721,1330,1200,1234,1361,1604,1600,1693,1775,1788,1725,1703,1723,1748,1740,1655,1725,1660,1782,1755,1675,1747,1778,1709,1780,1734,1784,1652,1594,1626,1490,1308,1328,1309,1513,1533,1564,1640,1602,1613,1683,1492,1512,1648,1595,1633,2052,1482,1413,1502,1551,1488,1452,1552,1484,1475,1486,1611,1619,1421,1613,1679,1653,1682,1769,1748,1634,1709,1587,1570,1512,1555,1591,1597,1579,1615,1621,1587,1560,1539,1607,1592,1651,1584,1637,1541,1594,1586,1649,1613,1571,1310,1186,1491,1496,1432,1336,1488,1526,1589,1622,1471,1381,1492,1923,1546,1224,1210,1237,1247,1234,1252,1256,1238,1274,1291,1329,1519,1286,1287,1269,1298,1329,1298,1307,1214,1278,1278,1256,1256,1267,1212,1247,1272,1251,1217,1192,1185,1223,1233,1202,1236,1235,1269,1238,1243,1228,1280,1296,1315,1561,1277,1286,1292,1326,1302,1301,1266,1243,1287,1282,1227,1632,2003,1736,1793,1792,1773,1790,1781,1786,1781,1782,1761,1735,1749,1694,1733,1651,1642,1659,1563,1651,1620,1646,1604,1678,1715,1679,1722,1764,1742,1772,1741,1775,1762,1754,1710,1606,1679,1719,1651,1668,1610,1678,1750,1671,1668,1725,1748,1731,1780,1761,1741,1730,1739,1738,1750,1787,1779,1627,906,1507,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,638,628,583,607,603,566,613,634,625,587,605,976,1041,478,568,651,520,397,406,430,1486,1740,1439,946,960,1276,1334,1338,1645,1164,1177,1726,1431,1019,1207,641,366,466,455,540,472,451,368,377,339,283,283,347,1374,2017,1602,1737,1338,1742,974,1138,884,963,1203,1066,893,1232,1281,737,1089,835,925,1106,1145,1035,1297,1121,1051,811,1013,1222,1052,1259,895,971,884,1159,828,1026,1144,1180,921,1085,1034,1084,1063,1119,1076,906,1085,1066,449,311,311,764,1075,983,895,907,1671,1079,1799,1094,2037,1634,1512,1504,1601,1615,1572,1622,1634,1703,1622,1618,1665,1625,1650,1630,1654,1605,1625,1701,1735,1674,1694,1757,1789,1754,1644,1713,1775,1787,1784,1823,1902,1907,1873,1898,1886,1845,1778,1809,1809,1813,1825,1769,1813,1807,1789,1644,1526,1614,1639,1594,1516,1445,1582,1594,1655,1651,1901,1743,1417,1462,1527,1531,1456,1527,1523,1411,1464,1557,1628,1439,1498,1673,1680,1645,1759,1792,1628,1737,1631,1588,1529,1496,1586,1636,1573,1614,1603,1636,1585,1538,1558,1633,1629,1587,1635,1573,1533,1558,1618,1640,1587,1432,1157,1382,1497,1494,1377,1467,1501,1607,1604,1578,1419,1468,1686,1753,555,622,562,623,723,778,651,910,960,1029,1095,942,1222,1281,1336,1312,1330,1406,1377,1359,1406,1429,1365,1419,1550,1488,1414,1401,1426,1219,950,1053,948,1264,1321,1260,1108,1080,995,926,1054,1063,807,957,936,900,734,835,929,684,362,758,676,652,749,577,635,2048,742,735,812,928,976,1091,1071,1119,1117,1160,1042,852,802,759,1195,1299,1401,1476,1498,1488,1495,1485,1307,1567,1562,1609,1498,1559,1630,1695,1664,1609,1498,1571,1513,1561,1459,1483,1375,1279,1289,1174,1005,959,1122,1050,1095,1105,1167,1211,1204,1068,918,768,807,820,756,697,1386,1753,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2039,2057,2048,2023,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1599,1297,1276,1134,911,340,649,1004,1020,1130,1063,1068,576,1106,1547,1542,1321,1444,1308,1375,1365,1101,1128,1209,976,1695,1271,1341,1296,1172,1204,1205,1149,1236,1398,1435,1411,1296,1290,1257,1306,1463,1532,1657,1567,1588,1597,1541,1558,1579,1547,1524,1515,1476,1405,1361,1321,1515,2053,2048,2048,2048,2048,2048,2018,1960,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2057,2048,2035,2026,1991,1902,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1500,1360,1447,1387,1345,1379,1433,1454,1508,1667,1680,1534,1437,1427,1288,1549,1654,1716,1757,1631,1630,1518,1442,1581,1646,1642,1668,1657,1583,1549,1437,1581,1969,2046,2055,1971,2048,2011,2014,2048,2015,2023,2048,2003,2044,2048,2023,2048,2048,2042,2048,2048,2033,1977,1913,2048,2042,1961,1521,1579,1600,1584,1583,1611,791,240,213,220,216,210,377,219,219,247,219,312,1268,1866,1252,1252,1300,1222,1053,1177,1183,1213,1278,1177,1193,1110,1152,2019,1664,716,1348,2048,1160,635,1686,2048,888,801,2057,1591,664,1180,1000,885,893,925,991,938,905,669,979,810,717,1007,762,995,1127,885,991,902,766,1002,1026,1000,1011,1092,1015,852,1167,980,1176,1264,721,782,410,414,866,1189,929,997,554,366,338,336,435,362,432,530,547,1401,1189,839,1175,1348,1451,1530,1388,1324,1142,1213,1414,1397,1248,1227,1127,1427,1426,1428,1543,1079,1231,1170,1124,1440,1397,1468,1551,1359,1074,1159,1181,1454,1408,1509,1571,1124,1166,1104,1261,1468,1421,1515,1496,1047,1076,1140,1310,1459,1484,1505,1368,1086,1142,1256,1487,1395,1001,737,610,597,762,649,648,636,598,715,825,971,891,625,1004,834,806,741,853,868,773,728,439,734,701,822,764,778,708,750,624,807,530,758,541,474,708,636,762,720,756,675,598,596,582,618,507,582,427,599,483,492,735,493,785,708,433,754,674,909,1098,713,604,506,527,586,981,709,633,658,615,662,1091,1018,1135,960,487,814,799,645,712,541,670,827,609,573,515,816,761,747,996,982,738,835,600,849,925,855,857,907,865,873,842,858,1041,474,804,898,895,832,788,828,939,959,955,912,904,877,893,883,954,995,974,969,976,961,956,958,871,1003,847,797,805,850,897,808,808,844,729,775,848,852,859,833,824,438,875,677,661,563,1325,907,759,1043,1656,1772,1702,1870,1846,2048,2048,2057,2010,1544,1378,1874,1822,2048,1953,1824,1945,2031,1871,1815,2048,2048,2048,1865,1764,2048,1858,1780,2048,1958,1830,1640,1177,1013,443,674,1012,1963,2053,1844,1429,1290,1195,1127,1703,1989,1546,1172,1257,854,1696,1367,1567,1356,794,288,104,1229,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2050,2011,1738,1652,2048,2048,2048,2048,2048,2048,2057,1828,25,930,1990,2057,2057,2046,1790,1529,1849,2048,2029,1867,2048,2048,2048,2048,2030,1861,2048,2048,1868,2048,2053,1967,2048,2053,2037,2045,2054,1964,1610,1532,1873,1951,2048,2048,2048,2048,2048,2048,2048,1798,1014,1089,1180,1287,1240,1106,1452,1530,886,1079,1452,1080,1200,1140,970,1115,1192,1436,1899,1904,1887,1875,1917,1655,1805,1713,1685,1602,1667,1724,1020,1053,1191,1032,1098,1057,957,1161,1218,1001,1104,1153,1137,1476,1090,1562,2057,1985,2048,2033,1973,2040,1980,2056,2026,1977,2031,2040,2026,2027,1984,2048,2057,1972,2033,1992,2048,2037,1978,2048,2048,2048,2043,1972,2048,2048,1972,2057,2029,1979,2048,2030,1974,2048,2048,1986,2048,2048,1978,2054,2028,2048,2035,2057,1972,2048,2057,2046,2048,2057,2048,2048,2048,2048,2048,1901,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1895,2048,2048,2048,2048,2048,2048,2048,2048,1894,2048,2048,2048,2048,2048,2048,2013,2048,2048,2048,2048,2048,2048,2048,1898,2048,2048,2048,2048,2048,2048,1896,2048,2048,2048,2048,2048,2048,2048,2017,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,1472,1811,1598,1636,1678,1140,1228,2013,2029,2048,1960,2000,2053,2028,1973,1940,2039,2019,1942,2054,1787,1185,1708,1039,1861,1374,1884,989,1147,1089,1012,1597,1484,1486,1481,1187,627,702,682,709,707,728,661,515,532,578,547,1796,1734,1690,1696,1708,1673,1918,1748,1734,1738,841,1429,1705,1624,1506,1477,1471,567,413,327,451,425,406,425,809,1928,1708,1683,1681,1902,1765,1787,1225,1741,1530,1466,1507,1320,361,496,557,499,420,376,507,508,397,1666,1725,1686,1676,1677,1894,1739,1779,1703,1054,1760,1576,1476,1471,1495,1452,555,630,615,593,444,617,533,579,516,546,635,371,229,1646,1858,1700,1681,1669,1687,1695,1955,1826,1709,1706,1767,751,1695,1710,1627,1492,1478,1483,819,587,559,636,560,579,603,546,605,583,555,526,1945,1716,1693,1680,1686,1679,1885,1732,1701,1713,1706,746,1466,1694,1614,1486,1492,1481,995,609,518,587,476,451,535,581,579,434,359,528,1750,1689,1701,1676,1651,1664,1878,1781,1725,1641,1138,1280,1772,1623,1482,1484,835,422,445,378,476,531,462,478,1202,1726,1655,1676,1662,1843,1705,1681,1132,1563,1588,1464,1478,1461,1492,1476,1057,642,592,562,585,649,434,676,586,577,596,679,587,731,720,645,708,568,668,540,446,1467,1962,1653,1685,1700,1681,1663,1690,1718,1697,1696,2029,1648,1792,1696,1737,1836,1814,1664,638,784,1311,1756,1773,1696,1772,1499,1473,1479,1466,1388,588,427,550,530,536,635,545,602,463,504,602,442,568,466,1483,1905,1697,1691,1689,1685,1691,1684,1984,1693,1789,1764,1771,1036,649,1717,1930,1663,1662,1479,1479,1493,1470,1207,641,637,664,601,583,563,499,590,695,537,458,512,409,557,801,2025,1703,1671,1683,1704,1696,1697,1885,1806,1706,1728,1796,1783,1122,745,1937,1790,1717,1496,1490,1495,1481,1121,478,636,588,606,586,570,419,283,221,156,257,207,401,2030,1831,1713,1681,1716,1720,1734,1797,1966,1759,1739,1802,1784,1665,1146,1585,1618,1506,1473,706,668,644,660,881,1767,1673,1802,1391,1589,1511,1457,1482,836,601,606,570,516,443,482,397,542,1639,1675,1660,1666,1719,1771,1701,1583,892,1790,1602,1449,1486,1453,963,593,587,626,524,571,595,520,425,680,524,840,1943,1659,1674,1679,1679,1812,1703,1730,1777,1438,752,1927,1794,1455,1473,1439,921,557,493,409,519,460,373,308,299,479,969,1840,1667,1689,1649,1654,1845,1681,1722,1629,1158,1213,1816,1570,1453,1451,1453,465,280,399,346,434,417,372,271,366,456,272,800,1876,1636,1650,1650,1670,1781,1729,1690,1673,1165,1569,1688,1481,1491,1244,428,467,488,615,599,641,608,586,499,1859,1664,1664,1658,1694,1834,1701,1712,1449,1274,1753,1535,1482,1486,1477,1118,531,482,543,568,603,572,645,429,486,583,389,509,996,1901,1656,1673,1679,1651,1676,1785,1858,1668,1668,1754,1329,736,1975,1678,1637,1441,1486,1498,1467,1493,1488,1494,1483,1493,611,710,708,572,678,509,680,697,485,552,572,599,675,650,632,613,663,461,453,702,700,595,441,543,542,457,260,336,1344,2013,1944,1728,1727,1717,1665,1709,1681,1694,1688,1662,1679,1701,1789,2048,1754,1692,1769,1644,1642,1740,1667,1673,1724,1176,720,806,1857,1892,1645,112,1039,602,876,1681,1707,1578,1492,1504,1511,1511,1502,1491,1488,1480,1482,1479,684,748,809,526,722,696,699,693,715,596,691,693,725,654,668,648,755,629,654,493,486,549,445,213,272,450,568,361,573,253,191,323,1780,2026,1956,1684,1690,1701,1678,1669,1700,1695,1702,1649,1673,1686,1689,1681,1716,2013,1999,1762,1710,1720,1710,1726,1707,1639,1608,1649,1715,1710,1057,791,1485,1889,1838,1692,1768,1764,1512,1484,1478,1496,1155,534,576,557,511,425,527,442,472,501,350,273,609,510,1688,1791,1678,1660,1679,1682,1700,1950,1630,1709,1729,1727,837,1611,1690,1635,1399,1475,1463,1483,1507,1500,1473,1482,1108,649,577,664,572,585,655,664,661,670,531,507,755,628,622,635,721,447,616,592,670,508,409,597,558,1875,2013,1708,1681,1681,1681,1710,1690,1707,1677,1674,1708,1931,1923,1692,1643,1715,1672,1693,1687,1780,1283,872,1480,1747,1479,1640,1642,1647,1488,1465,1474,1478,1492,1336,519,518,507,573,727,580,666,548,737,636,537,418,619,727,596,376,477,2038,1830,1678,1665,1685,1697,1691,1667,1680,2004,1744,1723,1749,1766,1745,1569,1016,1771,1783,1768,1533,1492,1498,1482,1512,1474,1488,1493,1507,1506,1513,1503,1413,490,719,659,587,604,590,525,604,667,594,597,647,583,603,513,634,578,482,543,663,511,489,631,597,551,586,512,546,602,590,596,561,577,496,538,529,432,639,444,576,1882,2030,2019,1878,1701,1730,1707,1718,1719,1686,1703,1713,1719,1713,1725,1706,1703,1719,1707,1713,1704,2048,2039,1722,1747,1699,1769,1695,1697,1697,1754,1689,1765,1772,1763,1181,883,883,851,1294,1652,1669,1518,1619,1560,1583,1169,1073,925,1759,1763,1766,1549,1464,1478,1479,1490,979,658,681,592,445,433,380,405,444,327,493,526,325,1422,1889,1691,1678,1679,1684,1676,1819,1843,1692,1749,1704,1493,1075,1807,1722,1470,1467,1397,643,450,450,501,256,306,497,393,1392,1742,1662,1679,1698,1866,1713,1686,1233,1706,1542,1472,1473,1456,1483,673,571,608,616,591,573,526,606,633,281,445,450,426,414,1931,1727,1655,1673,1681,1656,1687,1837,1744,1692,1701,1693,783,484,1394,1275,1525,1628,1490,1480,992,262,290,452,271,290,456,175,949,1759,1628,1644,1759,1711,1611,1216,1312,1557,1484,1449,1152,558,517,355,533,460,402,1452,1682,1668,1691,1797,1631,1208,1632,1473,1489,1469,1469,1469,1473,1352,695,547,625,665,585,513,500,632,423,410,511,574,525,525,491,364,397,397,413,1481,1937,1673,1668,1701,1696,1693,1685,1653,1666,1778,1928,1705,1756,1700,1715,1641,1557,868,1031,1621,1560,1485,1692,1612,1469,1490,1469,1442,403,349,448,514,474,267,384,507,492,443,373,374,400,1082,1890,1646,1667,1667,1648,1667,1710,1896,1668,1677,1676,1191,633,1426,1632,1647,1484,1490,899,536,530,236,308,511,239,1325,1676,1703,1696,1885,1736,1735,1096,1772,2055,2054,2035,2051,2054,1493,1607,1497,1332,828,790,760,883,898,681,1998,2040,1975,1897,1924,1308,1108,1483,1156,1445,904,1131,1126,799,942,1133,1172,950,1087,1074,1015,1073,965,940,1126,1076,1092,968,828,973,925,964,937,827,967,954,873,1061,971,1041,973,1091,991,897,860,846,954,866,1003,1020,892,979,972,854,1034,1017,979,963,871,1110,1044,1042,1087,918,1009,1124,1175,1090,1122,1098,1141,1140,1126,1051,1168,1107,1120,1035,1061,718,936,1128,1134,1071,949,1137,1135,1143,1033,1110,1111,1003,1056,1126,1270,1117,985,1081,1140,1072,1163,1167,1076,1177,1066,1114,1216,1123,1206,1077,1162,1201,1172,1079,1101,1181,1096,1756,2048,1073,1095,1061,938,955,1039,1140,1026,1024,933,1194,903,1052,1070,939,984,965,870,746,773,865,1237,1418,1574,1307,1704,2012,2048,2057,1761,1533,2025,2048,2048,2057,1871,1905,2048,1603,1991,2048,2048,2048,2048,2048,2048,2048,2045,2033,2041,2056,2030,2036,1986,1920,1788,1636,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,1984,1938,1841,1738,1193,2026,1918,1860,1772,1951,2055,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1931,1328,1298,2050,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,1576,2048,2048,2048,2054,1804,1536,1346,1196,957,658,704,2056,2048,2056,2048,2048,2048,2048,2048,2048,2048,1755,1378,967,2048,2045,2014,1907,1849,1660,1479,1056,831,473,187,715,2005,2048,2048,2049,2048,2048,2048,2048,2048,2057,2056,2054,2055,1966,1793,1562,1467,1440,2046,2048,2048,2048,2054,2048,2048,2048,2048,2054,2057,2040,2030,1853,1637,1404,888,1425,1900,1915,2023,2048,2057,2052,1860,1639,1162,1235,2048,2049,2048,1716,2048,2048,2048,1661,221,133,131,25,1251,2057,2048,2057,2048,2048,2048,2048,2034,1914,2048,2048,2048,2029,2048,2048,2048,2048,2048,2048,2048,2057,2057,2048,1801,1646,2004,1847,1704,1630,2048,1940,1492,1277,1688,1950,2032,2057,2057,2048,2050,2020,1810,1280,172,1537,2054,2048,2057,2049,2048,2048,2057,2048,2040,2041,1986,1824,1902,1947,1540,2056,2048,2057,2056,2048,2048,2048,2048,1907,2055,2048,2048,2048,2056,2048,2056,2056,1788,1881,1968,1965,1572,1424,2054,2048,1995,1764,1860,2048,2048,2048,2048,2053,2048,2048,2048,2048,1714,1257,1799,1955,2004,2014,2056,2042,2034,2042,2048,2053,2045,2048,2003,2014,1984,1981,1989,2055,2037,2046,2050,2016,2033,2035,2044,2054,2037,2055,2027,1891,1763,1545,1390,1266,1190,1121,1235,998,1025,1104,1000,1038,892,843,892,719,667,483,444,188,156,95,59,376,2057,2025,2056,2056,2039,1868,1748,1575,1081,1137,2048,2048,2048,2048,1893,2048,2048,2048,1960,2048,2048,2048,2015,2057,2048,2054,2048,2046,2038,2048,2055,2040,2046,2052,2022,1942,1875,1795,1743,1755,1555,2045,2048,2048,2057,2048,2051,2053,1737,2054,2048,2048,2048,2055,2055,2051,2032,1960,2057,2007,1916,1413,2054,2048,2037,1465,1943,2048,2048,2048,2048,2048,2048,2050,2047,2004,1832,1740,1524,1353,1287,1122,1727,2048,2048,2048,2055,2018,1858,1626,821,382,1131,1537,1754,1912,1968,1920,1945,1994,1901,1697,1499,1330,970,544,550,1766,2040,2029,1294,814,2057,2048,2048,2048,2048,2048,2048,2048,2018,1983,2035,2002,1758,1418,867,1868,2035,1760,1406,1850,2048,2048,2048,2056,2053,2056,2048,2039,1946,1747,1760,2048,1409,843,1692,2057,2048,2048,2048,2048,2048,2023,1790,1972,2048,2056,2048,2048,2048,2048,1755,1003,1554,1943,2039,2057,2057,2014,1170,1813,1817,2052,2048,2048,2056,2056,1986,1756,1248,967,728,438,317,222,364,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2044,1336,2048,2048,2048,2048,2048,2048,2048,2049,625,498,1467,1749,2009,2054,2048,2048,2048,2048,2048,2048,2048,2048,2044,1802,1605,1447,1348,1109,1021,1070,843,739,855,985,707,1114,1783,2056,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1677,1152,683,689,1851,2057,2048,2057,2048,1211,2045,1923,1727,1149,944,592,636,1485,2057,1725,914,888,1856,1937,2030,2050,2056,2056,2052,2047,1933,1552,1736,1932,1884,2029,2056,2055,2048,2048,2048,2048,2057,2056,1964,1721,1325,550,945,1861,2048,2048,2048,2048,2048,2048,2048,2048,2044,1931,1687,1376,904,883,215,914,2048,2026,1936,1898,1723,1739,1878,2048,1977,1681,1466,1543,1686,1835,2045,2048,1920,1848,1220,1977,1811,1754,2006,2040,1677,1853,1316,1356,1142,1855,1956,2033,2023,1951,2010,1882,2044,2056,2052,2010,1463,830,1736,2048,2048,2048,2048,2048,672,1656,2054,2048,2048,2048,1113,579,2044,2048,2034,2048,2057,2048,2048,1928,2048,1923,1637,2048,1901,1948,2048,1945,1785,2033,1976,1308,1256,2048,1121,1124,2048,2048,2055,2023,796,104,398,1682,2056,2056,2057,2048,2048,2057,2033,1979,2048,2048,1904,2057,1974,2048,2048,2015,2048,2029,2048,1854,2056,1640,2009,1423,1875,1416,1416,1658,1713,1453,1303,1496,2048,1908,1696,2048,2048,2057,2048,1932,1214,942,648,1902,1675,1430,2044,2043,2057,2048,2048,2048,2048,2048,2048,2048,2048,2045,1915,1714,1523,1332,1080,812,1761,2048,2048,2048,2048,2048,1019,1178,2042,2052,2056,1933,1931,2050,2054,2048,2048,2048,2056,2054,2044,1912,1704,1277,436,1590,2048,2048,2048,2048,878,156,1551,2054,2048,2048,2048,2053,2055,2048,2048,1764,1144,249,769,1583,2023,2048,2048,2048,2048,2048,2056,2056,2056,2057,2057,1983,1837,1791,1777,1667,1498,1366,1226,1235,1206,948,741,535,562,467,452,462,392,393,452,445,548,528,428,158,503,1098,1187,1192,1228,1097,1000,960,821,623,429,231,100,367,1295,1689,1955,2056,2048,2051,2025,1953,1928,1857,1934,1856,1971,1976,1451,1815,2052,2051,2052,2000,2035,2046,2029,2036,2019,1958,2056,1953,1914,2030,2048,2048,1991,1667,1925,1940,1734,1986,2045,1500,1382,1808,2053,2048,1955,1890,1954,1794,1982,1868,2048,2056,2048,1998,1900,2048,1970,1458,1595,1523,1332,928,413,559,359,609,635,795,1258,1607,1391,1403,1287,1342,1491,1685,1777,1808,1810,1946,2036,2015,2054,2048,2056,2053,2048,2055,2056,2056,2046,1970,1965,1988,1994,1846,1721,1721,1730,1684,1638,1523,1436,1466,1445,1410,1314,1190,1215,1206,1148,1109,1006,940,981,1067,1539,1400,1512,1544,1407,1489,1558,1557,1432,1629,1430,1553,1679,1669,1540,1676,1506,1468,1699,1653,1820,1717,1771,1817,1838,1869,1901,1908,1973,1949,2008,2048,2056,2048,2048,2048,2055,2045,2009,1859,1715,1521,932,1628,1808,2047,2053,2055,2048,926,100,1592,2048,2048,1947,1498,1994,1168,2048,2048,1387,1770,2057,2048,2048,2048,1569,2056,1918,1419,1498,2048,2048,2048,2057,2056,2048,1934,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2042,2031,2048,2057,2048,2048,2048,1936,1967,2027,2048,2048,2056,2051,2056,2048,2048,2048,2048,2052,1522,1598,2052,2048,2057,2048,2056,2049,2057,1868,1961,1729,1523,1604,1453,1763,1778,1559,1399,1329,1104,825,229,2040,2048,2048,2048,2053,1928,1522,792,306,1294,2048,2048,1815,1545,1481,1840,1852,556,198,985,706,357,460,357,340,392,344,234,514,699,875,837,570,605,565,440,513,625,356,776,641,398,636,732,910,786,347,453,390,385,593,1143,572,398,302,482,1011,673,670,480,792,805,768,1199,1104,1131,1220,394,558,322,196,314,440,261,620,666,373,208,292,294,208,181,385,184,171,204,339,245,293,284,205,46,210,194,197,514,730,364,494,345,911,843,621,831,946,1030,638,481,699,136,623,204,447,161,400,369,462,446,539,534,764,907,1228,786,659,727,734,445,424,614,364,1357,1679,1432,1098,1411,1475,1411,1595,644,986,963,908,938,953,736,953,860,840,658,862,300,755,368,496,739,363,622,827,461,531,625,456,557,623,1098,1215,1034,855,959,1209,1057,833,1565,1506,931,953,1102,983,1254,1347,1127,870,1159,994,966,896,942,967,678,1262,1074,455,568,236,354,423,139,209,81,324,313,626,406,592,322,571,799,716,891,795,680,1001,987,1380,1167,1003,1272,927,1310,728,312,385,1152,912,859,843,710,371,310,559,707,543,1001,1389,694,352,745,227,820,531,414,247,541,441,401,438,585,304,715,326,273,737,764,615,613,1223,786,327,710,594,581,553,439,413,548,340,335,525,609,914,735,1243,668,914,828,730,112,304,263,423,811,483,655,478,530,384,491,278,276,271,259,512,202,285,196,328,208,324,186,242,230,324,117,110,219,107,115,126,107,115,230,91,493,285,260,442,830,825,802,737,810,726,883,753,423,456,869,1148,1445,1125,1335,1118,1470,1546,1522,1423,1254,1194,776,1014,1066,1408,1664,1690,1239,1584,1530,798,746,633,643,348,298,730,522,931,716,421,421,605,366,350,355,532,226,298,448,498,286,271,311,173,226,235,145,413,359,796,1363,650,409,434,364,427,821,405,534,285,549,261,522,749,1081,757,700,661,482,469,657,721,205,602,580,540,674,810,428,462,380,456,435,428,430,38,37,38,161,202,317,240,138,192,209,182,169,352,317,328,306,289,184,81,1172,1396,1067,1326,1298,1141,791,1098,656,450,571,1038,1281,633,1587,1590,1420,1447,1579,1465,1546,1457,1357,1581,1469,1492,1502,1400,1543,1535,1479,1448,1474,1471,1345,1376,1393,1540,1555,1582,1439,1588,1664,1537,1714,1650,1681,1754,1203,1104,1026,1031,1183,1451,1879,1722,1775,1705,1684,1703,1762,1687,1747,1722,1710,1734,1762,1771,1748,1729,1553,1683,1648,1629,1711,1714,1712,1721,1707,1677,1663,1656,1677,1629,1567,1644,1590,1911,1620,1714,1635,1649,1655,1675,1747,1759,1830,1793,1819,1843,1825,1751,1688,1694,1755,1800,1827,1778,1737,1640,1828,1807,1663,1814,1754,1723,1710,1628,1648,1563,1861,1555,1678,1612,1575,1634,1610,1691,1657,1694,1661,1711,1722,1674,1735,1766,1715,1640,1773,1706,1722,1715,1643,1635,1708,1656,1662,1614,1624,1591,1541,1470,1517,1720,1333,1177,941,810,507,1155,1381,1410,1462,1247,1027,1223,1228,1224,1399,1331,1302,1297,1256,1257,1094,949,829,840,887,919,660,682,952,1081,995,1187,1198,1828,1428,1448,1369,1383,1592,1382,1496,1480,1592,1387,1335,1224,1308,283,212,383,221,230,680,1044,1402,1214,901,1266,1341,1132,1589,1682,1122,1301,1623,1229,862,1345,1288,1646,1195,1625,1483,1603,1628,1623,1385,1249,1600,1340,1747,1238,1480,1793,1202,1729,1596,1337,1476,1297,1444,1475,1570,1749,1257,1161,1689,1702,1315,1700,1268,1412,1465,1605,1627,1399,1443,1580,1394,1770,1340,1606,1512,1280,1506,1521,1367,1444,1309,1604,1506,1702,1435,1609,1701,1031,1557,1451,1634,1025,1496,1618,1641,1397,1542,1459,1267,1722,1514,1194,1320,1507,1463,1187,1508,1451,1412,1301,1669,1590,1686,1622,1316,1166,1351,1576,1358,1460,1560,1741,1324,1422,1518,1681,1444,1620,1754,1628,1677,1751,1522,1674,1183,1862,1522,1385,1597,1623,1415,1544,1606,1561,1431,1590,1715,1535,1174,1719,1743,1359,1437,1512,1855,1858,1369,1830,1246,1744,1808,1484,1646,1902,1829,1895,2043,2048,2025,2039,2032,2029,2023,2025,2024,2027,2054,2045,2048,2047,2020,1998,1839,2014,2013,2036,2043,2047,2046,2037,2041,2024,2028,2012,2042,2038,2051,2043,2036,2036,2026,2007,2020,1944,1977,2046,2056,2054,2021,2032,2051,2020,2003,1990,2003,1997,1985,2008,2004,2018,2032,2038,2032,2002,2028,2000,1986,1992,2008,2007,2007,2045,2028,2038,2015,1989,1991,1986,1981,2009,2000,2048,2048,2032,2031,2009,1983,2045,2012,1999,2048,2031,2046,2053,2042,2036,2039,2048,2029,2048,1990,2024,2027,2037,1970,1992,1999,1953,2014,1963,2012,1971,1927,1976,1963,1976,1982,2003,1957,1985,1988,1987,1958,1990,1972,1998,1978,1976,1966,1982,1971,2020,1958,1965,1979,1992,1985,1989,1962,1972,1988,2006,1986,2000,1970,2008,1992,1977,1989,1902,1972,1993,1990,1965,2006,1975,1997,1947,1981,1955,1986,1989,1996,2010,1974,1993,2004,2015,1999,2003,1997,1971,1944,2013,2004,2000,1937,1936,2040,2037,1930,2019,2031,2028,1949,2015,2014,2007,1970,2030,1986,2033,2046,2028,1994,2033,2027,2020,1995,1981,2001,2025,2016,2004,1913,1864,2041,2051,2027,2001,1928,1912,1961,1871,1742,1967,1896,1845,1801,1883,1927,1973,2002,1953,1846,1892,1964,1746,1903,1935,1956,1915,2007,1894,1935,1903,1902,1907,1856,1964,1994,1918,1938,1906,1920,1854,1853,1866,1884,1983,1989,1905,2009,2031,1805,1918,1777,2016,1808,1958,1953,1964,1912,2023,1993,1870,1873,1776,1937,1962,1896,1981,1900,1929,1931,1964,1945,1837,1985,1997,1841,1826,1800,1764,1762,1874,1891,1924,1771,1928,1835,1869,1999,1910,1936,1928,1876,1909,1859,1934,1889,1931,1863,1972,1961,1891,1957,1856,1985,1906,1864,1923,1838,1845,1886,1856,1911,1836,1843,1581,1720,1447,1685,1897,1646,1961,1965,1936,1981,2018,1964,1967,1943,1958,2004,1968,1954,1988,1584,1394,1333,1422,1411,1488,1526,1398,1591,1523,1478,1601,1610,1728,1604,1610,1987,2001,1947,1979,1946,1992,1828,1908,1969,1998,2003,1892,2019,1923,1896,1880,1845,1986,2032,2008,1915,1998,1945,1859,1916,1884,1971,2003,1990,1965,2018,1947,1839,1910,1903,1964,1984,1952,1954,1913,1894,1837,1892,1909,1964,2006,1925,1968,1933,1971,1788,1925,1940,1997,1998,1956,1980,1968,1926,1872,1894,1954,1959,1931,1960,1890,1974,1941,1905,1932,1825,1751,1690,1646,1666,1728,1713,1742,1705,1692,1702,1651,1739,1724,1719,1720,1671,1671,1674,1701,1733,1749,1651,1606,1680,1718,1697,1725,1754,1620,1584,1642,1680,1757,1673,1670,1660,1604,1637,1737,1717,1765,1658,1673,1674,1659,1775,1775,1733,1611,1628,1755,1797,1867,1792,1743,1759,1758,1875,1835,1855,1819,1812,1812,1792,1721,1870,1640,1686,1636,1755,1780,1621,1578,1706,1777,1667,1654,1822,1600,1713,1784,1690,1516,1743,1727,1661,1688,1781,1793,1722,1683,1805,1811,1710,1688,1736,1733,1731,1802,1767,1780,1970,1904,2009,1965,1978,1934,1939,1941,1908,1981,1979,1965,2004,1997,1979,1997,2015,1989,1958,1964,1973,1967,2008,2007,1994,1965,1963,1980,1959,1979,2024,1993,2004,1954,1987,1978,1971,1971,1971,1975,1966,1964,1987,1960,1972,1981,1951,1976,1954,1948,1970,1958,1975,1960,1975,1953,1983,1948,1976,1941,1989,1918,1992,1914,1996,1927,1984,1932,1983,1927,1979,1931,1979,1933,1974,1933,1929,1899,1914,1929,1901,1897,1915,1912,1910,1937,1884,1913,1910,1893,1922,1906,1903,1856,1956,1883,1831,1931,1879,1823,1930,1898,1825,1931,1898,1830,1926,1904,1824,1927,1905,1833,1904,1916,1834,1894,1926,1816,1874,1895,1743,1876,1891,1761,1880,1869,1791,1885,1834,1801,1894,1812,1832,1887,1818,1821,1885,1789,1830,1897,1789,1873,1908,1808,1893,1858,1860,1911,1828,1854,1914,1806,1881,1865,1839,1914,1836,1843,1910,1814,1891,1882,1891,1845,1874,1886,1846,1882,1886,1844,1881,1890,1840,1878,1893,1844,1877,1897,1842,1874,1904,1843,1869,1907,1841,1863,1908,1869,1872,1876,1879,1876,1859,1882,1889,1850,1894,1902,1839,1888,1906,1832,1895,1913,1828,1903,1908,1833,1916,1906,1870,1924,1918,1913,1924,1937,1916,1909,1914,1903,1921,1919,1917,1912,1950,1913,1913,1916,1955,2003,1989,1988,1967,1999,1985,1985,1983,1998,1979,1966,1899,1977,1866,1949,1870,1993,1842,1946,1858,1885,1954,1912,1915,1982,1926,1989,1927,1983,1937,1966,1938,1967,1947,1960,1968,1981,1958,1962,1902,1889,1894,1940,1846,1979,1828,1976,1851,1931,1894,1886,1898,1887,1947,1840,1980,1748,1923,1819,1874,1846,1846,1891,1805,1930,1792,1890,1864,1839,1862,1812,1912,1792,1928,1869,2052,2050,2028,1998,2021,2018,2023,2014,2038,2015,2041,2029,2027,2039,2021,1976,1968,1962,2024,2049,2048,2049,2015,2045,2033,2003,2007,2023,2027,2054,2023,2054,2050,2046,2028,1987,1957,2017,2023,2009,2015,2030,2049,1976,1993,2018,1982,1956,1980,2016,2040,2029,2014,2012,1988,2023,1999,1997,1968,1997,2006,2032,2034,2029,2006,2007,2021,1985,1985,1997,1975,1991,2041,2037,2030,2038,2030,2041,1987,2014,2010,1992,1993,2025,2027,2055,2043,2056,2043,2033,2003,2015,2041,2021,2052,2054,2021,2030,2011,2010,1983,1988,2007,1978,2001,1986,1959,1978,1990,1914,1982,1959,1973,1981,1983,2010,1971,1949,2006,1960,1892,1804,1962,2017,2011,1991,2008,1958,1963,1987,2002,1994,1976,1880,1905,1900,1960,1979,1902,1920,1945,1946,1962,1886,1849,1949,2007,1980,1846,1911,1922,1954,1922,1842,1894,1884,1862,1951,1960,1937,1960,1911,1847,1911,1844,1906,1950,1926,1995,1928,1867,1833,1870,1907,1966,1986,1905,1803,1916,1855,1935,1956,1940,1881,1869,1817,1660,1935,1892,1880,1923,1859,1874,1883,1900,1854,1897,1915,1836,1869,1810,1793,1905,1991,1949,1927,1889,1877,1824,1859,1842,1830,1918,1951,1949,1978,1915,1872,1848,1888,1996,1923,2035,2025,2006,1878,1988,2015,2007,2005,1969,1962,1971,2037,1979,1998,1723,1980,2001,2049,1951,1776,2002,2008,2025,1962,1805,2012,2011,2024,2005,1983,1797,1953,2015,2025,2007,2012,2023,2042,1999,2005,2011,1930,2015,2000,1985,1964,2018,2035,1968,1864,1749,1849,1938,1997,1991,1978,2016,1956,1982,1941,1964,1960,1957,1885,1968,1943,1968,1949,1983,1997,2020,1979,1981,1954,1957,1974,2011,1944,1831,1959,1937,1993,1854,1913,1957,1929,1884,1958,1998,1999,1971,1985,1994,2033,1999,1992,1918,1885,1955,1910,1951,1890,1981,1945,1918,1961,1974,2013,1992,1996,1968,1974,1983,2003,1990,1991,1975,1930,1973,1946,1959,1942,1956,1993,1957,1996,2034,1990,1999,1993,1951,2023,1949,1947,1975,1984,1931,2031,1897,1960,1991,1997,1979,1943,1968,2001,2003,2016,1883,1991,1957,2035,1935,2019,1964,1989,2026,1965,1989,2024,1968,2006,2005,1940,2044,1933,1956,1999,1924,2029,1999,1954,1910,1984,1940,1982,1914,1960,1971,1959,1942,1966,1983,2018,1932,1977,1928,1989,1932,1951,1954,1950,1885,1857,1910,2000,1930,1906,1949,1857,1942,1947,1938,1944,2008,1959,1953,2015,1970,1970,2017,1890,1982,1940,2000,2033,1986,2026,2026,2036,1884,2017,1978,2028,2048,2041,2029,2035,2008,1961,2012,1967,2032,2031,2029,2015,1985,2033,2006,2039,2008,2041,2040,2017,2048,2039,2015,1958,2018,1966,2032,2036,2032,2050,2048,2026,1971,2027,1977,2044,2024,2040,2037,2036,2021,1947,1939,1934,1819,1959,1993,1982,1992,2026,2007,2007,2026,1840,2007,1975,1974,1965,2008,2009,1921,2014,1918,1965,1979,2011,2008,1913,2007,1919,1950,1865,1805,1587,1725,1506,1553,1679,1455,1482,1593,1380,1509,1340,1473,1387,1087,1616,1134,1424,1210,1590,1046,1325,1298,975,1240,1454,1430,1096,1358,1528,899,1085,1381,1235,1305,1427,1156,1399,1138,1580,1174,1354,1478,1429,1424,1391,1557,1445,1594,1509,1329,1428,1503,1396,1244,1600,1245,1392,1092,1627,1180,1474,1310,866,1619,1355,1339,1153,1241,1622,946,1084,1404,1293,1469,1192,1262,1310,1157,1661,1269,1454,1509,1257,1644,1393,1501,1530,1424,1622,1276,1479,1548,1221,1515,1300,1346,1327,1138,1622,1229,1434,1263,863,1622,1414,1312,1203,1229,1600,860,1168,1422,1232,1500,1110,1307,1320,1172,1634,1304,1484,1479,1237,1661,1358,1519,1560,1344,1573,1317,1506,1486,1113,1588,1223,1439,1318,1317,1501,1127,1461,1204,873,1592,1388,1160,1229,1306,1472,886,1257,1367,1100,1560,1121,1392,1137,1649,1098,1317,1461,1451,1377,1498,1583,1433,1570,1379,1447,1376,1484,1489,1206,1622,1180,1421,1145,1576,1170,1484,1323,945,1400,1369,1437,1089,1347,1558,1049,1040,1347,1344,1276,1416,1183,1311,1143,1645,1205,1520,1506,1289,1610,1313,1507,1533,1420,1659,1241,1468,1500,1370,1457,1372,1344,1347,1148,1573,1186,1452,1232,857,1589,1356,1338,1168,1287,1604,820,1248,1447,1192,1487,1149,1345,1315,1175,1648,1285,1519,1520,1273,1626,1363,1579,1591,1383,1589,1355,1552,1541,1244,1359,1424,1290,1298,1145,1578,1191,1427,1299,834,1577,1352,1322,1155,1236,1585,833,1223,1409,1184,1423,1112,1307,1345,1248,1602,1121,1490,1550,1386,1604,1412,1564,1554,1463,1593,1358,1549,1572,1258,1250,1582,1284,1304,1145,1596,1179,1402,1297,928,1348,1423,1426,1071,1370,1552,925,1075,1363,1268,1124,1481,1151,1397,1199,1708,1105,1357,1553,1456,1397,1579,1540,1432,1559,1473,1544,1353,1514,1468,1153,1683,1176,1443,1180,1606,1194,1375,1394,988,1270,1398,1443,1120,1292,1276,1441,909,1340,1445,1202,1621,1071,1388,1204,1658,1241,1382,1449,1408,1386,1539,1586,1491,1578,1533,1483,1427,1550,1446,1161,1685,1223,1443,1180,1589,1218,1380,1398,1006,1184,1436,1424,1130,1293,1167,1633,805,1285,1498,1330,1638,1085,1368,1322,1446,1466,1334,1520,1551,1244,1696,1618,1607,1621,1413,1737,1195,1251,1290,1339,1319,1808,1514,1446,1177,1247,1591,1491,1478,1806,1408,1320,1256,1558,1421,1456,1828,1450,1438,1290,1298,1485,1387,1397,1840,1421,1605,1386,1257,1471,1241,1268,1410,1762,1091,1245,1283,1419,1648,1332,1371,1424,1583,1385,1694,1717,1749,1918,1593,1964,1889,1796,1753,1858,1824,1775,1914,1401,1481,1685,1679,1767,1665,1672,1599,1592,753,1747,1994,1965,1770,1569,756,1805,1850,1801,1847,1813,1747,1865,1308,1635,1879,1546,1919,1875,1882,1834,1659,1777,1845,1947,1994,1609,1961,1891,1909,1894,1884,1749,1530,1855,1841,1883,1866,1774,1635,1776,1528,1815,1636,1674,1655,1575,1572,1357,1719,1934,2026,2006,1950,1945,2020,2032,1972,1957,2038,2029,1979,1956,2044,2038,1939,2013,1917,1945,1984,1989,1980,1993,1997,2029,2014,2003,2011,2026,2027,2012,1921,1867,2044,2054,2028,1950,1986,1915,1909,1954,1894,1915,1962,1871,1950,1888,1901,1922,1847,1935,1929,1860,1932,1975,1879,1881,1928,1908,1881,1332,1896,1879,1748,1422,1397,1249,1765,1634,1658,1613,1851,1492,1613,1572,1584,1470,1567,1686,1692,1459,1164,1458,1698,1448,1190,1685,1900,1803,1730,1773,1798,1587,1937,1855,1700,1671,1692,1736,1570,1736,1748,1512,1493,1491,1825,1274,1342,1279,1550,1636,1513,1155,1151,1617,1645,1521,1387,2013,1962,1974,1998,1960,1859,1773,1722,1856,1893,1849,1568,1887,2012,1817,1886,1910,1832,1782,1702,1847,1766,1426,1479,1767,1402,1385,1679,1526,1448,1717,1507,1781,1471,1626,1632,1830,1471,1804,1558,1678,1438,1677,1769,1490,1762,1285,1633,1380,1834,1916,1792,1734,1361,1354,1737,1690,1620,1478,1581,1712,1619,1509,1661,1545,1694,1620,1263,1603,1473,1608,1690,1241,1626,1456,1700,1661,1348,1495,1587,1571,1157,1220,1399,1172,1467,1246,1575,1119,1372,1439,1309,1513,1266,1300,1515,1451,1501,1687,1937,1446,1741,1797,1869,1865,1950,1548,1943,1526,1520,1925,1621,1929,1230,1908,1818,1481,1688,1704,1761,1561,1482,1602,1575,1532,1602,1368,1613,1485,1544,1540,1530,1517,1544,1514,1523,1547,1625,1829,1682,1950,1753,1850,1566,1566,1457,1685,1590,2008,1842,1872,1851,1845,1992,1872,1897,532,638,425,550,803,635,653,573,934,2032,1966,1989,1934,1946,1959,1972,1958,1892,1643,1638,1636,1759,1547,1589,1772,1553,1703,1574,1734,1428,1498,1463,1561,1352,1443,1451,1638,1379,1278,1171,1489,1379,1576,1458,1321,1520,1460,1450,1585,1415,1370,1399,1398,1431,1385,1384,1668,1751,1786,1836,1888,1879,1898,1749,1717,1794,1639,1742,1789,1822,1777,1739,1686,1667,845,819,829,768,1765,1722,1632,1631,1707,1588,1659,1652,1660,1752,1662,1741,1653,1729,1778,1806,1918,1328,1792,1562,1806,1113,1801,1567,1895,1787,1849,1766,1849,1843,1773,1846,1861,1479,1052,1070,1019,1082,1074,1062,1030,1351,1525,1555,1534,1587,1556,1552,1564,1531,1640,1449,1613,1586,1668,1080,1032,1052,1066,1470,1422,1715,1815,1543,1288,1137,1531,1419,1073,1408,1569,1423,1503,1618,1601,1547,1607,1607,1398,1346,790,1019,760,658,950,696,1316,1386,1437,497,553,764,545,860,544,856,715,882,515,509,926,654,862,529,861,692,658,704,542,917,730,936,468,705,649,698,620,300,631,208,553,263,255,421,203,654,186,538,195,477,108,38,599,178,630,213,809,1447,1422,1261,1227,1227,1213,1267,987,1021,981,967,983,981,990,1273,1347,1375,1392,1477,1478,1421,1411,1407,1600,1457,1487,1515,1600,1622,1478,1527,1583,1460,1401,1427,1429,1406,1383,1494,1413,1344,1418,1398,1346,1418,932,931,942,916,1113,957,940,960,1058,884,970,888,1223,1371,1432,1340,1435,948,908,940,944,1651,1590,1631,1579,1544,1524,1528,1596,1700,1371,1381,1350,1345,1217,1310,1328,1322,1617,1553,1556,1243,1535,1452,1269,1433,1551,1556,1630,1578,1611,1679,1719,1727,1723,1573,1217,1388,1363,1423,1425,1185,1412,1419,1387,1590,1438,1616,1420,1675,1624,1670,1637,1649,1629,1652,1666,1627,1731,1663,1641,1651,1497,1626,1634,1616,1674,1596,1685,1625,1659,1560,1645,1663,1575,1666,1670,1689,1680,1563,1642,1684,1632,1604,1740,1619,1622,1618,1845,1649,1628,1633,1699,1827,1681,1673,1656,1813,1626,1676,1649,1710,935,973,953,950,1587,1487,1548,1475,1591,1242,1245,1344,1407,1135,1142,1267,1304,1336,1006,890,1074,1391,1186,1099,1085,1262,1101,884,990,1100,1570,1502,1532,1545,1523,1522,1517,1518,1664,1401,1391,1370,1394,1384,1371,1370,1425,1682,1501,1560,1547,1599,1566,1546,1546,1744,1583,1605,1656,1643,1599,1629,1619,1650,1694,1455,1405,1408,1440,1470,1412,1361,1706,1772,1738,1704,1697,1726,1722,1724,1709,1858,1749,1696,1645,1729,1714,1690,1678,1840,1060,902,1311,1062,1097,1042,1250,1106,1058,1065,943,660,628,747,747,1864,1642,1718,1681,1721,1670,1721,1690,1853,1778,1728,1677,1636,1707,1680,1743,1713,1893,1736,1775,1745,1788,1717,1768,1749,1872,1764,1718,1659,1641,1693,1656,1724,1661,1608,1476,1427,1418,1566,986,1001,998,1390,1812,1776,1825,1853,1661,1826,1788,1854,1725,1227,1186,1232,1716,1248,998,1065,1534,1692,1627,1596,1613,1498,1641,1586,1604,1651,1515,1439,1433,1331,1570,1441,1441,1384,1548,1644,1429,1654,1262,1485,1458,1518,1439,1669,1634,1594,1653,1619,1611,1593,1701,1560,1483,1439,1437,1389,1459,1416,1404,1600,1796,1789,1843,1881,1697,1815,1819,1862,1672,1635,1653,1628,1559,1671,1654,1614,1714,1599,1470,1453,1511,1437,1484,1431,1464,1595,1835,1833,1859,1711,1873,1799,1863,1801,1746,1650,1596,1625,1512,1646,1616,1605,1678,1546,1466,1443,1389,1508,1481,1456,1450,1726,1798,1824,1871,1675,1858,1823,1845,1781,978,1412,1295,693,977,835,700,1169,684,789,1736,679,686,694,1327,1247,987,1250,1345,1084,870,1274,1106,1272,1323,1404,1752,1460,1012,1018,1785,1557,1687,1649,1685,1629,1515,1728,1629,1191,1330,1323,1190,1608,1330,1007,1005,1014,1343,1109,1123,1111,1100,1464,2042,2038,2001,2000,2026,2007,2011,1979,2032,2038,2041,2006,2004,2014,2009,1959,1995,2021,2039,2002,2002,2022,1982,2009,1956,2031,2023,2045,1996,1979,2016,2006,1966,2014,2050,1888,1919,1893,1898,1910,1863,1856,1887,1875,1902,1886,1862,1859,1835,1828,1895,1896,1668,1680,1663,1672,1677,1649,1639,1637,1799,1655,1650,1661,1637,1667,1634,1606,1747,1434,1442,1442,1403,1457,1430,1402,1366,1610,1420,1460,1610,1401,1467,1496,1620,1542,1335,1575,1544,1606,1418,1606,1476,1686,1311,1402,1396,1727,1839,1576,1565,1672,1564,1573,1507,1694,1676,1535,1571,1669,1711,1717,1552,1593,1651,1534,1531,1560,1578,1543,1530,1563,1517,1520,1502,1527,1743,1529,1672,1692,1635,1574,1735,1862,1552,1509,1865,1931,1759,1703,1731,1953,1932,1934,1970,1937,1953,1912,1918,1893,1807,1842,1892,1996,1864,1870,1869,1826,1779,1766,1777,1795,2019,1986,1981,1955,1925,1903,1928,1912,2015,1854,1893,1884,1833,1802,1817,1797,1817,2025,1989,1992,1973,1944,1934,1955,1920,2021,1815,1813,1792,1747,1779,1786,1729,1784,1941,1852,1806,1800,1838,1832,1825,1808,1820,1491,1433,1462,1451,1422,1453,1398,1394,1796,1977,1950,2013,1941,1947,1875,1942,1910,1904,1867,1939,1974,1953,1947,1927,1923,1905,1928,1901,1977,1555,1507,1572,1602,1586,1637,1533,1493,1936,1801,1804,1759,1775,1707,1738,1716,1853,1324,1338,1279,1322,1389,1299,1353,1374,1614,1493,1449,1528,1575,1535,1482,1456,1504,1665,1622,1588,1622,1662,1516,1669,1381,1336,1330,1308,1250,1214,1190,1326,1877,1896,1866,1893,1890,1880,1860,1880,1962,1897,1867,1850,1880,1893,1903,1876,1855,1796,1390,1430,1350,1407,1472,1470,1457,1542,1723,1685,1697,1731,1642,1620,1585,1542,1214,1534,1561,1604,1633,1757,1693,1692,1707,1587,1447,1478,1502,1421,1327,1409,1418,1681,1477,1511,1509,1469,1546,1507,1523,1448,1674,1490,1533,1478,897,1477,1535,1514,1714,1976,1922,1964,1463,1416,1401,1402,1174,1420,1404,1408,1517,1168,1160,1086,963,1136,1133,1121,1250,1516,1415,1497,2042,1889,1903,1893,1903,1897,1905,1883,1635,1676,1448,1481,1463,1182,941,837,860,891,818,889,800,863,962,927,812,901,987,985,971,1185,1332,1268,1289,1323,439,494,632,626,237,438,167,1004,1353,702,1006,743,1325,1050,960,1335,404,262,443,383,599,1322,1506,1481,1875,1835,1767,1819,1824,1821,1779,1752,1815,1620,1655,1642,1532,1627,1608,1630,1547,1637,1311,1326,1356,1334,1709,1674,1685,1683,1664,1660,1672,1651,1642,1690,1682,1659,1371,1841,1832,1839,1761,1792,1833,1858,1771,1840,1492,1435,1476,1445,1753,1900,1832,1859,1850,1853,1859,1879,1862,1831,1555,1818,999,1063,1175,1160,1481,2002,2004,1950,1960,1954,1958,1878,1889,1903,1963,1938,1929,1935,1927,1905,1948,2014,1675,1679,1756,1828,1821,1760,1652,1612,2006,2048,2047,2034,2048,2035,2048,2056,2056,2056,2051,2052,2047,2042,2055,2032,2052,2019,1875,1913,1821,1851,1847,1851,1841,1911,1908,1909,1866,1863,1850,1853,1841,1864,1777,1338,1307,741,803,790,582,578,748,846,860,506,504,778,849,910,533,390,811,850,872,525,428,803,881,802,430,848,1157,1027,951,393,1058,1140,1083,725,439,1157,1130,1205,510,622,1199,1031,1195,706,1302,1418,1562,1422,1902,1051,1048,1113,1167,1117,1128,1026,1145,1092,1175,1088,1181,1149,1076,1069,1122,1514,1089,1092,1112,1136,1077,1058,1091,1022,974,969,939,1075,1048,797,816,882,1230,820,477,557,521,540,558,494,561,535,499,500,478,506,523,524,580,790,1494,1447,1490,1513,1508,1512,1527,1501,1411,1042,995,1123,1635,1483,1439,1366,1296,1423,1509,1792,1638,1690,1653,1594,1628,1654,1654,1794,1501,1464,1493,1523,1457,1549,1499,1477,1408,1079,1175,1265,1362,1293,1315,1253,1228,1368,1440,1406,1430,1554,1572,1500,1570,1840,1055,1055,1127,1159,1127,1153,1045,1116,1072,1157,1125,1162,1141,1108,1035,1106,1574,1013,1091,1125,1167,1041,1039,1144,1030,1016,970,946,1038,1032,813,777,859,1302,704,488,558,508,545,536,521,566,485,513,504,479,511,517,517,559,904,1758,1844,1797,1756,1815,1772,1789,1504,1402,1420,1414,1390,1590,1188,1183,1276,1608,1364,1297,1322,1598,1071,1019,1044,1042,1628,1706,1586,1634,1597,1307,1169,1085,1313,1419,1568,1662,1683,1561,1707,1681,1590,1650,1594,1547,1137,1552,1003,1642,1789,1844,1867,1792,1612,1688,1710,1761,1613,1747,1844,1597,1548,1481,1571,1547,1521,1580,1557,1336,1634,1621,1613,1603,1560,1585,1564,1625,1693,1588,1781,1728,1357,1561,1784,1736,1516,1481,997,1171,1147,1124,1170,1101,1092,1101,1148,1131,1174,1162,1115,1095,1057,1091,1003,1190,1167,1183,395,969,1247,1091,947,1020,1177,1143,1158,452,924,1247,1146,966,996,1114,1201,1122,650,844,1195,1121,986,1019,1060,1241,1161,796,732,1128,1159,1080,957,971,1246,1095,932,614,1093,1240,1121,1403,1009,1088,1120,1147,1054,1059,1137,1021,1038,950,947,1046,1054,817,768,879,1260,852,1158,1133,1012,405,1214,1197,1159,919,1115,1131,1169,1186,1299,1118,1149,1241,1101,1305,1162,1160,1216,1146,1272,1110,1170,1213,1172,1337,1093,972,1060,1289,1231,1070,1015,1087,1270,1248,1077,945,1118,1300,1150,1056,995,1128,1508,429,524,663,1420,1622,1799,1849,1870,1804,1516,1093,506,520,511,543,529,1235,1212,1037,1344,1494,1075,1229,1493,1230,1030,1318,1523,1090,1219,1636,1776,1837,1727,1851,1749,1785,1891,1755,1732,1884,1732,1846,1790,1754,1894,1709,1830,1756,1902,1736,1850,1759,1739,1904,1669,1821,1894,1739,1764,1813,1831,1717,1853,1820,1728,1896,1722,1755,1890,1804,1765,1804,1756,1852,1831,1826,1674,1905,1736,1833,1786,1749,1887,1709,1833,1845,1791,1750,1819,1850,1706,1784,1877,1708,1910,1738,1766,1898,1737,1732,1817,1880,1734,1810,1824,1679,1994,1045,1249,1107,1301,1305,1130,1272,1060,685,745,832,903,479,508,790,817,919,577,340,817,866,848,528,446,776,906,787,1055,1091,1037,1138,1165,1115,1165,1046,1135,1066,1147,1081,1196,1166,1072,1053,1117,1426,1457,1561,1239,1114,1069,1202,1078,1061,1110,1037,1016,980,909,1055,1030,817,768,841,1046,1408,1425,1736,644,514,543,505,560,538,512,565,495,510,509,467,517,521,526,543,962,1595,1669,1576,1677,1702,1620,1641,1680,1669,1718,1782,1640,1590,1610,1683,1658,415,653,1306,308,460,351,1065,1509,2050,2035,2016,2010,2012,2000,1984,2007,2016,2041,2003,2018,2020,1983,2008,1976,1848,1364,1457,1597,1253,1358,1483,1125,1119,1120,1123,1123,1123,1120,486,81,1466,2004,2006,1881,1895,1888,1844,1880,1892,1895,1886,1949,1893,1961,1920,1861,1912,1922,1889,1847,1918,1960,1879,1935,1941,1924,1725,1778,1825,1727,1992,1912,1868,1886,1883,1925,1885,1893,1872,1972,1775,1830,1865,1911,1821,1529,865,543,457,716,643,642,646,603,771,796,680,817,815,850,710,752,39,1236,256,954,1198,898,783,273,400,278,1509,1458,1488,1614,1625,1582,1544,1448,1561,1610,1628,1641,1542,1516,1588,1551,1517,1883,1651,1534,1522,1671,1948,1833,1778,1759,1865,1854,1852,1838,1893,1482,1285,1299,1363,1312,1374,1307,1255,1601,1465,1453,1435,1480,1491,1458,1457,1429,1636,1440,1445,1449,1500,1465,1449,1445,1607,1463,1461,1468,1463,1510,1467,1452,1441,1620,1423,1401,1395,1517,1447,1449,1406,1590,1397,1409,1366,1439,1472,1441,1428,1413,1592,1416,1370,1436,1477,1462,1409,1370,1511,1521,1375,1416,1439,1462,1431,1426,1388,1629,1415,1394,1468,1495,1469,1451,1403,1422,1652,1469,1450,1480,1478,1508,1492,1385,1613,1362,1332,1346,1385,1331,1356,1314,1283,1586,1345,1291,1344,1386,1344,1310,1281,1543,1340,1283,1316,1354,1279,1365,1308,1221,1629,1430,1447,1466,1471,1502,1455,1425,1536,1503,1399,1434,1498,1479,1473,1434,1418,1623,1404,1382,1430,1449,1484,1434,1398,1448,1588,1390,1372,1478,1474,1455,1390,1395,1594,1428,1375,1400,1456,1478,1433,1418,1409,1642,1409,1413,1429,1503,1455,1430,1421,1642,1658,1825,1786,1740,1851,1626,1777,1843,1815,1809,1739,1553,1875,1727,1782,1694,1811,1834,1849,1883,1824,1882,1896,1842,1891,1942,1841,1822,1770,1835,1799,1778,1773,1845,1871,1770,1771,1734,1793,1730,1709,1742,1903,1815,1820,1730,1776,1749,1747,1720,1789,1981,1863,1830,1814,1801,1812,1819,1814,1882,1738,1746,1776,1729,1728,1714,1763,1756,1871,1882,1854,1847,1827,1823,1748,1792,1772,1842,1703,1738,1773,1513,1735,1750,1689,1723,1798,1786,1727,1782,1609,1669,1603,1771,1805,1799,1690,1612,1643,1690,1689,1690,1650,1775,1642,1637,1660,1662,1696,1672,1710,1673,1841,1821,1720,1784,1831,1789,1802,1781,1864,1752,1777,1715,1739,1798,1773,1800,1741,1869,1801,1870,1871,1877,1896,1969,1829,1835,1736,1681,1734,1734,1738,1762,1749,1728,1795,1673,1713,1839,1793,1776,1867,1745,1738,1609,1431,1511,1538,1486,1533,1546,1451,1791,2015,1942,1940,2019,1976,1956,1981,1900,1938,1989,2006,2009,1926,1958,1996,2007,1987,1418,38,40,40,38,313,38,40,40,1372,1805,1826,1826,1857,1836,1821,1795,1882,1534,1460,1436,1431,1445,1412,1432,1453,1773,1836,1809,1741,1785,1768,1815,1754,1800,828,508,40,38,40,317,40,40,38,333,1166,1229,1806,1715,1747,1773,1744,1716,1728,1739,1782,1376,1302,1412,1493,725,1304,1547,1328,1078,1429,1795,1580,1538,38,40,40,38,313,38,40,40,931,1353,1185,1142,1221,1757,1594,1646,1710,1657,1676,1668,1643,1036,40,39,40,588,935,84,414,1624,1874,2023,1644,1640,1622,1650,1640,1677,1723,1730,1680,1764,1709,1774,1718,1715,1673,1674,1713,783,1149,40,1703,1803,1722,1710,1759,1745,1752,1707,1821,1863,1838,1883,1893,1815,1891,1789,1807,1977,1769,1611,1694,1675,1752,1789,1823,1700,1879,1845,1928,1816,1941,1792,1974,1783,1976,1697,1211,1171,1083,1014,1327,1404,1348,1383,1417,1336,1129,1130,1096,1124,1192,1238,1424,720,858,969,1112,1570,1622,866,689,748,942,1586,1698,1749,1274,934,1379,1697,1257,1133,800,932,928,590,632,1033,1285,1301,1192,1316,1382,1362,1374,1284,1668,1924,1908,1900,1830,1865,1914,1851,1962,1824,1921,1910,1940,1846,1882,1904,1907,935,927,921,926,1915,1962,1595,1987,1618,1153,1213,1132,1532,1980,2010,2026,2020,1861,1937,1887,1864,2012,2047,2054,2036,1962,1788,1742,1880,1798,1835,1794,1756,1774,1934,1965,1942,1907,1991,1342,1278,1312,1732,1190,1221,1260,1365,1236,1204,1251,1284,1795,1169,1236,1302,1366,1216,738,954,1677,1554,767,822,1612,1711,857,718,1396,1357,1351,1374,1358,1912,1754,1769,1825,1789,1796,1804,1869,1782,1793,1671,1670,1662,1786,1773,1806,1815,1795,1464,1403,1440,1486,1568,1437,1416,1469,1600,1497,1448,1482,1637,1512,1453,1510,1617,1980,1986,1970,1917,2032,1989,1959,1993,1978,1771,1787,1738,1822,1653,1555,1563,1581,1959,1893,1787,1896,1891,1796,1801,1803,1937,1905,1865,1880,1945,1783,1818,1760,1831,1770,1482,1507,1427,1297,1244,1224,1693,1144,1225,1234,1264,1606,1091,1226,1541,1859,1787,1758,1775,1910,1783,1779,1773,1867,1804,1838,1818,1800,1123,911,805,726,1139,1178,1151,1165,1293,1175,1230,1169,1251,1365,1377,1374,1290,1798,1835,1862,1833,1896,1832,1848,1863,1895,1895,1914,1925,1888,1951,1935,1929,1948,1879,1835,1872,1806,1775,1826,1738,1679,1613,1602,1900,1807,1850,1906,1892,1842,1927,1768,1483,1396,1456,1567,1482,1704,1728,1535,1563,1703,1629,1717,1687,1759,1748,1775,1841,1957,2057,2050,1868,2020,1984,2009,1948,2040,1961,1944,1882,1678,1135,1398,1300,1241,1757,1801,1752,1746,1670,1516,1581,1604,1702,1799,1786,1774,1807,1799,1847,1791,1786,1731,1666,1714,1643,1633,1764,1812,1757,1526,1056,1167,945,1460,1047,909,870,1082,1247,1001,1176,893,1119,548,607,510,739,708,708,685,844,905,1220,1186,1015,1303,1327,1461,1346,1370,1414,1428,1731,1540,1245,1555,1627,1393,1609,1726,1611,1673,992,213,220,204,778,497,468,451,732,2055,2021,2046,2044,2023,2038,2038,2022,2049,1964,1935,1973,1890,1907,1946,1908,1890,1518,1405,1435,1460,1334,1176,1171,1154,1216,1439,1352,1510,1423,1860,1810,1838,1873,1884,1829,1790,1801,1890,1777,1739,1759,1825,1661,1702,1767,1714,1451,1449,1499,1434,1435,1445,1535,1476,1524,1896,1892,1850,1923,1278,1223,1210,1230,1824,1823,1783,1784,1707,1451,1355,1550,1499,2027,2032,2049,2017,2013,1989,1971,2000,1802,1508,1505,1487,1688,1694,1641,1664,1683,2009,1979,1974,2014,1870,1711,1720,1741,1950,2055,2048,2054,2014,1282,1240,820,535,534,540,869,1424,1426,1427,1169,1260,1604,1616,1189,1384,1567,1512,1525,1479,1542,1719,1674,1894,1825,1378,1224,1346,1242,1228,940,1020,951,1300,856,917,965,839,1620,1975,1969,1965,1970,2055,2008,1968,2002,1847,1495,1493,1614,1780,1628,1689,1631,1731,1654,1474,1575,1651,1766,1674,1728,1603,1636,1614,1664,1503,1504,1507,1611,1503,1502,1892,1908,1862,1864,1895,1901,1869,1857,1891,1534,1464,1457,1868,1951,1978,2011,2013,1862,1809,1800,1799,1850,1892,1902,1914,1719,1409,1476,1403,1460,1459,1525,1493,1437,1556,1662,1714,1639,1545,1530,1594,1543,1587,1741,1621,1732,1730,1693,1732,1674,1743,1643,1678,1516,1724,1663,1648,1513,1702,1726,1446,1569,1570,1554,1389,1650,1567,1714,1509,1480,1588,1517,1504,1459,1547,1723,1506,1283,1275,1508,1524,1611,1775,1415,1676,1526,1532,1747,1727,1584,1639,1464,1223,1145,1296,1271,1385,1199,1375,1799,1300,1405,1389,1253,1156,1119,1299,1155,1410,1464,1367,1353,1579,1388,1195,1338,1823,1688,1805,1556,1302,1026,1020,897,927,1053,1180,1339,1240,1579,1647,1531,1705,1963,1107,1252,973,1025,870,616,1157,1161,1347,1175,1278,1307,1282,1585,1719,1807,1970,1713,1803,1779,1640,1283,1240,1216,1330,1276,1320,1350,1249,1226,1309,1274,1232,1578,1684,1657,1686,1494,1441,1561,1765,1547,1658,1296,1215,1217,1288,1263,1293,1469,1521,1685,1467,1310,1367,1219,1169,1189,1329,1459,1708,1739,1672,1575,1381,1429,1398,1413,1703,1566,1321,1240,1187,1300,1167,1244,1482,1759,1654,1752,1643,1532,1710,1643,1461,1690,1623,487,282,1488,1590,529,250,1411,1551,548,250,1430,1598,552,250,1447,1575,568,264,1360,1583,588,274,1175,1261,1283,1233,1433,1277,1311,1310,1400,1354,1235,1337,1269,1426,1306,1328,1282,1410,1565,1284,1243,1249,1213,1231,1264,1274,1240,1535,1229,1153,1254,1206,1204,1204,1206,1490,1269,1232,1272,1294,1263,1279,1297,1242,1831,1724,1766,1696,1671,1623,1810,1779,1553,1264,1347,1327,1363,1350,1379,1251,1387,1315,1392,1347,1348,1371,1419,1331,1466,1878,1668,1568,1581,1633,1588,1522,1396,1294,1406,1395,1487,1540,1573,1412,1569,1712,1888,1683,1564,1586,1649,1581,1513,1422,1294,1367,1397,1473,1576,1545,1436,1516,1715,1884,1687,1565,1609,1667,1583,1526,1459,1267,1358,1379,1468,1540,1531,1425,1498,1735,1896,1679,1608,1588,1649,1568,1529,1457,1247,1386,1373,1442,1578,1522,1446,1531,1698,1931,1182,1240,1062,910,878,1037,1020,976,1114,1285,1194,1221,965,965,1066,1029,1503,1268,1233,1137,933,900,1006,1054,951,1119,1261,1226,1218,970,938,1070,1042,1376,1986,1923,1919,1953,1966,1964,1944,1922,1873,1802,1786,1855,1880,1931,1923,1952,1836,1597,1970,1928,1977,2024,1987,1914,1965,2005,1783,1738,1774,1759,1788,1768,1857,1762,1722,1794,1762,1775,1791,1561,1893,2005,1952,1852,1861,1934,1904,1174,810,1364,1920,1978,2002,1978,1932,2001,1963,1942,2041,1969,1958,1960,1939,1989,1944,1958,2000,1577,1555,1577,1578,1586,1546,1599,1553,1771,1731,1627,1705,1557,1841,1804,1831,1797,1839,1478,1563,1558,1543,1707,1661,1715,1598,1772,1607,1719,1694,1857,1803,1853,1847,1888,1685,1686,1693,1586,1876,1800,1845,1807,1825,1533,1633,1552,1606,1614,1701,1711,1678,1738,1713,1759,1760,1747,1541,1702,1697,1793,1509,1658,1814,1595,1711,1774,1778,1613,1676,1591,1749,1644,1582,1556,1751,1629,1750,1029,1853,1907,1599,1423,1932,1880,1472,1559,1645,1992,2005,1967,1622,1349,942,1191,1318,1157,1692,1570,1549,1462,1400,1479,1489,1494,1738,1132,1141,918,1022,1255,1081,935,1030,1112,1251,1860,1781,1884,1793,1846,1808,1860,1784,1840,1700,1611,1763,1593,1759,1718,1707,1820,1912,1771,1869,1837,1830,1814,1851,1783,1907,1745,1583,1740,1657,1738,1758,1709,1803,1818,1822,1855,1847,1898,1825,1891,1803,1962,1936,1889,1976,1895,1929,1955,2027,1909,1953,1769,1747,1800,1749,1843,1808,1850,1805,1653,1464,1266,1521,1566,1687,1429,1103,1234,1061,815,275,673,1323,1250,1352,1230,1430,1337,1267,1354,1289,1435,1307,1283,1333,1321,1435,1333,1341,1341,1297,1486,1659,871,1634,1422,1877,1921,2007,2054,2004,2020,1978,1919,1930,1646,1538,1514,1565,1681,1641,1732,1736,1836,1741,1744,1627,1710,1563,1612,1648,1437,1664,1822,1926,1862,1739,1624,1775,1921,1988,1910,1805,1650,1832,1902,1938,1798,1746,1637,1928,1913,1885,1796,1544,1927,1928,1930,1917,1891,1603,1804,1866,1857,1877,1738,946,972,991,943,1629,1474,1714,1569,1668,1623,1692,1656,1530,1815,1690,1674,1748,1705,1650,1653,1624,1686,1646,1744,1945,1734,1771,1716,1639,1803,1699,1602,1790,1637,1823,1612,1641,1669,1635,1708,1888,1906,1903,1887,1943,1929,1829,1687,1752,1636,1697,1892,1933,1881,1887,1927,1928,1990,1922,1945,1940,1920,1782,1765,1773,1801,1957,1924,1885,1888,1903,1862,1883,1889,1446,1358,1328,1560,1596,1655,1617,1682,1919,1839,1871,1832,1867,1814,1862,1899,1829,1896,1899,1819,624,512,553,1241,1036,1081,1391,1206,1211,1443,1666,1649,1626,1645,1767,1488,1676,1739,1313,1684,1533,1367,1265,1455,1625,1686,1698,1772,1670,1726,1675,1614,1609,1338,1484,1482,1484,1474,1439,1530,1434,1470,1388,1478,1408,1794,1805,1836,1901,1849,1850,1845,1845,1898,1828,1830,1877,1896,1881,1884,1858,1902,1936,1990,1931,1898,1920,1907,1932,1927,1897,1935,1916,1914,1847,1859,1883,1889,1868,1614,1382,1468,1787,1620,1594,1640,1610,1612,1651,1621,1668,1728,1656,1621,1674,1640,1627,1638,1652,1753,1652,1655,1651,1622,1627,1631,1665,1628,1969,1878,1861,1850,1890,1850,1857,1849,1931,1823,1837,1816,1831,1857,1840,1837,1847,1945,1847,1861,1878,1839,1842,1846,1867,1950,1333,1412,1447,1391,1321,1438,1594,1420,1360,1380,1524,1447,1450,1496,1946,1892,1790,1774,1815,1847,1860,1899,1892,1615,1765,1778,1665,1693,1702,1741,1588,1698,1694,1721,1666,1789,1721,1790,1628,1698,1685,1884,1805,1857,1736,1600,1902,1844,1935,1827,1858,1619,1791,1729,1768,1827,1694,1618,1741,1677,1756,1763,1544,1827,1723,1768,1728,1830,1614,1731,1624,1614,1742,1697,1120,1263,1248,1241,1278,1336,1045,1631,1623,1524,1567,1633,1601,1562,1534,1571,1584,1552,1577,1726,1823,1896,1936,1845,1681,1930,1402,1380,1755,1769,1852,1742,1696,1651,1495,1692,1702,1784,1699,1380,1276,1774,1831,1832,1486,1437,1565,1412,1691,1578,1402,1620,1527,1516,1488,1509,1453,1556,1482,1356,1545,1519,1595,1504,1450,1505,1698,1538,1507,1426,1354,1489,1491,1684,1827,1864,1828,1832,1831,1797,1755,1712,1640,1628,1815,1684,1792,1746,1715,1774,1758,1698,1886,1932,1824,1849,1850,1838,1870,1731,1664,1691,1699,1717,1780,1740,1657,1719,1812,1767,1590,1850,1690,1733,1706,1726,1642,1701,1683,1724,1839,1672,1699,1631,1785,1684,1758,1684,1599,1800,1734,1406,1421,1762,1778,1660,1707,1730,1511,1503,1572,1530,1482,1414,1589,1502,1494,1773,1773,1671,1741,1757,1633,1724,1755,1607,1631,1652,1654,1673,1620,1623,1636,1698,1663,1613,1600,1702,1626,1648,1635,1731,1648,1646,1643,1583,1728,1627,1667,1630,1696,1630,1653,1647,1693,1613,1641,1601,1669,1664,1631,1702,1762,1724,1640,1608,1620,1727,1602,1648,1654,1783,1681,1606,1621,1601,1751,1778,1863,1717,1652,1702,1812,1696,1698,1743,1836,1801,1703,1907,1888,1866,1994,1969,1953,1944,1950,1911,1828,1848,1964,2002,2015,1990,1946,1835,1955,1769,1824,1979,2018,2025,1990,1993,1978,1925,1918,1899,1910,1926,1911,1964,1955,1831,1821,1921,1916,1879,1820,1628,1633,1787,1860,1829,1676,1621,1614,1625,1642,1631,1621,1417,1378,1346,1441,1430,1526,1457,1408,1389,1510,1559,1326,1448,1534,1470,1421,1613,1708,1690,1759,1672,1682,1716,1792,1674,1716,1728,1794,1710,1688,1646,1687,1679,1718,1667,1697,1660,1713,1678,1737,1653,1659,1730,1645,1638,1657,1912,1889,1888,1914,1906,1911,1892,1884,1912,1842,1793,1786,1804,2014,2007,2003,2046,2043,2037,2029,2033,2035,2042,2037,2051,2052,2055,2049,2037,2031,2019,1851,1854,1896,1923,1916,1872,1854,1888,1510,1433,1482,1478,1714,1612,1548,1544,1622,1564,1567,1680,1438,1455,1614,1580,1516,1587,1599,1416,1510,1414,1584,1739,1928,1772,1725,1700,1639,1920,1870,1883,1814,1774,1786,1745,1817,1868,1590,1858,1990,2008,1977,1905,1907,1893,1609,1662,1737,1705,1778,1754,1809,1683,1692,1770,1679,1723,1687,1345,1514,1518,1536,1492,1568,1536,1517,1502,1533,1514,1514,1522,1565,1498,1500,1541,1486,1391,1291,1318,1268,1511,1929,1926,1898,1879,1943,1934,1933,1940,1652,1326,1282,1321,1341,1319,1306,1362,1552,1505,1486,1509,1648,1606,1506,1627,1513,1827,1615,1655,1719,1345,1725,1662,1646,1856,1247,1236,1258,1297,1248,1259,1239,1191,1501,1205,962,1163,1083,1269,1104,1113,1300,1412,1283,1282,1176,1265,1235,1334,1371,1587,1428,1309,1299,1336,1326,1303,1294,1360,1967,1482,1660,1752,1684,1548,1494,1404,1969,1930,1143,1180,1137,1249,1275,1064,1934,1963,1926,1482,1812,1822,1829,1568,1831,1976,502,570,492,505,597,487,580,386,873,526,1327,1403,1385,1236,1145,862,556,736,982,1398,1514,1456,1453,1388,675,1219,990,1471,1433,1125,1363,1298,1281,1309,1936,1754,1745,1757,1371,83,441,1139,747,531,663,423,666,586,650,674,1305,824,1130,1440,1431,1399,1405,1420,1673,1594,1703,1590,1573,1547,1739,1786,1429,1066,1100,1195,1259,1352,1208,1306,1329,1458,1596,1550,1675,1681,1478,1306,1452,1259,415,25,30,25,853,594,1370,742,1639,1595,1669,1610,1642,1186,1661,1532,1560,1540,1854,1905,1939,1916,1945,1896,1223,860,1408,1521,1047,969,1093,1280,1396,1405,1483,1477,1561,1511,1714,1736,1580,1613,1527,1527,1568,1568,1495,1591,1926,2056,2057,2029,1950,1863,2028,2004,1840,1774,1944,1875,2007,1989,2055,1988,2044,1991,2020,1977,2052,2044,1885,1739,1964,2006,2009,1994,1796,1648,1416,1225,1231,1186,1768,2009,1782,1713,1844,1905,1846,1757,1766,1749,1929,1934,1982,1953,1945,2004,1975,1991,1693,1552,1556,1538,1542,1518,1560,1533,1445,1393,1339,1328,1291,1276,1381,1304,1825,2006,1997,1993,1991,1991,1952,1927,2012,1993,1745,1697,1650,1654,1673,1677,676,176,840,1342,1322,1228,982,1080,893,1032,1431,1698,1637,1622,1743,1713,1607,1517,1606,1556,1607,1543,1577,1464,1509,1261,1241,1061,1254,1270,1278,1230,1404,1423,1573,1552,1547,1471,1378,1448,1016,983,1373,1575,1249,736,1315,1300,1433,1495,1508,1491,1352,1166,1407,1482,1562,1715,1785,1841,1783,1822,1693,1541,1660,1613,1641,1555,1597,1491,1579,1513,1317,1309,1482,1542,1504,1382,1383,1403,1394,1356,919,468,591,437,1190,1438,1604,1500,1454,1407,1529,1521,1492,1360,1270,1107,1247,1331,1436,1506,1202,1036,566,282,1459,1775,1888,1784,1671,1541,1144,1045,1371,1545,1564,1551,1565,1581,1563,1583,1820,1752,1842,1732,1883,1780,1867,1777,1399,1385,1412,1364,1427,1413,1601,1678,1631,1534,1517,1489,1519,1504,1497,1463,1808,1925,1649,1542,860,719,942,855,1169,1561,1658,1658,1649,1484,1599,1317,1244,1257,829,547,887,813,752,602,1128,1496,857,502,602,504,1461,1817,1372,1074,1093,1025,1315,1411,1257,1054,957,871,1386,1438,1451,1438,1408,1439,1649,1696,1745,1648,1876,1893,1687,1563,1160,1030,1205,1145,1109,990,983,876,1169,985,1256,1176,798,493,618,603,599,503,604,600,572,482,663,605,594,518,641,592,565,431,555,539,1554,1878,1337,1026,1111,1014,1111,1016,1158,1113,1640,1768,1636,1730,1683,1698,1673,1685,1320,1171,1549,1665,1685,1709,1860,1868,692,157,363,288,288,207,397,263,283,49,251,25,213,110,267,273,347,234,1118,1493,1549,1692,1233,1102,1048,1094,1159,1202,1467,1467,1484,1429,1816,1854,1794,1709,1634,1359,1637,1600,1521,1388,1372,1265,1257,1802,1565,1323,1461,1527,1450,1506,1491,1231,1377,1449,1429,1446,1549,1512,1500,1091,1247,1263,1468,1179,1268,1293,1127,1048,1147,1545,1519,1481,1504,1533,1528,1517,1494,715,719,536,618,691,761,650,598,613,633,524,648,737,653,705,723,693,687,799,763,770,567,578,496,1574,2038,1864,1737,1740,1664,1678,1703,1720,1711,1695,1704,1687,2031,1862,1775,1730,1697,1746,1760,1756,1571,969,989,1596,1672,1579,1824,1719,1467,1479,1486,1475,1462,1482,1490,1469,1500,862,631,520,636,661,585,491,577,628,550,637,615,640,544,434,298,509,571,272,388,528,463,301,486,257,517,316,1987,1885,1733,1653,1656,1690,1662,1659,1658,1683,1697,1696,1670,1686,2052,1717,1687,1677,1731,1743,1751,1710,1673,615,744,740,1769,1903,1633,1646,1610,1819,1747,1522,1471,1501,1509,1483,1500,1488,1494,1504,1493,1513,1493,1483,1504,1482,1512,1475,1502,1486,1474,1160,539,389,557,594,711,489,595,596,539,316,541,533,489,384,478,374,428,583,619,667,626,631,632,700,608,516,696,424,489,322,672,379,443,354,494,484,358,590,482,468,331,611,583,584,649,382,453,514,384,598,466,287,452,585,393,544,426,273,414,1023,1992,2022,2022,2001,2027,1912,1704,1684,1701,1683,1716,1717,1706,1665,1693,1677,1710,1691,1666,1685,1694,1714,1679,1721,1719,1708,1710,1671,1709,1696,1713,1690,1707,2048,2048,2043,1696,1613,1705,1689,1685,1743,1686,1674,1726,1734,1728,1655,1657,1733,1726,1715,1627,1615,1699,1609,1341,900,947,843,774,691,1019,1006,1076,1009,1244,1148,1079,916,1078,951,983,899,1014,924,1472,1987,1949,1835,1696,1475,1516,1553,1484,1523,1532,1485,1450,1524,1487,1494,1049,601,389,446,440,460,434,417,459,605,651,514,570,635,469,405,352,156,111,567,594,618,504,359,609,318,472,479,266,346,645,2013,2003,1813,1708,1682,1696,1692,1706,1713,1677,1687,1725,1755,1688,1680,1846,2048,1742,1701,1694,1677,1791,1713,1686,1851,1765,1613,1307,957,1425,1273,1788,1869,1526,1561,1506,1484,1506,1488,1479,1485,1485,1457,1469,1094,262,195,199,371,542,282,225,237,453,310,396,430,384,175,102,227,214,458,297,434,412,311,315,489,478,463,293,436,2000,2054,1877,1701,1692,1708,1673,1699,1676,1667,1674,1695,1726,1698,1721,2016,1959,1805,1897,1675,1794,1682,1672,1782,1843,1788,1878,916,486,668,902,977,848,1685,1646,1759,1649,1490,1495,1490,1506,1474,1468,357,451,300,454,372,276,332,481,449,382,327,500,285,220,311,411,448,1900,1942,1701,1700,1678,1670,1687,1684,1700,1777,2025,1725,1720,1662,1705,1828,1861,1518,788,1568,1232,1718,1588,1508,1490,1499,1059,651,400,504,491,426,553,487,537,263,298,418,1507,1802,1661,1651,1642,1687,1770,1793,1691,1608,1749,978,1765,1646,1579,1515,1464,1515,1505,1493,1496,1491,1483,1483,1523,1498,1511,1493,1491,1512,1483,1004,514,492,434,327,390,503,483,349,290,550,469,453,504,351,410,447,474,396,448,259,177,253,361,303,250,195,228,353,298,205,434,279,392,182,458,355,397,437,261,439,408,521,237,442,256,261,367,363,283,510,519,432,1310,1978,1926,1954,2019,1737,1664,1675,1669,1694,1688,1694,1679,1665,1731,1697,1666,1677,1666,1671,1667,1676,1667,1687,1660,1670,1695,1680,1679,2048,2048,1865,1614,1652,1618,1658,1617,1780,1703,1724,1737,1689,1651,1576,1695,1680,1706,1685,1640,544,666,584,640,618,850,1006,1532,1356,1045,1048,1169,1545,1381,1509,1309,1357,1346,1732,1848,1810,1845,1715,1620,1480,1454,1486,1482,1503,1481,1507,1488,1493,1502,1495,845,494,529,638,630,587,439,459,401,306,279,483,257,496,505,495,480,418,464,595,570,665,597,546,388,449,271,520,547,668,649,570,258,501,352,556,229,154,1999,1969,2019,1822,1710,1688,1677,1707,1697,1677,1689,1717,1688,1686,1724,1742,1698,1725,1682,1831,2048,1977,1776,1759,1740,1790,1803,1735,1839,1688,1714,1851,1754,1732,1838,1139,931,893,1443,1512,1551,1601,1655,1903,1713,1544,1614,1719,1474,1487,1489,1507,1484,1498,1492,1478,1485,1497,1498,1495,1479,1487,1472,1476,1469,1473,1492,1508,1503,1015,623,597,684,485,587,541,595,623,570,594,470,412,429,562,543,485,366,507,543,547,495,553,581,466,365,398,561,442,602,482,333,533,427,320,545,365,348,502,239,557,431,572,483,241,365,483,313,309,505,226,317,396,348,435,513,444,323,422,556,431,226,398,390,474,348,232,345,643,512,383,391,488,306,735,568,1156,2056,2057,2048,2054,2057,2056,1906,1719,1737,1736,1758,1773,1748,1738,1714,1730,1749,1720,1745,1690,1753,1767,1739,1775,1753,1748,1748,1761,1753,1725,1693,1741,1769,1777,1756,1748,1745,1765,1759,1721,1739,1953,2048,2048,2048,2048,1825,1688,1811,1829,1875,1880,1695,1858,1773,1812,1773,1697,1793,1837,1794,1832,1776,1837,1829,1866,1850,1728,1791,1859,1853,1848,1849,1856,1845,1853,1880,1849,1698,1092,865,862,768,739,1134,1339,1396,1174,1357,1214,1503,1119,815,810,1017,1339,1292,1494,1527,1969,1951,1807,1727,1561,1535,1634,1573,1601,1497,1479,1506,1511,1523,1507,1470,1448,1486,1511,1468,1471,1499,1485,1549,1479,1492,1502,1491,1501,1483,534,490,653,484,549,449,386,589,639,645,565,652,627,643,488,530,539,556,573,339,488,435,565,544,586,420,469,421,428,646,249,243,215,411,513,327,361,438,296,398,481,437,226,364,402,388,524,245,345,218,434,523,257,198,160,330,199,418,514,540,424,612,452,484,1056,2041,1936,1948,1970,2015,1787,1643,1687,1675,1673,1674,1715,1709,1687,1682,1668,1647,1651,1702,1706,1688,1684,1713,1695,1695,1680,1680,1673,1658,1684,1664,1668,1669,1862,2048,2048,1816,1672,1692,1695,1751,1818,1720,1647,1645,1693,1781,1750,1784,1684,1742,1716,1765,1628,1680,1746,1741,1121,875,589,595,614,711,806,983,1139,753,779,580,699,768,729,546,740,813,655,330,565,662,724,885,628,440,598,1190,1150,908,1631,1687,1801,1776,1769,1618,1614,1575,1632,1622,1493,1469,1489,1478,1481,1461,1484,1472,1475,1451,1494,1483,1461,1473,1489,1461,1466,1479,1467,1462,1478,1488,1482,1483,1488,1492,1479,1469,1454,1460,1459,1453,1472,1440,1478,1478,1459,1458,1467,1464,1480,1486,1490,1481,1454,1460,1480,1477,1461,1434,1427,1425,1450,1469,1497,1469,1441,1473,1478,1467,1472,1470,1489,1490,1455,1485,1441,1476,1471,1479,1490,1467,1475,1409,1064,614,396,573,550,486,413,401,464,388,262,426,637,476,517,460,446,532,657,564,570,630,373,590,507,328,557,556,564,558,365,486,509,509,540,376,489,489,515,492,586,636,577,597,473,302,229,643,503,515,554,601,614,516,552,541,491,550,361,453,567,454,491,431,541,524,354,411,510,450,547,448,448,516,499,608,540,619,608,611,495,604,486,552,641,418,249,440,404,498,508,483,449,291,324,519,305,397,402,572,553,168,546,518,549,492,472,508,360,294,547,287,228,192,473,586,570,533,244,459,435,323,315,304,366,451,446,457,464,543,435,554,601,456,568,570,511,501,441,395,486,634,524,538,570,443,519,502,237,210,610,412,522,526,539,536,477,418,336,460,527,568,459,473,460,417,486,513,586,503,484,471,466,465,480,666,611,441,380,422,490,498,384,599,479,373,274,439,328,312,382,375,349,424,270,351,510,529,631,416,486,380,405,589,491,470,532,493,498,504,493,513,414,473,201,375,499,410,594,552,464,427,543,533,450,458,598,587,471,410,550,497,509,513,458,463,475,89,320,578,554,490,573,454,583,516,482,513,299,1301,1922,1961,1918,1922,1921,1957,2043,1946,2016,1948,1962,1990,1916,1985,1989,1967,1903,2045,2054,1732,1663,1623,1633,1689,1691,1721,1710,1709,1690,1690,1682,1668,1694,1677,1684,1669,1694,1669,1689,1679,1689,1676,1699,1686,1696,1689,1678,1679,1680,1686,1697,1676,1676,1686,1656,1675,1681,1680,1678,1694,1649,1652,1658,1693,1683,1676,1669,1666,1666,1614,1672,1696,1664,1663,1682,1707,1681,1684,1681,1676,1675,1676,1681,1655,1696,1707,1724,1654,1664,1664,1646,1690,1691,1644,1673,1666,1644,1657,1671,1672,1672,1673,1661,1670,1665,1713,1710,1686,1687,1689,1709,1693,1678,1673,1708,1695,1698,1675,1675,1663,1672,1677,1695,1689,1669,1672,2021,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1714,1592,1651,1713,1740,1767,1763,1667,1720,1738,1690,1645,1705,1696,1726,1671,1732,1742,1659,1741,1712,1745,1751,1698,1693,1624,1756,1721,1658,1655,1671,1645,1654,1661,1727,1625,1666,1753,1717,1748,1758,1729,1761,1698,1704,1651,1746,1712,1707,1676,1615,1725,1776,1566,1531,1515,1530,1685,1697,1725,1712,1779,1793,1718,1711,1700,1659,1817,1703,1606,1707,1748,1762,1782,1738,1709,1639,822,868,807,761,792,662,837,736,611,617,482,783,518,618,261,393,701,723,822,777,710,705,561,703,763,845,710,747,807,795,627,860,967,654,752,837,825,731,740,626,740,635,647,809,784,782,809,592,685,800,557,516,358,512,733,528,848,648,404,867,405,961,861,833,747,597,406,527,631,635,763,674,594,546,553,509,520,618,798,701,697,848,681,576,692,823,626,426,704,860,892,790,688,621,734,555,710,815,664,640,545,713,745,728,746,552,563,519,429,968,858,866,884,688,644,935,471,419,878,809,793,703,745,744,660,690,763,701,636,584,700,502,494,668,724,385,403,301,323,300,314,420,308,266,295,296,305,301,415,558,464,745,367,534,495,690,582,655,656,521,785,759,566,648,852,808,529,331,443,467,333,360,395,290,380,441,295,315,300,228,375,562,500,600,589,716,514,274,171,272,260,242,164,176,256,823,1635,1659,1544,1911,1906,1947,1908,1936,1909,1944,1946,1929,1952,1943,1888,1785,1906,1907,1800,1849,1476,1485,1473,1489,1492,1497,1488,1480,1497,1494,973,507,427,527,518,358,526,497,404,386,304,548,428,545,442,518,569,206,397,336,436,408,380,337,416,274,283,545,153,368,367,441,1203,1954,2002,1840,1681,1692,1697,1711,1717,1698,1688,1701,1691,1686,1674,1669,1670,1671,1940,2048,1728,1783,1709,1761,1811,1656,1819,1758,1797,1721,1686,1709,902,698,771,1385,1503,1286,1330,1326,1506,1713,1715,1531,1463,1511,1481,1467,1459,1501,1498,1498,1496,1092,272,446,481,379,487,699,465,576,602,547,503,421,465,426,144,542,431,264,394,353,308,553,558,138,434,449,191,268,1801,2019,1956,1666,1687,1692,1714,1727,1697,1704,1682,1723,1684,1694,1711,1675,2031,2013,1636,1668,1817,1837,1825,1747,1724,1812,1812,1747,1780,1654,567,778,933,1069,1126,1461,1312,1618,1735,1691,1534,1616,1516,1512,1476,1493,1483,1491,1495,1497,1489,1448,1476,1472,1504,1456,1471,1478,1507,1480,1475,1493,1457,1451,1476,1468,1490,1462,1472,1486,1483,1486,1477,1486,1506,1499,1489,1480,1386,575,576,526,702,728,665,596,529,617,531,632,674,647,590,618,631,634,544,582,636,698,563,556,592,526,674,586,606,596,589,377,613,526,665,572,472,590,546,489,587,534,571,546,635,517,441,302,180,453,485,344,570,447,379,464,630,661,550,261,227,362,204,151,186,494,381,543,496,473,577,644,491,594,627,631,597,478,452,463,536,627,533,546,600,448,302,573,476,537,447,339,192,423,616,644,540,526,389,483,603,536,491,525,679,625,551,510,438,637,1999,2009,1967,2003,1995,1927,1961,1957,2009,1877,1715,1716,1711,1708,1720,1721,1699,1708,1705,1686,1700,1670,1723,1707,1698,1690,1677,1680,1706,1688,1628,1676,1638,1666,1682,1681,1672,1704,1695,1681,1671,1685,1684,1699,1699,1693,1654,1675,1682,1701,1670,1664,1664,1670,1668,1740,2048,2048,2048,2048,1941,1727,1757,1712,1617,1701,1748,1770,1745,1828,1715,1691,1686,1723,1688,1613,1693,1683,1708,1718,1751,1699,1698,1745,1779,1673,1608,1678,1706,1692,1720,1687,1565,986,868,860,842,811,838,867,749,770,790,1055,1023,848,871,899,1011,1325,1124,1018,1057,1159,1183,1138,1237,1046,1381,1374,1454,1345,948,1276,1055,754,717,606,685,632,336,494,900,982,930,1134,1156,909,834,624,602,953,1422,778,1159,1199,1500,1832,1850,1867,1886,1918,1938,1912,1941,1734,1582,1471,1488,1483,1487,1484,1504,1454,1482,1481,1490,1497,557,387,215,545,513,364,386,534,425,266,181,149,256,326,279,479,408,443,489,322,308,380,393,336,445,316,340,343,320,406,338,464,330,312,1535,1979,1996,1905,1680,1698,1655,1703,1678,1681,1700,1705,1715,1702,1689,1723,1683,1678,1847,2048,1759,1726,1692,1779,1704,1735,1787,1843,1738,1755,1705,1714,1277,655,849,1554,1414,578,802,1215,1750,1830,1713,1594,1528,1468,1505,1494,1504,1508,1321,472,556,562,601,372,500,551,405,418,453,387,347,287,309,335,509,471,187,444,449,264,329,1324,1965,1844,1708,1722,1672,1699,1708,1645,1685,1686,1703,1823,2048,1693,1820,1745,1808,1707,1740,1817,1842,1111,793,1057,1742,1554,1529,1408,1619,1609,1456,1455,1425,1469,1482,1487,1496,1465,1485,1479,1488,1515,1502,1477,1509,1494,913,520,433,587,558,497,574,493,365,689,529,494,591,640,415,315,475,370,389,436,471,484,422,509,277,231,313,609,587,609,585,565,494,502,530,298,548,422,535,604,593,370,539,487,433,1029,1995,2002,1997,1910,1687,1720,1699,1705,1693,1684,1671,1663,1725,1706,1684,1675,1698,1742,1711,1708,1725,1735,1712,1736,2048,2048,1778,1720,1669,1752,1781,1646,1679,1703,1615,1675,1771,1786,1721,1757,1793,1709,915,877,787,1084,1722,1506,1287,1551,1454,1697,1438,1830,1805,1678,1602,1360,1490,1502,1473,1474,1468,1489,1484,1479,1470,1480,1484,1501,1463,1492,1082,478,654,607,537,435,434,559,539,580,332,452,458,440,309,336,450,525,521,523,497,494,554,422,305,229,204,290,549,469,246,204,96,208,381,299,229,425,472,286,497,319,271,283,354,710,1935,1928,1954,1989,1684,1680,1694,1671,1690,1685,1666,1723,1661,1661,1661,1691,1691,1660,1679,1662,1679,1682,1691,1667,2052,2048,1884,1718,1708,1692,1770,1685,1828,1656,1667,1714,1693,1655,1738,1704,1723,1829,944,755,516,621,900,843,795,738,868,850,641,540,1471,1398,1769,1680,1658,1621,1643,1460,1487,1514,1506,1490,1517,1429,1459,1479,1492,1519,1497,1495,1486,1500,1495,1477,1433,1478,1534,1506,1357,469,562,499,292,476,490,563,532,573,361,333,515,580,256,231,608,546,508,481,391,436,242,177,213,588,534,490,565,534,503,434,451,390,428,500,570,572,363,401,432,384,347,380,165,149,414,567,407,581,535,374,353,423,471,318,359,266,123,434,381,414,422,423,464,302,432,436,389,480,295,1928,2016,2012,1990,2039,2040,1745,1711,1677,1655,1655,1709,1685,1647,1720,1695,1664,1708,1696,1682,1667,1693,1666,1697,1710,1682,1708,1676,1660,1661,1707,1735,1686,1687,1708,1724,1708,1782,2048,2048,2057,1833,1740,1644,1697,1721,1676,1625,1820,1727,1797,1734,1749,1692,1700,1759,1719,1708,1746,1708,1684,1833,1743,1695,1731,1847,1801,775,464,654,599,503,830,648,834,535,271,195,734,646,604,457,488,395,301,470,473,329,99,610,1192,953,935,1577,1715,1816,1737,1792,1703,1468,1454,1484,1495,1524,1496,779,439,224,232,334,381,233,121,266,245,307,492,436,277,420,487,564,2025,1865,1694,1692,1720,1667,1690,1655,1679,2017,1748,1746,1788,1720,1671,1588,754,885,1232,1445,1717,1554,1628,1503,1516,1503,1490,1487,1491,1473,1500,1491,1465,1474,1489,1497,1509,1469,1490,1475,1395,533,630,654,452,561,535,556,473,556,555,572,464,557,553,618,476,589,375,535,621,534,533,547,599,533,323,484,631,435,438,403,422,496,467,580,319,458,495,520,378,539,470,525,601,501,595,568,470,343,677,438,464,558,557,461,562,664,609,590,558,1940,2028,2029,2019,2026,1713,1710,1704,1713,1686,1696,1709,1690,1714,1698,1657,1676,1710,1676,1710,1678,1725,1694,1687,1670,1660,1667,1683,1698,1716,1718,1931,2048,2048,1772,1713,1806,1694,1691,1663,1666,1716,1732,1878,1761,1833,1788,1622,1677,1823,1762,1728,1104,729,823,770,636,1225,1720,1442,1266,1566,1764,1606,1401,1208,1411,1854,1854,1803,1783,1779,1586,1404,1591,1503,1488,1476,1479,1480,1486,1467,1479,1493,1490,1460,1491,1487,1496,1516,1494,1491,1498,1487,1493,1052,362,131,272,323,455,565,487,405,521,493,659,522,277,482,375,471,376,402,530,574,448,369,300,95,573,171,316,496,500,575,532,542,380,592,491,286,407,523,355,577,624,527,597,389,219,277,416,476,375,455,431,586,541,572,649,521,556,520,402,361,454,435,141,268,368,380,454,287,533,2027,2048,2006,2016,2052,1841,1665,1688,1716,1682,1645,1675,1688,1645,1687,1688,1666,1690,1678,1702,1722,1682,1691,1678,1680,1711,1698,1684,1703,1727,1700,1676,1698,1659,1688,1873,2048,2048,2006,1629,1788,1777,1680,1737,1668,1723,1758,1694,1746,1754,1806,1782,1716,1748,1768,1710,1639,1786,1675,1660,1509,1727,732,743,751,792,818,727,624,737,665,674,913,1003,1017,1033,743,831,729,1037,1081,931,1038,947,1055,850,912,906,803,428,754,456,180,902,1283,1600,1802,1837,1831,1842,1729,1542,1524,1532,1509,1478,1492,1492,1513,1492,1476,1522,1529,537,463,255,262,417,547,479,460,462,430,417,542,317,398,386,391,397,423,408,287,364,455,384,405,379,307,235,325,276,268,504,488,250,267,271,442,2008,1967,2017,1697,1685,1695,1681,1663,1664,1681,1672,1682,1662,1681,1686,1697,1716,1680,1810,2048,1939,1743,1735,1750,1755,1665,1729,1685,1614,1725,1766,1729,1734,1627,686,650,696,957,1170,1099,892,1312,1864,1894,1818,1538,1553,1464,1503,1496,1489,1506,1494,1506,1494,1499,1488,1495,1506,1504,1524,1493,1481,1491,1504,1507,1498,1477,1503,1493,1479,1488,1524,1521,1478,1494,1524,1504,1464,1326,394,550,549,311,586,590,522,628,551,642,601,427,434,544,530,452,387,593,565,626,553,514,543,589,392,504,529,589,656,411,403,459,474,591,489,481,487,496,556,573,373,589,456,403,332,211,378,502,341,324,354,494,235,532,350,510,596,615,369,407,534,581,642,554,567,543,437,519,473,564,492,446,457,349,533,522,442,490,468,365,440,533,405,422,563,298,392,309,232,628,486,375,415,407,363,379,647,295,472,359,251,286,347,391,351,294,451,245,274,442,278,1964,1997,2048,1985,1971,2031,2006,2016,2051,1981,1686,1691,1687,1675,1700,1697,1687,1708,1701,1720,1732,1709,1727,1728,1712,1736,1735,1743,1716,1736,1699,1682,1702,1666,1696,1686,1669,1679,1707,1679,1713,1686,1661,1660,1682,1697,1706,1724,1709,1749,1735,1756,1707,1657,1715,1704,1693,1650,1684,1647,2048,2048,2048,2048,2048,1934,1697,1673,1660,1640,1692,1680,1713,1688,1826,1750,1736,1758,1768,1707,1692,1673,1734,1662,1713,1664,1625,1719,1669,1773,1723,1655,1687,1599,1687,1687,1721,1794,1696,1746,1743,1619,1653,1483,787,800,723,826,861,526,806,689,560,1041,836,886,987,922,339,603,561,786,923,491,770,602,750,680,663,647,594,657,249,394,845,786,865,957,1081,1054,884,874,868,719,559,778,1572,1364,1816,1833,1812,1889,1810,1807,1846,1857,1630,1654,1532,1503,1513,1489,1495,1493,1488,1477,1489,1484,900,395,525,494,382,566,446,533,354,377,374,384,114,124,78,553,564,667,507,538,629,527,296,112,85,415,325,376,281,439,57,125,867,2055,2039,1934,1697,1669,1703,1690,1711,1734,1735,1698,1670,1696,1712,1718,1707,1799,2048,2003,1828,1825,1850,1759,1769,1726,1794,1720,1763,1802,1819,1807,608,739,851,821,751,798,1516,591,1504,1603,1648,1527,1580,1567,1510,1466,1492,1497,1505,1480,1498,1470,1497,1488,1494,1469,1493,1487,398,379,329,282,365,451,321,364,400,224,368,537,511,545,564,500,467,332,285,424,296,355,358,419,553,309,358,317,383,508,353,280,482,420,456,441,439,201,1382,2009,2048,1948,1655,1670,1660,1704,1701,1694,1690,1720,1722,1710,1703,1665,1658,1648,1680,1641,1814,2048,1903,1660,1729,1836,1865,1857,1779,1795,1848,1830,1763,1665,1709,1576,610,672,667,708,460,368,302,458,385,344,428,504,879,1486,1000,331,1092,1488,1519,1516,1514,1762,1642,1594,1625,1485,1511,1521,1512,1519,1521,1519,1518,1504,1514,1510,1509,1515,1521,1494,1520,1526,1511,1496,1508,1511,1515,1523,1503,1511,1530,1505,1494,1558,1528,1523,1555,1519,1519,1531,1500,1503,1501,1504,1502,1490,1487,1460,1482,1500,1488,1502,1183,536,485,598,426,502,615,458,336,634,653,663,717,716,669,723,644,658,650,657,740,728,547,663,616,461,466,601,595,531,701,692,605,689,604,642,592,671,487,638,581,500,674,559,554,593,484,579,553,500,588,593,626,574,540,585,594,582,509,578,547,674,449,452,577,461,558,636,558,609,589,628,576,604,549,451,617,706,599,487,567,566,473,511,557,529,642,536,417,461,636,562,556,704,573,726,739,737,623,642,696,704,717,617,560,657,676,661,604,490,472,603,604,542,645,642,551,618,618,588,626,594,583,515,470,390,536,569,601,515,576,538,545,506,448,593,554,636,508,402,394,578,538,513,545,331,444,573,483,517,501,421,354,1922,2048,2054,2035,2054,2056,2048,2052,2048,2054,2049,2027,2048,1863,1711,1709,1683,1701,1712,1730,1686,1700,1711,1698,1721,1699,1699,1711,1704,1707,1742,1725,1711,1729,1729,1744,1738,1751,1752,1766,1756,1745,1723,1722,1682,1707,1694,1700,1677,1674,1716,1734,1684,1691,1699,1724,1693,1714,1734,1749,1768,1759,1736,1755,1715,1712,1736,1740,1727,1742,1730,1758,1755,1740,1752,1746,1746,1749,1730,1852,2048,2048,2048,2048,2048,2048,2048,1848,1706,1647,1714,1801,1651,1701,1730,1758,1694,1779,1799,1799,1837,1779,1835,1798,1834,1770,1787,1723,1815,1775,1629,1614,1784,1729,1652,1563,1736,1762,1651,1752,1668,1716,1728,1864,1810,1825,1831,1806,1724,1704,1681,1620,1690,1779,1836,1816,1813,1870,1859,1809,1728,815,911,988,878,992,793,760,826,966,868,1239,1324,1376,1158,1224,1193,1247,1299,1327,1244,1223,1181,1091,718,719,841,882,939,993,1099,1343,727,451,1006,1719,1335,1903,1884,1669,1871,1865,1914,1821,1809,1807,1811,1892,1684,1637,1456,1503,1486,1501,1489,1493,1508,1488,1477,1021,101,177,318,50,164,306,367,293,379,285,341,227,256,345,208,181,88,306,432,477,165,344,519,404,443,304,252,130,1893,2025,1974,1686,1710,1683,1708,1730,1663,1681,1711,1728,1723,1699,1674,1661,2001,2021,1799,1782,1579,1734,1741,1767,1773,1762,1874,1877,1669,1343,708,1282,1597,1594,1577,1593,1617,1520,1367,1314,1507,1196,431,457,531,538,517,499,689,1888,1717,1687,1828,1788,1777,1240,624,1023,1477,1535,1489,1498,1500,637,256,491,382,584,296,107,401,442,460,154,320,551,1194,1904,1669,1676,1689,1696,1676,1788,1826,1620,1729,1762,1672,874,1202,1727,1786,1637,1441,1500,1484,1508,1500,691,440,402,396,429,449,400,293,549,423,428,350,527,514,448,569,1460,1895,1653,1671,1673,1677,1673,1696,1792,1810,1712,1706,1709,1804,920,616,1129,1000,1010,1610,1612,2050,2056,2056,2052,2055,1608,1596,1517,1397,909,810,849,792,862,831,1584,2017,2001,1933,1992,1424,524,1222,1135,1484,1225,1370,1391,1262,1141,866,616,1100,1190,1195,1053,933,765,981,972,981,1094,958,1122,1111,1138,745,656,764,928,956,725,902,764,831,1656,2048,995,1086,1065,904,963,1082,1098,1000,1022,963,1202,861,1048,1062,928,996,930,867,741,810,863,1317,1418,1592,1304,1817,2019,2055,2043,1694,1639,2025,2048,2048,2048,1790,2049,2048,1613,2032,2048,2048,2048,2048,2048,2057,2048,2027,2027,2020,2019,2030,2029,1976,1908,1785,1653,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,1969,1898,1832,1692,1238,2034,1956,1721,1856,2027,2048,2052,2048,2048,2057,2056,2048,2048,2048,2048,2048,2048,2048,2055,1813,1184,1519,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,1965,1625,2048,2048,2048,2025,1761,1473,1307,1142,924,603,969,2057,2048,2057,2048,2056,2048,2057,2057,2048,2048,1616,1301,1148,2048,2048,2012,1916,1815,1600,1413,1031,795,417,170,1035,2035,2048,2054,2056,2048,2048,2055,2048,2048,2048,2048,2048,2047,1922,1725,1578,1422,1591,2054,2048,2048,2048,2048,2048,2057,2048,2048,2055,2048,2008,2010,1806,1612,1356,754,1670,1804,2029,2015,2056,2057,2034,1845,1554,1063,1439,2049,2048,2048,1720,2048,2048,2015,1515,98,158,104,25,1590,2048,2048,2048,2048,2048,2055,2053,2009,1953,2048,2057,2048,2006,2048,2048,2048,2048,2048,2048,2057,2048,2048,2053,1725,1707,2031,1825,1929,1663,2057,1865,1463,1340,1722,1983,2036,2053,2057,2052,2039,1970,1757,1097,65,1877,2056,2048,2048,2048,2048,2055,2057,2056,2033,2038,1938,1837,1924,1834,1620,2048,2057,2048,2048,2048,2057,2048,2048,1900,2057,2048,2048,2048,2048,2048,2048,2048,1590,2042,1964,1973,1282,1721,2048,2056,1969,1660,1969,2048,2048,2048,2057,2056,2048,2048,2048,2045,1606,1305,1850,1970,2014,2026,2048,2041,2037,2050,2051,2050,2045,2038,2020,2006,1971,1973,2022,2048,2054,2041,2050,2014,2052,2035,2045,2057,2034,2043,2012,1870,1733,1520,1338,1257,1209,1164,1145,1038,1057,1082,980,996,838,875,846,698,603,461,410,196,174,74,51,716,2043,2037,2052,2055,2013,1794,1746,1466,977,1367,2048,2048,2048,2048,1904,2048,2048,2048,1962,2048,2048,2048,2002,2057,2057,2057,2055,2053,2052,2048,2053,2046,2041,2051,2006,1922,1870,1768,1771,1765,1608,2049,2048,2050,2048,2056,2052,2056,1756,2054,2056,2048,2048,2057,2048,2048,2025,1965,2048,2009,1891,1454,2055,2048,1991,1432,2038,2048,2048,2048,2048,2048,2055,2048,2047,1971,1760,1710,1486,1363,1233,1161,1907,2048,2048,2057,2053,1983,1833,1514,686,483,1176,1589,1774,1933,1949,1930,1947,1993,1864,1683,1462,1277,923,497,726,1887,2049,1976,1260,882,2057,2048,2048,2048,2048,2048,2048,2048,1984,2002,2050,1994,1706,1340,825,2052,2045,1660,1370,1996,2048,2048,2050,2048,2056,2048,2050,2014,1967,1581,1938,2056,1421,595,1939,2048,2048,2048,2048,2048,2056,2031,1743,2035,2048,2048,2048,2048,2048,2053,1548,1090,1625,1959,2045,2057,2048,1927,1172,1919,1816,2054,2048,2048,2057,2035,1974,1641,1244,875,683,415,335,181,701,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1929,1457,2048,2048,2048,2048,2048,2048,2048,1971,380,675,1541,1799,2036,2055,2048,2048,2048,2048,2048,2048,2048,2048,1986,1726,1577,1381,1334,1113,1003,1016,789,746,853,983,741,1186,1896,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,1568,1030,670,802,2012,2057,2048,2056,1948,1253,2057,1905,1628,1074,840,696,552,1755,2048,1627,718,1158,1884,1952,2030,2048,2047,2057,2044,2042,1769,1649,1790,1946,1894,2049,2052,2048,2048,2048,2057,2048,2056,2034,1904,1636,1190,614,1135,1915,2048,2057,2048,2048,2048,2048,2048,2056,2047,1879,1632,1334,864,755,231,1207,2048,2033,1943,1907,1679,1733,1954,2048,1926,1632,1336,1728,1703,1866,2047,2048,1917,1618,1439,1850,1916,1649,2051,1914,1745,1735,1381,1290,1165,2005,1952,2031,2033,1985,2006,1907,2048,2055,2051,1989,1311,795,1954,2048,2048,2048,2048,1910,571,1904,2048,2056,2048,2037,844,842,2055,2047,2056,2048,2057,2057,2057,1923,2048,1770,1739,2048,1781,2037,2056,1822,1871,2053,1838,1323,1419,2048,834,1447,2048,2048,2054,1943,552,79,612,1813,2048,2048,2048,2056,2057,2056,1905,2048,2048,2030,1972,2048,1970,2048,2048,2028,2048,2032,2048,1837,2028,1631,1997,1363,1951,1310,1500,1606,1708,1366,1327,1612,2057,1838,1947,2048,2048,2048,2056,1820,1243,915,701,2055,1515,1297,2025,2048,2048,2048,2048,2048,2048,2048,2048,2055,2051,2018,1889,1681,1496,1295,1023,749,2015,2048,2048,2048,2048,2056,691,1506,2041,2051,2048,1903,1962,2049,2054,2048,2048,2048,2057,2055,2031,1905,1599,1215,336,1890,2048,2048,2048,1941,685,228,1773,2056,2048,2048,2057,2054,2048,2048,2048,1706,924,282,930,1711,2046,2048,2048,2048,2048,2048,2048,2048,2057,2057,2048,1965,1837,1780,1790,1669,1485,1311,1278,1216,1154,914,655,574,521,511,439,461,438,413,418,477,521,465,460,167,574,1181,1182,1246,1204,1065,1027,903,780,601,400,211,66,494,1407,1737,2006,2054,2048,2041,2027,1958,1902,1869,1853,1928,1986,1949,1393,1942,2045,2056,2054,1998,2037,2047,2037,2032,2008,1973,2048,1939,1933,2020,2048,2048,1905,1733,1934,1892,1771,2009,2011,1414,1507,1864,2056,2052,1916,1896,2007,1754,1982,1925,2048,2056,2048,1949,1954,2055,1898,1449,1640,1495,1299,757,462,534,353,728,547,859,1419,1499,1436,1431,1269,1419,1550,1636,1815,1822,1830,1946,2043,2021,2054,2055,2048,2057,2056,2057,2054,2049,2030,1979,1977,1993,1973,1846,1682,1709,1694,1681,1589,1485,1426,1464,1440,1404,1258,1219,1198,1219,1201,1072,967,914,946,1154,1567,1432,1469,1496,1430,1485,1555,1553,1419,1561,1486,1554,1681,1646,1569,1625,1562,1460,1718,1647,1835,1705,1752,1838,1840,1891,1881,1897,1974,1939,2018,2046,2057,2048,2048,2057,2048,2048,1987,1854,1682,1469,878,1763,1825,2052,2051,2048,2001,636,240,1759,2048,2057,1791,1670,1867,1271,2048,2057,1258,1888,2048,2048,2048,1944,1648,2057,1869,1350,1626,2048,2048,2048,2057,2057,2054,1936,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2033,2046,2057,2048,2057,2048,2048,1933,1981,2024,2057,2048,2044,2048,2048,2048,2048,2048,2048,2040,1222,1904,2051,2048,2053,2048,2043,2051,2032,1859,1940,1644,1557,1575,1466,1810,1738,1518,1413,1283,1065,748,446,2048,2048,2048,2056,2048,1898,1492,617,418,1484,2048,2048,1720,1615,1462,1842,1795,367,201,1096,635,207,565,389,401,350,404,231,590,780,793,846,505,584,768,963,630,850,1451,1458,1408,1196,1181,1132,821,598,644,259,326,521,432,685,1052,660,471,469,337,817,715,588,569,596,494,412,818,832,1034,754,807,635,788,924,620,783,901,824,215,730,592,557,891,517,314,283,334,289,512,249,434,182,384,478,445,762,636,312,408,315,486,686,361,431,662,359,303,229,620,697,258,456,322,552,832,789,100,117,363,246,664,881,321,388,461,304,346,622,293,549,938,550,236,391,292,462,313,222,334,401,959,499,451,469,688,490,462,424,240,709,325,325,636,578,795,254,185,409,434,647,345,751,233,810,518,406,252,686,324,670,553,489,511,430,739,558,341,430,608,850,452,938,1170,1177,1100,1173,1196,590,425,722,1064,1161,809,443,761,1136,478,268,203,201,323,189,156,119,230,469,313,151,133,134,408,523,649,318,711,617,567,791,293,560,199,462,416,269,324,514,593,423,480,533,278,283,421,541,151,218,279,206,374,186,154,428,314,270,181,284,183,249,526,507,633,285,613,963,264,473,486,519,634,499,420,602,726,929,1002,416,491,248,398,408,248,426,344,333,251,274,132,126,933,1095,582,623,854,399,644,432,288,503,622,494,253,269,411,979,598,895,667,385,621,208,275,329,225,299,212,592,587,653,414,423,772,480,751,354,64,498,630,642,714,427,422,598,364,346,353,591,1150,1268,1379,1047,1369,1280,1497,1309,345,120,176,439,489,164,125,274,462,325,484,467,714,1085,775,286,425,175,366,196,343,245,187,384,344,346,314,510,385,382,416,602,661,420,443,311,437,332,391,217,308,205,516,348,319,238,178,298,511,303,257,390,158,722,191,432,153,588,572,621,284,140,297,449,365,436,485,354,688,765,476,252,617,752,224,618,737,238,161,181,175,138,215,433,180,150,155,168,214,273,155,309,251,414,505,501,176,246,246,235,543,526,260,606,486,146,217,187,488,331,365,334,179,395,195,175,210,369,329,420,349,126,343,158,245,236,126,258,630,501,426,440,426,363,269,210,471,461,131,417,822,369,435,337,385,369,690,813,979,858,672,731,1696,998,1211,1324,1410,1459,1441,1477,1527,1464,1540,1571,1426,1507,1505,1526,1563,1521,1509,1499,1577,1466,1425,1327,1257,1189,1296,1417,1316,1207,1193,1085,1103,1482,1471,1671,1884,1733,1777,1717,1692,1703,1748,1694,1741,1728,1707,1735,1760,1775,1739,1701,1556,1679,1655,1654,1699,1704,1689,1730,1716,1675,1670,1649,1679,1649,1571,1643,1599,1921,1608,1715,1647,1639,1650,1677,1743,1747,1842,1795,1835,1827,1813,1759,1689,1716,1747,1800,1818,1783,1743,1632,1819,1822,1657,1813,1749,1730,1710,1625,1662,1562,1854,1550,1659,1605,1592,1624,1620,1677,1651,1702,1667,1710,1713,1680,1728,1767,1731,1633,1759,1701,1716,1716,1646,1614,1707,1654,1662,1620,1621,1570,1564,1490,1526,1701,1366,1181,928,784,514,1149,1369,1415,1461,1208,1049,1238,1201,1197,1417,1332,1280,1268,1238,1286,1137,947,804,868,853,919,651,646,912,1073,995,1197,1208,1817,1428,1450,1382,1405,1591,1372,1502,1463,1601,1406,1345,1248,1334,348,213,384,215,225,700,1010,1389,1214,893,1294,1380,1185,1586,1693,1167,1235,1579,1197,796,1349,1327,1574,1213,1632,1525,1606,1591,1575,1416,1238,1609,1340,1715,1277,1476,1781,1192,1729,1620,1265,1473,1328,1449,1450,1563,1754,1291,1133,1676,1649,1354,1680,1257,1376,1470,1614,1689,1392,1390,1630,1383,1763,1350,1591,1486,1282,1514,1562,1370,1418,1302,1572,1516,1706,1420,1617,1670,1086,1601,1402,1575,993,1506,1615,1590,1386,1535,1444,1277,1745,1457,1121,1338,1519,1412,1187,1497,1469,1416,1267,1645,1594,1679,1596,1383,1139,1280,1621,1404,1831,1325,1674,1354,1761,1287,1678,1452,1557,1522,1905,1334,1662,1604,1773,1645,1399,1504,1519,1762,1344,1764,1694,1433,1605,1564,1759,1790,1476,1662,1290,1845,1533,1547,1608,1811,1430,1503,1818,1288,1646,1731,1608,1429,1756,1629,1812,1907,1831,1885,2045,2041,2022,2038,2032,2050,2022,2024,2029,2027,2056,2046,2051,2048,2016,1996,1833,2017,2010,2036,2039,2052,2048,2039,2037,2025,2031,2008,2037,2039,2037,2045,2040,2043,2023,2012,2022,1950,1990,2041,2051,2053,2021,2021,2045,2022,2002,1994,2004,1997,1977,2012,2000,2010,2031,2041,2032,1999,2028,2006,1991,2006,2015,2007,2008,2040,2036,2038,2009,1982,2001,1979,1982,2010,1998,2040,2054,2033,2044,2024,1987,2021,2021,1993,2049,2028,2046,2051,2044,2022,2041,2049,2025,2048,1991,1992,2029,2031,1961,1989,2028,1951,1997,1985,2010,1965,1905,1990,1969,1979,1980,2004,1956,1973,1986,1987,1957,1993,1968,2009,1983,1974,1962,1988,1975,2018,1977,1956,1981,1989,1985,1986,1964,1956,1982,2000,1986,2000,1966,2006,1991,1975,1969,1954,1967,1997,1990,1965,2006,1972,1993,1947,1982,1965,1995,1995,1998,2010,1980,1997,2004,2013,1996,2002,1987,1998,1944,1999,2006,2001,1937,1935,2039,2032,1932,2020,2041,2023,1948,2039,2014,2005,1970,2028,1986,2031,2049,2039,1999,2030,2031,2015,1996,1980,2006,2024,2001,2001,1918,1872,2046,2048,2027,1988,1933,1912,1958,1867,1747,1960,1913,1844,1799,1874,1937,1978,2000,1943,1844,1898,1956,1744,1908,1935,1954,1913,2009,1895,1930,1909,1902,1910,1865,1966,1991,1929,1934,1910,1914,1858,1868,1867,1888,1981,1985,1914,1994,2024,1805,1938,1775,2020,1807,1958,1947,1957,1911,2001,2005,1868,1877,1761,1955,1961,1892,1986,1899,1919,1930,1966,1942,1843,1985,1996,1829,1828,1795,1765,1768,1872,1882,1928,1764,1923,1832,1875,2000,1906,1933,1924,1883,1910,1862,1933,1881,1934,1856,1964,1967,1891,1958,1858,1983,1910,1868,1923,1843,1834,1888,1857,1898,1835,1825,1590,1713,1452,1687,1895,1643,1973,1963,1932,1987,2014,1963,1960,1955,1956,2008,1971,1961,1989,1584,1389,1326,1415,1424,1501,1524,1415,1616,1515,1491,1609,1618,1738,1608,1609,1990,2004,1944,1978,1947,1985,1827,1908,1973,1992,2004,1889,1995,1920,1903,1879,1850,1987,2043,2026,1905,1995,1938,1853,1910,1887,1970,2003,1974,1969,2016,1948,1833,1915,1905,1962,1991,1945,1952,1910,1897,1841,1891,1903,1969,2002,1925,1974,1930,1981,1786,1918,1941,2001,1999,1945,1986,1951,1924,1867,1896,1950,1959,1927,1959,1886,1977,1941,1900,1939,1826,1737,1681,1649,1675,1721,1709,1737,1703,1700,1695,1646,1741,1727,1726,1725,1657,1674,1668,1705,1733,1741,1625,1617,1673,1720,1691,1734,1749,1619,1592,1645,1673,1764,1662,1665,1650,1607,1632,1753,1721,1766,1659,1672,1671,1668,1768,1774,1730,1618,1617,1749,1801,1872,1799,1740,1749,1764,1866,1834,1849,1813,1805,1813,1785,1732,1843,1623,1682,1642,1760,1778,1613,1580,1714,1779,1680,1665,1816,1594,1720,1784,1670,1550,1740,1727,1664,1693,1790,1775,1717,1683,1831,1802,1714,1683,1743,1709,1722,1824,1760,1756,1961,1907,2008,1968,1968,1930,1942,1952,1905,1984,1979,1969,1996,1997,1978,2005,1987,1981,1960,1963,1985,1963,1996,2005,1985,1974,1967,1984,1966,1979,2024,1996,1990,1954,1982,1979,1971,1966,1973,1967,1967,1963,1991,1966,1972,1982,1947,1966,1954,1945,1973,1957,1975,1964,1966,1955,1988,1947,1972,1937,1996,1927,1984,1932,1983,1927,1979,1931,1979,1933,1974,1938,1972,1936,1973,1936,1926,1887,1909,1923,1903,1907,1911,1908,1915,1941,1886,1914,1906,1890,1924,1904,1900,1857,1957,1877,1828,1942,1886,1825,1931,1900,1831,1927,1905,1827,1919,1900,1830,1926,1907,1828,1916,1910,1841,1898,1922,1814,1866,1897,1744,1879,1891,1766,1879,1864,1782,1888,1837,1809,1894,1794,1861,1888,1809,1814,1883,1787,1834,1895,1779,1878,1900,1803,1892,1846,1870,1903,1828,1865,1917,1802,1889,1862,1847,1908,1843,1846,1911,1813,1897,1874,1895,1844,1881,1890,1840,1878,1893,1844,1877,1897,1842,1874,1904,1843,1869,1907,1841,1863,1907,1843,1862,1907,1845,1863,1913,1867,1862,1879,1875,1869,1866,1882,1884,1856,1890,1891,1836,1888,1904,1836,1896,1908,1836,1906,1910,1832,1916,1905,1869,1927,1921,1912,1916,1943,1917,1909,1915,1906,1921,1918,1914,1912,1941,1920,1910,1915,1963,2007,1992,1985,1975,1994,1986,1985,1978,2005,1980,1968,1893,1975,1870,1961,1867,1975,1847,1946,1856,1884,1957,1913,1915,1984,1922,1986,1930,1974,1942,1966,1940,1974,1947,1964,1965,1968,1949,1980,1909,1889,1891,1934,1856,1972,1827,1977,1848,1937,1884,1890,1884,1899,1940,1843,1984,1744,1928,1814,1877,1832,1853,1893,1805,1934,1793,1901,1870,1837,1859,1815,1913,1795,1928,1874,2045,2051,2028,1998,2018,2014,2022,2012,2039,2013,2040,2028,2033,2028,2019,1975,1964,1967,2024,2040,2057,2050,2014,2044,2022,1999,2010,2031,2027,2052,2023,2055,2056,2043,2028,1983,1959,2009,2014,2011,2019,2043,2054,1983,1988,2023,1989,1961,1982,2016,2040,2022,2018,2014,1986,2037,1997,1998,1969,1992,2013,2029,2035,2027,2008,1998,2019,1987,1985,1995,1977,1992,2040,2040,2040,2044,2028,2056,1995,2015,2001,1991,1993,2025,2025,2052,2038,2054,2043,2027,2000,2016,2044,2021,2053,2034,2020,2029,2009,2011,1986,1987,2014,1977,1999,1984,1960,1973,1995,1922,1978,1962,1971,1969,1989,2009,1967,1938,2009,1961,1877,1823,1964,2006,2004,1979,2000,1954,1960,1974,1992,1992,1972,1876,1902,1902,1964,1977,1904,1916,1960,1943,1956,1871,1853,1952,2005,1981,1838,1913,1922,1953,1911,1842,1894,1886,1862,1950,1960,1942,1957,1911,1833,1907,1831,1911,1949,1927,1981,1922,1872,1857,1867,1908,1965,1982,1905,1796,1920,1845,1940,1954,1937,1887,1872,1814,1666,1925,1902,1878,1928,1864,1875,1894,1892,1847,1904,1912,1839,1877,1804,1794,1912,1972,1949,1925,1893,1871,1826,1867,1840,1838,1918,1956,1951,1975,1915,1872,1855,1894,2002,1924,2034,2019,2004,1861,1988,2021,2012,2007,1966,1954,1982,2036,1976,1999,1729,1983,2000,2048,1949,1773,2002,2006,2029,1963,1792,2013,2013,2023,2005,2000,1804,1946,2019,2020,2002,2012,2022,2027,1995,2002,2006,1939,2020,1998,1980,1962,2023,2030,1957,1857,1746,1863,1940,1994,1987,1981,2018,1959,1982,1936,1965,1958,1953,1874,1969,1944,1968,1959,1981,1997,2017,1985,1980,1953,1965,1975,2028,1943,1850,1962,1927,2000,1846,1904,1955,1934,1883,1960,1990,2006,1969,1993,2018,2033,2007,1985,1920,1889,1952,1908,1935,1892,1980,1948,1929,1963,1977,2011,1993,1994,1965,1992,1991,2001,1990,1991,1977,1924,1977,1939,1965,1938,1965,1993,1956,1998,2032,1987,2008,1992,1951,2022,1950,1949,1973,1986,1923,2029,1882,1971,1986,1999,1991,1939,1977,2002,2004,2013,1880,1987,1953,2040,1933,2019,1961,1986,2027,1964,1989,2025,1963,2013,2009,1943,2045,1933,1949,1999,1929,2027,2003,1955,1909,1978,1947,1986,1916,1963,1968,1970,1935,1962,1981,2019,1934,1984,1931,1976,1941,1950,1945,1947,1885,1859,1918,2003,1921,1901,1953,1852,1941,1952,1927,1965,2002,1957,1953,2008,1968,1973,2015,1891,1978,1942,2002,2026,1985,2029,2027,2005,1903,2014,1975,1997,2036,2041,2026,2038,2010,1962,2010,1968,2027,2033,2024,2016,1989,2029,2008,2036,2009,2037,2037,2029,2050,2035,2015,1959,2015,1966,2051,2026,2036,2051,2049,2026,1975,2025,1981,2032,2023,2041,2035,2043,2023,1953,1935,1942,1811,1970,1983,1983,1998,2026,2008,2006,2026,1858,2009,1973,1962,1965,2012,2011,1897,2008,1914,1934,1987,2012,2007,1925,2003,1924,1955,1864,1800,1579,1723,1493,1558,1673,1497,1457,1589,1384,1487,1353,1476,1370,1076,1629,1149,1427,1206,1613,1032,1345,1276,949,1266,1444,1418,1094,1351,1548,884,1100,1378,1225,1327,1409,1172,1389,1133,1569,1176,1372,1477,1422,1443,1387,1566,1442,1591,1535,1307,1438,1509,1390,1262,1572,1255,1358,1091,1632,1185,1468,1304,878,1620,1376,1342,1173,1237,1640,921,1099,1407,1278,1483,1169,1272,1315,1165,1637,1274,1460,1499,1266,1647,1403,1519,1533,1402,1610,1275,1488,1548,1238,1535,1288,1341,1333,1155,1603,1252,1443,1249,854,1642,1405,1303,1182,1250,1609,866,1169,1435,1201,1523,1087,1309,1327,1184,1606,1323,1475,1492,1233,1653,1361,1528,1550,1341,1573,1318,1508,1497,1116,1575,1192,1451,1297,1339,1489,1133,1474,1189,856,1576,1387,1169,1245,1331,1449,902,1257,1355,1079,1558,1117,1373,1143,1644,1080,1313,1452,1443,1406,1486,1575,1450,1574,1396,1423,1379,1477,1488,1209,1615,1180,1422,1145,1580,1169,1505,1323,930,1440,1366,1406,1086,1344,1571,1024,1077,1354,1355,1296,1398,1187,1282,1147,1660,1202,1523,1509,1275,1598,1336,1517,1527,1427,1663,1251,1482,1492,1354,1478,1346,1343,1347,1143,1597,1210,1433,1230,841,1589,1360,1314,1180,1289,1595,810,1264,1425,1206,1506,1128,1340,1321,1213,1633,1298,1515,1506,1281,1625,1349,1579,1601,1368,1599,1366,1558,1542,1227,1382,1400,1288,1302,1154,1575,1174,1424,1283,864,1594,1350,1310,1158,1247,1570,829,1243,1406,1181,1448,1094,1310,1341,1264,1576,1138,1487,1561,1376,1603,1419,1567,1551,1466,1590,1360,1565,1571,1255,1275,1573,1271,1314,1133,1595,1189,1419,1305,911,1392,1419,1428,1081,1342,1555,935,1079,1368,1256,1127,1460,1164,1405,1206,1706,1119,1398,1558,1457,1404,1563,1530,1438,1570,1481,1528,1346,1511,1480,1157,1686,1156,1435,1183,1592,1212,1397,1393,965,1281,1382,1436,1107,1294,1281,1418,949,1346,1433,1203,1623,1066,1400,1189,1666,1231,1408,1451,1404,1398,1527,1593,1485,1573,1538,1476,1428,1549,1440,1170,1693,1217,1459,1171,1605,1202,1391,1406,1009,1222,1418,1437,1135,1298,1162,1624,819,1276,1496,1310,1637,1070,1380,1308,1467,1449,1316,1514,1527,1242,1706,1629,1611,1622,1413,1725,1188,1238,1287,1362,1317,1805,1506,1441,1189,1265,1583,1493,1474,1817,1411,1307,1251,1564,1414,1462,1828,1454,1437,1306,1298,1474,1393,1379,1841,1420,1600,1389,1260,1493,1238,1280,1414,1756,1091,1256,1278,1438,1629,1315,1370,1401,1594,1384,1693,1710,1730,1910,1580,1967,1888,1796,1745,1857,1814,1775,1923,1375,1512,1686,1693,1759,1665,1671,1589,1577,751,1782,1995,1966,1763,1568,766,1842,1817,1789,1848,1820,1739,1875,1292,1640,1874,1544,1925,1880,1881,1834,1639,1774,1832,1945,1988,1597,1963,1918,1904,1888,1882,1760,1542,1851,1843,1885,1855,1791,1635,1769,1527,1828,1624,1682,1665,1566,1579,1370,1741,1938,2014,2011,1939,1938,2021,2026,1976,1960,2036,2029,1967,1960,2032,2022,1939,2011,1920,1949,1963,1996,1983,2002,2004,2025,2016,1997,2014,2026,2007,2012,1927,1881,2049,2048,2028,2027,1978,1907,1909,1958,1898,1911,1966,1870,1946,1892,1896,1919,1837,1930,1904,1879,1920,1951,1881,1882,1933,1902,1843,1333,1896,1858,1761,1428,1399,1274,1759,1636,1658,1622,1841,1494,1610,1573,1587,1463,1604,1715,1683,1448,1175,1483,1694,1446,1164,1720,1899,1793,1729,1769,1799,1570,1947,1838,1697,1670,1684,1736,1569,1752,1741,1492,1509,1489,1834,1276,1334,1261,1570,1624,1508,1147,1138,1622,1645,1549,1381,2016,1972,1981,1998,1958,1850,1778,1732,1862,1895,1865,1565,1888,2009,1819,1884,1914,1853,1802,1661,1888,1761,1420,1483,1758,1400,1379,1694,1522,1430,1707,1513,1786,1479,1629,1633,1818,1484,1810,1563,1672,1433,1678,1772,1514,1722,1269,1651,1363,1847,1910,1790,1728,1378,1341,1747,1691,1621,1485,1578,1709,1625,1511,1668,1548,1680,1635,1266,1615,1491,1613,1695,1229,1633,1451,1685,1655,1336,1507,1589,1569,1155,1238,1403,1175,1469,1232,1587,1117,1361,1431,1282,1524,1277,1308,1526,1450,1499,1696,1927,1455,1764,1804,1875,1855,1936,1542,1945,1480,1564,1880,1627,1932,1219,1910,1784,1515,1680,1691,1781,1560,1477,1606,1566,1547,1590,1374,1596,1490,1566,1547,1553,1502,1537,1517,1547,1540,1639,1838,1676,1949,1740,1846,1550,1559,1465,1687,1586,2009,1864,1891,1839,1868,1979,1877,1871,488,610,445,551,841,606,666,587,984,2019,1961,1988,1947,1961,1961,1966,1944,1885,1650,1629,1641,1764,1552,1593,1771,1568,1696,1569,1754,1434,1507,1446,1584,1358,1424,1454,1640,1384,1268,1190,1487,1383,1569,1450,1341,1529,1462,1443,1603,1414,1363,1388,1377,1442,1380,1394,1680,1756,1781,1838,1877,1890,1894,1751,1725,1787,1645,1745,1799,1834,1772,1742,1690,1654,806,807,815,790,1799,1717,1639,1623,1698,1587,1676,1638,1666,1747,1677,1748,1656,1733,1775,1790,1881,1356,1786,1581,1814,1117,1806,1556,1899,1780,1858,1773,1847,1845,1805,1819,1867,1539,1070,1045,1035,1073,1073,1083,1017,1368,1525,1558,1545,1575,1552,1557,1566,1547,1625,1440,1599,1589,1673,1058,1040,1091,1036,1451,1416,1714,1814,1550,1265,1124,1553,1430,1068,1422,1579,1390,1506,1624,1596,1555,1607,1592,1413,1322,802,1026,765,674,940,726,1312,1381,1422,519,582,735,552,858,488,870,714,921,531,520,932,641,869,499,862,663,694,679,542,938,728,922,472,721,655,672,591,291,620,192,606,257,306,373,250,641,207,534,187,493,88,40,598,182,622,217,815,1457,1418,1246,1235,1237,1189,1282,1008,1005,993,957,981,1001,981,1276,1345,1403,1408,1473,1481,1409,1416,1397,1582,1466,1481,1510,1594,1622,1492,1517,1611,1426,1404,1431,1435,1398,1378,1478,1421,1347,1407,1387,1338,1414,931,954,914,929,1084,927,955,943,1051,903,957,899,1219,1397,1446,1333,1428,928,904,949,947,1678,1585,1619,1584,1542,1548,1526,1577,1690,1375,1362,1363,1346,1231,1347,1323,1318,1613,1571,1573,1230,1550,1432,1237,1449,1556,1570,1630,1569,1632,1685,1711,1739,1717,1555,1209,1388,1387,1419,1415,1181,1419,1412,1407,1580,1449,1621,1407,1687,1628,1679,1643,1644,1620,1646,1669,1628,1736,1663,1631,1659,1499,1627,1628,1605,1687,1586,1691,1632,1651,1579,1641,1681,1578,1677,1667,1686,1691,1546,1633,1679,1624,1620,1741,1624,1623,1620,1852,1640,1632,1639,1708,1820,1692,1668,1652,1793,1634,1667,1649,1679,941,974,940,968,1588,1479,1547,1460,1606,1238,1260,1340,1405,1114,1148,1256,1292,1320,1002,897,1076,1376,1177,1120,1078,1278,1097,875,995,1116,1558,1520,1526,1559,1532,1521,1518,1520,1646,1397,1409,1366,1394,1399,1360,1356,1445,1675,1486,1559,1573,1571,1562,1531,1529,1749,1585,1608,1655,1650,1586,1631,1636,1644,1690,1456,1392,1418,1424,1470,1425,1373,1725,1766,1739,1704,1706,1748,1717,1727,1709,1873,1754,1685,1651,1727,1698,1695,1669,1837,1094,904,1320,1061,1094,1066,1257,1122,1070,1046,943,657,636,754,763,1883,1652,1711,1673,1737,1656,1717,1683,1855,1771,1732,1677,1635,1705,1678,1742,1713,1896,1752,1775,1736,1785,1707,1787,1738,1865,1781,1722,1677,1653,1692,1660,1711,1670,1591,1480,1409,1434,1546,1004,993,1003,1412,1801,1776,1824,1872,1674,1821,1809,1846,1703,1241,1187,1242,1720,1231,1006,1056,1580,1678,1625,1590,1630,1496,1650,1582,1607,1646,1488,1446,1433,1341,1561,1454,1442,1351,1577,1657,1444,1671,1296,1474,1449,1530,1436,1671,1626,1582,1644,1612,1609,1612,1708,1567,1473,1470,1409,1391,1478,1413,1428,1585,1806,1803,1846,1872,1691,1812,1812,1870,1667,1616,1658,1628,1570,1660,1649,1606,1721,1584,1472,1441,1516,1437,1495,1442,1458,1608,1842,1854,1852,1712,1883,1801,1853,1813,1734,1640,1586,1634,1522,1644,1607,1614,1661,1544,1455,1450,1379,1533,1468,1450,1466,1732,1792,1820,1870,1675,1860,1815,1863,1781,964,1451,1272,678,994,814,704,1164,677,809,1719,665,688,671,1346,1267,1006,1254,1349,1063,883,1265,1115,1287,1329,1407,1753,1473,1015,1038,1780,1557,1677,1660,1695,1614,1523,1731,1638,1176,1328,1354,1193,1595,1319,1009,998,1014,1358,1113,1106,1095,1098,1467,2043,2035,1999,1999,2029,2012,2013,1976,2031,2040,2022,2015,2017,2007,2010,1955,2000,2025,2027,2010,2008,2021,1984,2016,1963,2020,2028,2032,2004,1981,2011,1997,1961,2020,2051,1891,1918,1889,1899,1911,1867,1857,1873,1873,1900,1889,1859,1856,1842,1830,1900,1893,1661,1684,1655,1670,1678,1643,1635,1635,1790,1651,1655,1644,1637,1664,1631,1600,1746,1448,1449,1414,1420,1448,1436,1374,1368,1623,1411,1459,1622,1401,1443,1524,1638,1537,1323,1575,1550,1605,1393,1628,1477,1670,1298,1416,1373,1755,1840,1548,1577,1678,1589,1585,1497,1692,1676,1543,1564,1658,1718,1726,1562,1573,1637,1521,1533,1559,1578,1542,1543,1562,1529,1534,1505,1535,1728,1524,1666,1688,1635,1567,1748,1872,1545,1518,1879,1935,1751,1717,1736,1947,1940,1931,1967,1934,1960,1908,1911,1896,1804,1842,1887,1992,1878,1867,1851,1832,1783,1762,1785,1804,2016,1960,1979,1954,1921,1911,1912,1917,2019,1864,1906,1874,1834,1805,1811,1790,1815,2036,2001,1994,1971,1945,1938,1940,1924,2015,1813,1813,1778,1750,1774,1785,1726,1799,1949,1854,1798,1802,1830,1831,1821,1800,1825,1473,1442,1474,1438,1414,1445,1410,1392,1809,1973,1932,2019,1933,1944,1879,1933,1904,1906,1849,1929,1986,1948,1941,1923,1918,1917,1929,1910,1976,1541,1525,1569,1622,1582,1644,1541,1501,1938,1806,1804,1761,1760,1708,1743,1718,1861,1312,1333,1310,1328,1403,1316,1368,1363,1626,1500,1461,1531,1571,1554,1493,1455,1506,1686,1614,1603,1609,1655,1543,1657,1377,1355,1333,1300,1242,1220,1221,1335,1896,1897,1863,1888,1900,1883,1865,1878,1959,1892,1875,1840,1881,1889,1889,1872,1849,1786,1388,1402,1356,1415,1497,1484,1472,1560,1713,1681,1690,1738,1641,1613,1576,1532,1190,1525,1561,1594,1625,1767,1691,1701,1711,1576,1461,1493,1488,1438,1325,1418,1425,1690,1454,1532,1506,1461,1555,1508,1526,1449,1679,1499,1535,1475,917,1465,1535,1505,1726,1977,1927,1965,1449,1425,1409,1390,1203,1429,1397,1407,1527,1181,1141,1085,964,1133,1123,1101,1281,1505,1415,1518,1992,1874,1906,1897,1905,1898,1914,1883,1638,1661,1439,1477,1476,1179,939,846,824,900,825,915,808,877,966,947,816,893,969,1000,972,1190,1330,1271,1269,1310,439,513,635,627,226,442,166,1017,1380,690,995,729,1354,1056,943,1304,405,204,442,385,622,1328,1514,1495,1879,1822,1756,1815,1830,1817,1779,1747,1818,1613,1643,1645,1533,1622,1623,1632,1552,1629,1311,1330,1349,1331,1704,1661,1669,1698,1668,1670,1681,1640,1642,1690,1680,1671,1366,1846,1829,1837,1756,1799,1832,1864,1768,1824,1495,1427,1476,1451,1754,1893,1827,1865,1842,1861,1846,1876,1880,1835,1582,1825,950,1040,1134,1186,1514,1999,2000,1954,1946,1956,1950,1883,1885,1903,1952,1939,1937,1938,1921,1905,1953,2017,1667,1686,1751,1826,1818,1763,1662,1612,2015,2056,2048,2033,2054,2035,2053,2051,2057,2051,2055,2037,2041,2053,2050,2050,2048,2002,1880,1914,1824,1841,1840,1850,1838,1918,1909,1913,1863,1855,1847,1856,1842,1866,1768,1340,1290,750,813,759,564,588,746,836,896,487,500,789,824,913,570,348,808,865,848,531,445,769,907,791,425,884,1132,1040,924,392,1070,1147,1099,702,458,1169,1119,1186,504,615,1218,1023,1172,711,1285,1419,1549,1431,1913,1073,1067,1140,1173,1126,1153,1031,1124,1086,1156,1112,1203,1140,1074,1093,1102,1563,1075,1091,1111,1135,1075,1042,1132,1061,1013,980,944,1082,1037,792,792,848,1278,785,463,551,512,544,562,487,564,524,510,478,482,501,513,517,567,826,1473,1463,1500,1500,1511,1507,1518,1485,1399,1061,990,1133,1649,1486,1447,1352,1323,1427,1509,1795,1652,1680,1652,1587,1637,1657,1657,1790,1518,1471,1488,1528,1432,1561,1495,1467,1405,1091,1180,1243,1370,1283,1347,1233,1208,1379,1434,1417,1441,1577,1578,1486,1571,1810,1073,1073,1130,1160,1131,1145,1034,1135,1101,1143,1135,1207,1152,1081,1045,1122,1606,1005,1085,1139,1159,1047,1036,1140,1025,1020,932,979,1045,1030,815,784,870,1339,663,514,559,498,561,533,532,570,488,502,513,465,529,516,524,554,937,1755,1835,1793,1755,1823,1755,1790,1504,1389,1399,1418,1418,1571,1195,1196,1303,1619,1346,1299,1310,1580,1086,1030,1064,1046,1626,1697,1604,1630,1593,1295,1156,1083,1341,1409,1572,1665,1687,1568,1703,1677,1602,1634,1598,1538,1113,1570,980,1640,1778,1849,1861,1789,1625,1683,1706,1754,1594,1753,1827,1601,1570,1489,1579,1524,1509,1591,1553,1364,1632,1612,1616,1609,1566,1580,1547,1621,1686,1612,1793,1724,1380,1544,1814,1729,1519,1471,987,1176,1136,1132,1148,1104,1107,1097,1156,1134,1192,1185,1094,1086,1022,1097,984,1180,1207,1201,345,991,1247,1089,932,1057,1186,1172,1141,443,933,1270,1131,997,1019,1128,1193,1143,624,823,1198,1108,1007,1029,1067,1218,1161,781,791,1150,1158,1085,966,999,1252,1104,911,654,1094,1228,1120,1445,991,1092,1149,1147,1047,1045,1088,1038,999,954,969,1053,1037,811,792,867,1282,850,1197,1126,987,415,1199,1231,1149,928,1114,1123,1186,1195,1263,1118,1159,1236,1110,1274,1175,1140,1231,1169,1293,1122,1191,1176,1176,1344,1090,981,1058,1292,1231,1077,972,1101,1262,1245,1077,956,1127,1335,1159,1047,999,1122,1480,428,536,694,1412,1644,1800,1846,1869,1778,1485,1075,522,524,516,562,515,1253,1211,1059,1358,1476,1074,1223,1494,1217,1032,1317,1524,1094,1219,1654,1803,1844,1707,1856,1749,1769,1891,1751,1730,1883,1735,1814,1793,1753,1887,1750,1830,1728,1898,1735,1864,1753,1737,1915,1663,1823,1890,1754,1746,1811,1830,1715,1861,1862,1728,1899,1720,1750,1897,1746,1752,1806,1760,1815,1822,1857,1676,1904,1740,1844,1784,1748,1898,1749,1830,1820,1798,1749,1815,1879,1703,1748,1883,1704,1911,1767,1754,1918,1745,1726,1810,1916,1736,1810,1847,1680,1955,1028,1266,1101,1259,1289,1138,1271,1061,666,756,854,897,455,533,776,834,935,612,319,834,836,872,523,451,797,910,772,1088,1069,1033,1137,1174,1123,1145,1060,1120,1069,1150,1090,1175,1163,1086,1071,1083,1451,1453,1571,1217,1137,1070,1195,1055,1066,1135,1019,987,996,913,1029,1059,813,799,843,1066,1423,1430,1743,621,524,544,510,544,538,524,561,486,513,508,474,511,532,524,543,997,1597,1666,1580,1676,1702,1607,1637,1707,1670,1725,1775,1642,1574,1608,1668,1674,382,668,1325,309,453,355,1067,1511,2036,2027,2021,2011,2014,2002,1965,2004,2013,2032,2001,2017,2016,1982,2004,1971,1843,1386,1447,1593,1241,1338,1481,1122,1119,1123,1123,1123,1123,1121,462,80,1505,2019,2005,1885,1897,1888,1822,1878,1887,1896,1895,1914,1896,1953,1927,1854,1919,1922,1884,1837,1924,1955,1876,1916,1953,1926,1727,1779,1827,1749,1993,1916,1866,1880,1890,1925,1904,1897,1864,1977,1783,1827,1860,1917,1841,1531,1756,1477,1565,1609,1610,1567,1491,1487,1578,1613,1614,1652,1484,1543,1562,1542,1552,1877,1502,1538,1643,1583,1931,1794,1759,1815,1882,1846,1846,1850,1871,1323,1276,1325,1367,1307,1317,1355,1232,1658,1436,1453,1424,1515,1471,1440,1415,1611,1443,1468,1455,1457,1522,1482,1456,1437,1602,1454,1446,1437,1512,1464,1479,1434,1565,1500,1437,1420,1468,1494,1453,1427,1408,1589,1415,1401,1436,1458,1483,1402,1427,1449,1555,1360,1362,1471,1463,1454,1370,1424,1591,1384,1387,1408,1459,1458,1435,1410,1415,1615,1402,1407,1501,1492,1473,1442,1409,1631,1456,1440,1459,1484,1486,1474,1439,1396,1574,1347,1268,1354,1382,1341,1331,1296,1525,1358,1330,1309,1376,1326,1373,1316,1277,1571,1321,1281,1335,1352,1315,1320,1340,1364,1556,1468,1444,1473,1470,1506,1465,1386,1646,1420,1401,1463,1503,1463,1456,1402,1439,1590,1363,1398,1437,1435,1468,1394,1397,1626,1419,1411,1380,1464,1491,1423,1407,1412,1626,1367,1386,1425,1505,1453,1426,1422,1586,1459,1424,1408,1461,1518,1448,1440,1403,1810,1695,1830,1717,1905,1635,1714,1792,1832,1830,1796,1695,1675,1768,1768,1731,1747,1864,1770,1903,1842,1885,1857,1889,1859,1850,1926,1823,1784,1796,1814,1791,1780,1780,1954,1783,1789,1721,1775,1741,1756,1711,1771,1898,1820,1789,1737,1781,1747,1749,1742,1914,1886,1833,1833,1808,1785,1860,1798,1805,1923,1719,1767,1736,1747,1710,1755,1777,1844,1719,1914,1837,1829,1839,1794,1759,1782,1775,1867,1676,1749,1723,1564,1766,1732,1628,1767,1830,1723,1773,1710,1614,1685,1593,1821,1918,1631,1639,1656,1638,1686,1678,1699,1650,1756,1675,1604,1626,1703,1703,1704,1664,1784,1801,1804,1745,1787,1827,1787,1819,1776,1858,1800,1725,1738,1771,1799,1772,1785,1764,1856,1803,1889,1864,1858,1923,1964,1803,1837,1655,1665,1775,1746,1717,1789,1712,1714,1810,1650,1783,1804,1791,1819,1883,1710,1819,1400,1518,1513,1536,1502,1485,1517,1504,1988,1981,1930,1967,2008,1943,1976,1978,1907,1944,1990,2029,1962,1931,1969,1988,2026,1763,861,40,39,40,318,40,40,39,166,1931,1780,1836,1842,1815,1839,1799,1791,1863,1447,1459,1428,1462,1440,1455,1417,1449,1908,1829,1822,1757,1784,1770,1811,1775,1539,892,40,40,38,40,317,40,40,38,780,1113,1601,1720,1726,1746,1768,1729,1700,1749,1752,1791,1158,1218,1471,1481,564,1560,1503,1314,1007,1782,1711,1621,920,38,40,40,318,40,38,40,170,1390,1420,1074,1199,1602,1669,1599,1684,1674,1668,1653,1630,1630,383,40,39,40,1018,703,69,758,1885,1941,1897,1681,1610,1632,1655,1670,1713,1732,1704,1720,1726,1734,1732,1725,1715,1680,1644,1280,997,871,588,1813,1776,1736,1707,1756,1789,1694,1743,1865,1875,1791,1896,1842,1860,1846,1868,1796,1855,1724,1658,1807,1628,1783,1743,1741,1828,1801,1944,1868,1878,1882,1865,1928,1839,2013,1377,1163,1166,1028,1104,1426,1365,1356,1386,1422,1236,1152,1117,1154,1109,1232,1519,915,795,908,1008,1250,1733,1367,771,619,777,1247,1624,1710,1702,933,1195,1470,1575,1246,1031,815,964,842,500,788,1176,1360,1258,1149,1365,1370,1398,1323,1307,1855,1899,1861,1918,1853,1838,1928,1868,1832,1907,1927,1932,1898,1854,1881,1950,1487,958,937,967,1286,1945,1895,1708,1987,1264,1158,1211,1213,1838,2027,1966,2030,1990,1922,1893,1914,1868,2020,2043,2044,2031,1844,1812,1763,1856,1810,1810,1716,1806,1815,1949,1935,1941,1925,1725,1309,1287,1572,1494,1179,1263,1209,1377,1191,1244,1219,1445,1639,1165,1202,1642,1764,882,707,1323,1304,1068,751,976,1552,1455,736,870,1689,1723,1369,1383,1608,1894,1738,1773,1794,1806,1767,1843,1855,1821,1659,1678,1689,1665,1843,1757,1818,1774,1708,1427,1429,1432,1569,1458,1376,1466,1493,1568,1491,1444,1532,1624,1500,1458,1500,1835,1973,1968,1934,1968,1972,1989,1970,1996,1895,1755,1769,1736,1831,1600,1556,1569,1778,1917,1843,1850,1918,1796,1834,1766,1830,1987,1866,1840,1892,1913,1786,1797,1797,1845,1628,1605,1537,1689,1162,1255,1476,1524,1166,1246,1184,1499,1371,1180,1300,1656,1751,1791,1774,1774,1918,1797,1782,1767,1875,1831,1825,1822,1681,834,886,846,699,1310,1180,1151,1163,1288,1201,1177,1206,1336,1339,1421,1347,1420,1837,1841,1860,1833,1884,1821,1841,1846,1926,1893,1927,1922,1931,1907,1931,1949,1942,1786,1832,1839,1785,1817,1862,1723,1591,1710,1710,1885,1810,1889,1868,1826,1858,1884,1611,1485,1411,1474,1547,1533,1767,1661,1551,1590,1654,1713,1633,1780,1786,1752,1805,1865,2038,2057,2056,1908,1983,1987,1967,1965,1954,1950,1934,1862,1385,1195,1475,1063,1553,1780,1741,1758,1734,1566,1579,1534,1514,1844,1768,1798,1730,1845,1797,1817,1805,1783,1704,1725,1695,1718,1570,1802,1797,1665,1390,1001,1099,943,1462,983,916,864,1322,1003,1177,1025,1107,728,580,540,542,885,766,693,740,829,994,1307,1221,1028,1271,1362,1454,1370,1335,1475,1500,1727,1367,1365,1621,1587,1446,1643,1612,1675,1538,540,239,180,221,909,493,441,435,1342,2037,2041,2055,2047,2044,2040,2052,2008,2053,1938,1921,1959,1884,1907,1933,1905,1838,1406,1390,1445,1410,1237,1187,1144,1062,1395,1422,1429,1452,1599,1862,1814,1807,1881,1871,1809,1783,1866,1852,1751,1747,1716,1728,1728,1761,1690,1670,1385,1436,1512,1419,1444,1483,1571,1484,1710,1874,1897,1871,1730,1246,1254,1216,1426,1852,1803,1768,1844,1498,1450,1432,1461,1764,2023,2021,2030,2052,2002,1998,1970,1999,1579,1504,1484,1491,1791,1673,1672,1689,1882,1982,1980,1983,2015,1706,1700,1739,1738,2046,2049,2038,2056,1686,1272,1291,524,523,536,538,1225,1410,1411,1344,1079,1434,1400,1547,1207,1476,1570,1647,1440,1414,1560,1845,1667,1884,1714,1252,1276,1290,1384,970,958,1042,944,1233,869,1053,835,1000,1930,1968,1943,1963,2016,2019,1993,1993,2010,1660,1471,1579,1632,1761,1661,1699,1613,1822,1511,1516,1641,1774,1637,1734,1686,1686,1440,1694,1631,1435,1484,1576,1559,1464,1729,1901,1888,1837,1894,1874,1883,1850,1881,1788,1482,1456,1556,1946,1981,1966,2012,1985,1821,1787,1809,1820,1855,1905,1918,1855,1550,1441,1443,1370,1464,1472,1543,1481,1503,1523,1757,1691,1605,1536,1594,1559,1493,1697,1737,1599,1755,1713,1692,1655,1808,1715,1643,1675,1550,1690,1647,1650,1512,1702,1666,1528,1482,1582,1497,1699,1377,1703,1717,1461,1523,1517,1541,1465,1528,1651,1662,1398,1312,1218,1546,1589,1711,1553,1525,1695,1415,1681,1761,1752,1554,1605,1273,1242,1159,1286,1325,1299,1196,1577,1544,1523,1296,1407,1191,1165,1165,1274,1259,1406,1446,1361,1396,1579,1305,1237,1406,1856,1821,1718,1454,1225,971,1017,871,1028,1105,1190,1317,1362,1627,1580,1638,1773,1729,1137,1063,1040,935,784,652,1341,1015,1404,1221,1266,1282,1471,1579,1729,1838,1979,1683,1777,1757,1507,1267,1201,1316,1274,1326,1301,1326,1222,1230,1312,1257,1243,1772,1570,1698,1652,1511,1392,1575,1740,1610,1517,1231,1183,1318,1205,1276,1369,1506,1785,1490,1265,1358,1267,1264,1098,1263,1402,1497,1721,1672,1649,1497,1383,1492,1309,1686,1525,1505,1255,1294,1248,1188,1239,1293,1579,1751,1683,1726,1524,1581,1739,1577,1612,1563,1301,262,673,1596,1334,262,637,1582,1309,262,615,1572,1347,272,591,1584,1349,272,564,1563,1370,272,559,1282,1244,1294,1286,1403,1279,1311,1258,1432,1282,1280,1331,1385,1334,1287,1343,1304,1406,1483,1242,1230,1265,1253,1261,1232,1284,1510,1219,1213,1202,1232,1174,1166,1218,1230,1522,1267,1263,1265,1264,1284,1253,1257,1434,1838,1729,1777,1674,1635,1683,1924,2017,1203,1344,1332,1394,1347,1418,1297,1322,1360,1345,1395,1335,1375,1383,1403,1357,1698,1675,1610,1575,1664,1586,1579,1526,1292,1381,1361,1377,1539,1485,1515,1507,1639,1857,1735,1618,1609,1613,1586,1616,1482,1316,1366,1385,1389,1532,1509,1540,1468,1587,1814,1803,1643,1575,1583,1620,1618,1525,1358,1342,1390,1394,1513,1496,1535,1426,1593,1761,1835,1658,1571,1582,1632,1590,1522,1398,1289,1407,1400,1488,1543,1554,1409,1570,1715,1735,1194,1249,1061,865,899,1057,989,1051,1116,1270,1201,1134,921,999,1000,1100,1629,1195,1202,1053,851,861,1073,1043,1040,1134,1276,1204,1149,910,969,1060,1058,1773,1946,1907,1953,1954,1978,1928,1955,1882,1860,1773,1788,1890,1888,1963,1932,1937,1463,1957,1941,1951,1980,1993,1976,1931,1951,1955,1751,1760,1753,1760,1771,1771,1848,1758,1810,1778,1788,1798,1793,1607,1964,1970,1913,1898,1895,1974,1695,689,826,1922,1939,1999,1977,1979,1949,1998,1955,1973,1970,1966,1981,1979,1947,1975,1931,1952,1902,1591,1552,1568,1559,1594,1545,1571,1598,1746,1628,1674,1673,1582,1862,1795,1823,1811,1759,1506,1593,1498,1639,1645,1758,1637,1652,1691,1648,1740,1729,1862,1822,1819,1869,1860,1649,1723,1583,1694,1840,1794,1866,1835,1664,1595,1597,1526,1659,1651,1768,1607,1755,1711,1798,1743,1780,1632,1549,1744,1709,1722,1523,1854,1703,1705,1625,1811,1699,1630,1661,1631,1716,1515,1575,1667,1710,1650,1571,1344,1902,1865,1091,1774,1936,1888,1948,1589,2020,2009,2014,1602,1640,1365,1133,1262,1169,1431,1577,1592,1501,1481,1493,1491,1500,1515,1555,1240,1001,883,1032,1329,1104,966,1118,1058,1625,1851,1840,1901,1758,1891,1773,1827,1891,1852,1630,1605,1672,1678,1811,1754,1661,1900,1839,1830,1871,1742,1912,1763,1848,1869,1827,1679,1637,1731,1631,1786,1776,1703,1880,1739,1930,1770,1909,1808,1902,1857,1868,1955,1916,1994,1977,1894,1963,1961,1965,1995,1915,1707,1716,1773,1784,1849,1868,1808,1712,1674,1325,1276,1638,1523,1736,1324,1045,1118,1021,677,283,1092,1286,1273,1343,1320,1427,1281,1337,1346,1323,1493,1299,1312,1309,1386,1367,1344,1330,1313,1513,1442,1451,1114,1570,1651,1877,1961,2033,2040,1999,2003,1985,1935,1708,1627,1524,1505,1697,1579,1714,1710,1737,1767,1752,1647,1744,1605,1580,1591,1646,1458,1754,1875,1929,1843,1658,1701,1779,1979,1962,1874,1748,1697,1840,1934,1851,1788,1448,1778,1929,1892,1904,1650,1689,1909,1979,2010,1949,1779,1632,1870,1873,1884,1828,1472,979,980,982,1273,1451,1581,1601,1660,1611,1643,1652,1700,1467,1940,1697,1719,1736,1603,1724,1646,1624,1697,1689,1879,1770,1743,1758,1740,1686,1777,1611,1677,1696,1735,1724,1611,1670,1656,1607,1925,1877,1856,1935,1954,1918,1908,1727,1723,1720,1688,1707,1941,1908,1912,1895,1899,1989,1905,1942,1947,1942,1839,1788,1790,1788,1841,1961,1874,1916,1886,1917,1852,1874,1795,1311,1073,1357,1698,1609,1668,1605,1849,1872,1843,1864,1830,1882,1826,1826,1925,1826,1900,1895,1232,544,571,714,1249,1053,1296,1247,1216,975,1811,1713,1653,1547,1736,1607,1634,1692,1675,1344,1714,1500,1362,1126,1572,1621,1716,1740,1711,1695,1761,1589,1613,1474,1337,1543,1472,1529,1455,1484,1436,1397,1466,1392,1590,1605,1809,1822,1859,1877,1853,1842,1821,1889,1835,1820,1828,1917,1891,1883,1868,1864,1967,2020,1964,1920,1892,1914,1934,1920,1917,1929,1945,1908,1867,1874,1839,1909,1888,1809,1550,1486,1429,1741,1623,1617,1655,1609,1620,1646,1612,1725,1642,1653,1655,1641,1626,1657,1634,1622,1747,1662,1638,1633,1632,1633,1635,1653,1813,1858,1882,1844,1862,1850,1849,1866,1842,1936,1850,1843,1824,1860,1838,1848,1842,1933,1880,1851,1847,1860,1857,1830,1862,1889,1761,1344,1434,1431,1343,1425,1433,1598,1391,1350,1426,1485,1405,1408,1714,1872,1862,1839,1761,1814,1807,1916,1895,1715,1704,1724,1713,1724,1686,1741,1661,1693,1589,1772,1725,1670,1762,1750,1692,1613,1701,1833,1841,1806,1881,1645,1743,1868,1895,1878,1843,1746,1680,1778,1782,1790,1787,1400,1709,1696,1650,1839,1644,1659,1783,1795,1812,1765,1768,1631,1715,1633,1663,1771,1457,1169,1252,1223,1251,1322,1208,1218,1652,1607,1506,1628,1694,1607,1524,1576,1588,1510,1597,1512,1833,1840,1938,1884,1859,1119,1780,1428,1442,1769,1819,1790,1739,1703,1521,1494,1659,1739,1739,1609,1330,1310,1917,1841,1713,1324,1643,1409,1480,1669,1411,1706,1499,1461,1498,1536,1529,1563,1477,1352,1504,1530,1598,1520,1495,1505,1584,1589,1491,1565,1367,1469,1439,1495,1836,1837,1868,1802,1817,1830,1786,1732,1736,1481,1816,1737,1732,1792,1629,1755,1770,1694,1785,1931,1898,1860,1883,1739,1892,1746,1783,1758,1603,1752,1724,1786,1678,1707,1734,1777,1731,1705,1765,1714,1718,1655,1658,1675,1776,1656,1791,1671,1755,1690,1690,1711,1726,1691,1708,1646,1805,1595,1440,1464,1748,1757,1634,1715,1665,1433,1520,1525,1563,1386,1494,1530,1501,1624,1797,1735,1683,1785,1637,1743,1754,1739,1606,1668,1652,1685,1612,1599,1629,1709,1629,1696,1640,1619,1700,1632,1670,1645,1744,1645,1653,1636,1680,1631,1653,1646,1679,1678,1648,1659,1652,1713,1640,1607,1604,1777,1606,1672,1669,1789,1663,1658,1626,1627,1707,1601,1671,1672,1808,1617,1615,1625,1682,1649,1846,1823,1693,1616,1762,1828,1625,1713,1793,1823,1743,1836,1920,1864,1905,2021,1955,1950,1945,1955,1786,1848,1926,1986,2007,2006,1996,1864,1908,1863,1833,1870,2001,2021,2005,2006,1967,1975,1904,1899,1894,1927,1913,1934,1954,2030,1699,1876,1887,1911,1857,1804,1578,1608,1895,1815,1807,1592,1619,1620,1625,1634,1807,1361,1370,1341,1342,1439,1541,1438,1407,1463,1490,1490,1470,1413,1417,1540,1507,1318,1734,1710,1763,1714,1664,1703,1694,1758,1650,1695,1708,1787,1712,1641,1668,1721,1642,1713,1665,1694,1650,1757,1695,1668,1621,1720,1659,1645,1639,1611,2009,1862,1899,1947,1888,1917,1886,1904,1939,1771,1772,1808,1855,2012,1987,2025,2053,2027,2037,2030,2018,2021,2046,2030,2042,2056,2048,2053,2046,2033,1936,1854,1870,1942,1913,1901,1876,1862,1813,1475,1504,1369,1617,1695,1634,1545,1583,1637,1534,1611,1552,1463,1503,1620,1590,1485,1627,1508,1403,1548,1437,1725,1768,1888,1719,1656,1624,1743,1934,1862,1878,1796,1763,1692,1825,1826,1861,1513,2016,1957,2027,1921,1911,1911,1651,1749,1670,1773,1694,1771,1798,1753,1664,1785,1687,1694,1681,1716,1336,1507,1479,1525,1551,1504,1523,1531,1489,1562,1500,1506,1513,1542,1501,1530,1521,1524,1312,1351,1272,1275,1834,1926,1920,1896,1905,1963,1932,1934,1978,1370,1284,1297,1331,1365,1300,1292,1441,1667,1446,1453,1596,1679,1475,1555,1603,1629,1778,1651,1691,1681,1642,1660,1677,1679,1794,1239,1293,1285,1242,1304,1273,1200,1171,1471,1136,1000,1171,1145,1263,1002,1254,1500,1230,1317,1266,1174,1306,1219,1410,1286,1640,1373,1323,1298,1372,1303,1280,1312,1614,1825,1490,1672,1727,1657,1538,1434,1639,1957,1689,1015,1269,1155,1317,1188,1379,1963,1941,1642,1715,1831,1814,1771,1522,1926,1477,415,693,504,501,556,453,526,492,792,911,1311,1443,1317,1201,1160,589,862,370,1364,1407,1532,1475,1409,1283,437,1558,962,1377,1260,1450,1369,1233,1189,1706,1806,1733,1755,1800,703,77,844,809,737,608,593,453,812,546,628,1175,899,825,1399,1433,1394,1419,1424,1464,1649,1697,1626,1641,1559,1555,1828,1680,1228,1090,1194,1211,1308,1324,1239,1247,1436,1494,1597,1609,1670,1654,1391,1341,1442,1140,25,30,25,191,851,1026,966,1239,1621,1659,1609,1615,1369,1503,1561,1598,1530,1601,1893,1909,1919,1925,1884,1891,869,982,1478,1465,906,925,1225,1277,1439,1440,1488,1507,1529,1571,1730,1773,1528,1594,1500,1572,1573,1525,1553,1617,2053,2057,2035,2022,1871,1887,2036,2008,1744,1839,1882,1902,2016,2028,2010,2025,2008,2023,1999,2000,2048,2048,1727,1765,2004,1997,2007,1989,1664,1637,1234,1242,1195,1277,1974,1977,1688,1733,1883,1910,1762,1789,1757,1791,1956,1954,1982,1965,1961,1978,2029,1943,1529,1555,1506,1534,1543,1543,1569,1534,1339,1397,1286,1327,1281,1273,1321,1388,2011,2013,1987,1966,2009,1983,1937,1901,2009,1912,1703,1682,1645,1686,1642,1564,254,286,1179,1376,1352,1095,1003,1011,1050,1080,1592,1735,1572,1677,1712,1712,1512,1526,1572,1605,1540,1565,1505,1483,1342,1414,1066,1096,1306,1332,1234,1296,1455,1434,1582,1610,1446,1459,1374,1396,925,973,1578,1570,897,1042,1280,1366,1480,1435,1480,1531,1206,1228,1445,1489,1652,1669,1833,1856,1762,1815,1564,1597,1601,1638,1579,1596,1521,1538,1513,1501,1209,1357,1541,1564,1381,1396,1377,1407,1380,1417,525,607,410,499,1478,1535,1607,1598,1400,1461,1535,1530,1415,1364,1145,1187,1285,1343,1519,1462,1069,906,281,486,1766,1861,1777,1802,1549,1498,957,1029,1587,1567,1546,1577,1568,1577,1569,1630,1823,1814,1791,1797,1842,1849,1830,1823,1364,1412,1379,1366,1395,1456,1674,1697,1571,1563,1482,1471,1555,1533,1467,1546,1886,1919,1548,1460,634,651,856,1025,1268,1531,1670,1722,1487,1530,1402,1374,1176,1038,666,790,820,859,622,667,1503,1372,513,527,485,635,1769,1811,1100,1132,1051,1089,1359,1358,1146,1001,913,985,1440,1470,1440,1445,1433,1494,1700,1742,1644,1707,1868,1891,1548,1510,975,1018,1155,1183,925,961,883,942,1001,1056,1212,1206,499,509,633,658,498,503,612,637,509,523,628,656,522,530,607,629,442,449,549,729,1893,1810,1042,1083,1031,1079,1028,1084,1083,1179,1810,1706,1677,1725,1634,1673,1731,1641,1123,1237,1655,1646,1688,1731,1881,1745,270,321,289,357,195,226,295,366,71,275,25,144,148,221,241,224,190,400,1412,1491,1574,1621,1070,1093,1068,1109,1186,1232,1481,1509,1457,1517,1858,1857,1694,1705,1442,1533,1627,1671,1396,1442,1281,1289,1503,1630,1643,1141,1642,1453,1472,1494,1461,1196,1442,1462,1395,1530,1524,1506,1415,1008,1316,1363,1367,1150,1332,1150,1143,1061,1579,1722,1892,1856,1749,1173,1186,1298,1177,930,993,1071,1215,1494,1673,1628,1639,1670,1658,1666,1719,1693,1686,1622,1616,1700,1704,1650,1671,1679,1667,1713,1676,1727,1640,1572,1678,1691,1699,1648,1265,1187,1475,1526,1674,1844,1908,1940,1854,1692,1193,1155,1172,1210,1881,1870,1892,1892,1834,1880,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2056,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2038,2016,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,1974,2048,1974,1877,1341,1376,1787,1255,1126,1639,1344,1210,797,851,781,813,900,1363,2048,1999,1971,2048,2048,2048,2048,2048,2002,2048,2048,2005,2048,1946,2048,2048,2048,2048,2048,2048,2048,1889,1940,1944,1952,1949,1942,1948,2006,1941,2048,2048,2048,2048,2048,1896,1873,2048,2048,2048,2048,2000,1982,1970,2048,2048,2007,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,1944,2048,2048,2005,2048,1871,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,1941,2048,1873,2048,1895,2048,2000,1935,1945,1945,1946,1815,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,1965,2048,1962,2048,2004,1942,1881,2038,1997,1943,1830,2048,2048,2048,2001,2048,2048,2048,2001,2048,1990,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,1942,2048,2048,2048,2048,2048,2048,1941,2048,2048,2048,2048,2048,2048,2048,1944,1950,2048,1862,2048,2048,2048,2048,2048,2048,2048,2048,1990,2048,2048,1953,2048,2048,1972,1961,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,1887,2008,2048,1998,2005,2048,1877,1874,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2008,1868,2008,1999,1942,2048,1884,1889,2048,2048,2048,2048,1985,2048,1931,1879,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,1999,2048,2048,1758,1839,1697,2048,2048,2048,2048,1932,2048,2048,2048,2000,2048,2048,1940,2048,1946,2048,1842,2048,1999,2048,2045,1740,2048,1873,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,1948,2048,2048,2048,2048,1870,2048,2048,1966,2048,2003,1953,1965,2048,1997,2048,1951,2048,2048,2048,2048,2048,2048,2003,2048,1960,2048,2048,2048,2048,2003,2048,2048,2048,2048,2002,2053,2048,2048,2002,2048,1870,2048,2048,2048,2048,2002,2048,2048,1981,2048,2048,2048,2001,2048,1955,2048,1930,1944,1931,1930,2048,1951,2048,2048,2048,1812,1951,1954,1947,2048,2048,2048,2048,2057,2003,2048,1874,1943,1885,1943,2048,2048,2048,2048,2048,2008,2048,1951,2018,1968,1988,1789,2048,2048,2048,2048,2048,2048,2002,1891,2048,2048,2048,2003,2048,2048,2048,1951,2048,1927,1950,2048,2048,2048,1999,2048,2048,2006,2048,2048,2048,2003,2048,2048,2048,2048,2007,2048,2048,1938,2048,2048,2048,2048,1866,2048,2048,2048,2048,1961,2048,2048,2048,1975,2048,2005,2048,1995,1875,2048,1942,2048,2048,1757,2048,2048,2009,2048,2048,2048,2003,1964,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,1959,2048,2048,2005,2048,2048,2048,2048,2048,1868,2048,1873,1724,2048,2048,2048,2048,2048,2048,1109,1942,2048,2048,2048,2003,2048,2048,1937,2048,2048,1723,2048,1968,2048,1859,2048,1878,2048,1869,2048,2048,2048,1769,2048,2048,2048,2048,2048,2003,2048,2048,1947,2048,2048,1939,2005,2048,1935,2048,2048,2048,1953,1944,1912,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,1949,2048,2048,2048,1950,2048,2048,2048,1246,2048,2048,2048,2048,2001,2048,2048,2048,1999,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,1999,2048,2048,2048,1952,2048,2048,2048,2048,2004,2048,2048,2038,1997,2048,2007,2048,2048,2048,2048,2014,1753,1870,1940,2048,1955,1924,2048,1999,2048,2048,2048,2048,1874,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1875,2048,1879,2048,2048,2048,2048,1872,2048,2048,2048,2048,2048,2048,1877,2048,1688,2048,1875,2006,1669,2048,1999,2001,2048,2048,1944,2048,1958,2002,2048,1875,2048,1963,2048,1938,1954,2048,1998,1941,1956,2048,2048,2048,2048,1999,2048,2048,1954,2048,2048,2009,2048,2048,2007,1959,1956,2048,2048,2048,2005,2048,2048,2048,2048,1999,2048,2048,2001,2048,2048,1935,2048,1936,1945,2048,2048,1969,2048,2006,2048,2002,2048,1882,1959,2048,2048,2007,2008,1883,2048,2048,1868,2048,1875,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,1983,2014,2048,2048,1963,2048,2048,1894,2048,2048,2048,1968,2048,1933,1938,2006,2011,2048,1816,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2008,2048,2005,1943,2048,2048,2048,2048,2048,2048,1941,2048,2048,2048,2048,2048,2048,2002,2048,2048,1948,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,1957,1979,1943,2001,2048,2048,2048,1841,1996,2048,1947,2048,2048,2048,2003,2048,2048,2048,2048,2048,1969,2048,2048,2048,2048,2048,1940,2048,2048,2048,2048,1978,2004,2048,2048,1964,2048,2048,2003,2048,2048,2003,2048,2048,2004,2048,2048,1878,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2004,1941,2005,2048,2007,2048,2048,1997,2048,1968,1707,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,974,1714,2048,1938,2048,1770,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2006,2048,2048,2048,1894,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,1948,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,1870,2048,2048,2048,2048,2048,1846,2048,2048,2048,2048,2048,2048,2048,2048,1871,2048,2048,2048,1876,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,1861,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2003,2048,2048,2048,2004,2048,1939,2048,2048,2048,1774,2048,2048,2048,2048,2001,1755,1682,2048,2048,2048,1872,2048,2048,2048,2048,2048,2048,2048,1999,1965,2048,1905,2002,1985,2048,2048,1868,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2007,2048,2048,1871,2003,2012,2048,1864,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2004,2048,1881,2048,1871,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,1999,2057,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,1999,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,1886,1974,1980,1872,2048,2048,1947,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,1938,2048,2048,2048,2048,1948,2048,2048,2048,1948,2048,2048,1943,2048,2048,2048,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2048,2048,2002,1971,2048,2048,2048,2048,2008,2048,1872,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2055,2048,2048,2047,1996,2048,2048,1978,2048,2048,1915,2048,2048,2048,2048,2048,2048,2054,2048,2048,1940,2048,2048,1605,2048,2048,1989,2048,2048,2048,2048,2048,2048,2048,2048,1939,2048,2048,2048,2048,2048,1746,1810,2048,2007,1942,2048,2048,2048,2048,1978,2048,2002,2048,1923,2005,2048,2048,2048,1911,2048,2048,1947,1993,2048,2057,2048,2057,1987,2048,1998,2048,2048,1887,1615,2048,1997,2048,2048,2054,1984,2048,2048,2048,2048,1974,2048,2048,2048,1969,2048,2048,2048,2048,2048,1838,2048,2048,2048,2048,2048,2048,2054,2048,2048,2048,2048,1998,2048,1997,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,1992,2048,1997,2048,2030,2049,2048,2048,2037,1864,2048,2048,1856,2048,2055,1606,2048,2048,2048,2048,2048,1970,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2054,2048,2056,1996,2048,2048,2048,2048,1998,2048,1997,2048,2048,1994,1997,2048,2048,1944,2048,2048,2048,2048,2048,2048,1999,2048,1934,2048,1990,2048,2048,1988,2048,2048,1995,2048,2048,1986,2048,1995,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2056,2038,1947,2048,2048,2048,2048,2048,1995,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2056,1947,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2038,2032,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2022,2051,2048,2048,2048,1961,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,1956,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2052,1795,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,1999,2048,2048,1999,2048,2002,2048,2048,2048,2002,2048,2048,2048,2044,2056,2008,2048,2048,2048,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1379,1057,1116,1126,1293,1809,724,694,1521,2048,2048,590,34,34,34,34,34,252,493,395,516,577,660,658,588,560,630,590,654,502,665,694,581,658,609,785,801,726,784,672,721,1153,1019,892,927,963,930,941,981,955,962,1027,944,722,1116,1301,1181,1325,1279,1382,1160,1139,1152,1139,1175,1133,1165,1141,1168,1044,945,1377,1502,1108,819,787,719,1059,1334,1179,1326,839,270,97,102,114,238,48,117,48,48,48,112,49,105,169,110,47,47,102,47,47,43,97,47,47,47,110,44,50,50,180,45,44,42,41,47,121,48,125,48,48,70,79,47,47,47,98,45,45,45,45,45,98,45,41,39,50,108,50,50,93,53,110,50,49,46,43,93,46,46,46,98,46,46,46,46,47,108,47,45,45,96,45,45,45,97,45,227,1096,1163,47,47,925,1191,159,50,778,1213,343,904,1976,1982,2048,1973,1976,2048,1976,1977,2048,1978,2048,1982,2048,1976,2048,2048,1973,2048,1981,2048,1976,2048,1976,2048,2048,1975,1981,2048,1973,2048,1980,2048,2048,1975,2048,1977,2048,1978,2048,1976,1974,2048,1977,2048,2048,2045,2005,1972,1980,2048,1977,1980,1980,1974,1982,2048,1976,2048,1978,1977,2048,1971,2048,2048,1975,2048,2048,1976,1980,1979,2048,2048,2048,1993,1979,2048,1975,2048,2048,1975,2048,2048,1978,2048,2048,1977,2048,1984,2048,2048,2048,2048,1975,2048,1972,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,1982,2048,1978,1978,2048,1975,1978,1975,1978,1982,2048,1980,1982,1979,1979,2048,1975,2048,1973,2048,1976,1978,1977,2048,1982,2048,1977,1982,2048,1975,2048,2048,2048,1976,2048,1980,2048,1979,2048,1975,2048,1977,1979,1980,2048,1979,2048,1973,2048,2048,1980,2048,2048,2048,1970,2048,1978,2048,2048,1982,2048,1980,2048,1974,2048,2048,1977,2048,2048,2048,1976,2048,1975,2048,2048,1976,1978,2048,1974,1978,2048,1980,2048,2048,1973,2048,1977,1972,2048,1977,1977,1975,2048,1980,2048,1974,1978,1971,1975,1984,2048,1979,2048,1974,1977,2048,1973,2048,2048,2048,2048,1972,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2041,1581,2048,2048,2048,2048,2048,1425,2048,1974,2048,1971,1977,1982,2048,2048,2048,1980,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,1977,2048,2048,2048,1975,2048,2048,2048,1973,2048,2048,2048,1971,2048,2048,2048,1980,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2030,2027,2048,2048,2048,2048,2048,1976,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2023,1786,1975,1974,1973,1977,1977,1978,1978,1979,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,1891,1980,1978,1974,1978,1978,1977,1975,1974,1976,1980,1979,2048,1972,1979,2048,1976,1980,1974,1975,1886,1976,1888,1980,2048,1977,1973,1976,1974,1973,1978,1978,1891,2048,1974,1972,1980,2014,2042,1975,1978,2048,1979,1984,2048,1984,2048,1978,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,1982,2048,2048,1984,2048,2048,2048,2048,1980,2048,2048,1979,2048,2048,1978,2048,1980,1980,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,1982,2048,2048,1972,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,1977,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2053,2001,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,1976,2048,1983,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,1985,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2006,2050,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,1998,2056,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,1977,2048,1979,1976,1981,2048,1974,1975,1975,1998,2056,1972,1975,1976,1969,1917,2048,1978,2048,2048,2048,2048,1969,2048,1974,2048,1969,2048,1972,2048,2048,2048,1971,2048,2048,1975,2048,2048,1947,2048,2048,1965,1979,2048,2048,1974,2048,2048,2048,1977,2048,2048,1976,2048,2048,1971,2048,1984,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,1920,1865,1825,2048,2053,1963,2048,1978,1963,2048,2048,1971,2048,2048,1975,2048,2048,2048,2048,2048,1979,2048,1946,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,1995,2048,2048,2048,1981,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,1976,1975,1972,1884,2048,2048,1974,2048,1969,1983,2022,2027,1976,1967,1981,2048,1980,2048,2048,1968,2048,2048,1964,2048,1979,2048,1974,2048,1958,2048,1973,2048,1976,1973,2048,2048,1973,1968,1973,1977,2048,1963,1974,2056,1970,2048,2048,2048,1974,2048,2048,2048,2048,2048,1977,1969,2048,1979,1915,2048,1976,1980,2048,1979,2048,1885,1964,1980,2048,1971,1975,2048,1972,1980,2048,1981,2048,1972,1978,1979,1978,1980,2048,1980,2048,2048,2048,1950,2048,2048,2048,1919,2048,2048,2048,2048,2050,1926,2048,2048,2048,2048,2048,1972,2048,1967,2048,1970,2048,2048,1968,2048,2048,1976,2048,1960,2048,1961,2048,1973,2048,1862,2048,1978,1976,2048,1981,2048,2048,2048,2048,1972,1976,2048,1968,2048,2051,1899,2056,1968,2048,2048,2048,1976,2048,2048,2048,1971,2048,2048,2048,2057,2048,1960,2048,2048,2048,1931,2048,2048,2048,1971,2037,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,1887,1976,2048,1888,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,1982,2048,2048,1971,2048,2048,1979,2048,1945,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,1975,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,1936,2048,2048,2048,2048,1972,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,1781,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1968,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1917,2048,1972,2048,1973,2048,2048,2048,2048,1873,2048,1971,2048,2048,1980,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1956,2048,2048,2048,1974,2048,2048,2048,1978,2048,2048,2048,1975,1725,928,1008,1560,996,1379,1982,1916,1124,1218,1336,893,1041,970,1180,1252,1317,1320,1274,1284,1280,1364,1456,1416,1425,1304,1225,1208,787,857,882,252],\"successes\":[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,0,0,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,0,0,1,1,0,0,1,1,1,1,0,1,1,0,0,1,0,0,1,1,1,0,1,1,1,0,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,0,0,0,1,1,1,1,1,1,1,0,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,0,1,0,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,1,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,1,1,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,1,0,1,0,0,1,0,1,1,0,1,1,0,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,0,1,0,0,1,1,0,1,1,1,1,0,1,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,1,1,0,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,1,1,1,0,1,0,0,0,0,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,0,1,1,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,1,1,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,1,1,0,1,0,0,0,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,1,1,0,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,1,0,1,0,0,0,0,1,1,1,1,0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,1,1,0,1,1,0,0,1,0,1,1,0,1,0,1,0,1,1,0,1,1,1,0,0,0,0,1,0,0,1,0,0,1,0,0,1,1,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,1,0,1,0,1,0,1,1,0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,1,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,0,0,0,1,0,1,0,1,1,0,0,0,1,0,0,1,1,0,1,0,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,1,1,0,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,1,1,1,1,0,1,1,1,1,1,0,1,0,1,1,0,1,0,0,1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,1,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,1,1,0,1,1,0,1,0,0,1,0,1,1,0,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1,1,0,0,1,0,0,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1,1,0,1,1,0,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,1,0,0,1,1,1,1,0,1,1,1,1,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1,1,0,1,0,1,1,1,0,1,1,0,1,1,0,1,0,1,1,1,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,0,0,0,1,1,0,1,0,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n;\r\n            compressedData['data'] = byteArray;\r\n            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');\r\n            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, false);\r\n            Module['removeRunDependency']('datafile_C:/Dev/EDGE-classic/web/site/edge-classic.data');\r\n      };\r\n      Module['addRunDependency']('datafile_C:/Dev/EDGE-classic/web/site/edge-classic.data');\r\n\r\n      if (!Module.preloadResults) Module.preloadResults = {};\r\n\r\n        function preloadFallback(error) {\r\n          console.error(error);\r\n          console.error('falling back to default preload behavior');\r\n          fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, processPackageData, handleError);\r\n        };\r\n\r\n        openDatabase(\r\n          function(db) {\r\n            checkCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME,\r\n              function(useCached, metadata) {\r\n                Module.preloadResults[PACKAGE_NAME] = {fromCache: useCached};\r\n                if (useCached) {\r\n                  fetchCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME, metadata, processPackageData, preloadFallback);\r\n                } else {\r\n                  fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE,\r\n                    function(packageData) {\r\n                      cacheRemotePackage(db, PACKAGE_PATH + PACKAGE_NAME, packageData, {uuid:PACKAGE_UUID}, processPackageData,\r\n                        function(error) {\r\n                          console.error(error);\r\n                          processPackageData(packageData);\r\n                        });\r\n                    }\r\n                  , preloadFallback);\r\n                }\r\n              }\r\n            , preloadFallback);\r\n          }\r\n        , preloadFallback);\r\n\r\n        if (Module['setStatus']) Module['setStatus']('Downloading...');\r\n\r\n    }\r\n    if (Module['calledRun']) {\r\n      runWithFS();\r\n    } else {\r\n      if (!Module['preRun']) Module['preRun'] = [];\r\n      Module[\"preRun\"].push(runWithFS); // FS is not initialized yet, wait for it\r\n    }\r\n\r\n    }\r\n    loadPackage({\"files\": [{\"filename\": \"/.gitkeep\", \"start\": 0, \"end\": 0}, {\"filename\": \"/edge_base/blasphemer/graphics/AUTOPAGE.png\", \"start\": 0, \"end\": 42807}, {\"filename\": \"/edge_base/blasphemer/graphics/NULL.png\", \"start\": 42807, \"end\": 43967}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARL.lmp\", \"start\": 43967, \"end\": 46678}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARR.lmp\", \"start\": 46678, \"end\": 49389}, {\"filename\": \"/edge_base/blasphemer/scripts/anims.ddf\", \"start\": 49389, \"end\": 50940}, {\"filename\": \"/edge_base/blasphemer/scripts/attacks.ddf\", \"start\": 50940, \"end\": 94140}, {\"filename\": \"/edge_base/blasphemer/scripts/coal_hud.ec\", \"start\": 94140, \"end\": 110501}, {\"filename\": \"/edge_base/blasphemer/scripts/colmap.ddf\", \"start\": 110501, \"end\": 110783}, {\"filename\": \"/edge_base/blasphemer/scripts/flats.ddf\", \"start\": 110783, \"end\": 111340}, {\"filename\": \"/edge_base/blasphemer/scripts/fonts.ddf\", \"start\": 111340, \"end\": 112388}, {\"filename\": \"/edge_base/blasphemer/scripts/games.ddf\", \"start\": 112388, \"end\": 115122}, {\"filename\": \"/edge_base/blasphemer/scripts/images.ddf\", \"start\": 115122, \"end\": 116942}, {\"filename\": \"/edge_base/blasphemer/scripts/language.ldf\", \"start\": 116942, \"end\": 125443}, {\"filename\": \"/edge_base/blasphemer/scripts/levels.ddf\", \"start\": 125443, \"end\": 138313}, {\"filename\": \"/edge_base/blasphemer/scripts/lines.ddf\", \"start\": 138313, \"end\": 143148}, {\"filename\": \"/edge_base/blasphemer/scripts/playlist.ddf\", \"start\": 143148, \"end\": 145304}, {\"filename\": \"/edge_base/blasphemer/scripts/rscript.rts\", \"start\": 145304, \"end\": 158348}, {\"filename\": \"/edge_base/blasphemer/scripts/sectors.ddf\", \"start\": 158348, \"end\": 159832}, {\"filename\": \"/edge_base/blasphemer/scripts/sounds.ddf\", \"start\": 159832, \"end\": 171427}, {\"filename\": \"/edge_base/blasphemer/scripts/styles.ddf\", \"start\": 171427, \"end\": 176523}, {\"filename\": \"/edge_base/blasphemer/scripts/switch.ddf\", \"start\": 176523, \"end\": 176936}, {\"filename\": \"/edge_base/blasphemer/scripts/things.ddf\", \"start\": 176936, \"end\": 264800}, {\"filename\": \"/edge_base/blasphemer/scripts/weapons.ddf\", \"start\": 264800, \"end\": 275118}, {\"filename\": \"/edge_base/chex/graphics/M_SKULL1.png\", \"start\": 275118, \"end\": 275685}, {\"filename\": \"/edge_base/chex/graphics/M_SKULL2.png\", \"start\": 275685, \"end\": 276433}, {\"filename\": \"/edge_base/chex/graphics/STBAR.lmp\", \"start\": 276433, \"end\": 299975}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT033.lmp\", \"start\": 299975, \"end\": 300092}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT034.lmp\", \"start\": 300092, \"end\": 300225}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT035.lmp\", \"start\": 300225, \"end\": 300476}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT036.lmp\", \"start\": 300476, \"end\": 300803}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT037.lmp\", \"start\": 300803, \"end\": 301066}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT038.lmp\", \"start\": 301066, \"end\": 301158}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT039.lmp\", \"start\": 301158, \"end\": 301316}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT040.lmp\", \"start\": 301316, \"end\": 301474}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT041.lmp\", \"start\": 301474, \"end\": 301634}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT042.lmp\", \"start\": 301634, \"end\": 301754}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT043.lmp\", \"start\": 301754, \"end\": 301829}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT044.lmp\", \"start\": 301829, \"end\": 301907}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT045.lmp\", \"start\": 301907, \"end\": 301981}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT046.lmp\", \"start\": 301981, \"end\": 302172}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT047.lmp\", \"start\": 302172, \"end\": 302399}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT048.lmp\", \"start\": 302399, \"end\": 302537}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT049.lmp\", \"start\": 302537, \"end\": 302781}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT050.lmp\", \"start\": 302781, \"end\": 303028}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT051.lmp\", \"start\": 303028, \"end\": 303234}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT052.lmp\", \"start\": 303234, \"end\": 303478}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT053.lmp\", \"start\": 303478, \"end\": 303717}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT054.lmp\", \"start\": 303717, \"end\": 303915}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT055.lmp\", \"start\": 303915, \"end\": 304142}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT056.lmp\", \"start\": 304142, \"end\": 304381}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT057.lmp\", \"start\": 304381, \"end\": 304469}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT058.lmp\", \"start\": 304469, \"end\": 304575}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT059.lmp\", \"start\": 304575, \"end\": 304736}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT060.lmp\", \"start\": 304736, \"end\": 304828}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT061.lmp\", \"start\": 304828, \"end\": 304989}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT062.lmp\", \"start\": 304989, \"end\": 305183}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT063.lmp\", \"start\": 305183, \"end\": 305404}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT064.lmp\", \"start\": 305404, \"end\": 305605}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT065.lmp\", \"start\": 305605, \"end\": 305808}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT066.lmp\", \"start\": 305808, \"end\": 306034}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT067.lmp\", \"start\": 306034, \"end\": 306230}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT068.lmp\", \"start\": 306230, \"end\": 306388}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT069.lmp\", \"start\": 306388, \"end\": 306613}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT070.lmp\", \"start\": 306613, \"end\": 306840}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT071.lmp\", \"start\": 306840, \"end\": 306951}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT072.lmp\", \"start\": 306951, \"end\": 307142}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT073.lmp\", \"start\": 307142, \"end\": 307348}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT074.lmp\", \"start\": 307348, \"end\": 307510}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT075.lmp\", \"start\": 307510, \"end\": 307798}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT076.lmp\", \"start\": 307798, \"end\": 308021}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT077.lmp\", \"start\": 308021, \"end\": 308244}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT078.lmp\", \"start\": 308244, \"end\": 308414}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT079.lmp\", \"start\": 308414, \"end\": 308643}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT080.lmp\", \"start\": 308643, \"end\": 308857}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT081.lmp\", \"start\": 308857, \"end\": 309061}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT082.lmp\", \"start\": 309061, \"end\": 309220}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT083.lmp\", \"start\": 309220, \"end\": 309441}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT084.lmp\", \"start\": 309441, \"end\": 309637}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT085.lmp\", \"start\": 309637, \"end\": 309954}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT086.lmp\", \"start\": 309954, \"end\": 310156}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT087.lmp\", \"start\": 310156, \"end\": 310326}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT088.lmp\", \"start\": 310326, \"end\": 310526}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT089.lmp\", \"start\": 310526, \"end\": 310744}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT090.lmp\", \"start\": 310744, \"end\": 310935}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT091.lmp\", \"start\": 310935, \"end\": 311153}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT092.lmp\", \"start\": 311153, \"end\": 311336}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT093.lmp\", \"start\": 311336, \"end\": 311416}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT094.lmp\", \"start\": 311416, \"end\": 311508}, {\"filename\": \"/edge_base/chex/graphics/credit.lmp\", \"start\": 311508, \"end\": 430796}, {\"filename\": \"/edge_base/chex/graphics/help1.lmp\", \"start\": 430796, \"end\": 550084}, {\"filename\": \"/edge_base/chex/graphics/titlepic.lmp\", \"start\": 550084, \"end\": 669372}, {\"filename\": \"/edge_base/chex/graphics/wimap0.lmp\", \"start\": 669372, \"end\": 788660}, {\"filename\": \"/edge_base/chex/scripts/attacks.ddf\", \"start\": 788660, \"end\": 791988}, {\"filename\": \"/edge_base/chex/scripts/fonts.ddf\", \"start\": 791988, \"end\": 792610}, {\"filename\": \"/edge_base/chex/scripts/games.ddf\", \"start\": 792610, \"end\": 793508}, {\"filename\": \"/edge_base/chex/scripts/language.ldf\", \"start\": 793508, \"end\": 798602}, {\"filename\": \"/edge_base/chex/scripts/levels.ddf\", \"start\": 798602, \"end\": 801782}, {\"filename\": \"/edge_base/chex/scripts/styles.ddf\", \"start\": 801782, \"end\": 804057}, {\"filename\": \"/edge_base/chex/scripts/things.ddf\", \"start\": 804057, \"end\": 811565}, {\"filename\": \"/edge_base/doom/graphics/CREDIT.lmp\", \"start\": 811565, \"end\": 930853}, {\"filename\": \"/edge_base/doom/graphics/ENDPIC.lmp\", \"start\": 930853, \"end\": 1050141}, {\"filename\": \"/edge_base/doom/graphics/HELP1.lmp\", \"start\": 1050141, \"end\": 1169429}, {\"filename\": \"/edge_base/doom/graphics/INTERPIC.lmp\", \"start\": 1169429, \"end\": 1288717}, {\"filename\": \"/edge_base/doom/graphics/PFUB1.lmp\", \"start\": 1288717, \"end\": 1408005}, {\"filename\": \"/edge_base/doom/graphics/PFUB2.lmp\", \"start\": 1408005, \"end\": 1527293}, {\"filename\": \"/edge_base/doom/graphics/TITLEPIC.lmp\", \"start\": 1527293, \"end\": 1646581}, {\"filename\": \"/edge_base/doom/graphics/VICTORY2.lmp\", \"start\": 1646581, \"end\": 1765869}, {\"filename\": \"/edge_base/doom/graphics/WIA20000.lmp\", \"start\": 1765869, \"end\": 1794989}, {\"filename\": \"/edge_base/doom/graphics/WIA20001.lmp\", \"start\": 1794989, \"end\": 1824109}, {\"filename\": \"/edge_base/doom/graphics/WIA20002.lmp\", \"start\": 1824109, \"end\": 1853229}, {\"filename\": \"/edge_base/doom/graphics/WIA20400.lmp\", \"start\": 1853229, \"end\": 1858827}, {\"filename\": \"/edge_base/doom/graphics/WIA20401.lmp\", \"start\": 1858827, \"end\": 1864425}, {\"filename\": \"/edge_base/doom/graphics/WIA20402.lmp\", \"start\": 1864425, \"end\": 1870023}, {\"filename\": \"/edge_base/doom/graphics/WIA20500.lmp\", \"start\": 1870023, \"end\": 1883231}, {\"filename\": \"/edge_base/doom/graphics/WIA20501.lmp\", \"start\": 1883231, \"end\": 1896439}, {\"filename\": \"/edge_base/doom/graphics/WIA20502.lmp\", \"start\": 1896439, \"end\": 1909647}, {\"filename\": \"/edge_base/doom/graphics/WIMAP0.lmp\", \"start\": 1909647, \"end\": 2028935}, {\"filename\": \"/edge_base/doom/graphics/WIMAP1.lmp\", \"start\": 2028935, \"end\": 2148223}, {\"filename\": \"/edge_base/doom/graphics/WIMAP2.lmp\", \"start\": 2148223, \"end\": 2267511}, {\"filename\": \"/edge_base/doom/scripts/images.ddf\", \"start\": 2267511, \"end\": 2269349}, {\"filename\": \"/edge_base/doom/textures/SKY1_B.png\", \"start\": 2269349, \"end\": 2283992}, {\"filename\": \"/edge_base/doom/textures/SKY1_E.png\", \"start\": 2283992, \"end\": 2307171}, {\"filename\": \"/edge_base/doom/textures/SKY1_N.png\", \"start\": 2307171, \"end\": 2330058}, {\"filename\": \"/edge_base/doom/textures/SKY1_S.png\", \"start\": 2330058, \"end\": 2352683}, {\"filename\": \"/edge_base/doom/textures/SKY1_T.png\", \"start\": 2352683, \"end\": 2379875}, {\"filename\": \"/edge_base/doom/textures/SKY1_W.png\", \"start\": 2379875, \"end\": 2402718}, {\"filename\": \"/edge_base/doom/textures/SKY2_B.png\", \"start\": 2402718, \"end\": 2419585}, {\"filename\": \"/edge_base/doom/textures/SKY2_E.png\", \"start\": 2419585, \"end\": 2446154}, {\"filename\": \"/edge_base/doom/textures/SKY2_N.png\", \"start\": 2446154, \"end\": 2473010}, {\"filename\": \"/edge_base/doom/textures/SKY2_S.png\", \"start\": 2473010, \"end\": 2500510}, {\"filename\": \"/edge_base/doom/textures/SKY2_T.png\", \"start\": 2500510, \"end\": 2524864}, {\"filename\": \"/edge_base/doom/textures/SKY2_W.png\", \"start\": 2524864, \"end\": 2551051}, {\"filename\": \"/edge_base/doom/textures/SKY3_B.png\", \"start\": 2551051, \"end\": 2563034}, {\"filename\": \"/edge_base/doom/textures/SKY3_E.png\", \"start\": 2563034, \"end\": 2582600}, {\"filename\": \"/edge_base/doom/textures/SKY3_N.png\", \"start\": 2582600, \"end\": 2602301}, {\"filename\": \"/edge_base/doom/textures/SKY3_S.png\", \"start\": 2602301, \"end\": 2622635}, {\"filename\": \"/edge_base/doom/textures/SKY3_T.png\", \"start\": 2622635, \"end\": 2647078}, {\"filename\": \"/edge_base/doom/textures/SKY3_W.png\", \"start\": 2647078, \"end\": 2666123}, {\"filename\": \"/edge_base/doom/textures/SKY4_B.png\", \"start\": 2666123, \"end\": 2704459}, {\"filename\": \"/edge_base/doom/textures/SKY4_E.png\", \"start\": 2704459, \"end\": 2717068}, {\"filename\": \"/edge_base/doom/textures/SKY4_N.png\", \"start\": 2717068, \"end\": 2728784}, {\"filename\": \"/edge_base/doom/textures/SKY4_S.png\", \"start\": 2728784, \"end\": 2740500}, {\"filename\": \"/edge_base/doom/textures/SKY4_T.png\", \"start\": 2740500, \"end\": 2778836}, {\"filename\": \"/edge_base/doom/textures/SKY4_W.png\", \"start\": 2778836, \"end\": 2791445}, {\"filename\": \"/edge_base/doom1/graphics/CREDIT.lmp\", \"start\": 2791445, \"end\": 2910733}, {\"filename\": \"/edge_base/doom1/graphics/HELP1.lmp\", \"start\": 2910733, \"end\": 3030021}, {\"filename\": \"/edge_base/doom1/graphics/HELP2.lmp\", \"start\": 3030021, \"end\": 3149309}, {\"filename\": \"/edge_base/doom1/graphics/TITLEPIC.lmp\", \"start\": 3149309, \"end\": 3268597}, {\"filename\": \"/edge_base/doom1/graphics/WIMAP0.lmp\", \"start\": 3268597, \"end\": 3387885}, {\"filename\": \"/edge_base/doom1/scripts/images.ddf\", \"start\": 3387885, \"end\": 3389737}, {\"filename\": \"/edge_base/doom1/textures/SKY1_B.png\", \"start\": 3389737, \"end\": 3404380}, {\"filename\": \"/edge_base/doom1/textures/SKY1_E.png\", \"start\": 3404380, \"end\": 3427559}, {\"filename\": \"/edge_base/doom1/textures/SKY1_N.png\", \"start\": 3427559, \"end\": 3450446}, {\"filename\": \"/edge_base/doom1/textures/SKY1_S.png\", \"start\": 3450446, \"end\": 3473071}, {\"filename\": \"/edge_base/doom1/textures/SKY1_T.png\", \"start\": 3473071, \"end\": 3500263}, {\"filename\": \"/edge_base/doom1/textures/SKY1_W.png\", \"start\": 3500263, \"end\": 3523106}, {\"filename\": \"/edge_base/doom2/graphics/BOSSBACK.lmp\", \"start\": 3523106, \"end\": 3642394}, {\"filename\": \"/edge_base/doom2/graphics/CREDIT.lmp\", \"start\": 3642394, \"end\": 3761682}, {\"filename\": \"/edge_base/doom2/graphics/HELP.lmp\", \"start\": 3761682, \"end\": 3880970}, {\"filename\": \"/edge_base/doom2/graphics/INTERPIC.lmp\", \"start\": 3880970, \"end\": 4000258}, {\"filename\": \"/edge_base/doom2/graphics/TITLEPIC.lmp\", \"start\": 4000258, \"end\": 4119546}, {\"filename\": \"/edge_base/doom2/scripts/images.ddf\", \"start\": 4119546, \"end\": 4120977}, {\"filename\": \"/edge_base/doom2/textures/SKY1_B.png\", \"start\": 4120977, \"end\": 4142257}, {\"filename\": \"/edge_base/doom2/textures/SKY1_E.png\", \"start\": 4142257, \"end\": 4159937}, {\"filename\": \"/edge_base/doom2/textures/SKY1_N.png\", \"start\": 4159937, \"end\": 4177617}, {\"filename\": \"/edge_base/doom2/textures/SKY1_S.png\", \"start\": 4177617, \"end\": 4195297}, {\"filename\": \"/edge_base/doom2/textures/SKY1_T.png\", \"start\": 4195297, \"end\": 4216577}, {\"filename\": \"/edge_base/doom2/textures/SKY1_W.png\", \"start\": 4216577, \"end\": 4234257}, {\"filename\": \"/edge_base/doom2/textures/SKY2_B.png\", \"start\": 4234257, \"end\": 4248180}, {\"filename\": \"/edge_base/doom2/textures/SKY2_E.png\", \"start\": 4248180, \"end\": 4273399}, {\"filename\": \"/edge_base/doom2/textures/SKY2_N.png\", \"start\": 4273399, \"end\": 4298631}, {\"filename\": \"/edge_base/doom2/textures/SKY2_S.png\", \"start\": 4298631, \"end\": 4323834}, {\"filename\": \"/edge_base/doom2/textures/SKY2_T.png\", \"start\": 4323834, \"end\": 4348586}, {\"filename\": \"/edge_base/doom2/textures/SKY2_W.png\", \"start\": 4348586, \"end\": 4373790}, {\"filename\": \"/edge_base/doom2/textures/SKY3_B.png\", \"start\": 4373790, \"end\": 4457360}, {\"filename\": \"/edge_base/doom2/textures/SKY3_E.png\", \"start\": 4457360, \"end\": 4552169}, {\"filename\": \"/edge_base/doom2/textures/SKY3_N.png\", \"start\": 4552169, \"end\": 4650940}, {\"filename\": \"/edge_base/doom2/textures/SKY3_S.png\", \"start\": 4650940, \"end\": 4749711}, {\"filename\": \"/edge_base/doom2/textures/SKY3_T.png\", \"start\": 4749711, \"end\": 4936202}, {\"filename\": \"/edge_base/doom2/textures/SKY3_W.png\", \"start\": 4936202, \"end\": 5031011}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARL.lmp\", \"start\": 5031011, \"end\": 5034422}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARR.lmp\", \"start\": 5034422, \"end\": 5037833}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT033.png\", \"start\": 5037833, \"end\": 5038178}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT034.png\", \"start\": 5038178, \"end\": 5038525}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT035.png\", \"start\": 5038525, \"end\": 5038956}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT036.png\", \"start\": 5038956, \"end\": 5039365}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT037.png\", \"start\": 5039365, \"end\": 5039786}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT038.png\", \"start\": 5039786, \"end\": 5040233}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT039.png\", \"start\": 5040233, \"end\": 5040554}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT040.png\", \"start\": 5040554, \"end\": 5040944}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT041.png\", \"start\": 5040944, \"end\": 5041333}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT042.png\", \"start\": 5041333, \"end\": 5041784}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT043.png\", \"start\": 5041784, \"end\": 5042143}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT044.png\", \"start\": 5042143, \"end\": 5042467}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT045.png\", \"start\": 5042467, \"end\": 5042780}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT046.png\", \"start\": 5042780, \"end\": 5043076}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT047.png\", \"start\": 5043076, \"end\": 5043499}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT048.png\", \"start\": 5043499, \"end\": 5043904}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT049.png\", \"start\": 5043904, \"end\": 5044284}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT050.png\", \"start\": 5044284, \"end\": 5044692}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT051.png\", \"start\": 5044692, \"end\": 5045155}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT052.png\", \"start\": 5045155, \"end\": 5045574}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT053.png\", \"start\": 5045574, \"end\": 5045982}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT054.png\", \"start\": 5045982, \"end\": 5046390}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT055.png\", \"start\": 5046390, \"end\": 5046794}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT056.png\", \"start\": 5046794, \"end\": 5047266}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT057.png\", \"start\": 5047266, \"end\": 5047681}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT058.png\", \"start\": 5047681, \"end\": 5048029}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT059.png\", \"start\": 5048029, \"end\": 5048390}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT060.png\", \"start\": 5048390, \"end\": 5048759}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT061.png\", \"start\": 5048759, \"end\": 5049100}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT062.png\", \"start\": 5049100, \"end\": 5049521}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT063.png\", \"start\": 5049521, \"end\": 5049924}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT064.png\", \"start\": 5049924, \"end\": 5050342}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT065.png\", \"start\": 5050342, \"end\": 5050845}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT066.png\", \"start\": 5050845, \"end\": 5051270}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT067.png\", \"start\": 5051270, \"end\": 5051673}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT068.png\", \"start\": 5051673, \"end\": 5052106}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT069.png\", \"start\": 5052106, \"end\": 5052522}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT070.png\", \"start\": 5052522, \"end\": 5052927}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT071.png\", \"start\": 5052927, \"end\": 5053346}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT072.png\", \"start\": 5053346, \"end\": 5053771}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT073.png\", \"start\": 5053771, \"end\": 5054173}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT074.png\", \"start\": 5054173, \"end\": 5054642}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT075.png\", \"start\": 5054642, \"end\": 5055076}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT076.png\", \"start\": 5055076, \"end\": 5055465}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT077.png\", \"start\": 5055465, \"end\": 5055920}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT078.png\", \"start\": 5055920, \"end\": 5056430}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT079.png\", \"start\": 5056430, \"end\": 5056840}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT080.png\", \"start\": 5056840, \"end\": 5057247}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT081.png\", \"start\": 5057247, \"end\": 5057664}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT082.png\", \"start\": 5057664, \"end\": 5058083}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT083.png\", \"start\": 5058083, \"end\": 5058509}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT084.png\", \"start\": 5058509, \"end\": 5058894}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT085.png\", \"start\": 5058894, \"end\": 5059309}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT086.png\", \"start\": 5059309, \"end\": 5059733}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT087.png\", \"start\": 5059733, \"end\": 5060178}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT088.png\", \"start\": 5060178, \"end\": 5060604}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT089.png\", \"start\": 5060604, \"end\": 5061069}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT090.png\", \"start\": 5061069, \"end\": 5061487}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT091.png\", \"start\": 5061487, \"end\": 5061874}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT092.png\", \"start\": 5061874, \"end\": 5062308}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT093.png\", \"start\": 5062308, \"end\": 5062704}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT094.png\", \"start\": 5062704, \"end\": 5063055}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT095.png\", \"start\": 5063055, \"end\": 5063368}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT096.png\", \"start\": 5063368, \"end\": 5063688}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT097.png\", \"start\": 5063688, \"end\": 5064146}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT098.png\", \"start\": 5064146, \"end\": 5064546}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT099.png\", \"start\": 5064546, \"end\": 5064980}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT100.png\", \"start\": 5064980, \"end\": 5065387}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT101.png\", \"start\": 5065387, \"end\": 5065783}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT102.png\", \"start\": 5065783, \"end\": 5066174}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT103.png\", \"start\": 5066174, \"end\": 5066618}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT104.png\", \"start\": 5066618, \"end\": 5067020}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT105.png\", \"start\": 5067020, \"end\": 5067400}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT106.png\", \"start\": 5067400, \"end\": 5067844}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT107.png\", \"start\": 5067844, \"end\": 5068313}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT108.png\", \"start\": 5068313, \"end\": 5068687}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT109.png\", \"start\": 5068687, \"end\": 5069108}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT110.png\", \"start\": 5069108, \"end\": 5069524}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT111.png\", \"start\": 5069524, \"end\": 5069973}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT112.png\", \"start\": 5069973, \"end\": 5070363}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT113.png\", \"start\": 5070363, \"end\": 5070821}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT114.png\", \"start\": 5070821, \"end\": 5071218}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT115.png\", \"start\": 5071218, \"end\": 5071629}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT116.png\", \"start\": 5071629, \"end\": 5072063}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT117.png\", \"start\": 5072063, \"end\": 5072465}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT118.png\", \"start\": 5072465, \"end\": 5072926}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT119.png\", \"start\": 5072926, \"end\": 5073343}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT120.png\", \"start\": 5073343, \"end\": 5073787}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT121.png\", \"start\": 5073787, \"end\": 5074180}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT122.png\", \"start\": 5074180, \"end\": 5074615}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT123.png\", \"start\": 5074615, \"end\": 5075005}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT124.png\", \"start\": 5075005, \"end\": 5075366}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT125.png\", \"start\": 5075366, \"end\": 5075754}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT126.png\", \"start\": 5075754, \"end\": 5076144}, {\"filename\": \"/edge_base/freedoom1/scripts/attacks.ddf\", \"start\": 5076144, \"end\": 5097300}, {\"filename\": \"/edge_base/freedoom1/scripts/fonts.ddf\", \"start\": 5097300, \"end\": 5097956}, {\"filename\": \"/edge_base/freedoom1/scripts/images.ddf\", \"start\": 5097956, \"end\": 5105725}, {\"filename\": \"/edge_base/freedoom1/scripts/language.ldf\", \"start\": 5105725, \"end\": 5117327}, {\"filename\": \"/edge_base/freedoom1/scripts/styles.ddf\", \"start\": 5117327, \"end\": 5122536}, {\"filename\": \"/edge_base/freedoom1/scripts/things.ddf\", \"start\": 5122536, \"end\": 5130928}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARL.lmp\", \"start\": 5130928, \"end\": 5134339}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARR.lmp\", \"start\": 5134339, \"end\": 5137750}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT033.png\", \"start\": 5137750, \"end\": 5138095}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT034.png\", \"start\": 5138095, \"end\": 5138442}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT035.png\", \"start\": 5138442, \"end\": 5138873}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT036.png\", \"start\": 5138873, \"end\": 5139282}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT037.png\", \"start\": 5139282, \"end\": 5139703}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT038.png\", \"start\": 5139703, \"end\": 5140150}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT039.png\", \"start\": 5140150, \"end\": 5140471}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT040.png\", \"start\": 5140471, \"end\": 5140861}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT041.png\", \"start\": 5140861, \"end\": 5141250}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT042.png\", \"start\": 5141250, \"end\": 5141701}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT043.png\", \"start\": 5141701, \"end\": 5142060}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT044.png\", \"start\": 5142060, \"end\": 5142384}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT045.png\", \"start\": 5142384, \"end\": 5142697}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT046.png\", \"start\": 5142697, \"end\": 5142993}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT047.png\", \"start\": 5142993, \"end\": 5143416}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT048.png\", \"start\": 5143416, \"end\": 5143821}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT049.png\", \"start\": 5143821, \"end\": 5144201}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT050.png\", \"start\": 5144201, \"end\": 5144609}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT051.png\", \"start\": 5144609, \"end\": 5145072}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT052.png\", \"start\": 5145072, \"end\": 5145491}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT053.png\", \"start\": 5145491, \"end\": 5145899}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT054.png\", \"start\": 5145899, \"end\": 5146307}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT055.png\", \"start\": 5146307, \"end\": 5146711}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT056.png\", \"start\": 5146711, \"end\": 5147183}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT057.png\", \"start\": 5147183, \"end\": 5147598}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT058.png\", \"start\": 5147598, \"end\": 5147946}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT059.png\", \"start\": 5147946, \"end\": 5148307}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT060.png\", \"start\": 5148307, \"end\": 5148676}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT061.png\", \"start\": 5148676, \"end\": 5149017}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT062.png\", \"start\": 5149017, \"end\": 5149438}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT063.png\", \"start\": 5149438, \"end\": 5149841}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT064.png\", \"start\": 5149841, \"end\": 5150259}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT065.png\", \"start\": 5150259, \"end\": 5150762}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT066.png\", \"start\": 5150762, \"end\": 5151187}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT067.png\", \"start\": 5151187, \"end\": 5151590}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT068.png\", \"start\": 5151590, \"end\": 5152023}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT069.png\", \"start\": 5152023, \"end\": 5152439}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT070.png\", \"start\": 5152439, \"end\": 5152844}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT071.png\", \"start\": 5152844, \"end\": 5153263}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT072.png\", \"start\": 5153263, \"end\": 5153688}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT073.png\", \"start\": 5153688, \"end\": 5154090}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT074.png\", \"start\": 5154090, \"end\": 5154559}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT075.png\", \"start\": 5154559, \"end\": 5154993}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT076.png\", \"start\": 5154993, \"end\": 5155382}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT077.png\", \"start\": 5155382, \"end\": 5155837}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT078.png\", \"start\": 5155837, \"end\": 5156347}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT079.png\", \"start\": 5156347, \"end\": 5156757}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT080.png\", \"start\": 5156757, \"end\": 5157164}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT081.png\", \"start\": 5157164, \"end\": 5157581}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT082.png\", \"start\": 5157581, \"end\": 5158000}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT083.png\", \"start\": 5158000, \"end\": 5158426}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT084.png\", \"start\": 5158426, \"end\": 5158811}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT085.png\", \"start\": 5158811, \"end\": 5159226}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT086.png\", \"start\": 5159226, \"end\": 5159650}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT087.png\", \"start\": 5159650, \"end\": 5160095}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT088.png\", \"start\": 5160095, \"end\": 5160521}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT089.png\", \"start\": 5160521, \"end\": 5160986}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT090.png\", \"start\": 5160986, \"end\": 5161404}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT091.png\", \"start\": 5161404, \"end\": 5161791}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT092.png\", \"start\": 5161791, \"end\": 5162225}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT093.png\", \"start\": 5162225, \"end\": 5162621}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT094.png\", \"start\": 5162621, \"end\": 5162972}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT095.png\", \"start\": 5162972, \"end\": 5163285}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT096.png\", \"start\": 5163285, \"end\": 5163605}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT097.png\", \"start\": 5163605, \"end\": 5164063}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT098.png\", \"start\": 5164063, \"end\": 5164463}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT099.png\", \"start\": 5164463, \"end\": 5164897}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT100.png\", \"start\": 5164897, \"end\": 5165304}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT101.png\", \"start\": 5165304, \"end\": 5165700}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT102.png\", \"start\": 5165700, \"end\": 5166091}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT103.png\", \"start\": 5166091, \"end\": 5166535}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT104.png\", \"start\": 5166535, \"end\": 5166937}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT105.png\", \"start\": 5166937, \"end\": 5167317}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT106.png\", \"start\": 5167317, \"end\": 5167761}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT107.png\", \"start\": 5167761, \"end\": 5168230}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT108.png\", \"start\": 5168230, \"end\": 5168604}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT109.png\", \"start\": 5168604, \"end\": 5169025}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT110.png\", \"start\": 5169025, \"end\": 5169441}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT111.png\", \"start\": 5169441, \"end\": 5169890}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT112.png\", \"start\": 5169890, \"end\": 5170280}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT113.png\", \"start\": 5170280, \"end\": 5170738}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT114.png\", \"start\": 5170738, \"end\": 5171135}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT115.png\", \"start\": 5171135, \"end\": 5171546}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT116.png\", \"start\": 5171546, \"end\": 5171980}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT117.png\", \"start\": 5171980, \"end\": 5172382}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT118.png\", \"start\": 5172382, \"end\": 5172843}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT119.png\", \"start\": 5172843, \"end\": 5173260}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT120.png\", \"start\": 5173260, \"end\": 5173704}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT121.png\", \"start\": 5173704, \"end\": 5174097}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT122.png\", \"start\": 5174097, \"end\": 5174532}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT123.png\", \"start\": 5174532, \"end\": 5174922}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT124.png\", \"start\": 5174922, \"end\": 5175283}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT125.png\", \"start\": 5175283, \"end\": 5175671}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT126.png\", \"start\": 5175671, \"end\": 5176061}, {\"filename\": \"/edge_base/freedoom2/scripts/attacks.ddf\", \"start\": 5176061, \"end\": 5197217}, {\"filename\": \"/edge_base/freedoom2/scripts/fonts.ddf\", \"start\": 5197217, \"end\": 5197873}, {\"filename\": \"/edge_base/freedoom2/scripts/images.ddf\", \"start\": 5197873, \"end\": 5205642}, {\"filename\": \"/edge_base/freedoom2/scripts/language.ldf\", \"start\": 5205642, \"end\": 5217105}, {\"filename\": \"/edge_base/freedoom2/scripts/styles.ddf\", \"start\": 5217105, \"end\": 5221942}, {\"filename\": \"/edge_base/freedoom2/scripts/things.ddf\", \"start\": 5221942, \"end\": 5230331}, {\"filename\": \"/edge_base/hacx/graphics/CREDIT.lmp\", \"start\": 5230331, \"end\": 5349619}, {\"filename\": \"/edge_base/hacx/graphics/HELP.lmp\", \"start\": 5349619, \"end\": 5468907}, {\"filename\": \"/edge_base/hacx/graphics/INTERPIC.lmp\", \"start\": 5468907, \"end\": 5588195}, {\"filename\": \"/edge_base/hacx/graphics/STBARL.lmp\", \"start\": 5588195, \"end\": 5591606}, {\"filename\": \"/edge_base/hacx/graphics/STBARR.lmp\", \"start\": 5591606, \"end\": 5595017}, {\"filename\": \"/edge_base/hacx/graphics/TITLEPIC.lmp\", \"start\": 5595017, \"end\": 5714305}, {\"filename\": \"/edge_base/hacx/scripts/anims.ddf\", \"start\": 5714305, \"end\": 5717477}, {\"filename\": \"/edge_base/hacx/scripts/attacks.ddf\", \"start\": 5717477, \"end\": 5724975}, {\"filename\": \"/edge_base/hacx/scripts/colmap.ddf\", \"start\": 5724975, \"end\": 5725253}, {\"filename\": \"/edge_base/hacx/scripts/fonts.ddf\", \"start\": 5725253, \"end\": 5725899}, {\"filename\": \"/edge_base/hacx/scripts/language.ldf\", \"start\": 5725899, \"end\": 5731899}, {\"filename\": \"/edge_base/hacx/scripts/lines.ddf\", \"start\": 5731899, \"end\": 5732787}, {\"filename\": \"/edge_base/hacx/scripts/playlist.ddf\", \"start\": 5732787, \"end\": 5734268}, {\"filename\": \"/edge_base/hacx/scripts/styles.ddf\", \"start\": 5734268, \"end\": 5736836}, {\"filename\": \"/edge_base/hacx/scripts/switch.ddf\", \"start\": 5736836, \"end\": 5740045}, {\"filename\": \"/edge_base/hacx/scripts/things.ddf\", \"start\": 5740045, \"end\": 5827551}, {\"filename\": \"/edge_base/hacx/scripts/weapons.ddf\", \"start\": 5827551, \"end\": 5832842}, {\"filename\": \"/edge_base/hacx/sprites/CHGFA0.lmp\", \"start\": 5832842, \"end\": 5847646}, {\"filename\": \"/edge_base/hacx/sprites/CHGFB0.lmp\", \"start\": 5847646, \"end\": 5862672}, {\"filename\": \"/edge_base/hacx/sprites/CHGGA0.lmp\", \"start\": 5862672, \"end\": 5877246}, {\"filename\": \"/edge_base/hacx/sprites/CHGGB0.lmp\", \"start\": 5877246, \"end\": 5883603}, {\"filename\": \"/edge_base/hacx/sprites/MISFA0.lmp\", \"start\": 5883603, \"end\": 5923875}, {\"filename\": \"/edge_base/hacx/sprites/MISFB0.lmp\", \"start\": 5923875, \"end\": 5959041}, {\"filename\": \"/edge_base/hacx/sprites/MISFC0.lmp\", \"start\": 5959041, \"end\": 5992194}, {\"filename\": \"/edge_base/hacx/sprites/MISFD0.lmp\", \"start\": 5992194, \"end\": 6028577}, {\"filename\": \"/edge_base/hacx/sprites/MISGA0.lmp\", \"start\": 6028577, \"end\": 6060107}, {\"filename\": \"/edge_base/hacx/sprites/MISGB0.lmp\", \"start\": 6060107, \"end\": 6095213}, {\"filename\": \"/edge_base/hacx/sprites/PISGD0.lmp\", \"start\": 6095213, \"end\": 6119356}, {\"filename\": \"/edge_base/hacx/sprites/PISGE0.lmp\", \"start\": 6119356, \"end\": 6149022}, {\"filename\": \"/edge_base/hacx/sprites/PLSGA0.lmp\", \"start\": 6149022, \"end\": 6159886}, {\"filename\": \"/edge_base/hacx/sprites/PLSGB0.lmp\", \"start\": 6159886, \"end\": 6173280}, {\"filename\": \"/edge_base/hacx/sprites/SAWGA0.lmp\", \"start\": 6173280, \"end\": 6187729}, {\"filename\": \"/edge_base/hacx/sprites/SAWGB0.lmp\", \"start\": 6187729, \"end\": 6201837}, {\"filename\": \"/edge_base/hacx/sprites/SAWGC0.lmp\", \"start\": 6201837, \"end\": 6210922}, {\"filename\": \"/edge_base/hacx/sprites/SAWGD0.lmp\", \"start\": 6210922, \"end\": 6220007}, {\"filename\": \"/edge_base/hacx/sprites/SHT2A0.lmp\", \"start\": 6220007, \"end\": 6235518}, {\"filename\": \"/edge_base/hacx/sprites/SHT2B0.lmp\", \"start\": 6235518, \"end\": 6251259}, {\"filename\": \"/edge_base/hacx/sprites/SHT2C0.lmp\", \"start\": 6251259, \"end\": 6267292}, {\"filename\": \"/edge_base/hacx/sprites/SHT2D0.lmp\", \"start\": 6267292, \"end\": 6283419}, {\"filename\": \"/edge_base/hacx/sprites/SHT2E0.lmp\", \"start\": 6283419, \"end\": 6299705}, {\"filename\": \"/edge_base/hacx/sprites/SHT2F0.lmp\", \"start\": 6299705, \"end\": 6315859}, {\"filename\": \"/edge_base/hacx/sprites/SHT2G0.lmp\", \"start\": 6315859, \"end\": 6331675}, {\"filename\": \"/edge_base/hacx/sprites/SHT2H0.lmp\", \"start\": 6331675, \"end\": 6347186}, {\"filename\": \"/edge_base/hacx/sprites/SHT2I0.lmp\", \"start\": 6347186, \"end\": 6362869}, {\"filename\": \"/edge_base/hacx/sprites/SHT2J0.lmp\", \"start\": 6362869, \"end\": 6379074}, {\"filename\": \"/edge_base/hacx/sprites/SHTFA0.lmp\", \"start\": 6379074, \"end\": 6388136}, {\"filename\": \"/edge_base/hacx/sprites/SHTFB0.lmp\", \"start\": 6388136, \"end\": 6397627}, {\"filename\": \"/edge_base/hacx/sprites/SHTGA0.lmp\", \"start\": 6397627, \"end\": 6406286}, {\"filename\": \"/edge_base/hacx/sprites/SHTGB0.lmp\", \"start\": 6406286, \"end\": 6419368}, {\"filename\": \"/edge_base/hacx/sprites/SHTGC0.lmp\", \"start\": 6419368, \"end\": 6438607}, {\"filename\": \"/edge_base/hacx/sprites/SHTGD0.lmp\", \"start\": 6438607, \"end\": 6456854}, {\"filename\": \"/edge_base/harmony/ENDOOM.bin\", \"start\": 6456854, \"end\": 6460854}, {\"filename\": \"/edge_base/harmony/graphics/BOSSBACK.lmp\", \"start\": 6460854, \"end\": 6551600}, {\"filename\": \"/edge_base/harmony/graphics/CREDIT.lmp\", \"start\": 6551600, \"end\": 6642346}, {\"filename\": \"/edge_base/harmony/graphics/CWILV00.lmp\", \"start\": 6642346, \"end\": 6644396}, {\"filename\": \"/edge_base/harmony/graphics/CWILV01.lmp\", \"start\": 6644396, \"end\": 6646548}, {\"filename\": \"/edge_base/harmony/graphics/CWILV02.lmp\", \"start\": 6646548, \"end\": 6648326}, {\"filename\": \"/edge_base/harmony/graphics/CWILV03.lmp\", \"start\": 6648326, \"end\": 6650926}, {\"filename\": \"/edge_base/harmony/graphics/CWILV04.lmp\", \"start\": 6650926, \"end\": 6653017}, {\"filename\": \"/edge_base/harmony/graphics/CWILV05.lmp\", \"start\": 6653017, \"end\": 6656883}, {\"filename\": \"/edge_base/harmony/graphics/CWILV06.lmp\", \"start\": 6656883, \"end\": 6660471}, {\"filename\": \"/edge_base/harmony/graphics/CWILV07.lmp\", \"start\": 6660471, \"end\": 6662966}, {\"filename\": \"/edge_base/harmony/graphics/CWILV08.lmp\", \"start\": 6662966, \"end\": 6665805}, {\"filename\": \"/edge_base/harmony/graphics/CWILV09.lmp\", \"start\": 6665805, \"end\": 6669640}, {\"filename\": \"/edge_base/harmony/graphics/CWILV10.lmp\", \"start\": 6669640, \"end\": 6671258}, {\"filename\": \"/edge_base/harmony/graphics/CWILV11.lmp\", \"start\": 6671258, \"end\": 6672987}, {\"filename\": \"/edge_base/harmony/graphics/HELP.lmp\", \"start\": 6672987, \"end\": 6762029}, {\"filename\": \"/edge_base/harmony/graphics/INTERPIC.lmp\", \"start\": 6762029, \"end\": 6852775}, {\"filename\": \"/edge_base/harmony/graphics/M_EPISOD.lmp\", \"start\": 6852775, \"end\": 6855972}, {\"filename\": \"/edge_base/harmony/graphics/M_JKILL.lmp\", \"start\": 6855972, \"end\": 6857390}, {\"filename\": \"/edge_base/harmony/graphics/M_NEWG.lmp\", \"start\": 6857390, \"end\": 6859764}, {\"filename\": \"/edge_base/harmony/graphics/M_NGAME.lmp\", \"start\": 6859764, \"end\": 6860714}, {\"filename\": \"/edge_base/harmony/graphics/M_RDTHIS.lmp\", \"start\": 6860714, \"end\": 6862573}, {\"filename\": \"/edge_base/harmony/graphics/M_SAVEG.lmp\", \"start\": 6862573, \"end\": 6863586}, {\"filename\": \"/edge_base/harmony/graphics/M_THERML.png\", \"start\": 6863586, \"end\": 6864526}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMM.png\", \"start\": 6864526, \"end\": 6865455}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMO.png\", \"start\": 6865455, \"end\": 6866370}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMR.png\", \"start\": 6866370, \"end\": 6867308}, {\"filename\": \"/edge_base/harmony/graphics/STBARL.lmp\", \"start\": 6867308, \"end\": 6870719}, {\"filename\": \"/edge_base/harmony/graphics/STBARR.lmp\", \"start\": 6870719, \"end\": 6874130}, {\"filename\": \"/edge_base/harmony/graphics/TITLEPIC.lmp\", \"start\": 6874130, \"end\": 6963172}, {\"filename\": \"/edge_base/harmony/graphics/WICOLON.lmp\", \"start\": 6963172, \"end\": 6963274}, {\"filename\": \"/edge_base/harmony/graphics/WIF.lmp\", \"start\": 6963274, \"end\": 6963322}, {\"filename\": \"/edge_base/harmony/graphics/WIFRGS.lmp\", \"start\": 6963322, \"end\": 6964453}, {\"filename\": \"/edge_base/harmony/graphics/WIKILRS.lmp\", \"start\": 6964453, \"end\": 6964926}, {\"filename\": \"/edge_base/harmony/graphics/WIMINUS.lmp\", \"start\": 6964926, \"end\": 6965046}, {\"filename\": \"/edge_base/harmony/graphics/WIMSTT.lmp\", \"start\": 6965046, \"end\": 6966146}, {\"filename\": \"/edge_base/harmony/graphics/WINUM0.lmp\", \"start\": 6966146, \"end\": 6966396}, {\"filename\": \"/edge_base/harmony/graphics/WINUM1.lmp\", \"start\": 6966396, \"end\": 6966542}, {\"filename\": \"/edge_base/harmony/graphics/WINUM2.lmp\", \"start\": 6966542, \"end\": 6966828}, {\"filename\": \"/edge_base/harmony/graphics/WINUM3.lmp\", \"start\": 6966828, \"end\": 6967081}, {\"filename\": \"/edge_base/harmony/graphics/WINUM4.lmp\", \"start\": 6967081, \"end\": 6967305}, {\"filename\": \"/edge_base/harmony/graphics/WINUM5.lmp\", \"start\": 6967305, \"end\": 6967560}, {\"filename\": \"/edge_base/harmony/graphics/WINUM6.lmp\", \"start\": 6967560, \"end\": 6967822}, {\"filename\": \"/edge_base/harmony/graphics/WINUM7.lmp\", \"start\": 6967822, \"end\": 6968039}, {\"filename\": \"/edge_base/harmony/graphics/WINUM8.lmp\", \"start\": 6968039, \"end\": 6968301}, {\"filename\": \"/edge_base/harmony/graphics/WINUM9.lmp\", \"start\": 6968301, \"end\": 6968560}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTF.lmp\", \"start\": 6968560, \"end\": 6968800}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTI.lmp\", \"start\": 6968800, \"end\": 6970248}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTK.lmp\", \"start\": 6970248, \"end\": 6971593}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTS.lmp\", \"start\": 6971593, \"end\": 6972762}, {\"filename\": \"/edge_base/harmony/graphics/WIPAR.lmp\", \"start\": 6972762, \"end\": 6973739}, {\"filename\": \"/edge_base/harmony/graphics/WIPCNT.lmp\", \"start\": 6973739, \"end\": 6973988}, {\"filename\": \"/edge_base/harmony/graphics/WISCRT2.lmp\", \"start\": 6973988, \"end\": 6975763}, {\"filename\": \"/edge_base/harmony/graphics/WISUCKS.lmp\", \"start\": 6975763, \"end\": 6977472}, {\"filename\": \"/edge_base/harmony/graphics/WITIME.lmp\", \"start\": 6977472, \"end\": 6978319}, {\"filename\": \"/edge_base/harmony/graphics/WIVCTMS.lmp\", \"start\": 6978319, \"end\": 6979119}, {\"filename\": \"/edge_base/harmony/scripts/attacks.ddf\", \"start\": 6979119, \"end\": 6987007}, {\"filename\": \"/edge_base/harmony/scripts/coal_hud.ec\", \"start\": 6987007, \"end\": 6990918}, {\"filename\": \"/edge_base/harmony/scripts/colmap.ddf\", \"start\": 6990918, \"end\": 6991234}, {\"filename\": \"/edge_base/harmony/scripts/flats.ddf\", \"start\": 6991234, \"end\": 6991581}, {\"filename\": \"/edge_base/harmony/scripts/language.ldf\", \"start\": 6991581, \"end\": 6995355}, {\"filename\": \"/edge_base/harmony/scripts/levels.ddf\", \"start\": 6995355, \"end\": 7011644}, {\"filename\": \"/edge_base/harmony/scripts/playlist.ddf\", \"start\": 7011644, \"end\": 7013117}, {\"filename\": \"/edge_base/harmony/scripts/styles.ddf\", \"start\": 7013117, \"end\": 7015439}, {\"filename\": \"/edge_base/harmony/scripts/things.ddf\", \"start\": 7015439, \"end\": 7085459}, {\"filename\": \"/edge_base/harmony/scripts/weapons.ddf\", \"start\": 7085459, \"end\": 7089239}, {\"filename\": \"/edge_base/harmony/sprites/CELLA0.png\", \"start\": 7089239, \"end\": 7090981}, {\"filename\": \"/edge_base/harmony/sprites/CLIPA0.png\", \"start\": 7090981, \"end\": 7093667}, {\"filename\": \"/edge_base/harmony/sprites/ROCKA0.png\", \"start\": 7093667, \"end\": 7095098}, {\"filename\": \"/edge_base/harmony/sprites/SHELA0.png\", \"start\": 7095098, \"end\": 7097282}, {\"filename\": \"/edge_base/heretic/graphics/AUTOPAGE.png\", \"start\": 7097282, \"end\": 7140089}, {\"filename\": \"/edge_base/heretic/graphics/BARBACK.lmp\", \"start\": 7140089, \"end\": 7160603}, {\"filename\": \"/edge_base/heretic/graphics/CREDIT.lmp\", \"start\": 7160603, \"end\": 7279891}, {\"filename\": \"/edge_base/heretic/graphics/E2END.png\", \"start\": 7279891, \"end\": 7336315}, {\"filename\": \"/edge_base/heretic/graphics/FINAL1.lmp\", \"start\": 7336315, \"end\": 7455603}, {\"filename\": \"/edge_base/heretic/graphics/FINAL2.lmp\", \"start\": 7455603, \"end\": 7574891}, {\"filename\": \"/edge_base/heretic/graphics/HELP1.lmp\", \"start\": 7574891, \"end\": 7694179}, {\"filename\": \"/edge_base/heretic/graphics/HELP2.lmp\", \"start\": 7694179, \"end\": 7813467}, {\"filename\": \"/edge_base/heretic/graphics/LTFCTOP.lmp\", \"start\": 7813467, \"end\": 7814158}, {\"filename\": \"/edge_base/heretic/graphics/MAPE1.lmp\", \"start\": 7814158, \"end\": 7933446}, {\"filename\": \"/edge_base/heretic/graphics/MAPE2.lmp\", \"start\": 7933446, \"end\": 8052734}, {\"filename\": \"/edge_base/heretic/graphics/MAPE3.lmp\", \"start\": 8052734, \"end\": 8172022}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL00.png\", \"start\": 8172022, \"end\": 8173198}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL01.png\", \"start\": 8173198, \"end\": 8174407}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL02.png\", \"start\": 8174407, \"end\": 8175672}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL03.png\", \"start\": 8175672, \"end\": 8176984}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL04.png\", \"start\": 8176984, \"end\": 8178398}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL05.png\", \"start\": 8178398, \"end\": 8179712}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL06.png\", \"start\": 8179712, \"end\": 8181099}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL07.png\", \"start\": 8181099, \"end\": 8182373}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL08.png\", \"start\": 8182373, \"end\": 8183427}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL09.png\", \"start\": 8183427, \"end\": 8184425}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL10.png\", \"start\": 8184425, \"end\": 8185517}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL11.png\", \"start\": 8185517, \"end\": 8186774}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL12.png\", \"start\": 8186774, \"end\": 8188257}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL13.png\", \"start\": 8188257, \"end\": 8189607}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL14.png\", \"start\": 8189607, \"end\": 8191211}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL15.png\", \"start\": 8191211, \"end\": 8192712}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL16.png\", \"start\": 8192712, \"end\": 8193990}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL17.png\", \"start\": 8193990, \"end\": 8195222}, {\"filename\": \"/edge_base/heretic/graphics/NULL.png\", \"start\": 8195222, \"end\": 8196382}, {\"filename\": \"/edge_base/heretic/graphics/RTFCTOP.lmp\", \"start\": 8196382, \"end\": 8197131}, {\"filename\": \"/edge_base/heretic/graphics/STBARL.lmp\", \"start\": 8197131, \"end\": 8201372}, {\"filename\": \"/edge_base/heretic/graphics/STBARR.lmp\", \"start\": 8201372, \"end\": 8205613}, {\"filename\": \"/edge_base/heretic/graphics/TITLE.png\", \"start\": 8205613, \"end\": 8256236}, {\"filename\": \"/edge_base/heretic/graphics/WIENTER.png\", \"start\": 8256236, \"end\": 8257135}, {\"filename\": \"/edge_base/heretic/graphics/WIF.png\", \"start\": 8257135, \"end\": 8257881}, {\"filename\": \"/edge_base/heretic/scripts/anims.ddf\", \"start\": 8257881, \"end\": 8259604}, {\"filename\": \"/edge_base/heretic/scripts/attacks.ddf\", \"start\": 8259604, \"end\": 8302759}, {\"filename\": \"/edge_base/heretic/scripts/coal_hud.ec\", \"start\": 8302759, \"end\": 8318959}, {\"filename\": \"/edge_base/heretic/scripts/colmap.ddf\", \"start\": 8318959, \"end\": 8319241}, {\"filename\": \"/edge_base/heretic/scripts/flats.ddf\", \"start\": 8319241, \"end\": 8319945}, {\"filename\": \"/edge_base/heretic/scripts/fonts.ddf\", \"start\": 8319945, \"end\": 8320993}, {\"filename\": \"/edge_base/heretic/scripts/games.ddf\", \"start\": 8320993, \"end\": 8323631}, {\"filename\": \"/edge_base/heretic/scripts/images.ddf\", \"start\": 8323631, \"end\": 8326787}, {\"filename\": \"/edge_base/heretic/scripts/language.ldf\", \"start\": 8326787, \"end\": 8335515}, {\"filename\": \"/edge_base/heretic/scripts/levels.ddf\", \"start\": 8335515, \"end\": 8349105}, {\"filename\": \"/edge_base/heretic/scripts/lines.ddf\", \"start\": 8349105, \"end\": 8353940}, {\"filename\": \"/edge_base/heretic/scripts/playlist.ddf\", \"start\": 8353940, \"end\": 8356096}, {\"filename\": \"/edge_base/heretic/scripts/rscript.rts\", \"start\": 8356096, \"end\": 8368994}, {\"filename\": \"/edge_base/heretic/scripts/sectors.ddf\", \"start\": 8368994, \"end\": 8370478}, {\"filename\": \"/edge_base/heretic/scripts/sounds.ddf\", \"start\": 8370478, \"end\": 8382073}, {\"filename\": \"/edge_base/heretic/scripts/styles.ddf\", \"start\": 8382073, \"end\": 8387478}, {\"filename\": \"/edge_base/heretic/scripts/switch.ddf\", \"start\": 8387478, \"end\": 8387933}, {\"filename\": \"/edge_base/heretic/scripts/things.ddf\", \"start\": 8387933, \"end\": 8475797}, {\"filename\": \"/edge_base/heretic/scripts/weapons.ddf\", \"start\": 8475797, \"end\": 8486118}, {\"filename\": \"/edge_base/heretic/sprites/STFFC0.lmp\", \"start\": 8486118, \"end\": 8503248}, {\"filename\": \"/edge_base/heretic/sprites/STFFH0.lmp\", \"start\": 8503248, \"end\": 8521294}, {\"filename\": \"/edge_base/plutonia/graphics/BOSSBACK.lmp\", \"start\": 8521294, \"end\": 8640582}, {\"filename\": \"/edge_base/plutonia/graphics/CREDIT.lmp\", \"start\": 8640582, \"end\": 8759870}, {\"filename\": \"/edge_base/plutonia/graphics/INTERPIC.lmp\", \"start\": 8759870, \"end\": 8879158}, {\"filename\": \"/edge_base/plutonia/graphics/TITLEPIC.lmp\", \"start\": 8879158, \"end\": 8998446}, {\"filename\": \"/edge_base/plutonia/scripts/images.ddf\", \"start\": 8998446, \"end\": 8999872}, {\"filename\": \"/edge_base/plutonia/scripts/language.ldf\", \"start\": 8999872, \"end\": 9003357}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_B.png\", \"start\": 9003357, \"end\": 9018388}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_E.png\", \"start\": 9018388, \"end\": 9033384}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_N.png\", \"start\": 9033384, \"end\": 9046463}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_S.png\", \"start\": 9046463, \"end\": 9059542}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_T.png\", \"start\": 9059542, \"end\": 9074573}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_W.png\", \"start\": 9074573, \"end\": 9089569}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_B.png\", \"start\": 9089569, \"end\": 9117504}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_E.png\", \"start\": 9117504, \"end\": 9129144}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_N.png\", \"start\": 9129144, \"end\": 9141053}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_S.png\", \"start\": 9141053, \"end\": 9152962}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_T.png\", \"start\": 9152962, \"end\": 9180897}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_W.png\", \"start\": 9180897, \"end\": 9192537}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_B.png\", \"start\": 9192537, \"end\": 9391287}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_E.png\", \"start\": 9391287, \"end\": 9481880}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_N.png\", \"start\": 9481880, \"end\": 9565264}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_S.png\", \"start\": 9565264, \"end\": 9648648}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_T.png\", \"start\": 9648648, \"end\": 9847398}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_W.png\", \"start\": 9847398, \"end\": 9937991}, {\"filename\": \"/edge_base/rekkr/graphics/M_DOOM.lmp\", \"start\": 9937991, \"end\": 9963282}, {\"filename\": \"/edge_base/rekkr/graphics/M_EPISOD.lmp\", \"start\": 9963282, \"end\": 9980752}, {\"filename\": \"/edge_base/rekkr/graphics/M_HURT.lmp\", \"start\": 9980752, \"end\": 9982891}, {\"filename\": \"/edge_base/rekkr/graphics/M_JKILL.lmp\", \"start\": 9982891, \"end\": 9985650}, {\"filename\": \"/edge_base/rekkr/graphics/M_LGTTL.lmp\", \"start\": 9985650, \"end\": 9987837}, {\"filename\": \"/edge_base/rekkr/graphics/M_LOADG.lmp\", \"start\": 9987837, \"end\": 9989954}, {\"filename\": \"/edge_base/rekkr/graphics/M_NEWG.lmp\", \"start\": 9989954, \"end\": 9993229}, {\"filename\": \"/edge_base/rekkr/graphics/M_NGAME.lmp\", \"start\": 9993229, \"end\": 9995277}, {\"filename\": \"/edge_base/rekkr/graphics/M_NMARE.lmp\", \"start\": 9995277, \"end\": 9997711}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTION.lmp\", \"start\": 9997711, \"end\": 9999548}, {\"filename\": \"/edge_base/rekkr/graphics/M_QUITG.lmp\", \"start\": 9999548, \"end\": 10001616}, {\"filename\": \"/edge_base/rekkr/graphics/M_RDTHIS.lmp\", \"start\": 10001616, \"end\": 10002861}, {\"filename\": \"/edge_base/rekkr/graphics/M_ROUGH.lmp\", \"start\": 10002861, \"end\": 10005430}, {\"filename\": \"/edge_base/rekkr/graphics/M_SAVEG.lmp\", \"start\": 10005430, \"end\": 10007650}, {\"filename\": \"/edge_base/rekkr/graphics/M_SGTTL.lmp\", \"start\": 10007650, \"end\": 10009870}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKILL.lmp\", \"start\": 10009870, \"end\": 10037962}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL1.png\", \"start\": 10037962, \"end\": 10038550}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL2.png\", \"start\": 10038550, \"end\": 10039132}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL3.png\", \"start\": 10039132, \"end\": 10039727}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL4.png\", \"start\": 10039727, \"end\": 10040315}, {\"filename\": \"/edge_base/rekkr/graphics/M_ULTRA.lmp\", \"start\": 10040315, \"end\": 10042689}, {\"filename\": \"/edge_base/rekkr/graphics/STBARL.lmp\", \"start\": 10042689, \"end\": 10046100}, {\"filename\": \"/edge_base/rekkr/graphics/STBARR.lmp\", \"start\": 10046100, \"end\": 10049511}, {\"filename\": \"/edge_base/rekkr/graphics/WIENTER.lmp\", \"start\": 10049511, \"end\": 10051436}, {\"filename\": \"/edge_base/rekkr/graphics/WIF.lmp\", \"start\": 10051436, \"end\": 10053217}, {\"filename\": \"/edge_base/rekkr/graphics/WILV00.lmp\", \"start\": 10053217, \"end\": 10054816}, {\"filename\": \"/edge_base/rekkr/graphics/WILV01.lmp\", \"start\": 10054816, \"end\": 10055832}, {\"filename\": \"/edge_base/rekkr/graphics/WILV02.lmp\", \"start\": 10055832, \"end\": 10057859}, {\"filename\": \"/edge_base/rekkr/graphics/WILV03.lmp\", \"start\": 10057859, \"end\": 10060426}, {\"filename\": \"/edge_base/rekkr/graphics/WILV04.lmp\", \"start\": 10060426, \"end\": 10062141}, {\"filename\": \"/edge_base/rekkr/graphics/WILV05.lmp\", \"start\": 10062141, \"end\": 10063869}, {\"filename\": \"/edge_base/rekkr/graphics/WILV06.lmp\", \"start\": 10063869, \"end\": 10067253}, {\"filename\": \"/edge_base/rekkr/graphics/WILV07.lmp\", \"start\": 10067253, \"end\": 10070757}, {\"filename\": \"/edge_base/rekkr/graphics/WILV08.lmp\", \"start\": 10070757, \"end\": 10073600}, {\"filename\": \"/edge_base/rekkr/graphics/WILV10.lmp\", \"start\": 10073600, \"end\": 10074979}, {\"filename\": \"/edge_base/rekkr/graphics/WILV11.lmp\", \"start\": 10074979, \"end\": 10076615}, {\"filename\": \"/edge_base/rekkr/graphics/WILV12.lmp\", \"start\": 10076615, \"end\": 10078935}, {\"filename\": \"/edge_base/rekkr/graphics/WILV13.lmp\", \"start\": 10078935, \"end\": 10080145}, {\"filename\": \"/edge_base/rekkr/graphics/WILV14.lmp\", \"start\": 10080145, \"end\": 10082842}, {\"filename\": \"/edge_base/rekkr/graphics/WILV15.lmp\", \"start\": 10082842, \"end\": 10085929}, {\"filename\": \"/edge_base/rekkr/graphics/WILV16.lmp\", \"start\": 10085929, \"end\": 10087570}, {\"filename\": \"/edge_base/rekkr/graphics/WILV17.lmp\", \"start\": 10087570, \"end\": 10089458}, {\"filename\": \"/edge_base/rekkr/graphics/WILV18.lmp\", \"start\": 10089458, \"end\": 10090645}, {\"filename\": \"/edge_base/rekkr/graphics/WILV20.lmp\", \"start\": 10090645, \"end\": 10092606}, {\"filename\": \"/edge_base/rekkr/graphics/WILV21.lmp\", \"start\": 10092606, \"end\": 10095722}, {\"filename\": \"/edge_base/rekkr/graphics/WILV22.lmp\", \"start\": 10095722, \"end\": 10097483}, {\"filename\": \"/edge_base/rekkr/graphics/WILV23.lmp\", \"start\": 10097483, \"end\": 10100342}, {\"filename\": \"/edge_base/rekkr/graphics/WILV24.lmp\", \"start\": 10100342, \"end\": 10102055}, {\"filename\": \"/edge_base/rekkr/graphics/WILV25.lmp\", \"start\": 10102055, \"end\": 10104319}, {\"filename\": \"/edge_base/rekkr/graphics/WILV26.lmp\", \"start\": 10104319, \"end\": 10105552}, {\"filename\": \"/edge_base/rekkr/graphics/WILV27.lmp\", \"start\": 10105552, \"end\": 10106295}, {\"filename\": \"/edge_base/rekkr/graphics/WILV28.lmp\", \"start\": 10106295, \"end\": 10110073}, {\"filename\": \"/edge_base/rekkr/graphics/WILV30.lmp\", \"start\": 10110073, \"end\": 10111925}, {\"filename\": \"/edge_base/rekkr/graphics/WILV31.lmp\", \"start\": 10111925, \"end\": 10113563}, {\"filename\": \"/edge_base/rekkr/graphics/WILV32.lmp\", \"start\": 10113563, \"end\": 10114685}, {\"filename\": \"/edge_base/rekkr/graphics/WILV33.lmp\", \"start\": 10114685, \"end\": 10117024}, {\"filename\": \"/edge_base/rekkr/graphics/WILV34.lmp\", \"start\": 10117024, \"end\": 10119027}, {\"filename\": \"/edge_base/rekkr/graphics/WILV35.lmp\", \"start\": 10119027, \"end\": 10121161}, {\"filename\": \"/edge_base/rekkr/graphics/WILV36.lmp\", \"start\": 10121161, \"end\": 10124227}, {\"filename\": \"/edge_base/rekkr/graphics/WILV37.lmp\", \"start\": 10124227, \"end\": 10126222}, {\"filename\": \"/edge_base/rekkr/graphics/WILV38.lmp\", \"start\": 10126222, \"end\": 10128082}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTF.lmp\", \"start\": 10128082, \"end\": 10128344}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTI.lmp\", \"start\": 10128344, \"end\": 10129550}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTK.lmp\", \"start\": 10129550, \"end\": 10130615}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTS.lmp\", \"start\": 10130615, \"end\": 10131645}, {\"filename\": \"/edge_base/rekkr/graphics/WIPAR.lmp\", \"start\": 10131645, \"end\": 10132407}, {\"filename\": \"/edge_base/rekkr/graphics/WISCRT2.lmp\", \"start\": 10132407, \"end\": 10133974}, {\"filename\": \"/edge_base/rekkr/graphics/WITIME.lmp\", \"start\": 10133974, \"end\": 10134888}, {\"filename\": \"/edge_base/rekkr/scripts/anims.ddf\", \"start\": 10134888, \"end\": 10135032}, {\"filename\": \"/edge_base/rekkr/scripts/attacks.ddf\", \"start\": 10135032, \"end\": 10135792}, {\"filename\": \"/edge_base/rekkr/scripts/images.ddf\", \"start\": 10135792, \"end\": 10142940}, {\"filename\": \"/edge_base/rekkr/scripts/language.ldf\", \"start\": 10142940, \"end\": 10143750}, {\"filename\": \"/edge_base/rekkr/scripts/styles.ddf\", \"start\": 10143750, \"end\": 10148115}, {\"filename\": \"/edge_base/rekkr/scripts/things.ddf\", \"start\": 10148115, \"end\": 10150355}, {\"filename\": \"/edge_base/rekkr/scripts/weapons.ddf\", \"start\": 10150355, \"end\": 10152290}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA1.lmp\", \"start\": 10152290, \"end\": 10152915}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA2A8.lmp\", \"start\": 10152915, \"end\": 10153890}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA3A7.lmp\", \"start\": 10153890, \"end\": 10154865}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA4A6.lmp\", \"start\": 10154865, \"end\": 10155840}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA5.lmp\", \"start\": 10155840, \"end\": 10156471}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB1.lmp\", \"start\": 10156471, \"end\": 10157054}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB2B8.lmp\", \"start\": 10157054, \"end\": 10158021}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB3B7.lmp\", \"start\": 10158021, \"end\": 10158988}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB4B6.lmp\", \"start\": 10158988, \"end\": 10159955}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB5.lmp\", \"start\": 10159955, \"end\": 10160537}, {\"filename\": \"/edge_base/tnt/graphics/BOSSBACK.lmp\", \"start\": 10160537, \"end\": 10279825}, {\"filename\": \"/edge_base/tnt/graphics/CREDIT.lmp\", \"start\": 10279825, \"end\": 10399113}, {\"filename\": \"/edge_base/tnt/graphics/INTERPIC.lmp\", \"start\": 10399113, \"end\": 10518401}, {\"filename\": \"/edge_base/tnt/graphics/TITLEPIC.lmp\", \"start\": 10518401, \"end\": 10637689}, {\"filename\": \"/edge_base/tnt/scripts/images.ddf\", \"start\": 10637689, \"end\": 10639119}, {\"filename\": \"/edge_base/tnt/scripts/language.ldf\", \"start\": 10639119, \"end\": 10642898}, {\"filename\": \"/edge_base/tnt/textures/SKY1_B.png\", \"start\": 10642898, \"end\": 10658891}, {\"filename\": \"/edge_base/tnt/textures/SKY1_E.png\", \"start\": 10658891, \"end\": 10678357}, {\"filename\": \"/edge_base/tnt/textures/SKY1_N.png\", \"start\": 10678357, \"end\": 10695783}, {\"filename\": \"/edge_base/tnt/textures/SKY1_S.png\", \"start\": 10695783, \"end\": 10711690}, {\"filename\": \"/edge_base/tnt/textures/SKY1_T.png\", \"start\": 10711690, \"end\": 10751808}, {\"filename\": \"/edge_base/tnt/textures/SKY1_W.png\", \"start\": 10751808, \"end\": 10771132}, {\"filename\": \"/edge_base/tnt/textures/SKY2_B.png\", \"start\": 10771132, \"end\": 10772443}, {\"filename\": \"/edge_base/tnt/textures/SKY2_E.png\", \"start\": 10772443, \"end\": 10776966}, {\"filename\": \"/edge_base/tnt/textures/SKY2_N.png\", \"start\": 10776966, \"end\": 10778195}, {\"filename\": \"/edge_base/tnt/textures/SKY2_S.png\", \"start\": 10778195, \"end\": 10784412}, {\"filename\": \"/edge_base/tnt/textures/SKY2_T.png\", \"start\": 10784412, \"end\": 10788539}, {\"filename\": \"/edge_base/tnt/textures/SKY2_W.png\", \"start\": 10788539, \"end\": 10790081}, {\"filename\": \"/edge_base/tnt/textures/SKY3_B.png\", \"start\": 10790081, \"end\": 10814552}, {\"filename\": \"/edge_base/tnt/textures/SKY3_E.png\", \"start\": 10814552, \"end\": 10822254}, {\"filename\": \"/edge_base/tnt/textures/SKY3_N.png\", \"start\": 10822254, \"end\": 10830133}, {\"filename\": \"/edge_base/tnt/textures/SKY3_S.png\", \"start\": 10830133, \"end\": 10837481}, {\"filename\": \"/edge_base/tnt/textures/SKY3_T.png\", \"start\": 10837481, \"end\": 10861952}, {\"filename\": \"/edge_base/tnt/textures/SKY3_W.png\", \"start\": 10861952, \"end\": 10869293}, {\"filename\": \"/edge_defs/colormaps/AUTOMAPS.dat\", \"start\": 10869293, \"end\": 10869805}, {\"filename\": \"/edge_defs/colormaps/LAVAMAP.cmp\", \"start\": 10869805, \"end\": 10878509}, {\"filename\": \"/edge_defs/colormaps/NITEVMAP.cmp\", \"start\": 10878509, \"end\": 10878765}, {\"filename\": \"/edge_defs/colormaps/PLYRMAPS.dat\", \"start\": 10878765, \"end\": 10882605}, {\"filename\": \"/edge_defs/colormaps/SARGMAPS.dat\", \"start\": 10882605, \"end\": 10884141}, {\"filename\": \"/edge_defs/colormaps/SHADEMAP.cmp\", \"start\": 10884141, \"end\": 10884397}, {\"filename\": \"/edge_defs/colormaps/SKINMAPS.dat\", \"start\": 10884397, \"end\": 10885677}, {\"filename\": \"/edge_defs/colormaps/SLIMEMAP.cmp\", \"start\": 10885677, \"end\": 10894381}, {\"filename\": \"/edge_defs/colormaps/TEXTMAPS.dat\", \"start\": 10894381, \"end\": 10896173}, {\"filename\": \"/edge_defs/colormaps/TXTBLUES.dat\", \"start\": 10896173, \"end\": 10897453}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS1.dat\", \"start\": 10897453, \"end\": 10898733}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS2.dat\", \"start\": 10898733, \"end\": 10900013}, {\"filename\": \"/edge_defs/colormaps/TXTGREYS.dat\", \"start\": 10900013, \"end\": 10901293}, {\"filename\": \"/edge_defs/colormaps/TXTGRNS.dat\", \"start\": 10901293, \"end\": 10902573}, {\"filename\": \"/edge_defs/colormaps/TXTORANS.dat\", \"start\": 10902573, \"end\": 10903853}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS1.dat\", \"start\": 10903853, \"end\": 10905133}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS2.dat\", \"start\": 10905133, \"end\": 10906413}, {\"filename\": \"/edge_defs/colormaps/TXTPURPS.dat\", \"start\": 10906413, \"end\": 10907693}, {\"filename\": \"/edge_defs/colormaps/TXTREDS.dat\", \"start\": 10907693, \"end\": 10908973}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS1.dat\", \"start\": 10908973, \"end\": 10910253}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS2.dat\", \"start\": 10910253, \"end\": 10911533}, {\"filename\": \"/edge_defs/colormaps/WATERMAP.cmp\", \"start\": 10911533, \"end\": 10920237}, {\"filename\": \"/edge_defs/graphics/CREDIT2.lmp\", \"start\": 10920237, \"end\": 10987125}, {\"filename\": \"/edge_defs/graphics/DLITEXPN.png\", \"start\": 10987125, \"end\": 11001468}, {\"filename\": \"/edge_defs/graphics/EDGECBG1.jpg\", \"start\": 11001468, \"end\": 11064835}, {\"filename\": \"/edge_defs/graphics/EDGECRED.png\", \"start\": 11064835, \"end\": 11232434}, {\"filename\": \"/edge_defs/graphics/EDGETTL.lmp\", \"start\": 11232434, \"end\": 11299322}, {\"filename\": \"/edge_defs/graphics/ENDFONT.png\", \"start\": 11299322, \"end\": 11306426}, {\"filename\": \"/edge_defs/graphics/FONTVERD.png\", \"start\": 11306426, \"end\": 11351057}, {\"filename\": \"/edge_defs/graphics/MOUSE.lmp\", \"start\": 11351057, \"end\": 11351240}, {\"filename\": \"/edge_defs/graphics/M_EPI5.lmp\", \"start\": 11351240, \"end\": 11352384}, {\"filename\": \"/edge_defs/graphics/M_EPI6.lmp\", \"start\": 11352384, \"end\": 11355414}, {\"filename\": \"/edge_defs/graphics/STBARL.lmp\", \"start\": 11355414, \"end\": 11358825}, {\"filename\": \"/edge_defs/graphics/STBARR.lmp\", \"start\": 11358825, \"end\": 11362236}, {\"filename\": \"/edge_defs/graphics/STCFN000.lmp\", \"start\": 11362236, \"end\": 11362380}, {\"filename\": \"/edge_defs/graphics/STCFN132.lmp\", \"start\": 11362380, \"end\": 11362522}, {\"filename\": \"/edge_defs/graphics/STCFN134.lmp\", \"start\": 11362522, \"end\": 11362649}, {\"filename\": \"/edge_defs/graphics/STCFN148.lmp\", \"start\": 11362649, \"end\": 11362784}, {\"filename\": \"/edge_defs/graphics/STDESYNC.lmp\", \"start\": 11362784, \"end\": 11365381}, {\"filename\": \"/edge_defs/graphics/STFB0.lmp\", \"start\": 11365381, \"end\": 11366789}, {\"filename\": \"/edge_defs/graphics/STFB1.lmp\", \"start\": 11366789, \"end\": 11368197}, {\"filename\": \"/edge_defs/graphics/STFB2.lmp\", \"start\": 11368197, \"end\": 11369605}, {\"filename\": \"/edge_defs/graphics/STFB3.lmp\", \"start\": 11369605, \"end\": 11371013}, {\"filename\": \"/edge_defs/graphics/STFB4.lmp\", \"start\": 11371013, \"end\": 11372421}, {\"filename\": \"/edge_defs/graphics/STFB5.lmp\", \"start\": 11372421, \"end\": 11373829}, {\"filename\": \"/edge_defs/graphics/STFB6.lmp\", \"start\": 11373829, \"end\": 11375237}, {\"filename\": \"/edge_defs/graphics/STFB7.lmp\", \"start\": 11375237, \"end\": 11376645}, {\"filename\": \"/edge_defs/graphics/STKEYS6.lmp\", \"start\": 11376645, \"end\": 11376765}, {\"filename\": \"/edge_defs/graphics/STKEYS7.lmp\", \"start\": 11376765, \"end\": 11376885}, {\"filename\": \"/edge_defs/graphics/STKEYS8.lmp\", \"start\": 11376885, \"end\": 11377005}, {\"filename\": \"/edge_defs/graphics/STPB0.lmp\", \"start\": 11377005, \"end\": 11378483}, {\"filename\": \"/edge_defs/graphics/STPB1.lmp\", \"start\": 11378483, \"end\": 11379961}, {\"filename\": \"/edge_defs/graphics/STPB2.lmp\", \"start\": 11379961, \"end\": 11381439}, {\"filename\": \"/edge_defs/graphics/STPB3.lmp\", \"start\": 11381439, \"end\": 11382917}, {\"filename\": \"/edge_defs/graphics/STPB4.lmp\", \"start\": 11382917, \"end\": 11384395}, {\"filename\": \"/edge_defs/graphics/STPB5.lmp\", \"start\": 11384395, \"end\": 11385873}, {\"filename\": \"/edge_defs/graphics/STPB6.lmp\", \"start\": 11385873, \"end\": 11387351}, {\"filename\": \"/edge_defs/graphics/STPB7.lmp\", \"start\": 11387351, \"end\": 11388829}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR1.png\", \"start\": 11388829, \"end\": 11389022}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR2.png\", \"start\": 11389022, \"end\": 11389207}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR3.png\", \"start\": 11389207, \"end\": 11389392}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR4.png\", \"start\": 11389392, \"end\": 11389579}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR5.png\", \"start\": 11389579, \"end\": 11389845}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR6.png\", \"start\": 11389845, \"end\": 11390186}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR7.png\", \"start\": 11390186, \"end\": 11390480}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR8.png\", \"start\": 11390480, \"end\": 11391864}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR9.png\", \"start\": 11391864, \"end\": 11392283}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN001.png\", \"start\": 11392283, \"end\": 11392640}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN002.png\", \"start\": 11392640, \"end\": 11392985}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN003.png\", \"start\": 11392985, \"end\": 11393341}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN004.png\", \"start\": 11393341, \"end\": 11393689}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN005.png\", \"start\": 11393689, \"end\": 11394028}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN006.png\", \"start\": 11394028, \"end\": 11394346}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN007.png\", \"start\": 11394346, \"end\": 11394696}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN008.png\", \"start\": 11394696, \"end\": 11395052}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN009.png\", \"start\": 11395052, \"end\": 11395331}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN010.png\", \"start\": 11395331, \"end\": 11395656}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN011.png\", \"start\": 11395656, \"end\": 11396025}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN012.png\", \"start\": 11396025, \"end\": 11396349}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN013.png\", \"start\": 11396349, \"end\": 11396715}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN014.png\", \"start\": 11396715, \"end\": 11397071}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN015.png\", \"start\": 11397071, \"end\": 11397444}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN016.png\", \"start\": 11397444, \"end\": 11397778}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN017.png\", \"start\": 11397778, \"end\": 11398153}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN018.png\", \"start\": 11398153, \"end\": 11398511}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN019.png\", \"start\": 11398511, \"end\": 11398862}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN020.png\", \"start\": 11398862, \"end\": 11399181}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN021.png\", \"start\": 11399181, \"end\": 11399527}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN022.png\", \"start\": 11399527, \"end\": 11399856}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN023.png\", \"start\": 11399856, \"end\": 11400211}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN024.png\", \"start\": 11400211, \"end\": 11400562}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN025.png\", \"start\": 11400562, \"end\": 11400911}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN026.png\", \"start\": 11400911, \"end\": 11401249}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN027.png\", \"start\": 11401249, \"end\": 11401538}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN028.png\", \"start\": 11401538, \"end\": 11401852}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN029.png\", \"start\": 11401852, \"end\": 11402095}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN030.png\", \"start\": 11402095, \"end\": 11402338}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN031.png\", \"start\": 11402338, \"end\": 11402604}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN032.png\", \"start\": 11402604, \"end\": 11402837}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN033.png\", \"start\": 11402837, \"end\": 11403175}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN034.png\", \"start\": 11403175, \"end\": 11403468}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN035.png\", \"start\": 11403468, \"end\": 11403806}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN036.png\", \"start\": 11403806, \"end\": 11404135}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN037.png\", \"start\": 11404135, \"end\": 11404464}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN038.png\", \"start\": 11404464, \"end\": 11404797}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN039.png\", \"start\": 11404797, \"end\": 11405133}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN040.png\", \"start\": 11405133, \"end\": 11405430}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN041.png\", \"start\": 11405430, \"end\": 11405770}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN042.png\", \"start\": 11405770, \"end\": 11406110}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN043.png\", \"start\": 11406110, \"end\": 11406345}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN044.png\", \"start\": 11406345, \"end\": 11406665}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN045.png\", \"start\": 11406665, \"end\": 11406949}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN046.png\", \"start\": 11406949, \"end\": 11407279}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN047.png\", \"start\": 11407279, \"end\": 11407617}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN048.png\", \"start\": 11407617, \"end\": 11407932}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN049.png\", \"start\": 11407932, \"end\": 11408261}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN050.png\", \"start\": 11408261, \"end\": 11408583}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN051.png\", \"start\": 11408583, \"end\": 11408900}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN052.png\", \"start\": 11408900, \"end\": 11409239}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN053.png\", \"start\": 11409239, \"end\": 11409559}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN054.png\", \"start\": 11409559, \"end\": 11409833}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN055.png\", \"start\": 11409833, \"end\": 11410140}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN056.png\", \"start\": 11410140, \"end\": 11410485}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN057.png\", \"start\": 11410485, \"end\": 11410783}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN058.png\", \"start\": 11410783, \"end\": 11411137}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN059.png\", \"start\": 11411137, \"end\": 11411476}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN060.png\", \"start\": 11411476, \"end\": 11411815}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN061.png\", \"start\": 11411815, \"end\": 11412139}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN062.png\", \"start\": 11412139, \"end\": 11412479}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN063.png\", \"start\": 11412479, \"end\": 11412804}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN064.png\", \"start\": 11412804, \"end\": 11413143}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN065.png\", \"start\": 11413143, \"end\": 11413449}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN066.png\", \"start\": 11413449, \"end\": 11413783}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN067.png\", \"start\": 11413783, \"end\": 11414115}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN068.png\", \"start\": 11414115, \"end\": 11414463}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN069.png\", \"start\": 11414463, \"end\": 11414804}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN070.png\", \"start\": 11414804, \"end\": 11415129}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN071.png\", \"start\": 11415129, \"end\": 11415461}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN072.png\", \"start\": 11415461, \"end\": 11415790}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN073.png\", \"start\": 11415790, \"end\": 11416024}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN074.png\", \"start\": 11416024, \"end\": 11416270}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN075.png\", \"start\": 11416270, \"end\": 11416596}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN076.png\", \"start\": 11416596, \"end\": 11416883}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN077.png\", \"start\": 11416883, \"end\": 11417201}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN078.png\", \"start\": 11417201, \"end\": 11417521}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN079.png\", \"start\": 11417521, \"end\": 11417832}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN080.png\", \"start\": 11417832, \"end\": 11418149}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN081.png\", \"start\": 11418149, \"end\": 11418464}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN082.png\", \"start\": 11418464, \"end\": 11418766}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN083.png\", \"start\": 11418766, \"end\": 11419094}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN084.png\", \"start\": 11419094, \"end\": 11419426}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN085.png\", \"start\": 11419426, \"end\": 11419674}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN086.png\", \"start\": 11419674, \"end\": 11419925}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_1x.png\", \"start\": 11419925, \"end\": 11427261}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_2x.png\", \"start\": 11427261, \"end\": 11434650}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_1x.png\", \"start\": 11434650, \"end\": 11434814}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_2x.png\", \"start\": 11434814, \"end\": 11434988}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_1x.png\", \"start\": 11434988, \"end\": 11442291}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_2x.png\", \"start\": 11442291, \"end\": 11449626}, {\"filename\": \"/edge_defs/scripts/anims.ddf\", \"start\": 11449626, \"end\": 11451816}, {\"filename\": \"/edge_defs/scripts/attacks.ddf\", \"start\": 11451816, \"end\": 11477099}, {\"filename\": \"/edge_defs/scripts/coal_api.ec\", \"start\": 11477099, \"end\": 11492281}, {\"filename\": \"/edge_defs/scripts/coal_hud.ec\", \"start\": 11492281, \"end\": 11511058}, {\"filename\": \"/edge_defs/scripts/colmap.ddf\", \"start\": 11511058, \"end\": 11515277}, {\"filename\": \"/edge_defs/scripts/flats.ddf\", \"start\": 11515277, \"end\": 11520944}, {\"filename\": \"/edge_defs/scripts/fonts.ddf\", \"start\": 11520944, \"end\": 11522661}, {\"filename\": \"/edge_defs/scripts/games.ddf\", \"start\": 11522661, \"end\": 11527203}, {\"filename\": \"/edge_defs/scripts/images.ddf\", \"start\": 11527203, \"end\": 11546744}, {\"filename\": \"/edge_defs/scripts/language.ldf\", \"start\": 11546744, \"end\": 11665426}, {\"filename\": \"/edge_defs/scripts/levels.ddf\", \"start\": 11665426, \"end\": 11683669}, {\"filename\": \"/edge_defs/scripts/lines.ddf\", \"start\": 11683669, \"end\": 11781753}, {\"filename\": \"/edge_defs/scripts/playlist.ddf\", \"start\": 11781753, \"end\": 11784671}, {\"filename\": \"/edge_defs/scripts/rscript.rts\", \"start\": 11784671, \"end\": 11786362}, {\"filename\": \"/edge_defs/scripts/sectors.ddf\", \"start\": 11786362, \"end\": 11800199}, {\"filename\": \"/edge_defs/scripts/sounds.ddf\", \"start\": 11800199, \"end\": 11811794}, {\"filename\": \"/edge_defs/scripts/styles.ddf\", \"start\": 11811794, \"end\": 11817982}, {\"filename\": \"/edge_defs/scripts/switch.ddf\", \"start\": 11817982, \"end\": 11822286}, {\"filename\": \"/edge_defs/scripts/things.ddf\", \"start\": 11822286, \"end\": 11971613}, {\"filename\": \"/edge_defs/scripts/wadfixes.ddf\", \"start\": 11971613, \"end\": 11972560}, {\"filename\": \"/edge_defs/scripts/weapons.ddf\", \"start\": 11972560, \"end\": 11978254}, {\"filename\": \"/edge_defs/sounds/DPBAREXP.lmp\", \"start\": 11978254, \"end\": 11978337}, {\"filename\": \"/edge_defs/sounds/DPBDCLS.lmp\", \"start\": 11978337, \"end\": 11978383}, {\"filename\": \"/edge_defs/sounds/DPBDOPN.lmp\", \"start\": 11978383, \"end\": 11978424}, {\"filename\": \"/edge_defs/sounds/DPBFG.lmp\", \"start\": 11978424, \"end\": 11978612}, {\"filename\": \"/edge_defs/sounds/DPBGACT.lmp\", \"start\": 11978612, \"end\": 11978711}, {\"filename\": \"/edge_defs/sounds/DPBGDTH1.lmp\", \"start\": 11978711, \"end\": 11978800}, {\"filename\": \"/edge_defs/sounds/DPBGDTH2.lmp\", \"start\": 11978800, \"end\": 11978889}, {\"filename\": \"/edge_defs/sounds/DPBGSIT1.lmp\", \"start\": 11978889, \"end\": 11979000}, {\"filename\": \"/edge_defs/sounds/DPBGSIT2.lmp\", \"start\": 11979000, \"end\": 11979111}, {\"filename\": \"/edge_defs/sounds/DPBOSCUB.lmp\", \"start\": 11979111, \"end\": 11979147}, {\"filename\": \"/edge_defs/sounds/DPBOSDTH.lmp\", \"start\": 11979147, \"end\": 11979426}, {\"filename\": \"/edge_defs/sounds/DPBOSPIT.lmp\", \"start\": 11979426, \"end\": 11979471}, {\"filename\": \"/edge_defs/sounds/DPBOSPN.lmp\", \"start\": 11979471, \"end\": 11979509}, {\"filename\": \"/edge_defs/sounds/DPBOSSIT.lmp\", \"start\": 11979509, \"end\": 11979643}, {\"filename\": \"/edge_defs/sounds/DPBRSDTH.lmp\", \"start\": 11979643, \"end\": 11979755}, {\"filename\": \"/edge_defs/sounds/DPBRSSIT.lmp\", \"start\": 11979755, \"end\": 11979863}, {\"filename\": \"/edge_defs/sounds/DPBSPACT.lmp\", \"start\": 11979863, \"end\": 11979919}, {\"filename\": \"/edge_defs/sounds/DPBSPDTH.lmp\", \"start\": 11979919, \"end\": 11980010}, {\"filename\": \"/edge_defs/sounds/DPBSPSIT.lmp\", \"start\": 11980010, \"end\": 11980149}, {\"filename\": \"/edge_defs/sounds/DPBSPWLK.lmp\", \"start\": 11980149, \"end\": 11980194}, {\"filename\": \"/edge_defs/sounds/DPCACDTH.lmp\", \"start\": 11980194, \"end\": 11980283}, {\"filename\": \"/edge_defs/sounds/DPCACSIT.lmp\", \"start\": 11980283, \"end\": 11980395}, {\"filename\": \"/edge_defs/sounds/DPCLAW.lmp\", \"start\": 11980395, \"end\": 11980441}, {\"filename\": \"/edge_defs/sounds/DPCYBDTH.lmp\", \"start\": 11980441, \"end\": 11980578}, {\"filename\": \"/edge_defs/sounds/DPCYBSIT.lmp\", \"start\": 11980578, \"end\": 11980727}, {\"filename\": \"/edge_defs/sounds/DPDBCLS.lmp\", \"start\": 11980727, \"end\": 11980738}, {\"filename\": \"/edge_defs/sounds/DPDBLOAD.lmp\", \"start\": 11980738, \"end\": 11980749}, {\"filename\": \"/edge_defs/sounds/DPDBOPN.lmp\", \"start\": 11980749, \"end\": 11980760}, {\"filename\": \"/edge_defs/sounds/DPDMACT.lmp\", \"start\": 11980760, \"end\": 11980787}, {\"filename\": \"/edge_defs/sounds/DPDMPAIN.lmp\", \"start\": 11980787, \"end\": 11980828}, {\"filename\": \"/edge_defs/sounds/DPDORCLS.lmp\", \"start\": 11980828, \"end\": 11980899}, {\"filename\": \"/edge_defs/sounds/DPDOROPN.lmp\", \"start\": 11980899, \"end\": 11980972}, {\"filename\": \"/edge_defs/sounds/DPDSHTGN.lmp\", \"start\": 11980972, \"end\": 11981015}, {\"filename\": \"/edge_defs/sounds/DPFIRSHT.lmp\", \"start\": 11981015, \"end\": 11981050}, {\"filename\": \"/edge_defs/sounds/DPFIRXPL.lmp\", \"start\": 11981050, \"end\": 11981067}, {\"filename\": \"/edge_defs/sounds/DPFLAME.lmp\", \"start\": 11981067, \"end\": 11981144}, {\"filename\": \"/edge_defs/sounds/DPFLAMST.lmp\", \"start\": 11981144, \"end\": 11981158}, {\"filename\": \"/edge_defs/sounds/DPGETPOW.lmp\", \"start\": 11981158, \"end\": 11981295}, {\"filename\": \"/edge_defs/sounds/DPHOOF.lmp\", \"start\": 11981295, \"end\": 11981375}, {\"filename\": \"/edge_defs/sounds/DPITEMUP.lmp\", \"start\": 11981375, \"end\": 11981462}, {\"filename\": \"/edge_defs/sounds/DPITMBK.lmp\", \"start\": 11981462, \"end\": 11981547}, {\"filename\": \"/edge_defs/sounds/DPKEENDT.lmp\", \"start\": 11981547, \"end\": 11981653}, {\"filename\": \"/edge_defs/sounds/DPKEENPN.lmp\", \"start\": 11981653, \"end\": 11981709}, {\"filename\": \"/edge_defs/sounds/DPKNTDTH.lmp\", \"start\": 11981709, \"end\": 11981832}, {\"filename\": \"/edge_defs/sounds/DPKNTSIT.lmp\", \"start\": 11981832, \"end\": 11981898}, {\"filename\": \"/edge_defs/sounds/DPMANATK.lmp\", \"start\": 11981898, \"end\": 11981964}, {\"filename\": \"/edge_defs/sounds/DPMANDTH.lmp\", \"start\": 11981964, \"end\": 11982042}, {\"filename\": \"/edge_defs/sounds/DPMANSIT.lmp\", \"start\": 11982042, \"end\": 11982139}, {\"filename\": \"/edge_defs/sounds/DPMETAL.lmp\", \"start\": 11982139, \"end\": 11982158}, {\"filename\": \"/edge_defs/sounds/DPMNPAIN.lmp\", \"start\": 11982158, \"end\": 11982218}, {\"filename\": \"/edge_defs/sounds/DPNOWAY.lmp\", \"start\": 11982218, \"end\": 11982259}, {\"filename\": \"/edge_defs/sounds/DPOOF.lmp\", \"start\": 11982259, \"end\": 11982278}, {\"filename\": \"/edge_defs/sounds/DPPDIEHI.lmp\", \"start\": 11982278, \"end\": 11982356}, {\"filename\": \"/edge_defs/sounds/DPPEDTH.lmp\", \"start\": 11982356, \"end\": 11982465}, {\"filename\": \"/edge_defs/sounds/DPPEPAIN.lmp\", \"start\": 11982465, \"end\": 11982515}, {\"filename\": \"/edge_defs/sounds/DPPESIT.lmp\", \"start\": 11982515, \"end\": 11982632}, {\"filename\": \"/edge_defs/sounds/DPPISTOL.lmp\", \"start\": 11982632, \"end\": 11982650}, {\"filename\": \"/edge_defs/sounds/DPPLASMA.lmp\", \"start\": 11982650, \"end\": 11982692}, {\"filename\": \"/edge_defs/sounds/DPPLDETH.lmp\", \"start\": 11982692, \"end\": 11982841}, {\"filename\": \"/edge_defs/sounds/DPPLPAIN.lmp\", \"start\": 11982841, \"end\": 11982871}, {\"filename\": \"/edge_defs/sounds/DPPODTH1.lmp\", \"start\": 11982871, \"end\": 11982960}, {\"filename\": \"/edge_defs/sounds/DPPODTH2.lmp\", \"start\": 11982960, \"end\": 11983049}, {\"filename\": \"/edge_defs/sounds/DPPODTH3.lmp\", \"start\": 11983049, \"end\": 11983138}, {\"filename\": \"/edge_defs/sounds/DPPOPAIN.lmp\", \"start\": 11983138, \"end\": 11983176}, {\"filename\": \"/edge_defs/sounds/DPPOSACT.lmp\", \"start\": 11983176, \"end\": 11983206}, {\"filename\": \"/edge_defs/sounds/DPPOSIT1.lmp\", \"start\": 11983206, \"end\": 11983317}, {\"filename\": \"/edge_defs/sounds/DPPOSIT2.lmp\", \"start\": 11983317, \"end\": 11983428}, {\"filename\": \"/edge_defs/sounds/DPPOSIT3.lmp\", \"start\": 11983428, \"end\": 11983539}, {\"filename\": \"/edge_defs/sounds/DPPSTART.lmp\", \"start\": 11983539, \"end\": 11983580}, {\"filename\": \"/edge_defs/sounds/DPPSTOP.lmp\", \"start\": 11983580, \"end\": 11983597}, {\"filename\": \"/edge_defs/sounds/DPPUNCH.lmp\", \"start\": 11983597, \"end\": 11983634}, {\"filename\": \"/edge_defs/sounds/DPRADIO.lmp\", \"start\": 11983634, \"end\": 11983686}, {\"filename\": \"/edge_defs/sounds/DPRLAUNC.lmp\", \"start\": 11983686, \"end\": 11983749}, {\"filename\": \"/edge_defs/sounds/DPRXPLOD.lmp\", \"start\": 11983749, \"end\": 11983921}, {\"filename\": \"/edge_defs/sounds/DPSAWFUL.lmp\", \"start\": 11983921, \"end\": 11983949}, {\"filename\": \"/edge_defs/sounds/DPSAWHIT.lmp\", \"start\": 11983949, \"end\": 11983977}, {\"filename\": \"/edge_defs/sounds/DPSAWIDL.lmp\", \"start\": 11983977, \"end\": 11983982}, {\"filename\": \"/edge_defs/sounds/DPSAWUP.lmp\", \"start\": 11983982, \"end\": 11984070}, {\"filename\": \"/edge_defs/sounds/DPSGCOCK.lmp\", \"start\": 11984070, \"end\": 11984133}, {\"filename\": \"/edge_defs/sounds/DPSGTATK.lmp\", \"start\": 11984133, \"end\": 11984207}, {\"filename\": \"/edge_defs/sounds/DPSGTDTH.lmp\", \"start\": 11984207, \"end\": 11984296}, {\"filename\": \"/edge_defs/sounds/DPSGTSIT.lmp\", \"start\": 11984296, \"end\": 11984407}, {\"filename\": \"/edge_defs/sounds/DPSHOTGN.lmp\", \"start\": 11984407, \"end\": 11984449}, {\"filename\": \"/edge_defs/sounds/DPSKEACT.lmp\", \"start\": 11984449, \"end\": 11984489}, {\"filename\": \"/edge_defs/sounds/DPSKEATK.lmp\", \"start\": 11984489, \"end\": 11984548}, {\"filename\": \"/edge_defs/sounds/DPSKEDTH.lmp\", \"start\": 11984548, \"end\": 11984628}, {\"filename\": \"/edge_defs/sounds/DPSKEPCH.lmp\", \"start\": 11984628, \"end\": 11984665}, {\"filename\": \"/edge_defs/sounds/DPSKESIT.lmp\", \"start\": 11984665, \"end\": 11984771}, {\"filename\": \"/edge_defs/sounds/DPSKESWG.lmp\", \"start\": 11984771, \"end\": 11984811}, {\"filename\": \"/edge_defs/sounds/DPSKLATK.lmp\", \"start\": 11984811, \"end\": 11984891}, {\"filename\": \"/edge_defs/sounds/DPSKLDTH.lmp\", \"start\": 11984891, \"end\": 11984908}, {\"filename\": \"/edge_defs/sounds/DPSLOP.lmp\", \"start\": 11984908, \"end\": 11985017}, {\"filename\": \"/edge_defs/sounds/DPSPIDTH.lmp\", \"start\": 11985017, \"end\": 11985130}, {\"filename\": \"/edge_defs/sounds/DPSPISIT.lmp\", \"start\": 11985130, \"end\": 11985278}, {\"filename\": \"/edge_defs/sounds/DPSSDTH.lmp\", \"start\": 11985278, \"end\": 11985367}, {\"filename\": \"/edge_defs/sounds/DPSSSIT.lmp\", \"start\": 11985367, \"end\": 11985478}, {\"filename\": \"/edge_defs/sounds/DPSTNMOV.lmp\", \"start\": 11985478, \"end\": 11985486}, {\"filename\": \"/edge_defs/sounds/DPSWTCHN.lmp\", \"start\": 11985486, \"end\": 11985514}, {\"filename\": \"/edge_defs/sounds/DPSWTCHX.lmp\", \"start\": 11985514, \"end\": 11985543}, {\"filename\": \"/edge_defs/sounds/DPTELEPT.lmp\", \"start\": 11985543, \"end\": 11985645}, {\"filename\": \"/edge_defs/sounds/DPTINK.lmp\", \"start\": 11985645, \"end\": 11985697}, {\"filename\": \"/edge_defs/sounds/DPVILACT.lmp\", \"start\": 11985697, \"end\": 11985752}, {\"filename\": \"/edge_defs/sounds/DPVILATK.lmp\", \"start\": 11985752, \"end\": 11985815}, {\"filename\": \"/edge_defs/sounds/DPVILDTH.lmp\", \"start\": 11985815, \"end\": 11986083}, {\"filename\": \"/edge_defs/sounds/DPVILSIT.lmp\", \"start\": 11986083, \"end\": 11986159}, {\"filename\": \"/edge_defs/sounds/DPVIPAIN.lmp\", \"start\": 11986159, \"end\": 11986270}, {\"filename\": \"/edge_defs/sounds/DPWPNUP.lmp\", \"start\": 11986270, \"end\": 11986314}, {\"filename\": \"/edge_defs/sounds/DSACIDFT.ogg\", \"start\": 11986314, \"end\": 11993864, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSCRUSH.lmp\", \"start\": 11993864, \"end\": 12000882}, {\"filename\": \"/edge_defs/sounds/DSDGACT.ogg\", \"start\": 12000882, \"end\": 12008543, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGATK.ogg\", \"start\": 12008543, \"end\": 12015349, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGDTH.ogg\", \"start\": 12015349, \"end\": 12026165, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGPAIN.ogg\", \"start\": 12026165, \"end\": 12032157, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGSIT.ogg\", \"start\": 12032157, \"end\": 12038320, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT1.wav\", \"start\": 12038320, \"end\": 12053664, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT2.wav\", \"start\": 12053664, \"end\": 12069136, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT3.wav\", \"start\": 12069136, \"end\": 12081376, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT4.wav\", \"start\": 12081376, \"end\": 12096742, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSGLSBRK.wav\", \"start\": 12096742, \"end\": 12129340, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSJPDOWN.lmp\", \"start\": 12129340, \"end\": 12145928}, {\"filename\": \"/edge_defs/sounds/DSJPFLOW.lmp\", \"start\": 12145928, \"end\": 12149850}, {\"filename\": \"/edge_defs/sounds/DSJPIDLE.lmp\", \"start\": 12149850, \"end\": 12152817}, {\"filename\": \"/edge_defs/sounds/DSJPMOVE.lmp\", \"start\": 12152817, \"end\": 12154234}, {\"filename\": \"/edge_defs/sounds/DSJPRISE.lmp\", \"start\": 12154234, \"end\": 12162054}, {\"filename\": \"/edge_defs/sounds/DSMUCKFT.ogg\", \"start\": 12162054, \"end\": 12168128, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSSECRET.ogg\", \"start\": 12168128, \"end\": 12180969, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWATRFT.ogg\", \"start\": 12180969, \"end\": 12188630, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWTDIVE.wav\", \"start\": 12188630, \"end\": 12211106, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/HEARTBT1.ogg\", \"start\": 12211106, \"end\": 12231461, \"audio\": 1}, {\"filename\": \"/edge_defs/sprites/BSPHA0.png\", \"start\": 12231461, \"end\": 12232677}, {\"filename\": \"/edge_defs/sprites/BSPHB0.png\", \"start\": 12232677, \"end\": 12233898}, {\"filename\": \"/edge_defs/sprites/BSPHC0.png\", \"start\": 12233898, \"end\": 12235108}, {\"filename\": \"/edge_defs/sprites/BSPHD0.png\", \"start\": 12235108, \"end\": 12236309}, {\"filename\": \"/edge_defs/sprites/BSPHE0.png\", \"start\": 12236309, \"end\": 12237590}, {\"filename\": \"/edge_defs/sprites/BSPHF0.png\", \"start\": 12237590, \"end\": 12238933}, {\"filename\": \"/edge_defs/sprites/BSPHG0.png\", \"start\": 12238933, \"end\": 12240337}, {\"filename\": \"/edge_defs/sprites/BSPHH0.png\", \"start\": 12240337, \"end\": 12241682}, {\"filename\": \"/edge_defs/sprites/BSPHI0.png\", \"start\": 12241682, \"end\": 12242989}, {\"filename\": \"/edge_defs/sprites/BSPHJ0.png\", \"start\": 12242989, \"end\": 12244256}, {\"filename\": \"/edge_defs/sprites/BSPHK0.png\", \"start\": 12244256, \"end\": 12245493}, {\"filename\": \"/edge_defs/sprites/GLS1A0.lmp\", \"start\": 12245493, \"end\": 12245587}, {\"filename\": \"/edge_defs/sprites/GLS2A0.lmp\", \"start\": 12245587, \"end\": 12245801}, {\"filename\": \"/edge_defs/sprites/GLS3A0.lmp\", \"start\": 12245801, \"end\": 12246105}, {\"filename\": \"/edge_defs/sprites/GLS4A0.lmp\", \"start\": 12246105, \"end\": 12246473}, {\"filename\": \"/edge_defs/sprites/GLS5A0.lmp\", \"start\": 12246473, \"end\": 12246868}, {\"filename\": \"/edge_defs/sprites/GLS6A0.lmp\", \"start\": 12246868, \"end\": 12247304}, {\"filename\": \"/edge_defs/sprites/GLS7A0.lmp\", \"start\": 12247304, \"end\": 12247774}, {\"filename\": \"/edge_defs/sprites/GLS8A0.lmp\", \"start\": 12247774, \"end\": 12248206}, {\"filename\": \"/edge_defs/sprites/GLS9A0.lmp\", \"start\": 12248206, \"end\": 12248569}, {\"filename\": \"/edge_defs/sprites/JPCKA0.lmp\", \"start\": 12248569, \"end\": 12249385}, {\"filename\": \"/edge_defs/sprites/JPCKB0.lmp\", \"start\": 12249385, \"end\": 12250203}, {\"filename\": \"/edge_defs/sprites/JPCKC0.lmp\", \"start\": 12250203, \"end\": 12251021}, {\"filename\": \"/edge_defs/sprites/LVASA0.png\", \"start\": 12251021, \"end\": 12252319}, {\"filename\": \"/edge_defs/sprites/LVASB0.png\", \"start\": 12252319, \"end\": 12253702}, {\"filename\": \"/edge_defs/sprites/LVASC0.png\", \"start\": 12253702, \"end\": 12255056}, {\"filename\": \"/edge_defs/sprites/LVASD0.png\", \"start\": 12255056, \"end\": 12256356}, {\"filename\": \"/edge_defs/sprites/LVASE0.png\", \"start\": 12256356, \"end\": 12257625}, {\"filename\": \"/edge_defs/sprites/LVASF0.png\", \"start\": 12257625, \"end\": 12258848}, {\"filename\": \"/edge_defs/sprites/MUDSA0.png\", \"start\": 12258848, \"end\": 12260058}, {\"filename\": \"/edge_defs/sprites/MUDSB0.png\", \"start\": 12260058, \"end\": 12261270}, {\"filename\": \"/edge_defs/sprites/MUDSC0.png\", \"start\": 12261270, \"end\": 12262461}, {\"filename\": \"/edge_defs/sprites/MUDSD0.png\", \"start\": 12262461, \"end\": 12263646}, {\"filename\": \"/edge_defs/sprites/MUDSE0.png\", \"start\": 12263646, \"end\": 12264897}, {\"filename\": \"/edge_defs/sprites/MUDSF0.png\", \"start\": 12264897, \"end\": 12266138}, {\"filename\": \"/edge_defs/sprites/MUDSG0.png\", \"start\": 12266138, \"end\": 12267387}, {\"filename\": \"/edge_defs/sprites/MUDSH0.png\", \"start\": 12267387, \"end\": 12268609}, {\"filename\": \"/edge_defs/sprites/NVSCA0.lmp\", \"start\": 12268609, \"end\": 12269213}, {\"filename\": \"/edge_defs/sprites/NVSCB0.lmp\", \"start\": 12269213, \"end\": 12269817}, {\"filename\": \"/edge_defs/sprites/PLAYX1.lmp\", \"start\": 12269817, \"end\": 12270740}, {\"filename\": \"/edge_defs/sprites/PLAYX2X8.lmp\", \"start\": 12270740, \"end\": 12271956}, {\"filename\": \"/edge_defs/sprites/PLAYX3X7.lmp\", \"start\": 12271956, \"end\": 12273351}, {\"filename\": \"/edge_defs/sprites/PLAYX4X6.lmp\", \"start\": 12273351, \"end\": 12274480}, {\"filename\": \"/edge_defs/sprites/PLAYX5.lmp\", \"start\": 12274480, \"end\": 12275282}, {\"filename\": \"/edge_defs/sprites/PLAYY1.lmp\", \"start\": 12275282, \"end\": 12276230}, {\"filename\": \"/edge_defs/sprites/PLAYY2Y8.lmp\", \"start\": 12276230, \"end\": 12277458}, {\"filename\": \"/edge_defs/sprites/PLAYY3Y7.lmp\", \"start\": 12277458, \"end\": 12278844}, {\"filename\": \"/edge_defs/sprites/PLAYY4Y6.lmp\", \"start\": 12278844, \"end\": 12279982}, {\"filename\": \"/edge_defs/sprites/PLAYY5.lmp\", \"start\": 12279982, \"end\": 12280779}, {\"filename\": \"/edge_defs/sprites/PLS1A0.lmp\", \"start\": 12280779, \"end\": 12281164}, {\"filename\": \"/edge_defs/sprites/PLS1B0.lmp\", \"start\": 12281164, \"end\": 12281563}, {\"filename\": \"/edge_defs/sprites/PLS1C0.lmp\", \"start\": 12281563, \"end\": 12281948}, {\"filename\": \"/edge_defs/sprites/PLS1D0.lmp\", \"start\": 12281948, \"end\": 12282347}, {\"filename\": \"/edge_defs/sprites/PLS1E0.lmp\", \"start\": 12282347, \"end\": 12284705}, {\"filename\": \"/edge_defs/sprites/PLS1F0.lmp\", \"start\": 12284705, \"end\": 12287063}, {\"filename\": \"/edge_defs/sprites/PLS1G0.lmp\", \"start\": 12287063, \"end\": 12289290}, {\"filename\": \"/edge_defs/sprites/PLS2A0.lmp\", \"start\": 12289290, \"end\": 12289506}, {\"filename\": \"/edge_defs/sprites/PLS2B0.lmp\", \"start\": 12289506, \"end\": 12289749}, {\"filename\": \"/edge_defs/sprites/PLS2C0.lmp\", \"start\": 12289749, \"end\": 12289961}, {\"filename\": \"/edge_defs/sprites/PLS2D0.lmp\", \"start\": 12289961, \"end\": 12290351}, {\"filename\": \"/edge_defs/sprites/PLS2E0.lmp\", \"start\": 12290351, \"end\": 12291045}, {\"filename\": \"/edge_defs/sprites/PRT1A0.png\", \"start\": 12291045, \"end\": 12291917}, {\"filename\": \"/edge_defs/sprites/PRT2A0.png\", \"start\": 12291917, \"end\": 12292789}, {\"filename\": \"/edge_defs/sprites/PRT3A0.png\", \"start\": 12292789, \"end\": 12292918}, {\"filename\": \"/edge_defs/sprites/SLDGA0.png\", \"start\": 12292918, \"end\": 12294134}, {\"filename\": \"/edge_defs/sprites/SLDGB0.png\", \"start\": 12294134, \"end\": 12295352}, {\"filename\": \"/edge_defs/sprites/SLDGC0.png\", \"start\": 12295352, \"end\": 12296548}, {\"filename\": \"/edge_defs/sprites/SLDGD0.png\", \"start\": 12296548, \"end\": 12297735}, {\"filename\": \"/edge_defs/sprites/SLDGE0.png\", \"start\": 12297735, \"end\": 12298986}, {\"filename\": \"/edge_defs/sprites/SLDGF0.png\", \"start\": 12298986, \"end\": 12300227}, {\"filename\": \"/edge_defs/sprites/SLDGG0.png\", \"start\": 12300227, \"end\": 12301476}, {\"filename\": \"/edge_defs/sprites/SLDGH0.png\", \"start\": 12301476, \"end\": 12302698}, {\"filename\": \"/edge_defs/sprites/SLIMA0.png\", \"start\": 12302698, \"end\": 12303899}, {\"filename\": \"/edge_defs/sprites/SLIMB0.png\", \"start\": 12303899, \"end\": 12305104}, {\"filename\": \"/edge_defs/sprites/SLIMC0.png\", \"start\": 12305104, \"end\": 12306291}, {\"filename\": \"/edge_defs/sprites/SLIMD0.png\", \"start\": 12306291, \"end\": 12307469}, {\"filename\": \"/edge_defs/sprites/SLIME0.png\", \"start\": 12307469, \"end\": 12308714}, {\"filename\": \"/edge_defs/sprites/SLIMF0.png\", \"start\": 12308714, \"end\": 12309950}, {\"filename\": \"/edge_defs/sprites/SLIMG0.png\", \"start\": 12309950, \"end\": 12311195}, {\"filename\": \"/edge_defs/sprites/SLIMH0.png\", \"start\": 12311195, \"end\": 12312411}, {\"filename\": \"/edge_defs/sprites/SPSHA0.png\", \"start\": 12312411, \"end\": 12313628}, {\"filename\": \"/edge_defs/sprites/SPSHB0.png\", \"start\": 12313628, \"end\": 12314848}, {\"filename\": \"/edge_defs/sprites/SPSHC0.png\", \"start\": 12314848, \"end\": 12316059}, {\"filename\": \"/edge_defs/sprites/SPSHD0.png\", \"start\": 12316059, \"end\": 12317260}, {\"filename\": \"/edge_defs/sprites/SPSHE0.png\", \"start\": 12317260, \"end\": 12318540}, {\"filename\": \"/edge_defs/sprites/SPSHF0.png\", \"start\": 12318540, \"end\": 12319891}, {\"filename\": \"/edge_defs/sprites/SPSHG0.png\", \"start\": 12319891, \"end\": 12321298}, {\"filename\": \"/edge_defs/sprites/SPSHH0.png\", \"start\": 12321298, \"end\": 12322650}, {\"filename\": \"/edge_defs/sprites/SPSHI0.png\", \"start\": 12322650, \"end\": 12323961}, {\"filename\": \"/edge_defs/sprites/SPSHJ0.png\", \"start\": 12323961, \"end\": 12325229}, {\"filename\": \"/edge_defs/sprites/SPSHK0.png\", \"start\": 12325229, \"end\": 12326466}, {\"filename\": \"/edge_defs/sprites/TSTPA0.png\", \"start\": 12326466, \"end\": 12327591}, {\"filename\": \"/edge_defs/sprites/TSTPB0.lmp\", \"start\": 12327591, \"end\": 12327933}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA1.png\", \"start\": 12327933, \"end\": 12329213}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA2.png\", \"start\": 12329213, \"end\": 12330766}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA3.png\", \"start\": 12330766, \"end\": 12332397}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA4.png\", \"start\": 12332397, \"end\": 12333930}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA5.png\", \"start\": 12333930, \"end\": 12335116}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA6.png\", \"start\": 12335116, \"end\": 12336632}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA7.png\", \"start\": 12336632, \"end\": 12338225}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA8.png\", \"start\": 12338225, \"end\": 12339743}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB1.png\", \"start\": 12339743, \"end\": 12340973}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB2.png\", \"start\": 12340973, \"end\": 12342493}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB3.png\", \"start\": 12342493, \"end\": 12344100}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB4.png\", \"start\": 12344100, \"end\": 12345633}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB5.png\", \"start\": 12345633, \"end\": 12346843}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB6.png\", \"start\": 12346843, \"end\": 12348341}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB7.png\", \"start\": 12348341, \"end\": 12349933}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB8.png\", \"start\": 12349933, \"end\": 12351447}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC1.png\", \"start\": 12351447, \"end\": 12352744}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC2.png\", \"start\": 12352744, \"end\": 12354250}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC3.png\", \"start\": 12354250, \"end\": 12355821}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC4.png\", \"start\": 12355821, \"end\": 12357352}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC5.png\", \"start\": 12357352, \"end\": 12358689}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC6.png\", \"start\": 12358689, \"end\": 12360209}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC7.png\", \"start\": 12360209, \"end\": 12361745}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC8.png\", \"start\": 12361745, \"end\": 12363234}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD1.png\", \"start\": 12363234, \"end\": 12364545}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD2.png\", \"start\": 12364545, \"end\": 12366063}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD3.png\", \"start\": 12366063, \"end\": 12367651}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD4.png\", \"start\": 12367651, \"end\": 12369176}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD5.png\", \"start\": 12369176, \"end\": 12370502}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD6.png\", \"start\": 12370502, \"end\": 12372044}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD7.png\", \"start\": 12372044, \"end\": 12373617}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD8.png\", \"start\": 12373617, \"end\": 12375120}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE1.png\", \"start\": 12375120, \"end\": 12376482}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE2.png\", \"start\": 12376482, \"end\": 12377999}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE3.png\", \"start\": 12377999, \"end\": 12379547}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE4.png\", \"start\": 12379547, \"end\": 12381145}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE5.png\", \"start\": 12381145, \"end\": 12382583}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE6.png\", \"start\": 12382583, \"end\": 12384133}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE7.png\", \"start\": 12384133, \"end\": 12385687}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE8.png\", \"start\": 12385687, \"end\": 12387246}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF1.png\", \"start\": 12387246, \"end\": 12388643}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF2.png\", \"start\": 12388643, \"end\": 12390214}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF3.png\", \"start\": 12390214, \"end\": 12391816}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF4.png\", \"start\": 12391816, \"end\": 12393382}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF5.png\", \"start\": 12393382, \"end\": 12394785}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF6.png\", \"start\": 12394785, \"end\": 12396302}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF7.png\", \"start\": 12396302, \"end\": 12397898}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF8.png\", \"start\": 12397898, \"end\": 12399506}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG1.png\", \"start\": 12399506, \"end\": 12400895}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG2.png\", \"start\": 12400895, \"end\": 12402483}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG3.png\", \"start\": 12402483, \"end\": 12404127}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG4.png\", \"start\": 12404127, \"end\": 12405647}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG5.png\", \"start\": 12405647, \"end\": 12406997}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG6.png\", \"start\": 12406997, \"end\": 12408518}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG7.png\", \"start\": 12408518, \"end\": 12410140}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG8.png\", \"start\": 12410140, \"end\": 12411710}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH1.png\", \"start\": 12411710, \"end\": 12413020}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH2.png\", \"start\": 12413020, \"end\": 12414551}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH3.png\", \"start\": 12414551, \"end\": 12416143}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH4.png\", \"start\": 12416143, \"end\": 12417626}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH5.png\", \"start\": 12417626, \"end\": 12418920}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH6.png\", \"start\": 12418920, \"end\": 12420387}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH7.png\", \"start\": 12420387, \"end\": 12421965}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH8.png\", \"start\": 12421965, \"end\": 12423534}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDI0.png\", \"start\": 12423534, \"end\": 12425224}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDJ0.png\", \"start\": 12425224, \"end\": 12427006}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDK0.png\", \"start\": 12427006, \"end\": 12428752}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDL0.png\", \"start\": 12428752, \"end\": 12430472}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDM0.png\", \"start\": 12430472, \"end\": 12432199}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDN0.png\", \"start\": 12432199, \"end\": 12433938}, {\"filename\": \"/edge_defs/textures/FUZZMAP8.png\", \"start\": 12433938, \"end\": 12448738}, {\"filename\": \"/edge_defs/textures/PORTAL7A.jpg\", \"start\": 12448738, \"end\": 12470856}, {\"filename\": \"/edge_defs/textures/PORTAL7B.jpg\", \"start\": 12470856, \"end\": 12489209}, {\"filename\": \"/edge_defs/textures/PORTAL7C.jpg\", \"start\": 12489209, \"end\": 12504700}, {\"filename\": \"/edge_defs/textures/PORTAL7D.jpg\", \"start\": 12504700, \"end\": 12519994}, {\"filename\": \"/edge_defs/textures/PORTAL7E.jpg\", \"start\": 12519994, \"end\": 12534861}, {\"filename\": \"/edge_defs/textures/PORTAL7F.jpg\", \"start\": 12534861, \"end\": 12551862}, {\"filename\": \"/edge_defs/textures/PORTAL7G.jpg\", \"start\": 12551862, \"end\": 12572570}, {\"filename\": \"/edge_defs/ttf/ECFONT01.ttf\", \"start\": 12572570, \"end\": 12636910}, {\"filename\": \"/edge_defs/version.txt\", \"start\": 12636910, \"end\": 12636914}, {\"filename\": \"/freedm.wad\", \"start\": 12636914, \"end\": 34461362}, {\"filename\": \"/freedoom2.wad\", \"start\": 34461362, \"end\": 63005494}, {\"filename\": \"/soundfont/ChipFreak.sf2\", \"start\": 63005494, \"end\": 63114978}, {\"filename\": \"/soundfont/ProtoSquare!.sf2\", \"start\": 63114978, \"end\": 63479216}, {\"filename\": \"/soundfont/adplug.op2\", \"start\": 63479216, \"end\": 63491124}, {\"filename\": \"/soundfont/default.sf2\", \"start\": 63491124, \"end\": 67637564}, {\"filename\": \"/soundfont/dmxopl.op2\", \"start\": 67637564, \"end\": 67649472}, {\"filename\": \"/soundfont/dmxopl3.wopl\", \"start\": 67649472, \"end\": 67861541}, {\"filename\": \"/soundfont/microGM.sf2\", \"start\": 67861541, \"end\": 70491183}, {\"filename\": \"/soundfont/wadsmoosh.op2\", \"start\": 70491183, \"end\": 70503091}], \"remote_package_size\": 51951530, \"package_uuid\": \"sha256-0459fa31dd2fde1a98498bd69a1c9ac755ba42c3ee5cf7ae710823c7012a4a5a\"});\r\n\r\n  })();\r\n\r\n\r\n// Sometimes an existing Module object exists with properties\r\n// meant to overwrite the default module functionality. Here\r\n// we collect those properties and reapply _after_ we configure\r\n// the current environment's defaults to avoid having to be so\r\n// defensive during initialization.\r\nvar moduleOverrides = Object.assign({}, Module);\r\n\r\nvar arguments_ = [];\r\nvar thisProgram = './this.program';\r\nvar quit_ = (status, toThrow) => {\r\n  throw toThrow;\r\n};\r\n\r\n// Determine the runtime environment we are in. You can customize this by\r\n// setting the ENVIRONMENT setting at compile time (see settings.js).\r\n\r\nvar ENVIRONMENT_IS_WEB = true;\r\nvar ENVIRONMENT_IS_WORKER = false;\r\nvar ENVIRONMENT_IS_NODE = false;\r\nvar ENVIRONMENT_IS_SHELL = false;\r\n\r\n// `/` should be present at the end if `scriptDirectory` is not empty\r\nvar scriptDirectory = '';\r\nfunction locateFile(path) {\r\n  if (Module['locateFile']) {\r\n    return Module['locateFile'](path, scriptDirectory);\r\n  }\r\n  return scriptDirectory + path;\r\n}\r\n\r\n// Hooks that are implemented differently in different runtime environments.\r\nvar read_,\r\n    readAsync,\r\n    readBinary,\r\n    setWindowTitle;\r\n\r\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\r\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\r\n// ENVIRONMENT_IS_NODE.\r\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\r\n    scriptDirectory = self.location.href;\r\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\r\n    scriptDirectory = document.currentScript.src;\r\n  }\r\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\r\n  // is gone, so we saved it, and we use it here instead of any other info.\r\n  if (_scriptDir) {\r\n    scriptDirectory = _scriptDir;\r\n  }\r\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\r\n  // otherwise, slice off the final part of the url to find the script directory.\r\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\r\n  // and scriptDirectory will correctly be replaced with an empty string.\r\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\r\n  // they are removed because they could contain a slash.\r\n  if (scriptDirectory.indexOf('blob:') !== 0) {\r\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\r\n  } else {\r\n    scriptDirectory = '';\r\n  }\r\n\r\n  // Differentiate the Web Worker from the Node Worker case, as reading must\r\n  // be done differently.\r\n  {\r\n// include: web_or_worker_shell_read.js\r\nread_ = (url) => {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, false);\r\n      xhr.send(null);\r\n      return xhr.responseText;\r\n  }\r\n\r\n  if (ENVIRONMENT_IS_WORKER) {\r\n    readBinary = (url) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, false);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.send(null);\r\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\r\n    };\r\n  }\r\n\r\n  readAsync = (url, onload, onerror) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url, true);\r\n    xhr.responseType = 'arraybuffer';\r\n    xhr.onload = () => {\r\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n        onload(xhr.response);\r\n        return;\r\n      }\r\n      onerror();\r\n    };\r\n    xhr.onerror = onerror;\r\n    xhr.send(null);\r\n  }\r\n\r\n// end include: web_or_worker_shell_read.js\r\n  }\r\n\r\n  setWindowTitle = (title) => document.title = title;\r\n} else\r\n{\r\n}\r\n\r\nvar out = Module['print'] || console.log.bind(console);\r\nvar err = Module['printErr'] || console.error.bind(console);\r\n\r\n// Merge back in the overrides\r\nObject.assign(Module, moduleOverrides);\r\n// Free the object hierarchy contained in the overrides, this lets the GC\r\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\r\nmoduleOverrides = null;\r\n\r\n// Emit code to handle expected values on the Module object. This applies Module.x\r\n// to the proper local x. This has two benefits: first, we only emit it if it is\r\n// expected to arrive, and second, by using a local everywhere else that can be\r\n// minified.\r\n\r\nif (Module['arguments']) arguments_ = Module['arguments'];\r\n\r\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\r\n\r\nif (Module['quit']) quit_ = Module['quit'];\r\n\r\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\r\n\r\n\r\n// end include: shell.js\r\n// include: preamble.js\r\n// === Preamble library stuff ===\r\n\r\n// Documentation for the public APIs defined in this file must be updated in:\r\n//    site/source/docs/api_reference/preamble.js.rst\r\n// A prebuilt local version of the documentation is available at:\r\n//    site/build/text/docs/api_reference/preamble.js.txt\r\n// You can also build docs locally as HTML or other formats in site/\r\n// An online HTML version (which may be of a different version of Emscripten)\r\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\r\n\r\nvar wasmBinary;\r\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\r\nvar noExitRuntime = Module['noExitRuntime'] || true;\r\n\r\nif (typeof WebAssembly != 'object') {\r\n  abort('no native wasm support detected');\r\n}\r\n\r\n// Wasm globals\r\n\r\nvar wasmMemory;\r\n\r\n//========================================\r\n// Runtime essentials\r\n//========================================\r\n\r\n// whether we are quitting the application. no code should run after this.\r\n// set in exit() and abort()\r\nvar ABORT = false;\r\n\r\n// set by exit() and abort().  Passed to 'onExit' handler.\r\n// NOTE: This is also used as the process return code code in shell environments\r\n// but only when noExitRuntime is false.\r\nvar EXITSTATUS;\r\n\r\n/** @type {function(*, string=)} */\r\nfunction assert(condition, text) {\r\n  if (!condition) {\r\n    // This build was created without ASSERTIONS defined.  `assert()` should not\r\n    // ever be called in this configuration but in case there are callers in\r\n    // the wild leave this simple abort() implemenation here for now.\r\n    abort(text);\r\n  }\r\n}\r\n\r\n// Memory management\r\n\r\nvar HEAP,\r\n/** @type {!Int8Array} */\r\n  HEAP8,\r\n/** @type {!Uint8Array} */\r\n  HEAPU8,\r\n/** @type {!Int16Array} */\r\n  HEAP16,\r\n/** @type {!Uint16Array} */\r\n  HEAPU16,\r\n/** @type {!Int32Array} */\r\n  HEAP32,\r\n/** @type {!Uint32Array} */\r\n  HEAPU32,\r\n/** @type {!Float32Array} */\r\n  HEAPF32,\r\n/** @type {!Float64Array} */\r\n  HEAPF64;\r\n\r\nfunction updateMemoryViews() {\r\n  var b = wasmMemory.buffer;\r\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\r\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\r\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\r\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\r\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\r\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\r\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\r\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\r\n}\r\n\r\n// include: runtime_init_table.js\r\n// In regular non-RELOCATABLE mode the table is exported\r\n// from the wasm module and this will be assigned once\r\n// the exports are available.\r\nvar wasmTable;\r\n\r\n// end include: runtime_init_table.js\r\n// include: runtime_stack_check.js\r\n// end include: runtime_stack_check.js\r\n// include: runtime_assertions.js\r\n// end include: runtime_assertions.js\r\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\r\nvar __ATINIT__    = []; // functions called during startup\r\nvar __ATMAIN__    = []; // functions called when main() is to be run\r\nvar __ATEXIT__    = []; // functions called during shutdown\r\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\r\n\r\nvar runtimeInitialized = false;\r\n\r\nvar runtimeKeepaliveCounter = 0;\r\n\r\nfunction keepRuntimeAlive() {\r\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\r\n}\r\n\r\nfunction preRun() {\r\n  if (Module['preRun']) {\r\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\r\n    while (Module['preRun'].length) {\r\n      addOnPreRun(Module['preRun'].shift());\r\n    }\r\n  }\r\n  callRuntimeCallbacks(__ATPRERUN__);\r\n}\r\n\r\nfunction initRuntime() {\r\n  runtimeInitialized = true;\r\n\r\n  \r\nif (!Module[\"noFSInit\"] && !FS.init.initialized)\r\n  FS.init();\r\nFS.ignorePermissions = false;\r\n\r\nTTY.init();\r\n  callRuntimeCallbacks(__ATINIT__);\r\n}\r\n\r\nfunction preMain() {\r\n  \r\n  callRuntimeCallbacks(__ATMAIN__);\r\n}\r\n\r\nfunction postRun() {\r\n\r\n  if (Module['postRun']) {\r\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\r\n    while (Module['postRun'].length) {\r\n      addOnPostRun(Module['postRun'].shift());\r\n    }\r\n  }\r\n\r\n  callRuntimeCallbacks(__ATPOSTRUN__);\r\n}\r\n\r\nfunction addOnPreRun(cb) {\r\n  __ATPRERUN__.unshift(cb);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n  __ATINIT__.unshift(cb);\r\n}\r\n\r\nfunction addOnPreMain(cb) {\r\n  __ATMAIN__.unshift(cb);\r\n}\r\n\r\nfunction addOnExit(cb) {\r\n}\r\n\r\nfunction addOnPostRun(cb) {\r\n  __ATPOSTRUN__.unshift(cb);\r\n}\r\n\r\n// include: runtime_math.js\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\r\n\r\n// end include: runtime_math.js\r\n// A counter of dependencies for calling run(). If we need to\r\n// do asynchronous work before running, increment this and\r\n// decrement it. Incrementing must happen in a place like\r\n// Module.preRun (used by emcc to add file preloading).\r\n// Note that you can add dependencies in preRun, even though\r\n// it happens right before run - run will be postponed until\r\n// the dependencies are met.\r\nvar runDependencies = 0;\r\nvar runDependencyWatcher = null;\r\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\r\n\r\nfunction getUniqueRunDependency(id) {\r\n  return id;\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n  runDependencies++;\r\n\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n  runDependencies--;\r\n\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n\r\n  if (runDependencies == 0) {\r\n    if (runDependencyWatcher !== null) {\r\n      clearInterval(runDependencyWatcher);\r\n      runDependencyWatcher = null;\r\n    }\r\n    if (dependenciesFulfilled) {\r\n      var callback = dependenciesFulfilled;\r\n      dependenciesFulfilled = null;\r\n      callback(); // can add another dependenciesFulfilled\r\n    }\r\n  }\r\n}\r\n\r\n/** @param {string|number=} what */\r\nfunction abort(what) {\r\n  if (Module['onAbort']) {\r\n    Module['onAbort'](what);\r\n  }\r\n\r\n  what = 'Aborted(' + what + ')';\r\n  // TODO(sbc): Should we remove printing and leave it up to whoever\r\n  // catches the exception?\r\n  err(what);\r\n\r\n  ABORT = true;\r\n  EXITSTATUS = 1;\r\n\r\n  what += '. Build with -sASSERTIONS for more info.';\r\n\r\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\r\n  // exception, which means we'd run destructors on it. We need the error to\r\n  // simply make the program stop.\r\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\r\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\r\n  // a trap or not based on a hidden field within the object. So at the moment\r\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\r\n  // allows this in the wasm spec.\r\n\r\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\r\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\r\n  // though it can.\r\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\r\n  /** @suppress {checkTypes} */\r\n  var e = new WebAssembly.RuntimeError(what);\r\n\r\n  readyPromiseReject(e);\r\n  // Throw the error whether or not MODULARIZE is set because abort is used\r\n  // in code paths apart from instantiation where an exception is expected\r\n  // to be thrown when abort is called.\r\n  throw e;\r\n}\r\n\r\n// include: memoryprofiler.js\r\n// end include: memoryprofiler.js\r\n// include: URIUtils.js\r\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\r\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\r\n\r\n// Indicates whether filename is a base64 data URI.\r\nfunction isDataURI(filename) {\r\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\r\n  return filename.startsWith(dataURIPrefix);\r\n}\r\n\r\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\r\nfunction isFileURI(filename) {\r\n  return filename.startsWith('file://');\r\n}\r\n\r\n// end include: URIUtils.js\r\n// include: runtime_exceptions.js\r\n// end include: runtime_exceptions.js\r\nvar wasmBinaryFile;\r\n  wasmBinaryFile = 'edge-classic.wasm';\r\n  if (!isDataURI(wasmBinaryFile)) {\r\n    wasmBinaryFile = locateFile(wasmBinaryFile);\r\n  }\r\n\r\nfunction getBinary(file) {\r\n  try {\r\n    if (file == wasmBinaryFile && wasmBinary) {\r\n      return new Uint8Array(wasmBinary);\r\n    }\r\n    if (readBinary) {\r\n      return readBinary(file);\r\n    }\r\n    throw \"both async and sync fetching of the wasm failed\";\r\n  }\r\n  catch (err) {\r\n    abort(err);\r\n  }\r\n}\r\n\r\nfunction getBinaryPromise(binaryFile) {\r\n  // If we don't have the binary yet, try to load it asynchronously.\r\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\r\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\r\n  // Cordova or Electron apps are typically loaded from a file:// url.\r\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\r\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\r\n    if (typeof fetch == 'function'\r\n    ) {\r\n      return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n        if (!response['ok']) {\r\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\r\n        }\r\n        return response['arrayBuffer']();\r\n      }).catch(() => getBinary(binaryFile));\r\n    }\r\n  }\r\n\r\n  // Otherwise, getBinary should be able to get it synchronously\r\n  return Promise.resolve().then(() => getBinary(binaryFile));\r\n}\r\n\r\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\r\n  return getBinaryPromise(binaryFile).then((binary) => {\r\n    return WebAssembly.instantiate(binary, imports);\r\n  }).then((instance) => {\r\n    return instance;\r\n  }).then(receiver, (reason) => {\r\n    err('failed to asynchronously prepare wasm: ' + reason);\r\n\r\n    abort(reason);\r\n  });\r\n}\r\n\r\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\r\n  if (!binary &&\r\n      typeof WebAssembly.instantiateStreaming == 'function' &&\r\n      !isDataURI(binaryFile) &&\r\n      typeof fetch == 'function') {\r\n    return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n      // Suppress closure warning here since the upstream definition for\r\n      // instantiateStreaming only allows Promise<Repsponse> rather than\r\n      // an actual Response.\r\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\r\n      /** @suppress {checkTypes} */\r\n      var result = WebAssembly.instantiateStreaming(response, imports);\r\n\r\n      return result.then(\r\n        callback,\r\n        function(reason) {\r\n          // We expect the most common failure cause to be a bad MIME type for the binary,\r\n          // in which case falling back to ArrayBuffer instantiation should work.\r\n          err('wasm streaming compile failed: ' + reason);\r\n          err('falling back to ArrayBuffer instantiation');\r\n          return instantiateArrayBuffer(binaryFile, imports, callback);\r\n        });\r\n    });\r\n  } else {\r\n    return instantiateArrayBuffer(binaryFile, imports, callback);\r\n  }\r\n}\r\n\r\n// Create the wasm instance.\r\n// Receives the wasm imports, returns the exports.\r\nfunction createWasm() {\r\n  // prepare imports\r\n  var info = {\r\n    'env': wasmImports,\r\n    'wasi_snapshot_preview1': wasmImports,\r\n  };\r\n  // Load the wasm module and create an instance of using native support in the JS engine.\r\n  // handle a generated wasm instance, receiving its exports and\r\n  // performing other necessary setup\r\n  /** @param {WebAssembly.Module=} module*/\r\n  function receiveInstance(instance, module) {\r\n    var exports = instance.exports;\r\n\r\n    exports = Asyncify.instrumentWasmExports(exports);\r\n\r\n    Module['asm'] = exports;\r\n\r\n    wasmMemory = Module['asm']['memory'];\r\n    updateMemoryViews();\r\n\r\n    wasmTable = Module['asm']['__indirect_function_table'];\r\n\r\n    addOnInit(Module['asm']['__wasm_call_ctors']);\r\n\r\n    removeRunDependency('wasm-instantiate');\r\n    return exports;\r\n  }\r\n  // wait for the pthread pool (if any)\r\n  addRunDependency('wasm-instantiate');\r\n\r\n  // Prefer streaming instantiation if available.\r\n  function receiveInstantiationResult(result) {\r\n    // 'result' is a ResultObject object which has both the module and instance.\r\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\r\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\r\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\r\n    receiveInstance(result['instance']);\r\n  }\r\n\r\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\r\n  // to manually instantiate the Wasm module themselves. This allows pages to\r\n  // run the instantiation parallel to any other async startup actions they are\r\n  // performing.\r\n  // Also pthreads and wasm workers initialize the wasm instance through this\r\n  // path.\r\n  if (Module['instantiateWasm']) {\r\n\r\n    try {\r\n      return Module['instantiateWasm'](info, receiveInstance);\r\n    } catch(e) {\r\n      err('Module.instantiateWasm callback failed with error: ' + e);\r\n        // If instantiation fails, reject the module ready promise.\r\n        readyPromiseReject(e);\r\n    }\r\n  }\r\n\r\n  // If instantiation fails, reject the module ready promise.\r\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\r\n  return {}; // no exports yet; we'll fill them in later\r\n}\r\n\r\n// Globals used by JS i64 conversions (see makeSetValue)\r\nvar tempDouble;\r\nvar tempI64;\r\n\r\n// include: runtime_debug.js\r\n// end include: runtime_debug.js\r\n// === Body ===\r\n\r\nvar ASM_CONSTS = {\r\n  601364: () => { if (Module.edgePostInit) { Module.edgePostInit(); } },  \r\n 601420: ($0, $1) => { const args = []; for (let i = 0; i < $0; i++) { args.push(UTF8ToString(HEAP32[($1 >> 2) + i])); } console.log(`Edge command line: ${args}`); const homeIndex = args.indexOf(\"-home\"); if (homeIndex === -1 || homeIndex >= args.length || args[homeIndex + 1].startsWith(\"-\")) { throw \"No home command line option specified\" } const homeDir = args[homeIndex + 1]; if (!FS.analyzePath(homeDir).exists) { FS.mkdirTree(homeDir); } FS.mount(IDBFS, {}, homeDir); FS.syncfs(true, function (err) { if (err) { console.error(`Error mounting home dir ${err}`); return; } Module._I_WebMain($0, $1); }); },  \r\n 602010: () => { if (Module.onFullscreen) { Module.onFullscreen(); } },  \r\n 602066: ($0) => { if (Module.edgePreSyncFS) { Module.edgePreSyncFS(); } FS.syncfs($0, function (err) { if (Module.edgePostSyncFS) { Module.edgePostSyncFS(); } }); },  \r\n 602215: () => { if (typeof(AudioContext) !== 'undefined') { return true; } else if (typeof(webkitAudioContext) !== 'undefined') { return true; } return false; },  \r\n 602362: () => { if ((typeof(navigator.mediaDevices) !== 'undefined') && (typeof(navigator.mediaDevices.getUserMedia) !== 'undefined')) { return true; } else if (typeof(navigator.webkitGetUserMedia) !== 'undefined') { return true; } return false; },  \r\n 602596: ($0) => { if(typeof(Module['SDL2']) === 'undefined') { Module['SDL2'] = {}; } var SDL2 = Module['SDL2']; if (!$0) { SDL2.audio = {}; } else { SDL2.capture = {}; } if (!SDL2.audioContext) { if (typeof(AudioContext) !== 'undefined') { SDL2.audioContext = new AudioContext(); } else if (typeof(webkitAudioContext) !== 'undefined') { SDL2.audioContext = new webkitAudioContext(); } if (SDL2.audioContext) { autoResumeAudioContext(SDL2.audioContext); } } return SDL2.audioContext === undefined ? -1 : 0; },  \r\n 603089: () => { var SDL2 = Module['SDL2']; return SDL2.audioContext.sampleRate; },  \r\n 603157: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; var have_microphone = function(stream) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); SDL2.capture.silenceTimer = undefined; } SDL2.capture.mediaStreamNode = SDL2.audioContext.createMediaStreamSource(stream); SDL2.capture.scriptProcessorNode = SDL2.audioContext.createScriptProcessor($1, $0, 1); SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) { if ((SDL2 === undefined) || (SDL2.capture === undefined)) { return; } audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0); SDL2.capture.currentCaptureBuffer = audioProcessingEvent.inputBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode); SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination); SDL2.capture.stream = stream; }; var no_microphone = function(error) { }; SDL2.capture.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { SDL2.capture.currentCaptureBuffer = SDL2.capture.silenceBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.silenceTimer = setTimeout(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); if ((navigator.mediaDevices !== undefined) && (navigator.mediaDevices.getUserMedia !== undefined)) { navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(have_microphone).catch(no_microphone); } else if (navigator.webkitGetUserMedia !== undefined) { navigator.webkitGetUserMedia({ audio: true, video: false }, have_microphone, no_microphone); } },  \r\n 604809: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; SDL2.audio.scriptProcessorNode = SDL2.audioContext['createScriptProcessor']($1, 0, $0); SDL2.audio.scriptProcessorNode['onaudioprocess'] = function (e) { if ((SDL2 === undefined) || (SDL2.audio === undefined)) { return; } SDL2.audio.currentOutputBuffer = e['outputBuffer']; dynCall('vi', $2, [$3]); }; SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']); },  \r\n 605219: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.capture.currentCaptureBuffer.numberOfChannels; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.capture.currentCaptureBuffer.getChannelData(c); if (channelData.length != $1) { throw 'Web Audio capture buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } if (numChannels == 1) { for (var j = 0; j < $1; ++j) { setValue($0 + (j * 4), channelData[j], 'float'); } } else { for (var j = 0; j < $1; ++j) { setValue($0 + (((j * numChannels) + c) * 4), channelData[j], 'float'); } } } },  \r\n 605824: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.audio.currentOutputBuffer['numberOfChannels']; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.audio.currentOutputBuffer['getChannelData'](c); if (channelData.length != $1) { throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } for (var j = 0; j < $1; ++j) { channelData[j] = HEAPF32[$0 + ((j*numChannels + c) << 2) >> 2]; } } },  \r\n 606304: ($0) => { var SDL2 = Module['SDL2']; if ($0) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); } if (SDL2.capture.stream !== undefined) { var tracks = SDL2.capture.stream.getAudioTracks(); for (var i = 0; i < tracks.length; i++) { SDL2.capture.stream.removeTrack(tracks[i]); } SDL2.capture.stream = undefined; } if (SDL2.capture.scriptProcessorNode !== undefined) { SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) {}; SDL2.capture.scriptProcessorNode.disconnect(); SDL2.capture.scriptProcessorNode = undefined; } if (SDL2.capture.mediaStreamNode !== undefined) { SDL2.capture.mediaStreamNode.disconnect(); SDL2.capture.mediaStreamNode = undefined; } if (SDL2.capture.silenceBuffer !== undefined) { SDL2.capture.silenceBuffer = undefined } SDL2.capture = undefined; } else { if (SDL2.audio.scriptProcessorNode != undefined) { SDL2.audio.scriptProcessorNode.disconnect(); SDL2.audio.scriptProcessorNode = undefined; } SDL2.audio = undefined; } if ((SDL2.audioContext !== undefined) && (SDL2.audio === undefined) && (SDL2.capture === undefined)) { SDL2.audioContext.close(); SDL2.audioContext = undefined; } },  \r\n 607476: ($0, $1, $2) => { var w = $0; var h = $1; var pixels = $2; if (!Module['SDL2']) Module['SDL2'] = {}; var SDL2 = Module['SDL2']; if (SDL2.ctxCanvas !== Module['canvas']) { SDL2.ctx = Module['createContext'](Module['canvas'], false, true); SDL2.ctxCanvas = Module['canvas']; } if (SDL2.w !== w || SDL2.h !== h || SDL2.imageCtx !== SDL2.ctx) { SDL2.image = SDL2.ctx.createImageData(w, h); SDL2.w = w; SDL2.h = h; SDL2.imageCtx = SDL2.ctx; } var data = SDL2.image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = 0xff; src++; dst += 4; } } else { if (SDL2.data32Data !== data) { SDL2.data32 = new Int32Array(data.buffer); SDL2.data8 = new Uint8Array(data.buffer); SDL2.data32Data = data; } var data32 = SDL2.data32; num = data32.length; data32.set(HEAP32.subarray(src, src + num)); var data8 = SDL2.data8; var i = 3; var j = i + 4*num; if (num % 8 == 0) { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; } } else { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; } } } SDL2.ctx.putImageData(SDL2.image, 0, 0); },  \r\n 608945: ($0, $1, $2, $3, $4) => { var w = $0; var h = $1; var hot_x = $2; var hot_y = $3; var pixels = $4; var canvas = document.createElement(\"canvas\"); canvas.width = w; canvas.height = h; var ctx = canvas.getContext(\"2d\"); var image = ctx.createImageData(w, h); var data = image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = (val >> 24) & 0xff; src++; dst += 4; } } else { var data32 = new Int32Array(data.buffer); num = data32.length; data32.set(HEAP32.subarray(src, src + num)); } ctx.putImageData(image, 0, 0); var url = hot_x === 0 && hot_y === 0 ? \"url(\" + canvas.toDataURL() + \"), auto\" : \"url(\" + canvas.toDataURL() + \") \" + hot_x + \" \" + hot_y + \", auto\"; var urlBuf = _malloc(url.length + 1); stringToUTF8(url, urlBuf, url.length + 1); return urlBuf; },  \r\n 609934: ($0) => { if (Module['canvas']) { Module['canvas'].style['cursor'] = UTF8ToString($0); } },  \r\n 610017: () => { if (Module['canvas']) { Module['canvas'].style['cursor'] = 'none'; } },  \r\n 610086: () => { return window.innerWidth; },  \r\n 610116: () => { return window.innerHeight; },  \r\n 610147: ($0, $1) => { alert(UTF8ToString($0) + \"\\n\\n\" + UTF8ToString($1)); }\r\n};\r\n\r\n\r\n\r\n// end include: preamble.js\r\n\r\n  /** @constructor */\r\n  function ExitStatus(status) {\r\n      this.name = 'ExitStatus';\r\n      this.message = `Program terminated with exit(${status})`;\r\n      this.status = status;\r\n    }\r\n\r\n  function listenOnce(object, event, func) {\r\n      object.addEventListener(event, func, { 'once': true });\r\n    }\r\n  /** @param {Object=} elements */\r\n  function autoResumeAudioContext(ctx, elements) {\r\n      if (!elements) {\r\n        elements = [document, document.getElementById('canvas')];\r\n      }\r\n      ['keydown', 'mousedown', 'touchstart'].forEach((event) => {\r\n        elements.forEach((element) => {\r\n          if (element) {\r\n            listenOnce(element, event, () => {\r\n              if (ctx.state === 'suspended') ctx.resume();\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n  function callRuntimeCallbacks(callbacks) {\r\n      while (callbacks.length > 0) {\r\n        // Pass the module as the first argument.\r\n        callbacks.shift()(Module);\r\n      }\r\n    }\r\n\r\n  function dynCallLegacy(sig, ptr, args) {\r\n      var f = Module['dynCall_' + sig];\r\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\r\n    }\r\n  \r\n  var wasmTableMirror = [];\r\n  \r\n  function getWasmTableEntry(funcPtr) {\r\n      var func = wasmTableMirror[funcPtr];\r\n      if (!func) {\r\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\r\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\r\n      }\r\n      return func;\r\n    }\r\n  /** @param {Object=} args */\r\n  function dynCall(sig, ptr, args) {\r\n      return dynCallLegacy(sig, ptr, args);\r\n    }\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {string} type\r\n     */\r\n  function getValue(ptr, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': return HEAP8[((ptr)>>0)];\r\n      case 'i8': return HEAP8[((ptr)>>0)];\r\n      case 'i16': return HEAP16[((ptr)>>1)];\r\n      case 'i32': return HEAP32[((ptr)>>2)];\r\n      case 'i64': abort('to do getValue(i64) use WASM_BIGINT');\r\n      case 'float': return HEAPF32[((ptr)>>2)];\r\n      case 'double': return HEAPF64[((ptr)>>3)];\r\n      case '*': return HEAPU32[((ptr)>>2)];\r\n      default: abort(`invalid type for getValue: ${type}`);\r\n    }\r\n  }\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {number} value\r\n     * @param {string} type\r\n     */\r\n  function setValue(ptr, value, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\r\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\r\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\r\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\r\n      case 'i64': abort('to do setValue(i64) use WASM_BIGINT');\r\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\r\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\r\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\r\n      default: abort(`invalid type for setValue: ${type}`);\r\n    }\r\n  }\r\n\r\n  /** @constructor */\r\n  function ExceptionInfo(excPtr) {\r\n      this.excPtr = excPtr;\r\n      this.ptr = excPtr - 24;\r\n  \r\n      this.set_type = function(type) {\r\n        HEAPU32[(((this.ptr)+(4))>>2)] = type;\r\n      };\r\n  \r\n      this.get_type = function() {\r\n        return HEAPU32[(((this.ptr)+(4))>>2)];\r\n      };\r\n  \r\n      this.set_destructor = function(destructor) {\r\n        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;\r\n      };\r\n  \r\n      this.get_destructor = function() {\r\n        return HEAPU32[(((this.ptr)+(8))>>2)];\r\n      };\r\n  \r\n      this.set_caught = function (caught) {\r\n        caught = caught ? 1 : 0;\r\n        HEAP8[(((this.ptr)+(12))>>0)] = caught;\r\n      };\r\n  \r\n      this.get_caught = function () {\r\n        return HEAP8[(((this.ptr)+(12))>>0)] != 0;\r\n      };\r\n  \r\n      this.set_rethrown = function (rethrown) {\r\n        rethrown = rethrown ? 1 : 0;\r\n        HEAP8[(((this.ptr)+(13))>>0)] = rethrown;\r\n      };\r\n  \r\n      this.get_rethrown = function () {\r\n        return HEAP8[(((this.ptr)+(13))>>0)] != 0;\r\n      };\r\n  \r\n      // Initialize native structure fields. Should be called once after allocated.\r\n      this.init = function(type, destructor) {\r\n        this.set_adjusted_ptr(0);\r\n        this.set_type(type);\r\n        this.set_destructor(destructor);\r\n      }\r\n  \r\n      this.set_adjusted_ptr = function(adjustedPtr) {\r\n        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;\r\n      };\r\n  \r\n      this.get_adjusted_ptr = function() {\r\n        return HEAPU32[(((this.ptr)+(16))>>2)];\r\n      };\r\n  \r\n      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\r\n      // when the pointer is casted to some of the exception object base classes (e.g. when virtual\r\n      // inheritance is used). When a pointer is thrown this method should return the thrown pointer\r\n      // itself.\r\n      this.get_exception_ptr = function() {\r\n        // Work around a fastcomp bug, this code is still included for some reason in a build without\r\n        // exceptions support.\r\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\r\n        if (isPointer) {\r\n          return HEAPU32[((this.excPtr)>>2)];\r\n        }\r\n        var adjusted = this.get_adjusted_ptr();\r\n        if (adjusted !== 0) return adjusted;\r\n        return this.excPtr;\r\n      };\r\n    }\r\n  \r\n  var exceptionLast = 0;\r\n  \r\n  var uncaughtExceptionCount = 0;\r\n  function ___cxa_throw(ptr, type, destructor) {\r\n      var info = new ExceptionInfo(ptr);\r\n      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\r\n      info.init(type, destructor);\r\n      exceptionLast = ptr;\r\n      uncaughtExceptionCount++;\r\n      throw exceptionLast;\r\n    }\r\n\r\n  var PATH = {isAbs:(path) => path.charAt(0) === '/',splitPath:(filename) => {\r\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n        return splitPathRe.exec(filename).slice(1);\r\n      },normalizeArray:(parts, allowAboveRoot) => {\r\n        // if the path tries to go above the root, `up` ends up > 0\r\n        var up = 0;\r\n        for (var i = parts.length - 1; i >= 0; i--) {\r\n          var last = parts[i];\r\n          if (last === '.') {\r\n            parts.splice(i, 1);\r\n          } else if (last === '..') {\r\n            parts.splice(i, 1);\r\n            up++;\r\n          } else if (up) {\r\n            parts.splice(i, 1);\r\n            up--;\r\n          }\r\n        }\r\n        // if the path is allowed to go above the root, restore leading ..s\r\n        if (allowAboveRoot) {\r\n          for (; up; up--) {\r\n            parts.unshift('..');\r\n          }\r\n        }\r\n        return parts;\r\n      },normalize:(path) => {\r\n        var isAbsolute = PATH.isAbs(path),\r\n            trailingSlash = path.substr(-1) === '/';\r\n        // Normalize the path\r\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\r\n        if (!path && !isAbsolute) {\r\n          path = '.';\r\n        }\r\n        if (path && trailingSlash) {\r\n          path += '/';\r\n        }\r\n        return (isAbsolute ? '/' : '') + path;\r\n      },dirname:(path) => {\r\n        var result = PATH.splitPath(path),\r\n            root = result[0],\r\n            dir = result[1];\r\n        if (!root && !dir) {\r\n          // No dirname whatsoever\r\n          return '.';\r\n        }\r\n        if (dir) {\r\n          // It has a dirname, strip trailing slash\r\n          dir = dir.substr(0, dir.length - 1);\r\n        }\r\n        return root + dir;\r\n      },basename:(path) => {\r\n        // EMSCRIPTEN return '/'' for '/', not an empty string\r\n        if (path === '/') return '/';\r\n        path = PATH.normalize(path);\r\n        path = path.replace(/\\/$/, \"\");\r\n        var lastSlash = path.lastIndexOf('/');\r\n        if (lastSlash === -1) return path;\r\n        return path.substr(lastSlash+1);\r\n      },join:function() {\r\n        var paths = Array.prototype.slice.call(arguments);\r\n        return PATH.normalize(paths.join('/'));\r\n      },join2:(l, r) => {\r\n        return PATH.normalize(l + '/' + r);\r\n      }};\r\n  \r\n  function initRandomFill() {\r\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\r\n        // for modern web browsers\r\n        return (view) => crypto.getRandomValues(view);\r\n      } else\r\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\r\n      abort(\"initRandomDevice\");\r\n    }\r\n  function randomFill(view) {\r\n      // Lazily init on the first invocation.\r\n      return (randomFill = initRandomFill())(view);\r\n    }\r\n  \r\n  \r\n  \r\n  var PATH_FS = {resolve:function() {\r\n        var resolvedPath = '',\r\n          resolvedAbsolute = false;\r\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\r\n          // Skip empty and invalid entries\r\n          if (typeof path != 'string') {\r\n            throw new TypeError('Arguments to path.resolve must be strings');\r\n          } else if (!path) {\r\n            return ''; // an invalid portion invalidates the whole thing\r\n          }\r\n          resolvedPath = path + '/' + resolvedPath;\r\n          resolvedAbsolute = PATH.isAbs(path);\r\n        }\r\n        // At this point the path should be resolved to a full absolute path, but\r\n        // handle relative paths to be safe (might happen when process.cwd() fails)\r\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\r\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n      },relative:(from, to) => {\r\n        from = PATH_FS.resolve(from).substr(1);\r\n        to = PATH_FS.resolve(to).substr(1);\r\n        function trim(arr) {\r\n          var start = 0;\r\n          for (; start < arr.length; start++) {\r\n            if (arr[start] !== '') break;\r\n          }\r\n          var end = arr.length - 1;\r\n          for (; end >= 0; end--) {\r\n            if (arr[end] !== '') break;\r\n          }\r\n          if (start > end) return [];\r\n          return arr.slice(start, end - start + 1);\r\n        }\r\n        var fromParts = trim(from.split('/'));\r\n        var toParts = trim(to.split('/'));\r\n        var length = Math.min(fromParts.length, toParts.length);\r\n        var samePartsLength = length;\r\n        for (var i = 0; i < length; i++) {\r\n          if (fromParts[i] !== toParts[i]) {\r\n            samePartsLength = i;\r\n            break;\r\n          }\r\n        }\r\n        var outputParts = [];\r\n        for (var i = samePartsLength; i < fromParts.length; i++) {\r\n          outputParts.push('..');\r\n        }\r\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n        return outputParts.join('/');\r\n      }};\r\n  \r\n  \r\n  function lengthBytesUTF8(str) {\r\n      var len = 0;\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        var c = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (c <= 0x7F) {\r\n          len++;\r\n        } else if (c <= 0x7FF) {\r\n          len += 2;\r\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\r\n          len += 4; ++i;\r\n        } else {\r\n          len += 3;\r\n        }\r\n      }\r\n      return len;\r\n    }\r\n  \r\n  function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\r\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\r\n      // undefined and false each don't write out any bytes.\r\n      if (!(maxBytesToWrite > 0))\r\n        return 0;\r\n  \r\n      var startIdx = outIdx;\r\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // and https://www.ietf.org/rfc/rfc2279.txt\r\n        // and https://tools.ietf.org/html/rfc3629\r\n        var u = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (u >= 0xD800 && u <= 0xDFFF) {\r\n          var u1 = str.charCodeAt(++i);\r\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\r\n        }\r\n        if (u <= 0x7F) {\r\n          if (outIdx >= endIdx) break;\r\n          heap[outIdx++] = u;\r\n        } else if (u <= 0x7FF) {\r\n          if (outIdx + 1 >= endIdx) break;\r\n          heap[outIdx++] = 0xC0 | (u >> 6);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else if (u <= 0xFFFF) {\r\n          if (outIdx + 2 >= endIdx) break;\r\n          heap[outIdx++] = 0xE0 | (u >> 12);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else {\r\n          if (outIdx + 3 >= endIdx) break;\r\n          heap[outIdx++] = 0xF0 | (u >> 18);\r\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        }\r\n      }\r\n      // Null-terminate the pointer to the buffer.\r\n      heap[outIdx] = 0;\r\n      return outIdx - startIdx;\r\n    }\r\n  /** @type {function(string, boolean=, number=)} */\r\n  function intArrayFromString(stringy, dontAddNull, length) {\r\n    var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\r\n    var u8array = new Array(len);\r\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n    if (dontAddNull) u8array.length = numBytesWritten;\r\n    return u8array;\r\n  }\r\n  \r\n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\r\n  \r\n    /**\r\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\r\n     * array that contains uint8 values, returns a copy of that string as a\r\n     * Javascript String object.\r\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\r\n     * @param {number} idx\r\n     * @param {number=} maxBytesToRead\r\n     * @return {string}\r\n     */\r\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\r\n      var endIdx = idx + maxBytesToRead;\r\n      var endPtr = idx;\r\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\r\n      // null terminator by itself.  Also, use the length info to avoid running tiny\r\n      // strings through TextDecoder, since .subarray() allocates garbage.\r\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\r\n      // so that undefined means Infinity)\r\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n  \r\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\r\n      }\r\n      var str = '';\r\n      // If building with TextDecoder, we have already computed the string length\r\n      // above, so test loop end condition against that\r\n      while (idx < endPtr) {\r\n        // For UTF8 byte structure, see:\r\n        // http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // https://www.ietf.org/rfc/rfc2279.txt\r\n        // https://tools.ietf.org/html/rfc3629\r\n        var u0 = heapOrArray[idx++];\r\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\r\n        var u1 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\r\n        var u2 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xF0) == 0xE0) {\r\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n        } else {\r\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\r\n        }\r\n  \r\n        if (u0 < 0x10000) {\r\n          str += String.fromCharCode(u0);\r\n        } else {\r\n          var ch = u0 - 0x10000;\r\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n        }\r\n      }\r\n      return str;\r\n    }\r\n  var TTY = {ttys:[],init:function () {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\r\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\r\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\r\n        //   // with text files until FS.init can be refactored.\r\n        //   process.stdin.setEncoding('utf8');\r\n        // }\r\n      },shutdown:function() {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\r\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\r\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\r\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\r\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\r\n        //   process.stdin.pause();\r\n        // }\r\n      },register:function(dev, ops) {\r\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\r\n        FS.registerDevice(dev, TTY.stream_ops);\r\n      },stream_ops:{open:function(stream) {\r\n          var tty = TTY.ttys[stream.node.rdev];\r\n          if (!tty) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          stream.tty = tty;\r\n          stream.seekable = false;\r\n        },close:function(stream) {\r\n          // flush any pending line data\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },fsync:function(stream) {\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },read:function(stream, buffer, offset, length, pos /* ignored */) {\r\n          if (!stream.tty || !stream.tty.ops.get_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          var bytesRead = 0;\r\n          for (var i = 0; i < length; i++) {\r\n            var result;\r\n            try {\r\n              result = stream.tty.ops.get_char(stream.tty);\r\n            } catch (e) {\r\n              throw new FS.ErrnoError(29);\r\n            }\r\n            if (result === undefined && bytesRead === 0) {\r\n              throw new FS.ErrnoError(6);\r\n            }\r\n            if (result === null || result === undefined) break;\r\n            bytesRead++;\r\n            buffer[offset+i] = result;\r\n          }\r\n          if (bytesRead) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return bytesRead;\r\n        },write:function(stream, buffer, offset, length, pos) {\r\n          if (!stream.tty || !stream.tty.ops.put_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          try {\r\n            for (var i = 0; i < length; i++) {\r\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\r\n            }\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n          if (length) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return i;\r\n        }},default_tty_ops:{get_char:function(tty) {\r\n          if (!tty.input.length) {\r\n            var result = null;\r\n            if (typeof window != 'undefined' &&\r\n              typeof window.prompt == 'function') {\r\n              // Browser.\r\n              result = window.prompt('Input: ');  // returns null on cancel\r\n              if (result !== null) {\r\n                result += '\\n';\r\n              }\r\n            } else if (typeof readline == 'function') {\r\n              // Command line.\r\n              result = readline();\r\n              if (result !== null) {\r\n                result += '\\n';\r\n              }\r\n            }\r\n            if (!result) {\r\n              return null;\r\n            }\r\n            tty.input = intArrayFromString(result, true);\r\n          }\r\n          return tty.input.shift();\r\n        },put_char:function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\r\n          }\r\n        },fsync:function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        }},default_tty1_ops:{put_char:function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val);\r\n          }\r\n        },fsync:function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        }}};\r\n  \r\n  \r\n  function zeroMemory(address, size) {\r\n      HEAPU8.fill(0, address, address + size);\r\n      return address;\r\n    }\r\n  \r\n  function alignMemory(size, alignment) {\r\n      return Math.ceil(size / alignment) * alignment;\r\n    }\r\n  function mmapAlloc(size) {\r\n      abort();\r\n    }\r\n  var MEMFS = {ops_table:null,mount:function(mount) {\r\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\r\n      },createNode:function(parent, name, mode, dev) {\r\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n          // no supported\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (!MEMFS.ops_table) {\r\n          MEMFS.ops_table = {\r\n            dir: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr,\r\n                lookup: MEMFS.node_ops.lookup,\r\n                mknod: MEMFS.node_ops.mknod,\r\n                rename: MEMFS.node_ops.rename,\r\n                unlink: MEMFS.node_ops.unlink,\r\n                rmdir: MEMFS.node_ops.rmdir,\r\n                readdir: MEMFS.node_ops.readdir,\r\n                symlink: MEMFS.node_ops.symlink\r\n              },\r\n              stream: {\r\n                llseek: MEMFS.stream_ops.llseek\r\n              }\r\n            },\r\n            file: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr\r\n              },\r\n              stream: {\r\n                llseek: MEMFS.stream_ops.llseek,\r\n                read: MEMFS.stream_ops.read,\r\n                write: MEMFS.stream_ops.write,\r\n                allocate: MEMFS.stream_ops.allocate,\r\n                mmap: MEMFS.stream_ops.mmap,\r\n                msync: MEMFS.stream_ops.msync\r\n              }\r\n            },\r\n            link: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr,\r\n                readlink: MEMFS.node_ops.readlink\r\n              },\r\n              stream: {}\r\n            },\r\n            chrdev: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr\r\n              },\r\n              stream: FS.chrdev_stream_ops\r\n            }\r\n          };\r\n        }\r\n        var node = FS.createNode(parent, name, mode, dev);\r\n        if (FS.isDir(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.dir.node;\r\n          node.stream_ops = MEMFS.ops_table.dir.stream;\r\n          node.contents = {};\r\n        } else if (FS.isFile(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.file.node;\r\n          node.stream_ops = MEMFS.ops_table.file.stream;\r\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\r\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\r\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\r\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\r\n          node.contents = null; \r\n        } else if (FS.isLink(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.link.node;\r\n          node.stream_ops = MEMFS.ops_table.link.stream;\r\n        } else if (FS.isChrdev(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.chrdev.node;\r\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\r\n        }\r\n        node.timestamp = Date.now();\r\n        // add the new node to the parent\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n          parent.timestamp = node.timestamp;\r\n        }\r\n        return node;\r\n      },getFileDataAsTypedArray:function(node) {\r\n        if (!node.contents) return new Uint8Array(0);\r\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\r\n        return new Uint8Array(node.contents);\r\n      },expandFileStorage:function(node, newCapacity) {\r\n        var prevCapacity = node.contents ? node.contents.length : 0;\r\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\r\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\r\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\r\n        // avoid overshooting the allocation cap by a very large margin.\r\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\r\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\r\n        var oldContents = node.contents;\r\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\r\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\r\n      },resizeFileStorage:function(node, newSize) {\r\n        if (node.usedBytes == newSize) return;\r\n        if (newSize == 0) {\r\n          node.contents = null; // Fully decommit when requesting a resize to zero.\r\n          node.usedBytes = 0;\r\n        } else {\r\n          var oldContents = node.contents;\r\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\r\n          if (oldContents) {\r\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\r\n          }\r\n          node.usedBytes = newSize;\r\n        }\r\n      },node_ops:{getattr:function(node) {\r\n          var attr = {};\r\n          // device numbers reuse inode numbers.\r\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n          attr.ino = node.id;\r\n          attr.mode = node.mode;\r\n          attr.nlink = 1;\r\n          attr.uid = 0;\r\n          attr.gid = 0;\r\n          attr.rdev = node.rdev;\r\n          if (FS.isDir(node.mode)) {\r\n            attr.size = 4096;\r\n          } else if (FS.isFile(node.mode)) {\r\n            attr.size = node.usedBytes;\r\n          } else if (FS.isLink(node.mode)) {\r\n            attr.size = node.link.length;\r\n          } else {\r\n            attr.size = 0;\r\n          }\r\n          attr.atime = new Date(node.timestamp);\r\n          attr.mtime = new Date(node.timestamp);\r\n          attr.ctime = new Date(node.timestamp);\r\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\r\n          //       but this is not required by the standard.\r\n          attr.blksize = 4096;\r\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n          return attr;\r\n        },setattr:function(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n          if (attr.size !== undefined) {\r\n            MEMFS.resizeFileStorage(node, attr.size);\r\n          }\r\n        },lookup:function(parent, name) {\r\n          throw FS.genericErrors[44];\r\n        },mknod:function(parent, name, mode, dev) {\r\n          return MEMFS.createNode(parent, name, mode, dev);\r\n        },rename:function(old_node, new_dir, new_name) {\r\n          // if we're overwriting a directory at new_name, make sure it's empty.\r\n          if (FS.isDir(old_node.mode)) {\r\n            var new_node;\r\n            try {\r\n              new_node = FS.lookupNode(new_dir, new_name);\r\n            } catch (e) {\r\n            }\r\n            if (new_node) {\r\n              for (var i in new_node.contents) {\r\n                throw new FS.ErrnoError(55);\r\n              }\r\n            }\r\n          }\r\n          // do the internal rewiring\r\n          delete old_node.parent.contents[old_node.name];\r\n          old_node.parent.timestamp = Date.now()\r\n          old_node.name = new_name;\r\n          new_dir.contents[new_name] = old_node;\r\n          new_dir.timestamp = old_node.parent.timestamp;\r\n          old_node.parent = new_dir;\r\n        },unlink:function(parent, name) {\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },rmdir:function(parent, name) {\r\n          var node = FS.lookupNode(parent, name);\r\n          for (var i in node.contents) {\r\n            throw new FS.ErrnoError(55);\r\n          }\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },readdir:function(node) {\r\n          var entries = ['.', '..'];\r\n          for (var key in node.contents) {\r\n            if (!node.contents.hasOwnProperty(key)) {\r\n              continue;\r\n            }\r\n            entries.push(key);\r\n          }\r\n          return entries;\r\n        },symlink:function(parent, newname, oldpath) {\r\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\r\n          node.link = oldpath;\r\n          return node;\r\n        },readlink:function(node) {\r\n          if (!FS.isLink(node.mode)) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return node.link;\r\n        }},stream_ops:{read:function(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= stream.node.usedBytes) return 0;\r\n          var size = Math.min(stream.node.usedBytes - position, length);\r\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\r\n            buffer.set(contents.subarray(position, position + size), offset);\r\n          } else {\r\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\r\n          }\r\n          return size;\r\n        },write:function(stream, buffer, offset, length, position, canOwn) {\r\n          // If the buffer is located in main memory (HEAP), and if\r\n          // memory can grow, we can't hold on to references of the\r\n          // memory buffer, as they may get invalidated. That means we\r\n          // need to do copy its contents.\r\n          if (buffer.buffer === HEAP8.buffer) {\r\n            canOwn = false;\r\n          }\r\n  \r\n          if (!length) return 0;\r\n          var node = stream.node;\r\n          node.timestamp = Date.now();\r\n  \r\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\r\n            if (canOwn) {\r\n              node.contents = buffer.subarray(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\r\n              node.contents = buffer.slice(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\r\n              node.contents.set(buffer.subarray(offset, offset + length), position);\r\n              return length;\r\n            }\r\n          }\r\n  \r\n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\r\n          MEMFS.expandFileStorage(node, position+length);\r\n          if (node.contents.subarray && buffer.subarray) {\r\n            // Use typed array write which is available.\r\n            node.contents.set(buffer.subarray(offset, offset + length), position);\r\n          } else {\r\n            for (var i = 0; i < length; i++) {\r\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\r\n            }\r\n          }\r\n          node.usedBytes = Math.max(node.usedBytes, position + length);\r\n          return length;\r\n        },llseek:function(stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.usedBytes;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        },allocate:function(stream, offset, length) {\r\n          MEMFS.expandFileStorage(stream.node, offset + length);\r\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\r\n        },mmap:function(stream, length, position, prot, flags) {\r\n          if (!FS.isFile(stream.node.mode)) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          var ptr;\r\n          var allocated;\r\n          var contents = stream.node.contents;\r\n          // Only make a new copy when MAP_PRIVATE is specified.\r\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\r\n            // We can't emulate MAP_SHARED when the file is not backed by the\r\n            // buffer we're mapping to (e.g. the HEAP buffer).\r\n            allocated = false;\r\n            ptr = contents.byteOffset;\r\n          } else {\r\n            // Try to avoid unnecessary slices.\r\n            if (position > 0 || position + length < contents.length) {\r\n              if (contents.subarray) {\r\n                contents = contents.subarray(position, position + length);\r\n              } else {\r\n                contents = Array.prototype.slice.call(contents, position, position + length);\r\n              }\r\n            }\r\n            allocated = true;\r\n            ptr = mmapAlloc(length);\r\n            if (!ptr) {\r\n              throw new FS.ErrnoError(48);\r\n            }\r\n            HEAP8.set(contents, ptr);\r\n          }\r\n          return { ptr: ptr, allocated: allocated };\r\n        },msync:function(stream, buffer, offset, length, mmapFlags) {\r\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n          // should we check if bytesWritten and length are the same?\r\n          return 0;\r\n        }}};\r\n  \r\n  /** @param {boolean=} noRunDep */\r\n  function asyncLoad(url, onload, onerror, noRunDep) {\r\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : '';\r\n      readAsync(url, (arrayBuffer) => {\r\n        assert(arrayBuffer, `Loading data file \"${url}\" failed (no arrayBuffer).`);\r\n        onload(new Uint8Array(arrayBuffer));\r\n        if (dep) removeRunDependency(dep);\r\n      }, (event) => {\r\n        if (onerror) {\r\n          onerror();\r\n        } else {\r\n          throw `Loading data file \"${url}\" failed.`;\r\n        }\r\n      });\r\n      if (dep) addRunDependency(dep);\r\n    }\r\n  \r\n  var preloadPlugins = Module['preloadPlugins'] || [];\r\n  function FS_handledByPreloadPlugin(byteArray, fullname, finish, onerror) {\r\n      // Ensure plugins are ready.\r\n      if (typeof Browser != 'undefined') Browser.init();\r\n  \r\n      var handled = false;\r\n      preloadPlugins.forEach(function(plugin) {\r\n        if (handled) return;\r\n        if (plugin['canHandle'](fullname)) {\r\n          plugin['handle'](byteArray, fullname, finish, onerror);\r\n          handled = true;\r\n        }\r\n      });\r\n      return handled;\r\n    }\r\n  function FS_createPreloadedFile(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\r\n      // TODO we should allow people to just pass in a complete filename instead\r\n      // of parent and name being that we just join them anyways\r\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\r\n      var dep = getUniqueRunDependency(`cp ${fullname}`); // might have several active requests for the same fullname\r\n      function processData(byteArray) {\r\n        function finish(byteArray) {\r\n          if (preFinish) preFinish();\r\n          if (!dontCreateFile) {\r\n            FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\r\n          }\r\n          if (onload) onload();\r\n          removeRunDependency(dep);\r\n        }\r\n        if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\r\n          if (onerror) onerror();\r\n          removeRunDependency(dep);\r\n        })) {\r\n          return;\r\n        }\r\n        finish(byteArray);\r\n      }\r\n      addRunDependency(dep);\r\n      if (typeof url == 'string') {\r\n        asyncLoad(url, (byteArray) => processData(byteArray), onerror);\r\n      } else {\r\n        processData(url);\r\n      }\r\n    }\r\n  \r\n  function FS_modeStringToFlags(str) {\r\n      var flagModes = {\r\n        'r': 0,\r\n        'r+': 2,\r\n        'w': 512 | 64 | 1,\r\n        'w+': 512 | 64 | 2,\r\n        'a': 1024 | 64 | 1,\r\n        'a+': 1024 | 64 | 2,\r\n      };\r\n      var flags = flagModes[str];\r\n      if (typeof flags == 'undefined') {\r\n        throw new Error(`Unknown file open mode: ${str}`);\r\n      }\r\n      return flags;\r\n    }\r\n  \r\n  function FS_getMode(canRead, canWrite) {\r\n      var mode = 0;\r\n      if (canRead) mode |= 292 | 73;\r\n      if (canWrite) mode |= 146;\r\n      return mode;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  var IDBFS = {dbs:{},indexedDB:() => {\r\n        if (typeof indexedDB != 'undefined') return indexedDB;\r\n        var ret = null;\r\n        if (typeof window == 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        assert(ret, 'IDBFS used, but indexedDB not supported');\r\n        return ret;\r\n      },DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:function(mount) {\r\n        // reuse all of the core MEMFS functionality\r\n        return MEMFS.mount.apply(null, arguments);\r\n      },syncfs:(mount, populate, callback) => {\r\n        IDBFS.getLocalSet(mount, (err, local) => {\r\n          if (err) return callback(err);\r\n  \r\n          IDBFS.getRemoteSet(mount, (err, remote) => {\r\n            if (err) return callback(err);\r\n  \r\n            var src = populate ? remote : local;\r\n            var dst = populate ? local : remote;\r\n  \r\n            IDBFS.reconcile(src, dst, callback);\r\n          });\r\n        });\r\n      },quit:() => {\r\n        Object.values(IDBFS.dbs).forEach((value) => value.close());\r\n        IDBFS.dbs = {};\r\n      },getDB:(name, callback) => {\r\n        // check the cache first\r\n        var db = IDBFS.dbs[name];\r\n        if (db) {\r\n          return callback(null, db);\r\n        }\r\n  \r\n        var req;\r\n        try {\r\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n        if (!req) {\r\n          return callback(\"Unable to connect to IndexedDB\");\r\n        }\r\n        req.onupgradeneeded = (e) => {\r\n          var db = /** @type {IDBDatabase} */ (e.target.result);\r\n          var transaction = e.target.transaction;\r\n  \r\n          var fileStore;\r\n  \r\n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\r\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n          } else {\r\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\r\n          }\r\n  \r\n          if (!fileStore.indexNames.contains('timestamp')) {\r\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\r\n          }\r\n        };\r\n        req.onsuccess = () => {\r\n          db = /** @type {IDBDatabase} */ (req.result);\r\n  \r\n          // add to the cache\r\n          IDBFS.dbs[name] = db;\r\n          callback(null, db);\r\n        };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },getLocalSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        function isRealDir(p) {\r\n          return p !== '.' && p !== '..';\r\n        };\r\n        function toAbsolute(root) {\r\n          return (p) => {\r\n            return PATH.join2(root, p);\r\n          }\r\n        };\r\n  \r\n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\r\n  \r\n        while (check.length) {\r\n          var path = check.pop();\r\n          var stat;\r\n  \r\n          try {\r\n            stat = FS.stat(path);\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\r\n          }\r\n  \r\n          entries[path] = { 'timestamp': stat.mtime };\r\n        }\r\n  \r\n        return callback(null, { type: 'local', entries: entries });\r\n      },getRemoteSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        IDBFS.getDB(mount.mountpoint, (err, db) => {\r\n          if (err) return callback(err);\r\n  \r\n          try {\r\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\r\n            transaction.onerror = (e) => {\r\n              callback(this.error);\r\n              e.preventDefault();\r\n            };\r\n  \r\n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n            var index = store.index('timestamp');\r\n  \r\n            index.openKeyCursor().onsuccess = (event) => {\r\n              var cursor = event.target.result;\r\n  \r\n              if (!cursor) {\r\n                return callback(null, { type: 'remote', db: db, entries: entries });\r\n              }\r\n  \r\n              entries[cursor.primaryKey] = { 'timestamp': cursor.key };\r\n  \r\n              cursor.continue();\r\n            };\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n        });\r\n      },loadLocalEntry:(path, callback) => {\r\n        var stat, node;\r\n  \r\n        try {\r\n          var lookup = FS.lookupPath(path);\r\n          node = lookup.node;\r\n          stat = FS.stat(path);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        if (FS.isDir(stat.mode)) {\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode });\r\n        } else if (FS.isFile(stat.mode)) {\r\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\r\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\r\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode, 'contents': node.contents });\r\n        } else {\r\n          return callback(new Error('node type not supported'));\r\n        }\r\n      },storeLocalEntry:(path, entry, callback) => {\r\n        try {\r\n          if (FS.isDir(entry['mode'])) {\r\n            FS.mkdirTree(path, entry['mode']);\r\n          } else if (FS.isFile(entry['mode'])) {\r\n            FS.writeFile(path, entry['contents'], { canOwn: true });\r\n          } else {\r\n            return callback(new Error('node type not supported'));\r\n          }\r\n  \r\n          FS.chmod(path, entry['mode']);\r\n          FS.utime(path, entry['timestamp'], entry['timestamp']);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },removeLocalEntry:(path, callback) => {\r\n        try {\r\n          var stat = FS.stat(path);\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            FS.rmdir(path);\r\n          } else if (FS.isFile(stat.mode)) {\r\n            FS.unlink(path);\r\n          }\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },loadRemoteEntry:(store, path, callback) => {\r\n        var req = store.get(path);\r\n        req.onsuccess = (event) => { callback(null, event.target.result); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },storeRemoteEntry:(store, path, entry, callback) => {\r\n        try {\r\n          var req = store.put(entry, path);\r\n        } catch (e) {\r\n          callback(e);\r\n          return;\r\n        }\r\n        req.onsuccess = () => { callback(null); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },removeRemoteEntry:(store, path, callback) => {\r\n        var req = store.delete(path);\r\n        req.onsuccess = () => { callback(null); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },reconcile:(src, dst, callback) => {\r\n        var total = 0;\r\n  \r\n        var create = [];\r\n        Object.keys(src.entries).forEach(function (key) {\r\n          var e = src.entries[key];\r\n          var e2 = dst.entries[key];\r\n          if (!e2 || e['timestamp'].getTime() != e2['timestamp'].getTime()) {\r\n            create.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        var remove = [];\r\n        Object.keys(dst.entries).forEach(function (key) {\r\n          if (!src.entries[key]) {\r\n            remove.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        if (!total) {\r\n          return callback(null);\r\n        }\r\n  \r\n        var errored = false;\r\n        var db = src.type === 'remote' ? src.db : dst.db;\r\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\r\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n  \r\n        function done(err) {\r\n          if (err && !errored) {\r\n            errored = true;\r\n            return callback(err);\r\n          }\r\n        };\r\n  \r\n        transaction.onerror = (e) => {\r\n          done(this.error);\r\n          e.preventDefault();\r\n        };\r\n  \r\n        transaction.oncomplete = (e) => {\r\n          if (!errored) {\r\n            callback(null);\r\n          }\r\n        };\r\n  \r\n        // sort paths in ascending order so directory entries are created\r\n        // before the files inside them\r\n        create.sort().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.loadRemoteEntry(store, path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeLocalEntry(path, entry, done);\r\n            });\r\n          } else {\r\n            IDBFS.loadLocalEntry(path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeRemoteEntry(store, path, entry, done);\r\n            });\r\n          }\r\n        });\r\n  \r\n        // sort paths in descending order so files are deleted before their\r\n        // parent directories\r\n        remove.sort().reverse().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.removeLocalEntry(path, done);\r\n          } else {\r\n            IDBFS.removeRemoteEntry(store, path, done);\r\n          }\r\n        });\r\n      }};\r\n  \r\n  \r\n  var LZ4 = {DIR_MODE:16895,FILE_MODE:33279,CHUNK_SIZE:-1,codec:null,init:function() {\r\n        if (LZ4.codec) return;\r\n        LZ4.codec = (function() {\r\n          /*\r\n  MiniLZ4: Minimal LZ4 block decoding and encoding.\r\n  \r\n  based off of node-lz4, https://github.com/pierrec/node-lz4\r\n  \r\n  ====\r\n  Copyright (c) 2012 Pierre Curto\r\n  \r\n  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  of this software and associated documentation files (the \"Software\"), to deal\r\n  in the Software without restriction, including without limitation the rights\r\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n  copies of the Software, and to permit persons to whom the Software is\r\n  furnished to do so, subject to the following conditions:\r\n  \r\n  The above copyright notice and this permission notice shall be included in\r\n  all copies or substantial portions of the Software.\r\n  \r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n  THE SOFTWARE.\r\n  ====\r\n  \r\n  changes have the same license\r\n  */\r\n  \r\n  var MiniLZ4 = (function() {\r\n  \r\n  var exports = {};\r\n  \r\n  /**\r\n   * Decode a block. Assumptions: input contains all sequences of a \r\n   * chunk, output is large enough to receive the decoded data.\r\n   * If the output buffer is too small, an error will be thrown.\r\n   * If the returned value is negative, an error occured at the returned offset.\r\n   *\r\n   * @param {ArrayBufferView} input input data\r\n   * @param {ArrayBufferView} output output data\r\n   * @param {number=} sIdx\r\n   * @param {number=} eIdx\r\n   * @return {number} number of decoded bytes\r\n   * @private\r\n   */\r\n  exports.uncompress = function (input, output, sIdx, eIdx) {\r\n  \tsIdx = sIdx || 0\r\n  \teIdx = eIdx || (input.length - sIdx)\r\n  \t// Process each sequence in the incoming data\r\n  \tfor (var i = sIdx, n = eIdx, j = 0; i < n;) {\r\n  \t\tvar token = input[i++]\r\n  \r\n  \t\t// Literals\r\n  \t\tvar literals_length = (token >> 4)\r\n  \t\tif (literals_length > 0) {\r\n  \t\t\t// length of literals\r\n  \t\t\tvar l = literals_length + 240\r\n  \t\t\twhile (l === 255) {\r\n  \t\t\t\tl = input[i++]\r\n  \t\t\t\tliterals_length += l\r\n  \t\t\t}\r\n  \r\n  \t\t\t// Copy the literals\r\n  \t\t\tvar end = i + literals_length\r\n  \t\t\twhile (i < end) output[j++] = input[i++]\r\n  \r\n  \t\t\t// End of buffer?\r\n  \t\t\tif (i === n) return j\r\n  \t\t}\r\n  \r\n  \t\t// Match copy\r\n  \t\t// 2 bytes offset (little endian)\r\n  \t\tvar offset = input[i++] | (input[i++] << 8)\r\n  \r\n  \t\t// XXX 0 is an invalid offset value\r\n  \t\tif (offset === 0) return j\r\n  \t\tif (offset > j) return -(i-2)\r\n  \r\n  \t\t// length of match copy\r\n  \t\tvar match_length = (token & 0xf)\r\n  \t\tvar l = match_length + 240\r\n  \t\twhile (l === 255) {\r\n  \t\t\tl = input[i++]\r\n  \t\t\tmatch_length += l\r\n  \t\t}\r\n  \r\n  \t\t// Copy the match\r\n  \t\tvar pos = j - offset // position of the match copy in the current output\r\n  \t\tvar end = j + match_length + 4 // minmatch = 4\r\n  \t\twhile (j < end) output[j++] = output[pos++]\r\n  \t}\r\n  \r\n  \treturn j\r\n  }\r\n  \r\n  var\r\n  \tmaxInputSize\t= 0x7E000000\r\n  ,\tminMatch\t\t= 4\r\n  // uint32() optimization\r\n  ,\thashLog\t\t\t= 16\r\n  ,\thashShift\t\t= (minMatch * 8) - hashLog\r\n  ,\thashSize\t\t= 1 << hashLog\r\n  \r\n  ,\tcopyLength\t\t= 8\r\n  ,\tlastLiterals\t= 5\r\n  ,\tmfLimit\t\t\t= copyLength + minMatch\r\n  ,\tskipStrength\t= 6\r\n  \r\n  ,\tmlBits  \t\t= 4\r\n  ,\tmlMask  \t\t= (1 << mlBits) - 1\r\n  ,\trunBits \t\t= 8 - mlBits\r\n  ,\trunMask \t\t= (1 << runBits) - 1\r\n  \r\n  ,\thasher \t\t\t= /* XXX uint32( */ 2654435761 /* ) */\r\n  \r\n  assert(hashShift === 16);\r\n  var hashTable = new Int16Array(1<<16);\r\n  var empty = new Int16Array(hashTable.length);\r\n  \r\n  // CompressBound returns the maximum length of a lz4 block, given it's uncompressed length\r\n  exports.compressBound = function (isize) {\r\n  \treturn isize > maxInputSize\r\n  \t\t? 0\r\n  \t\t: (isize + (isize/255) + 16) | 0\r\n  }\r\n  \r\n  /** @param {number=} sIdx\r\n  \t@param {number=} eIdx */\r\n  exports.compress = function (src, dst, sIdx, eIdx) {\r\n  \thashTable.set(empty);\r\n  \treturn compressBlock(src, dst, 0, sIdx || 0, eIdx || dst.length)\r\n  }\r\n  \r\n  function compressBlock (src, dst, pos, sIdx, eIdx) {\r\n  \t// XXX var Hash = uint32() // Reusable unsigned 32 bits integer\r\n  \tvar dpos = sIdx\r\n  \tvar dlen = eIdx - sIdx\r\n  \tvar anchor = 0\r\n  \r\n  \tif (src.length >= maxInputSize) throw new Error(\"input too large\")\r\n  \r\n  \t// Minimum of input bytes for compression (LZ4 specs)\r\n  \tif (src.length > mfLimit) {\r\n  \t\tvar n = exports.compressBound(src.length)\r\n  \t\tif ( dlen < n ) throw Error(\"output too small: \" + dlen + \" < \" + n)\r\n  \r\n  \t\tvar \r\n  \t\t\tstep  = 1\r\n  \t\t,\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \t\t// Keep last few bytes incompressible (LZ4 specs):\r\n  \t\t// last 5 bytes must be literals\r\n  \t\t,\tsrcLength = src.length - mfLimit\r\n  \r\n  \t\twhile (pos + minMatch < srcLength) {\r\n  \t\t\t// Find a match\r\n  \t\t\t// min match of 4 bytes aka sequence\r\n  \t\t\tvar sequenceLowBits = src[pos+1]<<8 | src[pos]\r\n  \t\t\tvar sequenceHighBits = src[pos+3]<<8 | src[pos+2]\r\n  \t\t\t// compute hash for the current sequence\r\n  \t\t\tvar hash = Math.imul(sequenceLowBits | (sequenceHighBits << 16), hasher) >>> hashShift;\r\n  \t\t\t/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)\r\n  \t\t\t\t\t\t\t.multiply(hasher)\r\n  \t\t\t\t\t\t\t.shiftr(hashShift)\r\n  \t\t\t\t\t\t\t.toNumber() */\r\n  \t\t\t// get the position of the sequence matching the hash\r\n  \t\t\t// NB. since 2 different sequences may have the same hash\r\n  \t\t\t// it is double-checked below\r\n  \t\t\t// do -1 to distinguish between initialized and uninitialized values\r\n  \t\t\tvar ref = hashTable[hash] - 1\r\n  \t\t\t// save position of current sequence in hash table\r\n  \t\t\thashTable[hash] = pos + 1\r\n  \r\n  \t\t\t// first reference or within 64k limit or current sequence !== hashed one: no match\r\n  \t\t\tif ( ref < 0 ||\r\n  \t\t\t\t((pos - ref) >>> 16) > 0 ||\r\n  \t\t\t\t(\r\n  \t\t\t\t\t((src[ref+3]<<8 | src[ref+2]) != sequenceHighBits) ||\r\n  \t\t\t\t\t((src[ref+1]<<8 | src[ref]) != sequenceLowBits )\r\n  \t\t\t\t)\r\n  \t\t\t) {\r\n  \t\t\t\t// increase step if nothing found within limit\r\n  \t\t\t\tstep = findMatchAttempts++ >> skipStrength\r\n  \t\t\t\tpos += step\r\n  \t\t\t\tcontinue\r\n  \t\t\t}\r\n  \r\n  \t\t\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \r\n  \t\t\t// got a match\r\n  \t\t\tvar literals_length = pos - anchor\r\n  \t\t\tvar offset = pos - ref\r\n  \r\n  \t\t\t// minMatch already verified\r\n  \t\t\tpos += minMatch\r\n  \t\t\tref += minMatch\r\n  \r\n  \t\t\t// move to the end of the match (>=minMatch)\r\n  \t\t\tvar match_length = pos\r\n  \t\t\twhile (pos < srcLength && src[pos] == src[ref]) {\r\n  \t\t\t\tpos++\r\n  \t\t\t\tref++\r\n  \t\t\t}\r\n  \r\n  \t\t\t// match length\r\n  \t\t\tmatch_length = pos - match_length\r\n  \r\n  \t\t\t// token\r\n  \t\t\tvar token = match_length < mlMask ? match_length : mlMask\r\n  \r\n  \t\t\t// encode literals length\r\n  \t\t\tif (literals_length >= runMask) {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (runMask << mlBits) + token\r\n  \t\t\t\tfor (var len = literals_length - runMask; len > 254; len -= 255) {\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \t\t\t\tdst[dpos++] = len\r\n  \t\t\t} else {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (literals_length << mlBits) + token\r\n  \t\t\t}\r\n  \r\n  \t\t\t// write literals\r\n  \t\t\tfor (var i = 0; i < literals_length; i++) {\r\n  \t\t\t\tdst[dpos++] = src[anchor+i]\r\n  \t\t\t}\r\n  \r\n  \t\t\t// encode offset\r\n  \t\t\tdst[dpos++] = offset\r\n  \t\t\tdst[dpos++] = (offset >> 8)\r\n  \r\n  \t\t\t// encode match length\r\n  \t\t\tif (match_length >= mlMask) {\r\n  \t\t\t\tmatch_length -= mlMask\r\n  \t\t\t\twhile (match_length >= 255) {\r\n  \t\t\t\t\tmatch_length -= 255\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \r\n  \t\t\t\tdst[dpos++] = match_length\r\n  \t\t\t}\r\n  \r\n  \t\t\tanchor = pos\r\n  \t\t}\r\n  \t}\r\n  \r\n  \t// cannot compress input\r\n  \tif (anchor == 0) return 0\r\n  \r\n  \t// Write last literals\r\n  \t// encode literals length\r\n  \tliterals_length = src.length - anchor\r\n  \tif (literals_length >= runMask) {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (runMask << mlBits)\r\n  \t\tfor (var ln = literals_length - runMask; ln > 254; ln -= 255) {\r\n  \t\t\tdst[dpos++] = 255\r\n  \t\t}\r\n  \t\tdst[dpos++] = ln\r\n  \t} else {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (literals_length << mlBits)\r\n  \t}\r\n  \r\n  \t// write literals\r\n  \tpos = anchor\r\n  \twhile (pos < src.length) {\r\n  \t\tdst[dpos++] = src[pos++]\r\n  \t}\r\n  \r\n  \treturn dpos\r\n  }\r\n  \r\n  exports.CHUNK_SIZE = 2048; // musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea\r\n  \r\n  exports.compressPackage = function(data, verify) {\r\n    if (verify) {\r\n      var temp = new Uint8Array(exports.CHUNK_SIZE);\r\n    }\r\n    // compress the data in chunks\r\n    assert(data instanceof ArrayBuffer);\r\n    data = new Uint8Array(data);\r\n    console.log('compressing package of size ' + data.length);\r\n    var compressedChunks = [];\r\n    var successes = [];\r\n    var offset = 0;\r\n    var total = 0;\r\n    while (offset < data.length) {\r\n      var chunk = data.subarray(offset, offset + exports.CHUNK_SIZE);\r\n      //console.log('compress a chunk ' + [offset, total, data.length]);\r\n      offset += exports.CHUNK_SIZE;\r\n      var bound = exports.compressBound(chunk.length);\r\n      var compressed = new Uint8Array(bound);\r\n      var compressedSize = exports.compress(chunk, compressed);\r\n      if (compressedSize > 0) {\r\n        assert(compressedSize <= bound);\r\n        compressed = compressed.subarray(0, compressedSize);\r\n        compressedChunks.push(compressed);\r\n        total += compressedSize;\r\n        successes.push(1);\r\n        if (verify) {\r\n          var back = exports.uncompress(compressed, temp);\r\n          assert(back === chunk.length, [back, chunk.length]);\r\n          for (var i = 0; i < chunk.length; i++) {\r\n            assert(chunk[i] === temp[i]);\r\n          }\r\n        }\r\n      } else {\r\n        assert(compressedSize === 0);\r\n        // failure to compress :(\r\n        compressedChunks.push(chunk);\r\n        total += chunk.length; // last chunk may not be the full exports.CHUNK_SIZE size\r\n        successes.push(0);\r\n      }\r\n    }\r\n    data = null; // XXX null out pack['data'] too?\r\n    var compressedData = {\r\n      'data': new Uint8Array(total + exports.CHUNK_SIZE*2), // store all the compressed data, plus room for two cached decompressed chunk, in one fast array\r\n      'cachedOffset': total,\r\n      'cachedIndexes': [-1, -1], // cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing\r\n      'cachedChunks': [null, null],\r\n      'offsets': [], // chunk# => start in compressed data\r\n      'sizes': [],\r\n      'successes': successes, // 1 if chunk is compressed\r\n    };\r\n    offset = 0;\r\n    for (var i = 0; i < compressedChunks.length; i++) {\r\n      compressedData['data'].set(compressedChunks[i], offset);\r\n      compressedData['offsets'][i] = offset;\r\n      compressedData['sizes'][i] = compressedChunks[i].length\r\n      offset += compressedChunks[i].length;\r\n    }\r\n    console.log('compressed package into ' + [compressedData['data'].length]);\r\n    assert(offset === total);\r\n    return compressedData;\r\n  };\r\n  \r\n  assert(exports.CHUNK_SIZE < (1 << 15)); // we use 16-bit ints as the type of the hash table, chunk size must be smaller\r\n  \r\n  return exports;\r\n  \r\n  })();\r\n  \r\n  ;\r\n          return MiniLZ4;\r\n        })();\r\n        LZ4.CHUNK_SIZE = LZ4.codec.CHUNK_SIZE;\r\n      },loadPackage:function (pack, preloadPlugin) {\r\n        LZ4.init();\r\n        var compressedData = pack['compressedData'];\r\n        if (!compressedData) compressedData = LZ4.codec.compressPackage(pack['data']);\r\n        assert(compressedData['cachedIndexes'].length === compressedData['cachedChunks'].length);\r\n        for (var i = 0; i < compressedData['cachedIndexes'].length; i++) {\r\n          compressedData['cachedIndexes'][i] = -1;\r\n          compressedData['cachedChunks'][i] = compressedData['data'].subarray(compressedData['cachedOffset'] + i*LZ4.CHUNK_SIZE,\r\n                                                                        compressedData['cachedOffset'] + (i+1)*LZ4.CHUNK_SIZE);\r\n          assert(compressedData['cachedChunks'][i].length === LZ4.CHUNK_SIZE);\r\n        }\r\n        pack['metadata'].files.forEach(function(file) {\r\n          var dir = PATH.dirname(file.filename);\r\n          var name = PATH.basename(file.filename);\r\n          FS.createPath('', dir, true, true);\r\n          var parent = FS.analyzePath(dir).object;\r\n          LZ4.createNode(parent, name, LZ4.FILE_MODE, 0, {\r\n            compressedData: compressedData,\r\n            start: file.start,\r\n            end: file.end,\r\n          });\r\n        });\r\n        // Preload files if necessary. This code is largely similar to\r\n        // createPreloadedFile in library_fs.js. However, a main difference here\r\n        // is that we only decompress the file if it can be preloaded.\r\n        // Abstracting out the common parts seems to be more effort than it is\r\n        // worth.\r\n        if (preloadPlugin) {\r\n          Browser.init();\r\n          pack['metadata'].files.forEach(function(file) {\r\n            var handled = false;\r\n            var fullname = file.filename;\r\n            preloadPlugins.forEach(function(plugin) {\r\n              if (handled) return;\r\n              if (plugin['canHandle'](fullname)) {\r\n                var dep = getUniqueRunDependency('fp ' + fullname);\r\n                addRunDependency(dep);\r\n                var finish = () => removeRunDependency(dep);\r\n                var byteArray = FS.readFile(fullname);\r\n                plugin['handle'](byteArray, fullname, finish, finish);\r\n                handled = true;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      },createNode:function (parent, name, mode, dev, contents, mtime) {\r\n        var node = FS.createNode(parent, name, mode);\r\n        node.mode = mode;\r\n        node.node_ops = LZ4.node_ops;\r\n        node.stream_ops = LZ4.stream_ops;\r\n        node.timestamp = (mtime || new Date).getTime();\r\n        assert(LZ4.FILE_MODE !== LZ4.DIR_MODE);\r\n        if (mode === LZ4.FILE_MODE) {\r\n          node.size = contents.end - contents.start;\r\n          node.contents = contents;\r\n        } else {\r\n          node.size = 4096;\r\n          node.contents = {};\r\n        }\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n        }\r\n        return node;\r\n      },node_ops:{getattr:function(node) {\r\n          return {\r\n            dev: 1,\r\n            ino: node.id,\r\n            mode: node.mode,\r\n            nlink: 1,\r\n            uid: 0,\r\n            gid: 0,\r\n            rdev: undefined,\r\n            size: node.size,\r\n            atime: new Date(node.timestamp),\r\n            mtime: new Date(node.timestamp),\r\n            ctime: new Date(node.timestamp),\r\n            blksize: 4096,\r\n            blocks: Math.ceil(node.size / 4096),\r\n          };\r\n        },setattr:function(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n        },lookup:function(parent, name) {\r\n          throw new FS.ErrnoError(44);\r\n        },mknod:function (parent, name, mode, dev) {\r\n          throw new FS.ErrnoError(63);\r\n        },rename:function (oldNode, newDir, newName) {\r\n          throw new FS.ErrnoError(63);\r\n        },unlink:function(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },rmdir:function(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },readdir:function(node) {\r\n          throw new FS.ErrnoError(63);\r\n        },symlink:function(parent, newName, oldPath) {\r\n          throw new FS.ErrnoError(63);\r\n        }},stream_ops:{read:function (stream, buffer, offset, length, position) {\r\n          //out('LZ4 read ' + [offset, length, position]);\r\n          length = Math.min(length, stream.node.size - position);\r\n          if (length <= 0) return 0;\r\n          var contents = stream.node.contents;\r\n          var compressedData = contents.compressedData;\r\n          var written = 0;\r\n          while (written < length) {\r\n            var start = contents.start + position + written; // start index in uncompressed data\r\n            var desired = length - written;\r\n            //out('current read: ' + ['start', start, 'desired', desired]);\r\n            var chunkIndex = Math.floor(start / LZ4.CHUNK_SIZE);\r\n            var compressedStart = compressedData['offsets'][chunkIndex];\r\n            var compressedSize = compressedData['sizes'][chunkIndex];\r\n            var currChunk;\r\n            if (compressedData['successes'][chunkIndex]) {\r\n              var found = compressedData['cachedIndexes'].indexOf(chunkIndex);\r\n              if (found >= 0) {\r\n                currChunk = compressedData['cachedChunks'][found];\r\n              } else {\r\n                // decompress the chunk\r\n                compressedData['cachedIndexes'].pop();\r\n                compressedData['cachedIndexes'].unshift(chunkIndex);\r\n                currChunk = compressedData['cachedChunks'].pop();\r\n                compressedData['cachedChunks'].unshift(currChunk);\r\n                if (compressedData['debug']) {\r\n                  out('decompressing chunk ' + chunkIndex);\r\n                  Module['decompressedChunks'] = (Module['decompressedChunks'] || 0) + 1;\r\n                }\r\n                var compressed = compressedData['data'].subarray(compressedStart, compressedStart + compressedSize);\r\n                //var t = Date.now();\r\n                var originalSize = LZ4.codec.uncompress(compressed, currChunk);\r\n                //out('decompress time: ' + (Date.now() - t));\r\n                if (chunkIndex < compressedData['successes'].length-1) assert(originalSize === LZ4.CHUNK_SIZE); // all but the last chunk must be full-size\r\n              }\r\n            } else {\r\n              // uncompressed\r\n              currChunk = compressedData['data'].subarray(compressedStart, compressedStart + LZ4.CHUNK_SIZE);\r\n            }\r\n            var startInChunk = start % LZ4.CHUNK_SIZE;\r\n            var endInChunk = Math.min(startInChunk + desired, LZ4.CHUNK_SIZE);\r\n            buffer.set(currChunk.subarray(startInChunk, endInChunk), offset + written);\r\n            var currWritten = endInChunk - startInChunk;\r\n            written += currWritten;\r\n          }\r\n          return written;\r\n        },write:function (stream, buffer, offset, length, position) {\r\n          throw new FS.ErrnoError(29);\r\n        },llseek:function (stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.size;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        }}};\r\n  var FS = {root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path, opts = {}) => {\r\n        path = PATH_FS.resolve(path);\r\n  \r\n        if (!path) return { path: '', node: null };\r\n  \r\n        var defaults = {\r\n          follow_mount: true,\r\n          recurse_count: 0\r\n        };\r\n        opts = Object.assign(defaults, opts)\r\n  \r\n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\r\n          throw new FS.ErrnoError(32);\r\n        }\r\n  \r\n        // split the absolute path\r\n        var parts = path.split('/').filter((p) => !!p);\r\n  \r\n        // start at the root\r\n        var current = FS.root;\r\n        var current_path = '/';\r\n  \r\n        for (var i = 0; i < parts.length; i++) {\r\n          var islast = (i === parts.length-1);\r\n          if (islast && opts.parent) {\r\n            // stop resolving\r\n            break;\r\n          }\r\n  \r\n          current = FS.lookupNode(current, parts[i]);\r\n          current_path = PATH.join2(current_path, parts[i]);\r\n  \r\n          // jump to the mount's root node if this is a mountpoint\r\n          if (FS.isMountpoint(current)) {\r\n            if (!islast || (islast && opts.follow_mount)) {\r\n              current = current.mounted.root;\r\n            }\r\n          }\r\n  \r\n          // by default, lookupPath will not follow a symlink if it is the final path component.\r\n          // setting opts.follow = true will override this behavior.\r\n          if (!islast || opts.follow) {\r\n            var count = 0;\r\n            while (FS.isLink(current.mode)) {\r\n              var link = FS.readlink(current_path);\r\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\r\n  \r\n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\r\n              current = lookup.node;\r\n  \r\n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\r\n                throw new FS.ErrnoError(32);\r\n              }\r\n            }\r\n          }\r\n        }\r\n  \r\n        return { path: current_path, node: current };\r\n      },getPath:(node) => {\r\n        var path;\r\n        while (true) {\r\n          if (FS.isRoot(node)) {\r\n            var mount = node.mount.mountpoint;\r\n            if (!path) return mount;\r\n            return mount[mount.length-1] !== '/' ? `${mount}/${path}` : mount + path;\r\n          }\r\n          path = path ? `${node.name}/${path}` : node.name;\r\n          node = node.parent;\r\n        }\r\n      },hashName:(parentid, name) => {\r\n        var hash = 0;\r\n  \r\n        for (var i = 0; i < name.length; i++) {\r\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\r\n        }\r\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\r\n      },hashAddNode:(node) => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        node.name_next = FS.nameTable[hash];\r\n        FS.nameTable[hash] = node;\r\n      },hashRemoveNode:(node) => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        if (FS.nameTable[hash] === node) {\r\n          FS.nameTable[hash] = node.name_next;\r\n        } else {\r\n          var current = FS.nameTable[hash];\r\n          while (current) {\r\n            if (current.name_next === node) {\r\n              current.name_next = node.name_next;\r\n              break;\r\n            }\r\n            current = current.name_next;\r\n          }\r\n        }\r\n      },lookupNode:(parent, name) => {\r\n        var errCode = FS.mayLookup(parent);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode, parent);\r\n        }\r\n        var hash = FS.hashName(parent.id, name);\r\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n          var nodeName = node.name;\r\n          if (node.parent.id === parent.id && nodeName === name) {\r\n            return node;\r\n          }\r\n        }\r\n        // if we failed to find it in the cache, call into the VFS\r\n        return FS.lookup(parent, name);\r\n      },createNode:(parent, name, mode, rdev) => {\r\n        var node = new FS.FSNode(parent, name, mode, rdev);\r\n  \r\n        FS.hashAddNode(node);\r\n  \r\n        return node;\r\n      },destroyNode:(node) => {\r\n        FS.hashRemoveNode(node);\r\n      },isRoot:(node) => {\r\n        return node === node.parent;\r\n      },isMountpoint:(node) => {\r\n        return !!node.mounted;\r\n      },isFile:(mode) => {\r\n        return (mode & 61440) === 32768;\r\n      },isDir:(mode) => {\r\n        return (mode & 61440) === 16384;\r\n      },isLink:(mode) => {\r\n        return (mode & 61440) === 40960;\r\n      },isChrdev:(mode) => {\r\n        return (mode & 61440) === 8192;\r\n      },isBlkdev:(mode) => {\r\n        return (mode & 61440) === 24576;\r\n      },isFIFO:(mode) => {\r\n        return (mode & 61440) === 4096;\r\n      },isSocket:(mode) => {\r\n        return (mode & 49152) === 49152;\r\n      },flagsToPermissionString:(flag) => {\r\n        var perms = ['r', 'w', 'rw'][flag & 3];\r\n        if ((flag & 512)) {\r\n          perms += 'w';\r\n        }\r\n        return perms;\r\n      },nodePermissions:(node, perms) => {\r\n        if (FS.ignorePermissions) {\r\n          return 0;\r\n        }\r\n        // return 0 if any user, group or owner bits are set.\r\n        if (perms.includes('r') && !(node.mode & 292)) {\r\n          return 2;\r\n        } else if (perms.includes('w') && !(node.mode & 146)) {\r\n          return 2;\r\n        } else if (perms.includes('x') && !(node.mode & 73)) {\r\n          return 2;\r\n        }\r\n        return 0;\r\n      },mayLookup:(dir) => {\r\n        var errCode = FS.nodePermissions(dir, 'x');\r\n        if (errCode) return errCode;\r\n        if (!dir.node_ops.lookup) return 2;\r\n        return 0;\r\n      },mayCreate:(dir, name) => {\r\n        try {\r\n          var node = FS.lookupNode(dir, name);\r\n          return 20;\r\n        } catch (e) {\r\n        }\r\n        return FS.nodePermissions(dir, 'wx');\r\n      },mayDelete:(dir, name, isdir) => {\r\n        var node;\r\n        try {\r\n          node = FS.lookupNode(dir, name);\r\n        } catch (e) {\r\n          return e.errno;\r\n        }\r\n        var errCode = FS.nodePermissions(dir, 'wx');\r\n        if (errCode) {\r\n          return errCode;\r\n        }\r\n        if (isdir) {\r\n          if (!FS.isDir(node.mode)) {\r\n            return 54;\r\n          }\r\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n            return 10;\r\n          }\r\n        } else {\r\n          if (FS.isDir(node.mode)) {\r\n            return 31;\r\n          }\r\n        }\r\n        return 0;\r\n      },mayOpen:(node, flags) => {\r\n        if (!node) {\r\n          return 44;\r\n        }\r\n        if (FS.isLink(node.mode)) {\r\n          return 32;\r\n        } else if (FS.isDir(node.mode)) {\r\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\r\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\r\n            return 31;\r\n          }\r\n        }\r\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\r\n      },MAX_OPEN_FDS:4096,nextfd:() => {\r\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\r\n          if (!FS.streams[fd]) {\r\n            return fd;\r\n          }\r\n        }\r\n        throw new FS.ErrnoError(33);\r\n      },getStream:(fd) => FS.streams[fd],createStream:(stream, fd = -1) => {\r\n        if (!FS.FSStream) {\r\n          FS.FSStream = /** @constructor */ function() {\r\n            this.shared = { };\r\n          };\r\n          FS.FSStream.prototype = {};\r\n          Object.defineProperties(FS.FSStream.prototype, {\r\n            object: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.node; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.node = val; }\r\n            },\r\n            isRead: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 2097155) !== 1; }\r\n            },\r\n            isWrite: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 2097155) !== 0; }\r\n            },\r\n            isAppend: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 1024); }\r\n            },\r\n            flags: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.shared.flags; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.shared.flags = val; },\r\n            },\r\n            position : {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.shared.position; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.shared.position = val; },\r\n            },\r\n          });\r\n        }\r\n        // clone it, so we can return an instance of FSStream\r\n        stream = Object.assign(new FS.FSStream(), stream);\r\n        if (fd == -1) {\r\n          fd = FS.nextfd();\r\n        }\r\n        stream.fd = fd;\r\n        FS.streams[fd] = stream;\r\n        return stream;\r\n      },closeStream:(fd) => {\r\n        FS.streams[fd] = null;\r\n      },chrdev_stream_ops:{open:(stream) => {\r\n          var device = FS.getDevice(stream.node.rdev);\r\n          // override node's stream ops with the device's\r\n          stream.stream_ops = device.stream_ops;\r\n          // forward the open call\r\n          if (stream.stream_ops.open) {\r\n            stream.stream_ops.open(stream);\r\n          }\r\n        },llseek:() => {\r\n          throw new FS.ErrnoError(70);\r\n        }},major:(dev) => ((dev) >> 8),minor:(dev) => ((dev) & 0xff),makedev:(ma, mi) => ((ma) << 8 | (mi)),registerDevice:(dev, ops) => {\r\n        FS.devices[dev] = { stream_ops: ops };\r\n      },getDevice:(dev) => FS.devices[dev],getMounts:(mount) => {\r\n        var mounts = [];\r\n        var check = [mount];\r\n  \r\n        while (check.length) {\r\n          var m = check.pop();\r\n  \r\n          mounts.push(m);\r\n  \r\n          check.push.apply(check, m.mounts);\r\n        }\r\n  \r\n        return mounts;\r\n      },syncfs:(populate, callback) => {\r\n        if (typeof populate == 'function') {\r\n          callback = populate;\r\n          populate = false;\r\n        }\r\n  \r\n        FS.syncFSRequests++;\r\n  \r\n        if (FS.syncFSRequests > 1) {\r\n          err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);\r\n        }\r\n  \r\n        var mounts = FS.getMounts(FS.root.mount);\r\n        var completed = 0;\r\n  \r\n        function doCallback(errCode) {\r\n          FS.syncFSRequests--;\r\n          return callback(errCode);\r\n        }\r\n  \r\n        function done(errCode) {\r\n          if (errCode) {\r\n            if (!done.errored) {\r\n              done.errored = true;\r\n              return doCallback(errCode);\r\n            }\r\n            return;\r\n          }\r\n          if (++completed >= mounts.length) {\r\n            doCallback(null);\r\n          }\r\n        };\r\n  \r\n        // sync all mounts\r\n        mounts.forEach((mount) => {\r\n          if (!mount.type.syncfs) {\r\n            return done(null);\r\n          }\r\n          mount.type.syncfs(mount, populate, done);\r\n        });\r\n      },mount:(type, opts, mountpoint) => {\r\n        var root = mountpoint === '/';\r\n        var pseudo = !mountpoint;\r\n        var node;\r\n  \r\n        if (root && FS.root) {\r\n          throw new FS.ErrnoError(10);\r\n        } else if (!root && !pseudo) {\r\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n          mountpoint = lookup.path;  // use the absolute path\r\n          node = lookup.node;\r\n  \r\n          if (FS.isMountpoint(node)) {\r\n            throw new FS.ErrnoError(10);\r\n          }\r\n  \r\n          if (!FS.isDir(node.mode)) {\r\n            throw new FS.ErrnoError(54);\r\n          }\r\n        }\r\n  \r\n        var mount = {\r\n          type: type,\r\n          opts: opts,\r\n          mountpoint: mountpoint,\r\n          mounts: []\r\n        };\r\n  \r\n        // create a root node for the fs\r\n        var mountRoot = type.mount(mount);\r\n        mountRoot.mount = mount;\r\n        mount.root = mountRoot;\r\n  \r\n        if (root) {\r\n          FS.root = mountRoot;\r\n        } else if (node) {\r\n          // set as a mountpoint\r\n          node.mounted = mount;\r\n  \r\n          // add the new mount to the current mount's children\r\n          if (node.mount) {\r\n            node.mount.mounts.push(mount);\r\n          }\r\n        }\r\n  \r\n        return mountRoot;\r\n      },unmount:(mountpoint) => {\r\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n        if (!FS.isMountpoint(lookup.node)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n  \r\n        // destroy the nodes for this mount, and all its child mounts\r\n        var node = lookup.node;\r\n        var mount = node.mounted;\r\n        var mounts = FS.getMounts(mount);\r\n  \r\n        Object.keys(FS.nameTable).forEach((hash) => {\r\n          var current = FS.nameTable[hash];\r\n  \r\n          while (current) {\r\n            var next = current.name_next;\r\n  \r\n            if (mounts.includes(current.mount)) {\r\n              FS.destroyNode(current);\r\n            }\r\n  \r\n            current = next;\r\n          }\r\n        });\r\n  \r\n        // no longer a mountpoint\r\n        node.mounted = null;\r\n  \r\n        // remove this mount from the child mounts\r\n        var idx = node.mount.mounts.indexOf(mount);\r\n        node.mount.mounts.splice(idx, 1);\r\n      },lookup:(parent, name) => {\r\n        return parent.node_ops.lookup(parent, name);\r\n      },mknod:(path, mode, dev) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        if (!name || name === '.' || name === '..') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.mayCreate(parent, name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.mknod) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.mknod(parent, name, mode, dev);\r\n      },create:(path, mode) => {\r\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\r\n        mode &= 4095;\r\n        mode |= 32768;\r\n        return FS.mknod(path, mode, 0);\r\n      },mkdir:(path, mode) => {\r\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\r\n        mode &= 511 | 512;\r\n        mode |= 16384;\r\n        return FS.mknod(path, mode, 0);\r\n      },mkdirTree:(path, mode) => {\r\n        var dirs = path.split('/');\r\n        var d = '';\r\n        for (var i = 0; i < dirs.length; ++i) {\r\n          if (!dirs[i]) continue;\r\n          d += '/' + dirs[i];\r\n          try {\r\n            FS.mkdir(d, mode);\r\n          } catch(e) {\r\n            if (e.errno != 20) throw e;\r\n          }\r\n        }\r\n      },mkdev:(path, mode, dev) => {\r\n        if (typeof dev == 'undefined') {\r\n          dev = mode;\r\n          mode = 438 /* 0666 */;\r\n        }\r\n        mode |= 8192;\r\n        return FS.mknod(path, mode, dev);\r\n      },symlink:(oldpath, newpath) => {\r\n        if (!PATH_FS.resolve(oldpath)) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var lookup = FS.lookupPath(newpath, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var newname = PATH.basename(newpath);\r\n        var errCode = FS.mayCreate(parent, newname);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.symlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.symlink(parent, newname, oldpath);\r\n      },rename:(old_path, new_path) => {\r\n        var old_dirname = PATH.dirname(old_path);\r\n        var new_dirname = PATH.dirname(new_path);\r\n        var old_name = PATH.basename(old_path);\r\n        var new_name = PATH.basename(new_path);\r\n        // parents must exist\r\n        var lookup, old_dir, new_dir;\r\n  \r\n        // let the errors from non existant directories percolate up\r\n        lookup = FS.lookupPath(old_path, { parent: true });\r\n        old_dir = lookup.node;\r\n        lookup = FS.lookupPath(new_path, { parent: true });\r\n        new_dir = lookup.node;\r\n  \r\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\r\n        // need to be part of the same mount\r\n        if (old_dir.mount !== new_dir.mount) {\r\n          throw new FS.ErrnoError(75);\r\n        }\r\n        // source must exist\r\n        var old_node = FS.lookupNode(old_dir, old_name);\r\n        // old path should not be an ancestor of the new path\r\n        var relative = PATH_FS.relative(old_path, new_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        // new path should not be an ancestor of the old path\r\n        relative = PATH_FS.relative(new_path, old_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(55);\r\n        }\r\n        // see if the new path already exists\r\n        var new_node;\r\n        try {\r\n          new_node = FS.lookupNode(new_dir, new_name);\r\n        } catch (e) {\r\n          // not fatal\r\n        }\r\n        // early out if nothing needs to change\r\n        if (old_node === new_node) {\r\n          return;\r\n        }\r\n        // we'll need to delete the old entry\r\n        var isdir = FS.isDir(old_node.mode);\r\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        // need delete permissions if we'll be overwriting.\r\n        // need create permissions if new doesn't already exist.\r\n        errCode = new_node ?\r\n          FS.mayDelete(new_dir, new_name, isdir) :\r\n          FS.mayCreate(new_dir, new_name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!old_dir.node_ops.rename) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        // if we are going to change the parent, check write permissions\r\n        if (new_dir !== old_dir) {\r\n          errCode = FS.nodePermissions(old_dir, 'w');\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // remove the node from the lookup hash\r\n        FS.hashRemoveNode(old_node);\r\n        // do the underlying fs rename\r\n        try {\r\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          // add the node back to the hash (in case node_ops.rename\r\n          // changed its name)\r\n          FS.hashAddNode(old_node);\r\n        }\r\n      },rmdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, true);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.rmdir) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.rmdir(parent, name);\r\n        FS.destroyNode(node);\r\n      },readdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        if (!node.node_ops.readdir) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        return node.node_ops.readdir(node);\r\n      },unlink:(path) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, false);\r\n        if (errCode) {\r\n          // According to POSIX, we should map EISDIR to EPERM, but\r\n          // we instead do what Linux does (and we must, as we use\r\n          // the musl linux libc).\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.unlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.unlink(parent, name);\r\n        FS.destroyNode(node);\r\n      },readlink:(path) => {\r\n        var lookup = FS.lookupPath(path);\r\n        var link = lookup.node;\r\n        if (!link) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!link.node_ops.readlink) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\r\n      },stat:(path, dontFollow) => {\r\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n        var node = lookup.node;\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!node.node_ops.getattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return node.node_ops.getattr(node);\r\n      },lstat:(path) => {\r\n        return FS.stat(path, true);\r\n      },chmod:(path, mode, dontFollow) => {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          mode: (mode & 4095) | (node.mode & ~4095),\r\n          timestamp: Date.now()\r\n        });\r\n      },lchmod:(path, mode) => {\r\n        FS.chmod(path, mode, true);\r\n      },fchmod:(fd, mode) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        FS.chmod(stream.node, mode);\r\n      },chown:(path, uid, gid, dontFollow) => {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Date.now()\r\n          // we ignore the uid / gid for now\r\n        });\r\n      },lchown:(path, uid, gid) => {\r\n        FS.chown(path, uid, gid, true);\r\n      },fchown:(fd, uid, gid) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        FS.chown(stream.node, uid, gid);\r\n      },truncate:(path, len) => {\r\n        if (len < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: true });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!FS.isFile(node.mode)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.nodePermissions(node, 'w');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          size: len,\r\n          timestamp: Date.now()\r\n        });\r\n      },ftruncate:(fd, len) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        FS.truncate(stream.node, len);\r\n      },utime:(path, atime, mtime) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Math.max(atime, mtime)\r\n        });\r\n      },open:(path, flags, mode) => {\r\n        if (path === \"\") {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;\r\n        mode = typeof mode == 'undefined' ? 438 /* 0666 */ : mode;\r\n        if ((flags & 64)) {\r\n          mode = (mode & 4095) | 32768;\r\n        } else {\r\n          mode = 0;\r\n        }\r\n        var node;\r\n        if (typeof path == 'object') {\r\n          node = path;\r\n        } else {\r\n          path = PATH.normalize(path);\r\n          try {\r\n            var lookup = FS.lookupPath(path, {\r\n              follow: !(flags & 131072)\r\n            });\r\n            node = lookup.node;\r\n          } catch (e) {\r\n            // ignore\r\n          }\r\n        }\r\n        // perhaps we need to create the node\r\n        var created = false;\r\n        if ((flags & 64)) {\r\n          if (node) {\r\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\r\n            if ((flags & 128)) {\r\n              throw new FS.ErrnoError(20);\r\n            }\r\n          } else {\r\n            // node doesn't exist, try to create it\r\n            node = FS.mknod(path, mode, 0);\r\n            created = true;\r\n          }\r\n        }\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        // can't truncate a device\r\n        if (FS.isChrdev(node.mode)) {\r\n          flags &= ~512;\r\n        }\r\n        // if asked only for a directory, then this must be one\r\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        // check permissions, if this is not a file we just created now (it is ok to\r\n        // create and write to a file with read-only permissions; it is read-only\r\n        // for later use)\r\n        if (!created) {\r\n          var errCode = FS.mayOpen(node, flags);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // do truncation if necessary\r\n        if ((flags & 512) && !created) {\r\n          FS.truncate(node, 0);\r\n        }\r\n        // we've already handled these, don't pass down to the underlying vfs\r\n        flags &= ~(128 | 512 | 131072);\r\n  \r\n        // register the stream with the filesystem\r\n        var stream = FS.createStream({\r\n          node: node,\r\n          path: FS.getPath(node),  // we want the absolute path to the node\r\n          flags: flags,\r\n          seekable: true,\r\n          position: 0,\r\n          stream_ops: node.stream_ops,\r\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\r\n          ungotten: [],\r\n          error: false\r\n        });\r\n        // call the new stream's open function\r\n        if (stream.stream_ops.open) {\r\n          stream.stream_ops.open(stream);\r\n        }\r\n        if (Module['logReadFiles'] && !(flags & 1)) {\r\n          if (!FS.readFiles) FS.readFiles = {};\r\n          if (!(path in FS.readFiles)) {\r\n            FS.readFiles[path] = 1;\r\n          }\r\n        }\r\n        return stream;\r\n      },close:(stream) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (stream.getdents) stream.getdents = null; // free readdir state\r\n        try {\r\n          if (stream.stream_ops.close) {\r\n            stream.stream_ops.close(stream);\r\n          }\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          FS.closeStream(stream.fd);\r\n        }\r\n        stream.fd = null;\r\n      },isClosed:(stream) => {\r\n        return stream.fd === null;\r\n      },llseek:(stream, offset, whence) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!stream.seekable || !stream.stream_ops.llseek) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        if (whence != 0 && whence != 1 && whence != 2) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n        stream.ungotten = [];\r\n        return stream.position;\r\n      },read:(stream, buffer, offset, length, position) => {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.read) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n        if (!seeking) stream.position += bytesRead;\r\n        return bytesRead;\r\n      },write:(stream, buffer, offset, length, position, canOwn) => {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.write) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (stream.seekable && stream.flags & 1024) {\r\n          // seek to the end before writing in append mode\r\n          FS.llseek(stream, 0, 2);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n        if (!seeking) stream.position += bytesWritten;\r\n        return bytesWritten;\r\n      },allocate:(stream, offset, length) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (offset < 0 || length <= 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (!stream.stream_ops.allocate) {\r\n          throw new FS.ErrnoError(138);\r\n        }\r\n        stream.stream_ops.allocate(stream, offset, length);\r\n      },mmap:(stream, length, position, prot, flags) => {\r\n        // User requests writing to file (prot & PROT_WRITE != 0).\r\n        // Checking if we have permissions to write to the file unless\r\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\r\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\r\n        // as all modifications will be visible only in the memory of\r\n        // the current process.\r\n        if ((prot & 2) !== 0\r\n            && (flags & 2) === 0\r\n            && (stream.flags & 2097155) !== 2) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if (!stream.stream_ops.mmap) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\r\n      },msync:(stream, buffer, offset, length, mmapFlags) => {\r\n        if (!stream.stream_ops.msync) {\r\n          return 0;\r\n        }\r\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\r\n      },munmap:(stream) => 0,ioctl:(stream, cmd, arg) => {\r\n        if (!stream.stream_ops.ioctl) {\r\n          throw new FS.ErrnoError(59);\r\n        }\r\n        return stream.stream_ops.ioctl(stream, cmd, arg);\r\n      },readFile:(path, opts = {}) => {\r\n        opts.flags = opts.flags || 0;\r\n        opts.encoding = opts.encoding || 'binary';\r\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\r\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\r\n        }\r\n        var ret;\r\n        var stream = FS.open(path, opts.flags);\r\n        var stat = FS.stat(path);\r\n        var length = stat.size;\r\n        var buf = new Uint8Array(length);\r\n        FS.read(stream, buf, 0, length, 0);\r\n        if (opts.encoding === 'utf8') {\r\n          ret = UTF8ArrayToString(buf, 0);\r\n        } else if (opts.encoding === 'binary') {\r\n          ret = buf;\r\n        }\r\n        FS.close(stream);\r\n        return ret;\r\n      },writeFile:(path, data, opts = {}) => {\r\n        opts.flags = opts.flags || 577;\r\n        var stream = FS.open(path, opts.flags, opts.mode);\r\n        if (typeof data == 'string') {\r\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\r\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\r\n        } else if (ArrayBuffer.isView(data)) {\r\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\r\n        } else {\r\n          throw new Error('Unsupported data type');\r\n        }\r\n        FS.close(stream);\r\n      },cwd:() => FS.currentPath,chdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        if (lookup.node === null) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!FS.isDir(lookup.node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        var errCode = FS.nodePermissions(lookup.node, 'x');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        FS.currentPath = lookup.path;\r\n      },createDefaultDirectories:() => {\r\n        FS.mkdir('/tmp');\r\n        FS.mkdir('/home');\r\n        FS.mkdir('/home/web_user');\r\n      },createDefaultDevices:() => {\r\n        // create /dev\r\n        FS.mkdir('/dev');\r\n        // setup /dev/null\r\n        FS.registerDevice(FS.makedev(1, 3), {\r\n          read: () => 0,\r\n          write: (stream, buffer, offset, length, pos) => length,\r\n        });\r\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\r\n        // setup /dev/tty and /dev/tty1\r\n        // stderr needs to print output using err() rather than out()\r\n        // so we register a second tty just for it.\r\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\r\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\r\n        // setup /dev/[u]random\r\n        // use a buffer to avoid overhead of individual crypto calls per byte\r\n        var randomBuffer = new Uint8Array(1024), randomLeft = 0;\r\n        var randomByte = () => {\r\n          if (randomLeft === 0) {\r\n            randomLeft = randomFill(randomBuffer).byteLength;\r\n          }\r\n          return randomBuffer[--randomLeft];\r\n        };\r\n        FS.createDevice('/dev', 'random', randomByte);\r\n        FS.createDevice('/dev', 'urandom', randomByte);\r\n        // we're not going to emulate the actual shm device,\r\n        // just create the tmp dirs that reside in it commonly\r\n        FS.mkdir('/dev/shm');\r\n        FS.mkdir('/dev/shm/tmp');\r\n      },createSpecialDirectories:() => {\r\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\r\n        // name of the stream for fd 6 (see test_unistd_ttyname)\r\n        FS.mkdir('/proc');\r\n        var proc_self = FS.mkdir('/proc/self');\r\n        FS.mkdir('/proc/self/fd');\r\n        FS.mount({\r\n          mount: () => {\r\n            var node = FS.createNode(proc_self, 'fd', 16384 | 511 /* 0777 */, 73);\r\n            node.node_ops = {\r\n              lookup: (parent, name) => {\r\n                var fd = +name;\r\n                var stream = FS.getStream(fd);\r\n                if (!stream) throw new FS.ErrnoError(8);\r\n                var ret = {\r\n                  parent: null,\r\n                  mount: { mountpoint: 'fake' },\r\n                  node_ops: { readlink: () => stream.path },\r\n                };\r\n                ret.parent = ret; // make it look like a simple root node\r\n                return ret;\r\n              }\r\n            };\r\n            return node;\r\n          }\r\n        }, {}, '/proc/self/fd');\r\n      },createStandardStreams:() => {\r\n        // TODO deprecate the old functionality of a single\r\n        // input / output callback and that utilizes FS.createDevice\r\n        // and instead require a unique set of stream ops\r\n  \r\n        // by default, we symlink the standard streams to the\r\n        // default tty devices. however, if the standard streams\r\n        // have been overwritten we create a unique device for\r\n        // them instead.\r\n        if (Module['stdin']) {\r\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdin');\r\n        }\r\n        if (Module['stdout']) {\r\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdout');\r\n        }\r\n        if (Module['stderr']) {\r\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\r\n        } else {\r\n          FS.symlink('/dev/tty1', '/dev/stderr');\r\n        }\r\n  \r\n        // open default streams for the stdin, stdout and stderr devices\r\n        var stdin = FS.open('/dev/stdin', 0);\r\n        var stdout = FS.open('/dev/stdout', 1);\r\n        var stderr = FS.open('/dev/stderr', 1);\r\n      },ensureErrnoError:() => {\r\n        if (FS.ErrnoError) return;\r\n        FS.ErrnoError = /** @this{Object} */ function ErrnoError(errno, node) {\r\n          // We set the `name` property to be able to identify `FS.ErrnoError`\r\n          // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\r\n          // - when using PROXYFS, an error can come from an underlying FS\r\n          // as different FS objects have their own FS.ErrnoError each,\r\n          // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\r\n          // we'll use the reliable test `err.name == \"ErrnoError\"` instead\r\n          this.name = 'ErrnoError';\r\n          this.node = node;\r\n          this.setErrno = /** @this{Object} */ function(errno) {\r\n            this.errno = errno;\r\n          };\r\n          this.setErrno(errno);\r\n          this.message = 'FS error';\r\n  \r\n        };\r\n        FS.ErrnoError.prototype = new Error();\r\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\r\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\r\n        [44].forEach((code) => {\r\n          FS.genericErrors[code] = new FS.ErrnoError(code);\r\n          FS.genericErrors[code].stack = '<generic error, no stack>';\r\n        });\r\n      },staticInit:() => {\r\n        FS.ensureErrnoError();\r\n  \r\n        FS.nameTable = new Array(4096);\r\n  \r\n        FS.mount(MEMFS, {}, '/');\r\n  \r\n        FS.createDefaultDirectories();\r\n        FS.createDefaultDevices();\r\n        FS.createSpecialDirectories();\r\n  \r\n        FS.filesystems = {\r\n          'MEMFS': MEMFS,\r\n          'IDBFS': IDBFS,\r\n        };\r\n      },init:(input, output, error) => {\r\n        FS.init.initialized = true;\r\n  \r\n        FS.ensureErrnoError();\r\n  \r\n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\r\n        Module['stdin'] = input || Module['stdin'];\r\n        Module['stdout'] = output || Module['stdout'];\r\n        Module['stderr'] = error || Module['stderr'];\r\n  \r\n        FS.createStandardStreams();\r\n      },quit:() => {\r\n        FS.init.initialized = false;\r\n        // force-flush all streams, so we get musl std streams printed out\r\n        // close all of our streams\r\n        for (var i = 0; i < FS.streams.length; i++) {\r\n          var stream = FS.streams[i];\r\n          if (!stream) {\r\n            continue;\r\n          }\r\n          FS.close(stream);\r\n        }\r\n      },findObject:(path, dontResolveLastLink) => {\r\n        var ret = FS.analyzePath(path, dontResolveLastLink);\r\n        if (!ret.exists) {\r\n          return null;\r\n        }\r\n        return ret.object;\r\n      },analyzePath:(path, dontResolveLastLink) => {\r\n        // operate from within the context of the symlink's target\r\n        try {\r\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          path = lookup.path;\r\n        } catch (e) {\r\n        }\r\n        var ret = {\r\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\r\n          parentExists: false, parentPath: null, parentObject: null\r\n        };\r\n        try {\r\n          var lookup = FS.lookupPath(path, { parent: true });\r\n          ret.parentExists = true;\r\n          ret.parentPath = lookup.path;\r\n          ret.parentObject = lookup.node;\r\n          ret.name = PATH.basename(path);\r\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          ret.exists = true;\r\n          ret.path = lookup.path;\r\n          ret.object = lookup.node;\r\n          ret.name = lookup.node.name;\r\n          ret.isRoot = lookup.path === '/';\r\n        } catch (e) {\r\n          ret.error = e.errno;\r\n        };\r\n        return ret;\r\n      },createPath:(parent, path, canRead, canWrite) => {\r\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n        var parts = path.split('/').reverse();\r\n        while (parts.length) {\r\n          var part = parts.pop();\r\n          if (!part) continue;\r\n          var current = PATH.join2(parent, part);\r\n          try {\r\n            FS.mkdir(current);\r\n          } catch (e) {\r\n            // ignore EEXIST\r\n          }\r\n          parent = current;\r\n        }\r\n        return current;\r\n      },createFile:(parent, name, properties, canRead, canWrite) => {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS_getMode(canRead, canWrite);\r\n        return FS.create(path, mode);\r\n      },createDataFile:(parent, name, data, canRead, canWrite, canOwn) => {\r\n        var path = name;\r\n        if (parent) {\r\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n          path = name ? PATH.join2(parent, name) : parent;\r\n        }\r\n        var mode = FS_getMode(canRead, canWrite);\r\n        var node = FS.create(path, mode);\r\n        if (data) {\r\n          if (typeof data == 'string') {\r\n            var arr = new Array(data.length);\r\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n            data = arr;\r\n          }\r\n          // make sure we can write to the file\r\n          FS.chmod(node, mode | 146);\r\n          var stream = FS.open(node, 577);\r\n          FS.write(stream, data, 0, data.length, 0, canOwn);\r\n          FS.close(stream);\r\n          FS.chmod(node, mode);\r\n        }\r\n        return node;\r\n      },createDevice:(parent, name, input, output) => {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS_getMode(!!input, !!output);\r\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\r\n        var dev = FS.makedev(FS.createDevice.major++, 0);\r\n        // Create a fake device that a set of stream ops to emulate\r\n        // the old behavior.\r\n        FS.registerDevice(dev, {\r\n          open: (stream) => {\r\n            stream.seekable = false;\r\n          },\r\n          close: (stream) => {\r\n            // flush any pending line data\r\n            if (output && output.buffer && output.buffer.length) {\r\n              output(10);\r\n            }\r\n          },\r\n          read: (stream, buffer, offset, length, pos /* ignored */) => {\r\n            var bytesRead = 0;\r\n            for (var i = 0; i < length; i++) {\r\n              var result;\r\n              try {\r\n                result = input();\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n              if (result === undefined && bytesRead === 0) {\r\n                throw new FS.ErrnoError(6);\r\n              }\r\n              if (result === null || result === undefined) break;\r\n              bytesRead++;\r\n              buffer[offset+i] = result;\r\n            }\r\n            if (bytesRead) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return bytesRead;\r\n          },\r\n          write: (stream, buffer, offset, length, pos) => {\r\n            for (var i = 0; i < length; i++) {\r\n              try {\r\n                output(buffer[offset+i]);\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n            }\r\n            if (length) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return i;\r\n          }\r\n        });\r\n        return FS.mkdev(path, mode, dev);\r\n      },forceLoadFile:(obj) => {\r\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\r\n        } else if (read_) {\r\n          // Command-line.\r\n          try {\r\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\r\n            //          read() will try to parse UTF8.\r\n            obj.contents = intArrayFromString(read_(obj.url), true);\r\n            obj.usedBytes = obj.contents.length;\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n        } else {\r\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\r\n        }\r\n      },createLazyFile:(parent, name, url, canRead, canWrite) => {\r\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\r\n        /** @constructor */\r\n        function LazyUint8Array() {\r\n          this.lengthKnown = false;\r\n          this.chunks = []; // Loaded chunks. Index is the chunk number\r\n        }\r\n        LazyUint8Array.prototype.get = /** @this{Object} */ function LazyUint8Array_get(idx) {\r\n          if (idx > this.length-1 || idx < 0) {\r\n            return undefined;\r\n          }\r\n          var chunkOffset = idx % this.chunkSize;\r\n          var chunkNum = (idx / this.chunkSize)|0;\r\n          return this.getter(chunkNum)[chunkOffset];\r\n        };\r\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\r\n          this.getter = getter;\r\n        };\r\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\r\n          // Find length\r\n          var xhr = new XMLHttpRequest();\r\n          xhr.open('HEAD', url, false);\r\n          xhr.send(null);\r\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n          var header;\r\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n  \r\n          var chunkSize = 1024*1024; // Chunk size in bytes\r\n  \r\n          if (!hasByteServing) chunkSize = datalength;\r\n  \r\n          // Function to get a range from the remote URL.\r\n          var doXHR = (from, to) => {\r\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n  \r\n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url, false);\r\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n  \r\n            // Some hints to the browser that we want binary data.\r\n            xhr.responseType = 'arraybuffer';\r\n            if (xhr.overrideMimeType) {\r\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\r\n            }\r\n  \r\n            xhr.send(null);\r\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n            if (xhr.response !== undefined) {\r\n              return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\r\n            }\r\n            return intArrayFromString(xhr.responseText || '', true);\r\n          };\r\n          var lazyArray = this;\r\n          lazyArray.setDataGetter((chunkNum) => {\r\n            var start = chunkNum * chunkSize;\r\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\r\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\r\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\r\n            }\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\r\n            return lazyArray.chunks[chunkNum];\r\n          });\r\n  \r\n          if (usesGzip || !datalength) {\r\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\r\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\r\n            datalength = this.getter(0).length;\r\n            chunkSize = datalength;\r\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\r\n          }\r\n  \r\n          this._length = datalength;\r\n          this._chunkSize = chunkSize;\r\n          this.lengthKnown = true;\r\n        };\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\r\n          var lazyArray = new LazyUint8Array();\r\n          Object.defineProperties(lazyArray, {\r\n            length: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._length;\r\n              }\r\n            },\r\n            chunkSize: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._chunkSize;\r\n              }\r\n            }\r\n          });\r\n  \r\n          var properties = { isDevice: false, contents: lazyArray };\r\n        } else {\r\n          var properties = { isDevice: false, url: url };\r\n        }\r\n  \r\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n        // This is a total hack, but I want to get this lazy file code out of the\r\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\r\n        // be its own thin LAZYFS proxying calls to MEMFS.\r\n        if (properties.contents) {\r\n          node.contents = properties.contents;\r\n        } else if (properties.url) {\r\n          node.contents = null;\r\n          node.url = properties.url;\r\n        }\r\n        // Add a function that defers querying the file size until it is asked the first time.\r\n        Object.defineProperties(node, {\r\n          usedBytes: {\r\n            get: /** @this {FSNode} */ function() { return this.contents.length; }\r\n          }\r\n        });\r\n        // override each stream op with one that tries to force load the lazy file first\r\n        var stream_ops = {};\r\n        var keys = Object.keys(node.stream_ops);\r\n        keys.forEach((key) => {\r\n          var fn = node.stream_ops[key];\r\n          stream_ops[key] = function forceLoadLazyFile() {\r\n            FS.forceLoadFile(node);\r\n            return fn.apply(null, arguments);\r\n          };\r\n        });\r\n        function writeChunks(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= contents.length)\r\n            return 0;\r\n          var size = Math.min(contents.length - position, length);\r\n          if (contents.slice) { // normal array\r\n            for (var i = 0; i < size; i++) {\r\n              buffer[offset + i] = contents[position + i];\r\n            }\r\n          } else {\r\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\r\n              buffer[offset + i] = contents.get(position + i);\r\n            }\r\n          }\r\n          return size;\r\n        }\r\n        // use a custom read function\r\n        stream_ops.read = (stream, buffer, offset, length, position) => {\r\n          FS.forceLoadFile(node);\r\n          return writeChunks(stream, buffer, offset, length, position)\r\n        };\r\n        // use a custom mmap function\r\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\r\n          FS.forceLoadFile(node);\r\n          var ptr = mmapAlloc(length);\r\n          if (!ptr) {\r\n            throw new FS.ErrnoError(48);\r\n          }\r\n          writeChunks(stream, HEAP8, ptr, length, position);\r\n          return { ptr: ptr, allocated: true };\r\n        };\r\n        node.stream_ops = stream_ops;\r\n        return node;\r\n      }};\r\n  \r\n  \r\n  \r\n    /**\r\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\r\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\r\n     *\r\n     * @param {number} ptr\r\n     * @param {number=} maxBytesToRead - An optional length that specifies the\r\n     *   maximum number of bytes to read. You can omit this parameter to scan the\r\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\r\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\r\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\r\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\r\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\r\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\r\n     * @return {string}\r\n     */\r\n  function UTF8ToString(ptr, maxBytesToRead) {\r\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\r\n    }\r\n  var SYSCALLS = {DEFAULT_POLLMASK:5,calculateAt:function(dirfd, path, allowEmpty) {\r\n        if (PATH.isAbs(path)) {\r\n          return path;\r\n        }\r\n        // relative path\r\n        var dir;\r\n        if (dirfd === -100) {\r\n          dir = FS.cwd();\r\n        } else {\r\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\r\n          dir = dirstream.path;\r\n        }\r\n        if (path.length == 0) {\r\n          if (!allowEmpty) {\r\n            throw new FS.ErrnoError(44);;\r\n          }\r\n          return dir;\r\n        }\r\n        return PATH.join2(dir, path);\r\n      },doStat:function(func, path, buf) {\r\n        try {\r\n          var stat = func(path);\r\n        } catch (e) {\r\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\r\n            // an error occurred while trying to look up the path; we should just report ENOTDIR\r\n            return -54;\r\n          }\r\n          throw e;\r\n        }\r\n        HEAP32[((buf)>>2)] = stat.dev;\r\n        HEAP32[(((buf)+(8))>>2)] = stat.ino;\r\n        HEAP32[(((buf)+(12))>>2)] = stat.mode;\r\n        HEAPU32[(((buf)+(16))>>2)] = stat.nlink;\r\n        HEAP32[(((buf)+(20))>>2)] = stat.uid;\r\n        HEAP32[(((buf)+(24))>>2)] = stat.gid;\r\n        HEAP32[(((buf)+(28))>>2)] = stat.rdev;\r\n        (tempI64 = [stat.size>>>0,(tempDouble=stat.size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(40))>>2)] = tempI64[0],HEAP32[(((buf)+(44))>>2)] = tempI64[1]);\r\n        HEAP32[(((buf)+(48))>>2)] = 4096;\r\n        HEAP32[(((buf)+(52))>>2)] = stat.blocks;\r\n        var atime = stat.atime.getTime();\r\n        var mtime = stat.mtime.getTime();\r\n        var ctime = stat.ctime.getTime();\r\n        (tempI64 = [Math.floor(atime / 1000)>>>0,(tempDouble=Math.floor(atime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(56))>>2)] = tempI64[0],HEAP32[(((buf)+(60))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(64))>>2)] = (atime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(mtime / 1000)>>>0,(tempDouble=Math.floor(mtime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(72))>>2)] = tempI64[0],HEAP32[(((buf)+(76))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(80))>>2)] = (mtime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(ctime / 1000)>>>0,(tempDouble=Math.floor(ctime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(88))>>2)] = tempI64[0],HEAP32[(((buf)+(92))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(96))>>2)] = (ctime % 1000) * 1000;\r\n        (tempI64 = [stat.ino>>>0,(tempDouble=stat.ino,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(104))>>2)] = tempI64[0],HEAP32[(((buf)+(108))>>2)] = tempI64[1]);\r\n        return 0;\r\n      },doMsync:function(addr, stream, len, flags, offset) {\r\n        if (!FS.isFile(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (flags & 2) {\r\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\r\n          return 0;\r\n        }\r\n        var buffer = HEAPU8.slice(addr, addr + len);\r\n        FS.msync(stream, buffer, offset, len, flags);\r\n      },varargs:undefined,get:function() {\r\n        SYSCALLS.varargs += 4;\r\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\r\n        return ret;\r\n      },getStr:function(ptr) {\r\n        var ret = UTF8ToString(ptr);\r\n        return ret;\r\n      },getStreamFromFD:function(fd) {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) throw new FS.ErrnoError(8);\r\n        return stream;\r\n      }};\r\n  function ___syscall_chmod(path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.chmod(path, mode);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fchmod(fd, mode) {\r\n  try {\r\n  \r\n      FS.fchmod(fd, mode);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function setErrNo(value) {\r\n      HEAP32[((___errno_location())>>2)] = value;\r\n      return value;\r\n    }\r\n  \r\n  function ___syscall_fcntl64(fd, cmd, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (cmd) {\r\n        case 0: {\r\n          var arg = SYSCALLS.get();\r\n          if (arg < 0) {\r\n            return -28;\r\n          }\r\n          var newStream;\r\n          newStream = FS.createStream(stream, arg);\r\n          return newStream.fd;\r\n        }\r\n        case 1:\r\n        case 2:\r\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\r\n        case 3:\r\n          return stream.flags;\r\n        case 4: {\r\n          var arg = SYSCALLS.get();\r\n          stream.flags |= arg;\r\n          return 0;\r\n        }\r\n        case 5:\r\n        /* case 5: Currently in musl F_GETLK64 has same value as F_GETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */ {\r\n          \r\n          var arg = SYSCALLS.get();\r\n          var offset = 0;\r\n          // We're always unlocked.\r\n          HEAP16[(((arg)+(offset))>>1)] = 2;\r\n          return 0;\r\n        }\r\n        case 6:\r\n        case 7:\r\n        /* case 6: Currently in musl F_SETLK64 has same value as F_SETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\r\n        /* case 7: Currently in musl F_SETLKW64 has same value as F_SETLKW, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\r\n          \r\n          \r\n          return 0; // Pretend that the locking is successful.\r\n        case 16:\r\n        case 8:\r\n          return -28; // These are for sockets. We don't have them fully implemented yet.\r\n        case 9:\r\n          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fcntl() returns that, and we set errno ourselves.\r\n          setErrNo(28);\r\n          return -1;\r\n        default: {\r\n          return -28;\r\n        }\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fstat64(fd, buf) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      return SYSCALLS.doStat(FS.stat, stream.path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function convertI32PairToI53Checked(lo, hi) {\r\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  function ___syscall_ftruncate64(fd, length_low, length_high) {\r\n  try {\r\n  \r\n      var length = convertI32PairToI53Checked(length_low, length_high); if (isNaN(length)) return -61;\r\n      FS.ftruncate(fd, length);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n      return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\r\n    }\r\n  \r\n  function ___syscall_getcwd(buf, size) {\r\n  try {\r\n  \r\n      if (size === 0) return -28;\r\n      var cwd = FS.cwd();\r\n      var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\r\n      if (size < cwdLengthInBytes) return -68;\r\n      stringToUTF8(cwd, buf, size);\r\n      return cwdLengthInBytes;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function ___syscall_getdents64(fd, dirp, count) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd)\r\n      if (!stream.getdents) {\r\n        stream.getdents = FS.readdir(stream.path);\r\n      }\r\n  \r\n      var struct_size = 280;\r\n      var pos = 0;\r\n      var off = FS.llseek(stream, 0, 1);\r\n  \r\n      var idx = Math.floor(off / struct_size);\r\n  \r\n      while (idx < stream.getdents.length && pos + struct_size <= count) {\r\n        var id;\r\n        var type;\r\n        var name = stream.getdents[idx];\r\n        if (name === '.') {\r\n          id = stream.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else if (name === '..') {\r\n          var lookup = FS.lookupPath(stream.path, { parent: true });\r\n          id = lookup.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else {\r\n          var child = FS.lookupNode(stream.node, name);\r\n          id = child.id;\r\n          type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.\r\n                 FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.\r\n                 FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.\r\n                 8;                             // DT_REG, regular file.\r\n        }\r\n        (tempI64 = [id>>>0,(tempDouble=id,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((dirp + pos)>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(4))>>2)] = tempI64[1]);\r\n        (tempI64 = [(idx + 1) * struct_size>>>0,(tempDouble=(idx + 1) * struct_size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((dirp + pos)+(8))>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(12))>>2)] = tempI64[1]);\r\n        HEAP16[(((dirp + pos)+(16))>>1)] = 280;\r\n        HEAP8[(((dirp + pos)+(18))>>0)] = type;\r\n        stringToUTF8(name, dirp + pos + 19, 256);\r\n        pos += struct_size;\r\n        idx += 1;\r\n      }\r\n      FS.llseek(stream, idx * struct_size, 0);\r\n      return pos;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_ioctl(fd, op, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (op) {\r\n        case 21509:\r\n        case 21505: {\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21510:\r\n        case 21511:\r\n        case 21512:\r\n        case 21506:\r\n        case 21507:\r\n        case 21508: {\r\n          if (!stream.tty) return -59;\r\n          return 0; // no-op, not actually adjusting terminal settings\r\n        }\r\n        case 21519: {\r\n          if (!stream.tty) return -59;\r\n          var argp = SYSCALLS.get();\r\n          HEAP32[((argp)>>2)] = 0;\r\n          return 0;\r\n        }\r\n        case 21520: {\r\n          if (!stream.tty) return -59;\r\n          return -28; // not supported\r\n        }\r\n        case 21531: {\r\n          var argp = SYSCALLS.get();\r\n          return FS.ioctl(stream, op, argp);\r\n        }\r\n        case 21523: {\r\n          // TODO: in theory we should write to the winsize struct that gets\r\n          // passed in, but for now musl doesn't read anything on it\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21524: {\r\n          // TODO: technically, this ioctl call should change the window size.\r\n          // but, since emscripten doesn't have any concept of a terminal window\r\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        default: return -28; // not supported\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_lstat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.lstat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_mkdirat(dirfd, path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      // remove a trailing slash, if one - /a/b/ has basename of '', but\r\n      // we want to create b in the context of this function\r\n      path = PATH.normalize(path);\r\n      if (path[path.length-1] === '/') path = path.substr(0, path.length-1);\r\n      FS.mkdir(path, mode, 0);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_newfstatat(dirfd, path, buf, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      var nofollow = flags & 256;\r\n      var allowEmpty = flags & 4096;\r\n      flags = flags & (~6400);\r\n      path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\r\n      return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_openat(dirfd, path, flags, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      var mode = varargs ? SYSCALLS.get() : 0;\r\n      return FS.open(path, flags, mode).fd;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_rmdir(path) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.rmdir(path);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_stat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_unlinkat(dirfd, path, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      if (flags === 0) {\r\n        FS.unlink(path);\r\n      } else if (flags === 512) {\r\n        FS.rmdir(path);\r\n      } else {\r\n        abort('Invalid flags passed to unlinkat');\r\n      }\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  var nowIsMonotonic = true;;\r\n  function __emscripten_get_now_is_monotonic() {\r\n      return nowIsMonotonic;\r\n    }\r\n\r\n  function readI53FromI64(ptr) {\r\n      return HEAPU32[ptr>>2] + HEAP32[ptr+4>>2] * 4294967296;\r\n    }\r\n  \r\n  function isLeapYear(year) {\r\n        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);\r\n    }\r\n  \r\n  var MONTH_DAYS_LEAP_CUMULATIVE = [0,31,60,91,121,152,182,213,244,274,305,335];\r\n  \r\n  var MONTH_DAYS_REGULAR_CUMULATIVE = [0,31,59,90,120,151,181,212,243,273,304,334];\r\n  function ydayFromDate(date) {\r\n      var leap = isLeapYear(date.getFullYear());\r\n      var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\r\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1; // -1 since it's days since Jan 1\r\n  \r\n      return yday;\r\n    }\r\n  function __localtime_js(time, tmPtr) {\r\n      var date = new Date(readI53FromI64(time)*1000);\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getFullYear()-1900;\r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n  \r\n      var yday = ydayFromDate(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      HEAP32[(((tmPtr)+(36))>>2)] = -(date.getTimezoneOffset() * 60);\r\n  \r\n      // Attention: DST is in December in South, and some regions don't have DST at all.\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\r\n      HEAP32[(((tmPtr)+(32))>>2)] = dst;\r\n    }\r\n\r\n  function __mktime_js(tmPtr) {\r\n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\r\n                          HEAP32[(((tmPtr)+(16))>>2)],\r\n                          HEAP32[(((tmPtr)+(12))>>2)],\r\n                          HEAP32[(((tmPtr)+(8))>>2)],\r\n                          HEAP32[(((tmPtr)+(4))>>2)],\r\n                          HEAP32[((tmPtr)>>2)],\r\n                          0);\r\n  \r\n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\r\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\r\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\r\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\r\n      var guessedOffset = date.getTimezoneOffset();\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\r\n      if (dst < 0) {\r\n        // Attention: some regions don't have DST at all.\r\n        HEAP32[(((tmPtr)+(32))>>2)] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\r\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\r\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\r\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\r\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\r\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\r\n      }\r\n  \r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n      var yday = ydayFromDate(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      // To match expected behavior, update fields from date\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getYear();\r\n  \r\n      return (date.getTime() / 1000)|0;\r\n    }\r\n\r\n  \r\n  \r\n  function stringToNewUTF8(str) {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = _malloc(size);\r\n      if (ret) stringToUTF8(str, ret, size);\r\n      return ret;\r\n    }\r\n  function __tzset_js(timezone, daylight, tzname) {\r\n      // TODO: Use (malleable) environment variables instead of system settings.\r\n      var currentYear = new Date().getFullYear();\r\n      var winter = new Date(currentYear, 0, 1);\r\n      var summer = new Date(currentYear, 6, 1);\r\n      var winterOffset = winter.getTimezoneOffset();\r\n      var summerOffset = summer.getTimezoneOffset();\r\n  \r\n      // Local standard timezone offset. Local standard time is not adjusted for daylight savings.\r\n      // This code uses the fact that getTimezoneOffset returns a greater value during Standard Time versus Daylight Saving Time (DST).\r\n      // Thus it determines the expected output during Standard Time, and it compares whether the output of the given date the same (Standard) or less (DST).\r\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\r\n  \r\n      // timezone is specified as seconds west of UTC (\"The external variable\r\n      // `timezone` shall be set to the difference, in seconds, between\r\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\r\n      // as returned by stdTimezoneOffset.\r\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\r\n      HEAPU32[((timezone)>>2)] = stdTimezoneOffset * 60;\r\n  \r\n      HEAP32[((daylight)>>2)] = Number(winterOffset != summerOffset);\r\n  \r\n      function extractZone(date) {\r\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\r\n        return match ? match[1] : \"GMT\";\r\n      };\r\n      var winterName = extractZone(winter);\r\n      var summerName = extractZone(summer);\r\n      var winterNamePtr = stringToNewUTF8(winterName);\r\n      var summerNamePtr = stringToNewUTF8(summerName);\r\n      if (summerOffset < winterOffset) {\r\n        // Northern hemisphere\r\n        HEAPU32[((tzname)>>2)] = winterNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = summerNamePtr;\r\n      } else {\r\n        HEAPU32[((tzname)>>2)] = summerNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = winterNamePtr;\r\n      }\r\n    }\r\n\r\n  function _abort() {\r\n      abort('');\r\n    }\r\n\r\n  function _emscripten_set_main_loop_timing(mode, value) {\r\n      Browser.mainLoop.timingMode = mode;\r\n      Browser.mainLoop.timingValue = value;\r\n  \r\n      if (!Browser.mainLoop.func) {\r\n        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.\r\n      }\r\n  \r\n      if (!Browser.mainLoop.running) {\r\n        \r\n        Browser.mainLoop.running = true;\r\n      }\r\n      if (mode == 0) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {\r\n          var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now())|0;\r\n          setTimeout(Browser.mainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop\r\n        };\r\n        Browser.mainLoop.method = 'timeout';\r\n      } else if (mode == 1) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {\r\n          Browser.requestAnimationFrame(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'rAF';\r\n      } else if (mode == 2) {\r\n        if (typeof setImmediate == 'undefined') {\r\n          // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)\r\n          var setImmediates = [];\r\n          var emscriptenMainLoopMessageId = 'setimmediate';\r\n          /** @param {Event} event */\r\n          var Browser_setImmediate_messageHandler = (event) => {\r\n            // When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,\r\n            // so check for both cases.\r\n            if (event.data === emscriptenMainLoopMessageId || event.data.target === emscriptenMainLoopMessageId) {\r\n              event.stopPropagation();\r\n              setImmediates.shift()();\r\n            }\r\n          };\r\n          addEventListener(\"message\", Browser_setImmediate_messageHandler, true);\r\n          setImmediate = /** @type{function(function(): ?, ...?): number} */(function Browser_emulated_setImmediate(func) {\r\n            setImmediates.push(func);\r\n            if (ENVIRONMENT_IS_WORKER) {\r\n              if (Module['setImmediates'] === undefined) Module['setImmediates'] = [];\r\n              Module['setImmediates'].push(func);\r\n              postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js\r\n            } else postMessage(emscriptenMainLoopMessageId, \"*\"); // On the main thread, can just send the message to itself.\r\n          })\r\n        }\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {\r\n          setImmediate(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'immediate';\r\n      }\r\n      return 0;\r\n    }\r\n  \r\n  var _emscripten_get_now;\r\n      // Modern environment where performance.now() is supported:\r\n      // N.B. a shorter form \"_emscripten_get_now = performance.now;\" is\r\n      // unfortunately not allowed even in current browsers (e.g. FF Nightly 75).\r\n      _emscripten_get_now = () => performance.now();\r\n  ;\r\n  \r\n  \r\n    /**\r\n     * @param {number=} arg\r\n     * @param {boolean=} noSetTiming\r\n     */\r\n  function setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop, arg, noSetTiming) {\r\n      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');\r\n  \r\n      Browser.mainLoop.func = browserIterationFunc;\r\n      Browser.mainLoop.arg = arg;\r\n  \r\n      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;\r\n      function checkIsRunning() {\r\n        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) {\r\n          \r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n  \r\n      // We create the loop runner here but it is not actually running until\r\n      // _emscripten_set_main_loop_timing is called (which might happen a\r\n      // later time).  This member signifies that the current runner has not\r\n      // yet been started so that we can call runtimeKeepalivePush when it\r\n      // gets it timing set for the first time.\r\n      Browser.mainLoop.running = false;\r\n      Browser.mainLoop.runner = function Browser_mainLoop_runner() {\r\n        if (ABORT) return;\r\n        if (Browser.mainLoop.queue.length > 0) {\r\n          var start = Date.now();\r\n          var blocker = Browser.mainLoop.queue.shift();\r\n          blocker.func(blocker.arg);\r\n          if (Browser.mainLoop.remainingBlockers) {\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);\r\n            if (blocker.counted) {\r\n              Browser.mainLoop.remainingBlockers = next;\r\n            } else {\r\n              // not counted, but move the progress along a tiny bit\r\n              next = next + 0.5; // do not steal all the next one's progress\r\n              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;\r\n            }\r\n          }\r\n          out('main loop blocker \"' + blocker.name + '\" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);\r\n          Browser.mainLoop.updateStatus();\r\n  \r\n          // catches pause/resume main loop from blocker execution\r\n          if (!checkIsRunning()) return;\r\n  \r\n          setTimeout(Browser.mainLoop.runner, 0);\r\n          return;\r\n        }\r\n  \r\n        // catch pauses from non-main loop sources\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Implement very basic swap interval control\r\n        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;\r\n        if (Browser.mainLoop.timingMode == 1 && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {\r\n          // Not the scheduled time to render this frame - skip.\r\n          Browser.mainLoop.scheduler();\r\n          return;\r\n        } else if (Browser.mainLoop.timingMode == 0) {\r\n          Browser.mainLoop.tickStartTime = _emscripten_get_now();\r\n        }\r\n  \r\n        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize\r\n        // VBO double-buffering and reduce GPU stalls.\r\n        GL.newRenderingFrameStarted();\r\n  \r\n        Browser.mainLoop.runIter(browserIterationFunc);\r\n  \r\n        // catch pauses from the main loop itself\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able\r\n        // to queue the newest produced audio samples.\r\n        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()\r\n        //       do not need to be hardcoded into this function, but can be more generic.\r\n        if (typeof SDL == 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (!noSetTiming) {\r\n        if (fps && fps > 0) {\r\n          _emscripten_set_main_loop_timing(0, 1000.0 / fps);\r\n        } else {\r\n          // Do rAF by rendering each frame (no decimating)\r\n          _emscripten_set_main_loop_timing(1, 1);\r\n        }\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (simulateInfiniteLoop) {\r\n        throw 'unwind';\r\n      }\r\n    }\r\n  \r\n  function handleException(e) {\r\n      // Certain exception types we do not treat as errors since they are used for\r\n      // internal control flow.\r\n      // 1. ExitStatus, which is thrown by exit()\r\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\r\n      //    that wish to return to JS event loop.\r\n      if (e instanceof ExitStatus || e == 'unwind') {\r\n        return EXITSTATUS;\r\n      }\r\n      quit_(1, e);\r\n    }\r\n  \r\n  \r\n  function _proc_exit(code) {\r\n      EXITSTATUS = code;\r\n      if (!keepRuntimeAlive()) {\r\n        if (Module['onExit']) Module['onExit'](code);\r\n        ABORT = true;\r\n      }\r\n      quit_(code, new ExitStatus(code));\r\n    }\r\n  /** @suppress {duplicate } */\r\n  /** @param {boolean|number=} implicit */\r\n  function exitJS(status, implicit) {\r\n      EXITSTATUS = status;\r\n  \r\n      _proc_exit(status);\r\n    }\r\n  var _exit = exitJS;\r\n  \r\n  function maybeExit() {\r\n      if (!keepRuntimeAlive()) {\r\n        try {\r\n          _exit(EXITSTATUS);\r\n        } catch (e) {\r\n          handleException(e);\r\n        }\r\n      }\r\n    }\r\n  function callUserCallback(func) {\r\n      if (ABORT) {\r\n        return;\r\n      }\r\n      try {\r\n        func();\r\n        maybeExit();\r\n      } catch (e) {\r\n        handleException(e);\r\n      }\r\n    }\r\n  \r\n  /** @param {number=} timeout */\r\n  function safeSetTimeout(func, timeout) {\r\n      \r\n      return setTimeout(() => {\r\n        \r\n        callUserCallback(func);\r\n      }, timeout);\r\n    }\r\n  \r\n  function warnOnce(text) {\r\n      if (!warnOnce.shown) warnOnce.shown = {};\r\n      if (!warnOnce.shown[text]) {\r\n        warnOnce.shown[text] = 1;\r\n        err(text);\r\n      }\r\n    }\r\n  \r\n  \r\n  \r\n  var Browser = {mainLoop:{running:false,scheduler:null,method:\"\",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function() {\r\n          Browser.mainLoop.scheduler = null;\r\n          // Incrementing this signals the previous main loop that it's now become old, and it must return.\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n        },resume:function() {\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n          var timingMode = Browser.mainLoop.timingMode;\r\n          var timingValue = Browser.mainLoop.timingValue;\r\n          var func = Browser.mainLoop.func;\r\n          Browser.mainLoop.func = null;\r\n          // do not set timing and call scheduler, we will do it on the next lines\r\n          setMainLoop(func, 0, false, Browser.mainLoop.arg, true);\r\n          _emscripten_set_main_loop_timing(timingMode, timingValue);\r\n          Browser.mainLoop.scheduler();\r\n        },updateStatus:function() {\r\n          if (Module['setStatus']) {\r\n            var message = Module['statusMessage'] || 'Please wait...';\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var expected = Browser.mainLoop.expectedBlockers;\r\n            if (remaining) {\r\n              if (remaining < expected) {\r\n                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');\r\n              } else {\r\n                Module['setStatus'](message);\r\n              }\r\n            } else {\r\n              Module['setStatus']('');\r\n            }\r\n          }\r\n        },runIter:function(func) {\r\n          if (ABORT) return;\r\n          if (Module['preMainLoop']) {\r\n            var preRet = Module['preMainLoop']();\r\n            if (preRet === false) {\r\n              return; // |return false| skips a frame\r\n            }\r\n          }\r\n          callUserCallback(func);\r\n          if (Module['postMainLoop']) Module['postMainLoop']();\r\n        }},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function() {\r\n        if (Browser.initted) return;\r\n        Browser.initted = true;\r\n  \r\n        // Support for plugins that can process preloaded files. You can add more of these to\r\n        // your app by creating and appending to preloadPlugins.\r\n        //\r\n        // Each plugin is asked if it can handle a file based on the file's name. If it can,\r\n        // it is given the file's raw data. When it is done, it calls a callback with the file's\r\n        // (possibly modified) data. For example, a plugin might decompress a file, or it\r\n        // might create some side data structure for use later (like an Image element, etc.).\r\n  \r\n        var imagePlugin = {};\r\n        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {\r\n          return !Module.noImageDecoding && /\\.(jpg|jpeg|png|bmp)$/i.test(name);\r\n        };\r\n        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {\r\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n          if (b.size !== byteArray.length) { // Safari bug #118630\r\n            // Safari's Blob can only take an ArrayBuffer\r\n            b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });\r\n          }\r\n          var url = URL.createObjectURL(b);\r\n          var img = new Image();\r\n          img.onload = () => {\r\n            assert(img.complete, 'Image ' + name + ' could not be decoded');\r\n            var canvas = /** @type {!HTMLCanvasElement} */ (document.createElement('canvas'));\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            var ctx = canvas.getContext('2d');\r\n            ctx.drawImage(img, 0, 0);\r\n            preloadedImages[name] = canvas;\r\n            URL.revokeObjectURL(url);\r\n            if (onload) onload(byteArray);\r\n          };\r\n          img.onerror = (event) => {\r\n            out('Image ' + url + ' could not be decoded');\r\n            if (onerror) onerror();\r\n          };\r\n          img.src = url;\r\n        };\r\n        preloadPlugins.push(imagePlugin);\r\n  \r\n        var audioPlugin = {};\r\n        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {\r\n          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };\r\n        };\r\n        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {\r\n          var done = false;\r\n          function finish(audio) {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = audio;\r\n            if (onload) onload(byteArray);\r\n          }\r\n          function fail() {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = new Audio(); // empty shim\r\n            if (onerror) onerror();\r\n          }\r\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n          var url = URL.createObjectURL(b); // XXX we never revoke this!\r\n          var audio = new Audio();\r\n          audio.addEventListener('canplaythrough', () => finish(audio), false); // use addEventListener due to chromium bug 124926\r\n          audio.onerror = function audio_onerror(event) {\r\n            if (done) return;\r\n            err('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');\r\n            function encode64(data) {\r\n              var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n              var PAD = '=';\r\n              var ret = '';\r\n              var leftchar = 0;\r\n              var leftbits = 0;\r\n              for (var i = 0; i < data.length; i++) {\r\n                leftchar = (leftchar << 8) | data[i];\r\n                leftbits += 8;\r\n                while (leftbits >= 6) {\r\n                  var curr = (leftchar >> (leftbits-6)) & 0x3f;\r\n                  leftbits -= 6;\r\n                  ret += BASE[curr];\r\n                }\r\n              }\r\n              if (leftbits == 2) {\r\n                ret += BASE[(leftchar&3) << 4];\r\n                ret += PAD + PAD;\r\n              } else if (leftbits == 4) {\r\n                ret += BASE[(leftchar&0xf) << 2];\r\n                ret += PAD;\r\n              }\r\n              return ret;\r\n            }\r\n            audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);\r\n            finish(audio); // we don't wait for confirmation this worked - but it's worth trying\r\n          };\r\n          audio.src = url;\r\n          // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror\r\n          safeSetTimeout(() => {\r\n            finish(audio); // try to use it even though it is not necessarily ready to play\r\n          }, 10000);\r\n        };\r\n        preloadPlugins.push(audioPlugin);\r\n  \r\n        // Canvas event setup\r\n  \r\n        function pointerLockChange() {\r\n          Browser.pointerLock = document['pointerLockElement'] === Module['canvas'] ||\r\n                                document['mozPointerLockElement'] === Module['canvas'] ||\r\n                                document['webkitPointerLockElement'] === Module['canvas'] ||\r\n                                document['msPointerLockElement'] === Module['canvas'];\r\n        }\r\n        var canvas = Module['canvas'];\r\n        if (canvas) {\r\n          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module\r\n          // Module['forcedAspectRatio'] = 4 / 3;\r\n  \r\n          canvas.requestPointerLock = canvas['requestPointerLock'] ||\r\n                                      canvas['mozRequestPointerLock'] ||\r\n                                      canvas['webkitRequestPointerLock'] ||\r\n                                      canvas['msRequestPointerLock'] ||\r\n                                      (() => {});\r\n          canvas.exitPointerLock = document['exitPointerLock'] ||\r\n                                   document['mozExitPointerLock'] ||\r\n                                   document['webkitExitPointerLock'] ||\r\n                                   document['msExitPointerLock'] ||\r\n                                   (() => {}); // no-op if function does not exist\r\n          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\r\n  \r\n          document.addEventListener('pointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mozpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mspointerlockchange', pointerLockChange, false);\r\n  \r\n          if (Module['elementPointerLock']) {\r\n            canvas.addEventListener(\"click\", (ev) => {\r\n              if (!Browser.pointerLock && Module['canvas'].requestPointerLock) {\r\n                Module['canvas'].requestPointerLock();\r\n                ev.preventDefault();\r\n              }\r\n            }, false);\r\n          }\r\n        }\r\n      },createContext:function(/** @type {HTMLCanvasElement} */ canvas, useWebGL, setInModule, webGLContextAttributes) {\r\n        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.\r\n  \r\n        var ctx;\r\n        var contextHandle;\r\n        if (useWebGL) {\r\n          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.\r\n          var contextAttributes = {\r\n            antialias: false,\r\n            alpha: false,\r\n            majorVersion: (typeof WebGL2RenderingContext != 'undefined') ? 2 : 1,\r\n          };\r\n  \r\n          if (webGLContextAttributes) {\r\n            for (var attribute in webGLContextAttributes) {\r\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\r\n            }\r\n          }\r\n  \r\n          // This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not\r\n          // actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function\r\n          // Browser.createContext() should not even be emitted.\r\n          if (typeof GL != 'undefined') {\r\n            contextHandle = GL.createContext(canvas, contextAttributes);\r\n            if (contextHandle) {\r\n              ctx = GL.getContext(contextHandle).GLctx;\r\n            }\r\n          }\r\n        } else {\r\n          ctx = canvas.getContext('2d');\r\n        }\r\n  \r\n        if (!ctx) return null;\r\n  \r\n        if (setInModule) {\r\n          if (!useWebGL) assert(typeof GLctx == 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');\r\n  \r\n          Module.ctx = ctx;\r\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\r\n          Module.useWebGL = useWebGL;\r\n          Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\r\n          Browser.init();\r\n        }\r\n        return ctx;\r\n      },destroyContext:function(canvas, useWebGL, setInModule) {},fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:function(lockPointer, resizeCanvas) {\r\n        Browser.lockPointer = lockPointer;\r\n        Browser.resizeCanvas = resizeCanvas;\r\n        if (typeof Browser.lockPointer == 'undefined') Browser.lockPointer = true;\r\n        if (typeof Browser.resizeCanvas == 'undefined') Browser.resizeCanvas = false;\r\n  \r\n        var canvas = Module['canvas'];\r\n        function fullscreenChange() {\r\n          Browser.isFullscreen = false;\r\n          var canvasContainer = canvas.parentNode;\r\n          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n               document['webkitCurrentFullScreenElement']) === canvasContainer) {\r\n            canvas.exitFullscreen = Browser.exitFullscreen;\r\n            if (Browser.lockPointer) canvas.requestPointerLock();\r\n            Browser.isFullscreen = true;\r\n            if (Browser.resizeCanvas) {\r\n              Browser.setFullscreenCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          } else {\r\n            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen\r\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\r\n            canvasContainer.parentNode.removeChild(canvasContainer);\r\n  \r\n            if (Browser.resizeCanvas) {\r\n              Browser.setWindowedCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          }\r\n          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullscreen);\r\n          if (Module['onFullscreen']) Module['onFullscreen'](Browser.isFullscreen);\r\n        }\r\n  \r\n        if (!Browser.fullscreenHandlersInstalled) {\r\n          Browser.fullscreenHandlersInstalled = true;\r\n          document.addEventListener('fullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('mozfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('MSFullscreenChange', fullscreenChange, false);\r\n        }\r\n  \r\n        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root\r\n        var canvasContainer = document.createElement(\"div\");\r\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\r\n        canvasContainer.appendChild(canvas);\r\n  \r\n        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)\r\n        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||\r\n                                            canvasContainer['mozRequestFullScreen'] ||\r\n                                            canvasContainer['msRequestFullscreen'] ||\r\n                                           (canvasContainer['webkitRequestFullscreen'] ? () => canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) : null) ||\r\n                                           (canvasContainer['webkitRequestFullScreen'] ? () => canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) : null);\r\n  \r\n        canvasContainer.requestFullscreen();\r\n      },exitFullscreen:function() {\r\n        // This is workaround for chrome. Trying to exit from fullscreen\r\n        // not in fullscreen state will cause \"TypeError: Document not active\"\r\n        // in chrome. See https://github.com/emscripten-core/emscripten/pull/8236\r\n        if (!Browser.isFullscreen) {\r\n          return false;\r\n        }\r\n  \r\n        var CFS = document['exitFullscreen'] ||\r\n                  document['cancelFullScreen'] ||\r\n                  document['mozCancelFullScreen'] ||\r\n                  document['msExitFullscreen'] ||\r\n                  document['webkitCancelFullScreen'] ||\r\n            (() => {});\r\n        CFS.apply(document, []);\r\n        return true;\r\n      },nextRAF:0,fakeRequestAnimationFrame:function(func) {\r\n        // try to keep 60fps between calls to here\r\n        var now = Date.now();\r\n        if (Browser.nextRAF === 0) {\r\n          Browser.nextRAF = now + 1000/60;\r\n        } else {\r\n          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0\r\n            Browser.nextRAF += 1000/60;\r\n          }\r\n        }\r\n        var delay = Math.max(Browser.nextRAF - now, 0);\r\n        setTimeout(func, delay);\r\n      },requestAnimationFrame:function(func) {\r\n        if (typeof requestAnimationFrame == 'function') {\r\n          requestAnimationFrame(func);\r\n          return;\r\n        }\r\n        var RAF = Browser.fakeRequestAnimationFrame;\r\n        RAF(func);\r\n      },safeSetTimeout:function(func, timeout) {\r\n        // Legacy function, this is used by the SDL2 port so we need to keep it\r\n        // around at least until that is updated.\r\n        // See https://github.com/libsdl-org/SDL/pull/6304\r\n        return safeSetTimeout(func, timeout);\r\n      },safeRequestAnimationFrame:function(func) {\r\n        \r\n        return Browser.requestAnimationFrame(() => {\r\n          \r\n          callUserCallback(func);\r\n        });\r\n      },getMimetype:function(name) {\r\n        return {\r\n          'jpg': 'image/jpeg',\r\n          'jpeg': 'image/jpeg',\r\n          'png': 'image/png',\r\n          'bmp': 'image/bmp',\r\n          'ogg': 'audio/ogg',\r\n          'wav': 'audio/wav',\r\n          'mp3': 'audio/mpeg'\r\n        }[name.substr(name.lastIndexOf('.')+1)];\r\n      },getUserMedia:function(func) {\r\n        if (!window.getUserMedia) {\r\n          window.getUserMedia = navigator['getUserMedia'] ||\r\n                                navigator['mozGetUserMedia'];\r\n        }\r\n        window.getUserMedia(func);\r\n      },getMovementX:function(event) {\r\n        return event['movementX'] ||\r\n               event['mozMovementX'] ||\r\n               event['webkitMovementX'] ||\r\n               0;\r\n      },getMovementY:function(event) {\r\n        return event['movementY'] ||\r\n               event['mozMovementY'] ||\r\n               event['webkitMovementY'] ||\r\n               0;\r\n      },getMouseWheelDelta:function(event) {\r\n        var delta = 0;\r\n        switch (event.type) {\r\n          case 'DOMMouseScroll':\r\n            // 3 lines make up a step\r\n            delta = event.detail / 3;\r\n            break;\r\n          case 'mousewheel':\r\n            // 120 units make up a step\r\n            delta = event.wheelDelta / 120;\r\n            break;\r\n          case 'wheel':\r\n            delta = event.deltaY\r\n            switch (event.deltaMode) {\r\n              case 0:\r\n                // DOM_DELTA_PIXEL: 100 pixels make up a step\r\n                delta /= 100;\r\n                break;\r\n              case 1:\r\n                // DOM_DELTA_LINE: 3 lines make up a step\r\n                delta /= 3;\r\n                break;\r\n              case 2:\r\n                // DOM_DELTA_PAGE: A page makes up 80 steps\r\n                delta *= 80;\r\n                break;\r\n              default:\r\n                throw 'unrecognized mouse wheel delta mode: ' + event.deltaMode;\r\n            }\r\n            break;\r\n          default:\r\n            throw 'unrecognized mouse wheel event: ' + event.type;\r\n        }\r\n        return delta;\r\n      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function(event) { // event should be mousemove, mousedown or mouseup\r\n        if (Browser.pointerLock) {\r\n          // When the pointer is locked, calculate the coordinates\r\n          // based on the movement of the mouse.\r\n          // Workaround for Firefox bug 764498\r\n          if (event.type != 'mousemove' &&\r\n              ('mozMovementX' in event)) {\r\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\r\n          } else {\r\n            Browser.mouseMovementX = Browser.getMovementX(event);\r\n            Browser.mouseMovementY = Browser.getMovementY(event);\r\n          }\r\n  \r\n          // check if SDL is available\r\n          if (typeof SDL != \"undefined\") {\r\n            Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;\r\n            Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;\r\n          } else {\r\n            // just add the mouse delta to the current absolut mouse position\r\n            // FIXME: ideally this should be clamped against the canvas size and zero\r\n            Browser.mouseX += Browser.mouseMovementX;\r\n            Browser.mouseY += Browser.mouseMovementY;\r\n          }\r\n        } else {\r\n          // Otherwise, calculate the movement based on the changes\r\n          // in the coordinates.\r\n          var rect = Module[\"canvas\"].getBoundingClientRect();\r\n          var cw = Module[\"canvas\"].width;\r\n          var ch = Module[\"canvas\"].height;\r\n  \r\n          // Neither .scrollX or .pageXOffset are defined in a spec, but\r\n          // we prefer .scrollX because it is currently in a spec draft.\r\n          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)\r\n          var scrollX = ((typeof window.scrollX != 'undefined') ? window.scrollX : window.pageXOffset);\r\n          var scrollY = ((typeof window.scrollY != 'undefined') ? window.scrollY : window.pageYOffset);\r\n  \r\n          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {\r\n            var touch = event.touch;\r\n            if (touch === undefined) {\r\n              return; // the \"touch\" property is only defined in SDL\r\n  \r\n            }\r\n            var adjustedX = touch.pageX - (scrollX + rect.left);\r\n            var adjustedY = touch.pageY - (scrollY + rect.top);\r\n  \r\n            adjustedX = adjustedX * (cw / rect.width);\r\n            adjustedY = adjustedY * (ch / rect.height);\r\n  \r\n            var coords = { x: adjustedX, y: adjustedY };\r\n  \r\n            if (event.type === 'touchstart') {\r\n              Browser.lastTouches[touch.identifier] = coords;\r\n              Browser.touches[touch.identifier] = coords;\r\n            } else if (event.type === 'touchend' || event.type === 'touchmove') {\r\n              var last = Browser.touches[touch.identifier];\r\n              if (!last) last = coords;\r\n              Browser.lastTouches[touch.identifier] = last;\r\n              Browser.touches[touch.identifier] = coords;\r\n            }\r\n            return;\r\n          }\r\n  \r\n          var x = event.pageX - (scrollX + rect.left);\r\n          var y = event.pageY - (scrollY + rect.top);\r\n  \r\n          // the canvas might be CSS-scaled compared to its backbuffer;\r\n          // SDL-using content will want mouse coordinates in terms\r\n          // of backbuffer units.\r\n          x = x * (cw / rect.width);\r\n          y = y * (ch / rect.height);\r\n  \r\n          Browser.mouseMovementX = x - Browser.mouseX;\r\n          Browser.mouseMovementY = y - Browser.mouseY;\r\n          Browser.mouseX = x;\r\n          Browser.mouseY = y;\r\n        }\r\n      },resizeListeners:[],updateResizeListeners:function() {\r\n        var canvas = Module['canvas'];\r\n        Browser.resizeListeners.forEach((listener) => listener(canvas.width, canvas.height));\r\n      },setCanvasSize:function(width, height, noUpdates) {\r\n        var canvas = Module['canvas'];\r\n        Browser.updateCanvasDimensions(canvas, width, height);\r\n        if (!noUpdates) Browser.updateResizeListeners();\r\n      },windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:function() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags | 0x00800000; // set SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },setWindowedCanvasSize:function() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },updateCanvasDimensions:function(canvas, wNative, hNative) {\r\n        if (wNative && hNative) {\r\n          canvas.widthNative = wNative;\r\n          canvas.heightNative = hNative;\r\n        } else {\r\n          wNative = canvas.widthNative;\r\n          hNative = canvas.heightNative;\r\n        }\r\n        var w = wNative;\r\n        var h = hNative;\r\n        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {\r\n          if (w/h < Module['forcedAspectRatio']) {\r\n            w = Math.round(h * Module['forcedAspectRatio']);\r\n          } else {\r\n            h = Math.round(w / Module['forcedAspectRatio']);\r\n          }\r\n        }\r\n        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {\r\n           var factor = Math.min(screen.width / w, screen.height / h);\r\n           w = Math.round(w * factor);\r\n           h = Math.round(h * factor);\r\n        }\r\n        if (Browser.resizeCanvas) {\r\n          if (canvas.width  != w) canvas.width  = w;\r\n          if (canvas.height != h) canvas.height = h;\r\n          if (typeof canvas.style != 'undefined') {\r\n            canvas.style.removeProperty( \"width\");\r\n            canvas.style.removeProperty(\"height\");\r\n          }\r\n        } else {\r\n          if (canvas.width  != wNative) canvas.width  = wNative;\r\n          if (canvas.height != hNative) canvas.height = hNative;\r\n          if (typeof canvas.style != 'undefined') {\r\n            if (w != wNative || h != hNative) {\r\n              canvas.style.setProperty( \"width\", w + \"px\", \"important\");\r\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\r\n            } else {\r\n              canvas.style.removeProperty( \"width\");\r\n              canvas.style.removeProperty(\"height\");\r\n            }\r\n          }\r\n        }\r\n      }};\r\n  \r\n  var EGL = {errorCode:12288,defaultDisplayInitialized:false,currentContext:0,currentReadSurface:0,currentDrawSurface:0,contextAttributes:{alpha:false,depth:false,stencil:false,antialias:false},stringCache:{},setErrorCode:function(code) {\r\n        EGL.errorCode = code;\r\n      },chooseConfig:function(display, attribList, config, config_size, numConfigs) {\r\n        if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n          EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n          return 0;\r\n        }\r\n  \r\n        if (attribList) {\r\n          // read attribList if it is non-null\r\n          for (;;) {\r\n            var param = HEAP32[((attribList)>>2)];\r\n            if (param == 0x3021 /*EGL_ALPHA_SIZE*/) {\r\n              var alphaSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.alpha = (alphaSize > 0);\r\n            } else if (param == 0x3025 /*EGL_DEPTH_SIZE*/) {\r\n              var depthSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.depth = (depthSize > 0);\r\n            } else if (param == 0x3026 /*EGL_STENCIL_SIZE*/) {\r\n              var stencilSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.stencil = (stencilSize > 0);\r\n            } else if (param == 0x3031 /*EGL_SAMPLES*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples > 0);\r\n            } else if (param == 0x3032 /*EGL_SAMPLE_BUFFERS*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples == 1);\r\n            } else if (param == 0x3100 /*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/) {\r\n              var requestedPriority = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.lowLatency = (requestedPriority != 0x3103 /*EGL_CONTEXT_PRIORITY_LOW_IMG*/);\r\n            } else if (param == 0x3038 /*EGL_NONE*/) {\r\n                break;\r\n            }\r\n            attribList += 8;\r\n          }\r\n        }\r\n  \r\n        if ((!config || !config_size) && !numConfigs) {\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n        }\r\n        if (numConfigs) {\r\n          HEAP32[((numConfigs)>>2)] = 1; // Total number of supported configs: 1.\r\n        }\r\n        if (config && config_size > 0) {\r\n          HEAP32[((config)>>2)] = 62002;\r\n        }\r\n  \r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }};\r\n  function _eglBindAPI(api) {\r\n      if (api == 0x30A0 /* EGL_OPENGL_ES_API */) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }\r\n      // if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {\r\n      EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n      return 0;\r\n    }\r\n\r\n  function _eglChooseConfig(display, attrib_list, configs, config_size, numConfigs) {\r\n      return EGL.chooseConfig(display, attrib_list, configs, config_size, numConfigs);\r\n    }\r\n\r\n  function webgl_enable_ANGLE_instanced_arrays(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 26 and Google Chrome 30 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('ANGLE_instanced_arrays');\r\n      if (ext) {\r\n        ctx['vertexAttribDivisor'] = function(index, divisor) { ext['vertexAttribDivisorANGLE'](index, divisor); };\r\n        ctx['drawArraysInstanced'] = function(mode, first, count, primcount) { ext['drawArraysInstancedANGLE'](mode, first, count, primcount); };\r\n        ctx['drawElementsInstanced'] = function(mode, count, type, indices, primcount) { ext['drawElementsInstancedANGLE'](mode, count, type, indices, primcount); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_OES_vertex_array_object(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 25 and WebKit 536.28/desktop Safari 6.0.3 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('OES_vertex_array_object');\r\n      if (ext) {\r\n        ctx['createVertexArray'] = function() { return ext['createVertexArrayOES'](); };\r\n        ctx['deleteVertexArray'] = function(vao) { ext['deleteVertexArrayOES'](vao); };\r\n        ctx['bindVertexArray'] = function(vao) { ext['bindVertexArrayOES'](vao); };\r\n        ctx['isVertexArray'] = function(vao) { return ext['isVertexArrayOES'](vao); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_draw_buffers(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 28 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('WEBGL_draw_buffers');\r\n      if (ext) {\r\n        ctx['drawBuffers'] = function(n, bufs) { ext['drawBuffersWEBGL'](n, bufs); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(ctx) {\r\n      // Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.dibvbi = ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance'));\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(ctx) {\r\n      // Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.mdibvbi = ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_multi_draw(ctx) {\r\n      // Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.\r\n      return !!(ctx.multiDrawWebgl = ctx.getExtension('WEBGL_multi_draw'));\r\n    }\r\n  \r\n  \r\n  var GL = {counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:[],offscreenCanvases:{},queries:[],samplers:[],transformFeedbacks:[],syncs:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],stringCache:{},stringiCache:{},unpackAlignment:4,recordError:function recordError(errorCode) {\r\n        if (!GL.lastError) {\r\n          GL.lastError = errorCode;\r\n        }\r\n      },getNewId:function(table) {\r\n        var ret = GL.counter++;\r\n        for (var i = table.length; i < ret; i++) {\r\n          table[i] = null;\r\n        }\r\n        return ret;\r\n      },MAX_TEMP_BUFFER_SIZE:16777216,numTempVertexBuffersPerSize:64,log2ceilLookup:function(i) {\r\n        return 32 - Math.clz32(i === 0 ? 0 : i - 1);\r\n      },generateTempBuffers:function(quads, context) {\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        context.tempVertexBufferCounters1 = [];\r\n        context.tempVertexBufferCounters2 = [];\r\n        context.tempVertexBufferCounters1.length = context.tempVertexBufferCounters2.length = largestIndex+1;\r\n        context.tempVertexBuffers1 = [];\r\n        context.tempVertexBuffers2 = [];\r\n        context.tempVertexBuffers1.length = context.tempVertexBuffers2.length = largestIndex+1;\r\n        context.tempIndexBuffers = [];\r\n        context.tempIndexBuffers.length = largestIndex+1;\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          context.tempIndexBuffers[i] = null; // Created on-demand\r\n          context.tempVertexBufferCounters1[i] = context.tempVertexBufferCounters2[i] = 0;\r\n          var ringbufferLength = GL.numTempVertexBuffersPerSize;\r\n          context.tempVertexBuffers1[i] = [];\r\n          context.tempVertexBuffers2[i] = [];\r\n          var ringbuffer1 = context.tempVertexBuffers1[i];\r\n          var ringbuffer2 = context.tempVertexBuffers2[i];\r\n          ringbuffer1.length = ringbuffer2.length = ringbufferLength;\r\n          for (var j = 0; j < ringbufferLength; ++j) {\r\n            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand\r\n          }\r\n        }\r\n  \r\n        if (quads) {\r\n          // GL_QUAD indexes can be precalculated\r\n          context.tempQuadIndexBuffer = GLctx.createBuffer();\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, context.tempQuadIndexBuffer);\r\n          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;\r\n          var quadIndexes = new Uint16Array(numIndexes);\r\n          var i = 0, v = 0;\r\n          while (1) {\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+1;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+3;\r\n            if (i >= numIndexes) break;\r\n            v += 4;\r\n          }\r\n          context.GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, quadIndexes, 0x88E4 /*GL_STATIC_DRAW*/);\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n        }\r\n      },getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ringbuffer = GL.currentContext.tempVertexBuffers1[idx];\r\n        var nextFreeBufferIndex = GL.currentContext.tempVertexBufferCounters1[idx];\r\n        GL.currentContext.tempVertexBufferCounters1[idx] = (GL.currentContext.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);\r\n        var vbo = ringbuffer[nextFreeBufferIndex];\r\n        if (vbo) {\r\n          return vbo;\r\n        }\r\n        var prevVBO = GLctx.getParameter(0x8894 /*GL_ARRAY_BUFFER_BINDING*/);\r\n        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, ringbuffer[nextFreeBufferIndex]);\r\n        GLctx.bufferData(0x8892 /*GL_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, prevVBO);\r\n        return ringbuffer[nextFreeBufferIndex];\r\n      },getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ibo = GL.currentContext.tempIndexBuffers[idx];\r\n        if (ibo) {\r\n          return ibo;\r\n        }\r\n        var prevIBO = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n        GL.currentContext.tempIndexBuffers[idx] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, GL.currentContext.tempIndexBuffers[idx]);\r\n        GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, prevIBO);\r\n        return GL.currentContext.tempIndexBuffers[idx];\r\n      },newRenderingFrameStarted:function newRenderingFrameStarted() {\r\n        if (!GL.currentContext) {\r\n          return;\r\n        }\r\n        var vb = GL.currentContext.tempVertexBuffers1;\r\n        GL.currentContext.tempVertexBuffers1 = GL.currentContext.tempVertexBuffers2;\r\n        GL.currentContext.tempVertexBuffers2 = vb;\r\n        vb = GL.currentContext.tempVertexBufferCounters1;\r\n        GL.currentContext.tempVertexBufferCounters1 = GL.currentContext.tempVertexBufferCounters2;\r\n        GL.currentContext.tempVertexBufferCounters2 = vb;\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          GL.currentContext.tempVertexBufferCounters1[i] = 0;\r\n        }\r\n      },getSource:function(shader, count, string, length) {\r\n        var source = '';\r\n        for (var i = 0; i < count; ++i) {\r\n          var len = length ? HEAP32[(((length)+(i*4))>>2)] : -1;\r\n          source += UTF8ToString(HEAP32[(((string)+(i*4))>>2)], len < 0 ? undefined : len);\r\n        }\r\n        return source;\r\n      },calcBufLength:function calcBufLength(size, type, stride, count) {\r\n        if (stride > 0) {\r\n          return count * stride;  // XXXvlad this is not exactly correct I don't think\r\n        }\r\n        var typeSize = GL.byteSizeByType[type - GL.byteSizeByTypeRoot];\r\n        return size * typeSize * count;\r\n      },usedTempBuffers:[],preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count) {\r\n        GL.resetBufferBinding = false;\r\n  \r\n        // TODO: initial pass to detect ranges we need to upload, might not need an upload per attrib\r\n        for (var i = 0; i < GL.currentContext.maxVertexAttribs; ++i) {\r\n          var cb = GL.currentContext.clientBuffers[i];\r\n          if (!cb.clientside || !cb.enabled) continue;\r\n  \r\n          GL.resetBufferBinding = true;\r\n  \r\n          var size = GL.calcBufLength(cb.size, cb.type, cb.stride, count);\r\n          var buf = GL.getTempVertexBuffer(size);\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, buf);\r\n          GLctx.bufferSubData(0x8892 /*GL_ARRAY_BUFFER*/,\r\n                                   0,\r\n                                   HEAPU8.subarray(cb.ptr, cb.ptr + size));\r\n          cb.vertexAttribPointerAdaptor.call(GLctx, i, cb.size, cb.type, cb.normalized, cb.stride, 0);\r\n        }\r\n      },postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings() {\r\n        if (GL.resetBufferBinding) {\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, GL.buffers[GLctx.currentArrayBufferBinding]);\r\n        }\r\n      },createContext:function(/** @type {HTMLCanvasElement} */ canvas, webGLContextAttributes) {\r\n  \r\n        // BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL context on a canvas,\r\n        // calling .getContext() will always return that context independent of which 'webgl' or 'webgl2'\r\n        // context version was passed. See https://bugs.webkit.org/show_bug.cgi?id=222758 and\r\n        // https://github.com/emscripten-core/emscripten/issues/13295.\r\n        // TODO: Once the bug is fixed and shipped in Safari, adjust the Safari version field in above check.\r\n        if (!canvas.getContextSafariWebGL2Fixed) {\r\n          canvas.getContextSafariWebGL2Fixed = canvas.getContext;\r\n          /** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */\r\n          function fixedGetContext(ver, attrs) {\r\n            var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\r\n            return ((ver == 'webgl') == (gl instanceof WebGLRenderingContext)) ? gl : null;\r\n          }\r\n          canvas.getContext = fixedGetContext;\r\n        }\r\n  \r\n        var ctx =\r\n          (webGLContextAttributes.majorVersion > 1)\r\n          ?\r\n            canvas.getContext(\"webgl2\", webGLContextAttributes)\r\n          :\r\n          (canvas.getContext(\"webgl\", webGLContextAttributes)\r\n            // https://caniuse.com/#feat=webgl\r\n            );\r\n  \r\n        if (!ctx) return 0;\r\n  \r\n        var handle = GL.registerContext(ctx, webGLContextAttributes);\r\n  \r\n        return handle;\r\n      },registerContext:function(ctx, webGLContextAttributes) {\r\n        // without pthreads a context is just an integer ID\r\n        var handle = GL.getNewId(GL.contexts);\r\n  \r\n        var context = {\r\n          handle: handle,\r\n          attributes: webGLContextAttributes,\r\n          version: webGLContextAttributes.majorVersion,\r\n          GLctx: ctx\r\n        };\r\n  \r\n        // Store the created context object so that we can access the context given a canvas without having to pass the parameters again.\r\n        if (ctx.canvas) ctx.canvas.GLctxObject = context;\r\n        GL.contexts[handle] = context;\r\n        if (typeof webGLContextAttributes.enableExtensionsByDefault == 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {\r\n          GL.initExtensions(context);\r\n        }\r\n  \r\n        context.maxVertexAttribs = context.GLctx.getParameter(0x8869 /*GL_MAX_VERTEX_ATTRIBS*/);\r\n        context.clientBuffers = [];\r\n        for (var i = 0; i < context.maxVertexAttribs; i++) {\r\n          context.clientBuffers[i] = { enabled: false, clientside: false, size: 0, type: 0, normalized: 0, stride: 0, ptr: 0, vertexAttribPointerAdaptor: null };\r\n        }\r\n  \r\n        GL.generateTempBuffers(false, context);\r\n  \r\n        return handle;\r\n      },makeContextCurrent:function(contextHandle) {\r\n  \r\n        GL.currentContext = GL.contexts[contextHandle]; // Active Emscripten GL layer context object.\r\n        Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx; // Active WebGL context object.\r\n        return !(contextHandle && !GLctx);\r\n      },getContext:function(contextHandle) {\r\n        return GL.contexts[contextHandle];\r\n      },deleteContext:function(contextHandle) {\r\n        if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = null;\r\n        if (typeof JSEvents == 'object') JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas); // Release all JS event handlers on the DOM element that the GL context is associated with since the context is now deleted.\r\n        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined; // Make sure the canvas object no longer refers to the context object so there are no GC surprises.\r\n        GL.contexts[contextHandle] = null;\r\n      },initExtensions:function(context) {\r\n        // If this function is called without a specific context object, init the extensions of the currently active context.\r\n        if (!context) context = GL.currentContext;\r\n  \r\n        if (context.initExtensionsDone) return;\r\n        context.initExtensionsDone = true;\r\n  \r\n        var GLctx = context.GLctx;\r\n  \r\n        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist.\r\n  \r\n        // Extensions that are only available in WebGL 1 (the calls will be no-ops if called on a WebGL 2 context active)\r\n        webgl_enable_ANGLE_instanced_arrays(GLctx);\r\n        webgl_enable_OES_vertex_array_object(GLctx);\r\n        webgl_enable_WEBGL_draw_buffers(GLctx);\r\n        // Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)\r\n        webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);\r\n        webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);\r\n  \r\n        // On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative\r\n        // that's based on core APIs, and exposes only the queryCounterEXT()\r\n        // entrypoint.\r\n        if (context.version >= 2) {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\");\r\n        }\r\n  \r\n        // However, Firefox exposes the WebGL 1 version on WebGL 2 as well and\r\n        // thus we look for the WebGL 1 version again if the WebGL 2 version\r\n        // isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882\r\n        if (context.version < 2 || !GLctx.disjointTimerQueryExt)\r\n        {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query\");\r\n        }\r\n  \r\n        webgl_enable_WEBGL_multi_draw(GLctx);\r\n  \r\n        // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n        var exts = GLctx.getSupportedExtensions() || [];\r\n        exts.forEach(function(ext) {\r\n          // WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders are not enabled by default.\r\n          if (!ext.includes('lose_context') && !ext.includes('debug')) {\r\n            // Call .getExtension() to enable that extension permanently.\r\n            GLctx.getExtension(ext);\r\n          }\r\n        });\r\n      }};\r\n  \r\n  function _eglCreateContext(display, config, hmm, contextAttribs) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n  \r\n      // EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.\r\n      // So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.\r\n      var glesContextVersion = 1;\r\n      for (;;) {\r\n        var param = HEAP32[((contextAttribs)>>2)];\r\n        if (param == 0x3098 /*EGL_CONTEXT_CLIENT_VERSION*/) {\r\n          glesContextVersion = HEAP32[(((contextAttribs)+(4))>>2)];\r\n        } else if (param == 0x3038 /*EGL_NONE*/) {\r\n          break;\r\n        } else {\r\n          /* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */\r\n          EGL.setErrorCode(0x3004 /*EGL_BAD_ATTRIBUTE*/);\r\n          return 0;\r\n        }\r\n        contextAttribs += 8;\r\n      }\r\n      if (glesContextVersion < 2 || glesContextVersion > 3) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n  \r\n      EGL.contextAttributes.majorVersion = glesContextVersion - 1; // WebGL 1 is GLES 2, WebGL2 is GLES3\r\n      EGL.contextAttributes.minorVersion = 0;\r\n  \r\n      EGL.context = GL.createContext(Module['canvas'], EGL.contextAttributes);\r\n  \r\n      if (EGL.context != 0) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n  \r\n        // Run callbacks so that GL emulation works\r\n        GL.makeContextCurrent(EGL.context);\r\n        Module.useWebGL = true;\r\n        Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });\r\n  \r\n        // Note: This function only creates a context, but it shall not make it active.\r\n        GL.makeContextCurrent(null);\r\n        return 62004; // Magic ID for Emscripten EGLContext\r\n      } else {\r\n        EGL.setErrorCode(0x3009 /* EGL_BAD_MATCH */); // By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n    }\r\n\r\n  function _eglCreateWindowSurface(display, config, win, attrib_list) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      // TODO: Examine attrib_list! Parameters that can be present there are:\r\n      // - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)\r\n      // - EGL_VG_COLORSPACE (can't be set)\r\n      // - EGL_VG_ALPHA_FORMAT (can't be set)\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 62006; /* Magic ID for Emscripten 'default surface' */\r\n    }\r\n\r\n  \r\n  function _eglDestroyContext(display, context) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (context != 62004 /* Magic ID for Emscripten EGLContext */) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.deleteContext(EGL.context);\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.currentContext == context) {\r\n        EGL.currentContext = 0;\r\n      }\r\n      return 1 /* EGL_TRUE */;\r\n    }\r\n\r\n  function _eglDestroySurface(display, surface) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (surface != 62006 /* Magic ID for the only EGLSurface supported by Emscripten */) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 1;\r\n      }\r\n      if (EGL.currentReadSurface == surface) {\r\n        EGL.currentReadSurface = 0;\r\n      }\r\n      if (EGL.currentDrawSurface == surface) {\r\n        EGL.currentDrawSurface = 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1; /* Magic ID for Emscripten 'default surface' */\r\n    }\r\n\r\n  function _eglGetConfigAttrib(display, config, attribute, value) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      if (!value) {\r\n        EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n        return 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      switch (attribute) {\r\n      case 0x3020: // EGL_BUFFER_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 32 : 24;\r\n        return 1;\r\n      case 0x3021: // EGL_ALPHA_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 8 : 0;\r\n        return 1;\r\n      case 0x3022: // EGL_BLUE_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3023: // EGL_GREEN_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3024: // EGL_RED_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3025: // EGL_DEPTH_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.depth ? 24 : 0;\r\n        return 1;\r\n      case 0x3026: // EGL_STENCIL_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.stencil ? 8 : 0;\r\n        return 1;\r\n      case 0x3027: // EGL_CONFIG_CAVEAT\r\n        // We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3028: // EGL_CONFIG_ID\r\n        HEAP32[((value)>>2)] = 62002;\r\n        return 1;\r\n      case 0x3029: // EGL_LEVEL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302A: // EGL_MAX_PBUFFER_HEIGHT\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302B: // EGL_MAX_PBUFFER_PIXELS\r\n        HEAP32[((value)>>2)] = 16777216;\r\n        return 1;\r\n      case 0x302C: // EGL_MAX_PBUFFER_WIDTH\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302D: // EGL_NATIVE_RENDERABLE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302E: // EGL_NATIVE_VISUAL_ID\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302F: // EGL_NATIVE_VISUAL_TYPE\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3031: // EGL_SAMPLES\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 4 : 0;\r\n        return 1;\r\n      case 0x3032: // EGL_SAMPLE_BUFFERS\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 1 : 0;\r\n        return 1;\r\n      case 0x3033: // EGL_SURFACE_TYPE\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3034: // EGL_TRANSPARENT_TYPE\r\n        // If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3035: // EGL_TRANSPARENT_BLUE_VALUE\r\n      case 0x3036: // EGL_TRANSPARENT_GREEN_VALUE\r\n      case 0x3037: // EGL_TRANSPARENT_RED_VALUE\r\n        // \"If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined.\"\r\n        HEAP32[((value)>>2)] = -1;\r\n        return 1;\r\n      case 0x3039: // EGL_BIND_TO_TEXTURE_RGB\r\n      case 0x303A: // EGL_BIND_TO_TEXTURE_RGBA\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303B: // EGL_MIN_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303C: // EGL_MAX_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 1;\r\n        return 1;\r\n      case 0x303D: // EGL_LUMINANCE_SIZE\r\n      case 0x303E: // EGL_ALPHA_MASK_SIZE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303F: // EGL_COLOR_BUFFER_TYPE\r\n        // EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.\r\n        HEAP32[((value)>>2)] = 0x308E;\r\n        return 1;\r\n      case 0x3040: // EGL_RENDERABLE_TYPE\r\n        // A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3042: // EGL_CONFORMANT\r\n        // \"EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API.\"\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      default:\r\n        EGL.setErrorCode(0x3004 /* EGL_BAD_ATTRIBUTE */);\r\n        return 0;\r\n      }\r\n    }\r\n\r\n  function _eglGetDisplay(nativeDisplayType) {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      // Note: As a 'conformant' implementation of EGL, we would prefer to init here only if the user\r\n      //       calls this function with EGL_DEFAULT_DISPLAY. Other display IDs would be preferred to be unsupported\r\n      //       and EGL_NO_DISPLAY returned. Uncomment the following code lines to do this.\r\n      // Instead, an alternative route has been preferred, namely that the Emscripten EGL implementation\r\n      // \"emulates\" X11, and eglGetDisplay is expected to accept/receive a pointer to an X11 Display object.\r\n      // Therefore, be lax and allow anything to be passed in, and return the magic handle to our default EGLDisplay object.\r\n  \r\n  //    if (nativeDisplayType == 0 /* EGL_DEFAULT_DISPLAY */) {\r\n          return 62000; // Magic ID for Emscripten 'default display'\r\n  //    }\r\n  //    else\r\n  //      return 0; // EGL_NO_DISPLAY\r\n    }\r\n\r\n  function _eglGetError() {\r\n      return EGL.errorCode;\r\n    }\r\n\r\n  function _eglInitialize(display, majorVersion, minorVersion) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (majorVersion) {\r\n        HEAP32[((majorVersion)>>2)] = 1; // Advertise EGL Major version: '1'\r\n      }\r\n      if (minorVersion) {\r\n        HEAP32[((minorVersion)>>2)] = 4; // Advertise EGL Minor version: '4'\r\n      }\r\n      EGL.defaultDisplayInitialized = true;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  \r\n  function _eglMakeCurrent(display, draw, read, context) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0 /* EGL_FALSE */;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      if (context != 0 && context != 62004 /* Magic ID for Emscripten EGLContext */) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n      if ((read != 0 && read != 62006) || (draw != 0 && draw != 62006 /* Magic ID for Emscripten 'default surface' */)) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.makeContextCurrent(context ? EGL.context : null);\r\n  \r\n      EGL.currentContext = context;\r\n      EGL.currentDrawSurface = draw;\r\n      EGL.currentReadSurface = read;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1 /* EGL_TRUE */;\r\n    }\r\n\r\n  \r\n  function _eglQueryString(display, name) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.stringCache[name]) return EGL.stringCache[name];\r\n      var ret;\r\n      switch (name) {\r\n        case 0x3053 /* EGL_VENDOR */: ret = stringToNewUTF8(\"Emscripten\"); break;\r\n        case 0x3054 /* EGL_VERSION */: ret = stringToNewUTF8(\"1.4 Emscripten EGL\"); break;\r\n        case 0x3055 /* EGL_EXTENSIONS */:  ret = stringToNewUTF8(\"\"); break; // Currently not supporting any EGL extensions.\r\n        case 0x308D /* EGL_CLIENT_APIS */: ret = stringToNewUTF8(\"OpenGL_ES\"); break;\r\n        default:\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n      }\r\n      EGL.stringCache[name] = ret;\r\n      return ret;\r\n    }\r\n\r\n  function _eglSwapBuffers(dpy, surface) {\r\n  \r\n      if (!EGL.defaultDisplayInitialized) {\r\n        EGL.setErrorCode(0x3001 /* EGL_NOT_INITIALIZED */);\r\n      } else if (!Module.ctx) {\r\n        EGL.setErrorCode(0x3002 /* EGL_BAD_ACCESS */);\r\n      } else if (Module.ctx.isContextLost()) {\r\n        EGL.setErrorCode(0x300E /* EGL_CONTEXT_LOST */);\r\n      } else {\r\n        // According to documentation this does an implicit flush.\r\n        // Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871\r\n        // the flush was removed since this _may_ result in slowing code down.\r\n        //_glFlush();\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1 /* EGL_TRUE */;\r\n      }\r\n      return 0 /* EGL_FALSE */;\r\n    }\r\n\r\n  \r\n  function _eglSwapInterval(display, interval) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (interval == 0) _emscripten_set_main_loop_timing(0, 0);\r\n      else _emscripten_set_main_loop_timing(1, interval);\r\n  \r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  function _eglTerminate(display) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      EGL.currentContext = 0;\r\n      EGL.currentReadSurface = 0;\r\n      EGL.currentDrawSurface = 0;\r\n      EGL.defaultDisplayInitialized = false;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _eglWaitClient() {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n  var _eglWaitGL = _eglWaitClient;\r\n\r\n  function _eglWaitNative(nativeEngineId) {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  var readEmAsmArgsArray = [];\r\n  function readEmAsmArgs(sigPtr, buf) {\r\n      readEmAsmArgsArray.length = 0;\r\n      var ch;\r\n      // Most arguments are i32s, so shift the buffer pointer so it is a plain\r\n      // index into HEAP32.\r\n      buf >>= 2;\r\n      while (ch = HEAPU8[sigPtr++]) {\r\n        // Floats are always passed as doubles, and doubles and int64s take up 8\r\n        // bytes (two 32-bit slots) in memory, align reads to these:\r\n        buf += (ch != 105/*i*/) & buf;\r\n        readEmAsmArgsArray.push(\r\n          ch == 105/*i*/ ? HEAP32[buf] :\r\n         HEAPF64[buf++ >> 1]\r\n        );\r\n        ++buf;\r\n      }\r\n      return readEmAsmArgsArray;\r\n    }\r\n  function runEmAsmFunction(code, sigPtr, argbuf) {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    }\r\n  function _emscripten_asm_const_int(code, sigPtr, argbuf) {\r\n      return runEmAsmFunction(code, sigPtr, argbuf);\r\n    }\r\n\r\n  function runMainThreadEmAsm(code, sigPtr, argbuf, sync) {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    }\r\n  function _emscripten_asm_const_int_sync_on_main_thread(code, sigPtr, argbuf) {\r\n      return runMainThreadEmAsm(code, sigPtr, argbuf, 1);\r\n    }\r\n\r\n  function _emscripten_date_now() {\r\n      return Date.now();\r\n    }\r\n\r\n  function withStackSave(f) {\r\n      var stack = stackSave();\r\n      var ret = f();\r\n      stackRestore(stack);\r\n      return ret;\r\n    }\r\n  var JSEvents = {inEventHandler:0,removeAllEventListeners:function() {\r\n        for (var i = JSEvents.eventHandlers.length-1; i >= 0; --i) {\r\n          JSEvents._removeHandler(i);\r\n        }\r\n        JSEvents.eventHandlers = [];\r\n        JSEvents.deferredCalls = [];\r\n      },registerRemoveEventListeners:function() {\r\n        if (!JSEvents.removeEventListenersRegistered) {\r\n          __ATEXIT__.push(JSEvents.removeAllEventListeners);\r\n          JSEvents.removeEventListenersRegistered = true;\r\n        }\r\n      },deferredCalls:[],deferCall:function(targetFunction, precedence, argsList) {\r\n        function arraysHaveEqualContent(arrA, arrB) {\r\n          if (arrA.length != arrB.length) return false;\r\n  \r\n          for (var i in arrA) {\r\n            if (arrA[i] != arrB[i]) return false;\r\n          }\r\n          return true;\r\n        }\r\n        // Test if the given call was already queued, and if so, don't add it again.\r\n        for (var i in JSEvents.deferredCalls) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\r\n            return;\r\n          }\r\n        }\r\n        JSEvents.deferredCalls.push({\r\n          targetFunction: targetFunction,\r\n          precedence: precedence,\r\n          argsList: argsList\r\n        });\r\n  \r\n        JSEvents.deferredCalls.sort(function(x,y) { return x.precedence < y.precedence; });\r\n      },removeDeferredCalls:function(targetFunction) {\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\r\n            JSEvents.deferredCalls.splice(i, 1);\r\n            --i;\r\n          }\r\n        }\r\n      },canPerformEventHandlerRequests:function() {\r\n        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\r\n      },runDeferredCalls:function() {\r\n        if (!JSEvents.canPerformEventHandlerRequests()) {\r\n          return;\r\n        }\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          JSEvents.deferredCalls.splice(i, 1);\r\n          --i;\r\n          call.targetFunction.apply(null, call.argsList);\r\n        }\r\n      },eventHandlers:[],removeAllHandlersOnTarget:function(target, eventTypeString) {\r\n        for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n          if (JSEvents.eventHandlers[i].target == target && \r\n            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\r\n             JSEvents._removeHandler(i--);\r\n           }\r\n        }\r\n      },_removeHandler:function(i) {\r\n        var h = JSEvents.eventHandlers[i];\r\n        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\r\n        JSEvents.eventHandlers.splice(i, 1);\r\n      },registerOrRemoveHandler:function(eventHandler) {\r\n        if (!eventHandler.target) {\r\n          return -4;\r\n        }\r\n        var jsEventHandler = function jsEventHandler(event) {\r\n          // Increment nesting count for the event handler.\r\n          ++JSEvents.inEventHandler;\r\n          JSEvents.currentEventHandler = eventHandler;\r\n          // Process any old deferred calls the user has placed.\r\n          JSEvents.runDeferredCalls();\r\n          // Process the actual event, calls back to user C code handler.\r\n          eventHandler.handlerFunc(event);\r\n          // Process any new deferred calls that were placed right now from this event handler.\r\n          JSEvents.runDeferredCalls();\r\n          // Out of event handler - restore nesting count.\r\n          --JSEvents.inEventHandler;\r\n        };\r\n        \r\n        if (eventHandler.callbackfunc) {\r\n          eventHandler.eventListenerFunc = jsEventHandler;\r\n          eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\r\n          JSEvents.eventHandlers.push(eventHandler);\r\n          JSEvents.registerRemoveEventListeners();\r\n        } else {\r\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n            if (JSEvents.eventHandlers[i].target == eventHandler.target\r\n             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\r\n               JSEvents._removeHandler(i--);\r\n             }\r\n          }\r\n        }\r\n        return 0;\r\n      },getNodeNameForTarget:function(target) {\r\n        if (!target) return '';\r\n        if (target == window) return '#window';\r\n        if (target == screen) return '#screen';\r\n        return (target && target.nodeName) ? target.nodeName : '';\r\n      },fullscreenEnabled:function() {\r\n        return document.fullscreenEnabled\r\n        // Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.\r\n        // TODO: If Safari at some point ships with unprefixed version, update the version check above.\r\n        || document.webkitFullscreenEnabled\r\n         ;\r\n      }};\r\n  \r\n  function setLetterbox(element, topBottom, leftRight) {\r\n        // Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.\r\n        element.style.paddingLeft = element.style.paddingRight = leftRight + 'px';\r\n        element.style.paddingTop = element.style.paddingBottom = topBottom + 'px';\r\n    }\r\n  \r\n  function hideEverythingExceptGivenElement(onlyVisibleElement) {\r\n      var child = onlyVisibleElement;\r\n      var parent = child.parentNode;\r\n      var hiddenElements = [];\r\n      while (child != document.body) {\r\n        var children = parent.children;\r\n        for (var i = 0; i < children.length; ++i) {\r\n          if (children[i] != child) {\r\n            hiddenElements.push({ node: children[i], displayState: children[i].style.display });\r\n            children[i].style.display = 'none';\r\n          }\r\n        }\r\n        child = parent;\r\n        parent = parent.parentNode;\r\n      }\r\n      return hiddenElements;\r\n    }\r\n  \r\n  var restoreOldWindowedStyle = null;\r\n  \r\n  \r\n  \r\n  function maybeCStringToJsString(cString) {\r\n      // \"cString > 2\" checks if the input is a number, and isn't of the special\r\n      // values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).\r\n      // In other words, if cString > 2 then it's a pointer to a valid place in\r\n      // memory, and points to a C string.\r\n      return cString > 2 ? UTF8ToString(cString) : cString;\r\n    }\r\n  \r\n  var specialHTMLTargets = [0, document, window];\r\n  function findEventTarget(target) {\r\n      target = maybeCStringToJsString(target);\r\n      var domElement = specialHTMLTargets[target] || document.querySelector(target);\r\n      return domElement;\r\n    }\r\n  function findCanvasEventTarget(target) { return findEventTarget(target); }\r\n  function _emscripten_get_canvas_element_size(target, width, height) {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      HEAP32[((width)>>2)] = canvas.width;\r\n      HEAP32[((height)>>2)] = canvas.height;\r\n    }\r\n  \r\n  \r\n  \r\n  function stringToUTF8OnStack(str) {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = stackAlloc(size);\r\n      stringToUTF8(str, ret, size);\r\n      return ret;\r\n    }\r\n  function getCanvasElementSize(target) {\r\n      return withStackSave(function() {\r\n        var w = stackAlloc(8);\r\n        var h = w + 4;\r\n  \r\n        var targetInt = stringToUTF8OnStack(target.id);\r\n        var ret = _emscripten_get_canvas_element_size(targetInt, w, h);\r\n        var size = [HEAP32[((w)>>2)], HEAP32[((h)>>2)]];\r\n        return size;\r\n      });\r\n    }\r\n  \r\n  \r\n  function _emscripten_set_canvas_element_size(target, width, height) {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      return 0;\r\n    }\r\n  \r\n  \r\n  function setCanvasElementSize(target, width, height) {\r\n      if (!target.controlTransferredOffscreen) {\r\n        target.width = width;\r\n        target.height = height;\r\n      } else {\r\n        // This function is being called from high-level JavaScript code instead of asm.js/Wasm,\r\n        // and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.\r\n        withStackSave(function() {\r\n          var targetInt = stringToUTF8OnStack(target.id);\r\n          _emscripten_set_canvas_element_size(targetInt, width, height);\r\n        });\r\n      }\r\n    }\r\n  function registerRestoreOldStyle(canvas) {\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var oldWidth = canvasSize[0];\r\n      var oldHeight = canvasSize[1];\r\n      var oldCssWidth = canvas.style.width;\r\n      var oldCssHeight = canvas.style.height;\r\n      var oldBackgroundColor = canvas.style.backgroundColor; // Chrome reads color from here.\r\n      var oldDocumentBackgroundColor = document.body.style.backgroundColor; // IE11 reads color from here.\r\n      // Firefox always has black background color.\r\n      var oldPaddingLeft = canvas.style.paddingLeft; // Chrome, FF, Safari\r\n      var oldPaddingRight = canvas.style.paddingRight;\r\n      var oldPaddingTop = canvas.style.paddingTop;\r\n      var oldPaddingBottom = canvas.style.paddingBottom;\r\n      var oldMarginLeft = canvas.style.marginLeft; // IE11\r\n      var oldMarginRight = canvas.style.marginRight;\r\n      var oldMarginTop = canvas.style.marginTop;\r\n      var oldMarginBottom = canvas.style.marginBottom;\r\n      var oldDocumentBodyMargin = document.body.style.margin;\r\n      var oldDocumentOverflow = document.documentElement.style.overflow; // Chrome, Firefox\r\n      var oldDocumentScroll = document.body.scroll; // IE\r\n      var oldImageRendering = canvas.style.imageRendering;\r\n  \r\n      function restoreOldStyle() {\r\n        var fullscreenElement = document.fullscreenElement\r\n          || document.webkitFullscreenElement\r\n          ;\r\n        if (!fullscreenElement) {\r\n          document.removeEventListener('fullscreenchange', restoreOldStyle);\r\n  \r\n          // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n          // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n          document.removeEventListener('webkitfullscreenchange', restoreOldStyle);\r\n  \r\n          setCanvasElementSize(canvas, oldWidth, oldHeight);\r\n  \r\n          canvas.style.width = oldCssWidth;\r\n          canvas.style.height = oldCssHeight;\r\n          canvas.style.backgroundColor = oldBackgroundColor; // Chrome\r\n          // IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color\r\n          // before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user\r\n          // had explicitly set so subsequent fullscreen transitions would not set background color properly.\r\n          if (!oldDocumentBackgroundColor) document.body.style.backgroundColor = 'white';\r\n          document.body.style.backgroundColor = oldDocumentBackgroundColor; // IE11\r\n          canvas.style.paddingLeft = oldPaddingLeft; // Chrome, FF, Safari\r\n          canvas.style.paddingRight = oldPaddingRight;\r\n          canvas.style.paddingTop = oldPaddingTop;\r\n          canvas.style.paddingBottom = oldPaddingBottom;\r\n          canvas.style.marginLeft = oldMarginLeft; // IE11\r\n          canvas.style.marginRight = oldMarginRight;\r\n          canvas.style.marginTop = oldMarginTop;\r\n          canvas.style.marginBottom = oldMarginBottom;\r\n          document.body.style.margin = oldDocumentBodyMargin;\r\n          document.documentElement.style.overflow = oldDocumentOverflow; // Chrome, Firefox\r\n          document.body.scroll = oldDocumentScroll; // IE\r\n          canvas.style.imageRendering = oldImageRendering;\r\n          if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, oldWidth, oldHeight);\r\n  \r\n          if (currentFullscreenStrategy.canvasResizedCallback) {\r\n            ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n          }\r\n        }\r\n      }\r\n      document.addEventListener('fullscreenchange', restoreOldStyle);\r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      document.addEventListener('webkitfullscreenchange', restoreOldStyle);\r\n      return restoreOldStyle;\r\n    }\r\n  \r\n  function restoreHiddenElements(hiddenElements) {\r\n      for (var i = 0; i < hiddenElements.length; ++i) {\r\n        hiddenElements[i].node.style.display = hiddenElements[i].displayState;\r\n      }\r\n    }\r\n  \r\n  var currentFullscreenStrategy = {};\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  /** @suppress {checkTypes} */\r\n  function jstoi_q(str) {\r\n      return parseInt(str);\r\n    }\r\n  function softFullscreenResizeWebGLRenderTarget() {\r\n      var dpr = devicePixelRatio;\r\n      var inHiDPIFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode == 2;\r\n      var inAspectRatioFixedFullscreenMode = currentFullscreenStrategy.scaleMode == 2;\r\n      var inPixelPerfectFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode != 0;\r\n      var inCenteredWithoutScalingFullscreenMode = currentFullscreenStrategy.scaleMode == 3;\r\n      var screenWidth = inHiDPIFullscreenMode ? Math.round(innerWidth*dpr) : innerWidth;\r\n      var screenHeight = inHiDPIFullscreenMode ? Math.round(innerHeight*dpr) : innerHeight;\r\n      var w = screenWidth;\r\n      var h = screenHeight;\r\n      var canvas = currentFullscreenStrategy.target;\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var x = canvasSize[0];\r\n      var y = canvasSize[1];\r\n      var topMargin;\r\n  \r\n      if (inAspectRatioFixedFullscreenMode) {\r\n        if (w*y < x*h) h = (w * y / x) | 0;\r\n        else if (w*y > x*h) w = (h * x / y) | 0;\r\n        topMargin = ((screenHeight - h) / 2) | 0;\r\n      }\r\n  \r\n      if (inPixelPerfectFullscreenMode) {\r\n        setCanvasElementSize(canvas, w, h);\r\n        if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, w, h);\r\n      }\r\n  \r\n      // Back to CSS pixels.\r\n      if (inHiDPIFullscreenMode) {\r\n        topMargin /= dpr;\r\n        w /= dpr;\r\n        h /= dpr;\r\n        // Round to nearest 4 digits of precision.\r\n        w = Math.round(w*1e4)/1e4;\r\n        h = Math.round(h*1e4)/1e4;\r\n        topMargin = Math.round(topMargin*1e4)/1e4;\r\n      }\r\n  \r\n      if (inCenteredWithoutScalingFullscreenMode) {\r\n        var t = (innerHeight - jstoi_q(canvas.style.height)) / 2;\r\n        var b = (innerWidth - jstoi_q(canvas.style.width)) / 2;\r\n        setLetterbox(canvas, t, b);\r\n      } else {\r\n        canvas.style.width = w + 'px';\r\n        canvas.style.height = h + 'px';\r\n        var b = (innerWidth - w) / 2;\r\n        setLetterbox(canvas, topMargin, b);\r\n      }\r\n  \r\n      if (!inCenteredWithoutScalingFullscreenMode && currentFullscreenStrategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n      }\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  function getBoundingClientRect(e) {\r\n      return specialHTMLTargets.indexOf(e) < 0 ? e.getBoundingClientRect() : {'left':0,'top':0};\r\n    }\r\n  function JSEvents_resizeCanvasForFullscreen(target, strategy) {\r\n      var restoreOldStyle = registerRestoreOldStyle(target);\r\n      var cssWidth = strategy.softFullscreen ? innerWidth : screen.width;\r\n      var cssHeight = strategy.softFullscreen ? innerHeight : screen.height;\r\n      var rect = getBoundingClientRect(target);\r\n      var windowedCssWidth = rect.width;\r\n      var windowedCssHeight = rect.height;\r\n      var canvasSize = getCanvasElementSize(target);\r\n      var windowedRttWidth = canvasSize[0];\r\n      var windowedRttHeight = canvasSize[1];\r\n  \r\n      if (strategy.scaleMode == 3) {\r\n        setLetterbox(target, (cssHeight - windowedCssHeight) / 2, (cssWidth - windowedCssWidth) / 2);\r\n        cssWidth = windowedCssWidth;\r\n        cssHeight = windowedCssHeight;\r\n      } else if (strategy.scaleMode == 2) {\r\n        if (cssWidth*windowedRttHeight < windowedRttWidth*cssHeight) {\r\n          var desiredCssHeight = windowedRttHeight * cssWidth / windowedRttWidth;\r\n          setLetterbox(target, (cssHeight - desiredCssHeight) / 2, 0);\r\n          cssHeight = desiredCssHeight;\r\n        } else {\r\n          var desiredCssWidth = windowedRttWidth * cssHeight / windowedRttHeight;\r\n          setLetterbox(target, 0, (cssWidth - desiredCssWidth) / 2);\r\n          cssWidth = desiredCssWidth;\r\n        }\r\n      }\r\n  \r\n      // If we are adding padding, must choose a background color or otherwise Chrome will give the\r\n      // padding a default white color. Do it only if user has not customized their own background color.\r\n      if (!target.style.backgroundColor) target.style.backgroundColor = 'black';\r\n      // IE11 does the same, but requires the color to be set in the document body.\r\n      if (!document.body.style.backgroundColor) document.body.style.backgroundColor = 'black'; // IE11\r\n      // Firefox always shows black letterboxes independent of style color.\r\n  \r\n      target.style.width = cssWidth + 'px';\r\n      target.style.height = cssHeight + 'px';\r\n  \r\n      if (strategy.filteringMode == 1) {\r\n        target.style.imageRendering = 'optimizeSpeed';\r\n        target.style.imageRendering = '-moz-crisp-edges';\r\n        target.style.imageRendering = '-o-crisp-edges';\r\n        target.style.imageRendering = '-webkit-optimize-contrast';\r\n        target.style.imageRendering = 'optimize-contrast';\r\n        target.style.imageRendering = 'crisp-edges';\r\n        target.style.imageRendering = 'pixelated';\r\n      }\r\n  \r\n      var dpiScale = (strategy.canvasResolutionScaleMode == 2) ? devicePixelRatio : 1;\r\n      if (strategy.canvasResolutionScaleMode != 0) {\r\n        var newWidth = (cssWidth * dpiScale)|0;\r\n        var newHeight = (cssHeight * dpiScale)|0;\r\n        setCanvasElementSize(target, newWidth, newHeight);\r\n        if (target.GLctxObject) target.GLctxObject.GLctx.viewport(0, 0, newWidth, newHeight);\r\n      }\r\n      return restoreOldStyle;\r\n    }\r\n  \r\n  function _emscripten_enter_soft_fullscreen(target, fullscreenStrategy) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var strategy = {\r\n          scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n          canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n          filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n          canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n          canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)],\r\n          target: target,\r\n          softFullscreen: true\r\n      };\r\n  \r\n      var restoreOldStyle = JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n  \r\n      document.documentElement.style.overflow = 'hidden';  // Firefox, Chrome\r\n      document.body.scroll = \"no\"; // IE11\r\n      document.body.style.margin = '0px'; // Override default document margin area on all browsers.\r\n  \r\n      var hiddenElements = hideEverythingExceptGivenElement(target);\r\n  \r\n      function restoreWindowedState() {\r\n        restoreOldStyle();\r\n        restoreHiddenElements(hiddenElements);\r\n        removeEventListener('resize', softFullscreenResizeWebGLRenderTarget);\r\n        if (strategy.canvasResizedCallback) {\r\n          ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n        }\r\n        currentFullscreenStrategy = 0;\r\n      }\r\n      restoreOldWindowedStyle = restoreWindowedState;\r\n      currentFullscreenStrategy = strategy;\r\n      addEventListener('resize', softFullscreenResizeWebGLRenderTarget);\r\n  \r\n      // Inform the caller that the canvas size has changed.\r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function JSEvents_requestFullscreen(target, strategy) {\r\n      // EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.\r\n      if (strategy.scaleMode != 0 || strategy.canvasResolutionScaleMode != 0) {\r\n        JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n      }\r\n  \r\n      if (target.requestFullscreen) {\r\n        target.requestFullscreen();\r\n      } else if (target.webkitRequestFullscreen) {\r\n        target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n      } else {\r\n        return JSEvents.fullscreenEnabled() ? -3 : -1;\r\n      }\r\n  \r\n      currentFullscreenStrategy = strategy;\r\n  \r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n  \r\n  function _emscripten_exit_fullscreen() {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);\r\n  \r\n      var d = specialHTMLTargets[1];\r\n      if (d.exitFullscreen) {\r\n        d.fullscreenElement && d.exitFullscreen();\r\n      } else if (d.webkitExitFullscreen) {\r\n        d.webkitFullscreenElement && d.webkitExitFullscreen();\r\n      } else {\r\n        return -1;\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  function requestPointerLock(target) {\r\n      if (target.requestPointerLock) {\r\n        target.requestPointerLock();\r\n      } else {\r\n        // document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,\r\n        // or if the whole browser just doesn't support the feature.\r\n        if (document.body.requestPointerLock\r\n          ) {\r\n          return -3;\r\n        }\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n  function _emscripten_exit_pointerlock() {\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(requestPointerLock);\r\n  \r\n      if (document.exitPointerLock) {\r\n        document.exitPointerLock();\r\n      } else {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_exit_soft_fullscreen() {\r\n      if (restoreOldWindowedStyle) restoreOldWindowedStyle();\r\n      restoreOldWindowedStyle = null;\r\n  \r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_get_device_pixel_ratio() {\r\n      return devicePixelRatio;\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_get_element_css_size(target, width, height) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAPF64[((width)>>3)] = rect.width;\r\n      HEAPF64[((height)>>3)] = rect.height;\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  function fillGamepadEventData(eventStruct, e) {\r\n      HEAPF64[((eventStruct)>>3)] = e.timestamp;\r\n      for (var i = 0; i < e.axes.length; ++i) {\r\n        HEAPF64[(((eventStruct+i*8)+(16))>>3)] = e.axes[i];\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i].value;\r\n        } else {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i];\r\n        }\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i].pressed;\r\n        } else {\r\n          // Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:\r\n          /** @suppress {checkTypes} */\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i] == 1;\r\n        }\r\n      }\r\n      HEAP32[(((eventStruct)+(1296))>>2)] = e.connected;\r\n      HEAP32[(((eventStruct)+(1300))>>2)] = e.index;\r\n      HEAP32[(((eventStruct)+(8))>>2)] = e.axes.length;\r\n      HEAP32[(((eventStruct)+(12))>>2)] = e.buttons.length;\r\n      stringToUTF8(e.id, eventStruct + 1304, 64);\r\n      stringToUTF8(e.mapping, eventStruct + 1368, 64);\r\n    }\r\n  function _emscripten_get_gamepad_status(index, gamepadState) {\r\n  \r\n      // INVALID_PARAM is returned on a Gamepad index that never was there.\r\n      if (index < 0 || index >= JSEvents.lastGamepadState.length) return -5;\r\n  \r\n      // NO_DATA is returned on a Gamepad index that was removed.\r\n      // For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.\r\n      // This is because gamepads must keep their original position in the array.\r\n      // For example, removing the first of two gamepads produces [null/undefined/false, gamepad].\r\n      if (!JSEvents.lastGamepadState[index]) return -7;\r\n  \r\n      fillGamepadEventData(gamepadState, JSEvents.lastGamepadState[index]);\r\n      return 0;\r\n    }\r\n\r\n\r\n  function _emscripten_get_num_gamepads() {\r\n      // N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.\r\n      // Otherwise the following line will throw an exception.\r\n      return JSEvents.lastGamepadState.length;\r\n    }\r\n\r\n  function _emscripten_get_screen_size(width, height) {\r\n      HEAP32[((width)>>2)] = screen.width;\r\n      HEAP32[((height)>>2)] = screen.height;\r\n    }\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }\r\n  var _emscripten_glActiveTexture = _glActiveTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glAttachShader(program, shader) {\r\n      GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glAttachShader = _glAttachShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginQuery(target, id) {\r\n      GLctx.beginQuery(target, GL.queries[id]);\r\n    }\r\n  var _emscripten_glBeginQuery = _glBeginQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginQueryEXT(target, id) {\r\n      GLctx.disjointTimerQueryExt['beginQueryEXT'](target, GL.queries[id]);\r\n    }\r\n  var _emscripten_glBeginQueryEXT = _glBeginQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginTransformFeedback(x0) { GLctx.beginTransformFeedback(x0) }\r\n  var _emscripten_glBeginTransformFeedback = _glBeginTransformFeedback;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glBindAttribLocation(program, index, name) {\r\n      GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\r\n    }\r\n  var _emscripten_glBindAttribLocation = _glBindAttribLocation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBuffer(target, buffer) {\r\n      if (target == 0x8892 /*GL_ARRAY_BUFFER*/) {\r\n        GLctx.currentArrayBufferBinding = buffer;\r\n      } else if (target == 0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/) {\r\n        GLctx.currentElementArrayBufferBinding = buffer;\r\n      }\r\n  \r\n      if (target == 0x88EB /*GL_PIXEL_PACK_BUFFER*/) {\r\n        // In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that binding point is non-null to know what is\r\n        // the proper API function to call.\r\n        GLctx.currentPixelPackBufferBinding = buffer;\r\n      } else if (target == 0x88EC /*GL_PIXEL_UNPACK_BUFFER*/) {\r\n        // In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to\r\n        // use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that\r\n        // binding point is non-null to know what is the proper API function to\r\n        // call.\r\n        GLctx.currentPixelUnpackBufferBinding = buffer;\r\n      }\r\n      GLctx.bindBuffer(target, GL.buffers[buffer]);\r\n    }\r\n  var _emscripten_glBindBuffer = _glBindBuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBufferBase(target, index, buffer) {\r\n      GLctx.bindBufferBase(target, index, GL.buffers[buffer]);\r\n    }\r\n  var _emscripten_glBindBufferBase = _glBindBufferBase;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBufferRange(target, index, buffer, offset, ptrsize) {\r\n      GLctx.bindBufferRange(target, index, GL.buffers[buffer], offset, ptrsize);\r\n    }\r\n  var _emscripten_glBindBufferRange = _glBindBufferRange;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindFramebuffer(target, framebuffer) {\r\n  \r\n      GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\r\n  \r\n    }\r\n  var _emscripten_glBindFramebuffer = _glBindFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindRenderbuffer(target, renderbuffer) {\r\n      GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\r\n    }\r\n  var _emscripten_glBindRenderbuffer = _glBindRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindSampler(unit, sampler) {\r\n      GLctx.bindSampler(unit, GL.samplers[sampler]);\r\n    }\r\n  var _emscripten_glBindSampler = _glBindSampler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindTexture(target, texture) {\r\n      GLctx.bindTexture(target, GL.textures[texture]);\r\n    }\r\n  var _emscripten_glBindTexture = _glBindTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindTransformFeedback(target, id) {\r\n      GLctx.bindTransformFeedback(target, GL.transformFeedbacks[id]);\r\n    }\r\n  var _emscripten_glBindTransformFeedback = _glBindTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindVertexArray(vao) {\r\n      GLctx.bindVertexArray(GL.vaos[vao]);\r\n      var ibo = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n      GLctx.currentElementArrayBufferBinding = ibo ? (ibo.name | 0) : 0;\r\n    }\r\n  var _emscripten_glBindVertexArray = _glBindVertexArray;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glBindVertexArrayOES = _glBindVertexArray;\r\n  var _emscripten_glBindVertexArrayOES = _glBindVertexArrayOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendColor(x0, x1, x2, x3) { GLctx.blendColor(x0, x1, x2, x3) }\r\n  var _emscripten_glBlendColor = _glBlendColor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendEquation(x0) { GLctx.blendEquation(x0) }\r\n  var _emscripten_glBlendEquation = _glBlendEquation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendEquationSeparate(x0, x1) { GLctx.blendEquationSeparate(x0, x1) }\r\n  var _emscripten_glBlendEquationSeparate = _glBlendEquationSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }\r\n  var _emscripten_glBlendFunc = _glBlendFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendFuncSeparate(x0, x1, x2, x3) { GLctx.blendFuncSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glBlendFuncSeparate = _glBlendFuncSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) { GLctx.blitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) }\r\n  var _emscripten_glBlitFramebuffer = _glBlitFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBufferData(target, size, data, usage) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        // If size is zero, WebGL would interpret uploading the whole input arraybuffer (starting from given offset), which would\r\n        // not make sense in WebAssembly, so avoid uploading if size is zero. However we must still call bufferData to establish a\r\n        // backing storage of zero bytes.\r\n        if (data && size) {\r\n          GLctx.bufferData(target, HEAPU8, usage, data, size);\r\n        } else {\r\n          GLctx.bufferData(target, size, usage);\r\n        }\r\n      } else {\r\n        // N.b. here first form specifies a heap subarray, second form an integer size, so the ?: code here is polymorphic. It is advised to avoid\r\n        // randomly mixing both uses in calling code, to avoid any potential JS engine JIT issues.\r\n        GLctx.bufferData(target, data ? HEAPU8.subarray(data, data+size) : size, usage);\r\n      }\r\n    }\r\n  var _emscripten_glBufferData = _glBufferData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBufferSubData(target, offset, size, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        size && GLctx.bufferSubData(target, offset, HEAPU8, data, size);\r\n        return;\r\n      }\r\n      GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));\r\n    }\r\n  var _emscripten_glBufferSubData = _glBufferSubData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCheckFramebufferStatus(x0) { return GLctx.checkFramebufferStatus(x0) }\r\n  var _emscripten_glCheckFramebufferStatus = _glCheckFramebufferStatus;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClear(x0) { GLctx.clear(x0) }\r\n  var _emscripten_glClear = _glClear;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferfi(x0, x1, x2, x3) { GLctx.clearBufferfi(x0, x1, x2, x3) }\r\n  var _emscripten_glClearBufferfi = _glClearBufferfi;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferfv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferfv(buffer, drawbuffer, HEAPF32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferfv = _glClearBufferfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferiv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferiv(buffer, drawbuffer, HEAP32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferiv = _glClearBufferiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferuiv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferuiv(buffer, drawbuffer, HEAPU32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferuiv = _glClearBufferuiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }\r\n  var _emscripten_glClearColor = _glClearColor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearDepthf(x0) { GLctx.clearDepth(x0) }\r\n  var _emscripten_glClearDepthf = _glClearDepthf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearStencil(x0) { GLctx.clearStencil(x0) }\r\n  var _emscripten_glClearStencil = _glClearStencil;\r\n\r\n  function convertI32PairToI53(lo, hi) {\r\n      return (lo >>> 0) + hi * 4294967296;\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glClientWaitSync(sync, flags, timeout_low, timeout_high) {\r\n      // WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.\r\n      // In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.\r\n      // Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)\r\n      // See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      return GLctx.clientWaitSync(GL.syncs[sync], flags, timeout);\r\n    }\r\n  var _emscripten_glClientWaitSync = _glClientWaitSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glColorMask(red, green, blue, alpha) {\r\n      GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\r\n    }\r\n  var _emscripten_glColorMask = _glColorMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompileShader(shader) {\r\n      GLctx.compileShader(GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glCompileShader = _glCompileShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data);\r\n        } else {\r\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    }\r\n  var _emscripten_glCompressedTexImage2D = _glCompressedTexImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data);\r\n      } else {\r\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, HEAPU8, data, imageSize);\r\n      }\r\n    }\r\n  var _emscripten_glCompressedTexImage3D = _glCompressedTexImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\r\n        } else {\r\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    }\r\n  var _emscripten_glCompressedTexSubImage2D = _glCompressedTexSubImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\r\n      } else {\r\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, HEAPU8, data, imageSize);\r\n      }\r\n    }\r\n  var _emscripten_glCompressedTexSubImage3D = _glCompressedTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyBufferSubData(x0, x1, x2, x3, x4) { GLctx.copyBufferSubData(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glCopyBufferSubData = _glCopyBufferSubData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\r\n  var _emscripten_glCopyTexImage2D = _glCopyTexImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\r\n  var _emscripten_glCopyTexSubImage2D = _glCopyTexSubImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) { GLctx.copyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) }\r\n  var _emscripten_glCopyTexSubImage3D = _glCopyTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCreateProgram() {\r\n      var id = GL.getNewId(GL.programs);\r\n      var program = GLctx.createProgram();\r\n      // Store additional information needed for each shader program:\r\n      program.name = id;\r\n      // Lazy cache results of glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)\r\n      program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\r\n      program.uniformIdCounter = 1;\r\n      GL.programs[id] = program;\r\n      return id;\r\n    }\r\n  var _emscripten_glCreateProgram = _glCreateProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCreateShader(shaderType) {\r\n      var id = GL.getNewId(GL.shaders);\r\n      GL.shaders[id] = GLctx.createShader(shaderType);\r\n  \r\n      return id;\r\n    }\r\n  var _emscripten_glCreateShader = _glCreateShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCullFace(x0) { GLctx.cullFace(x0) }\r\n  var _emscripten_glCullFace = _glCullFace;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteBuffers(n, buffers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((buffers)+(i*4))>>2)];\r\n        var buffer = GL.buffers[id];\r\n  \r\n        // From spec: \"glDeleteBuffers silently ignores 0's and names that do not\r\n        // correspond to existing buffer objects.\"\r\n        if (!buffer) continue;\r\n  \r\n        GLctx.deleteBuffer(buffer);\r\n        buffer.name = 0;\r\n        GL.buffers[id] = null;\r\n  \r\n        if (id == GLctx.currentArrayBufferBinding) GLctx.currentArrayBufferBinding = 0;\r\n        if (id == GLctx.currentElementArrayBufferBinding) GLctx.currentElementArrayBufferBinding = 0;\r\n        if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\r\n        if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteBuffers = _glDeleteBuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteFramebuffers(n, framebuffers) {\r\n      for (var i = 0; i < n; ++i) {\r\n        var id = HEAP32[(((framebuffers)+(i*4))>>2)];\r\n        var framebuffer = GL.framebuffers[id];\r\n        if (!framebuffer) continue; // GL spec: \"glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects\".\r\n        GLctx.deleteFramebuffer(framebuffer);\r\n        framebuffer.name = 0;\r\n        GL.framebuffers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteFramebuffers = _glDeleteFramebuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteProgram(id) {\r\n      if (!id) return;\r\n      var program = GL.programs[id];\r\n      if (!program) { // glDeleteProgram actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteProgram(program);\r\n      program.name = 0;\r\n      GL.programs[id] = null;\r\n    }\r\n  var _emscripten_glDeleteProgram = _glDeleteProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteQueries(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.deleteQuery(query);\r\n        GL.queries[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteQueries = _glDeleteQueries;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteQueriesEXT(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);\r\n        GL.queries[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteQueriesEXT = _glDeleteQueriesEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteRenderbuffers(n, renderbuffers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];\r\n        var renderbuffer = GL.renderbuffers[id];\r\n        if (!renderbuffer) continue; // GL spec: \"glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects\".\r\n        GLctx.deleteRenderbuffer(renderbuffer);\r\n        renderbuffer.name = 0;\r\n        GL.renderbuffers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteRenderbuffers = _glDeleteRenderbuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteSamplers(n, samplers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((samplers)+(i*4))>>2)];\r\n        var sampler = GL.samplers[id];\r\n        if (!sampler) continue;\r\n        GLctx.deleteSampler(sampler);\r\n        sampler.name = 0;\r\n        GL.samplers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteSamplers = _glDeleteSamplers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteShader(id) {\r\n      if (!id) return;\r\n      var shader = GL.shaders[id];\r\n      if (!shader) { // glDeleteShader actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteShader(shader);\r\n      GL.shaders[id] = null;\r\n    }\r\n  var _emscripten_glDeleteShader = _glDeleteShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteSync(id) {\r\n      if (!id) return;\r\n      var sync = GL.syncs[id];\r\n      if (!sync) { // glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteSync(sync);\r\n      sync.name = 0;\r\n      GL.syncs[id] = null;\r\n    }\r\n  var _emscripten_glDeleteSync = _glDeleteSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteTextures(n, textures) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((textures)+(i*4))>>2)];\r\n        var texture = GL.textures[id];\r\n        if (!texture) continue; // GL spec: \"glDeleteTextures silently ignores 0s and names that do not correspond to existing textures\".\r\n        GLctx.deleteTexture(texture);\r\n        texture.name = 0;\r\n        GL.textures[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteTextures = _glDeleteTextures;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteTransformFeedbacks(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var transformFeedback = GL.transformFeedbacks[id];\r\n        if (!transformFeedback) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.deleteTransformFeedback(transformFeedback);\r\n        transformFeedback.name = 0;\r\n        GL.transformFeedbacks[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteTransformFeedbacks = _glDeleteTransformFeedbacks;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteVertexArrays(n, vaos) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\r\n        GLctx.deleteVertexArray(GL.vaos[id]);\r\n        GL.vaos[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteVertexArrays = _glDeleteVertexArrays;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDeleteVertexArraysOES = _glDeleteVertexArrays;\r\n  var _emscripten_glDeleteVertexArraysOES = _glDeleteVertexArraysOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthFunc(x0) { GLctx.depthFunc(x0) }\r\n  var _emscripten_glDepthFunc = _glDepthFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthMask(flag) {\r\n      GLctx.depthMask(!!flag);\r\n    }\r\n  var _emscripten_glDepthMask = _glDepthMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthRangef(x0, x1) { GLctx.depthRange(x0, x1) }\r\n  var _emscripten_glDepthRangef = _glDepthRangef;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDetachShader(program, shader) {\r\n      GLctx.detachShader(GL.programs[program], GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glDetachShader = _glDetachShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDisable(x0) { GLctx.disable(x0) }\r\n  var _emscripten_glDisable = _glDisable;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDisableVertexAttribArray(index) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = false;\r\n      GLctx.disableVertexAttribArray(index);\r\n    }\r\n  var _emscripten_glDisableVertexAttribArray = _glDisableVertexAttribArray;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawArrays(mode, first, count) {\r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(first + count);\r\n  \r\n      GLctx.drawArrays(mode, first, count);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings();\r\n    }\r\n  var _emscripten_glDrawArrays = _glDrawArrays;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawArraysInstanced(mode, first, count, primcount) {\r\n      GLctx.drawArraysInstanced(mode, first, count, primcount);\r\n    }\r\n  var _emscripten_glDrawArraysInstanced = _glDrawArraysInstanced;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedANGLE = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedANGLE = _glDrawArraysInstancedANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedARB = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedARB = _glDrawArraysInstancedARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedEXT = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedEXT = _glDrawArraysInstancedEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedNV = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedNV = _glDrawArraysInstancedNV;\r\n\r\n  var tempFixedLengthArray = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glDrawBuffers(n, bufs) {\r\n  \r\n      var bufArray = tempFixedLengthArray[n];\r\n      for (var i = 0; i < n; i++) {\r\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.drawBuffers(bufArray);\r\n    }\r\n  var _emscripten_glDrawBuffers = _glDrawBuffers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffersEXT = _glDrawBuffers;\r\n  var _emscripten_glDrawBuffersEXT = _glDrawBuffersEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffersWEBGL = _glDrawBuffers;\r\n  var _emscripten_glDrawBuffersWEBGL = _glDrawBuffersWEBGL;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawElements(mode, count, type, indices) {\r\n      var buf;\r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        var size = GL.calcBufLength(1, type, 0, count);\r\n        buf = GL.getTempIndexBuffer(size);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, buf);\r\n        GLctx.bufferSubData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/,\r\n                                 0,\r\n                                 HEAPU8.subarray(indices, indices + size));\r\n        // the index is now 0\r\n        indices = 0;\r\n      }\r\n  \r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      GLctx.drawElements(mode, count, type, indices);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n      }\r\n    }\r\n  var _emscripten_glDrawElements = _glDrawElements;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawElementsInstanced(mode, count, type, indices, primcount) {\r\n      GLctx.drawElementsInstanced(mode, count, type, indices, primcount);\r\n    }\r\n  var _emscripten_glDrawElementsInstanced = _glDrawElementsInstanced;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedANGLE = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedANGLE = _glDrawElementsInstancedANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedARB = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedARB = _glDrawElementsInstancedARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedEXT = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedEXT = _glDrawElementsInstancedEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedNV = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedNV = _glDrawElementsInstancedNV;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawRangeElements(mode, start, end, count, type, indices) {\r\n      // TODO: This should be a trivial pass-though function registered at the bottom of this page as\r\n      // glFuncs[6][1] += ' drawRangeElements';\r\n      // but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,\r\n      // we work around by ignoring the range.\r\n      _glDrawElements(mode, count, type, indices);\r\n    }\r\n  var _emscripten_glDrawRangeElements = _glDrawRangeElements;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEnable(x0) { GLctx.enable(x0) }\r\n  var _emscripten_glEnable = _glEnable;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEnableVertexAttribArray(index) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = true;\r\n      GLctx.enableVertexAttribArray(index);\r\n    }\r\n  var _emscripten_glEnableVertexAttribArray = _glEnableVertexAttribArray;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndQuery(x0) { GLctx.endQuery(x0) }\r\n  var _emscripten_glEndQuery = _glEndQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndQueryEXT(target) {\r\n      GLctx.disjointTimerQueryExt['endQueryEXT'](target);\r\n    }\r\n  var _emscripten_glEndQueryEXT = _glEndQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndTransformFeedback() { GLctx.endTransformFeedback() }\r\n  var _emscripten_glEndTransformFeedback = _glEndTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFenceSync(condition, flags) {\r\n      var sync = GLctx.fenceSync(condition, flags);\r\n      if (sync) {\r\n        var id = GL.getNewId(GL.syncs);\r\n        sync.name = id;\r\n        GL.syncs[id] = sync;\r\n        return id;\r\n      }\r\n      return 0; // Failed to create a sync object\r\n    }\r\n  var _emscripten_glFenceSync = _glFenceSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFinish() { GLctx.finish() }\r\n  var _emscripten_glFinish = _glFinish;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFlush() { GLctx.flush() }\r\n  var _emscripten_glFlush = _glFlush;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer) {\r\n      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,\r\n                                         GL.renderbuffers[renderbuffer]);\r\n    }\r\n  var _emscripten_glFramebufferRenderbuffer = _glFramebufferRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferTexture2D(target, attachment, textarget, texture, level) {\r\n      GLctx.framebufferTexture2D(target, attachment, textarget,\r\n                                      GL.textures[texture], level);\r\n    }\r\n  var _emscripten_glFramebufferTexture2D = _glFramebufferTexture2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferTextureLayer(target, attachment, texture, level, layer) {\r\n      GLctx.framebufferTextureLayer(target, attachment, GL.textures[texture], level, layer);\r\n    }\r\n  var _emscripten_glFramebufferTextureLayer = _glFramebufferTextureLayer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFrontFace(x0) { GLctx.frontFace(x0) }\r\n  var _emscripten_glFrontFace = _glFrontFace;\r\n\r\n  function __glGenObject(n, buffers, createFunction, objectTable\r\n      ) {\r\n      for (var i = 0; i < n; i++) {\r\n        var buffer = GLctx[createFunction]();\r\n        var id = buffer && GL.getNewId(objectTable);\r\n        if (buffer) {\r\n          buffer.name = id;\r\n          objectTable[id] = buffer;\r\n        } else {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n        }\r\n        HEAP32[(((buffers)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenBuffers(n, buffers) {\r\n      __glGenObject(n, buffers, 'createBuffer', GL.buffers\r\n        );\r\n    }\r\n  var _emscripten_glGenBuffers = _glGenBuffers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenFramebuffers(n, ids) {\r\n      __glGenObject(n, ids, 'createFramebuffer', GL.framebuffers\r\n        );\r\n    }\r\n  var _emscripten_glGenFramebuffers = _glGenFramebuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenQueries(n, ids) {\r\n      __glGenObject(n, ids, 'createQuery', GL.queries\r\n        );\r\n    }\r\n  var _emscripten_glGenQueries = _glGenQueries;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenQueriesEXT(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var query = GLctx.disjointTimerQueryExt['createQueryEXT']();\r\n        if (!query) {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n          while (i < n) HEAP32[(((ids)+(i++*4))>>2)] = 0;\r\n          return;\r\n        }\r\n        var id = GL.getNewId(GL.queries);\r\n        query.name = id;\r\n        GL.queries[id] = query;\r\n        HEAP32[(((ids)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  var _emscripten_glGenQueriesEXT = _glGenQueriesEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenRenderbuffers(n, renderbuffers) {\r\n      __glGenObject(n, renderbuffers, 'createRenderbuffer', GL.renderbuffers\r\n        );\r\n    }\r\n  var _emscripten_glGenRenderbuffers = _glGenRenderbuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenSamplers(n, samplers) {\r\n      __glGenObject(n, samplers, 'createSampler', GL.samplers\r\n        );\r\n    }\r\n  var _emscripten_glGenSamplers = _glGenSamplers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenTextures(n, textures) {\r\n      __glGenObject(n, textures, 'createTexture', GL.textures\r\n        );\r\n    }\r\n  var _emscripten_glGenTextures = _glGenTextures;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenTransformFeedbacks(n, ids) {\r\n      __glGenObject(n, ids, 'createTransformFeedback', GL.transformFeedbacks\r\n        );\r\n    }\r\n  var _emscripten_glGenTransformFeedbacks = _glGenTransformFeedbacks;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenVertexArrays(n, arrays) {\r\n      __glGenObject(n, arrays, 'createVertexArray', GL.vaos\r\n        );\r\n    }\r\n  var _emscripten_glGenVertexArrays = _glGenVertexArrays;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGenVertexArraysOES = _glGenVertexArrays;\r\n  var _emscripten_glGenVertexArraysOES = _glGenVertexArraysOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenerateMipmap(x0) { GLctx.generateMipmap(x0) }\r\n  var _emscripten_glGenerateMipmap = _glGenerateMipmap;\r\n\r\n  \r\n  function __glGetActiveAttribOrUniform(funcName, program, index, bufSize, length, size, type, name) {\r\n      program = GL.programs[program];\r\n      var info = GLctx[funcName](program, index);\r\n      if (info) { // If an error occurs, nothing will be written to length, size and type and name.\r\n        var numBytesWrittenExclNull = name && stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n        if (size) HEAP32[((size)>>2)] = info.size;\r\n        if (type) HEAP32[((type)>>2)] = info.type;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveAttrib(program, index, bufSize, length, size, type, name) {\r\n      __glGetActiveAttribOrUniform('getActiveAttrib', program, index, bufSize, length, size, type, name);\r\n    }\r\n  var _emscripten_glGetActiveAttrib = _glGetActiveAttrib;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniform(program, index, bufSize, length, size, type, name) {\r\n      __glGetActiveAttribOrUniform('getActiveUniform', program, index, bufSize, length, size, type, name);\r\n    }\r\n  var _emscripten_glGetActiveUniform = _glGetActiveUniform;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName) {\r\n      program = GL.programs[program];\r\n  \r\n      var result = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\r\n      if (!result) return; // If an error occurs, nothing will be written to uniformBlockName or length.\r\n      if (uniformBlockName && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(result, uniformBlockName, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformBlockName = _glGetActiveUniformBlockName;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8A41 /* GL_UNIFORM_BLOCK_NAME_LENGTH */) {\r\n        var name = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\r\n        HEAP32[((params)>>2)] = name.length+1;\r\n        return;\r\n      }\r\n  \r\n      var result = GLctx.getActiveUniformBlockParameter(program, uniformBlockIndex, pname);\r\n      if (result === null) return; // If an error occurs, nothing should be written to params.\r\n      if (pname == 0x8A43 /*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/) {\r\n        for (var i = 0; i < result.length; i++) {\r\n          HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n        }\r\n      } else {\r\n        HEAP32[((params)>>2)] = result;\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformBlockiv = _glGetActiveUniformBlockiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && uniformIndices == 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var ids = [];\r\n      for (var i = 0; i < uniformCount; i++) {\r\n        ids.push(HEAP32[(((uniformIndices)+(i*4))>>2)]);\r\n      }\r\n  \r\n      var result = GLctx.getActiveUniforms(program, ids, pname);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to params.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformsiv = _glGetActiveUniformsiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetAttachedShaders(program, maxCount, count, shaders) {\r\n      var result = GLctx.getAttachedShaders(GL.programs[program]);\r\n      var len = result.length;\r\n      if (len > maxCount) {\r\n        len = maxCount;\r\n      }\r\n      HEAP32[((count)>>2)] = len;\r\n      for (var i = 0; i < len; ++i) {\r\n        var id = GL.shaders.indexOf(result[i]);\r\n        HEAP32[(((shaders)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  var _emscripten_glGetAttachedShaders = _glGetAttachedShaders;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetAttribLocation(program, name) {\r\n      return GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\r\n    }\r\n  var _emscripten_glGetAttribLocation = _glGetAttribLocation;\r\n\r\n  function writeI53ToI64(ptr, num) {\r\n      HEAPU32[ptr>>2] = num;\r\n      HEAPU32[ptr+4>>2] = (num - HEAPU32[ptr>>2])/4294967296;\r\n    }\r\n  \r\n  function emscriptenWebGLGet(name_, p, type) {\r\n      // Guard against user passing a null pointer.\r\n      // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.\r\n      // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but\r\n      // better to report an error instead of doing anything random.\r\n      if (!p) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = undefined;\r\n      switch (name_) { // Handle a few trivial GLES values\r\n        case 0x8DFA: // GL_SHADER_COMPILER\r\n          ret = 1;\r\n          break;\r\n        case 0x8DF8: // GL_SHADER_BINARY_FORMATS\r\n          if (type != 0 && type != 1) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n          }\r\n          return; // Do not write anything to the out pointer, since no binary formats are supported.\r\n        case 0x87FE: // GL_NUM_PROGRAM_BINARY_FORMATS\r\n        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS\r\n          ret = 0;\r\n          break;\r\n        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS\r\n          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),\r\n          // so implement it ourselves to allow C++ GLES2 code get the length.\r\n          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);\r\n          ret = formats ? formats.length : 0;\r\n          break;\r\n  \r\n        case 0x821D: // GL_NUM_EXTENSIONS\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n            return;\r\n          }\r\n          // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          var exts = GLctx.getSupportedExtensions() || [];\r\n          ret = 2 * exts.length; // each extension is duplicated, first in unprefixed WebGL form, and then a second time with \"GL_\" prefix.\r\n          break;\r\n        case 0x821B: // GL_MAJOR_VERSION\r\n        case 0x821C: // GL_MINOR_VERSION\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          ret = name_ == 0x821B ? 3 : 0; // return version 3.0\r\n          break;\r\n      }\r\n  \r\n      if (ret === undefined) {\r\n        var result = GLctx.getParameter(name_);\r\n        switch (typeof result) {\r\n          case \"number\":\r\n            ret = result;\r\n            break;\r\n          case \"boolean\":\r\n            ret = result ? 1 : 0;\r\n            break;\r\n          case \"string\":\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          case \"object\":\r\n            if (result === null) {\r\n              // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise\r\n              // can mean an invalid name_, which we need to report as an error\r\n              switch (name_) {\r\n                case 0x8894: // ARRAY_BUFFER_BINDING\r\n                case 0x8B8D: // CURRENT_PROGRAM\r\n                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING\r\n                case 0x8CA6: // FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING\r\n                case 0x8CA7: // RENDERBUFFER_BINDING\r\n                case 0x8069: // TEXTURE_BINDING_2D\r\n                case 0x85B5: // WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES\r\n                case 0x8F36: // COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER\r\n                case 0x8F37: // COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER\r\n                case 0x88ED: // PIXEL_PACK_BUFFER_BINDING\r\n                case 0x88EF: // PIXEL_UNPACK_BUFFER_BINDING\r\n                case 0x8CAA: // READ_FRAMEBUFFER_BINDING\r\n                case 0x8919: // SAMPLER_BINDING\r\n                case 0x8C1D: // TEXTURE_BINDING_2D_ARRAY\r\n                case 0x806A: // TEXTURE_BINDING_3D\r\n                case 0x8E25: // TRANSFORM_FEEDBACK_BINDING\r\n                case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n                case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP\r\n                  ret = 0;\r\n                  break;\r\n                }\r\n                default: {\r\n                  GL.recordError(0x500); // GL_INVALID_ENUM\r\n                  return;\r\n                }\r\n              }\r\n            } else if (result instanceof Float32Array ||\r\n                       result instanceof Uint32Array ||\r\n                       result instanceof Int32Array ||\r\n                       result instanceof Array) {\r\n              for (var i = 0; i < result.length; ++i) {\r\n                switch (type) {\r\n                  case 0: HEAP32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 2: HEAPF32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 4: HEAP8[(((p)+(i))>>0)] = result[i] ? 1 : 0; break;\r\n                }\r\n              }\r\n              return;\r\n            } else {\r\n              try {\r\n                ret = result.name | 0;\r\n              } catch(e) {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                err('GL_INVALID_ENUM in glGet' + type + 'v: Unknown object returned from WebGL getParameter(' + name_ + ')! (error: ' + e + ')');\r\n                return;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            err('GL_INVALID_ENUM in glGet' + type + 'v: Native code calling glGet' + type + 'v(' + name_ + ') and it returns ' + result + ' of type ' + typeof(result) + '!');\r\n            return;\r\n        }\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(p, ret); break;\r\n        case 0: HEAP32[((p)>>2)] = ret; break;\r\n        case 2:   HEAPF32[((p)>>2)] = ret; break;\r\n        case 4: HEAP8[((p)>>0)] = ret ? 1 : 0; break;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetBooleanv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 4);\r\n    }\r\n  var _emscripten_glGetBooleanv = _glGetBooleanv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetBufferParameteri64v(target, value, data) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      writeI53ToI64(data, GLctx.getBufferParameter(target, value));\r\n    }\r\n  var _emscripten_glGetBufferParameteri64v = _glGetBufferParameteri64v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetBufferParameteriv(target, value, data) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((data)>>2)] = GLctx.getBufferParameter(target, value);\r\n    }\r\n  var _emscripten_glGetBufferParameteriv = _glGetBufferParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetError() {\r\n      var error = GLctx.getError() || GL.lastError;\r\n      GL.lastError = 0/*GL_NO_ERROR*/;\r\n      return error;\r\n    }\r\n  var _emscripten_glGetError = _glGetError;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetFloatv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 2);\r\n    }\r\n  var _emscripten_glGetFloatv = _glGetFloatv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetFragDataLocation(program, name) {\r\n      return GLctx.getFragDataLocation(GL.programs[program], UTF8ToString(name));\r\n    }\r\n  var _emscripten_glGetFragDataLocation = _glGetFragDataLocation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetFramebufferAttachmentParameteriv(target, attachment, pname, params) {\r\n      var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\r\n      if (result instanceof WebGLRenderbuffer ||\r\n          result instanceof WebGLTexture) {\r\n        result = result.name | 0;\r\n      }\r\n      HEAP32[((params)>>2)] = result;\r\n    }\r\n  var _emscripten_glGetFramebufferAttachmentParameteriv = _glGetFramebufferAttachmentParameteriv;\r\n\r\n  function emscriptenWebGLGetIndexed(target, index, data, type) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var result = GLctx.getIndexedParameter(target, index);\r\n      var ret;\r\n      switch (typeof result) {\r\n        case 'boolean':\r\n          ret = result ? 1 : 0;\r\n          break;\r\n        case 'number':\r\n          ret = result;\r\n          break;\r\n        case 'object':\r\n          if (result === null) {\r\n            switch (target) {\r\n              case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n              case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                ret = 0;\r\n                break;\r\n              default: {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                return;\r\n              }\r\n            }\r\n          } else if (result instanceof WebGLBuffer) {\r\n            ret = result.name | 0;\r\n          } else {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          GL.recordError(0x500); // GL_INVALID_ENUM\r\n          return;\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(data, ret); break;\r\n        case 0: HEAP32[((data)>>2)] = ret; break;\r\n        case 2: HEAPF32[((data)>>2)] = ret; break;\r\n        case 4: HEAP8[((data)>>0)] = ret ? 1 : 0; break;\r\n        default: throw 'internal emscriptenWebGLGetIndexed() error, bad type: ' + type;\r\n      }\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glGetInteger64i_v(target, index, data) {\r\n      emscriptenWebGLGetIndexed(target, index, data, 1);\r\n    }\r\n  var _emscripten_glGetInteger64i_v = _glGetInteger64i_v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetInteger64v(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 1);\r\n    }\r\n  var _emscripten_glGetInteger64v = _glGetInteger64v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetIntegeri_v(target, index, data) {\r\n      emscriptenWebGLGetIndexed(target, index, data, 0);\r\n    }\r\n  var _emscripten_glGetIntegeri_v = _glGetIntegeri_v;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetIntegerv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 0);\r\n    }\r\n  var _emscripten_glGetIntegerv = _glGetIntegerv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetInternalformativ(target, internalformat, pname, bufSize, params) {\r\n      if (bufSize < 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getInternalformatParameter(target, internalformat, pname);\r\n      if (ret === null) return;\r\n      for (var i = 0; i < ret.length && i < bufSize; ++i) {\r\n        HEAP32[(((params)+(i*4))>>2)] = ret[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetInternalformativ = _glGetInternalformativ;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramBinary(program, bufSize, length, binaryFormat, binary) {\r\n      GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n    }\r\n  var _emscripten_glGetProgramBinary = _glGetProgramBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramInfoLog(program, maxLength, length, infoLog) {\r\n      var log = GLctx.getProgramInfoLog(GL.programs[program]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetProgramInfoLog = _glGetProgramInfoLog;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramiv(program, pname, p) {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      if (program >= GL.counter) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getProgramInfoLog(program);\r\n        if (log === null) log = '(unknown error)';\r\n        HEAP32[((p)>>2)] = log.length + 1;\r\n      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\r\n        if (!program.maxUniformLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n            program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformLength;\r\n      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\r\n        if (!program.maxAttributeLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/); ++i) {\r\n            program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxAttributeLength;\r\n      } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\r\n        if (!program.maxUniformBlockNameLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/); ++i) {\r\n            program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformBlockNameLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getProgramParameter(program, pname);\r\n      }\r\n    }\r\n  var _emscripten_glGetProgramiv = _glGetProgramiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjecti64vEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param;\r\n      if (GL.currentContext.version < 2)\r\n      {\r\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      }\r\n      else {\r\n        param = GLctx.getQueryParameter(query, pname);\r\n      }\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      writeI53ToI64(params, ret);\r\n    }\r\n  var _emscripten_glGetQueryObjecti64vEXT = _glGetQueryObjecti64vEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjectivEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n  var _emscripten_glGetQueryObjectivEXT = _glGetQueryObjectivEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectui64vEXT = _glGetQueryObjecti64vEXT;\r\n  var _emscripten_glGetQueryObjectui64vEXT = _glGetQueryObjectui64vEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjectuiv(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.getQueryParameter(query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n  var _emscripten_glGetQueryObjectuiv = _glGetQueryObjectuiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectuivEXT = _glGetQueryObjectivEXT;\r\n  var _emscripten_glGetQueryObjectuivEXT = _glGetQueryObjectuivEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryiv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getQuery(target, pname);\r\n    }\r\n  var _emscripten_glGetQueryiv = _glGetQueryiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryivEXT(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.disjointTimerQueryExt['getQueryEXT'](target, pname);\r\n    }\r\n  var _emscripten_glGetQueryivEXT = _glGetQueryivEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetRenderbufferParameteriv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getRenderbufferParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetRenderbufferParameteriv = _glGetRenderbufferParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSamplerParameterfv(sampler, pname, params) {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\r\n    }\r\n  var _emscripten_glGetSamplerParameterfv = _glGetSamplerParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSamplerParameteriv(sampler, pname, params) {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\r\n    }\r\n  var _emscripten_glGetSamplerParameteriv = _glGetSamplerParameteriv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderInfoLog(shader, maxLength, length, infoLog) {\r\n      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetShaderInfoLog = _glGetShaderInfoLog;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderPrecisionFormat(shaderType, precisionType, range, precision) {\r\n      var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\r\n      HEAP32[((range)>>2)] = result.rangeMin;\r\n      HEAP32[(((range)+(4))>>2)] = result.rangeMax;\r\n      HEAP32[((precision)>>2)] = result.precision;\r\n    }\r\n  var _emscripten_glGetShaderPrecisionFormat = _glGetShaderPrecisionFormat;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderSource(shader, bufSize, length, source) {\r\n      var result = GLctx.getShaderSource(GL.shaders[shader]);\r\n      if (!result) return; // If an error occurs, nothing will be written to length or source.\r\n      var numBytesWrittenExclNull = (bufSize > 0 && source) ? stringToUTF8(result, source, bufSize) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetShaderSource = _glGetShaderSource;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderiv(shader, pname, p) {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n        if (log === null) log = '(unknown error)';\r\n        // The GLES2 specification says that if the shader has an empty info log,\r\n        // a value of 0 is returned. Otherwise the log has a null char appended.\r\n        // (An empty string is falsey, so we can just check that instead of\r\n        // looking at log.length.)\r\n        var logLength = log ? log.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = logLength;\r\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\r\n        var source = GLctx.getShaderSource(GL.shaders[shader]);\r\n        // source may be a null, or the empty string, both of which are falsey\r\n        // values that we report a 0 length for.\r\n        var sourceLength = source ? source.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = sourceLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getShaderParameter(GL.shaders[shader], pname);\r\n      }\r\n    }\r\n  var _emscripten_glGetShaderiv = _glGetShaderiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetString(name_) {\r\n      var ret = GL.stringCache[name_];\r\n      if (!ret) {\r\n        switch (name_) {\r\n          case 0x1F03 /* GL_EXTENSIONS */:\r\n            var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n            exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\r\n            ret = stringToNewUTF8(exts.join(' '));\r\n            break;\r\n          case 0x1F00 /* GL_VENDOR */:\r\n          case 0x1F01 /* GL_RENDERER */:\r\n          case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\r\n          case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\r\n            var s = GLctx.getParameter(name_);\r\n            if (!s) {\r\n              GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            }\r\n            ret = s && stringToNewUTF8(s);\r\n            break;\r\n  \r\n          case 0x1F02 /* GL_VERSION */:\r\n            var glVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\r\n            // return GLES version string corresponding to the version of the WebGL context\r\n            if (GL.currentContext.version >= 2) glVersion = 'OpenGL ES 3.0 (' + glVersion + ')';\r\n            else\r\n            {\r\n              glVersion = 'OpenGL ES 2.0 (' + glVersion + ')';\r\n            }\r\n            ret = stringToNewUTF8(glVersion);\r\n            break;\r\n          case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\r\n            var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\r\n            // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\r\n            var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\r\n            var ver_num = glslVersion.match(ver_re);\r\n            if (ver_num !== null) {\r\n              if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\r\n              glslVersion = 'OpenGL ES GLSL ES ' + ver_num[1] + ' (' + glslVersion + ')';\r\n            }\r\n            ret = stringToNewUTF8(glslVersion);\r\n            break;\r\n          default:\r\n            GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            // fall through\r\n        }\r\n        GL.stringCache[name_] = ret;\r\n      }\r\n      return ret;\r\n    }\r\n  var _emscripten_glGetString = _glGetString;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetStringi(name, index) {\r\n      if (GL.currentContext.version < 2) {\r\n        GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n        return 0;\r\n      }\r\n      var stringiCache = GL.stringiCache[name];\r\n      if (stringiCache) {\r\n        if (index < 0 || index >= stringiCache.length) {\r\n          GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n          return 0;\r\n        }\r\n        return stringiCache[index];\r\n      }\r\n      switch (name) {\r\n        case 0x1F03 /* GL_EXTENSIONS */:\r\n          var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\r\n          exts = exts.map(function(e) { return stringToNewUTF8(e); });\r\n  \r\n          stringiCache = GL.stringiCache[name] = exts;\r\n          if (index < 0 || index >= stringiCache.length) {\r\n            GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n            return 0;\r\n          }\r\n          return stringiCache[index];\r\n        default:\r\n          GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n          return 0;\r\n      }\r\n    }\r\n  var _emscripten_glGetStringi = _glGetStringi;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSynciv(sync, pname, bufSize, length, values) {\r\n      if (bufSize < 0) {\r\n        // GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,\r\n        // so raise GL_INVALID_VALUE here as well.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!values) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getSyncParameter(GL.syncs[sync], pname);\r\n      if (ret !== null) {\r\n        HEAP32[((values)>>2)] = ret;\r\n        if (length) HEAP32[((length)>>2)] = 1; // Report a single value outputted.\r\n      }\r\n    }\r\n  var _emscripten_glGetSynciv = _glGetSynciv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTexParameterfv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetTexParameterfv = _glGetTexParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTexParameteriv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetTexParameteriv = _glGetTexParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name) {\r\n      program = GL.programs[program];\r\n      var info = GLctx.getTransformFeedbackVarying(program, index);\r\n      if (!info) return; // If an error occurred, the return parameters length, size, type and name will be unmodified.\r\n  \r\n      if (name && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n  \r\n      if (size) HEAP32[((size)>>2)] = info.size;\r\n      if (type) HEAP32[((type)>>2)] = info.type;\r\n    }\r\n  var _emscripten_glGetTransformFeedbackVarying = _glGetTransformFeedbackVarying;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformBlockIndex(program, uniformBlockName) {\r\n      return GLctx.getUniformBlockIndex(GL.programs[program], UTF8ToString(uniformBlockName));\r\n    }\r\n  var _emscripten_glGetUniformBlockIndex = _glGetUniformBlockIndex;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformIndices(program, uniformCount, uniformNames, uniformIndices) {\r\n      if (!uniformIndices) {\r\n        // GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense\r\n        // if uniformIndices == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && (uniformNames == 0 || uniformIndices == 0)) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var names = [];\r\n      for (var i = 0; i < uniformCount; i++)\r\n        names.push(UTF8ToString(HEAP32[(((uniformNames)+(i*4))>>2)]));\r\n  \r\n      var result = GLctx.getUniformIndices(program, names);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to uniformIndices.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((uniformIndices)+(i*4))>>2)] = result[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetUniformIndices = _glGetUniformIndices;\r\n\r\n  \r\n  /** @noinline */\r\n  function webglGetLeftBracePos(name) {\r\n      return name.slice(-1) == ']' && name.lastIndexOf('[');\r\n    }\r\n  \r\n  function webglPrepareUniformLocationsBeforeFirstUse(program) {\r\n      var uniformLocsById = program.uniformLocsById, // Maps GLuint -> WebGLUniformLocation\r\n        uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, // Maps name -> [uniform array length, GLuint]\r\n        i, j;\r\n  \r\n      // On the first time invocation of glGetUniformLocation on this shader program:\r\n      // initialize cache data structures and discover which uniforms are arrays.\r\n      if (!uniformLocsById) {\r\n        // maps GLint integer locations to WebGLUniformLocations\r\n        program.uniformLocsById = uniformLocsById = {};\r\n        // maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations\r\n        program.uniformArrayNamesById = {};\r\n  \r\n        for (i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n          var u = GLctx.getActiveUniform(program, i);\r\n          var nm = u.name;\r\n          var sz = u.size;\r\n          var lb = webglGetLeftBracePos(nm);\r\n          var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\r\n  \r\n          // Assign a new location.\r\n          var id = program.uniformIdCounter;\r\n          program.uniformIdCounter += sz;\r\n          // Eagerly get the location of the uniformArray[0] base element.\r\n          // The remaining indices >0 will be left for lazy evaluation to\r\n          // improve performance. Those may never be needed to fetch, if the\r\n          // application fills arrays always in full starting from the first\r\n          // element of the array.\r\n          uniformSizeAndIdsByName[arrayName] = [sz, id];\r\n  \r\n          // Store placeholder integers in place that highlight that these\r\n          // >0 index locations are array indices pending population.\r\n          for(j = 0; j < sz; ++j) {\r\n            uniformLocsById[id] = j;\r\n            program.uniformArrayNamesById[id++] = arrayName;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformLocation(program, name) {\r\n  \r\n      name = UTF8ToString(name);\r\n  \r\n      if (program = GL.programs[program]) {\r\n        webglPrepareUniformLocationsBeforeFirstUse(program);\r\n        var uniformLocsById = program.uniformLocsById; // Maps GLuint -> WebGLUniformLocation\r\n        var arrayIndex = 0;\r\n        var uniformBaseName = name;\r\n  \r\n        // Invariant: when populating integer IDs for uniform locations, we must maintain the precondition that\r\n        // arrays reside in contiguous addresses, i.e. for a 'vec4 colors[10];', colors[4] must be at location colors[0]+4.\r\n        // However, user might call glGetUniformLocation(program, \"colors\") for an array, so we cannot discover based on the user\r\n        // input arguments whether the uniform we are dealing with is an array. The only way to discover which uniforms are arrays\r\n        // is to enumerate over all the active uniforms in the program.\r\n        var leftBrace = webglGetLeftBracePos(name);\r\n  \r\n        // If user passed an array accessor \"[index]\", parse the array index off the accessor.\r\n        if (leftBrace > 0) {\r\n          arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0; // \"index]\", coerce parseInt(']') with >>>0 to treat \"foo[]\" as \"foo[0]\" and foo[-1] as unsigned out-of-bounds.\r\n          uniformBaseName = name.slice(0, leftBrace);\r\n        }\r\n  \r\n        // Have we cached the location of this uniform before?\r\n        var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName]; // A pair [array length, GLint of the uniform location]\r\n  \r\n        // If an uniform with this name exists, and if its index is within the array limits (if it's even an array),\r\n        // query the WebGLlocation, or return an existing cached location.\r\n        if (sizeAndId && arrayIndex < sizeAndId[0]) {\r\n          arrayIndex += sizeAndId[1]; // Add the base location of the uniform to the array index offset.\r\n          if ((uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name))) {\r\n            return arrayIndex;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // N.b. we are currently unable to distinguish between GL program IDs that never existed vs GL program IDs that have been deleted,\r\n        // so report GL_INVALID_VALUE in both cases.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n      }\r\n      return -1;\r\n    }\r\n  var _emscripten_glGetUniformLocation = _glGetUniformLocation;\r\n\r\n  function webglGetUniformLocation(location) {\r\n      var p = GLctx.currentProgram;\r\n  \r\n      if (p) {\r\n        var webglLoc = p.uniformLocsById[location];\r\n        // p.uniformLocsById[location] stores either an integer, or a WebGLUniformLocation.\r\n  \r\n        // If an integer, we have not yet bound the location, so do it now. The integer value specifies the array index\r\n        // we should bind to.\r\n        if (typeof webglLoc == 'number') {\r\n          p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? '[' + webglLoc + ']' : ''));\r\n        }\r\n        // Else an already cached WebGLUniformLocation, return it.\r\n        return webglLoc;\r\n      } else {\r\n        GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n      }\r\n    }\r\n  \r\n  \r\n  /** @suppress{checkTypes} */\r\n  function emscriptenWebGLGetUniform(program, location, params, type) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      webglPrepareUniformLocationsBeforeFirstUse(program);\r\n      var data = GLctx.getUniform(program, webglGetUniformLocation(location));\r\n      if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformfv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 2);\r\n    }\r\n  var _emscripten_glGetUniformfv = _glGetUniformfv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformiv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    }\r\n  var _emscripten_glGetUniformiv = _glGetUniformiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformuiv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    }\r\n  var _emscripten_glGetUniformuiv = _glGetUniformuiv;\r\n\r\n  /** @suppress{checkTypes} */\r\n  function emscriptenWebGLGetVertexAttrib(index, pname, params, type) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttrib*v on client-side array: not supported, bad data returned\");\r\n      }\r\n      var data = GLctx.getVertexAttrib(index, pname);\r\n      if (pname == 0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/) {\r\n        HEAP32[((params)>>2)] = data && data[\"name\"];\r\n      } else if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n          case 5: HEAP32[((params)>>2)] = Math.fround(data); break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 5: HEAP32[(((params)+(i*4))>>2)] = Math.fround(data[i]); break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribIiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\r\n    }\r\n  var _emscripten_glGetVertexAttribIiv = _glGetVertexAttribIiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetVertexAttribIuiv = _glGetVertexAttribIiv;\r\n  var _emscripten_glGetVertexAttribIuiv = _glGetVertexAttribIuiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribPointerv(index, pname, pointer) {\r\n      if (!pointer) {\r\n        // GLES2 specification does not specify how to behave if pointer is a null pointer. Since calling this function does not make sense\r\n        // if pointer == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttribPointer on client-side array: not supported, bad data returned\");\r\n      }\r\n      HEAP32[((pointer)>>2)] = GLctx.getVertexAttribOffset(index, pname);\r\n    }\r\n  var _emscripten_glGetVertexAttribPointerv = _glGetVertexAttribPointerv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribfv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2);\r\n    }\r\n  var _emscripten_glGetVertexAttribfv = _glGetVertexAttribfv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5);\r\n    }\r\n  var _emscripten_glGetVertexAttribiv = _glGetVertexAttribiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glHint(x0, x1) { GLctx.hint(x0, x1) }\r\n  var _emscripten_glHint = _glHint;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glInvalidateFramebuffer(target, numAttachments, attachments) {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.invalidateFramebuffer(target, list);\r\n    }\r\n  var _emscripten_glInvalidateFramebuffer = _glInvalidateFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glInvalidateSubFramebuffer(target, numAttachments, attachments, x, y, width, height) {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.invalidateSubFramebuffer(target, list, x, y, width, height);\r\n    }\r\n  var _emscripten_glInvalidateSubFramebuffer = _glInvalidateSubFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsBuffer(buffer) {\r\n      var b = GL.buffers[buffer];\r\n      if (!b) return 0;\r\n      return GLctx.isBuffer(b);\r\n    }\r\n  var _emscripten_glIsBuffer = _glIsBuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsEnabled(x0) { return GLctx.isEnabled(x0) }\r\n  var _emscripten_glIsEnabled = _glIsEnabled;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsFramebuffer(framebuffer) {\r\n      var fb = GL.framebuffers[framebuffer];\r\n      if (!fb) return 0;\r\n      return GLctx.isFramebuffer(fb);\r\n    }\r\n  var _emscripten_glIsFramebuffer = _glIsFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsProgram(program) {\r\n      program = GL.programs[program];\r\n      if (!program) return 0;\r\n      return GLctx.isProgram(program);\r\n    }\r\n  var _emscripten_glIsProgram = _glIsProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsQuery(id) {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.isQuery(query);\r\n    }\r\n  var _emscripten_glIsQuery = _glIsQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsQueryEXT(id) {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.disjointTimerQueryExt['isQueryEXT'](query);\r\n    }\r\n  var _emscripten_glIsQueryEXT = _glIsQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsRenderbuffer(renderbuffer) {\r\n      var rb = GL.renderbuffers[renderbuffer];\r\n      if (!rb) return 0;\r\n      return GLctx.isRenderbuffer(rb);\r\n    }\r\n  var _emscripten_glIsRenderbuffer = _glIsRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsSampler(id) {\r\n      var sampler = GL.samplers[id];\r\n      if (!sampler) return 0;\r\n      return GLctx.isSampler(sampler);\r\n    }\r\n  var _emscripten_glIsSampler = _glIsSampler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsShader(shader) {\r\n      var s = GL.shaders[shader];\r\n      if (!s) return 0;\r\n      return GLctx.isShader(s);\r\n    }\r\n  var _emscripten_glIsShader = _glIsShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsSync(sync) {\r\n      return GLctx.isSync(GL.syncs[sync]);\r\n    }\r\n  var _emscripten_glIsSync = _glIsSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsTexture(id) {\r\n      var texture = GL.textures[id];\r\n      if (!texture) return 0;\r\n      return GLctx.isTexture(texture);\r\n    }\r\n  var _emscripten_glIsTexture = _glIsTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsTransformFeedback(id) {\r\n      return GLctx.isTransformFeedback(GL.transformFeedbacks[id]);\r\n    }\r\n  var _emscripten_glIsTransformFeedback = _glIsTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsVertexArray(array) {\r\n  \r\n      var vao = GL.vaos[array];\r\n      if (!vao) return 0;\r\n      return GLctx.isVertexArray(vao);\r\n    }\r\n  var _emscripten_glIsVertexArray = _glIsVertexArray;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glIsVertexArrayOES = _glIsVertexArray;\r\n  var _emscripten_glIsVertexArrayOES = _glIsVertexArrayOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glLineWidth(x0) { GLctx.lineWidth(x0) }\r\n  var _emscripten_glLineWidth = _glLineWidth;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glLinkProgram(program) {\r\n      program = GL.programs[program];\r\n      GLctx.linkProgram(program);\r\n      // Invalidate earlier computed uniform->ID mappings, those have now become stale\r\n      program.uniformLocsById = 0; // Mark as null-like so that glGetUniformLocation() knows to populate this again.\r\n      program.uniformSizeAndIdsByName = {};\r\n  \r\n    }\r\n  var _emscripten_glLinkProgram = _glLinkProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPauseTransformFeedback() { GLctx.pauseTransformFeedback() }\r\n  var _emscripten_glPauseTransformFeedback = _glPauseTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPixelStorei(pname, param) {\r\n      if (pname == 0xCF5 /* GL_UNPACK_ALIGNMENT */) {\r\n        GL.unpackAlignment = param;\r\n      }\r\n      GLctx.pixelStorei(pname, param);\r\n    }\r\n  var _emscripten_glPixelStorei = _glPixelStorei;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPolygonOffset(x0, x1) { GLctx.polygonOffset(x0, x1) }\r\n  var _emscripten_glPolygonOffset = _glPolygonOffset;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glProgramBinary(program, binaryFormat, binary, length) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glProgramBinary = _glProgramBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glProgramParameteri(program, pname, value) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glProgramParameteri = _glProgramParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glQueryCounterEXT(id, target) {\r\n      GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id], target);\r\n    }\r\n  var _emscripten_glQueryCounterEXT = _glQueryCounterEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glReadBuffer(x0) { GLctx.readBuffer(x0) }\r\n  var _emscripten_glReadBuffer = _glReadBuffer;\r\n\r\n  function computeUnpackAlignedImageSize(width, height, sizePerPixel, alignment) {\r\n      function roundedToNextMultipleOf(x, y) {\r\n        return (x + y - 1) & -y;\r\n      }\r\n      var plainRowSize = width * sizePerPixel;\r\n      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);\r\n      return height * alignedRowSize;\r\n    }\r\n  \r\n  function colorChannelsInGlTextureFormat(format) {\r\n      // Micro-optimizations for size: map format to size by subtracting smallest enum value (0x1902) from all values first.\r\n      // Also omit the most common size value (1) from the list, which is assumed by formats not on the list.\r\n      var colorChannels = {\r\n        // 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,\r\n        // 0x1906 /* GL_ALPHA */ - 0x1902: 1,\r\n        5: 3,\r\n        6: 4,\r\n        // 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,\r\n        8: 2,\r\n        29502: 3,\r\n        29504: 4,\r\n        // 0x1903 /* GL_RED */ - 0x1902: 1,\r\n        26917: 2,\r\n        26918: 2,\r\n        // 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,\r\n        29846: 3,\r\n        29847: 4\r\n      };\r\n      return colorChannels[format - 0x1902]||1;\r\n    }\r\n  \r\n  function heapObjectForWebGLType(type) {\r\n      // Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare\r\n      // smaller values for the heap, for shorter generated code size.\r\n      // Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.\r\n      // (since most types are HEAPU16)\r\n      type -= 0x1400;\r\n      if (type == 0) return HEAP8;\r\n  \r\n      if (type == 1) return HEAPU8;\r\n  \r\n      if (type == 2) return HEAP16;\r\n  \r\n      if (type == 4) return HEAP32;\r\n  \r\n      if (type == 6) return HEAPF32;\r\n  \r\n      if (type == 5\r\n        || type == 28922\r\n        || type == 28520\r\n        || type == 30779\r\n        || type == 30782\r\n        )\r\n        return HEAPU32;\r\n  \r\n      return HEAPU16;\r\n    }\r\n  \r\n  function heapAccessShiftForWebGLHeap(heap) {\r\n      return 31 - Math.clz32(heap.BYTES_PER_ELEMENT);\r\n    }\r\n  \r\n  function emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) {\r\n      var heap = heapObjectForWebGLType(type);\r\n      var shift = heapAccessShiftForWebGLHeap(heap);\r\n      var byteSize = 1<<shift;\r\n      var sizePerPixel = colorChannelsInGlTextureFormat(format) * byteSize;\r\n      var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel, GL.unpackAlignment);\r\n      return heap.subarray(pixels >> shift, pixels + bytes >> shift);\r\n    }\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glReadPixels(x, y, width, height, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelPackBufferBinding) {\r\n          GLctx.readPixels(x, y, width, height, format, type, pixels);\r\n        } else {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.readPixels(x, y, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);\r\n      if (!pixelData) {\r\n        GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n        return;\r\n      }\r\n      GLctx.readPixels(x, y, width, height, format, type, pixelData);\r\n    }\r\n  var _emscripten_glReadPixels = _glReadPixels;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glReleaseShaderCompiler() {\r\n      // NOP (as allowed by GLES 2.0 spec)\r\n    }\r\n  var _emscripten_glReleaseShaderCompiler = _glReleaseShaderCompiler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glRenderbufferStorage(x0, x1, x2, x3) { GLctx.renderbufferStorage(x0, x1, x2, x3) }\r\n  var _emscripten_glRenderbufferStorage = _glRenderbufferStorage;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glRenderbufferStorageMultisample(x0, x1, x2, x3, x4) { GLctx.renderbufferStorageMultisample(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glRenderbufferStorageMultisample = _glRenderbufferStorageMultisample;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glResumeTransformFeedback() { GLctx.resumeTransformFeedback() }\r\n  var _emscripten_glResumeTransformFeedback = _glResumeTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSampleCoverage(value, invert) {\r\n      GLctx.sampleCoverage(value, !!invert);\r\n    }\r\n  var _emscripten_glSampleCoverage = _glSampleCoverage;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameterf(sampler, pname, param) {\r\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameterf = _glSamplerParameterf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameterfv(sampler, pname, params) {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameterfv = _glSamplerParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameteri(sampler, pname, param) {\r\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameteri = _glSamplerParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameteriv(sampler, pname, params) {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameteriv = _glSamplerParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glScissor(x0, x1, x2, x3) { GLctx.scissor(x0, x1, x2, x3) }\r\n  var _emscripten_glScissor = _glScissor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glShaderBinary(count, shaders, binaryformat, binary, length) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glShaderBinary = _glShaderBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glShaderSource(shader, count, string, length) {\r\n      var source = GL.getSource(shader, count, string, length);\r\n  \r\n      GLctx.shaderSource(GL.shaders[shader], source);\r\n    }\r\n  var _emscripten_glShaderSource = _glShaderSource;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilFunc(x0, x1, x2) { GLctx.stencilFunc(x0, x1, x2) }\r\n  var _emscripten_glStencilFunc = _glStencilFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilFuncSeparate(x0, x1, x2, x3) { GLctx.stencilFuncSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glStencilFuncSeparate = _glStencilFuncSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilMask(x0) { GLctx.stencilMask(x0) }\r\n  var _emscripten_glStencilMask = _glStencilMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilMaskSeparate(x0, x1) { GLctx.stencilMaskSeparate(x0, x1) }\r\n  var _emscripten_glStencilMaskSeparate = _glStencilMaskSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilOp(x0, x1, x2) { GLctx.stencilOp(x0, x1, x2) }\r\n  var _emscripten_glStencilOp = _glStencilOp;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilOpSeparate(x0, x1, x2, x3) { GLctx.stencilOpSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glStencilOpSeparate = _glStencilOpSeparate;\r\n\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null);\r\n    }\r\n  var _emscripten_glTexImage2D = _glTexImage2D;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, null);\r\n      }\r\n    }\r\n  var _emscripten_glTexImage3D = _glTexImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameterf(x0, x1, x2) { GLctx.texParameterf(x0, x1, x2) }\r\n  var _emscripten_glTexParameterf = _glTexParameterf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameterfv(target, pname, params) {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.texParameterf(target, pname, param);\r\n    }\r\n  var _emscripten_glTexParameterfv = _glTexParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }\r\n  var _emscripten_glTexParameteri = _glTexParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameteriv(target, pname, params) {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.texParameteri(target, pname, param);\r\n    }\r\n  var _emscripten_glTexParameteriv = _glTexParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexStorage2D(x0, x1, x2, x3, x4) { GLctx.texStorage2D(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glTexStorage2D = _glTexStorage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexStorage3D(x0, x1, x2, x3, x4, x5) { GLctx.texStorage3D(x0, x1, x2, x3, x4, x5) }\r\n  var _emscripten_glTexStorage3D = _glTexStorage3D;\r\n\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = null;\r\n      if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0);\r\n      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\r\n    }\r\n  var _emscripten_glTexSubImage2D = _glTexSubImage2D;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, null);\r\n      }\r\n    }\r\n  var _emscripten_glTexSubImage3D = _glTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTransformFeedbackVaryings(program, count, varyings, bufferMode) {\r\n      program = GL.programs[program];\r\n      var vars = [];\r\n      for (var i = 0; i < count; i++)\r\n        vars.push(UTF8ToString(HEAP32[(((varyings)+(i*4))>>2)]));\r\n  \r\n      GLctx.transformFeedbackVaryings(program, vars, bufferMode);\r\n    }\r\n  var _emscripten_glTransformFeedbackVaryings = _glTransformFeedbackVaryings;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1f(location, v0) {\r\n      GLctx.uniform1f(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1f = _glUniform1f;\r\n\r\n  \r\n  var miniTempWebGLFloatBuffers = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform1fv = _glUniform1fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1i(location, v0) {\r\n      GLctx.uniform1i(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1i = _glUniform1i;\r\n\r\n  \r\n  var miniTempWebGLIntBuffers = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform1iv = _glUniform1iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform1ui(location, v0) {\r\n      GLctx.uniform1ui(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1ui = _glUniform1ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform1uiv(location, count, value) {\r\n      count && GLctx.uniform1uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count);\r\n    }\r\n  var _emscripten_glUniform1uiv = _glUniform1uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2f(location, v0, v1) {\r\n      GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2f = _glUniform2f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform2fv = _glUniform2fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2i(location, v0, v1) {\r\n      GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2i = _glUniform2i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform2iv = _glUniform2iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform2ui(location, v0, v1) {\r\n      GLctx.uniform2ui(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2ui = _glUniform2ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform2uiv(location, count, value) {\r\n      count && GLctx.uniform2uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*2);\r\n    }\r\n  var _emscripten_glUniform2uiv = _glUniform2uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3f(location, v0, v1, v2) {\r\n      GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3f = _glUniform3f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform3fv = _glUniform3fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3i(location, v0, v1, v2) {\r\n      GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3i = _glUniform3i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform3iv = _glUniform3iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform3ui(location, v0, v1, v2) {\r\n      GLctx.uniform3ui(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3ui = _glUniform3ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform3uiv(location, count, value) {\r\n      count && GLctx.uniform3uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*3);\r\n    }\r\n  var _emscripten_glUniform3uiv = _glUniform3uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4f(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4f = _glUniform4f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 4 * count; i += 4) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform4fv = _glUniform4fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4i(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4i = _glUniform4i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAP32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform4iv = _glUniform4iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform4ui(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4ui(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4ui = _glUniform4ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform4uiv(location, count, value) {\r\n      count && GLctx.uniform4uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*4);\r\n    }\r\n  var _emscripten_glUniform4uiv = _glUniform4uiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding) {\r\n      program = GL.programs[program];\r\n  \r\n      GLctx.uniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding);\r\n    }\r\n  var _emscripten_glUniformBlockBinding = _glUniformBlockBinding;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix2fv = _glUniformMatrix2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2x3fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    }\r\n  var _emscripten_glUniformMatrix2x3fv = _glUniformMatrix2x3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2x4fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    }\r\n  var _emscripten_glUniformMatrix2x4fv = _glUniformMatrix2x4fv;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*9);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 32) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[9*count-1];\r\n        for (var i = 0; i < 9*count; i += 9) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n          view[i+4] = HEAPF32[(((value)+(4*i+16))>>2)];\r\n          view[i+5] = HEAPF32[(((value)+(4*i+20))>>2)];\r\n          view[i+6] = HEAPF32[(((value)+(4*i+24))>>2)];\r\n          view[i+7] = HEAPF32[(((value)+(4*i+28))>>2)];\r\n          view[i+8] = HEAPF32[(((value)+(4*i+32))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*36)>>2);\r\n      }\r\n      GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix3fv = _glUniformMatrix3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3x2fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    }\r\n  var _emscripten_glUniformMatrix3x2fv = _glUniformMatrix3x2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3x4fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    }\r\n  var _emscripten_glUniformMatrix3x4fv = _glUniformMatrix3x4fv;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*16);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 18) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[16*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 16 * count; i += 16) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n          view[i + 4] = heap[dst + 4];\r\n          view[i + 5] = heap[dst + 5];\r\n          view[i + 6] = heap[dst + 6];\r\n          view[i + 7] = heap[dst + 7];\r\n          view[i + 8] = heap[dst + 8];\r\n          view[i + 9] = heap[dst + 9];\r\n          view[i + 10] = heap[dst + 10];\r\n          view[i + 11] = heap[dst + 11];\r\n          view[i + 12] = heap[dst + 12];\r\n          view[i + 13] = heap[dst + 13];\r\n          view[i + 14] = heap[dst + 14];\r\n          view[i + 15] = heap[dst + 15];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*64)>>2);\r\n      }\r\n      GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix4fv = _glUniformMatrix4fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4x2fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    }\r\n  var _emscripten_glUniformMatrix4x2fv = _glUniformMatrix4x2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4x3fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    }\r\n  var _emscripten_glUniformMatrix4x3fv = _glUniformMatrix4x3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUseProgram(program) {\r\n      program = GL.programs[program];\r\n      GLctx.useProgram(program);\r\n      // Record the currently active program so that we can access the uniform\r\n      // mapping table of that program.\r\n      GLctx.currentProgram = program;\r\n    }\r\n  var _emscripten_glUseProgram = _glUseProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glValidateProgram(program) {\r\n      GLctx.validateProgram(GL.programs[program]);\r\n    }\r\n  var _emscripten_glValidateProgram = _glValidateProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib1f(x0, x1) { GLctx.vertexAttrib1f(x0, x1) }\r\n  var _emscripten_glVertexAttrib1f = _glVertexAttrib1f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib1fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib1f(index, HEAPF32[v>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib1fv = _glVertexAttrib1fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib2f(x0, x1, x2) { GLctx.vertexAttrib2f(x0, x1, x2) }\r\n  var _emscripten_glVertexAttrib2f = _glVertexAttrib2f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib2fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib2f(index, HEAPF32[v>>2], HEAPF32[v+4>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib2fv = _glVertexAttrib2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib3f(x0, x1, x2, x3) { GLctx.vertexAttrib3f(x0, x1, x2, x3) }\r\n  var _emscripten_glVertexAttrib3f = _glVertexAttrib3f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib3fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib3f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib3fv = _glVertexAttrib3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib4f(x0, x1, x2, x3, x4) { GLctx.vertexAttrib4f(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttrib4f = _glVertexAttrib4f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib4fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib4f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2], HEAPF32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib4fv = _glVertexAttrib4fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribDivisor(index, divisor) {\r\n      GLctx.vertexAttribDivisor(index, divisor);\r\n    }\r\n  var _emscripten_glVertexAttribDivisor = _glVertexAttribDivisor;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorANGLE = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorANGLE = _glVertexAttribDivisorANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorARB = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorARB = _glVertexAttribDivisorARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorEXT = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorEXT = _glVertexAttribDivisorEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorNV = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorNV = _glVertexAttribDivisorNV;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4i(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4i(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttribI4i = _glVertexAttribI4i;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4iv(index, v) {\r\n      GLctx.vertexAttribI4i(index, HEAP32[v>>2], HEAP32[v+4>>2], HEAP32[v+8>>2], HEAP32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttribI4iv = _glVertexAttribI4iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4ui(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4ui(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttribI4ui = _glVertexAttribI4ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4uiv(index, v) {\r\n      GLctx.vertexAttribI4ui(index, HEAPU32[v>>2], HEAPU32[v+4>>2], HEAPU32[v+8>>2], HEAPU32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttribI4uiv = _glVertexAttribI4uiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribIPointer(index, size, type, stride, ptr) {\r\n      GLctx.vertexAttribIPointer(index, size, type, stride, ptr);\r\n    }\r\n  var _emscripten_glVertexAttribIPointer = _glVertexAttribIPointer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      if (!GLctx.currentArrayBufferBinding) {\r\n        cb.size = size;\r\n        cb.type = type;\r\n        cb.normalized = normalized;\r\n        cb.stride = stride;\r\n        cb.ptr = ptr;\r\n        cb.clientside = true;\r\n        cb.vertexAttribPointerAdaptor = function(index, size, type, normalized, stride, ptr) {\r\n          this.vertexAttribPointer(index, size, type, normalized, stride, ptr);\r\n        };\r\n        return;\r\n      }\r\n      cb.clientside = false;\r\n      GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\r\n    }\r\n  var _emscripten_glVertexAttribPointer = _glVertexAttribPointer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }\r\n  var _emscripten_glViewport = _glViewport;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glWaitSync(sync, flags, timeout_low, timeout_high) {\r\n      // See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      GLctx.waitSync(GL.syncs[sync], flags, timeout);\r\n    }\r\n  var _emscripten_glWaitSync = _glWaitSync;\r\n\r\n  function _emscripten_has_asyncify() {\r\n      return 1;\r\n    }\r\n\r\n  function _emscripten_memcpy_big(dest, src, num) {\r\n      HEAPU8.copyWithin(dest, src, src + num);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  function doRequestFullscreen(target, strategy) {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      if (!target.requestFullscreen\r\n        && !target.webkitRequestFullscreen\r\n        ) {\r\n        return -3;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (strategy.deferUntilInEventHandler) {\r\n          JSEvents.deferCall(JSEvents_requestFullscreen, 1 /* priority over pointer lock */, [target, strategy]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return JSEvents_requestFullscreen(target, strategy);\r\n    }\r\n  \r\n  \r\n  function _emscripten_request_fullscreen_strategy(target, deferUntilInEventHandler, fullscreenStrategy) {\r\n      var strategy = {\r\n        scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n        canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n        filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n        deferUntilInEventHandler: deferUntilInEventHandler,\r\n        canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n        canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)]\r\n      };\r\n  \r\n      return doRequestFullscreen(target, strategy);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_request_pointerlock(target, deferUntilInEventHandler) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      if (!target.requestPointerLock\r\n        ) {\r\n        return -1;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (deferUntilInEventHandler) {\r\n          JSEvents.deferCall(requestPointerLock, 2 /* priority below fullscreen */, [target]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return requestPointerLock(target);\r\n    }\r\n\r\n  function getHeapMax() {\r\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\r\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\r\n      // for any code that deals with heap sizes, which would require special\r\n      // casing all heap size related code to treat 0 specially.\r\n      return 2147483648;\r\n    }\r\n  \r\n  function emscripten_realloc_buffer(size) {\r\n      var b = wasmMemory.buffer;\r\n      var pages = (size - b.byteLength + 65535) >>> 16;\r\n      try {\r\n        // round size grow request up to wasm page size (fixed 64KB per spec)\r\n        wasmMemory.grow(pages); // .grow() takes a delta compared to the previous size\r\n        updateMemoryViews();\r\n        return 1 /*success*/;\r\n      } catch(e) {\r\n      }\r\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\r\n      // anyhow)\r\n    }\r\n  function _emscripten_resize_heap(requestedSize) {\r\n      var oldSize = HEAPU8.length;\r\n      requestedSize = requestedSize >>> 0;\r\n      // With multithreaded builds, races can happen (another thread might increase the size\r\n      // in between), so return a failure, and let the caller retry.\r\n  \r\n      // Memory resize rules:\r\n      // 1.  Always increase heap size to at least the requested size, rounded up\r\n      //     to next page multiple.\r\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\r\n      //     geometrically: increase the heap size according to\r\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\r\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\r\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\r\n      //     linearly: increase the heap size by at least\r\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\r\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\r\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\r\n      // 4.  If we were unable to allocate as much memory, it may be due to\r\n      //     over-eager decision to excessively reserve due to (3) above.\r\n      //     Hence if an allocation fails, cut down on the amount of excess\r\n      //     growth, in an attempt to succeed to perform a smaller allocation.\r\n  \r\n      // A limit is set for how much we can grow. We should not exceed that\r\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\r\n      var maxHeapSize = getHeapMax();\r\n      if (requestedSize > maxHeapSize) {\r\n        return false;\r\n      }\r\n  \r\n      var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\r\n  \r\n      // Loop through potential heap size increases. If we attempt a too eager\r\n      // reservation that fails, cut down on the attempted size and reserve a\r\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\r\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\r\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\r\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\r\n  \r\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\r\n  \r\n        var replacement = emscripten_realloc_buffer(newSize);\r\n        if (replacement) {\r\n  \r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n  function _emscripten_sample_gamepad_data() {\r\n      return (JSEvents.lastGamepadState = (navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : null)))\r\n        ? 0 : -1;\r\n    }\r\n\r\n  \r\n  \r\n  function registerBeforeUnloadEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {\r\n      var beforeUnloadEventHandlerFunc = function(e = event) {\r\n        // Note: This is always called on the main browser thread, since it needs synchronously return a value!\r\n        var confirmationMessage = ((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, 0, userData);\r\n        \r\n        if (confirmationMessage) {\r\n          confirmationMessage = UTF8ToString(confirmationMessage);\r\n        }\r\n        if (confirmationMessage) {\r\n          e.preventDefault();\r\n          e.returnValue = confirmationMessage;\r\n          return confirmationMessage;\r\n        }\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: beforeUnloadEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_beforeunload_callback_on_thread(userData, callbackfunc, targetThread) {\r\n      if (typeof onbeforeunload == 'undefined') return -1;\r\n      // beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,\r\n      // and there is no time to start proxying it anywhere.\r\n      if (targetThread !== 1) return -5;\r\n      return registerBeforeUnloadEventCallback(2, userData, true, callbackfunc, 28, \"beforeunload\");\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerFocusEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.focusEvent) JSEvents.focusEvent = _malloc( 256 );\r\n  \r\n      var focusEventHandlerFunc = function(e = event) {\r\n        var nodeName = JSEvents.getNodeNameForTarget(e.target);\r\n        var id = e.target.id ? e.target.id : '';\r\n  \r\n        var focusEvent = JSEvents.focusEvent;\r\n        stringToUTF8(nodeName, focusEvent + 0, 128);\r\n        stringToUTF8(id, focusEvent + 128, 128);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, focusEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: focusEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_blur_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerFocusEventCallback(target, userData, useCapture, callbackfunc, 12, \"blur\", targetThread);\r\n    }\r\n\r\n\r\n  \r\n  function _emscripten_set_element_css_size(target, width, height) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      target.style.width = width + \"px\";\r\n      target.style.height = height + \"px\";\r\n  \r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_focus_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerFocusEventCallback(target, userData, useCapture, callbackfunc, 13, \"focus\", targetThread);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillFullscreenChangeEventData(eventStruct) {\r\n      var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\r\n      var isFullscreen = !!fullscreenElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isFullscreen;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = JSEvents.fullscreenEnabled();\r\n      // If transitioning to fullscreen, report info about the element that is now fullscreen.\r\n      // If transitioning to windowed mode, report info about the element that just was fullscreen.\r\n      var reportedElement = isFullscreen ? fullscreenElement : JSEvents.previousFullscreenElement;\r\n      var nodeName = JSEvents.getNodeNameForTarget(reportedElement);\r\n      var id = (reportedElement && reportedElement.id) ? reportedElement.id : '';\r\n      stringToUTF8(nodeName, eventStruct + 8, 128);\r\n      stringToUTF8(id, eventStruct + 136, 128);\r\n      HEAP32[(((eventStruct)+(264))>>2)] = reportedElement ? reportedElement.clientWidth : 0;\r\n      HEAP32[(((eventStruct)+(268))>>2)] = reportedElement ? reportedElement.clientHeight : 0;\r\n      HEAP32[(((eventStruct)+(272))>>2)] = screen.width;\r\n      HEAP32[(((eventStruct)+(276))>>2)] = screen.height;\r\n      if (isFullscreen) {\r\n        JSEvents.previousFullscreenElement = fullscreenElement;\r\n      }\r\n    }\r\n  \r\n  \r\n  function registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.fullscreenChangeEvent) JSEvents.fullscreenChangeEvent = _malloc( 280 );\r\n  \r\n      var fullscreenChangeEventhandlerFunc = function(e = event) {\r\n        var fullscreenChangeEvent = JSEvents.fullscreenChangeEvent;\r\n  \r\n        fillFullscreenChangeEventData(fullscreenChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, fullscreenChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: fullscreenChangeEventhandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  \r\n  function _emscripten_set_fullscreenchange_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"webkitfullscreenchange\", targetThread);\r\n  \r\n      return registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"fullscreenchange\", targetThread);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerGamepadEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.gamepadEvent) JSEvents.gamepadEvent = _malloc( 1432 );\r\n  \r\n      var gamepadEventHandlerFunc = function(e = event) {\r\n        var gamepadEvent = JSEvents.gamepadEvent;\r\n        fillGamepadEventData(gamepadEvent, e[\"gamepad\"]);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, gamepadEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: gamepadEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_gamepadconnected_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\r\n      return registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 26, \"gamepadconnected\", targetThread);\r\n    }\r\n\r\n  function _emscripten_set_gamepaddisconnected_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\r\n      return registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 27, \"gamepaddisconnected\", targetThread);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerKeyEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.keyEvent) JSEvents.keyEvent = _malloc( 176 );\r\n  \r\n      var keyEventHandlerFunc = function(e) {\r\n  \r\n        var keyEventData = JSEvents.keyEvent;\r\n        HEAPF64[((keyEventData)>>3)] = e.timeStamp;\r\n  \r\n        var idx = keyEventData >> 2;\r\n  \r\n        HEAP32[idx + 2] = e.location;\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        HEAP32[idx + 7] = e.repeat;\r\n        HEAP32[idx + 8] = e.charCode;\r\n        HEAP32[idx + 9] = e.keyCode;\r\n        HEAP32[idx + 10] = e.which;\r\n        stringToUTF8(e.key || '', keyEventData + 44, 32);\r\n        stringToUTF8(e.code || '', keyEventData + 76, 32);\r\n        stringToUTF8(e.char || '', keyEventData + 108, 32);\r\n        stringToUTF8(e.locale || '', keyEventData + 140, 32);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, keyEventData, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: keyEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_keydown_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerKeyEventCallback(target, userData, useCapture, callbackfunc, 2, \"keydown\", targetThread);\r\n    }\r\n\r\n  function _emscripten_set_keypress_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerKeyEventCallback(target, userData, useCapture, callbackfunc, 1, \"keypress\", targetThread);\r\n    }\r\n\r\n  function _emscripten_set_keyup_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerKeyEventCallback(target, userData, useCapture, callbackfunc, 3, \"keyup\", targetThread);\r\n    }\r\n\r\n  \r\n  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop) {\r\n      var browserIterationFunc = (() => dynCall_v.call(null, func));\r\n      setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillMouseEventData(eventStruct, e, target) {\r\n      HEAPF64[((eventStruct)>>3)] = e.timeStamp;\r\n      var idx = eventStruct >> 2;\r\n      HEAP32[idx + 2] = e.screenX;\r\n      HEAP32[idx + 3] = e.screenY;\r\n      HEAP32[idx + 4] = e.clientX;\r\n      HEAP32[idx + 5] = e.clientY;\r\n      HEAP32[idx + 6] = e.ctrlKey;\r\n      HEAP32[idx + 7] = e.shiftKey;\r\n      HEAP32[idx + 8] = e.altKey;\r\n      HEAP32[idx + 9] = e.metaKey;\r\n      HEAP16[idx*2 + 20] = e.button;\r\n      HEAP16[idx*2 + 21] = e.buttons;\r\n  \r\n      HEAP32[idx + 11] = e[\"movementX\"]\r\n        ;\r\n  \r\n      HEAP32[idx + 12] = e[\"movementY\"]\r\n        ;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAP32[idx + 13] = e.clientX - rect.left;\r\n      HEAP32[idx + 14] = e.clientY - rect.top;\r\n  \r\n    }\r\n  \r\n  \r\n  function registerMouseEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.mouseEvent) JSEvents.mouseEvent = _malloc( 72 );\r\n      target = findEventTarget(target);\r\n  \r\n      var mouseEventHandlerFunc = function(e = event) {\r\n        // TODO: Make this access thread safe, or this could update live while app is reading it.\r\n        fillMouseEventData(JSEvents.mouseEvent, e, target);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, JSEvents.mouseEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: eventTypeString != 'mousemove' && eventTypeString != 'mouseenter' && eventTypeString != 'mouseleave', // Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: mouseEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_mousedown_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerMouseEventCallback(target, userData, useCapture, callbackfunc, 5, \"mousedown\", targetThread);\r\n    }\r\n\r\n  function _emscripten_set_mouseenter_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerMouseEventCallback(target, userData, useCapture, callbackfunc, 33, \"mouseenter\", targetThread);\r\n    }\r\n\r\n  function _emscripten_set_mouseleave_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerMouseEventCallback(target, userData, useCapture, callbackfunc, 34, \"mouseleave\", targetThread);\r\n    }\r\n\r\n  function _emscripten_set_mousemove_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerMouseEventCallback(target, userData, useCapture, callbackfunc, 8, \"mousemove\", targetThread);\r\n    }\r\n\r\n  function _emscripten_set_mouseup_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerMouseEventCallback(target, userData, useCapture, callbackfunc, 6, \"mouseup\", targetThread);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillPointerlockChangeEventData(eventStruct) {\r\n      var pointerLockElement = document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement || document.msPointerLockElement;\r\n      var isPointerlocked = !!pointerLockElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isPointerlocked;\r\n      var nodeName = JSEvents.getNodeNameForTarget(pointerLockElement);\r\n      var id = (pointerLockElement && pointerLockElement.id) ? pointerLockElement.id : '';\r\n      stringToUTF8(nodeName, eventStruct + 4, 128);\r\n      stringToUTF8(id, eventStruct + 132, 128);\r\n    }\r\n  \r\n  \r\n  function registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.pointerlockChangeEvent) JSEvents.pointerlockChangeEvent = _malloc( 260 );\r\n  \r\n      var pointerlockChangeEventHandlerFunc = function(e = event) {\r\n        var pointerlockChangeEvent = JSEvents.pointerlockChangeEvent;\r\n        fillPointerlockChangeEventData(pointerlockChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, pointerlockChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: pointerlockChangeEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  \r\n  /** @suppress {missingProperties} */\r\n  function _emscripten_set_pointerlockchange_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      // TODO: Currently not supported in pthreads or in --proxy-to-worker mode. (In pthreads mode, document object is not defined)\r\n      if (!document || !document.body || (!document.body.requestPointerLock && !document.body.mozRequestPointerLock && !document.body.webkitRequestPointerLock && !document.body.msRequestPointerLock)) {\r\n        return -1;\r\n      }\r\n  \r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mozpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"webkitpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mspointerlockchange\", targetThread);\r\n      return registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"pointerlockchange\", targetThread);\r\n    }\r\n\r\n  \r\n  \r\n  function registerUiEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.uiEvent) JSEvents.uiEvent = _malloc( 36 );\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var uiEventHandlerFunc = function(e = event) {\r\n        if (e.target != target) {\r\n          // Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that\r\n          // was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log\r\n          // message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,\r\n          // causing a new scroll, etc..\r\n          return;\r\n        }\r\n        var b = document.body; // Take document.body to a variable, Closure compiler does not outline access to it on its own.\r\n        if (!b) {\r\n          // During a page unload 'body' can be null, with \"Cannot read property 'clientWidth' of null\" being thrown\r\n          return;\r\n        }\r\n        var uiEvent = JSEvents.uiEvent;\r\n        HEAP32[((uiEvent)>>2)] = e.detail;\r\n        HEAP32[(((uiEvent)+(4))>>2)] = b.clientWidth;\r\n        HEAP32[(((uiEvent)+(8))>>2)] = b.clientHeight;\r\n        HEAP32[(((uiEvent)+(12))>>2)] = innerWidth;\r\n        HEAP32[(((uiEvent)+(16))>>2)] = innerHeight;\r\n        HEAP32[(((uiEvent)+(20))>>2)] = outerWidth;\r\n        HEAP32[(((uiEvent)+(24))>>2)] = outerHeight;\r\n        HEAP32[(((uiEvent)+(28))>>2)] = pageXOffset;\r\n        HEAP32[(((uiEvent)+(32))>>2)] = pageYOffset;\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, uiEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: uiEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_resize_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerUiEventCallback(target, userData, useCapture, callbackfunc, 10, \"resize\", targetThread);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerTouchEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.touchEvent) JSEvents.touchEvent = _malloc( 1696 );\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var touchEventHandlerFunc = function(e) {\r\n        var t, touches = {}, et = e.touches;\r\n        // To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches, \r\n        // only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in\r\n        // each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.\r\n  \r\n        for (var i = 0; i < et.length; ++i) {\r\n          t = et[i];\r\n          // Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any\r\n          // changed/target states we may have set from previous frame.\r\n          t.isChanged = t.onTarget = 0;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the changedTouches list.\r\n        for (var i = 0; i < e.changedTouches.length; ++i) {\r\n          t = e.changedTouches[i];\r\n          t.isChanged = 1;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the targetTouches list.\r\n        for (var i = 0; i < e.targetTouches.length; ++i) {\r\n          touches[e.targetTouches[i].identifier].onTarget = 1;\r\n        }\r\n  \r\n        var touchEvent = JSEvents.touchEvent;\r\n        HEAPF64[((touchEvent)>>3)] = e.timeStamp;\r\n        var idx = touchEvent>>2; // Pre-shift the ptr to index to HEAP32 to save code size\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        idx += 7; // Advance to the start of the touch array.\r\n        var targetRect = getBoundingClientRect(target);\r\n        var numTouches = 0;\r\n        for (var i in touches) {\r\n          t = touches[i];\r\n          HEAP32[idx + 0] = t.identifier;\r\n          HEAP32[idx + 1] = t.screenX;\r\n          HEAP32[idx + 2] = t.screenY;\r\n          HEAP32[idx + 3] = t.clientX;\r\n          HEAP32[idx + 4] = t.clientY;\r\n          HEAP32[idx + 5] = t.pageX;\r\n          HEAP32[idx + 6] = t.pageY;\r\n          HEAP32[idx + 7] = t.isChanged;\r\n          HEAP32[idx + 8] = t.onTarget;\r\n          HEAP32[idx + 9] = t.clientX - targetRect.left;\r\n          HEAP32[idx + 10] = t.clientY - targetRect.top;\r\n  \r\n          idx += 13;\r\n  \r\n          if (++numTouches > 31) {\r\n            break;\r\n          }\r\n        }\r\n        HEAP32[(((touchEvent)+(8))>>2)] = numTouches;\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, touchEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: eventTypeString == 'touchstart' || eventTypeString == 'touchend',\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: touchEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_touchcancel_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerTouchEventCallback(target, userData, useCapture, callbackfunc, 25, \"touchcancel\", targetThread);\r\n    }\r\n\r\n  function _emscripten_set_touchend_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerTouchEventCallback(target, userData, useCapture, callbackfunc, 23, \"touchend\", targetThread);\r\n    }\r\n\r\n  function _emscripten_set_touchmove_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerTouchEventCallback(target, userData, useCapture, callbackfunc, 24, \"touchmove\", targetThread);\r\n    }\r\n\r\n  function _emscripten_set_touchstart_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      return registerTouchEventCallback(target, userData, useCapture, callbackfunc, 22, \"touchstart\", targetThread);\r\n    }\r\n\r\n  \r\n  function fillVisibilityChangeEventData(eventStruct) {\r\n      var visibilityStates = [ \"hidden\", \"visible\", \"prerender\", \"unloaded\" ];\r\n      var visibilityState = visibilityStates.indexOf(document.visibilityState);\r\n  \r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = document.hidden;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = visibilityState;\r\n    }\r\n  \r\n  \r\n  function registerVisibilityChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.visibilityChangeEvent) JSEvents.visibilityChangeEvent = _malloc( 8 );\r\n  \r\n      var visibilityChangeEventHandlerFunc = function(e = event) {\r\n        var visibilityChangeEvent = JSEvents.visibilityChangeEvent;\r\n  \r\n        fillVisibilityChangeEventData(visibilityChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, visibilityChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: visibilityChangeEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  function _emscripten_set_visibilitychange_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      return registerVisibilityChangeEventCallback(specialHTMLTargets[1], userData, useCapture, callbackfunc, 21, \"visibilitychange\", targetThread);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  function registerWheelEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.wheelEvent) JSEvents.wheelEvent = _malloc( 104 );\r\n  \r\n      // The DOM Level 3 events spec event 'wheel'\r\n      var wheelHandlerFunc = function(e = event) {\r\n        var wheelEvent = JSEvents.wheelEvent;\r\n        fillMouseEventData(wheelEvent, e, target);\r\n        HEAPF64[(((wheelEvent)+(72))>>3)] = e[\"deltaX\"];\r\n        HEAPF64[(((wheelEvent)+(80))>>3)] = e[\"deltaY\"];\r\n        HEAPF64[(((wheelEvent)+(88))>>3)] = e[\"deltaZ\"];\r\n        HEAP32[(((wheelEvent)+(96))>>2)] = e[\"deltaMode\"];\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, wheelEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: wheelHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  function _emscripten_set_wheel_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      if (typeof target.onwheel != 'undefined') {\r\n        return registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, \"wheel\", targetThread);\r\n      } else {\r\n        return -1;\r\n      }\r\n    }\r\n\r\n  \r\n  function _emscripten_set_window_title(title) {\r\n      setWindowTitle(UTF8ToString(title));\r\n    }\r\n\r\n  function _emscripten_sleep(ms) {\r\n      // emscripten_sleep() does not return a value, but we still need a |return|\r\n      // here for stack switching support (ASYNCIFY=2). In that mode this function\r\n      // returns a Promise instead of nothing, and that Promise is what tells the\r\n      // wasm VM to pause the stack.\r\n      return Asyncify.handleSleep((wakeUp) => safeSetTimeout(wakeUp, ms));\r\n    }\r\n  _emscripten_sleep.isAsync = true;\r\n\r\n  var ENV = {};\r\n  \r\n  function getExecutableName() {\r\n      return thisProgram || './this.program';\r\n    }\r\n  function getEnvStrings() {\r\n      if (!getEnvStrings.strings) {\r\n        // Default values.\r\n        // Browser language detection #8751\r\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\r\n        var env = {\r\n          'USER': 'web_user',\r\n          'LOGNAME': 'web_user',\r\n          'PATH': '/',\r\n          'PWD': '/',\r\n          'HOME': '/home/web_user',\r\n          'LANG': lang,\r\n          '_': getExecutableName()\r\n        };\r\n        // Apply the user-provided values, if any.\r\n        for (var x in ENV) {\r\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\r\n          // explicitly set to be so. We allow user code to do that to\r\n          // force variables with default values to remain unset.\r\n          if (ENV[x] === undefined) delete env[x];\r\n          else env[x] = ENV[x];\r\n        }\r\n        var strings = [];\r\n        for (var x in env) {\r\n          strings.push(`${x}=${env[x]}`);\r\n        }\r\n        getEnvStrings.strings = strings;\r\n      }\r\n      return getEnvStrings.strings;\r\n    }\r\n  \r\n  function stringToAscii(str, buffer) {\r\n      for (var i = 0; i < str.length; ++i) {\r\n        HEAP8[((buffer++)>>0)] = str.charCodeAt(i);\r\n      }\r\n      // Null-terminate the string\r\n      HEAP8[((buffer)>>0)] = 0;\r\n    }\r\n  \r\n  function _environ_get(__environ, environ_buf) {\r\n      var bufSize = 0;\r\n      getEnvStrings().forEach(function(string, i) {\r\n        var ptr = environ_buf + bufSize;\r\n        HEAPU32[(((__environ)+(i*4))>>2)] = ptr;\r\n        stringToAscii(string, ptr);\r\n        bufSize += string.length + 1;\r\n      });\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function _environ_sizes_get(penviron_count, penviron_buf_size) {\r\n      var strings = getEnvStrings();\r\n      HEAPU32[((penviron_count)>>2)] = strings.length;\r\n      var bufSize = 0;\r\n      strings.forEach(function(string) {\r\n        bufSize += string.length + 1;\r\n      });\r\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\r\n      return 0;\r\n    }\r\n\r\n\r\n  function _fd_close(fd) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.close(stream);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  function _fd_fdstat_get(fd, pbuf) {\r\n  try {\r\n  \r\n      var rightsBase = 0;\r\n      var rightsInheriting = 0;\r\n      var flags = 0;\r\n      {\r\n        var stream = SYSCALLS.getStreamFromFD(fd);\r\n        // All character devices are terminals (other things a Linux system would\r\n        // assume is a character device, like the mouse, we have special APIs for).\r\n        var type = stream.tty ? 2 :\r\n                   FS.isDir(stream.mode) ? 3 :\r\n                   FS.isLink(stream.mode) ? 7 :\r\n                   4;\r\n      }\r\n      HEAP8[((pbuf)>>0)] = type;\r\n      HEAP16[(((pbuf)+(2))>>1)] = flags;\r\n      (tempI64 = [rightsBase>>>0,(tempDouble=rightsBase,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(8))>>2)] = tempI64[0],HEAP32[(((pbuf)+(12))>>2)] = tempI64[1]);\r\n      (tempI64 = [rightsInheriting>>>0,(tempDouble=rightsInheriting,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(16))>>2)] = tempI64[0],HEAP32[(((pbuf)+(20))>>2)] = tempI64[1]);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  function doReadv(stream, iov, iovcnt, offset) {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.read(stream, HEAP8,ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (curr < len) break; // nothing more to read\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n  \r\n  function _fd_read(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doReadv(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\r\n  try {\r\n  \r\n      var offset = convertI32PairToI53Checked(offset_low, offset_high); if (isNaN(offset)) return 61;\r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.llseek(stream, offset, whence);\r\n      (tempI64 = [stream.position>>>0,(tempDouble=stream.position,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((newOffset)>>2)] = tempI64[0],HEAP32[(((newOffset)+(4))>>2)] = tempI64[1]);\r\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  function doWritev(stream, iov, iovcnt, offset) {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.write(stream, HEAP8,ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n  \r\n  function _fd_write(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doWritev(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n\r\n  \r\n  function arraySum(array, index) {\r\n      var sum = 0;\r\n      for (var i = 0; i <= index; sum += array[i++]) {\r\n        // no-op\r\n      }\r\n      return sum;\r\n    }\r\n  \r\n  \r\n  var MONTH_DAYS_LEAP = [31,29,31,30,31,30,31,31,30,31,30,31];\r\n  \r\n  var MONTH_DAYS_REGULAR = [31,28,31,30,31,30,31,31,30,31,30,31];\r\n  function addDays(date, days) {\r\n      var newDate = new Date(date.getTime());\r\n      while (days > 0) {\r\n        var leap = isLeapYear(newDate.getFullYear());\r\n        var currentMonth = newDate.getMonth();\r\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\r\n  \r\n        if (days > daysInCurrentMonth-newDate.getDate()) {\r\n          // we spill over to next month\r\n          days -= (daysInCurrentMonth-newDate.getDate()+1);\r\n          newDate.setDate(1);\r\n          if (currentMonth < 11) {\r\n            newDate.setMonth(currentMonth+1)\r\n          } else {\r\n            newDate.setMonth(0);\r\n            newDate.setFullYear(newDate.getFullYear()+1);\r\n          }\r\n        } else {\r\n          // we stay in current month\r\n          newDate.setDate(newDate.getDate()+days);\r\n          return newDate;\r\n        }\r\n      }\r\n  \r\n      return newDate;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  function writeArrayToMemory(array, buffer) {\r\n      HEAP8.set(array, buffer);\r\n    }\r\n  \r\n  function _strftime(s, maxsize, format, tm) {\r\n      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);\r\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html\r\n  \r\n      var tm_zone = HEAP32[(((tm)+(40))>>2)];\r\n  \r\n      var date = {\r\n        tm_sec: HEAP32[((tm)>>2)],\r\n        tm_min: HEAP32[(((tm)+(4))>>2)],\r\n        tm_hour: HEAP32[(((tm)+(8))>>2)],\r\n        tm_mday: HEAP32[(((tm)+(12))>>2)],\r\n        tm_mon: HEAP32[(((tm)+(16))>>2)],\r\n        tm_year: HEAP32[(((tm)+(20))>>2)],\r\n        tm_wday: HEAP32[(((tm)+(24))>>2)],\r\n        tm_yday: HEAP32[(((tm)+(28))>>2)],\r\n        tm_isdst: HEAP32[(((tm)+(32))>>2)],\r\n        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],\r\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''\r\n      };\r\n  \r\n      var pattern = UTF8ToString(format);\r\n  \r\n      // expand format\r\n      var EXPANSION_RULES_1 = {\r\n        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013\r\n        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y\r\n        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d\r\n        '%h': '%b',                       // Equivalent to %b\r\n        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation\r\n        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation\r\n        '%T': '%H:%M:%S',                 // Replaced by the time\r\n        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation\r\n        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation\r\n        // Modified Conversion Specifiers\r\n        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.\r\n        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.\r\n        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.\r\n        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.\r\n        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.\r\n        '%EY': '%Y',                      // Replaced by the full alternative year representation.\r\n        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.\r\n        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.\r\n        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.\r\n        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.\r\n        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.\r\n        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.\r\n        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.\r\n        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).\r\n        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.\r\n        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.\r\n        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.\r\n        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.\r\n        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.\r\n      };\r\n      for (var rule in EXPANSION_RULES_1) {\r\n        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\r\n      }\r\n  \r\n      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  \r\n      function leadingSomething(value, digits, character) {\r\n        var str = typeof value == 'number' ? value.toString() : (value || '');\r\n        while (str.length < digits) {\r\n          str = character[0]+str;\r\n        }\r\n        return str;\r\n      }\r\n  \r\n      function leadingNulls(value, digits) {\r\n        return leadingSomething(value, digits, '0');\r\n      }\r\n  \r\n      function compareByDay(date1, date2) {\r\n        function sgn(value) {\r\n          return value < 0 ? -1 : (value > 0 ? 1 : 0);\r\n        }\r\n  \r\n        var compare;\r\n        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {\r\n          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {\r\n            compare = sgn(date1.getDate()-date2.getDate());\r\n          }\r\n        }\r\n        return compare;\r\n      }\r\n  \r\n      function getFirstWeekStartDate(janFourth) {\r\n          switch (janFourth.getDay()) {\r\n            case 0: // Sunday\r\n              return new Date(janFourth.getFullYear()-1, 11, 29);\r\n            case 1: // Monday\r\n              return janFourth;\r\n            case 2: // Tuesday\r\n              return new Date(janFourth.getFullYear(), 0, 3);\r\n            case 3: // Wednesday\r\n              return new Date(janFourth.getFullYear(), 0, 2);\r\n            case 4: // Thursday\r\n              return new Date(janFourth.getFullYear(), 0, 1);\r\n            case 5: // Friday\r\n              return new Date(janFourth.getFullYear()-1, 11, 31);\r\n            case 6: // Saturday\r\n              return new Date(janFourth.getFullYear()-1, 11, 30);\r\n          }\r\n      }\r\n  \r\n      function getWeekBasedYear(date) {\r\n          var thisDate = addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);\r\n  \r\n          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\r\n          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);\r\n  \r\n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\r\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\r\n  \r\n          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\r\n            // this date is after the start of the first week of this year\r\n            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\r\n              return thisDate.getFullYear()+1;\r\n            }\r\n            return thisDate.getFullYear();\r\n          }\r\n          return thisDate.getFullYear()-1;\r\n      }\r\n  \r\n      var EXPANSION_RULES_2 = {\r\n        '%a': function(date) {\r\n          return WEEKDAYS[date.tm_wday].substring(0,3);\r\n        },\r\n        '%A': function(date) {\r\n          return WEEKDAYS[date.tm_wday];\r\n        },\r\n        '%b': function(date) {\r\n          return MONTHS[date.tm_mon].substring(0,3);\r\n        },\r\n        '%B': function(date) {\r\n          return MONTHS[date.tm_mon];\r\n        },\r\n        '%C': function(date) {\r\n          var year = date.tm_year+1900;\r\n          return leadingNulls((year/100)|0,2);\r\n        },\r\n        '%d': function(date) {\r\n          return leadingNulls(date.tm_mday, 2);\r\n        },\r\n        '%e': function(date) {\r\n          return leadingSomething(date.tm_mday, 2, ' ');\r\n        },\r\n        '%g': function(date) {\r\n          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.\r\n          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes\r\n          // January 4th, which is also the week that includes the first Thursday of the year, and\r\n          // is also the first week that contains at least four days in the year.\r\n          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of\r\n          // the last week of the preceding year; thus, for Saturday 2nd January 1999,\r\n          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,\r\n          // or 31st is a Monday, it and any following days are part of week 1 of the following year.\r\n          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.\r\n  \r\n          return getWeekBasedYear(date).toString().substring(2);\r\n        },\r\n        '%G': function(date) {\r\n          return getWeekBasedYear(date);\r\n        },\r\n        '%H': function(date) {\r\n          return leadingNulls(date.tm_hour, 2);\r\n        },\r\n        '%I': function(date) {\r\n          var twelveHour = date.tm_hour;\r\n          if (twelveHour == 0) twelveHour = 12;\r\n          else if (twelveHour > 12) twelveHour -= 12;\r\n          return leadingNulls(twelveHour, 2);\r\n        },\r\n        '%j': function(date) {\r\n          // Day of the year (001-366)\r\n          return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year+1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon-1), 3);\r\n        },\r\n        '%m': function(date) {\r\n          return leadingNulls(date.tm_mon+1, 2);\r\n        },\r\n        '%M': function(date) {\r\n          return leadingNulls(date.tm_min, 2);\r\n        },\r\n        '%n': function() {\r\n          return '\\n';\r\n        },\r\n        '%p': function(date) {\r\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\r\n            return 'AM';\r\n          }\r\n          return 'PM';\r\n        },\r\n        '%S': function(date) {\r\n          return leadingNulls(date.tm_sec, 2);\r\n        },\r\n        '%t': function() {\r\n          return '\\t';\r\n        },\r\n        '%u': function(date) {\r\n          return date.tm_wday || 7;\r\n        },\r\n        '%U': function(date) {\r\n          var days = date.tm_yday + 7 - date.tm_wday;\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%V': function(date) {\r\n          // Replaced by the week number of the year (Monday as the first day of the week)\r\n          // as a decimal number [01,53]. If the week containing 1 January has four\r\n          // or more days in the new year, then it is considered week 1.\r\n          // Otherwise, it is the last week of the previous year, and the next week is week 1.\r\n          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]\r\n          var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7 ) / 7);\r\n          // If 1 Jan is just 1-3 days past Monday, the previous week\r\n          // is also in this year.\r\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\r\n            val++;\r\n          }\r\n          if (!val) {\r\n            val = 52;\r\n            // If 31 December of prev year a Thursday, or Friday of a\r\n            // leap year, then the prev year has 53 weeks.\r\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\r\n            if (dec31 == 4 || (dec31 == 5 && isLeapYear(date.tm_year%400-1))) {\r\n              val++;\r\n            }\r\n          } else if (val == 53) {\r\n            // If 1 January is not a Thursday, and not a Wednesday of a\r\n            // leap year, then this year has only 52 weeks.\r\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\r\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year)))\r\n              val = 1;\r\n          }\r\n          return leadingNulls(val, 2);\r\n        },\r\n        '%w': function(date) {\r\n          return date.tm_wday;\r\n        },\r\n        '%W': function(date) {\r\n          var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%y': function(date) {\r\n          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]\r\n          return (date.tm_year+1900).toString().substring(2);\r\n        },\r\n        '%Y': function(date) {\r\n          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]\r\n          return date.tm_year+1900;\r\n        },\r\n        '%z': function(date) {\r\n          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).\r\n          // For example, \"-0430\" means 4 hours 30 minutes behind UTC (west of Greenwich).\r\n          var off = date.tm_gmtoff;\r\n          var ahead = off >= 0;\r\n          off = Math.abs(off) / 60;\r\n          // convert from minutes into hhmm format (which means 60 minutes = 100 units)\r\n          off = (off / 60)*100 + (off % 60);\r\n          return (ahead ? '+' : '-') + String(\"0000\" + off).slice(-4);\r\n        },\r\n        '%Z': function(date) {\r\n          return date.tm_zone;\r\n        },\r\n        '%%': function() {\r\n          return '%';\r\n        }\r\n      };\r\n  \r\n      // Replace %% with a pair of NULLs (which cannot occur in a C string), then\r\n      // re-inject them after processing.\r\n      pattern = pattern.replace(/%%/g, '\\0\\0')\r\n      for (var rule in EXPANSION_RULES_2) {\r\n        if (pattern.includes(rule)) {\r\n          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\r\n        }\r\n      }\r\n      pattern = pattern.replace(/\\0\\0/g, '%')\r\n  \r\n      var bytes = intArrayFromString(pattern, false);\r\n      if (bytes.length > maxsize) {\r\n        return 0;\r\n      }\r\n  \r\n      writeArrayToMemory(bytes, s);\r\n      return bytes.length-1;\r\n    }\r\n\r\n  function _strftime_l(s, maxsize, format, tm, loc) {\r\n      return _strftime(s, maxsize, format, tm); // no locale support yet\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  function runAndAbortIfError(func) {\r\n      try {\r\n        return func();\r\n      } catch (e) {\r\n        abort(e);\r\n      }\r\n    }\r\n  \r\n  \r\n  function sigToWasmTypes(sig) {\r\n      var typeNames = {\r\n        'i': 'i32',\r\n        'j': 'i64',\r\n        'f': 'f32',\r\n        'd': 'f64',\r\n        'p': 'i32',\r\n      };\r\n      var type = {\r\n        parameters: [],\r\n        results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\r\n      };\r\n      for (var i = 1; i < sig.length; ++i) {\r\n        type.parameters.push(typeNames[sig[i]]);\r\n      }\r\n      return type;\r\n    }\r\n  \r\n  function runtimeKeepalivePush() {\r\n      runtimeKeepaliveCounter += 1;\r\n    }\r\n  \r\n  function runtimeKeepalivePop() {\r\n      runtimeKeepaliveCounter -= 1;\r\n    }\r\n  \r\n  \r\n  var Asyncify = {instrumentWasmImports:function(imports) {\r\n        var importPatterns = [/^invoke_.*$/,/^fd_sync$/,/^__wasi_fd_sync$/,/^__asyncjs__.*$/,/^emscripten_idb_load$/,/^emscripten_idb_store$/,/^emscripten_idb_delete$/,/^emscripten_idb_exists$/,/^emscripten_idb_load_blob$/,/^emscripten_idb_store_blob$/,/^emscripten_sleep$/,/^emscripten_wget$/,/^emscripten_wget_data$/,/^emscripten_scan_registers$/,/^emscripten_lazy_load_code$/,/^_load_secondary_module$/,/^emscripten_fiber_swap$/];\r\n  \r\n        for (var x in imports) {\r\n          (function(x) {\r\n            var original = imports[x];\r\n            var sig = original.sig;\r\n            if (typeof original == 'function') {\r\n              var isAsyncifyImport = original.isAsync ||\r\n                                     importPatterns.some(pattern => !!x.match(pattern));\r\n            }\r\n          })(x);\r\n        }\r\n      },instrumentWasmExports:function(exports) {\r\n        var ret = {};\r\n        for (var x in exports) {\r\n          (function(x) {\r\n            var original = exports[x];\r\n            if (typeof original == 'function') {\r\n              ret[x] = function() {\r\n                Asyncify.exportCallStack.push(x);\r\n                try {\r\n                  return original.apply(null, arguments);\r\n                } finally {\r\n                  if (!ABORT) {\r\n                    var y = Asyncify.exportCallStack.pop();\r\n                    assert(y === x);\r\n                    Asyncify.maybeStopUnwind();\r\n                  }\r\n                }\r\n              };\r\n            } else {\r\n              ret[x] = original;\r\n            }\r\n          })(x);\r\n        }\r\n        return ret;\r\n      },State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId:function(funcName) {\r\n        var id = Asyncify.callStackNameToId[funcName];\r\n        if (id === undefined) {\r\n          id = Asyncify.callStackId++;\r\n          Asyncify.callStackNameToId[funcName] = id;\r\n          Asyncify.callStackIdToName[id] = funcName;\r\n        }\r\n        return id;\r\n      },maybeStopUnwind:function() {\r\n        if (Asyncify.currData &&\r\n            Asyncify.state === Asyncify.State.Unwinding &&\r\n            Asyncify.exportCallStack.length === 0) {\r\n          // We just finished unwinding.\r\n          // Be sure to set the state before calling any other functions to avoid\r\n          // possible infinite recursion here (For example in debug pthread builds\r\n          // the dbg() function itself can call back into WebAssembly to get the\r\n          // current pthread_self() pointer).\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          \r\n          // Keep the runtime alive so that a re-wind can be done later.\r\n          runAndAbortIfError(_asyncify_stop_unwind);\r\n          if (typeof Fibers != 'undefined') {\r\n            Fibers.trampoline();\r\n          }\r\n        }\r\n      },whenDone:function() {\r\n        return new Promise((resolve, reject) => {\r\n          Asyncify.asyncPromiseHandlers = {\r\n            resolve: resolve,\r\n            reject: reject\r\n          };\r\n        });\r\n      },allocateData:function() {\r\n        // An asyncify data structure has three fields:\r\n        //  0  current stack pos\r\n        //  4  max stack pos\r\n        //  8  id of function at bottom of the call stack (callStackIdToName[id] == name of js function)\r\n        //\r\n        // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\r\n        // We also embed a stack in the same memory region here, right next to the structure.\r\n        // This struct is also defined as asyncify_data_t in emscripten/fiber.h\r\n        var ptr = _malloc(12 + Asyncify.StackSize);\r\n        Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\r\n        Asyncify.setDataRewindFunc(ptr);\r\n        return ptr;\r\n      },setDataHeader:function(ptr, stack, stackSize) {\r\n        HEAP32[((ptr)>>2)] = stack;\r\n        HEAP32[(((ptr)+(4))>>2)] = stack + stackSize;\r\n      },setDataRewindFunc:function(ptr) {\r\n        var bottomOfCallStack = Asyncify.exportCallStack[0];\r\n        var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\r\n        HEAP32[(((ptr)+(8))>>2)] = rewindId;\r\n      },getDataRewindFunc:function(ptr) {\r\n        var id = HEAP32[(((ptr)+(8))>>2)];\r\n        var name = Asyncify.callStackIdToName[id];\r\n        var func = Module['asm'][name];\r\n        return func;\r\n      },doRewind:function(ptr) {\r\n        var start = Asyncify.getDataRewindFunc(ptr);\r\n        // Once we have rewound and the stack we no longer need to artificially\r\n        // keep the runtime alive.\r\n        \r\n        return start();\r\n      },handleSleep:function(startAsync) {\r\n        if (ABORT) return;\r\n        if (Asyncify.state === Asyncify.State.Normal) {\r\n          // Prepare to sleep. Call startAsync, and see what happens:\r\n          // if the code decided to call our callback synchronously,\r\n          // then no async operation was in fact begun, and we don't\r\n          // need to do anything.\r\n          var reachedCallback = false;\r\n          var reachedAfterCallback = false;\r\n          startAsync((handleSleepReturnValue = 0) => {\r\n            if (ABORT) return;\r\n            Asyncify.handleSleepReturnValue = handleSleepReturnValue;\r\n            reachedCallback = true;\r\n            if (!reachedAfterCallback) {\r\n              // We are happening synchronously, so no need for async.\r\n              return;\r\n            }\r\n            Asyncify.state = Asyncify.State.Rewinding;\r\n            runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.resume();\r\n            }\r\n            var asyncWasmReturnValue, isError = false;\r\n            try {\r\n              asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\r\n            } catch (err) {\r\n              asyncWasmReturnValue = err;\r\n              isError = true;\r\n            }\r\n            // Track whether the return value was handled by any promise handlers.\r\n            var handled = false;\r\n            if (!Asyncify.currData) {\r\n              // All asynchronous execution has finished.\r\n              // `asyncWasmReturnValue` now contains the final\r\n              // return value of the exported async WASM function.\r\n              //\r\n              // Note: `asyncWasmReturnValue` is distinct from\r\n              // `Asyncify.handleSleepReturnValue`.\r\n              // `Asyncify.handleSleepReturnValue` contains the return\r\n              // value of the last C function to have executed\r\n              // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\r\n              // contains the return value of the exported WASM function\r\n              // that may have called C functions that\r\n              // call `Asyncify.handleSleep()`.\r\n              var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\r\n              if (asyncPromiseHandlers) {\r\n                Asyncify.asyncPromiseHandlers = null;\r\n                (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\r\n                handled = true;\r\n              }\r\n            }\r\n            if (isError && !handled) {\r\n              // If there was an error and it was not handled by now, we have no choice but to\r\n              // rethrow that error into the global scope where it can be caught only by\r\n              // `onerror` or `onunhandledpromiserejection`.\r\n              throw asyncWasmReturnValue;\r\n            }\r\n          });\r\n          reachedAfterCallback = true;\r\n          if (!reachedCallback) {\r\n            // A true async operation was begun; start a sleep.\r\n            Asyncify.state = Asyncify.State.Unwinding;\r\n            // TODO: reuse, don't alloc/free every sleep\r\n            Asyncify.currData = Asyncify.allocateData();\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.pause();\r\n            }\r\n            runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\r\n          }\r\n        } else if (Asyncify.state === Asyncify.State.Rewinding) {\r\n          // Stop a resume.\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          runAndAbortIfError(_asyncify_stop_rewind);\r\n          _free(Asyncify.currData);\r\n          Asyncify.currData = null;\r\n          // Call all sleep callbacks now that the sleep-resume is all done.\r\n          Asyncify.sleepCallbacks.forEach((func) => callUserCallback(func));\r\n        } else {\r\n          abort(`invalid state: ${Asyncify.state}`);\r\n        }\r\n        return Asyncify.handleSleepReturnValue;\r\n      },handleAsync:function(startAsync) {\r\n        return Asyncify.handleSleep((wakeUp) => {\r\n          // TODO: add error handling as a second param when handleSleep implements it.\r\n          startAsync().then(wakeUp);\r\n        });\r\n      }};\r\n\r\n\r\n\r\n  var FSNode = /** @constructor */ function(parent, name, mode, rdev) {\r\n    if (!parent) {\r\n      parent = this;  // root node sets parent to itself\r\n    }\r\n    this.parent = parent;\r\n    this.mount = parent.mount;\r\n    this.mounted = null;\r\n    this.id = FS.nextInode++;\r\n    this.name = name;\r\n    this.mode = mode;\r\n    this.node_ops = {};\r\n    this.stream_ops = {};\r\n    this.rdev = rdev;\r\n  };\r\n  var readMode = 292/*292*/ | 73/*73*/;\r\n  var writeMode = 146/*146*/;\r\n  Object.defineProperties(FSNode.prototype, {\r\n   read: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & readMode) === readMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= readMode : this.mode &= ~readMode;\r\n    }\r\n   },\r\n   write: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & writeMode) === writeMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= writeMode : this.mode &= ~writeMode;\r\n    }\r\n   },\r\n   isFolder: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isDir(this.mode);\r\n    }\r\n   },\r\n   isDevice: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isChrdev(this.mode);\r\n    }\r\n   }\r\n  });\r\n  FS.FSNode = FSNode;\r\n  FS.createPreloadedFile = FS_createPreloadedFile;\r\n  FS.staticInit();Module[\"FS_createPath\"] = FS.createPath;Module[\"FS_createDataFile\"] = FS.createDataFile;Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;Module[\"FS_unlink\"] = FS.unlink;Module[\"FS_createLazyFile\"] = FS.createLazyFile;Module[\"FS_createDevice\"] = FS.createDevice;;\r\n\r\n      // exports\r\n      Module[\"requestFullscreen\"] = function Module_requestFullscreen(lockPointer, resizeCanvas) { Browser.requestFullscreen(lockPointer, resizeCanvas) };\r\n      Module[\"requestAnimationFrame\"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };\r\n      Module[\"setCanvasSize\"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };\r\n      Module[\"pauseMainLoop\"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };\r\n      Module[\"resumeMainLoop\"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };\r\n      Module[\"getUserMedia\"] = function Module_getUserMedia() { Browser.getUserMedia() };\r\n      Module[\"createContext\"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) };\r\n      var preloadedImages = {};\r\n      var preloadedAudios = {};;\r\nvar GLctx;;\r\nfor (var i = 0; i < 32; ++i) tempFixedLengthArray.push(new Array(i));;\r\nvar miniTempWebGLFloatBuffersStorage = new Float32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n  miniTempWebGLFloatBuffers[i] = miniTempWebGLFloatBuffersStorage.subarray(0, i+1);\r\n  }\r\n  ;\r\nvar miniTempWebGLIntBuffersStorage = new Int32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n  miniTempWebGLIntBuffers[i] = miniTempWebGLIntBuffersStorage.subarray(0, i+1);\r\n  }\r\n  ;\r\n// include: base64Utils.js\r\n// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149\r\n\r\n// This code was written by Tyler Akins and has been placed in the\r\n// public domain.  It would be nice if you left this header intact.\r\n// Base64 code from Tyler Akins -- http://rumkin.com\r\n\r\n/**\r\n * Decodes a base64 string.\r\n * @param {string} input The string to decode.\r\n */\r\nvar decodeBase64 = typeof atob == 'function' ? atob : function (input) {\r\n  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\n  var output = '';\r\n  var chr1, chr2, chr3;\r\n  var enc1, enc2, enc3, enc4;\r\n  var i = 0;\r\n  // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\r\n  do {\r\n    enc1 = keyStr.indexOf(input.charAt(i++));\r\n    enc2 = keyStr.indexOf(input.charAt(i++));\r\n    enc3 = keyStr.indexOf(input.charAt(i++));\r\n    enc4 = keyStr.indexOf(input.charAt(i++));\r\n\r\n    chr1 = (enc1 << 2) | (enc2 >> 4);\r\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n    chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n    output = output + String.fromCharCode(chr1);\r\n\r\n    if (enc3 !== 64) {\r\n      output = output + String.fromCharCode(chr2);\r\n    }\r\n    if (enc4 !== 64) {\r\n      output = output + String.fromCharCode(chr3);\r\n    }\r\n  } while (i < input.length);\r\n  return output;\r\n};\r\n\r\n// Converts a string of base64 into a byte array.\r\n// Throws error on invalid input.\r\nfunction intArrayFromBase64(s) {\r\n\r\n  try {\r\n    var decoded = decodeBase64(s);\r\n    var bytes = new Uint8Array(decoded.length);\r\n    for (var i = 0 ; i < decoded.length ; ++i) {\r\n      bytes[i] = decoded.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n  } catch (_) {\r\n    throw new Error('Converting base64 string to bytes failed.');\r\n  }\r\n}\r\n\r\n// If filename is a base64 data URI, parses and returns data (Buffer on node,\r\n// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.\r\nfunction tryParseAsDataURI(filename) {\r\n  if (!isDataURI(filename)) {\r\n    return;\r\n  }\r\n\r\n  return intArrayFromBase64(filename.slice(dataURIPrefix.length));\r\n}\r\n\r\n\r\n// end include: base64Utils.js\r\nvar wasmImports = {\r\n  \"__cxa_throw\": ___cxa_throw,\r\n  \"__syscall_chmod\": ___syscall_chmod,\r\n  \"__syscall_fchmod\": ___syscall_fchmod,\r\n  \"__syscall_fcntl64\": ___syscall_fcntl64,\r\n  \"__syscall_fstat64\": ___syscall_fstat64,\r\n  \"__syscall_ftruncate64\": ___syscall_ftruncate64,\r\n  \"__syscall_getcwd\": ___syscall_getcwd,\r\n  \"__syscall_getdents64\": ___syscall_getdents64,\r\n  \"__syscall_ioctl\": ___syscall_ioctl,\r\n  \"__syscall_lstat64\": ___syscall_lstat64,\r\n  \"__syscall_mkdirat\": ___syscall_mkdirat,\r\n  \"__syscall_newfstatat\": ___syscall_newfstatat,\r\n  \"__syscall_openat\": ___syscall_openat,\r\n  \"__syscall_rmdir\": ___syscall_rmdir,\r\n  \"__syscall_stat64\": ___syscall_stat64,\r\n  \"__syscall_unlinkat\": ___syscall_unlinkat,\r\n  \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\r\n  \"_localtime_js\": __localtime_js,\r\n  \"_mktime_js\": __mktime_js,\r\n  \"_tzset_js\": __tzset_js,\r\n  \"abort\": _abort,\r\n  \"eglBindAPI\": _eglBindAPI,\r\n  \"eglChooseConfig\": _eglChooseConfig,\r\n  \"eglCreateContext\": _eglCreateContext,\r\n  \"eglCreateWindowSurface\": _eglCreateWindowSurface,\r\n  \"eglDestroyContext\": _eglDestroyContext,\r\n  \"eglDestroySurface\": _eglDestroySurface,\r\n  \"eglGetConfigAttrib\": _eglGetConfigAttrib,\r\n  \"eglGetDisplay\": _eglGetDisplay,\r\n  \"eglGetError\": _eglGetError,\r\n  \"eglInitialize\": _eglInitialize,\r\n  \"eglMakeCurrent\": _eglMakeCurrent,\r\n  \"eglQueryString\": _eglQueryString,\r\n  \"eglSwapBuffers\": _eglSwapBuffers,\r\n  \"eglSwapInterval\": _eglSwapInterval,\r\n  \"eglTerminate\": _eglTerminate,\r\n  \"eglWaitGL\": _eglWaitGL,\r\n  \"eglWaitNative\": _eglWaitNative,\r\n  \"emscripten_asm_const_int\": _emscripten_asm_const_int,\r\n  \"emscripten_asm_const_int_sync_on_main_thread\": _emscripten_asm_const_int_sync_on_main_thread,\r\n  \"emscripten_date_now\": _emscripten_date_now,\r\n  \"emscripten_enter_soft_fullscreen\": _emscripten_enter_soft_fullscreen,\r\n  \"emscripten_exit_fullscreen\": _emscripten_exit_fullscreen,\r\n  \"emscripten_exit_pointerlock\": _emscripten_exit_pointerlock,\r\n  \"emscripten_exit_soft_fullscreen\": _emscripten_exit_soft_fullscreen,\r\n  \"emscripten_get_device_pixel_ratio\": _emscripten_get_device_pixel_ratio,\r\n  \"emscripten_get_element_css_size\": _emscripten_get_element_css_size,\r\n  \"emscripten_get_gamepad_status\": _emscripten_get_gamepad_status,\r\n  \"emscripten_get_now\": _emscripten_get_now,\r\n  \"emscripten_get_num_gamepads\": _emscripten_get_num_gamepads,\r\n  \"emscripten_get_screen_size\": _emscripten_get_screen_size,\r\n  \"emscripten_glActiveTexture\": _emscripten_glActiveTexture,\r\n  \"emscripten_glAttachShader\": _emscripten_glAttachShader,\r\n  \"emscripten_glBeginQuery\": _emscripten_glBeginQuery,\r\n  \"emscripten_glBeginQueryEXT\": _emscripten_glBeginQueryEXT,\r\n  \"emscripten_glBeginTransformFeedback\": _emscripten_glBeginTransformFeedback,\r\n  \"emscripten_glBindAttribLocation\": _emscripten_glBindAttribLocation,\r\n  \"emscripten_glBindBuffer\": _emscripten_glBindBuffer,\r\n  \"emscripten_glBindBufferBase\": _emscripten_glBindBufferBase,\r\n  \"emscripten_glBindBufferRange\": _emscripten_glBindBufferRange,\r\n  \"emscripten_glBindFramebuffer\": _emscripten_glBindFramebuffer,\r\n  \"emscripten_glBindRenderbuffer\": _emscripten_glBindRenderbuffer,\r\n  \"emscripten_glBindSampler\": _emscripten_glBindSampler,\r\n  \"emscripten_glBindTexture\": _emscripten_glBindTexture,\r\n  \"emscripten_glBindTransformFeedback\": _emscripten_glBindTransformFeedback,\r\n  \"emscripten_glBindVertexArray\": _emscripten_glBindVertexArray,\r\n  \"emscripten_glBindVertexArrayOES\": _emscripten_glBindVertexArrayOES,\r\n  \"emscripten_glBlendColor\": _emscripten_glBlendColor,\r\n  \"emscripten_glBlendEquation\": _emscripten_glBlendEquation,\r\n  \"emscripten_glBlendEquationSeparate\": _emscripten_glBlendEquationSeparate,\r\n  \"emscripten_glBlendFunc\": _emscripten_glBlendFunc,\r\n  \"emscripten_glBlendFuncSeparate\": _emscripten_glBlendFuncSeparate,\r\n  \"emscripten_glBlitFramebuffer\": _emscripten_glBlitFramebuffer,\r\n  \"emscripten_glBufferData\": _emscripten_glBufferData,\r\n  \"emscripten_glBufferSubData\": _emscripten_glBufferSubData,\r\n  \"emscripten_glCheckFramebufferStatus\": _emscripten_glCheckFramebufferStatus,\r\n  \"emscripten_glClear\": _emscripten_glClear,\r\n  \"emscripten_glClearBufferfi\": _emscripten_glClearBufferfi,\r\n  \"emscripten_glClearBufferfv\": _emscripten_glClearBufferfv,\r\n  \"emscripten_glClearBufferiv\": _emscripten_glClearBufferiv,\r\n  \"emscripten_glClearBufferuiv\": _emscripten_glClearBufferuiv,\r\n  \"emscripten_glClearColor\": _emscripten_glClearColor,\r\n  \"emscripten_glClearDepthf\": _emscripten_glClearDepthf,\r\n  \"emscripten_glClearStencil\": _emscripten_glClearStencil,\r\n  \"emscripten_glClientWaitSync\": _emscripten_glClientWaitSync,\r\n  \"emscripten_glColorMask\": _emscripten_glColorMask,\r\n  \"emscripten_glCompileShader\": _emscripten_glCompileShader,\r\n  \"emscripten_glCompressedTexImage2D\": _emscripten_glCompressedTexImage2D,\r\n  \"emscripten_glCompressedTexImage3D\": _emscripten_glCompressedTexImage3D,\r\n  \"emscripten_glCompressedTexSubImage2D\": _emscripten_glCompressedTexSubImage2D,\r\n  \"emscripten_glCompressedTexSubImage3D\": _emscripten_glCompressedTexSubImage3D,\r\n  \"emscripten_glCopyBufferSubData\": _emscripten_glCopyBufferSubData,\r\n  \"emscripten_glCopyTexImage2D\": _emscripten_glCopyTexImage2D,\r\n  \"emscripten_glCopyTexSubImage2D\": _emscripten_glCopyTexSubImage2D,\r\n  \"emscripten_glCopyTexSubImage3D\": _emscripten_glCopyTexSubImage3D,\r\n  \"emscripten_glCreateProgram\": _emscripten_glCreateProgram,\r\n  \"emscripten_glCreateShader\": _emscripten_glCreateShader,\r\n  \"emscripten_glCullFace\": _emscripten_glCullFace,\r\n  \"emscripten_glDeleteBuffers\": _emscripten_glDeleteBuffers,\r\n  \"emscripten_glDeleteFramebuffers\": _emscripten_glDeleteFramebuffers,\r\n  \"emscripten_glDeleteProgram\": _emscripten_glDeleteProgram,\r\n  \"emscripten_glDeleteQueries\": _emscripten_glDeleteQueries,\r\n  \"emscripten_glDeleteQueriesEXT\": _emscripten_glDeleteQueriesEXT,\r\n  \"emscripten_glDeleteRenderbuffers\": _emscripten_glDeleteRenderbuffers,\r\n  \"emscripten_glDeleteSamplers\": _emscripten_glDeleteSamplers,\r\n  \"emscripten_glDeleteShader\": _emscripten_glDeleteShader,\r\n  \"emscripten_glDeleteSync\": _emscripten_glDeleteSync,\r\n  \"emscripten_glDeleteTextures\": _emscripten_glDeleteTextures,\r\n  \"emscripten_glDeleteTransformFeedbacks\": _emscripten_glDeleteTransformFeedbacks,\r\n  \"emscripten_glDeleteVertexArrays\": _emscripten_glDeleteVertexArrays,\r\n  \"emscripten_glDeleteVertexArraysOES\": _emscripten_glDeleteVertexArraysOES,\r\n  \"emscripten_glDepthFunc\": _emscripten_glDepthFunc,\r\n  \"emscripten_glDepthMask\": _emscripten_glDepthMask,\r\n  \"emscripten_glDepthRangef\": _emscripten_glDepthRangef,\r\n  \"emscripten_glDetachShader\": _emscripten_glDetachShader,\r\n  \"emscripten_glDisable\": _emscripten_glDisable,\r\n  \"emscripten_glDisableVertexAttribArray\": _emscripten_glDisableVertexAttribArray,\r\n  \"emscripten_glDrawArrays\": _emscripten_glDrawArrays,\r\n  \"emscripten_glDrawArraysInstanced\": _emscripten_glDrawArraysInstanced,\r\n  \"emscripten_glDrawArraysInstancedANGLE\": _emscripten_glDrawArraysInstancedANGLE,\r\n  \"emscripten_glDrawArraysInstancedARB\": _emscripten_glDrawArraysInstancedARB,\r\n  \"emscripten_glDrawArraysInstancedEXT\": _emscripten_glDrawArraysInstancedEXT,\r\n  \"emscripten_glDrawArraysInstancedNV\": _emscripten_glDrawArraysInstancedNV,\r\n  \"emscripten_glDrawBuffers\": _emscripten_glDrawBuffers,\r\n  \"emscripten_glDrawBuffersEXT\": _emscripten_glDrawBuffersEXT,\r\n  \"emscripten_glDrawBuffersWEBGL\": _emscripten_glDrawBuffersWEBGL,\r\n  \"emscripten_glDrawElements\": _emscripten_glDrawElements,\r\n  \"emscripten_glDrawElementsInstanced\": _emscripten_glDrawElementsInstanced,\r\n  \"emscripten_glDrawElementsInstancedANGLE\": _emscripten_glDrawElementsInstancedANGLE,\r\n  \"emscripten_glDrawElementsInstancedARB\": _emscripten_glDrawElementsInstancedARB,\r\n  \"emscripten_glDrawElementsInstancedEXT\": _emscripten_glDrawElementsInstancedEXT,\r\n  \"emscripten_glDrawElementsInstancedNV\": _emscripten_glDrawElementsInstancedNV,\r\n  \"emscripten_glDrawRangeElements\": _emscripten_glDrawRangeElements,\r\n  \"emscripten_glEnable\": _emscripten_glEnable,\r\n  \"emscripten_glEnableVertexAttribArray\": _emscripten_glEnableVertexAttribArray,\r\n  \"emscripten_glEndQuery\": _emscripten_glEndQuery,\r\n  \"emscripten_glEndQueryEXT\": _emscripten_glEndQueryEXT,\r\n  \"emscripten_glEndTransformFeedback\": _emscripten_glEndTransformFeedback,\r\n  \"emscripten_glFenceSync\": _emscripten_glFenceSync,\r\n  \"emscripten_glFinish\": _emscripten_glFinish,\r\n  \"emscripten_glFlush\": _emscripten_glFlush,\r\n  \"emscripten_glFramebufferRenderbuffer\": _emscripten_glFramebufferRenderbuffer,\r\n  \"emscripten_glFramebufferTexture2D\": _emscripten_glFramebufferTexture2D,\r\n  \"emscripten_glFramebufferTextureLayer\": _emscripten_glFramebufferTextureLayer,\r\n  \"emscripten_glFrontFace\": _emscripten_glFrontFace,\r\n  \"emscripten_glGenBuffers\": _emscripten_glGenBuffers,\r\n  \"emscripten_glGenFramebuffers\": _emscripten_glGenFramebuffers,\r\n  \"emscripten_glGenQueries\": _emscripten_glGenQueries,\r\n  \"emscripten_glGenQueriesEXT\": _emscripten_glGenQueriesEXT,\r\n  \"emscripten_glGenRenderbuffers\": _emscripten_glGenRenderbuffers,\r\n  \"emscripten_glGenSamplers\": _emscripten_glGenSamplers,\r\n  \"emscripten_glGenTextures\": _emscripten_glGenTextures,\r\n  \"emscripten_glGenTransformFeedbacks\": _emscripten_glGenTransformFeedbacks,\r\n  \"emscripten_glGenVertexArrays\": _emscripten_glGenVertexArrays,\r\n  \"emscripten_glGenVertexArraysOES\": _emscripten_glGenVertexArraysOES,\r\n  \"emscripten_glGenerateMipmap\": _emscripten_glGenerateMipmap,\r\n  \"emscripten_glGetActiveAttrib\": _emscripten_glGetActiveAttrib,\r\n  \"emscripten_glGetActiveUniform\": _emscripten_glGetActiveUniform,\r\n  \"emscripten_glGetActiveUniformBlockName\": _emscripten_glGetActiveUniformBlockName,\r\n  \"emscripten_glGetActiveUniformBlockiv\": _emscripten_glGetActiveUniformBlockiv,\r\n  \"emscripten_glGetActiveUniformsiv\": _emscripten_glGetActiveUniformsiv,\r\n  \"emscripten_glGetAttachedShaders\": _emscripten_glGetAttachedShaders,\r\n  \"emscripten_glGetAttribLocation\": _emscripten_glGetAttribLocation,\r\n  \"emscripten_glGetBooleanv\": _emscripten_glGetBooleanv,\r\n  \"emscripten_glGetBufferParameteri64v\": _emscripten_glGetBufferParameteri64v,\r\n  \"emscripten_glGetBufferParameteriv\": _emscripten_glGetBufferParameteriv,\r\n  \"emscripten_glGetError\": _emscripten_glGetError,\r\n  \"emscripten_glGetFloatv\": _emscripten_glGetFloatv,\r\n  \"emscripten_glGetFragDataLocation\": _emscripten_glGetFragDataLocation,\r\n  \"emscripten_glGetFramebufferAttachmentParameteriv\": _emscripten_glGetFramebufferAttachmentParameteriv,\r\n  \"emscripten_glGetInteger64i_v\": _emscripten_glGetInteger64i_v,\r\n  \"emscripten_glGetInteger64v\": _emscripten_glGetInteger64v,\r\n  \"emscripten_glGetIntegeri_v\": _emscripten_glGetIntegeri_v,\r\n  \"emscripten_glGetIntegerv\": _emscripten_glGetIntegerv,\r\n  \"emscripten_glGetInternalformativ\": _emscripten_glGetInternalformativ,\r\n  \"emscripten_glGetProgramBinary\": _emscripten_glGetProgramBinary,\r\n  \"emscripten_glGetProgramInfoLog\": _emscripten_glGetProgramInfoLog,\r\n  \"emscripten_glGetProgramiv\": _emscripten_glGetProgramiv,\r\n  \"emscripten_glGetQueryObjecti64vEXT\": _emscripten_glGetQueryObjecti64vEXT,\r\n  \"emscripten_glGetQueryObjectivEXT\": _emscripten_glGetQueryObjectivEXT,\r\n  \"emscripten_glGetQueryObjectui64vEXT\": _emscripten_glGetQueryObjectui64vEXT,\r\n  \"emscripten_glGetQueryObjectuiv\": _emscripten_glGetQueryObjectuiv,\r\n  \"emscripten_glGetQueryObjectuivEXT\": _emscripten_glGetQueryObjectuivEXT,\r\n  \"emscripten_glGetQueryiv\": _emscripten_glGetQueryiv,\r\n  \"emscripten_glGetQueryivEXT\": _emscripten_glGetQueryivEXT,\r\n  \"emscripten_glGetRenderbufferParameteriv\": _emscripten_glGetRenderbufferParameteriv,\r\n  \"emscripten_glGetSamplerParameterfv\": _emscripten_glGetSamplerParameterfv,\r\n  \"emscripten_glGetSamplerParameteriv\": _emscripten_glGetSamplerParameteriv,\r\n  \"emscripten_glGetShaderInfoLog\": _emscripten_glGetShaderInfoLog,\r\n  \"emscripten_glGetShaderPrecisionFormat\": _emscripten_glGetShaderPrecisionFormat,\r\n  \"emscripten_glGetShaderSource\": _emscripten_glGetShaderSource,\r\n  \"emscripten_glGetShaderiv\": _emscripten_glGetShaderiv,\r\n  \"emscripten_glGetString\": _emscripten_glGetString,\r\n  \"emscripten_glGetStringi\": _emscripten_glGetStringi,\r\n  \"emscripten_glGetSynciv\": _emscripten_glGetSynciv,\r\n  \"emscripten_glGetTexParameterfv\": _emscripten_glGetTexParameterfv,\r\n  \"emscripten_glGetTexParameteriv\": _emscripten_glGetTexParameteriv,\r\n  \"emscripten_glGetTransformFeedbackVarying\": _emscripten_glGetTransformFeedbackVarying,\r\n  \"emscripten_glGetUniformBlockIndex\": _emscripten_glGetUniformBlockIndex,\r\n  \"emscripten_glGetUniformIndices\": _emscripten_glGetUniformIndices,\r\n  \"emscripten_glGetUniformLocation\": _emscripten_glGetUniformLocation,\r\n  \"emscripten_glGetUniformfv\": _emscripten_glGetUniformfv,\r\n  \"emscripten_glGetUniformiv\": _emscripten_glGetUniformiv,\r\n  \"emscripten_glGetUniformuiv\": _emscripten_glGetUniformuiv,\r\n  \"emscripten_glGetVertexAttribIiv\": _emscripten_glGetVertexAttribIiv,\r\n  \"emscripten_glGetVertexAttribIuiv\": _emscripten_glGetVertexAttribIuiv,\r\n  \"emscripten_glGetVertexAttribPointerv\": _emscripten_glGetVertexAttribPointerv,\r\n  \"emscripten_glGetVertexAttribfv\": _emscripten_glGetVertexAttribfv,\r\n  \"emscripten_glGetVertexAttribiv\": _emscripten_glGetVertexAttribiv,\r\n  \"emscripten_glHint\": _emscripten_glHint,\r\n  \"emscripten_glInvalidateFramebuffer\": _emscripten_glInvalidateFramebuffer,\r\n  \"emscripten_glInvalidateSubFramebuffer\": _emscripten_glInvalidateSubFramebuffer,\r\n  \"emscripten_glIsBuffer\": _emscripten_glIsBuffer,\r\n  \"emscripten_glIsEnabled\": _emscripten_glIsEnabled,\r\n  \"emscripten_glIsFramebuffer\": _emscripten_glIsFramebuffer,\r\n  \"emscripten_glIsProgram\": _emscripten_glIsProgram,\r\n  \"emscripten_glIsQuery\": _emscripten_glIsQuery,\r\n  \"emscripten_glIsQueryEXT\": _emscripten_glIsQueryEXT,\r\n  \"emscripten_glIsRenderbuffer\": _emscripten_glIsRenderbuffer,\r\n  \"emscripten_glIsSampler\": _emscripten_glIsSampler,\r\n  \"emscripten_glIsShader\": _emscripten_glIsShader,\r\n  \"emscripten_glIsSync\": _emscripten_glIsSync,\r\n  \"emscripten_glIsTexture\": _emscripten_glIsTexture,\r\n  \"emscripten_glIsTransformFeedback\": _emscripten_glIsTransformFeedback,\r\n  \"emscripten_glIsVertexArray\": _emscripten_glIsVertexArray,\r\n  \"emscripten_glIsVertexArrayOES\": _emscripten_glIsVertexArrayOES,\r\n  \"emscripten_glLineWidth\": _emscripten_glLineWidth,\r\n  \"emscripten_glLinkProgram\": _emscripten_glLinkProgram,\r\n  \"emscripten_glPauseTransformFeedback\": _emscripten_glPauseTransformFeedback,\r\n  \"emscripten_glPixelStorei\": _emscripten_glPixelStorei,\r\n  \"emscripten_glPolygonOffset\": _emscripten_glPolygonOffset,\r\n  \"emscripten_glProgramBinary\": _emscripten_glProgramBinary,\r\n  \"emscripten_glProgramParameteri\": _emscripten_glProgramParameteri,\r\n  \"emscripten_glQueryCounterEXT\": _emscripten_glQueryCounterEXT,\r\n  \"emscripten_glReadBuffer\": _emscripten_glReadBuffer,\r\n  \"emscripten_glReadPixels\": _emscripten_glReadPixels,\r\n  \"emscripten_glReleaseShaderCompiler\": _emscripten_glReleaseShaderCompiler,\r\n  \"emscripten_glRenderbufferStorage\": _emscripten_glRenderbufferStorage,\r\n  \"emscripten_glRenderbufferStorageMultisample\": _emscripten_glRenderbufferStorageMultisample,\r\n  \"emscripten_glResumeTransformFeedback\": _emscripten_glResumeTransformFeedback,\r\n  \"emscripten_glSampleCoverage\": _emscripten_glSampleCoverage,\r\n  \"emscripten_glSamplerParameterf\": _emscripten_glSamplerParameterf,\r\n  \"emscripten_glSamplerParameterfv\": _emscripten_glSamplerParameterfv,\r\n  \"emscripten_glSamplerParameteri\": _emscripten_glSamplerParameteri,\r\n  \"emscripten_glSamplerParameteriv\": _emscripten_glSamplerParameteriv,\r\n  \"emscripten_glScissor\": _emscripten_glScissor,\r\n  \"emscripten_glShaderBinary\": _emscripten_glShaderBinary,\r\n  \"emscripten_glShaderSource\": _emscripten_glShaderSource,\r\n  \"emscripten_glStencilFunc\": _emscripten_glStencilFunc,\r\n  \"emscripten_glStencilFuncSeparate\": _emscripten_glStencilFuncSeparate,\r\n  \"emscripten_glStencilMask\": _emscripten_glStencilMask,\r\n  \"emscripten_glStencilMaskSeparate\": _emscripten_glStencilMaskSeparate,\r\n  \"emscripten_glStencilOp\": _emscripten_glStencilOp,\r\n  \"emscripten_glStencilOpSeparate\": _emscripten_glStencilOpSeparate,\r\n  \"emscripten_glTexImage2D\": _emscripten_glTexImage2D,\r\n  \"emscripten_glTexImage3D\": _emscripten_glTexImage3D,\r\n  \"emscripten_glTexParameterf\": _emscripten_glTexParameterf,\r\n  \"emscripten_glTexParameterfv\": _emscripten_glTexParameterfv,\r\n  \"emscripten_glTexParameteri\": _emscripten_glTexParameteri,\r\n  \"emscripten_glTexParameteriv\": _emscripten_glTexParameteriv,\r\n  \"emscripten_glTexStorage2D\": _emscripten_glTexStorage2D,\r\n  \"emscripten_glTexStorage3D\": _emscripten_glTexStorage3D,\r\n  \"emscripten_glTexSubImage2D\": _emscripten_glTexSubImage2D,\r\n  \"emscripten_glTexSubImage3D\": _emscripten_glTexSubImage3D,\r\n  \"emscripten_glTransformFeedbackVaryings\": _emscripten_glTransformFeedbackVaryings,\r\n  \"emscripten_glUniform1f\": _emscripten_glUniform1f,\r\n  \"emscripten_glUniform1fv\": _emscripten_glUniform1fv,\r\n  \"emscripten_glUniform1i\": _emscripten_glUniform1i,\r\n  \"emscripten_glUniform1iv\": _emscripten_glUniform1iv,\r\n  \"emscripten_glUniform1ui\": _emscripten_glUniform1ui,\r\n  \"emscripten_glUniform1uiv\": _emscripten_glUniform1uiv,\r\n  \"emscripten_glUniform2f\": _emscripten_glUniform2f,\r\n  \"emscripten_glUniform2fv\": _emscripten_glUniform2fv,\r\n  \"emscripten_glUniform2i\": _emscripten_glUniform2i,\r\n  \"emscripten_glUniform2iv\": _emscripten_glUniform2iv,\r\n  \"emscripten_glUniform2ui\": _emscripten_glUniform2ui,\r\n  \"emscripten_glUniform2uiv\": _emscripten_glUniform2uiv,\r\n  \"emscripten_glUniform3f\": _emscripten_glUniform3f,\r\n  \"emscripten_glUniform3fv\": _emscripten_glUniform3fv,\r\n  \"emscripten_glUniform3i\": _emscripten_glUniform3i,\r\n  \"emscripten_glUniform3iv\": _emscripten_glUniform3iv,\r\n  \"emscripten_glUniform3ui\": _emscripten_glUniform3ui,\r\n  \"emscripten_glUniform3uiv\": _emscripten_glUniform3uiv,\r\n  \"emscripten_glUniform4f\": _emscripten_glUniform4f,\r\n  \"emscripten_glUniform4fv\": _emscripten_glUniform4fv,\r\n  \"emscripten_glUniform4i\": _emscripten_glUniform4i,\r\n  \"emscripten_glUniform4iv\": _emscripten_glUniform4iv,\r\n  \"emscripten_glUniform4ui\": _emscripten_glUniform4ui,\r\n  \"emscripten_glUniform4uiv\": _emscripten_glUniform4uiv,\r\n  \"emscripten_glUniformBlockBinding\": _emscripten_glUniformBlockBinding,\r\n  \"emscripten_glUniformMatrix2fv\": _emscripten_glUniformMatrix2fv,\r\n  \"emscripten_glUniformMatrix2x3fv\": _emscripten_glUniformMatrix2x3fv,\r\n  \"emscripten_glUniformMatrix2x4fv\": _emscripten_glUniformMatrix2x4fv,\r\n  \"emscripten_glUniformMatrix3fv\": _emscripten_glUniformMatrix3fv,\r\n  \"emscripten_glUniformMatrix3x2fv\": _emscripten_glUniformMatrix3x2fv,\r\n  \"emscripten_glUniformMatrix3x4fv\": _emscripten_glUniformMatrix3x4fv,\r\n  \"emscripten_glUniformMatrix4fv\": _emscripten_glUniformMatrix4fv,\r\n  \"emscripten_glUniformMatrix4x2fv\": _emscripten_glUniformMatrix4x2fv,\r\n  \"emscripten_glUniformMatrix4x3fv\": _emscripten_glUniformMatrix4x3fv,\r\n  \"emscripten_glUseProgram\": _emscripten_glUseProgram,\r\n  \"emscripten_glValidateProgram\": _emscripten_glValidateProgram,\r\n  \"emscripten_glVertexAttrib1f\": _emscripten_glVertexAttrib1f,\r\n  \"emscripten_glVertexAttrib1fv\": _emscripten_glVertexAttrib1fv,\r\n  \"emscripten_glVertexAttrib2f\": _emscripten_glVertexAttrib2f,\r\n  \"emscripten_glVertexAttrib2fv\": _emscripten_glVertexAttrib2fv,\r\n  \"emscripten_glVertexAttrib3f\": _emscripten_glVertexAttrib3f,\r\n  \"emscripten_glVertexAttrib3fv\": _emscripten_glVertexAttrib3fv,\r\n  \"emscripten_glVertexAttrib4f\": _emscripten_glVertexAttrib4f,\r\n  \"emscripten_glVertexAttrib4fv\": _emscripten_glVertexAttrib4fv,\r\n  \"emscripten_glVertexAttribDivisor\": _emscripten_glVertexAttribDivisor,\r\n  \"emscripten_glVertexAttribDivisorANGLE\": _emscripten_glVertexAttribDivisorANGLE,\r\n  \"emscripten_glVertexAttribDivisorARB\": _emscripten_glVertexAttribDivisorARB,\r\n  \"emscripten_glVertexAttribDivisorEXT\": _emscripten_glVertexAttribDivisorEXT,\r\n  \"emscripten_glVertexAttribDivisorNV\": _emscripten_glVertexAttribDivisorNV,\r\n  \"emscripten_glVertexAttribI4i\": _emscripten_glVertexAttribI4i,\r\n  \"emscripten_glVertexAttribI4iv\": _emscripten_glVertexAttribI4iv,\r\n  \"emscripten_glVertexAttribI4ui\": _emscripten_glVertexAttribI4ui,\r\n  \"emscripten_glVertexAttribI4uiv\": _emscripten_glVertexAttribI4uiv,\r\n  \"emscripten_glVertexAttribIPointer\": _emscripten_glVertexAttribIPointer,\r\n  \"emscripten_glVertexAttribPointer\": _emscripten_glVertexAttribPointer,\r\n  \"emscripten_glViewport\": _emscripten_glViewport,\r\n  \"emscripten_glWaitSync\": _emscripten_glWaitSync,\r\n  \"emscripten_has_asyncify\": _emscripten_has_asyncify,\r\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\r\n  \"emscripten_request_fullscreen_strategy\": _emscripten_request_fullscreen_strategy,\r\n  \"emscripten_request_pointerlock\": _emscripten_request_pointerlock,\r\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\r\n  \"emscripten_sample_gamepad_data\": _emscripten_sample_gamepad_data,\r\n  \"emscripten_set_beforeunload_callback_on_thread\": _emscripten_set_beforeunload_callback_on_thread,\r\n  \"emscripten_set_blur_callback_on_thread\": _emscripten_set_blur_callback_on_thread,\r\n  \"emscripten_set_canvas_element_size\": _emscripten_set_canvas_element_size,\r\n  \"emscripten_set_element_css_size\": _emscripten_set_element_css_size,\r\n  \"emscripten_set_focus_callback_on_thread\": _emscripten_set_focus_callback_on_thread,\r\n  \"emscripten_set_fullscreenchange_callback_on_thread\": _emscripten_set_fullscreenchange_callback_on_thread,\r\n  \"emscripten_set_gamepadconnected_callback_on_thread\": _emscripten_set_gamepadconnected_callback_on_thread,\r\n  \"emscripten_set_gamepaddisconnected_callback_on_thread\": _emscripten_set_gamepaddisconnected_callback_on_thread,\r\n  \"emscripten_set_keydown_callback_on_thread\": _emscripten_set_keydown_callback_on_thread,\r\n  \"emscripten_set_keypress_callback_on_thread\": _emscripten_set_keypress_callback_on_thread,\r\n  \"emscripten_set_keyup_callback_on_thread\": _emscripten_set_keyup_callback_on_thread,\r\n  \"emscripten_set_main_loop\": _emscripten_set_main_loop,\r\n  \"emscripten_set_mousedown_callback_on_thread\": _emscripten_set_mousedown_callback_on_thread,\r\n  \"emscripten_set_mouseenter_callback_on_thread\": _emscripten_set_mouseenter_callback_on_thread,\r\n  \"emscripten_set_mouseleave_callback_on_thread\": _emscripten_set_mouseleave_callback_on_thread,\r\n  \"emscripten_set_mousemove_callback_on_thread\": _emscripten_set_mousemove_callback_on_thread,\r\n  \"emscripten_set_mouseup_callback_on_thread\": _emscripten_set_mouseup_callback_on_thread,\r\n  \"emscripten_set_pointerlockchange_callback_on_thread\": _emscripten_set_pointerlockchange_callback_on_thread,\r\n  \"emscripten_set_resize_callback_on_thread\": _emscripten_set_resize_callback_on_thread,\r\n  \"emscripten_set_touchcancel_callback_on_thread\": _emscripten_set_touchcancel_callback_on_thread,\r\n  \"emscripten_set_touchend_callback_on_thread\": _emscripten_set_touchend_callback_on_thread,\r\n  \"emscripten_set_touchmove_callback_on_thread\": _emscripten_set_touchmove_callback_on_thread,\r\n  \"emscripten_set_touchstart_callback_on_thread\": _emscripten_set_touchstart_callback_on_thread,\r\n  \"emscripten_set_visibilitychange_callback_on_thread\": _emscripten_set_visibilitychange_callback_on_thread,\r\n  \"emscripten_set_wheel_callback_on_thread\": _emscripten_set_wheel_callback_on_thread,\r\n  \"emscripten_set_window_title\": _emscripten_set_window_title,\r\n  \"emscripten_sleep\": _emscripten_sleep,\r\n  \"environ_get\": _environ_get,\r\n  \"environ_sizes_get\": _environ_sizes_get,\r\n  \"exit\": _exit,\r\n  \"fd_close\": _fd_close,\r\n  \"fd_fdstat_get\": _fd_fdstat_get,\r\n  \"fd_read\": _fd_read,\r\n  \"fd_seek\": _fd_seek,\r\n  \"fd_write\": _fd_write,\r\n  \"glGetFloatv\": _glGetFloatv,\r\n  \"strftime\": _strftime,\r\n  \"strftime_l\": _strftime_l\r\n};\r\nvar asm = createWasm();\r\n/** @type {function(...*):?} */\r\nvar ___wasm_call_ctors = function() {\r\n  return (___wasm_call_ctors = Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _free = function() {\r\n  return (_free = Module[\"asm\"][\"free\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _malloc = function() {\r\n  return (_malloc = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___errno_location = function() {\r\n  return (___errno_location = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebSetFullscreen = Module[\"_I_WebSetFullscreen\"] = function() {\r\n  return (_I_WebSetFullscreen = Module[\"_I_WebSetFullscreen\"] = Module[\"asm\"][\"I_WebSetFullscreen\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebOpenGameMenu = Module[\"_I_WebOpenGameMenu\"] = function() {\r\n  return (_I_WebOpenGameMenu = Module[\"_I_WebOpenGameMenu\"] = Module[\"asm\"][\"I_WebOpenGameMenu\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebSyncScreenSize = Module[\"_I_WebSyncScreenSize\"] = function() {\r\n  return (_I_WebSyncScreenSize = Module[\"_I_WebSyncScreenSize\"] = Module[\"asm\"][\"I_WebSyncScreenSize\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebMain = Module[\"_I_WebMain\"] = function() {\r\n  return (_I_WebMain = Module[\"_I_WebMain\"] = Module[\"asm\"][\"I_WebMain\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _main = Module[\"_main\"] = function() {\r\n  return (_main = Module[\"_main\"] = Module[\"asm\"][\"__main_argc_argv\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_set_limits = function() {\r\n  return (_emscripten_stack_set_limits = Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_get_base = function() {\r\n  return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_get_end = function() {\r\n  return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackSave = function() {\r\n  return (stackSave = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackRestore = function() {\r\n  return (stackRestore = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackAlloc = function() {\r\n  return (stackAlloc = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___cxa_increment_exception_refcount = function() {\r\n  return (___cxa_increment_exception_refcount = Module[\"asm\"][\"__cxa_increment_exception_refcount\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___cxa_is_pointer_type = function() {\r\n  return (___cxa_is_pointer_type = Module[\"asm\"][\"__cxa_is_pointer_type\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vi = Module[\"dynCall_vi\"] = function() {\r\n  return (dynCall_vi = Module[\"dynCall_vi\"] = Module[\"asm\"][\"dynCall_vi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() {\r\n  return (dynCall_ii = Module[\"dynCall_ii\"] = Module[\"asm\"][\"dynCall_ii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iii = Module[\"dynCall_iii\"] = function() {\r\n  return (dynCall_iii = Module[\"dynCall_iii\"] = Module[\"asm\"][\"dynCall_iii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vif = Module[\"dynCall_vif\"] = function() {\r\n  return (dynCall_vif = Module[\"dynCall_vif\"] = Module[\"asm\"][\"dynCall_vif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vffff = Module[\"dynCall_vffff\"] = function() {\r\n  return (dynCall_vffff = Module[\"dynCall_vffff\"] = Module[\"asm\"][\"dynCall_vffff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vii = Module[\"dynCall_vii\"] = function() {\r\n  return (dynCall_vii = Module[\"dynCall_vii\"] = Module[\"asm\"][\"dynCall_vii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() {\r\n  return (dynCall_iiii = Module[\"dynCall_iiii\"] = Module[\"asm\"][\"dynCall_iiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viii = Module[\"dynCall_viii\"] = function() {\r\n  return (dynCall_viii = Module[\"dynCall_viii\"] = Module[\"asm\"][\"dynCall_viii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vfff = Module[\"dynCall_vfff\"] = function() {\r\n  return (dynCall_vfff = Module[\"dynCall_vfff\"] = Module[\"asm\"][\"dynCall_vfff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_v = Module[\"dynCall_v\"] = function() {\r\n  return (dynCall_v = Module[\"dynCall_v\"] = Module[\"asm\"][\"dynCall_v\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function() {\r\n  return (dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = Module[\"asm\"][\"dynCall_iiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = function() {\r\n  return (dynCall_viiii = Module[\"dynCall_viiii\"] = Module[\"asm\"][\"dynCall_viiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = function() {\r\n  return (dynCall_iiiii = Module[\"dynCall_iiiii\"] = Module[\"asm\"][\"dynCall_iiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iijii = Module[\"dynCall_iijii\"] = function() {\r\n  return (dynCall_iijii = Module[\"dynCall_iijii\"] = Module[\"asm\"][\"dynCall_iijii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vf = Module[\"dynCall_vf\"] = function() {\r\n  return (dynCall_vf = Module[\"dynCall_vf\"] = Module[\"asm\"][\"dynCall_vf\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viif = Module[\"dynCall_viif\"] = function() {\r\n  return (dynCall_viif = Module[\"dynCall_viif\"] = Module[\"asm\"][\"dynCall_viif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = function() {\r\n  return (dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vff = Module[\"dynCall_vff\"] = function() {\r\n  return (dynCall_vff = Module[\"dynCall_vff\"] = Module[\"asm\"][\"dynCall_vff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viffff = Module[\"dynCall_viffff\"] = function() {\r\n  return (dynCall_viffff = Module[\"dynCall_viffff\"] = Module[\"asm\"][\"dynCall_viffff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiji = Module[\"dynCall_iiji\"] = function() {\r\n  return (dynCall_iiji = Module[\"dynCall_iiji\"] = Module[\"asm\"][\"dynCall_iiji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function() {\r\n  return (dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = Module[\"asm\"][\"dynCall_viiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = function() {\r\n  return (dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = Module[\"asm\"][\"dynCall_iidiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\r\n  return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"dynCall_jiji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\r\n  return (dynCall_ji = Module[\"dynCall_ji\"] = Module[\"asm\"][\"dynCall_ji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = function() {\r\n  return (dynCall_viiiii = Module[\"dynCall_viiiii\"] = Module[\"asm\"][\"dynCall_viiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_i = Module[\"dynCall_i\"] = function() {\r\n  return (dynCall_i = Module[\"dynCall_i\"] = Module[\"asm\"][\"dynCall_i\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vfi = Module[\"dynCall_vfi\"] = function() {\r\n  return (dynCall_vfi = Module[\"dynCall_vfi\"] = Module[\"asm\"][\"dynCall_vfi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viff = Module[\"dynCall_viff\"] = function() {\r\n  return (dynCall_viff = Module[\"dynCall_viff\"] = Module[\"asm\"][\"dynCall_viff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vifff = Module[\"dynCall_vifff\"] = function() {\r\n  return (dynCall_vifff = Module[\"dynCall_vifff\"] = Module[\"asm\"][\"dynCall_vifff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifi = Module[\"dynCall_viifi\"] = function() {\r\n  return (dynCall_viifi = Module[\"dynCall_viifi\"] = Module[\"asm\"][\"dynCall_viifi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifff = Module[\"dynCall_viifff\"] = function() {\r\n  return (dynCall_viifff = Module[\"dynCall_viifff\"] = Module[\"asm\"][\"dynCall_viifff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifffii = Module[\"dynCall_viifffii\"] = function() {\r\n  return (dynCall_viifffii = Module[\"dynCall_viifffii\"] = Module[\"asm\"][\"dynCall_viifffii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiifiiiii = Module[\"dynCall_viiiifiiiii\"] = function() {\r\n  return (dynCall_viiiifiiiii = Module[\"dynCall_viiiifiiiii\"] = Module[\"asm\"][\"dynCall_viiiifiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = function() {\r\n  return (dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_diii = Module[\"dynCall_diii\"] = function() {\r\n  return (dynCall_diii = Module[\"dynCall_diii\"] = Module[\"asm\"][\"dynCall_diii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiid = Module[\"dynCall_viiid\"] = function() {\r\n  return (dynCall_viiid = Module[\"dynCall_viiid\"] = Module[\"asm\"][\"dynCall_viiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiddd = Module[\"dynCall_viiiddd\"] = function() {\r\n  return (dynCall_viiiddd = Module[\"dynCall_viiiddd\"] = Module[\"asm\"][\"dynCall_viiiddd\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vid = Module[\"dynCall_vid\"] = function() {\r\n  return (dynCall_vid = Module[\"dynCall_vid\"] = Module[\"asm\"][\"dynCall_vid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiffi = Module[\"dynCall_viiffi\"] = function() {\r\n  return (dynCall_viiffi = Module[\"dynCall_viiffi\"] = Module[\"asm\"][\"dynCall_viiffi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vijji = Module[\"dynCall_vijji\"] = function() {\r\n  return (dynCall_vijji = Module[\"dynCall_vijji\"] = Module[\"asm\"][\"dynCall_vijji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\r\n  return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"dynCall_viijii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = function() {\r\n  return (dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\r\n  return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"dynCall_iiiiij\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = function() {\r\n  return (dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = Module[\"asm\"][\"dynCall_iiiiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\r\n  return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiijj\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = function() {\r\n  return (dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\r\n  return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiiijj\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_start_unwind = function() {\r\n  return (_asyncify_start_unwind = Module[\"asm\"][\"asyncify_start_unwind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_stop_unwind = function() {\r\n  return (_asyncify_stop_unwind = Module[\"asm\"][\"asyncify_stop_unwind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_start_rewind = function() {\r\n  return (_asyncify_start_rewind = Module[\"asm\"][\"asyncify_start_rewind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_stop_rewind = function() {\r\n  return (_asyncify_stop_rewind = Module[\"asm\"][\"asyncify_stop_rewind\"]).apply(null, arguments);\r\n};\r\n\r\n\r\n\r\n// include: postamble.js\r\n// === Auto-generated postamble setup entry stuff ===\r\n\r\nModule[\"addRunDependency\"] = addRunDependency;\r\nModule[\"removeRunDependency\"] = removeRunDependency;\r\nModule[\"FS_createPath\"] = FS.createPath;\r\nModule[\"FS_createDataFile\"] = FS.createDataFile;\r\nModule[\"FS_createLazyFile\"] = FS.createLazyFile;\r\nModule[\"FS_createDevice\"] = FS.createDevice;\r\nModule[\"FS_unlink\"] = FS.unlink;\r\nModule[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\r\nModule[\"LZ4\"] = LZ4;\r\n\r\n\r\nvar calledRun;\r\n\r\ndependenciesFulfilled = function runCaller() {\r\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\r\n  if (!calledRun) run();\r\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\r\n};\r\n\r\nfunction callMain(args = []) {\r\n\r\n  var entryFunction = _main;\r\n\r\n  args.unshift(thisProgram);\r\n\r\n  var argc = args.length;\r\n  var argv = stackAlloc((argc + 1) * 4);\r\n  var argv_ptr = argv >> 2;\r\n  args.forEach((arg) => {\r\n    HEAP32[argv_ptr++] = stringToUTF8OnStack(arg);\r\n  });\r\n  HEAP32[argv_ptr] = 0;\r\n\r\n  try {\r\n\r\n    var ret = entryFunction(argc, argv);\r\n\r\n    // if we're not running an evented main loop, it's time to exit\r\n    exitJS(ret, /* implicit = */ true);\r\n    return ret;\r\n  }\r\n  catch (e) {\r\n    return handleException(e);\r\n  }\r\n}\r\n\r\nfunction run(args = arguments_) {\r\n\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  preRun();\r\n\r\n  // a preRun added a dependency, run will be called later\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  function doRun() {\r\n    // run may have just been called through dependencies being fulfilled just in this very frame,\r\n    // or while the async setStatus time below was happening\r\n    if (calledRun) return;\r\n    calledRun = true;\r\n    Module['calledRun'] = true;\r\n\r\n    if (ABORT) return;\r\n\r\n    initRuntime();\r\n\r\n    preMain();\r\n\r\n    readyPromiseResolve(Module);\r\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\r\n\r\n    if (shouldRunNow) callMain(args);\r\n\r\n    postRun();\r\n  }\r\n\r\n  if (Module['setStatus']) {\r\n    Module['setStatus']('Running...');\r\n    setTimeout(function() {\r\n      setTimeout(function() {\r\n        Module['setStatus']('');\r\n      }, 1);\r\n      doRun();\r\n    }, 1);\r\n  } else\r\n  {\r\n    doRun();\r\n  }\r\n}\r\n\r\nif (Module['preInit']) {\r\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\r\n  while (Module['preInit'].length > 0) {\r\n    Module['preInit'].pop()();\r\n  }\r\n}\r\n\r\n// shouldRunNow refers to calling main(), not run().\r\nvar shouldRunNow = true;\r\n\r\nif (Module['noInitialRun']) shouldRunNow = false;\r\n\r\nrun();\r\n\r\n\r\n// end include: postamble.js\r\n\r\n\r\n  return createEdgeModule.ready\r\n}\r\n\r\n);\r\n})();\r\nexport default createEdgeModule;","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal__bCOJk\",\"modal_content\":\"modal_content__O8DzT\",\"animatetop\":\"animatetop__1b7Bz\",\"close\":\"close__jJbSs\",\"modal_header\":\"modal_header__7dLiC\",\"modal_body\":\"modal_body__8R0ze\",\"modal_footer\":\"modal_footer__P6GcC\"};","import { FunctionComponent, h } from 'preact';\r\nimport style from './style.css';\r\n\r\nconst LicenseModal: FunctionComponent<{ onClose: () => void }> = ({ onClose }) => (\r\n    <div id=\"myModal\" class={style.modal}>\r\n        <div class={style.modal_content}>\r\n            <div class={style.modal_header}>\r\n                <span class={style.close} onClick={() => onClose()}>&times;</span>\r\n                <h2>EDGE-Classic Licenses</h2>\r\n            </div>\r\n            <div class={style.modal_body}>\r\n                <div style={{ overflowY: \"scroll\", overflowX: \"hidden\", height: \"512px\" }}>\r\n                    <div style={{ fontFamily: \"monospace\", whiteSpace: \"pre\", fontSize: 11 }}>{license}</div>\r\n                </div>\r\n            </div>\r\n            <div class={style.modal_footer}>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n);\r\n\r\nconst license = `===========================================================================================\r\nBSD 2-Clause License\r\n===========================================================================================\r\n\r\nminiz library (gzip support) - Copyright (c) 2015 Wojciech Adam Koszek\r\n\r\n===========================================================================================\r\nBSD 3-Clause License\r\n===========================================================================================\r\n\r\nBlasphemer (various assets) - Copyright (c) 2021 Contributors to the Blasphemer project\r\n\r\nFMMIDI library - Copyright (c) 2003-2006 yuno\r\n\r\nFreedoom (various assets) - Copyright (c) 2001-2019 Contributors to the Freedoom project\r\n\r\nYMFM library - Copyright (c) 2021 Aaron Giles\r\n\r\nYMFMIDI library - Copyright (c) 2021-2022 Devin Acker\r\n\r\nMod4Play library - Copyright (c) 2022 Olav Sørensen\r\n\r\nminivorbis library - Copyright (c) 2020 Eduardo Bart\r\n                     Copyright (c) 2002-2020 Xiph.org Foundation\r\n\r\n===========================================================================================\r\nCC 1.0 Universal License\r\n===========================================================================================\r\n\r\nminimp3 library - lieff\r\n\r\n\"ProtoSquare!\" soundfont - Yingchun Soul\r\n\r\n===========================================================================================\r\nCC-BY-3.0 Unported License\r\n===========================================================================================\r\n\r\nGerman Shepherd Dog Sprites - Copyright (c) 2017 Nash Muhandes\r\n\r\n===========================================================================================\r\nCC-BY-NC-4.0 International License\r\n===========================================================================================\r\n\r\nREKKR (various assets) - Copyright (c) 2021 Mockingbird Softworks\r\n\r\n===========================================================================================\r\nCC-BY-SA-4.0 International License\r\n===========================================================================================\r\n\r\n\"Bonkers for Bits\" soundfont - Copyright (c) Marcel J. Therrien\r\n\r\n\"DMXOPL\" and \"DMXPOL3\" instrument banks - Copyright (c) ConSiGno\r\n\r\n===========================================================================================\r\nGPL2 License\r\n===========================================================================================\r\n\r\n\"Adplug\" instrument bank - Copyright (C) 1999, 2000, 2001 Simon Peter, et al.\r\n\r\nAJBSP - Copyright (c) 2000-2023 Andrew Apted, et al\r\n        Copyright (c) 1994-1998 Colin Reed\r\n        Copyright (c) 1997-1998 Lee Killough\r\n\r\nCOAL -  Copyright (c) 2009-2023 Andrew Apted, et al\r\n        Copyright (c) 1996-1997 Id Software, Inc.\r\n\r\nDDF library - Copyright (c) 1999-2023 The EDGE Team\r\n\r\nDEHACKED library (formerly DEH_EDGE) - Copyright (c) 2004-2023 The EDGE Team\r\n\r\nEC_VOXELIB library - Copyright (c) 2022-2023 The EDGE Team\r\n\r\nEDGE-Classic - Copyright (c) 1999-2023 The EDGE Team\r\n\r\nEPI library - Copyright (c) 2002-2023 The EDGE Team\r\n\r\nFluidlite library - Copyright (c) 2016 Robin Lobel\r\n\r\nGame Music Emu - Copyright (c) 2003-2009 Shay Green\r\n\r\nSuperFastHash - Copyright (c) 2004-2010 Paul Hsieh\r\n\r\nXMIDI library - Copyright (c) 2015-2022 Vitaly Novichkov\r\n                Copyright (c) 2015-2016 WildMIDI Developers\r\n                Copyright (c) 2014 Bret Curtis\r\n                Copyright (c) 2001 Ryan Nunn\r\n\r\n===========================================================================================\r\nMIT License\r\n===========================================================================================\r\n\r\n\"16-Bit Game Station\" soundfont - Copyright (c) 2022 Yingchun Soul\r\n\r\nBW_Midi_Sequencer library - Copyright (c) 2015-2022 Vitaly Novichkov\r\n\r\ngl4es library - Copyright (c) 2016-2018 Sebastien Chevalier\r\n\t\t\t\tCopyright (c) 2013-2016 Ryan Hileman\r\n\r\nglad library - Copyright (c) 2013-2022 David Herberth\r\n\r\nminiz library - Copyright (c) 2013-2014 RAD Game Tools and Valve Software\r\n\t\t\t\tCopyright (c) 2010-2014 Rich Geldreich and Tenacious Software LLC\r\n\r\nPNPOLY algorithm - Copyright (c) 1970-2003 Wm. Randolph Franklin\r\n\r\n\"WadSmoosh\" instrument bank - Copyright (c) 2016-2020 JP LeBreton\r\n\r\n\"C++ implementation of a fast Gaussian blur algorithm by Ivan Kutskir - Integer Version\"\r\n    - Copyright (C) 2017 Basile Fraboni\r\n    - Copyright (C) 2014 Ivan Kutskir\r\n\r\n\r\n===========================================================================================\r\nPublic Domain\r\n===========================================================================================\r\n\r\nFraction.hpp - Bisqwit\r\n\r\n\"GMGSx\" soundfont (renamed to default.sf2) - Kenneth Rundt\r\n\r\ndr_wav and dr_flac libraries - David Reid\r\n\r\nstb_image, stb_image_write, stb_rect_pack and stb_truetype libraries - Sean Barrett\r\n\r\n\"Unicode Processing with C++0x\" Conversion Classes - Andrew Choi\r\n\r\n===========================================================================================\r\nWidePix License\r\n===========================================================================================\r\n\r\nWidePix (various assets) - Copyright (c) 2020-2021 Nash Muhandes\r\n\r\n===========================================================================================\r\nWTF License\r\n===========================================================================================\r\n\r\ncrsid library - Copyright (c) 2022 Hermit (Mihaly Horvath)\r\n\r\n===========================================================================================\r\nzlib License\r\n===========================================================================================\r\n\r\nSDL2 library - Copyright (c) 1997-2020 Sam Lantinga\r\n`\r\n\r\nexport default LicenseModal;\r\n","import { Signal, signal } from '@preact/signals';\r\nimport { h } from 'preact';\r\nimport style from './style.css';\r\nimport { useEffect, useRef, useState } from 'preact/hooks';\r\nimport createEdgeModule from '../../edge-classic';\r\nimport LicenseModal from '../licenses';\r\n\r\nconst defaultIWad = \"freedoom2.wad\"\r\nconst deathmatchIWad = \"freedm.wad\";\r\n\r\ntype PlayerConfig = {\r\n\tindexDBName: string;\r\n}\r\n\r\ntype WadState = {\r\n\terror?: string;\r\n\twadName?: string;\r\n\tisIWAD?: boolean;\r\n}\r\n\r\nconst config: PlayerConfig = {\r\n\tindexDBName: '/edge-classic'\r\n}\r\n\r\nclass WadHandler {\r\n\r\n\tconstructor(config: PlayerConfig) {\r\n\t\tthis.config = config;\r\n\t}\r\n\r\n\tprivate error(message: string) {\r\n\t\talert(message);\r\n\t\tconsole.error(message);\r\n\t\tconsole.trace();\r\n\t}\r\n\r\n\tsetWad(wadName: string, isIWAD?: boolean) {\r\n\t\tthis.wadState.value = { wadName: wadName, isIWAD: isIWAD };\r\n\t}\r\n\r\n\tasync uploadWad(file: File) {\r\n\r\n\t\tlet database: IDBDatabase | undefined;\r\n\r\n\t\ttry {\r\n\t\t\tdatabase = await this.openDatabase();\r\n\t\t\tif (!database) {\r\n\t\t\t\tthis.error(\"Unable to open database\")\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis.error(e);\r\n\t\t\tdatabase?.close();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst upload = new Promise<{ wadName: string, iwad: boolean }>((resolve, reject) => {\r\n\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\r\n\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\tconst bits = e.target.result;\r\n\t\t\t\tconst contents = new Uint8Array(bits as ArrayBuffer);\r\n\r\n\t\t\t\tconst iwad = contents[0] === 73;\r\n\r\n\t\t\t\tconst trans = database.transaction(['FILE_DATA'], 'readwrite');\r\n\t\t\t\tconst path = `${this.config.indexDBName}/${file.name}`;\r\n\t\t\t\tconst addReq = trans.objectStore('FILE_DATA').put({ timestamp: new Date(), mode: 33206, contents: contents }, path);\r\n\r\n\t\t\t\taddReq.onerror = (e) => {\r\n\t\t\t\t\treject(\"Error storing wad data\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttrans.oncomplete = (e) => {\r\n\t\t\t\t\tresolve({ wadName: file.name, iwad: iwad });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treader.onerror = (e) => {\r\n\t\t\t\treject(\"Error reading wad\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst wad = await upload;\r\n\t\t\tdatabase?.close();\r\n\t\t\tdatabase = undefined;\r\n\t\t\tthis.setWad(wad.wadName, wad.iwad);\r\n\t\t} catch (e) {\r\n\t\t\tthis.error(e);\r\n\t\t} finally {\r\n\t\t\tdatabase?.close();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate async openDatabase() {\r\n\r\n\t\treturn new Promise<IDBDatabase | undefined>((resolve, reject) => {\r\n\r\n\t\t\t// build pre-render guard\r\n\t\t\tif (typeof window !== 'undefined') {\r\n\t\t\t\tconst dbrequest = window.indexedDB.open(this.config.indexDBName);\r\n\r\n\t\t\t\tdbrequest.onerror = (e) => {\r\n\t\t\t\t\treject(`unable to load database ${this.config.indexDBName}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdbrequest.onupgradeneeded = (e) => {\r\n\r\n\t\t\t\t\tconsole.log(\"upgrade needed\");\r\n\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tif (!db.objectStoreNames.contains(\"FILE_DATA\")) {\r\n\t\t\t\t\t\tconsole.log(\"Creating FILE_DATA object store\");\r\n\t\t\t\t\t\tconst store = db.createObjectStore(\"FILE_DATA\", {});\r\n\t\t\t\t\t\tstore.createIndex(\"timestamp\", \"timestamp\", { unique: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tdbrequest.onsuccess = (e) => {\r\n\t\t\t\t\tconsole.log(\"db open\");\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tresolve(db);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\twadState: Signal<WadState> = signal({});\r\n\r\n\tconfig: PlayerConfig;\r\n\r\n\tstatic get singleton(): WadHandler {\r\n\t\tif (!WadHandler.instance) {\r\n\t\t\tWadHandler.instance = new WadHandler(config);\r\n\t\t}\r\n\t\treturn WadHandler.instance;\r\n\t}\r\n\r\n\tprivate static instance?: WadHandler;\r\n}\r\n\r\ntype Project = {\r\n\tname: string;\r\n\timage: string;\r\n\tlink: string;\r\n}\r\n\r\nconst projects: Project[] = [\r\n\r\n\t{ name: \"Operation: Arctic Wolf Revisited\", image: \"./assets/images/articwolf.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/arctic-wolf-revisited\" },\r\n\t{ name: \"Astral Pathfinder\", image: \"./assets/images/astralpathfinder.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/astral-pathfinder1\" },\r\n\t{ name: \"Aliens: Stranded\", image: \"./assets/images/aliensstranded.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/aliens-stranded\" }\r\n]\r\n\r\nconst WadChooser = () => {\r\n\r\n\tconst [showLicense, setShowLicense] = useState(false);\r\n\r\n\tconst pelements = projects.map(p => {\r\n\t\treturn <a href={p.link} target=\"_blank\" style=\"display:flex;flex:1;flex-direction:column;height:100%;align-items:flex-end\">\r\n\t\t\t<div style={{ display: \"flex\", flex: 0 }}>\r\n\t\t\t\t<div style={{ paddingTop: 12, paddingBottom: 4, fontSize: 14, whiteSpace: \"pre\", fontWeight: \"normal\" }}>{p.name}</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", position: \"relative\", flexGrow: 1, width: \"100%\" }} >\r\n\t\t\t\t<img style=\"width:100%;height:100%;object-fit:cover;position:absolute\" src={p.image} />\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t});\r\n\r\n\treturn <div style={{ display: \"flex\", width: \"100%\", maxWidth: \"1440px\", padding: 24, paddingLeft: 42 }}>\r\n\t\t{showLicense && <LicenseModal onClose={() => setShowLicense(false)} />}\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1 }}>\r\n\t\t\t<div style={{ display: \"flex\", width: \"80%\" }}>\r\n\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"start\" }}>\r\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t\t<div style={{ fontSize: 18, fontWeight: \"normal\", paddingBottom: 24, width: 800 }}>Play EDGE-Classic in your browser by selecting an option below:\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWad(defaultIWad, true)\r\n\t\t\t\t\t\t}}>Play Freedoom</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWad(deathmatchIWad, true)\r\n\t\t\t\t\t\t}}>Play Bot Death Match</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tdocument.getElementById('getWadFile').click()\r\n\t\t\t\t\t\t}}>Choose Wad, EPK, or Zip</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 128 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tsetShowLicense(true);\r\n\t\t\t\t\t\t}}>Show Licenses</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<input id=\"getWadFile\" style=\"display:none\" type=\"file\" onChange={(e) => {\r\n\t\t\t\t\tconst files = (e.target as any).files as File[];\r\n\t\t\t\t\tif (files.length !== 1) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(\"Please select a single wad, epk, or zip file\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst file = files[0];\r\n\t\t\t\t\tconst check = file.name.toLowerCase();\r\n\t\t\t\t\tif (!check.endsWith(\".wad\") && !check.endsWith(\".zip\") && !check.endsWith(\".epk\")) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(\"Please select a wad, epk, or zip file\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst wadHandler = WadHandler.singleton;\r\n\t\t\t\t\twadHandler.uploadWad(file);\r\n\r\n\t\t\t\t}} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1, width: \"50%\", flexDirection: \"column\" }}>\r\n\t\t\t<div style={{ display: \"flex\", flex: \"0 0 24px\", position: \"relative\" }}>\r\n\t\t\t\t<div style={{ position: \"absolute\", fontSize: 18, fontWeight: 400, whiteSpace: \"pre\" }}>Suggested Projects</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", flexShrink: 0, flexGrow: 1, flexDirection: \"column\" }}>\r\n\t\t\t\t{pelements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n}\r\n\r\nconst EdgeClassic = () => {\r\n\r\n\tconst canvasRef = useRef<HTMLCanvasElement>(null);\r\n\tconst canvasContainerRef = useRef<HTMLDivElement>(null);\r\n\tconst [state, setState] = useState<{ loading: boolean }>({ loading: true });\r\n\tconst wadState = WadHandler.singleton.wadState.value;\r\n\r\n\r\n\tconst pointerLockChange = () => {\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst lock = canvas === document.pointerLockElement;\r\n\r\n\t\t// disabled for embedded classic site\r\n\t\t//Module._I_WebSetFullscreen(lock ? 1 : 0);\r\n\r\n\t\t/*\r\n\t\t// It feels good to open the menu when releasing pointer lock\r\n\t\t// though, it makes the interaction tricky to close the menu\r\n\t\tif (!lock) {\r\n\t\t\tModule._I_WebOpenGameMenu(1);\r\n\t\t} \r\n\t\t*/\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst canvasContainer = canvasContainerRef?.current;\r\n\r\n\t\tconst wadName = wadState.wadName!;\r\n\r\n\t\tif (!canvasContainer) {\r\n\t\t\tthrow \"Unable to get canvas container\";\r\n\t\t}\r\n\r\n\t\tif (!canvas) {\r\n\t\t\tthrow \"Unable to get canvas\";\r\n\t\t}\r\n\r\n\t\tconst syncCanvasSize = () => {\r\n\t\t\tconst w = Math.floor(canvasContainer.offsetWidth);\r\n\t\t\tconst h = Math.floor(canvasContainer.offsetHeight);\r\n\t\t\tconsole.log(\"Setting canvas size\", w, h);\r\n\t\t\tcanvas.style.width = `${w}px`;\r\n\t\t\tcanvas.style.height = `${h}px`;\r\n\t\t\tcanvas.width = w;\r\n\t\t\tcanvas.height = h;\r\n\t\t}\r\n\r\n\t\t// initial update\t\t\r\n\t\tsyncCanvasSize();\r\n\r\n\t\tconst canvasSync = () => {\r\n\t\t\tsyncCanvasSize();\r\n\t\t\tModule._I_WebSyncScreenSize();\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"pointerlockchange\", pointerLockChange, false);\r\n\r\n\t\tlet doSyncTimeout;\r\n\t\twindow.addEventListener(\"resize\", (ev) => {\r\n\r\n\t\t\tclearTimeout(doSyncTimeout);\r\n\t\t\tdoSyncTimeout = setTimeout(canvasSync, 250);\r\n\r\n\t\t});\r\n\r\n\t\tcanvas.addEventListener(\"webglcontextlost\", function (e) { alert('FIXME: WebGL context lost, please reload the page'); e.preventDefault(); }, false);\r\n\r\n\r\n\t\tlet iwad = defaultIWad;\r\n\t\tif (wadState.wadName === deathmatchIWad) {\r\n\t\t\tiwad = deathmatchIWad;\r\n\t\t}\r\n\r\n\t\tif (wadState.wadName !== iwad && wadState.isIWAD) {\r\n\t\t\tiwad = `edge-classic/${wadName}`;\r\n\t\t}\r\n\r\n\t\tconst args = [\"-home\", \"edge-classic\", \"-windowed\", \"-width\", canvas.offsetWidth.toString(), \"-height\", canvas.offsetHeight.toString(), \"-iwad\", iwad];\r\n\r\n\t\tif (iwad === deathmatchIWad) {\r\n\t\t\targs.push(...[\"-deathmatch\", \"1\", \"-nomonsters\", \"-skill\", \"2\", \"-bots\", \"1\", \"-warp\", \"map03\"])\r\n\t\t}\r\n\r\n\t\tif (!wadState.isIWAD) {\r\n\t\t\targs.push(\"-file\")\r\n\t\t\targs.push(`edge-classic/${wadName}`);\r\n\t\t}\r\n\r\n\t\tcreateEdgeModule({\r\n\t\t\tedgePostInit: () => {\r\n\t\t\t\tconsole.log(\"Post-Init!\");\r\n\t\t\t\t// jump \r\n\t\t\t\tif (!args.find(a => a.startsWith(\"-warp\"))) {\r\n\t\t\t\t\tModule._I_WebOpenGameMenu(1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetState({ ...state, loading: false });\r\n\t\t\t},\r\n\t\t\tonFullscreen: () => {\r\n\t\t\t\t/*\r\n\t\t\t\tconsole.log(\"On fullscreen\");\r\n\t\t\t\tconst elements = document.querySelectorAll(\".playercontrols\");\r\n\t\t\t\telements?.forEach(e => {\r\n\t\t\t\t\t(e as any).style.display = \"flex\";\r\n\t\t\t\t});\r\n\t\t\t\t*/\r\n\t\t\t},\r\n\t\t\tpreEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\tpostEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\targuments: args,\r\n\t\t\tpreInit: () => {\r\n\t\t\t\tconsole.log(\"Pre-Init\");\r\n\t\t\t},\r\n\t\t\tpreRun: [],\r\n\t\t\tpostRun: [],\r\n\t\t\tprint: (function () {\r\n\t\t\t\treturn function (text) {\r\n\t\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\t\tconsole.log(text);\r\n\t\t\t\t};\r\n\t\t\t})(),\r\n\t\t\tprintErr: function (text) {\r\n\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\tconsole.error(text);\r\n\t\t\t},\r\n\t\t\tcanvas: canvas,\r\n\t\t\tsetStatus: function (text) { console.log(\"status\", text) },\r\n\t\t\tmonitorRunDependencies: function (left) { console.log(left) },\r\n\t\t}).then(module => {\r\n\t\t\tglobalThis.Module = module;\r\n\t\t\tmodule.canvas = canvas;\r\n\t\t});\r\n\r\n\r\n\t\treturn () => {\r\n\r\n\t\t};\r\n\r\n\t}, []);\r\n\r\n\r\n\treturn <div id=\"canvas-container\" ref={canvasContainerRef} style={{ display: \"flex\", width: \"100%\", height: \"100%\", position: \"relative\" }}>\r\n\t\t<canvas id=\"canvas\" ref={canvasRef} style={{ visibility: state.loading ? \"hidden\" : \"visible\" }}\r\n\t\t\tonClick={async (ev) => {\r\n\t\t\t\tconst lock = canvasRef.current === document.pointerLockElement;\r\n\t\t\t\tif (!lock) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait canvasRef.current?.requestPointerLock();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}} />\r\n\r\n\t\t{!!state.loading && <div style={{ position: \"absolute\", display: \"flex\", width: \"100%\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n\t\t\t<div class={style.loading}>\r\n\t\t\t\t<span style=\"--i:1\">L</span>\r\n\t\t\t\t<span style=\"--i:2\">O</span>\r\n\t\t\t\t<span style=\"--i:3\">A</span>\r\n\t\t\t\t<span style=\"--i:4\">D</span>\r\n\t\t\t\t<span style=\"--i:5\">I</span>\r\n\t\t\t\t<span style=\"--i:6\">N</span>\r\n\t\t\t\t<span style=\"--i:7\">G</span>\r\n\t\t\t\t<span style=\"--i:8\">.</span>\r\n\t\t\t\t<span style=\"--i:9\">.</span>\r\n\t\t\t\t<span style=\"--i:10\">.</span>\r\n\t\t\t</div>\r\n\t\t</div>}\r\n\r\n\t</div>\r\n}\r\n// floating player controls, not currently used\r\n// {!state.loading && <PlayerControls />} \r\n\r\nconst PlayerControls = () => {\r\n\tconst [fullscreen, setFullscreen] = useState(false);\r\n\treturn <div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\", padding: \"24px\", zIndex: 1, position: \"absolute\" }}>\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\" }} />\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", flexShrink: 1, paddingRight: \"48px\" }}>\r\n\t\t\t<button style={{ opacity: 1 }} className=\"playercontrols\" onClick={() => { Module._I_WebSetFullscreen(fullscreen ? 0 : 1, setFullscreen(!fullscreen)) }}>{fullscreen ? \"Minimize\" : \"Maximize\"}</button>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst Player = () => {\r\n\r\n\tconst wadHandler = WadHandler.singleton;\r\n\tconst wadState = wadHandler.wadState.value;\r\n\r\n\treturn (\r\n\t\t<div style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\r\n\t\t\t{!wadState.wadName && <WadChooser />}\r\n\t\t\t{!!wadState.wadName && <EdgeClassic />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Player;\r\n","import './style/index.css';\r\nimport App from './components/app';\r\n\r\nexport default App;\r\n","import { h } from 'preact';\r\n\r\nimport Player from './player';\r\n\r\nconst App = () => (\r\n\t<div id=\"app\">\r\n\t\t<main>\r\n\t\t\t<Player/>\r\n\t\t</main>\r\n\t</div>\r\n);\r\n\r\nexport default App;\r\n"],"sourceRoot":""}